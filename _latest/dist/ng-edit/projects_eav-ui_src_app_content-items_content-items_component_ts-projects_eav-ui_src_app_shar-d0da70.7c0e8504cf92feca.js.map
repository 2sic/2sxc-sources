{"version":3,"file":"projects_eav-ui_src_app_content-items_content-items_component_ts-projects_eav-ui_src_app_shar-d0da70.7c0e8504cf92feca.js","mappings":"uXAWO,MAAMA,EAAiB,cAGxBC,EAAmB,oBAOlB,IAAMC,EAAmB,MAA1B,MAAOA,EACXC,YAAoBC,EAA0BC,EAA0BC,GAApDC,KAAAH,OAA0BG,KAAAF,UAA0BE,KAAAD,YAA0B,CAE1FE,OAAOC,GACb,OAAOF,KAAKD,WAAWI,MAAMN,KAAKI,OAAOC,EAC3C,CAEAE,oBAAoBC,GAClB,OAAOL,KAAKH,KAAKS,IAAiBN,KAAKC,OAjBrB,kBAiB4C,CAC5DM,OAAQ,CAAEC,MAAOR,KAAKF,QAAQU,MAAMC,WAAYC,cAAeL,IAEnE,CAEAM,qBAAqBC,GACnB,OAAOZ,KAAKH,KAAKS,IAAmBN,KAAKC,OAtBzB,mBAsB8C,CAC5DM,OAAQ,CAAEC,MAAOR,KAAKF,QAAQU,MAAMC,WAAYG,UAEpD,CAGAC,YACE,OAAOb,KAAKH,KAAKS,IAAgEN,KAAKC,OAAOP,GAAmB,CAC9Ga,OAAQ,CAAEC,MAAOR,KAAKF,QAAQU,MAAMC,cACnCK,QACDC,KAAIC,IAEF,MAAMC,EAASD,EAAWE,IAE1B,OADoCC,OAAOC,KAAKH,GAAQF,IAAIM,KAAUnB,KAAMe,EAAOI,GAAMC,MAAOD,IAAM,GAI5G,CAEAE,cACE,OAAOvB,KAAKH,KAAKS,IAAgEN,KAAKC,OAAOP,GAAmB,CAC9Ga,OAAQ,CAAEC,MAAOR,KAAKF,QAAQU,MAAMC,cACnCK,QACDC,KAAIC,GAAcA,EAAWC,QAEjC,CAEAO,KAAKC,GACH,OAAOzB,KAAKH,KAAK6B,KAAc1B,KAAKC,OAhDjB,mBAgDyCwB,EAAa,CACvElB,OAAQ,CAAEoB,MAAO3B,KAAKF,QAAQU,MAAMC,aAExC,CAEAmB,OAAOH,GACL,OAAOzB,KAAKH,KAAK+B,OAAgB5B,KAAKC,OArDjB,qBAqD2C,CAC9DM,OAAQ,CAAEoB,MAAO3B,KAAKF,QAAQU,MAAMC,WAAYJ,WAAYoB,EAAYI,aAE5E,CAEAC,OAAOC,GACL,MAAMC,EAAW,IAAIC,SACrB,UAAWC,KAAQH,EACjBC,EAASG,OAAO,OAAQD,GAE1B,OAAOlC,KAAKH,KAAK6B,KAAuB1B,KAAKC,OA9DxB,qBA8DkD+B,EAAU,CAC/EzB,OAAQ,CAAEC,MAAOR,KAAKF,QAAQU,MAAMC,WAAY2B,OAAQpC,KAAKF,QAAQsC,OAAO3B,aAEhF,CAEA4B,YAAYC,GACV,OAAOtC,KAAKH,KAAK6B,KAAc1B,KAAKC,OAnEb,uBAmEyC,KAAM,CACpEM,OAAQ,CAAEoB,MAAO3B,KAAKF,QAAQU,MAAMC,WAAY6B,qBAEpD,CAACC,SAAAvC,KAAA,mBAAAwC,iBAnEU7C,GAAmB8C,MAAAC,MAAAD,MAAAE,KAAAF,MAAAG,MAAA,EAAAL,SAAAvC,KAAA,WAAA6C,EAAAC,IAAA,OAAnBnD,EAAmBoD,QAAnBpD,EAAmBqD,mBAAnBrD,CAAmB,4FCbzB,IAAMsD,EAAqB,MAA5B,MAAOA,EACXrD,YAAoBC,EAA0BC,EAA0BC,GAApDC,KAAAH,OAA0BG,KAAAF,UAA0BE,KAAAD,YAA0B,CAElGmD,eAAetC,GACb,OAAOZ,KAAKH,KAAKS,IAAiBN,KAAKD,WAAWI,MAAMN,KAAKI,OAAOkD,IAAqB,OAAQ,CAC/F5C,OAAQ,CAAEoB,MAAO3B,KAAKF,QAAQU,MAAMC,WAAY2B,OAAQpC,KAAKF,QAAQsC,OAAO3B,WAAYG,UAE5F,CAEAwC,YAAYC,EAA0BC,EAAqBC,GACzD,MAAMC,EAAMxD,KAAKD,WAAWI,MAAMN,KAAKI,OAAOkD,IAAqB,UAC/D,UAAYnD,KAAKF,QAAQU,MAAMC,WAC/B,WAAaT,KAAKF,QAAQsC,OAAO3B,WACjC,yBAA2B4C,EAAeI,KAAK,KAC/C,oBAAsBH,EAAUG,KAAK,KACrC,sBAAwBF,EAAYE,KAAK,KAE7CC,OAAOC,KAAKH,EAAK,SAAU,GAC7B,CAACjB,SAAAvC,KAAA,mBAAAwC,iBAlBUS,GAAqBR,MAAAC,MAAAD,MAAAE,KAAAF,MAAAG,MAAA,EAAAL,SAAAvC,KAAA,WAAA6C,EAAAC,IAAA,OAArBG,EAAqBF,QAArBE,EAAqBD,mBAArBC,CAAqB,2FCA3B,IAAMW,EAAgB,MAAvB,MAAOA,EACXhE,YAAoBC,EAA0BC,EAA0BC,GAApDC,KAAAH,OAA0BG,KAAAF,UAA0BE,KAAAD,YAA0B,CAElG8D,aACE,OAAO7D,KAAKH,KAAKS,IAAaN,KAAKD,WAAWI,MAAMN,KAAKI,OAAO6D,IAAgB,cAAe,CAC7FvD,OAAQ,CAAEoB,MAAO3B,KAAKF,QAAQU,MAAMC,WAAY2B,OAAQpC,KAAKF,QAAQsC,OAAO3B,aAEhF,CAGAsD,eACE,MAAO,GAAG/D,KAAKD,WAAWI,MAAMN,KAAKI,OAAO,GAAG6D,sBAAgC9D,KAAKF,QAAQU,gBAAgBR,KAAKF,QAAQsC,QAC3H,CAEA4B,yBAA0BC,uBAAsBC,eAAcC,cAE5D,OAAOnE,KAAKH,KAAKS,IAAaN,KAAKD,WAAWI,MAAMN,KAAKI,OAAO6D,IAAgB,YAAa,CAC3FvD,OAAQ,CACNoB,MAAO3B,KAAKF,QAAQU,MAAMC,WAC1B2B,OAAQpC,KAAKF,QAAQsC,OAAO3B,WAC5BwD,qBAAsBA,EAAqBxD,WAC3CyD,aAAcA,EAAazD,WAC3B2D,gBAAiBD,EAAU1D,aAGjC,CAAC8B,SAAAvC,KAAA,mBAAAwC,iBAzBUoB,GAAgBnB,MAAAC,MAAAD,MAAAE,KAAAF,MAAAG,MAAA,EAAAL,SAAAvC,KAAA,WAAA6C,EAAAC,IAAA,OAAhBc,EAAgBb,QAAhBa,EAAgBZ,mBAAhBY,CAAgB,yHCWtB,IAAMS,EAAyB,MAAhC,MAAOA,EAIXzE,YACUC,EACAC,EACAwE,GAFAtE,KAAAH,OACAG,KAAAF,UACAE,KAAAsE,sBALVtE,KAAAuE,IAAM,IAAIC,IAZO,6BADH,GAuBNxE,KAAAyE,gBAA8D,GAHpEzE,KAAKuE,IAAIG,EAAE,kBAAkB1E,KAAKF,QAAQyE,IAAII,QAChD,CAIAC,WAAWpE,GACT,OAAAR,KAAKuE,IAAIG,EAAE,qBAAuBlE,GAClCR,KAAKyE,gBAAgBjE,KAAWR,KAAK6E,kBAAkBrE,EAAO,cAC3DM,QAAKgE,KAAY,CAAEC,UAAU,KACzB/E,KAAKyE,gBAAgBjE,EAC9B,CAEQqE,kBAAkBrE,EAAgBwE,GACxC,OAAAhF,KAAKuE,IAAIG,EAAE,oBAAqB,CAAClE,QAAOwE,UACjChF,KAAKH,KAAKS,IA/BE,wBA+BkC,CACnDC,OAAQ,CAAEC,MAAOA,GAASR,KAAKF,QAAQU,MAAMC,cAC5CK,QACDC,KAAIkE,IACFA,EAAYC,QAAQC,SAASC,KAAOH,EAAYC,QAAQC,SAASC,KAAKC,OAAOC,GAAYA,EAASC,WAC3FN,KACR,EACDO,KAAIP,IACFjF,KAAKsE,oBAAoBmB,WAAWR,EAAYC,QAAQQ,OAAOC,UAAS,GAG9E,CAACpD,SAAAvC,KAAA,mBAAAwC,iBAlCU6B,GAAyB5B,MAAAC,MAAAD,MAAAE,KAAAF,MAAAG,KAAA,EAAAL,SAAAvC,KAAA,WAAA4F,EAAA9C,IAAA,OAAzBuB,EAAyBtB,QAAzBsB,EAAyBrB,UAAA6C,WADZ,gBACbxB,CAAyB,oGCZ/B,MAAMlB,EAAqB,kBAG3B,IAAM2C,EAAqB,MAA5B,MAAOA,EACXlG,YAAoBC,EAA0BC,EAA0BC,GAApDC,KAAAH,OAA0BG,KAAAF,UAA0BE,KAAAD,YAA0B,CAElGgG,eAAe7D,GACb,MAAMF,EAAW,IAAIC,SACrBD,SAASG,OAAO,OAAQD,GACjBlC,KAAKH,KAAK6B,KAAuB1B,KAAKD,WAAWI,MAAMN,KAAKI,OAAOkD,EAAqB,UAAWnB,EAAU,CAClHzB,OAAQ,CAAEC,MAAOR,KAAKF,QAAQU,MAAMC,WAAY2B,OAAQpC,KAAKF,QAAQsC,OAAO3B,aAEhF,CAGAuF,SAAS7B,GACP,OAAOnE,KAAKH,KAAK6B,KAAuB1B,KAAKD,WAAWI,MAAMN,KAAKI,OAAO6D,IAAgB,SAAU,GAAI,CACtGvD,OAAQ,CACNC,MAAOR,KAAKF,QAAQU,MAAMC,WAC1B2B,OAAQpC,KAAKF,QAAQsC,OAAO3B,WAC5B2D,gBAAiBD,EAAU1D,aAGjC,CAAC8B,SAAAvC,KAAA,mBAAAwC,iBApBUsD,GAAqBrD,MAAAC,MAAAD,MAAAE,KAAAF,MAAAG,MAAA,EAAAL,SAAAvC,KAAA,WAAA6C,EAAAC,IAAA,OAArBgD,EAAqB/C,QAArB+C,EAAqB9C,mBAArB8C,CAAqB,uXCAlC,MAGaG,EAAiB,kBACjBC,EAAyB,0BACzBC,EAAkB,mBAClBC,EAAiB,kBACjBC,EAAyB,0BAG/B,IAAMC,EAAgB,MAAvB,MAAOA,EACX1G,YAAoBC,EAA0BC,EAA0BC,GAApDC,KAAAH,OAA0BG,KAAAF,UAA0BE,KAAAD,YAA0B,CAElGwG,OAAO9E,GACL,OAAOzB,KAAKH,KAAKS,IAAaN,KAAKD,WAAWI,MAAMN,KAAKI,OAAOuG,MAAmB,CACjFjG,OAAQ,CAAEC,MAAOR,KAAKF,QAAQU,MAAMC,WAAYgB,gBAEpD,CAEAgF,YAAYvE,GACV,SAAOwE,QAAKC,KAASzE,IAAOpB,QAC1B8F,KAAUC,GACD7G,KAAKH,KAAK6B,KAAc1B,KAAKD,WAAWI,MAAMN,KAAKI,OAtBxC,sBAsBmE,CACnF6G,MAAO9G,KAAKF,QAAQU,MAAMC,WAC1BsG,cAAeF,MAElB,EACD9F,KAAIiG,KAEAC,QAASD,EACTE,SAAU,MAKlB,CAEAC,cAAcC,GACZ,OAAOpH,KAAKH,KAAKS,IAAUN,KAAKD,WAAWI,MAAMN,KAAKI,OArCjC,qBAqC2D,CAC9EM,OAAQ,CAAE8G,GAAID,EAAG3G,WAAYD,MAAOR,KAAKF,QAAQU,MAAMC,aAE3D,CAEAmB,OAAOwF,GACL,OAAOpH,KAAKH,KAAK+B,OAAgB5B,KAAKD,WAAWI,MAAMN,KAAKI,OA1CtC,sBA0CiE,CACrFM,OAAQ,CAAEC,MAAOR,KAAKF,QAAQU,MAAMC,WAAY4G,GAAID,EAAG3G,aAE3D,CAAC8B,SAAAvC,KAAA,mBAAAwC,iBArCU8D,GAAgB7D,MAAAC,MAAAD,MAAAE,KAAAF,MAAAG,MAAA,EAAAL,SAAAvC,KAAA,WAAA4F,EAAA9C,IAAA,OAAhBwD,EAAgBvD,QAAhBuD,EAAgBtD,mBAAhBsD,CAAgB,kFCX7B,MAAMgB,EAAiB,cACjBC,EAAcD,EAAiB,MAC/BE,EAAmBF,EAAiB,SACpCG,EAAmBH,EAAiB,SACpCI,EAAsBJ,EAAiB,eACvCK,EAAkBL,EAAiB,QAGlC,IAAMM,EAAY,MAAnB,MAAOA,EACXhI,YAAoBC,EAA0BC,EAA0BC,GAApDC,KAAAH,OAA0BG,KAAAF,UAA0BE,KAAAD,YAA0B,CAElGwG,SACE,OAAOvG,KAAKH,KAAKS,IAAYN,KAAKD,WAAWI,MAAMN,KAAKI,OAAOsH,GAAc,CAC3EhH,OAAQ,CAAEC,MAAOR,KAAKF,QAAQU,MAAMC,aAExC,CAEAmB,OAAOwF,GACL,OAAOpH,KAAKH,KAAKS,IAAaN,KAAKD,WAAWI,MAAMN,KAAKI,OAAOuH,GAAmB,CACjFjH,OAAQ,CAAEC,MAAOR,KAAKF,QAAQU,MAAMC,WAAY4G,GAAID,EAAG3G,aAE3D,CAEAqB,OAAOI,GACL,MAAMF,EAAW,IAAIC,SACrBD,SAASG,OAAO,OAAQD,GACjBlC,KAAKH,KAAK6B,KAAuB1B,KAAKD,WAAWI,MAAMN,KAAKI,OAAOwH,GAAmBzF,EAAU,CACrGzB,OAAQ,CAAEC,MAAOR,KAAKF,QAAQU,MAAMC,WAAY2B,OAAQpC,KAAKF,QAAQsC,OAAO3B,aAEhF,CAEAoH,OAAOT,GACL,MAAM5D,EAAMxD,KAAKD,WAAWI,MAAMN,KAAKI,OAAOqH,EAAiB,QAC3D,UAAYtH,KAAKF,QAAQU,MACzB,WAAa4G,EAEjB1D,OAAOC,KAAKH,EAAK,SAAU,GAC7B,CAEAsE,kBACE,OAAO9H,KAAKH,KAAKS,IAAkBN,KAAKD,WAAWI,MAAMN,KAAKI,OAAOyH,GAAsB,CACzFnH,OAAQ,CAAEC,MAAOR,KAAKF,QAAQU,MAAMC,aAExC,CAEAsH,SAASC,GACP,OAAOhI,KAAKH,KAAKS,IAAiBN,KAAKD,WAAWI,MAAMN,KAAKI,OAAO0H,GAAkB,CACpFpH,OAAQ,CAAEC,MAAOR,KAAKF,QAAQU,MAAMC,WAAYuH,SAEpD,CAACzF,SAAAvC,KAAA,mBAAAwC,iBAzCUoF,GAAYnF,MAAAC,MAAAD,MAAAE,KAAAF,MAAAG,MAAA,EAAAL,SAAAvC,KAAA,WAAAiI,EAAAnF,IAAA,OAAZ8E,EAAY7E,QAAZ6E,EAAY5E,mBAAZ4E,CAAY,gRCIlB,IAAMM,EAAqB,MAA5B,MAAOA,EAZbtI,cAeEI,KAAAqF,OAAS,GACTrF,KAAAmI,eAAiB,GAGTnI,KAAAoI,SAAqB,GAE7BC,OAAO9H,GACLP,KAAKsI,aAAe/H,CACtB,CAEAgI,iBACE,MAAuB,KAAhBvI,KAAKqF,QAAiBrF,KAAKoI,SAASI,OAAS,CACtD,CAEAC,eAAelI,GACb,GAAoB,KAAhBP,KAAKqF,OAAe,CACtB,MAUMqD,EAA+B1I,KAAKsI,aAAaK,YAVV,CAC3CC,IAAK5I,KAAKsI,aAAaM,IACvBC,OAAQ7I,KAAKsI,aAAaO,OAC1BC,OAAQ9I,KAAKsI,aAAaQ,OAC1BC,UAAW/I,KAAKsI,aAAaS,UAC7BjJ,QAASE,KAAKsI,aAAaxI,QAC3BkJ,KAAMzI,EAAO0I,KAAKD,KAClBE,SAAWC,GAAU5I,EAAO0I,KAAKD,KAAKG,GACtCF,KAAM1I,EAAO0I,OAIf,GADc,MAAVP,IACCA,EAAOU,KAAK9H,KAAWA,GAASA,EAAM+H,SAASrJ,KAAKqF,SAAY,OAAO,EAG9E,GAAIrF,KAAKoI,SAASI,OAAS,EAAG,CAC5B,MAAMc,EAAsD/I,EAAOyI,KAAKhJ,KAAKsI,aAAaO,OAAOU,YAEjG,GADa,MAATD,IACCtJ,KAAKoI,SAASgB,KAAKI,GAAUF,EAAMF,KAAKK,GAAOA,EAAIpC,KAAOmC,IAAY,OAAO,EAGpF,OAAO,CACT,CAEAE,WACE,OAAK1J,KAAKuI,iBACuB,CAC/BoB,WAAY,SACZtE,OAAQrF,KAAKqF,OACb+C,SAAUpI,KAAKoI,eAJW,CAO9B,CAEAwB,SAASC,GACP7J,KAAKqF,OAASwE,GAAOxE,QAAU,GAC/BrF,KAAKoI,SAAWyB,GAAOzB,UAAY,GACnCpI,KAAKmI,eAAiB0B,GAAOzB,UAAU3E,KAAK,MAAQ,EACtD,CAEAqG,iBAAiBvJ,GACfP,KAAK+J,cAAcC,cAAcC,OACnC,CAEAC,iBACElK,KAAKoI,SAAWpI,KAAKmI,eAAegC,MAAM,KAAKpJ,IAAIqJ,GAAMC,SAASD,EAAI,KAAK/E,OAAO+E,IAAOE,MAAMF,GACjG,CAEAG,gBACEvK,KAAKsI,aAAakC,uBACpB,CAACjI,SAAAvC,KAAA,mBAAAwC,iBArEU0F,EAAqB,EAAA3F,SAAAvC,KAAA,UAAAyK,EAAAC,IAAA,MAArBxC,EAAqByC,UAAA,wBAAAC,UAAA,SAAAC,EAAAC,MAAA,EAAAD,mSCpBhCpI,MADF,qBACEA,CADwD,eAC7CA,MAAA,WAAKA,QAChBA,MAAA,eAA4BA,MAAA,yBAAAsI,GAAAtI,aAAAuI,GAAAvI,MAAAqI,EAAAzF,OAAA0F,KAAAD,EAAAzF,OAAA0F,GAAAtI,MAAAsI,EAAA,GAAqBtI,MAAA,2BAAAA,aAAAuI,GAAAvI,MAAiBqI,EAAAP,gBAAe,GACnF9H,UAGEA,MADF,qBACEA,CADwD,eAC7CA,MAAA,2BAAqBA,QAChCA,MAAA,aAA4BA,MAAA,yBAAAsI,GAAAtI,aAAAuI,GAAAvI,MAAAqI,EAAA3C,eAAA4C,KAAAD,EAAA3C,eAAA4C,GAAAtI,MAAAsI,EAAA,GAA6BtI,MAAA,2BAAAA,aAAAuI,GAAiBF,EAAAZ,iBAAgBzH,MAAEqI,EAAAP,gBAAe,GAC7G9H,gBAN8BA,MAAA,GAAAA,MAAA,UAAAqI,EAAAzF,QAKA5C,MAAA,GAAAA,MAAA,UAAAqI,EAAA3C,gCDQ1B8C,KAAWvI,eACXwI,KACAC,KAAkBxI,UAClByI,KAAcxI,MAAAyI,OAAA,oIAGLnD,CAAqB,sHEP9BzF,MAAA,cAAgEA,MAAA,mBAAAA,MAAA6I,GAAA,MAAAC,EAAA9I,QAAA,OAAAA,MAAS8I,EAAAC,GAAG,UAAS,GACnF/I,MAAA,cAAUA,MAAA,YAAMA,QAChBA,MAAA,UAAMA,MAAA,YACRA,kCAHsBA,MAAA,WAAA8I,EAAAE,KAAAC,UAAAC,gBCMnB,IAAMC,GAA4B,MAAnC,MAAOA,EAKXvD,OAAO9H,GACLP,KAAKO,OAASA,EACdP,KAAKyL,KAAOlL,EAAOyI,IACrB,CAEA6C,QAAQtL,GACN,OAAO,CACT,CAGAiL,GAAGM,GACD9L,KAAKO,OAAOiL,GAAGM,EAAM9L,KAAKyL,KAC5B,CAAClJ,SAAAvC,KAAA,mBAAAwC,iBAjBUoJ,EAA4B,EAAArJ,SAAAvC,KAAA,UAAAyK,EAAAC,IAAA,MAA5BkB,EAA4BjB,UAAA,gCAAAoB,YAAA,EAAAC,SAAA,CAAAvJ,OAAAwJ,MAAA,GAAAC,KAAA,EAAAC,OAAA,mYAAAC,SAAA,SAAAvB,EAAAC,GAAA,KAAAD,EAAA,iBDnBvCpI,MADF,UACEA,CAD6B,WACwCA,MAAA,mBAAAA,aAAAuI,GAAAvI,MAASqI,EAAAU,GAAG,SAAQ,GACvF/I,MAAA,cAAUA,MAAA,eACZA,UACAA,MAAA,WAAwEA,MAAA,mBAAAA,aAAAuI,GAAAvI,MAASqI,EAAAU,GAAG,UAAS,GAC3F/I,MAAA,cAAUA,MAAA,oBACZA,UAEEA,MADF,UACEA,CAD8F,cACpFA,MAAA,gBAEdA,YAEAA,MAAA,mBACEA,MAAA,GAAA4J,GAAA,qBAMF5J,kCAZuEA,MAAA,GAAAA,MAAA,oBAAA6J,mBCQnEC,KAAe7J,KACf8J,KAAa7J,KACb8J,KAAa7J,8BAGJgJ,CAA4B,6CClBvCnJ,MAAA,YAA4BA,MAAA,GAAcA,8BAAdA,cAAAiK,EAAAC,WCWvB,IAAMC,GAA2B,MAAlC,MAAOA,EAIXvE,OAAO9H,GACAsM,MAAMC,QAAQvM,EAAOe,SAE1BtB,KAAK+M,aAAe/M,KAAKgN,WAAWzM,EAAOe,MAAMmC,KAAK,OACjDlD,EAAOsI,OAA0BoE,kBACpCjN,KAAK2M,SAAWpM,EAAOe,MAAMkH,QAEjC,CAEAqD,QAAQtL,GACN,OAAO,CACT,CAGQyM,WAAWE,GACjB,OAAOA,EAAKC,QAAQ,KAAM,SAASA,QAAQ,KAAM,UAAUA,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,OACxH,CAAC5K,SAAAvC,KAAA,mBAAAwC,iBApBUoK,EAA2B,EAAArK,SAAAvC,KAAA,UAAAyK,EAAAC,IAAA,MAA3BkC,EAA2BjC,UAAA,+BAAAoB,YAAA,EAAAC,SAAA,CAAAvJ,OAAAwJ,MAAA,EAAAC,KAAA,EAAAC,OAAA,kCAAAC,SAAA,SAAAvB,EAAAC,GAAA,EAAAD,IDbxCpI,MAAA,WACEA,MAAA,EAAA2K,GAAA,cAGA3K,MAAA,GACFA,eALKA,MAAA,QAAAqI,EAAAiC,cACHtK,cAAA,EAAAqI,EAAA6B,SAAA,MAGAlK,cAAA,IAAAqI,EAAAiC,aAAA,sBCOUM,KAAchC,OAAA,+JAEbuB,CAA2B,8GCPtCnK,MAAA,WAEEA,MAAA,mBAAAA,MAAAuI,GAAA,MAAAsC,EAAA7K,QAAA,OAAAA,MAAS6K,EAAAC,eAAc,GACvB9K,MAAA,gBACqDA,MAAA,GAEvDA,kCAL4EA,MAA1E,UAAAA,MAAA,EAAA+K,IAAAF,EAAAG,gBAAAH,EAAAhM,MAAAoM,UAA0EjL,CAAD,QAAA6K,EAAAK,iBAE/DlL,QAAuEA,MAAvE,WAAA6K,EAAAG,cAAuEhL,CAA7C,kBAAA6K,EAAAG,eACiBhL,cAAA,GAAA6K,EAAAhM,MAAAoM,SAAA,wDAMrDjL,MADF,UACEA,CAD2C,gBAE4CA,MAAA,GAGzFA,gCAJYA,QACRA,MADQ,WAAA6K,EAAAG,cACRhL,CADkC,kBAAA6K,EAAAG,eACmDhL,cAAA,GAAA6K,EAAAhM,MAAAoM,SAAA,8BCSpF,IAAME,GAA2B,MAAlC,MAAOA,EASXvF,OAAO9H,GACLP,KAAKsB,MAAQf,EAAOe,MACpBtB,KAAKO,OAASA,EACdP,KAAKyL,KAAOlL,EAAOyI,KACnBhJ,KAAK6N,gBAAkB7N,KAAKyL,KAAKC,UAAUoC,gBAE3C9N,KAAKyN,cAAgBzN,KAAKyL,KAAKsC,UAAUvF,QAAU,EAEnD,MAAMwF,EAAMhO,KAAKyL,KAAKwC,IACtBjO,KAAK2N,gBAAkBK,EACnB,uCACaA,EAAIE,uBACAF,EAAIG,cACpBH,EAAII,UAAY,aAAaJ,EAAII,YAAc,KAC/CJ,EAAIK,UAAY,aAAaL,EAAIK,YAAc,KAC/CL,EAAIM,QAAU,WAAWN,EAAIM,UAAY,KACzCN,EAAIO,MAAQ,YAAYP,EAAIO,QAAU,IACvC,6BACJvO,KAAK2N,iBAAmB,qBAAqB3N,KAAKyN,cAAgB,EAAIzN,KAAKyN,cAAgB,uBAA8C,IAAvBzN,KAAKyN,cAAsB,OAAS,yBACxJ,CAEA5B,QAAQtL,GACN,OAAO,CACT,CAEAgN,eACEvN,KAAKO,OAAOiO,eAAexO,KAAKyL,KAClC,CAAClJ,SAAAvC,KAAA,mBAAAwC,iBApCUoL,EAA2B,EAAArL,SAAAvC,KAAA,UAAAyK,EAAAC,IAAA,MAA3BkD,EAA2BjD,UAAA,+BAAAoB,YAAA,EAAAC,SAAA,CAAAvJ,OAAAwJ,MAAA,EAAAC,KAAA,EAAAC,OAAA,wjBAAAC,SAAA,SAAAvB,EAAAC,GAAA,EAAAD,IDxBpCpI,MAFJ,UAEIA,CAF2B,UAE3BA,CADiG,cACvFA,MAAA,GACZA,UAWAA,MATA,EAAAgM,GAAA,YASAhM,CATwB,EAAAiM,GAAA,aAiB1BjM,eArB2CA,cAAA,QAAAqI,EAAAxJ,MAAAqN,UAAA,6BAC7BlM,MAAA,GAAAA,MAAAqI,EAAAxJ,MAAAqN,UAAA,+BAGZlM,cAAA,EAAAqI,EAAA+C,iBAAA,KASApL,cAAA,EAAAqI,EAAA+C,kBAAA/C,EAAA2C,eAAA3C,EAAAxJ,MAAAoM,UAAA,sBCKElB,KAAa9J,KACb6J,KAAe5J,KACfiM,KACAC,IAAcjM,IACdyK,KAAchC,OAAA,kIAGLuC,CAA2B,oICtBlC,SAAUkB,GAAqBC,GACnC,OAAQC,IACN,IAAKA,EAAQ1N,MAAS,OAAO,KAE7B,MAAM2N,EAA2BF,EAAKG,SAASD,QAAW3N,MACpD6N,EAAaH,EAAQ1N,MAA0Bb,WAErD,OAAQwO,GACN,KAAKG,KAAaC,SAASC,OAEzB,MADsB,WAAWC,KAAKJ,GACiB,KAA/B,CAAEK,oBAAoB,GAChD,KAAKJ,KAAaC,SAASrH,KAEzB,MAAMyH,EAAW,CAAC,IAAK,KAAKrG,KAAKsG,GAAWP,EAAU9F,SAASqG,IACzD1H,EAAOmH,EAAUQ,UACrBF,EAAW,EAAI,EACfA,EAAWN,EAAU3G,OAAS,EAAI2G,EAAU3G,QAG9C,SADeoH,QAAYL,KAAKvH,GACS,KAAxB,CAAE6H,aAAa,GAGlC,QACE,OAAO,MAGf,6ICbUpN,MAAA,mBACEA,MAAA,GACFA,kCAFYA,MAAA,QAAAqN,EAAAC,YACVtN,cAAA,IAAAqN,EAAAE,MAAA,gCAIFvN,MAAA,mBACEA,MAAA,GACFA,+BAFYA,MAAA,QAAAwN,EAAAC,WAAAH,YACVtN,cAAA,IAAAwN,EAAAC,WAAAH,WAAA,gCARJtN,MAAA,kBACEA,MAAA,EAAA0N,GAAA,oBAAA1N,OAKAA,MAAA,EAAA2N,GAAA,qBAKF3N,wCAVEA,cAAA4N,EAAAC,mBAKA7N,MAAA,GAAAA,MAAA,EAAAwN,EAAAM,kBAAA,6BAQF9N,MAAA,oCAIFA,MAAA,uBACEA,MAAA,wHAEFA,cAHgBA,MAAA,wCAMhBA,MAAA,uBAAkCA,MAAA,GAAuBA,8BAAzCA,MAAA,cAAkBA,cAAAwN,EAAAO,wCAGlC/N,MAAA,uBACEA,MAAA,8BACFA,cAFgBA,MAAA,qCAKhBA,MAAA,uBACEA,MAAA,8BACFA,cAFgBA,MAAA,wCASZA,MAAA,mBACEA,MAAA,GACFA,kCAFYA,MAAA,QAAAgO,GACVhO,cAAA,IAAAgO,EAAA,6BAMNhO,MAAA,uBACEA,MAAA,8BACFA,cAFgBA,MAAA,wCAWZA,MAAA,mBACEA,MAAA,GACFA,kCAFYA,MAAA,QAAAiO,EAAA7O,YACVY,cAAA,IAAAiO,EAAAC,MAAA,gCALJlO,MADF,qBACEA,CADsE,eAC3DA,MAAA,kBAAYA,QACvBA,MAAA,mBAEEA,MAAA,EAAAmO,GAAA,oBAAAnO,OAMJA,gCAPIA,MAAA,GAAAA,MAAA,cAAAwN,EAAAY,aAAArI,OAAA,qBACA/F,cAAAwN,EAAAY,yCAgBApO,MAAA,mBACEA,MAAA,GACFA,kCAFYA,MAAA,QAAAqO,EAAAxP,OACVmB,cAAA,IAAAqO,EAAA5Q,KAAA,gCALJuC,MADF,qBACEA,CADsE,eAC3DA,MAAA,WAAKA,QAChBA,MAAA,mBAEEA,MAAA,EAAAsO,GAAA,oBAAAtO,OAKAA,MAAA,mBAA0CA,MAAA,cAE9CA,4CARIA,MAAA,GAAAA,MAAA,cAAAwN,EAAAe,aAAAxI,OAAA,qBACA/F,cAAAwN,EAAAe,cAKYvO,MAAA,GAAAA,MAAA,QAAA4N,EAAAY,gDAiBZxO,MAAA,mBACEA,MAAA,GACFA,kCAFYA,MAAA,QAAAyO,EAAAC,MACV1O,cAAA,IAAAyO,EAAA3C,MAAA,KAAA2C,EAAA7J,GAAA,iCAHJ5E,MAAA,mBACEA,MAAA,EAAA2O,GAAA,oBAAA3O,OAKFA,+BAN2CA,MAAA,cAAAwN,EAAAoB,aAAA7I,OAAA,qBACzC/F,cAAAwN,EAAAoB,qCAQF5O,MAAA,uCADAA,MATA,EAAA6O,GAAA,oBASA7O,CAToB,EAAA8O,GAAA,sCAApB9O,MAAA,EAAAwN,EAAAuB,UAAA,MASA/O,cAAA,EAAAwN,EAAAuB,WAAA,gCAQE/O,MAAA,mBACEA,MAAA,GACFA,kCAFYA,MAAA,QAAAgP,EAAA5P,YACVY,cAAA,IAAAgP,EAAAd,MAAA,gCAHJlO,MAAA,mBACEA,MAAA,EAAAiP,GAAA,oBAAAjP,OAKFA,+BAN2CA,MAAA,cAAAwN,EAAAY,aAAArI,OAAA,qBACzC/F,cAAAwN,EAAAY,qCAQFpO,MAAA,uCADAA,MATA,EAAAkP,GAAA,oBASAlP,CAToB,EAAAmP,GAAA,sCAApBnP,MAAA,EAAAwN,EAAAuB,UAAA,MASA/O,cAAA,EAAAwN,EAAAuB,WAAA,4BAKA/O,MAAA,4BAAAA,MAAA,EAAAoP,GAAA,uDAAepP,MAAA,mBAAAqP,6BADfrP,MA5BA,EAAAsP,GAAA,IA4BAtP,CA5BiD,EAAAuP,GAAA,IA4BjDvP,CAdsD,EAAAwP,GAAA,0CAftDxP,MAAA,GAAAyP,EAAAjC,EAAAC,WAAAH,cAAAM,EAAAjB,aAAA1B,SAAAyE,OAAApC,WAAA,EAAAmC,IAAA7B,EAAAjB,aAAA1B,SAAAjM,YAAAsO,WAAA,4BAmCAtN,MAAA,oCAGAA,MAAA,uCADAA,MAHA,EAAA2P,GAAA,eAGA3P,CAH8D,EAAA4P,GAAA,+CAA9D5P,MAAA,EAAAwN,EAAAC,WAAAjB,UAAAoB,EAAAjB,aAAAC,SAAAC,OAAA,MAGA7M,cAAA,EAAAwN,EAAAC,WAAAjB,UAAAoB,EAAAjB,aAAAC,SAAAC,OAAA,6BAME7M,MAAA,oCAGAA,MAAA,uCADAA,MAHA,EAAA6P,GAAA,eAGA7P,CAH8D,EAAA8P,GAAA,+CAA9D9P,MAAA,EAAAwN,EAAAC,WAAAjB,UAAAoB,EAAAjB,aAAAC,SAAAC,OAAA,MAGA7M,cAAA,EAAAwN,EAAAC,WAAAjB,UAAAoB,EAAAjB,aAAAC,SAAAC,OAAA,gDAMA7M,MADF,WACEA,CAD8C,eAEuBA,MAAA,mBAAAA,MAAA+P,GAAA,MAAAnC,EAAA5N,MAAA,UAAAA,MAAS4N,EAAAoC,iBAAgB,GAAK,GACjGhQ,MAAA,iBAA2BA,MAAA,YAC7BA,UACAA,MAAA,eAC+DA,MAAA,mBAAAA,MAAA+P,GAAA,MAAAnC,EAAA5N,MAAA,UAAAA,MAAS4N,EAAAoC,iBAAgB,GAAM,GAC5FhQ,MAAA,iBAA2BA,MAAA,iBAE/BA,oCAPIA,cAAA,UAAAA,MAAA,EAAA+K,GAAAyC,EAAAuB,YAIA/O,MAAA,GAAAA,MAAA,UAAAA,MAAA,EAAA+K,IAAAyC,EAAAuB,oCAON/O,MAAA,uBACEA,MAAA,8BACFA,cAFgBA,MAAA,qCAKhBA,MAAA,uBACEA,MAAA,8BACFA,cAFgBA,MAAA,qCAKhBA,MAAA,uBACEA,MAAA,4BACFA,cAFgBA,MAAA,uDA/KlBA,MAFJ,UAEIA,CAFoB,UAEpBA,CAD6B,WACSA,MAAA,qBACxCA,UAEEA,MADF,UACEA,CAD8B,OAE5BA,MAAA,0FACIA,MAAA,SAAuDA,MAAA,UAAIA,QAAIA,MAAA,QACrEA,QAIIA,MAHJ,YAGIA,CAHqB,sBAGrBA,CADsE,gBAC3DA,MAAA,aAAMA,QAejBA,MAdA,GAAAiQ,GAAA,mBAcAjQ,CAdqB,GAAAkQ,GAAA,eAiBvBlQ,QAeAA,MAdA,GAAAmQ,GAAA,wBAcAnQ,CAd2G,GAAAoQ,GAAA,wBAc3GpQ,CARyB,GAAAqQ,GAAA,wBAQzBrQ,CAL2F,GAAAsQ,GAAA,yBAYzFtQ,MADF,sBACEA,CADsE,gBAC3DA,MAAA,eAAQA,QACnBA,MAAA,oBACEA,MAAA,GAAAuQ,GAAA,oBAAAvQ,OAMJA,UAqBAA,MApBA,GAAAwQ,GAAA,wBAoBAxQ,CApBqF,GAAAyQ,GAAA,uBAoBrFzQ,CAd6F,GAAA0Q,GAAA,wBA6B7F1Q,MAAA,qBACEA,MAAA,mDACAA,MAAA,WAAkFA,MAAA,eACpFA,UAGEA,MADF,sBACEA,CADsE,gBAC3DA,MAAA,UAAGA,QAmDdA,MAlDA,GAAA2Q,GAAA,IAkDA3Q,CAlDqB,GAAA4Q,GAAA,IAkDrB5Q,CAhBS,GAAA6Q,GAAA,yBAAA7Q,MAgBTA,CAR8B,GAAA8Q,GAAA,cAoBhC9Q,QAWAA,MAVA,GAAA+Q,GAAA,wBAUA/Q,CAV6E,GAAAgR,GAAA,wBAU7EhR,CALuF,GAAAiR,GAAA,yBAW3FjR,UAEEA,MADF,2BACEA,CAD6C,0BAGjBA,MAAA,kBAAAsI,GAAAtI,MAAAuI,GAAA,MAAAqF,EAAA5N,QAAA,OAAAA,MAAU4N,EAAAsD,iBAAA5I,GAAwB,GAC5DtI,MAAA,IACFA,QAEEA,MADF,SACEA,CADG,gBACqCA,MAAA,mBAAAA,MAAAuI,GAAA,MAAAqF,EAAA5N,QAAA,OAAAA,MAAS4N,EAAAuD,cAAa,GAAEnR,MAAA,aAAMA,QACtEA,MAAA,gBAAgFA,MAAA,mBAAAA,MAAAuI,GAAA,MAAAqF,EAAA5N,QAAA,OAAAA,MAAS4N,EAAAwD,UAAS,GAChGpR,MAAA,gBAIRA,0CA3LUA,MAAA,IAAAA,MAAA,YAAA4N,EAAAtB,MAIFtM,MAAA,GAAAA,MAAA,GAAAwN,EAAA6D,WAAA,OAcArR,cAAA,GAAAwN,EAAA6D,YAAA,MAIFrR,cAAA,GAAA4N,EAAAtB,KAAAG,SAAAa,WAAAgE,UAAA1D,EAAAtB,KAAAG,SAAAa,WAAAiE,SAAA/D,EAAAM,kBAAA,OAMA9N,cAAA,GAAAwN,EAAAO,eAAA,OAGA/N,cAAA,GAAA4N,EAAAtB,KAAAG,SAAAa,WAAAgE,SAAA,MAAA1D,EAAAtB,KAAAG,SAAAa,WAAAkE,QAAA5D,EAAAtB,KAAAG,SAAAa,WAAAkE,OAAAC,SAAA,OAKAzR,cAAA,GAAA4N,EAAAtB,KAAAG,SAAAa,WAAAgE,SAAA,MAAA1D,EAAAtB,KAAAG,SAAAa,WAAAkE,QAAA5D,EAAAtB,KAAAG,SAAAa,WAAAkE,OAAAE,QAAA,OASI1R,MAAA,GAAAA,MAAAwN,EAAAmE,gBAOJ3R,MAAA,GAAAA,MAAA,GAAA4N,EAAAtB,KAAAG,SAAAD,QAAA8E,SAAA,MAAA1D,EAAAtB,KAAAG,SAAAD,QAAAgF,QAAA5D,EAAAtB,KAAAG,SAAAD,QAAAgF,OAAAC,SAAA,OAMAzR,cAAA,GAAAwN,EAAA6D,YAAA7D,EAAAC,WAAAH,aAAAM,EAAAjB,aAAA1B,SAAAyE,OAAApC,WAAA,OAcAtN,cAAA,IAAAwN,EAAA6D,YAAA7D,EAAAC,WAAAH,aAAAM,EAAAjB,aAAA1B,SAAAyE,OAAApC,YAAAE,EAAAC,WAAAH,aAAAM,EAAAjB,aAAA1B,SAAAjM,YAAAsO,YAAA,MAsBEtN,MAAA,GAAAA,MAAA,GAAAwN,EAAA6D,WAAA,OAkDArR,MAAA,GAAAA,MAAA,GAAAwN,EAAA6D,YAAA7D,EAAAoE,gBAAA,OAaF5R,cAAA,GAAA4N,EAAAtB,KAAAG,SAAA7N,IAAA0S,SAAA,MAAA1D,EAAAtB,KAAAG,SAAA7N,IAAA4S,QAAA5D,EAAAtB,KAAAG,SAAA7N,IAAA4S,OAAAC,SAAA,OAKAzR,cAAA,GAAA4N,EAAAtB,KAAAG,SAAA7N,IAAA0S,SAAA,MAAA1D,EAAAtB,KAAAG,SAAA7N,IAAA4S,QAAA5D,EAAAtB,KAAAG,SAAA7N,IAAA4S,OAAAzE,mBAAA,OAKA/M,cAAA,GAAA4N,EAAAtB,KAAAG,SAAA7N,IAAA0S,SAAA,MAAA1D,EAAAtB,KAAAG,SAAA7N,IAAA4S,QAAA5D,EAAAtB,KAAAG,SAAA7N,IAAA4S,OAAApE,YAAA,OASApN,MAAA,GACAA,MADA,QAAAwN,EAAA6D,WAAA,wHACArR,CADmJ,UAAAwN,EAAA6D,YAEnJrR,cAAA,IAAAwN,EAAA6D,WAAA,uBAIuDrR,MAAA,GAAAA,MAAA,YAAA4N,EAAAtB,KAAAuF,QC1ItD,IAAMC,GAA8B,MAArC,MAAOA,UAAsCC,KAsBjD5U,YACU6U,EACA3U,GAER4U,QAHQ1U,KAAAyU,YACAzU,KAAAF,UAvBgBE,KAAA2U,UAAY,mBAEtC3U,KAAAoP,aAAeA,KACfpP,KAAAiR,oBAAsBA,IAedjR,KAAA4U,uBAAsBC,KAAUC,KAEhC9U,KAAA+U,uBAAsBF,KAAUlV,MAMxC,CAEAqV,WACEhV,KAAKsQ,kBAAoBnP,OAAOuH,OAAO0G,KAAa1B,UAAU3M,IAAIkU,QAAgBA,KAClFjV,KAAKoU,eAAiBjT,OAAOuH,OAAO0G,KAAaC,UAEjDrP,KAAKkV,gBAAkB,IAAIC,IAAmC,IAC9DnV,KAAKoV,cAAgB,IAAID,IAA+B,IACxDnV,KAAKqV,YAAc,IAAIF,KAAgB,GACvCnV,KAAKsV,cAAgB,IAAIH,IAA+B,IACxDnV,KAAKuV,cAAgB,IAAIJ,IAA+B,IACxDnV,KAAKwV,WAAa,IAAIL,KAAgB,GAEtCnV,KAAKyV,cAELzV,KAAK+O,KAAO,IAAI2G,KAAiB,IACjC1V,KAAK+O,KAAK4G,WAAW,aAAc,IAAIC,KAAmBxG,KAAa1B,SAASyE,OAAOpC,WAAY,CAAC8F,KAAW3B,SAAU2B,KAAW1B,QAAQ,eAC5InU,KAAK+O,KAAK4G,WAAW,UAAW,IAAIC,KAAmBxG,KAAa1B,SAASyE,OAAOlD,QAAS,CAAC4G,KAAW3B,YACzGlU,KAAK+O,KAAK4G,WAAW,6BAA8B,IAAIC,KAAmB,OAC1E5V,KAAK+O,KAAK4G,WAAW,uBAAwB,IAAIC,KAAmBxG,KAAanO,OAAO6U,QAAQxU,QAChGtB,KAAK+O,KAAK4G,WAAW,MAAO,IAAIC,KAAmB,KAAM,CAACC,KAAW3B,SAAUpF,GAAqB9O,KAAK+O,SAEzG/O,KAAK+V,cAAcC,IACjBhW,KAAK+O,KAAKG,SAAS+G,qBAAwBC,aAAapV,QACtDqV,KAAUnW,KAAK+O,KAAKG,SAAS+G,qBAAwB3U,QAAK,EAC1D8U,QACAC,UAAWC,IACmD,MAA1DtW,KAAK+O,KAAKG,SAASqH,2BAA8BjV,OACnDtB,KAAK+O,KAAKG,SAASqH,2BAA8BC,WAAW,MAG1DF,IAAarF,KACfqF,EAAWG,OAAO,mMAAwMrH,KAAanO,OAAO6U,QAAQxU,MACjPtB,KAAKoV,cAAc9T,MAAM8H,KAAK6L,GAAUA,EAAO3T,QAAUgV,IAK5DtW,KAAKoV,cAAcsB,KAAK,CAJY,CAClCxW,KAAMoW,EACNhV,MAAOgV,MAEmCtW,KAAKoV,cAAc9T,QAEjEtB,KAAK+O,KAAKG,SAAS+G,qBAAwBO,WAAWF,IAEtDtW,KAAK2W,kBAAkBL,EAAQ,IAMrCtW,KAAK+V,cAAcC,OACjBY,MACE5W,KAAK+O,KAAKG,SAASa,WAAcmG,aAAapV,QAAKsV,QACnDpW,KAAK+O,KAAKG,SAASD,QAAWiH,aAAapV,QAAKsV,SAChDC,UAAU,KACVrW,KAAKwV,WAAWkB,MAAK,GAGC,MADiB1W,KAAK+O,KAAK8H,cAClCxV,KAIbrB,KAAK+O,KAAKyH,WAHuC,CAC/CnV,IAAK,UAQbrB,KAAK+V,cAAcC,IACjBhW,KAAK+O,KAAKG,SAASqH,2BAA8BL,aAAapV,QAC5DqV,KAAUnW,KAAK+O,KAAKG,SAASqH,2BAA8BjV,QAAK,EAChE8U,QACAC,UAAUS,IACV,MAAM5G,EAAiClQ,KAAK+O,KAAK8H,cAC7C3G,EAAWH,aAAeX,KAAa1B,SAASyE,OAAOpC,YAAgC,MAAlBG,EAAW7O,KAIlFrB,KAAK+O,KAAKyH,WAHuC,CAC/CnV,IAAK,OAKTrB,KAAK4U,oBAAoBrO,OAAOuQ,GAAuBT,UAAU/M,IAC/DtJ,KAAKsV,cAAcoB,KAAKpN,EAAK,EAC9B,IAIL,MAAMyN,EAAc/W,KAAK+O,KAAKmH,aAAapV,QACzCqV,KAAUnW,KAAK+O,KAAK8H,gBAAmC,EACvD9V,KAAI,IAAMf,KAAK+O,KAAK8H,gBAAmC,EACvDG,MAAmBC,GAAKA,IAI1BjX,KAAK+V,cAAcC,OACjBkB,KAAc,CAACH,EAAa/W,KAAKqV,cAAcgB,UAAU,EAAEnG,EAAY4D,MAErE,MAAMqD,EAAkBnX,KAAKsQ,kBAAkB8G,KAAKnC,IAAUA,GAAOlF,aAAeG,EAAWH,YACzFqE,EAAiBN,GAAcqD,EAAkB,CAACA,EAAgBlI,SAAW,IAAIjP,KAAKoU,gBACvFiD,KAAUC,YAAYlD,EAAgBpU,KAAKkV,gBAAgB5T,QAC9DtB,KAAKkV,gBAAgBwB,KAAKtC,GAI5B,MAAMmD,EAA2C,GAC5CvX,KAAKkV,gBAAgB5T,MAAM+H,SAAS6G,EAAWjB,WAClDsI,EAAYtI,QAAUjP,KAAKkV,gBAAgB5T,MAAM,IAInD,MAAMkW,EAAgB1D,GAAc5D,EAAWH,aAAeX,KAAa1B,SAAS+J,IAAI1H,WACpFyH,GAAiBtH,EAAW7O,MAAQrB,KAAKF,QAAQU,QACnD+W,EAAYlW,IAAMrB,KAAKF,QAAQU,OAG7BW,OAAOC,KAAKmW,GAAa/O,QAC3BxI,KAAK+O,KAAKyH,WAAWe,GAIvBG,KAAeC,eAAe3X,KAAK+O,KAAKG,SAASD,QADzB6E,GAAc9T,KAAKkV,gBAAgB5T,MAAMkH,QAAU,GAE3EkP,KAAeC,eAAe3X,KAAK+O,KAAKG,SAAS7N,IAAQmW,EAAa,IAI1ExX,KAAK4X,cAAaV,KAAc,IAC9BA,KAAc,CAAClX,KAAKqV,YAAarV,KAAKkV,gBAAiBlV,KAAKoV,cAAepV,KAAKsV,cAAetV,KAAKuV,iBAAc,EAClH2B,KAAc,CAACH,EAAa/W,KAAKwV,eAChC1U,QACDC,KAAI,GACD+S,EAAYM,EAAgBpD,EAAcK,EAAcR,IACxDX,EAAYsB,OAAU,CAGrBsC,aACAvD,mBAAoBvQ,KAAKsQ,kBAAkBlH,KAAK6L,GAAUA,EAAOlF,aAAeG,EAAWH,YAC3FS,eAAgBsD,GAAc9T,KAAKsQ,kBAAkB8G,KAAKnC,GAAUA,EAAOlF,aAAeG,EAAWH,aAAa8H,KAClHzD,iBACApD,eACAQ,YACA6C,gBACE,CAACjF,KAAa1B,SAASyE,OAAOpC,WAAYX,KAAa1B,SAASjM,YAAYsO,YAAY1G,SAAS6G,EAAWH,YAC9GG,aACAmB,eACAR,kBAKR,CAEAiH,cACE9X,KAAKqV,YAAY0C,WACjB/X,KAAKkV,gBAAgB6C,WACrB/X,KAAKsV,cAAcyC,WACnB/X,KAAKuV,cAAcwC,WACnB/X,KAAKwV,WAAWuC,WAChBrD,MAAMoD,aACR,CAEAlE,YAAYoE,GACVhY,KAAKyU,UAAUwD,MAAMD,EACvB,CAEAvF,gBAAgByF,GACdlY,KAAKwV,WAAWkB,KAAKwB,EACvB,CAEAvE,iBAAiBuE,GACflY,KAAKqV,YAAYqB,KAAKwB,EAAMC,QAC9B,CAEAtE,UACE,MAAM3D,EAAiClQ,KAAK+O,KAAK8H,cAE3CmB,EAAuB,CAC3BI,OAAQpY,KAAKsQ,kBAAkB8G,KAAKnC,GAAUA,EAAOlF,aAAeG,EAAWH,aAAaqI,OAC5FrI,WAAYG,EAAWH,WACvBd,QAASiB,EAAWjB,QAEpB5N,IAAK6O,EAAWjB,UAAYG,KAAaC,SAASrH,KAAQkI,EAAW7O,IAAe8L,QAAQ,OAAQ,IAAM+C,EAAW7O,IAAIZ,YAE3HT,KAAK4T,YAAYoE,EACnB,CAEQrB,kBAAkB/V,GACxBZ,KAAK+U,oBAAoBpU,qBAAqBC,GAAOyV,UAAUxF,IAC7D7Q,KAAKuV,cAAcmB,KAAK7F,EAAY,EAExC,CAEQ4E,cACNzV,KAAK+U,oBAAoBlU,YAAYwV,UAAUpV,IAC7CjB,KAAKoV,cAAcsB,KAAKzV,EAAM,EAElC,CAACsB,SAAAvC,KAAA,mBAAAwC,iBA5NU+R,GAA6B9R,MAAAC,MAAAD,MAAAE,MAAA,EAAAJ,SAAAvC,KAAA,UAAAyK,EAAAC,IAAA,MAA7B6J,EAA6B5J,UAAA,iCAAA0N,SAAA,EAAAC,aAAA,SAAAzN,EAAAC,GAAA,EAAAD,GAA7BpI,MAAA,YAAAqI,EAAA6J,m9CDtDblS,MAAA,EAAA8V,GAAA,4CAAA9V,MAAA,GAAA+V,EAAA/V,MAAA,IAAAqI,EAAA8M,aAAA,KAAAY,mBCoCIvN,KAAWrI,mCACX6V,KAAmB7V,UACnBuI,KAAkBuN,eAClBC,KAAeC,KAAAC,KACfC,KACA1N,KAAc2N,KACdC,KACAC,KAAeC,UACftK,KACApC,KAAa2M,KACbC,KACAC,KAAoBC,KACpBC,KACAC,KACAC,KACApM,cAGSkH,CAA8B,KCrC9BmF,GAAsB,MAA7B,MAAOA,EAVb9Z,cAWEI,KAAA2O,UAAY,GACZ3O,KAAA0N,SAAW,GACX1N,KAAA2Z,YAAc,GAIdtR,OAAO9H,GACLP,KAAKsI,aAAe/H,CACtB,CAEAgI,iBACE,MAA0B,KAAnBvI,KAAK2O,WAAsC,KAAlB3O,KAAK0N,UAAwC,KAArB1N,KAAK2Z,WAC/D,CAEAlR,eAAelI,GACb,IAAIqZ,GAAkB,EAClBC,GAAiB,EACjBC,GAAoB,EAExB,MAUMxY,EAAiBtB,KAAKsI,aAAaK,YAVI,CAC3CC,IAAK5I,KAAKsI,aAAaM,IACvBC,OAAQ7I,KAAKsI,aAAaO,OAC1BC,OAAQ9I,KAAKsI,aAAaQ,OAC1BC,UAAW/I,KAAKsI,aAAaS,UAC7BjJ,QAASE,KAAKsI,aAAaxI,QAC3BkJ,KAAMzI,EAAO0I,KAAKD,KAClBE,SAAWC,GAAU5I,EAAO0I,KAAKD,KAAKG,GACtCF,KAAM1I,EAAO0I,OAGf,OAEI2Q,EAFmB,KAAnB5Z,KAAK2O,WACHrN,QAAMqN,WAGUrN,EAAMqN,UAAUlO,aAAeT,KAAK2O,UAOtDkL,EAFkB,KAAlB7Z,KAAK0N,UACHpM,QAAMoM,UAGSpM,EAAMoM,SAASjN,aAAeT,KAAK0N,SAOpDoM,EAFqB,KAArB9Z,KAAK2Z,aACHrY,QAAMqY,aAGYrY,EAAMqY,YAAYlZ,aAAeT,KAAK2Z,YAKvDC,GAAmBC,GAAkBC,CAC9C,CAEApQ,WACE,OAAK1J,KAAKuI,iBAEwB,CAChCoB,WAAY,WACZgF,UAAW3O,KAAK2O,UAChBjB,SAAU1N,KAAK0N,SACfiM,YAAa3Z,KAAK2Z,kBANQ,CAS9B,CAEA/P,SAASC,GACP7J,KAAK2O,UAAY9E,EAAQA,EAAM8E,UAAY,GAC3C3O,KAAK0N,SAAW7D,EAAQA,EAAM6D,SAAW,GACzC1N,KAAK2Z,YAAc9P,EAAQA,EAAM8P,YAAc,EACjD,CAEA7P,iBAAiBvJ,GACjB,CAEAgK,gBACEvK,KAAKsI,aAAakC,uBACpB,CAACjI,SAAAvC,KAAA,mBAAAwC,iBApFUkX,EAAsB,EAAAnX,SAAAvC,KAAA,UAAAyK,EAAAC,IAAA,MAAtBgP,EAAsB/O,UAAA,0BAAAoB,YAAA,EAAAC,SAAA,CAAAvJ,OAAAwJ,MAAA,GAAAC,KAAA,EAAAC,OAAA,4FAAAC,SAAA,SAAAvB,EAAAC,GAAA,EAAAD,ICjBnCpI,MAAA,WAAmBA,MAAA,eAASA,QAC5BA,MAAA,uBAAiBA,MAAA,yBAAAsI,GAAAtI,aAAAqI,EAAA6D,UAAA5D,KAAAD,EAAA6D,UAAA5D,IAAA,GAAwBtI,MAAA,kCAAiBqI,EAAAP,eAAe,GACvE9H,MAAA,wBAA2BA,MAAA,SAAGA,QAC9BA,MAAA,wBAA+BA,MAAA,eAASA,QACxCA,MAAA,wBAAgCA,MAAA,mBAClCA,UAEAA,MAAA,WAAmBA,MAAA,kBAAWA,QAC9BA,MAAA,wBAAiBA,MAAA,yBAAAsI,GAAAtI,aAAAqI,EAAA4C,SAAA3C,KAAAD,EAAA4C,SAAA3C,IAAA,GAAuBtI,MAAA,kCAAiBqI,EAAAP,eAAe,GACtE9H,MAAA,yBAA2BA,MAAA,UAAGA,QAC9BA,MAAA,yBAA+BA,MAAA,kBAAWA,QAC1CA,MAAA,yBAAgCA,MAAA,sBAClCA,UAEAA,MAAA,YAAmBA,MAAA,mBAAYA,QAC/BA,MAAA,wBAAiBA,MAAA,yBAAAsI,GAAAtI,aAAAqI,EAAA6O,YAAA5O,KAAAD,EAAA6O,YAAA5O,IAAA,GAA0BtI,MAAA,kCAAiBqI,EAAAP,eAAe,GACzE9H,MAAA,yBAA2BA,MAAA,UAAGA,QAC9BA,MAAA,yBAA+BA,MAAA,mBAAYA,QAC3CA,MAAA,yBAAgCA,MAAA,sBAClCA,iBAlBiBA,MAAA,GAAAA,MAAA,UAAAqI,EAAA6D,WAOAlM,MAAA,GAAAA,MAAA,UAAAqI,EAAA4C,UAOAjL,MAAA,GAAAA,MAAA,UAAAqI,EAAA6O,6BDFbzO,KAAcxI,UACduI,KAAWtI,WAAA0I,OAAA,2NAGFqO,CAAsB,wJEJ/BjX,MAAA,qCAAKA,MAAA,YAAAA,MAAA,IAAAqI,GAAArI,gDA4BHA,MAAA,eACEA,MAAA,mBAAAA,MAAAsX,GAAA,MAAAzM,EAAA7K,MAAA,UAAAA,MAAS6K,EAAA0M,cAAa,GACtBvX,MAAA,iBAA2BA,MAAA,iBAAWA,QACtCA,MAAA,UAAMA,MAAA,YACRA,oDA1CFA,MAFJ,UAEIA,CAFyD,UAEzDA,CAD6B,WAE3BA,MAAA,GACFA,QACAA,MAAA,cAA6CA,MAAA,mBAAAA,MAAAuI,GAAA,MAAAsC,EAAA7K,QAAA,OAAAA,MAAS6K,EAAAsG,cAAa,GACjEnR,MAAA,cAAUA,MAAA,WAEdA,YACAA,MAAA,WACEA,MAAA,mBACAA,MAAA,EAAAwX,GAAA,aAIExX,MADF,WACEA,CADwB,wBAGtBA,MADA,qBAAAsI,GAAAtI,MAAAuI,GAAA,MAAAsC,EAAA7K,QAAA,OAAAA,MAAa6K,EAAA4M,YAAAnP,GAAmB,EAChCtI,CADiC,wBAAAsI,GAAAtI,MAAAuI,GAAA,MAAAsC,EAAA7K,QAAA,OAAAA,MACjB6K,EAAA6M,aAAApP,GAAoB,GAG1CtI,YAGIA,MAFJ,0BAEIA,CAF2C,WAE3CA,CADkC,gBACuCA,MAAA,mBAAAA,MAAAuI,GAAA,MAAAsC,EAAA7K,QAAA,OAAAA,MAAS6K,EAAA8M,gBAAe,GAC/F3X,MAAA,kBAA2BA,MAAA,qBAAcA,QACzCA,MAAA,WAAMA,MAAA,WACRA,UACAA,MAAA,gBAAyEA,MAAA,mBAAAA,MAAAuI,GAAA,MAAAsC,EAAA7K,QAAA,OAAAA,MAAS6K,EAAA+M,gBAAe,GAC/F5X,MAAA,kBAA2BA,MAAA,mBAAYA,QACvCA,MAAA,WAAMA,MAAA,WACRA,UACAA,MAAA,gBAAiFA,MAAA,mBAAAA,MAAAuI,GAAA,MAAAsC,EAAA7K,QAAA,OAAAA,MAAS6K,EAAAgN,aAAY,GACpG7X,MAAA,kBAA2BA,MAAA,mBAAYA,QACvCA,MAAA,WAAMA,MAAA,WACRA,UACAA,MAAA,gBAAyEA,MAAA,mBAAAA,MAAAuI,GAAA,MAAAsC,EAAA7K,QAAA,OAAAA,MAAS6K,EAAAiN,iBAAgB,GAChG9X,MAAA,kBAA2BA,MAAA,kBAAWA,QACtCA,MAAA,WAAMA,MAAA,sBACRA,UACAA,MAAA,GAAA+X,GAAA,iBAOF/X,QACAA,MAAA,gBAAoEA,MAAA,mBAAAA,MAAAuI,GAAA,MAAAsC,EAAA7K,QAAA,OAAAA,MAAS6K,EAAAmN,SAAS,MAAK,GACzFhY,MAAA,eAAUA,MAAA,UAGhBA,gDAhDMA,MAAA,GAAAA,MAAA,IAAAiY,EAAAjZ,YAAAkP,OAAA+J,EAAAjZ,YAAAkZ,KAAA,UAQFlY,MAAA,GAAAA,MAAA,GAAAmY,EAAA,MAAAF,EAAAjZ,aAAA,MAAAiZ,EAAAjZ,YAAAoZ,WAAA,KAAAH,EAAAjZ,YAAAoZ,WAAAC,kBAAA,KAAAF,GAI6CnY,MAAA,GACQA,MADR,UAAAiY,EAAApR,MACQ7G,CADY,cAAA6K,EAAAyN,YACZtY,CADwC,+BAwB3FA,MAAA,IAAAA,MAAA,GAAA6K,EAAA0N,UAAA,QCYN,MAAMC,GAAW,CACfC,SAAS,EACThb,KAAM,yBAoBD,IAAMib,GAAqB,MAA5B,MAAOA,EAYXC,GAGAC,GAKAzb,YACU6U,EACA6G,EACAC,EACAC,EACAC,GAJAzb,KAAAyU,YACAzU,KAAAsb,WACAtb,KAAAub,SACAvb,KAAAwb,mBACAxb,KAAAyb,oBAxBVzb,KAAA0b,aAAe,IAAIC,IACnB3b,KAAA4b,OAAS,IAAIzG,SAA+B0G,GAC5C7b,KAAA+a,YAA2B,IACtBe,KAGL9b,KAAAgb,WAAUe,OAAOC,MAAqBhB,QAC9Bhb,KAAAic,mBAAkBpH,KAAUqH,MAC5Blc,KAAAmc,wBAAuBtH,KAAUuH,KACjCpc,KAAA4U,uBAAsBC,KAAUC,KAChC9U,KAAA+U,uBAAsBF,KAAUlV,KACxCK,MAAAob,KAAgBvG,KAAUwH,MAElBrc,KAAAsc,SAAW,IAAInH,IAAyB,MAChDnV,MAAAqb,EAAyBrb,MAAKob,EAAcmB,SAASC,SAASlc,IAAI,yBAIlEN,KAAAuE,IAAM,IAAIC,KAAUyW,GAQpB,CAEAjG,WACEhV,KAAKyc,mBACLzc,KAAK0c,aACL1c,KAAK2c,eACL3c,MAAKob,EAAcwB,iBAAiB,IAAM5c,KAAK0c,cAG/C1c,KAAK4X,cAAaV,KAAc,CAC9BlX,KAAK0b,aAAc1b,KAAK4b,SACvB9a,QACDC,KAAI,EAAEU,EAAa6H,MAAK,CAAS7H,cAAa6H,WAElD,CAEAwO,cACE9X,KAAK0b,aAAa3D,WAClB/X,KAAK4b,OAAO7D,WACZ/X,KAAKsc,SAASvE,UAChB,CAEAnE,cACE5T,KAAKyU,UAAUwD,OACjB,CAEAiC,YAAY3Z,GACVP,KAAKsc,SAAS5F,KAAKnW,EAAOqI,IAC5B,CAEQ6T,mBACNzc,KAAK+U,oBAAoB3U,oBAAoBJ,MAAKqb,GAAwBhF,UAAU5U,IAClFzB,KAAK0b,aAAahF,KAAKjV,EAAW,EAEtC,CAEQib,aACN1c,KAAK4U,oBAAoBrO,OAAOvG,MAAKqb,GAAwBhF,UAAU/M,IACrEtJ,KAAK4b,OAAOlF,KAAKpN,EAAK,EAE1B,CAEQqT,eACN3c,KAAK4U,oBAAoBiI,WAAW7c,MAAKqb,GAAwBhF,UAAUyG,IAEzE,MAAMC,EAA0BD,EAAQzX,OAAOyD,IAAWA,EAAOkU,aAC3DC,EAAajd,KAAKkd,gBAAgBH,GAClCI,EC5IN,SAAUC,GAAiBC,EAAoBJ,GACnD,IAAKI,EAAY,OAOjB,IAAIC,EAJ6C,MAA7CD,EAAWE,OAAOF,EAAW7U,OAAS,KACxC6U,EAAaG,KAAKH,IAIpB,IACEC,EAAUG,KAAKC,MAAML,SAErBM,QAAQC,MAAM,0CAA4CP,GAE5D,IAAKC,EAAS,OAGd,MAAMH,EAAiC,GAYvChc,OAXImc,EAAQO,aAAeP,EAAQQ,cAOjCX,EAAYY,OANuB,CACjCpU,WAAY,WACZgF,UAAW2O,EAAQO,aAAe,GAClCnQ,SAAU4P,EAAQQ,YAAc,GAChCnE,YAAa,KAMjBxY,OAAO6c,QAAQV,GACZjY,OAAO,EAAEhE,EAAKC,KAAmB,gBAARD,GAAiC,eAARA,GAClD4c,QAAQ,EAAE5c,EAAKC,MAEd,GADkB2b,EAAW7F,KAAK8G,GAAKA,EAAE3U,aAAelI,IACzCgE,SAAW6C,GAW1B,GAAqB,iBAAV5G,EAET6b,EAAY9b,GADoB,CAAEsI,WAAY,OAAQwU,KAAM,SAAU9Y,OAAQ/D,WAEpD,iBAAVA,EAEhB6b,EAAY9b,GADsB,CAAEsI,WAAY,SAAUwU,KAAM,SAAU9Y,OAAQ/D,EAAO8c,SAAU,cAEzE,kBAAV9c,EAAqB,CACrC,MAAM+D,EAA6B,CAAEsE,WAAY,UAAWtE,OAAQ/D,EAAMb,YAC1E0c,EAAY9b,GAAOgE,OAnBrB,CAEE,MAAMA,EAA4B,CAChCsE,WAAY,SACZtE,OAAyB,iBAH3B/D,EAAQ+c,KAAYC,SAAShd,IAAUA,GAGDA,OAAQua,EAC5CzT,SAA2B,iBAAV9G,EAAqB,CAACA,GAASuL,MAAMC,QAAQxL,GAASA,EAAM+D,OAAOkZ,GAAkB,iBAANA,QAAkB1C,GAEpHsB,EAAY9b,GAAOgE,KAgBlB8X,CACT,CDmF0BC,CAAiBoB,eAAeC,QAAQC,MAAazB,GACrEjd,KAAKsc,SAAShb,MAChBtB,KAAK2e,cAAc1B,EAAYE,GAE/Bnd,KAAKsc,SAASxb,QACZuE,KAAOuZ,GAAsB,MAAXA,IAAe,EACjCC,KAAK,IACLxI,UAAUuI,IACV5e,KAAK2e,cAAc1B,EAAYE,EAAW,EAC3C,EAGP,CAEQwB,cAAc1B,EAAsBE,GAC1Cnd,KAAKsc,SAAShb,MAAMqd,cAAc1B,GAC9BE,IACFnd,KAAKuE,IAAIG,EAAE,4BAA6ByY,GACxCnd,KAAKsc,SAAShb,MAAMwd,eAAe3B,GAEvC,CAEA5P,aAAa9B,GACX,MAAMjI,EAAMub,IAAaC,aACvBvT,EAAK0F,KACL,wBAAwB1F,EAAKwT,WAAWxT,EAAKpE,MAC7CrH,MAAKqb,GAEPrb,MAAKob,EAAc8D,YAAY,CAAC1b,GAClC,CAEAiX,SAAShP,GACP,MAAMsD,EAAiB,CACrBzF,MAAO,CACG,MAARmC,EACI0T,IAASC,YAAYpf,MAAKqb,GAC1B8D,IAASE,OAAO5T,EAAKpE,MAGvBiY,KAAUC,KAAiBxQ,GACjC/O,MAAKob,EAAc8D,YAAY,CAAC,QAAQI,KAC1C,CAEAlF,gBACE,MAAM+C,EAAcnd,KAAKsc,SAAShb,MAAMke,iBAClCC,EAAate,OAAOC,KAAK+b,GAAa3U,OAAS,EAC/CkX,EAAgB,GAClBD,GACFzf,KAAKsc,SAAShb,MAAMqe,8BAA8BC,IAEhDF,EAAIG,KAD6BD,EAAQ5W,KACpB3B,GAAE,GAG3BrH,MAAKob,EAAc8D,YAAY,CAAC,UAAUlf,MAAKqb,IAAyBqE,EAAIlX,OAAS,EAAI,IAAIkX,IAAQ,MACvG,CAEAvF,aAAapY,GACX,MAAM+d,EAAa/d,EAAM,GAEzB,OADY+d,EAAW5f,KAAKyP,UAAUmQ,EAAW5f,KAAK6f,YAAY,KAAO,GAAGC,qBAE1E,IAAK,MACHhgB,KAAKqa,cAActY,GACnB,MACF,IAAK,OACH/B,KAAKsa,WAAWvY,GAGtB,CAEAsY,cAActY,GAEZ/B,MAAKob,EAAc8D,YAAY,CAAC,GAAGlf,MAAKqb,YAAkC,CAAE4E,MADhC,CAAEle,UAEhD,CAEAuY,WAAWvY,GAET/B,MAAKob,EAAc8D,YAAY,CAAC,UAAW,CAAEe,MADJ,CAAEle,UAE7C,CAEAwY,iBAC4Bva,KAAKub,OAAO5X,KAAK4Q,GAA+B,CACxE2L,WAAW,EACX1E,iBAAkBxb,KAAKwb,iBACvB2E,MAAO,UAESC,cAAc/J,UAAWgK,IACzC,GAAe,MAAXA,EAAiB,OAErB,MAAMtR,EAAiB,CACrBzF,MAAO,CAAE6V,IAASmB,oBAAoBtgB,MAAKqb,EAAwBgF,KAE/Df,KAAUC,KAAiBxQ,GACjC/O,MAAKob,EAAc8D,YAAY,CAAC,QAAQI,MACxCtf,KAAKyb,kBAAkB8E,cAAY,EAEvC,CAEAvG,cACE2D,QAAQ6C,KAAK,kBAAmBxgB,KAAKsc,SAAShb,MAAMke,kBACpDxf,KAAKsb,SAAS3X,KAAK,4CAAwCkY,EAAW,CAAE4E,SAAU,KACpF,CAEQvD,gBAAgBJ,GACtB,MAAMG,EAAuB,CAC3B,IACKyD,IAAkBC,sBACrBC,UAAYrgB,IAEH,oCAD0BA,EAAOyI,KACc0C,UAAUmV,SAAW,WAAa,KAAK1W,MAAM,KAErG2W,mBAAoBJ,IAAkBK,8BAExC,CACE5X,MAAO,SACPgX,MAAO,GACPa,YAAa,QACbJ,UAAW,8BAA8BzW,MAAM,KAC/C9E,OAAQqU,GACR/Q,YAAcpI,IACZ,MAAMkL,EAAoBlL,EAAOyI,KAMjC,MAL2B,CACzB2F,UAAWlD,EAAKoS,YAChBnQ,WAAYjC,EAAKwC,IACjB0L,cAAalO,EAAKsC,UAAWtC,EAAKsC,SAASvF,OAAS,IAIxDyY,aAAcrT,GACdkT,mBAC2C,CACvCtS,eAAiB/C,GAASzL,KAAKuN,aAAa9B,KAKlD,CACElC,WAAY,gBACZJ,MAAO,SACP+X,KAAM,EACNC,SAAU,IACVP,UAAW,2BAA2BzW,MAAM,KAC5CiX,UAAU,EACV/b,OAAQ,qBACRgc,cAAgB9gB,IAEdP,KAAKya,SAD4Bla,EAAOyI,KACf,GAG7B,CACEO,WAAY,QACZ+X,cAAe,+BACfnY,MAAO,QACPgX,MAAO,GACPa,YAAa,QACbJ,UAAW,aACXQ,UAAU,EACV/b,OAAQ,qBACRsD,YAAcpI,IACZ,MAAMkL,EAAoBlL,EAAOyI,KACjC,MAAO,GAAGyC,EAAK8V,WAAW9V,EAAK+V,OAAK,GAGxC,IACKd,IAAkBe,oBACrBR,aAAcrV,GACdkV,mBAC4C,CACxCtV,GAAIA,CAACM,EAAML,KACT,OAAQK,GACN,IAAK,QAAS9L,KAAK0hB,MAAMjW,GAAO,MAChC,IAAK,SAAUzL,KAAK6H,OAAO4D,GAAO,MAClC,IAAK,SAAUzL,KAAK4B,OAAO6J,QAQvC,UAAW3C,KAAUgU,EAAS,CAC5B,MAAMjU,EAAyB,CAC7BU,WAAYT,EAAOjH,WACnBsH,MAAOL,EAAOjH,WACdqf,KAAM,EACNC,SAAU,IACVP,UAAW,aACXQ,UAAU,GAEZ,OAAQtY,EAAO6Y,MACb,KAAKC,IAAgBC,OACnBhZ,EAAOoE,gBAAkBnE,EAAOiF,UAAU8T,QAAQC,kBAAmB,EACrEjZ,EAAOoY,aAAerU,GACtB/D,EAAOF,YAAc3I,KAAK+hB,uBAC1BlZ,EAAOxD,OAAS6C,EAChB,MACF,KAAK0Z,IAAgBI,SACnBnZ,EAAOoZ,cAAgBnZ,EAAOiF,UAAUiU,UAAUE,gBAAiB,EACnErZ,EAAOF,YAAc3I,KAAKmiB,oBAC1BtZ,EAAOxD,OAAS,qBAChB,MACF,KAAKuc,IAAgBQ,QACnBvZ,EAAOF,YAAc3I,KAAKqiB,mBAC1BxZ,EAAOxD,OAASid,IAChB,MACF,KAAKV,IAAgBW,OACnB1Z,EAAOxD,OAAS,uBAChB,MACF,QACEwD,EAAOxD,OAAS,qBAGpB4X,EAAW4C,KAAKhX,GAElB,OAAOoU,CACT,CAEQyE,MAAMjW,GACZ,MAAMsD,EAAiB,CACrBzF,MAAO,CAAC6V,IAASqD,KAAKxiB,MAAKqb,EAAwB5P,EAAKpE,MAEpDiY,KAAUC,KAAiBxQ,GACjC/O,MAAKob,EAAc8D,YAAY,CAAC,QAAQI,KAC1C,CAEQzX,OAAO4D,GACbzL,KAAKmc,qBAAqBsG,aAAahX,EAAKpE,GAAIrH,MAAKqb,GAAwB,EAC/E,CAEQzZ,OAAO6J,GACRoI,QAAQ,WAAWpI,EAAKwT,YAAYxT,EAAKiX,qBAC9C1iB,KAAKsb,SAAS3X,KAAK,eACnB3D,KAAKic,gBAAgBra,OAAO5B,MAAKqb,EAAwB5P,EAAKiX,eAAe,GAAOrM,UAAU,CAC5FK,KAAMA,KACJ1W,KAAKsb,SAAS3X,KAAK,UAAW,KAAM,CAAE8c,SAAU,MAChDzgB,KAAK0c,YAAU,EAEjBkB,MAAQ+E,IACN3iB,KAAKsb,SAASsH,UACT/O,QAAQ,GAAG8O,EAAI/E,MAAMiF,oDAAoDpX,EAAKwT,YAAYxT,EAAKiX,qBAGpG1iB,KAAKsb,SAAS3X,KAAK,eACnB3D,KAAKic,gBAAgBra,OAAO5B,MAAKqb,EAAwB5P,EAAKiX,eAAe,GAAMrM,UAAU,KAC3FrW,KAAKsb,SAAS3X,KAAK,UAAW,KAAM,CAAE8c,SAAU,MAChDzgB,KAAK0c,YAAU,GAChB,IAGP,CAEQqF,uBAAuBxhB,GAC7B,MAAMuiB,EAA0BviB,EAAOyI,KAAKzI,EAAOsI,OAAOM,OAC1D,OAAwB,IAApB2Z,EAASta,OAAuB,KAC7Bsa,EAAS/hB,IAAI0K,GAAQA,EAAK8C,MACnC,CAEQ4T,oBAAoB5hB,GAC1B,MAAMuiB,EAAmBviB,EAAOyI,KAAKzI,EAAOsI,OAAOM,OACnD,OAAK2Z,EACGviB,EAAOsI,OAA0BoZ,cACrCa,EAAS3V,QAAQ,IAAK,KAAKA,QAAQ,IAAK,IACxC2V,EAAS3Y,MAAM,KAAK,GAHA,IAI1B,CAEQkY,mBAAmB9hB,GACzB,MAAMuiB,EAAWviB,EAAOyI,KAAKzI,EAAOsI,OAAOM,OAC3C,MAAwB,kBAAb2Z,EAAiC,KACrCA,EAASriB,UAClB,CAAC8B,SAAAvC,KAAA,mBAAAwC,iBAtVU2Y,GAAqB1Y,MAAAC,MAAAD,MAAAE,OAAAF,MAAAC,MAAAD,0BAAA,EAAAF,SAAAvC,KAAA,UAAAyK,EAAAC,IAAA,MAArByQ,EAAqBxQ,UAAA,wBAAAoB,YAAA,EAAAC,SAAA,CAAAvJ,OAAAwJ,MAAA,EAAAC,KAAA,EAAAC,OAAA,2hCAAAC,SAAA,SAAAvB,EAAAC,MAAA,EAAAD,ID1ElCpI,MAAA,EAAAsgB,GAAA,2CAAAtgB,MAAA,GAAA+V,EAAA/V,MAAA,IAAAqI,EAAA8M,aAAA,KAAAY,mBC+DIS,KAAerW,eACf4J,KAAakM,KACbsK,KACA5J,KACAG,KACA0J,KACAC,KACAC,KACAC,KAAaxK,gBAGJuC,CAAqB,8DE9D3B,IAAMkI,EAAkB,MAAzB,MAAOA,EANbzjB,cASUI,KAAAsjB,SAAW,eACXtjB,KAAAujB,UAAY,SAEpBlb,OAAO9H,GACL,IAAIe,EAAiBf,EAAOe,MACxBf,EAAOijB,UAAWliB,GAASA,GAC3Bf,EAAO+iB,WAAYtjB,KAAKsjB,SAAW/iB,EAAO+iB,UAC1C/iB,EAAOgjB,YAAavjB,KAAKujB,UAAYhjB,EAAOgjB,WAChDvjB,KAAKyjB,KAAOniB,EAAQtB,KAAKsjB,SAAWtjB,KAAKujB,SAC3C,CAEA1X,QAAQtL,GACN,OAAO,CACT,CAACgC,SAAAvC,KAAA,mBAAAwC,iBAhBU6gB,EAAkB,EAAA9gB,SAAAvC,KAAA,UAAA0jB,EAAAhZ,IAAA,MAAlB2Y,EAAkB1Y,UAAA,8BAAAoB,YAAA,EAAAC,SAAA,CAAAvJ,OAAAwJ,MAAA,EAAAC,KAAA,EAAAC,OAAA,uBAAAC,SAAA,SAAAvB,EAAAC,GAAA,EAAAD,ICX7BpI,MADF,UACEA,CAD0B,cAChBA,MAAA,GACZA,iBADYA,MAAA,GAAAA,MAAAqI,EAAA2Y,sBDSAjX,KAAa9J,MAAAihB,cAAA,WAEZN,CAAkB,wHELxB,MAAMvf,EAAgB,aAGtB,IAAM8f,EAAgB,MAAvB,MAAOA,EACXhkB,YAAoBC,EAA0BC,EAA0BC,GAApDC,KAAAH,OAA0BG,KAAAF,UAA0BE,KAAAD,YAA0B,CAElG8jB,UAAU3hB,EAAY4hB,EAAqBC,GAAmB,GAC5D,MAAM/hB,EAAW,IAAIC,SACrBD,SAASG,OAAO,OAAQD,GACxBF,EAASG,OAAO,OAAQ2hB,GAAe,IAChC9jB,KAAKH,KAAK6B,KAAuB1B,KAAKD,WAAWI,MAAMN,KAAKI,OAAO6D,EAAgB,UAAW9B,EAAU,CAC7GzB,OAAQ,CAAE6B,OAAQpC,KAAKF,QAAQsC,OAAO3B,cACrCK,QACD8F,KAAUoR,IACR,GAAI+L,GAAoB/L,EAAO9Q,SAAS,IAAI8c,cAAgBC,KAAuBC,QAAS,CAC1F,MAAMC,EAAa1N,OAAOuB,EAAO9Q,SAAS,GAAGkd,KAAO,4DACpD,GAAID,EACF,OAAOnkB,KAAK6jB,UAAU3hB,EAAMiiB,GAAY,GAG5C,SAAOE,MAAGrM,EAAM,GAGtB,CAACzV,SAAAvC,KAAA,mBAAAwC,iBApBUohB,GAAgBnhB,MAAAC,MAAAD,MAAAE,KAAAF,MAAAG,MAAA,EAAAL,SAAAvC,KAAA,WAAAskB,EAAAxhB,IAAA,OAAhB8gB,EAAgB7gB,QAAhB6gB,EAAgB5gB,mBAAhB4gB,CAAgB,sCCMtB,MAAMW,EAAiD,CAC5DC,OAAQ,CACNC,KAAM,CACJC,QAAS,UACTjB,KAAM,wBAERkB,MAAO,CACLD,QAAS,YACTjB,KAAM,uHCrBNhhB,MAAA,4BADFA,MAAA,SACEA,MAAA,EAAAmiB,EAAA,sBACFniB,yCAFGA,MAAA,OAAAiK,EAAA1D,KAAAxF,IAAAf,OACcA,cAAA,mBAAAoiB,6BAIfpiB,MADF,UACEA,CAD4F,cAClFA,MAAA,GACZA,gCAFuEA,MAA3C,UAAAA,MAAA,EAAA+K,EAAAd,EAAA1D,KAAA8b,WAA2CriB,CAAD,QAAAiK,EAAA1D,KAAA0b,SAC1DjiB,MAAA,GAAAA,MAAAiK,EAAA1D,KAAAya,gCAOZhhB,MADF,UACEA,CAD4F,cAClFA,MAAA,GACZA,gCAFuEA,MAA3C,UAAAA,MAAA,EAAA+K,EAAAd,EAAA1D,KAAA8b,WAA2CriB,CAAD,QAAAiK,EAAA1D,KAAA0b,SAC1DjiB,MAAA,GAAAA,MAAAiK,EAAA1D,KAAAya,OCIP,IAAMsB,EAAkB,MAAzB,MAAOA,EAOX1c,OAAO9H,GACLP,KAAKsB,MAAQf,EAAOe,MAEpBtB,KAAKglB,YAAczkB,EAAO0kB,WAAW1kB,EAAOyI,OAASub,EACrD,MAAMW,EAAIllB,KAAKglB,YAAYR,OAAOxkB,KAAKsB,MAAQ,OAAS,SACxDtB,KAAKgJ,KAAO,IACPkc,EACH1hB,IAAK0hB,EAAE1hB,KAAO0hB,EAAEC,SAAS5kB,EAAOyI,MAGpC,CAEA6C,QAAQtL,GACN,OAAO,CACT,CAACgC,SAAAvC,KAAA,mBAAAwC,iBArBUuiB,EAAkB,EAAAxiB,SAAAvC,KAAA,UAAAyK,EAAAC,IAAA,MAAlBqa,EAAkBpa,UAAA,gCAAAoB,YAAA,EAAAC,SAAA,CAAAvJ,OAAAwJ,MAAA,EAAAC,KAAA,EAAAC,OAAA,sIAAAC,SAAA,SAAAvB,EAAAC,GAAA,EAAAD,IDlB/BpI,MAAA,WAKIA,MAJF,EAAA2iB,EAAA,UAIE3iB,CAJc,EAAA4iB,EAAA,KASlB5iB,QAEAA,MAAA,EAAA6iB,EAAA,yBAAA7iB,cAXEA,cAAA,EAAAqI,EAAA9B,KAAAxF,IAAA,qBCYE6J,IACAb,KAAa9J,KACbkM,MAAO+U,cAAA,WAGEoB,CAAkB,kFCT/B,MAAMQ,EAAqB,8BAA8Bpb,MAAM,KAEzDqb,EAAuB,CAC3B5E,UAAW2E,EACXE,OAAQ,SAGJC,EAAyB,CAC7BtE,UAAU,EACV/b,OAAQ,sBAGJ,MAAOqb,EAAiBne,SACrBvC,KAAA2lB,oBAA8B,CACnCxF,MAAO,MACJqF,GACJjjB,SAEMvC,KAAAyhB,oBAA8B,CACnCtB,MAAO,OACJqF,GACJjjB,SAEMvC,KAAA4lB,oBAA8B,CACnCzF,MAAO,OACJqF,GACJjjB,SAEMvC,KAAA6lB,oBAA8B,CACnC1F,MAAO,OACJqF,GAGLjjB,SACOvC,KAAA8lB,oBAA8B,CACnC3F,MAAO,MACJqF,GAGLjjB,SACOvC,KAAA+lB,oBAA8B,CACnC5F,MAAO,GACPS,UAAW2E,EAAqB,cAChCE,OAAQ,SACTljB,SAEMvC,KAAAgmB,SAAmB,CACxBzc,WAAY,OACZ4W,MAAO,GACPa,YAAa,QACbJ,UAAW,mBAAmBzW,MAAM,KACpCiX,UAAU,EACV/b,OAAQid,IACR3Z,YAAcpI,IACKA,EAAOyI,KACZid,SAEdhF,aAAc8D,KACfxiB,SAEMvC,KAAAkmB,MAAgB,CACrB/F,MAAO,IACPa,YAAa,QACbJ,UAAW2E,EACXnE,UAAU,EACV/b,OAAQ,wBACT9C,SAEMvC,KAAAmmB,OAAiB,CACtBhG,MAAO,GACPa,YAAa,QACbJ,UAAW2E,EACXnE,UAAU,EACV/b,OAAQ,wBAGV9C,SAGOvC,KAAAomB,UAAoB,CACzBjG,MAAO,GACPa,YAAa,QACbJ,UAAW,gBACR8E,GAGLnjB,SAGOvC,KAAAqH,GAAa,CAClBkC,WAAY,KACZJ,MAAO,KACPgX,MAAO,GACPa,YAAa,QACbJ,UAAW,kCAAkCzW,MAAM,KACnDiX,UAAU,EACV/b,OAAQ,wBACT9C,SAEMvC,KAAA2gB,sBAAgC,IAClCD,EAAkBrZ,GACrB4Z,aAAcoF,KACf9jB,SAEMvC,KAAAoiB,QAAkB,CACvBjC,MAAO,GACPa,YAAa,QACbJ,UAAW,yBAAyBzW,MAAM,KAC1CiX,UAAU,GACX7e,SAEMvC,KAAAsmB,SAAmB,CACxBnG,MAAO,IACPiB,UAAU,EACVR,UAAW,aACXvb,OAAQid,KACT/f,SAEMvC,KAAAumB,SAAmB,CACxBvF,YAAa,QACbb,MAAO,GACPS,UAAW,aACXK,aAAcoC,IACdvC,mBAA4B,CAC1B0C,SAAS,IAIbjhB,SAGOvC,KAAAuiB,OAAiB,CACtBpC,MAAO,GACPa,YAAa,QACbJ,UAAW,yBAAyBzW,MAAM,QACvCub,GACJnjB,SAEMvC,KAAAwmB,aAAuB,CAC5BtF,KAAM,EACNC,SAAU,IACVP,UAAW,2BAA2BzW,MAAM,QACzCub,GACJnjB,SAEMvC,KAAAymB,SAAmB,CACxBvF,KAAM,EACNC,SAAU,IACVP,UAAW,gBACR8E,GACJnjB,SAEMvC,KAAA0mB,eAAyB,CAC9BxF,KAAM,EACNC,SAAU,OACPuE,GACJnjB,SAEMvC,KAAA2mB,cAAwB,CAC7BzF,KAAM,EACNC,SAAU,IACVP,UAAW,gBACR8E,GACJnjB,SAEMvC,KAAA4mB,WAAqB,CAC1B1F,KAAM,EACNC,SAAU,IACVP,UAAW,gBACR8E,GACJnjB,SAEMvC,KAAA6mB,oBAA8B,CACnC3F,KAAM,EACNC,SAAU,IACVP,UAAW,uCAAuCzW,MAAM,QACrDub,GAGL,iCAAO3E,CAA6E1f,GAIlF,MAH+C,CAC7CylB,cAAgBrlB,GAAmB,OAAOA,EAAY4F,aAAa5F,EAAYJ,GAAO,UAG1F,sEChLK,IAAMihB,EAAsB,MAA7B,MAAOA,EAVb1iB,cAWEI,KAAAqF,OAAS,GAITgD,OAAO9H,GACLP,KAAKsI,aAAe/H,CACtB,CAEAgI,iBACE,MAAuB,KAAhBvI,KAAKqF,MACd,CAEAoD,eAAelI,GACb,MAUMe,EAAiBtB,KAAKsI,aAAaK,YAVI,CAC3CC,IAAK5I,KAAKsI,aAAaM,IACvBC,OAAQ7I,KAAKsI,aAAaO,OAC1BC,OAAQ9I,KAAKsI,aAAaQ,OAC1BC,UAAW/I,KAAKsI,aAAaS,UAC7BjJ,QAASE,KAAKsI,aAAaxI,QAC3BkJ,KAAMzI,EAAO0I,KAAKD,KAClBE,SAAWC,GAAU5I,EAAO0I,KAAKD,KAAKG,GACtCF,KAAM1I,EAAO0I,OAGf,OAAa,MAAT3H,GACGA,EAAMb,aAAeT,KAAKqF,MACnC,CAEAqE,WACE,GAAK1J,KAAKuI,iBACV,MAAO,CACLoB,WAAY,UACZtE,OAAQrF,KAAKqF,OAEjB,CAEAuE,SAASC,GACP7J,KAAKqF,OAASwE,EAAQA,EAAMxE,OAAS,EACvC,CAEAyE,iBAAiBvJ,GACjB,CAEAgK,gBACEvK,KAAKsI,aAAakC,uBACpB,CAACjI,SAAAvC,KAAA,mBAAAwC,iBA9CU8f,EAAsB,EAAA/f,SAAAvC,KAAA,UAAA0jB,EAAAhZ,IAAA,MAAtB4X,EAAsB3X,UAAA,yBAAAoB,YAAA,EAAAC,SAAA,CAAAvJ,OAAAwJ,MAAA,EAAAC,KAAA,EAAAC,OAAA,gFAAAC,SAAA,SAAAvB,EAAAC,GAAA,EAAAD,ICjBnCpI,MAAA,uBAAiBA,MAAA,yBAAAsI,GAAAtI,aAAAqI,EAAAzF,OAAA0F,KAAAD,EAAAzF,OAAA0F,IAAA,GAAqBtI,MAAA,kCAAiBqI,EAAAP,eAAe,GACpE9H,MAAA,wBAA2BA,MAAA,SAAGA,QAC9BA,MAAA,wBAA+BA,MAAA,UAAIA,QACnCA,MAAA,wBAAgCA,MAAA,WAClCA,gBAJiBA,MAAA,UAAAqI,EAAAzF,uBDab4F,KAAWvI,UACXwI,KAAcvI,WAAA0I,OAAA,6KAGLiX,CAAsB,uIEb3B7f,MAAA,4BADFA,MAAA,cACEA,MAAA,EAAAskB,EAAA,sBACFtkB,uCADiBA,cAAA,mBAAAukB,yBAKfvkB,MAAA,4BADFA,MAAA,eACEA,MAAA,EAAAwkB,EAAA,sBACFxkB,uCADiBA,cAAA,mBAAAukB,yBAOrBvkB,MAAA,GCDK,IAAM+W,EAAkB,MAAzB,MAAOA,EAIX5Z,cAHSI,KAAAknB,SAAU,EACnBlnB,KAAAmnB,SAAU,CAEM,CAEhBC,gBACEpnB,KAAKmnB,SAAWnnB,KAAKmnB,OACvB,CAAC5kB,SAAAvC,KAAA,mBAAAwC,iBARUgX,EAAkB,EAAAjX,SAAAvC,KAAA,UAAA0jB,EAAAhZ,IAAA,MAAlB8O,EAAkB7O,UAAA,qBAAA0c,OAAA,CAAAH,QAAA,WAAAnb,YAAA,EAAAC,SAAA,CAAAvJ,OAAA6kB,mBAAA9Z,EAAAvB,MAAA,EAAAC,KAAA,EAAAC,OAAA,2EAAAC,SAAA,SAAAvB,EAAAC,GAAA,KAAAD,EAAA,yBDf/BpI,MAAA,WAAsBA,MAAA,mBAAAA,aAAAuI,GAAAvI,MAASqI,EAAAsc,gBAAe,GAO1C3kB,MALA,EAAA8kB,EAAA,IAKA9kB,CALe,EAAA+kB,EAAA,KAWnB/kB,QAEAA,MAAA,EAAAglB,EAAA,yBAAAhlB,qBAfgDA,MAAA,UAAAA,MAAA,EAAAilB,EAAA5c,EAAAqc,UAC9C1kB,cAAA,QAAAklB,EAAA7c,EAAAoc,SAAK,GAAL,IAAKS,EAAD,sBCSFxc,KAAkBzI,UAClBkM,KACAoK,MAAgB3N,OAAA,+cAGPmO,CAAkB,qJCMxB,IAAM6M,EAAgB,MAAvB,MAAOA,EAKXzmB,YAAoB0b,GAAAtb,KAAAsb,UAAyB,CAE7CjT,OAAO9H,GACLP,KAAKoH,GAAK7G,EAAOe,MACjBtB,KAAK4nB,MAA2B,iBAAZ5nB,KAAKoH,GAAkB,MAAQ,QACnDpH,KAAK0kB,QAAUnkB,EAAOumB,cAAcvmB,EAAOyI,KAC7C,CAEA6C,QAAQtL,GACN,OAAO,CACT,CAEAiiB,QACEqF,OAAgB7nB,KAAK0kB,SACrB1kB,KAAKsb,SAAS3X,KAAK,sBAAuB,KAAM,CAAE8c,SAAU,KAC9D,CAACle,SAAAvC,KAAA,mBAAAwC,iBApBU6jB,GAAgB5jB,MAAAC,MAAA,EAAAH,SAAAvC,KAAA,UAAAiI,EAAAyC,IAAA,MAAhB2b,EAAgB1b,UAAA,mBAAAoB,YAAA,EAAAC,SAAA,CAAAvJ,OAAAwJ,MAAA,EAAAC,KAAA,EAAAC,OAAA,0FAAAC,SAAA,SAAAvB,EAAAC,GAAA,EAAAD,ICrB7BpI,MAAA,WAA0DA,MAAA,0BAASqI,EAAA0X,MAAM,GAIvE/f,MAAA,YAAiBA,MAAA,GAAQA,QACzBA,MAAA,gBAAuBA,MAAA,eACzBA,iBAN2EA,MAAnC,QAAAqI,EAAA4Z,QAAmCjiB,CAAlB,UAAAA,MAAA,EAAA+K,EAAA,UAAA1C,EAAA8c,MAAA,QAAA9c,EAAA8c,QAItCnlB,MAAA,GAAAA,MAAAqI,EAAA1D,oBDYfwH,KACApC,KAAa7J,KACb0K,KAAchC,OAAA,yhBAGLgb,CAAgB,sCErBtB,MAAMpV,EAAsB,uECQ5B,IAAMwI,EAA6B,MAApC,MAAOA,EACX7Z,cAGA,CAGAkoB,QAAQ5P,GAGNA,EAAM6P,iBACR,CAACxlB,SAAAvC,KAAA,mBAAAwC,iBAXUiX,EAA6B,EAAAlX,SAAAvC,KAAA,UAAA0jB,EAAAsE,IAAA,MAA7BvO,EAA6B9O,UAAA,oCAAA2N,aAAA,SAAAzN,EAAAC,GAAA,EAAAD,GAA7BpI,MAAA,iBAAAsI,GAAA,OAAAD,EAAAgd,QAAA/c,EAAe,2BAAf0O,CAA6B,8DCDnC,IAAM0J,EAAoB,MAA3B,MAAOA,EAEXvjB,YAAoB0E,GAAAtE,KAAAsE,qBAA4C,CAGhEwjB,QAAQ5P,IACwB+P,UAAUC,SAASC,MAAM,OAASjQ,EAAMkQ,QAAUlQ,EAAMmQ,UAAYnQ,EAAMoQ,UAAYpQ,EAAMqQ,SAExHvoB,KAAKsE,oBAAoBkkB,qBACzB9kB,OAAO+kB,eAAeC,kBAE1B,CAACnmB,SAAAvC,KAAA,mBAAAwC,iBAXU2gB,GAAoB1gB,MAAAC,KAAA,EAAAH,SAAAvC,KAAA,UAAAiI,EAAA+f,IAAA,MAApB7E,EAAoBxY,UAAA,2BAAA2N,aAAA,SAAAzN,EAAAC,GAAA,EAAAD,GAApBpI,MAAA,iBAAAsI,GAAA,OAAAD,EAAAgd,QAAA/c,EAAe,2BAAfoY,CAAoB,+GCI1B,MAAMwF,EAAmB,eACnBC,EAAkB,kBAClBC,EAAwB,8BAG9B,IAAMC,EAAyB,MAAhC,MAAOA,EACXlpB,YAAoBC,EAA0BC,EAA0BC,GAApDC,KAAAH,OAA0BG,KAAAF,UAA0BE,KAAAD,YAA0B,CAE1FE,OAAOC,GACb,OAAOF,KAAKD,WAAWI,MAAMN,KAAKI,OAAOC,EAC3C,CAEA6oB,mBACE,OAAO/oB,KAAKH,KAAKS,IAAcN,KAAKC,OAAO0oB,EAAmB,aAAc,CAC1EpoB,OAAQ,CAAEoB,MAAO3B,KAAKF,QAAQU,MAAMC,aAExC,CAEAuoB,oBACE,OAAOhpB,KAAKH,KACTS,IAAyBN,KAAKC,OAAO0oB,EAAmB,cAAe,CAAEpoB,OAAQ,CAAEoB,MAAO3B,KAAKF,QAAQU,MAAMC,cAC7GK,QACCC,KAAIkoB,GACuBA,EAAaloB,IAAImoB,KAEtCC,SAAUD,EAAOvH,KAAKhS,UAAU,EAAGuZ,EAAOvH,KAAKyH,QAAQ,MACvDC,UAAWH,EAAOvH,KAClB3R,MAAOkZ,EAAOvY,MACd2Y,YAAaJ,EAAOK,YACpBC,UAAWN,EAAOO,UAClBC,WAAYR,EAAOS,WACnBC,cAAeV,EAAOW,cACtBC,gBAAiBZ,EAAOa,gBACxBtG,KAAMyF,EAAOO,UAAY,OAASP,EAAOW,cAAgB,eAAiB,SAOtF,CAEAG,mBACE,OAAOhqB,KAAKH,KAAKS,IAA4BN,KAAKC,OAAO0oB,EAAmB,iBAC9E,CAGAsB,UAAUnT,GACR,OAAO9W,KAAKH,KACTS,IAAaN,KAAKC,OAAO2oB,GAAkB,CAC1CroB,OAAQ,CAAEoB,MAAO3B,KAAKF,QAAQU,MAAMC,WAAYJ,WAAYyW,KAE7DhW,QACCC,KAAImpB,IACF,GAAIA,EACF,UAAWC,KAAOD,EAAQ,CACxB,IAAKC,EAAIpc,SAAU,SACnB,MAAMqc,EAAKD,EAAIpc,SAIfqc,EAAGC,OAAS,IAHED,EAAGE,OACFF,EAAGD,EAAIxI,SACNyI,EAAGD,EAAII,YAI3B,OAAOL,IAGf,CAGAM,qBACE,OAAOxqB,KAAKH,KAAKS,IAAaN,KAAKC,OAAO4oB,GAAwB,CAC9DtoB,OAAQ,CAAEoB,MAAO3B,KAAKF,QAAQU,MAAMC,aAE1C,CASAgqB,sBAAsBC,GAIpB,OAAO1qB,KAAKH,KACTS,IAAaN,KAAKC,OAAO4oB,GAAwB,CAChDtoB,OAAQ,CAAEoB,MAAO3B,KAAKF,QAAQU,MAAMC,WAAYiqB,YAAaA,EAAYjqB,aAE/E,CAEAkqB,kBAAkBC,EAA6BC,EAAqCC,EAAyBC,GAC3G,OAAO/qB,KAAKH,KAAK6B,KAAa1B,KAAKC,OAAO0oB,EAAmB,qBAAsB,KAAM,CACvFpoB,OAAQ,CACNuG,MAAO9G,KAAKF,QAAQU,MAAMC,WAC1BuqB,cAAeJ,EAAoBnqB,WACnCwqB,WAAYJ,EACZK,YAAaJ,EACb5qB,KAAM6qB,IAGZ,CAEAI,MAAMT,EAAqBS,GAAiB,GAC1C,OAAOnrB,KAAKH,KAAK6B,KAAW1B,KAAKC,OAAO0oB,EAAmB,SAAU,KAAM,CACzEpoB,OAAQ,CACNoB,MAAO3B,KAAKF,QAAQU,MAAMC,WAC1BiqB,YAAaA,EAAYjqB,WACzB0qB,UAGN,CAEAC,QAAQV,EAAqBI,GAC3B,OAAO9qB,KAAKH,KAAK6B,KAAW1B,KAAKC,OAAO0oB,EAAmB,WAAY,KAAM,CAC3EpoB,OAAQ,CACNoB,MAAO3B,KAAKF,QAAQU,MAAMC,WAC1BiqB,YAAaA,EAAYjqB,WACzB4qB,kBAAmBP,IAGzB,CAEAQ,QAAQC,EAAmB9pB,GACzB,OAAOzB,KAAKH,KAAK6B,KAAc1B,KAAKC,OAAO0oB,EAAmB,QAAS,KAAM,CAC3EpoB,OAAQ,CACNoB,MAAO3B,KAAKF,QAAQU,MAAMC,WAC1BC,cAAee,EAAY4F,GAAG5G,WAC9B+qB,MAAO/N,KAAKgO,UAAUF,KAG5B,CAEAG,SAASjgB,EAAahK,GACpB,OAAOzB,KAAKH,KAAK6B,KAAW1B,KAAKC,OAAOR,IAAiB,YAAa,KAAM,CAC1Ec,OAAQ,CACNoB,MAAO3B,KAAKF,QAAQU,MAAMC,WAC1BC,cAAee,EAAY4F,GAAG5G,WAC9BiqB,YAAajf,EAAKpE,GAAG5G,aAG3B,CAEAkrB,OAAOC,EAAiBlrB,EAAuBqqB,GAC7C,OAAO/qB,KAAKH,KAAK6B,KAAW1B,KAAKC,OAAO0oB,EAAmB,UAAW,KAAM,CAC1EpoB,OAAQ,CACNoB,MAAO3B,KAAKF,QAAQU,MAAMC,WAC1BC,cAAeA,EAAcD,WAC7BiqB,YAAakB,EAAQnrB,WACrBsqB,YAGN,CAEAnpB,OAAO6J,EAAahK,GAClB,GAAIgK,EAAKogB,QACP,MAAM,IAAIC,MAAM,sBAGlB,OAAO9rB,KAAKH,KAAK+B,OAAgB5B,KAAKC,OAAO0oB,EAAmB,UAAW,CACzEpoB,OAAQ,CACNoB,MAAO3B,KAAKF,QAAQU,MAAMC,WAC1BC,cAAee,EAAY4F,GAAG5G,WAC9BiqB,YAAajf,EAAKpE,GAAG5G,aAG3B,CAEAuV,IAAI+V,EAA0BrrB,GAC5B,OAAOV,KAAKH,KAAK6B,KAAa1B,KAAKC,OAAO0oB,EAAmB,OAAQ,KAAM,CACzEpoB,OAAQ,CACNuG,MAAO9G,KAAKF,QAAQU,MAAMC,WAC1BuqB,cAAetqB,EAAcD,WAC7B4G,GAAI0kB,EAAS1kB,GAAG5G,WAChBkhB,KAAMoK,EAASpK,KACf4I,UAAWwB,EAASxB,UACpB1oB,WAAYkqB,EAASlqB,WACrBgqB,QAASE,EAASF,QAAQprB,WAC1BurB,MAAOD,EAASE,UAAUxrB,aAGhC,CAEAyrB,gBAAgB9kB,EAAY/G,EAAoBgpB,GAC9C,OAAOrpB,KAAKH,KAAK6B,KAAc1B,KAAKC,OAAO0oB,EAAmB,aAAc,KAAM,CAChFpoB,OAAQ,CAAEC,MAAOR,KAAKF,QAAQU,MAAMC,WAAYiqB,YAAatjB,EAAG3G,WAAY0I,MAAO9I,EAAYgpB,cAEnG,CAAC9mB,SAAAvC,KAAA,mBAAAwC,iBAxLUsmB,GAAyBrmB,MAAAC,MAAAD,MAAAE,KAAAF,MAAAG,MAAA,EAAAL,SAAAvC,KAAA,WAAAmsB,EAAArpB,IAAA,OAAzBgmB,EAAyB/lB,QAAzB+lB,EAAyB9lB,mBAAzB8lB,CAAyB,sCChB/B,MAAMlH,EAAkB,CAC7BQ,QAAS,UACTgK,OAAQ,SACRpK,SAAU,WACVqK,MAAO,QACPxK,OAAQ,SACRyK,UAAW,YACX/J,OAAQ,SACRgK,OAAQ,yBCRJ,SAAU5lB,EAASzE,GACvB,OAAO,IAAIsqB,QAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAc3qB,GACrByqB,EAAOG,OAAS,KACdL,EAASE,EAAO3U,OAAkB7N,MAAM,KAAK,GAAE,EAEjDwiB,EAAOI,QAAUnP,IACf8O,EAAO9O,EAAK,CACd,EAEJ,CAEM,SAAUnd,EAASyB,GACvB,OAAO,IAAIsqB,QAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAS,IAAIC,WACnBD,EAAOK,WAAW9qB,GAClByqB,EAAOG,OAAS,KACdL,EAAQE,EAAO3U,OAAgB,EAEjC2U,EAAOI,QAAUnP,IACf8O,EAAO9O,EAAK,CACd,EAEJ,8IClBA,MAAM3C,EAAW,CACfC,SAAS,EACThb,KAAM,uBACN+sB,MAAO,CACLrQ,kBAAkB,IAUf,IAAMP,EAAqB,MAA5B,MAAOA,UAA6B6Q,IAIxCttB,YACSutB,EACAC,GAEP1Y,QAHO1U,KAAAmtB,SACAntB,KAAAotB,QAJTptB,KAAAuE,IAAM,IAAIC,IAAUyW,EAOpB,CAEAnD,cACEpD,MAAM2Y,SACR,CAEA,YAAI9Q,GAAa,OAAOvc,KAAKotB,MAAM7Q,QAAU,CAE7C,OAAI/Y,GAAQ,OAAOxD,KAAKmtB,OAAO3pB,GAAK,CAEpCyc,QAAmB,OAAOjgB,KAAKmtB,OAAOG,uBAAuBC,QAAQtN,KAAY,CAK1ErD,iBAAiB4Q,GACtB,MAAMC,EAAIztB,KAAKuE,IAAImpB,KAAK,oBACxB1tB,KAAK+V,cAAcC,IACjBhW,KAAK2tB,qBAAqBtX,UAAU,KAAQmX,GAAQ,IAEtDC,EAAEG,KACJ,CAMOC,QAAQrqB,EAAa+pB,GAC1B,OAAOvtB,KAAKmtB,OAAOW,SAAS,CAACtqB,GAAM+pB,EACrC,CAKOrO,YAAY6O,EAAiBR,GAClC,OAAOvtB,KAAKmtB,OAAOW,SAASC,EAAU,IAAKR,EAAQS,WAAYhuB,KAAKotB,OACtE,CAEOa,oBAAoBF,EAAiBR,GAC1C,OAAOvtB,KAAKmtB,OAAOW,SAASC,EAAU,IAAKR,EAAQS,WAAYhuB,KAAKotB,MAAMc,OAAOC,YACnF,CAEAR,qBACE,OAAO3tB,KAAKmtB,OAAOiB,OAAOttB,QACxBuE,KAAO6S,GAASA,aAAiBmW,OAAa,EAC9ClY,OAAYnW,KAAKotB,MAAM7Q,SAAS4R,aAAU,EAC1CptB,KAAI,MAAQf,KAAKotB,MAAM7Q,SAAS4R,aAAU,EAC1CG,QAAQ,EACRjpB,KAAO,EAAEkpB,EAAgBC,KAAiBD,IAAmBC,GAEjE,CAACjsB,SAAAvC,KAAA,mBAAAwC,iBA3DU6Z,GAAoB5Z,MAAAC,MAAAD,MAAAC,MAAA,EAAAH,SAAAvC,KAAA,WAAAyuB,EAAA3rB,IAAA,OAApBuZ,EAAoBtZ,QAApBsZ,EAAoBrZ,mBAApBqZ,CAAqB,yFCX5B,SAAUqS,EACdC,GAEA,SAAO7tB,QACLsV,QAAoB,EACpBrV,KAAI4tB,IAAE,EACNvY,OAEJ,CAEM,SAAUY,EACd2X,GAEA,SAAO7tB,QACLsV,QAAoB,EACpBrV,KAAI4tB,IAAE,EACNvY,KAAqBwY,KAEzB,mCCzBM,MAAOvX,EAEX,iBAAOwX,CAAWC,EAAYC,GAC5B,OAAOD,IAAMC,CACf,CAEA,mBAAOC,CAAaF,EAAWC,GAC7B,OAAOD,IAAMC,CACf,CAEA,kBAAOE,CAAeH,EAAMC,GAC1B,OAAOD,IAAMC,CACf,CAEA,mBAAOG,CAAgBJ,EAAMC,GAC3B,GAAS,MAALD,GAAkB,MAALC,EAAW,OAAOD,IAAMC,EAEzC,MAAMI,EAAOL,EACPM,EAAOL,EAEPM,EAAQluB,OAAOC,KAAK+tB,GACpBG,EAAQnuB,OAAOC,KAAKguB,GAC1B,OAAIC,EAAM7mB,SAAW8mB,EAAM9mB,QAEb6mB,EAAME,MAAMC,KACnBJ,EAAKK,eAAeD,IAElBL,EAAKK,KAAUJ,EAAKI,GAI/B,CAEA,kBAAOlY,CAAewX,EAAQC,GAC5B,OAAS,MAALD,GAAkB,MAALC,EAAkBD,IAAMC,EAErCD,EAAEtmB,SAAWumB,EAAEvmB,QAELsmB,EAAES,MAAM,CAAC9jB,EAAMikB,IACpBZ,EAAEY,KAAWX,EAAEW,GAI1B,CAGA,eAAOC,CAAYruB,EAAUouB,EAAeE,GAC1C,OAAOA,EAAMxG,QAAQ9nB,KAAWouB,CAClC,gFC3CK,IAAM1T,EAAmB,MAA1B,MAAOA,EASXpc,YAAoB0b,GAAAtb,KAAAsb,WAPZtb,KAAA6vB,cAAaC,OAAqB,MAE1C9vB,KAAAgb,WAAU+U,OAAS,MAAQ/vB,KAAK6vB,cAAcG,kBAAoBhwB,KAAK6vB,cAAcI,cAGrFjwB,KAAAkwB,iBAAgBC,MAAanwB,KAAKgb,SAGhC,MAAMoV,EAAwB,CAC5BhpB,GAAI,EACJ6oB,aAAmD,SAArCzR,eAAeC,QAAQ4R,MACrCL,gBAAgB,GAElBhwB,KAAK6vB,WAAWS,IAAIF,EACtB,CAEA3qB,WAAW8qB,GACT,MAAMC,EAAYxwB,KAAK6vB,aACvB,GAAIW,EAAUR,iBAAmBO,EAC/B,OAEF,MAAME,EAA0B,IAC3BD,EACHR,eAAgBO,GAElBvwB,KAAK6vB,WAAWS,IAAIG,EACtB,CAEAjI,qBACE,MAAMgI,EAAYxwB,KAAK6vB,aACvB,IAAKW,EAAUR,eAEb,YADAhwB,KAAKsb,SAAS3X,KAAK,sDAAuD,KAAM,CAAE8c,SAAU,MAI9F,MAAMgQ,EAA0B,IAC3BD,EACHP,cAAeO,EAAUP,cAE3BjwB,KAAK6vB,WAAWS,IAAIG,GACpBzwB,KAAKsb,SAAS3X,KAAK8sB,EAAUR,aAAe,oBAAsB,qBAAsB,KAAM,CAAExP,SAAU,KAC5G,CAACle,SAAAvC,KAAA,mBAAAwC,iBA3CUwZ,GAAmBvZ,MAAAC,MAAA,EAAAH,SAAAvC,KAAA,WAAAiI,EAAAnF,IAAA,OAAnBkZ,EAAmBjZ,QAAnBiZ,EAAmBhZ,UAAA6C,WADN,gBACbmW,CAAmB,kFCAhC,MAAMf,EAAW,CACfC,SAAS,EACThb,KAAM,eACN+sB,MAAO,CACLyD,KAAK,EACLC,sBAAsB,EACtBC,aAAa,IAKV,IAAMC,EAAY,MAAnB,MAAOA,EAGXjxB,YAAoBC,EAA0BC,GAA1BE,KAAAH,OAA0BG,KAAAF,UAD9CE,KAAAuE,IAAM,IAAIC,IAAUyW,EAC8C,CAElE0V,qBAAqBG,EAAkBvwB,EAAgB2pB,EAAgB6G,GACrE/wB,KAAKuE,IAAImpB,KAAK,uBAAwB,CAAEoD,WAAUvwB,SAAQ2pB,SAAQ6G,mBAElE,MAAMC,IAAczwB,EAQd0wB,KAPc1wB,GAAQyf,qBAAuB,IACtB3W,SAAS,UAEtB,GAAK,UAAUrJ,KAAKF,QAAQU,UACvCwwB,EAAY,IAAIzwB,IAAW,IAC5B,aAAe2pB,GAAU,KAEDva,UAAU,GACtC,OAAO3P,KAAKH,KAAK6B,KAAmB,kBAAkBovB,KAAYG,IAChE,CACEC,MAAOH,GAGb,CAEAH,aAAc/f,eAAcsgB,UAASjH,SAAQ3lB,QAC3CvE,KAAKuE,IAAImpB,KAAK,cAAe,CAAEnpB,MAAKsM,eAAcsgB,UAASjH,WAO3D,MAAM+G,GALJ,eAAiBpgB,GAAcpN,KAAK,MAAQ,IAC1C,UAAUzD,KAAKF,QAAQU,kBACR2wB,GAAS1tB,KAAK,MAAQ,IACrC,aAAeymB,GAAU,KAEDva,UAAU,GACtC,OAAO3P,KAAKH,KAAK6B,KACf,8CAA8CuvB,IAC9C,GAEJ,CAAC1uB,SAAAvC,KAAA,mBAAAwC,iBArCUquB,GAAYpuB,MAAAC,MAAAD,MAAAE,KAAA,EAAAJ,SAAAvC,KAAA,WAAA6C,EAAAC,IAAA,OAAZ+tB,EAAY9tB,QAAZ8tB,EAAY7tB,mBAAZ6tB,CAAY,8DCblB,IAAe3D,EAAW,MAA3B,MAAgBA,EADtBttB,cAGYI,KAAA+V,cAAgB,IAAIqb,KAG9BtZ,cACE9X,KAAKqtB,SACP,CAEAA,UACErtB,KAAK+V,cAAcsb,aACrB,CAAC9uB,SAAAvC,KAAA,mBAAAwC,iBAXmB0qB,EAAW,EAAA3qB,SAAAvC,KAAA,WAAAiI,EAAAnF,IAAA,OAAXoqB,EAAWnqB,QAAXmqB,EAAWlqB,mBAAXkqB,CAAW,wECqHjC,SAASiD,EAAamB,EAAQC,IACzBA,GAASC,aAAYC,OAAyBtB,GAC/C,MAAMqB,EAAWD,GAASC,aAAYzV,OAAO2V,OACvCC,EAAU,IAAIC,IAAc,GAC5BC,KAAUC,OAAO,KACnB,IAAIxwB,EACJ,IACIA,EAAQgwB,GACZ,OACO3O,GAEH,YADAoP,SAAU,IAAMJ,EAAQ/T,MAAM+E,GAElC,EACAoP,SAAU,IAAMJ,EAAQjb,KAAKpV,GAAM,EACpC,CAAEkwB,WAAUQ,eAAe,IAC9BR,SAASlxB,IAAI2xB,OAAYC,UAAU,KAC/BL,EAAQxE,UACRsE,EAAQ5Z,UAAS,GAEd4Z,EAAQQ,cACnB,CA0BA,SAASC,EAASd,EAAQC,GAItB,MAAMc,GAAmBd,GAASS,cAClCK,IAAoBd,GAASC,aAAYC,OAAyBW,GAClE,MAAME,EAAaD,EAAkBd,GAASC,UAAUlxB,IAAI2xB,SAAU,EAAKlW,OAAOkW,OAAc,KAGhG,IAAIhS,EAGAA,KAAQ6P,OAFRyB,GAASgB,YAEM,CAAEC,KAAM,GAIR,CAAEA,KAAM,EAAyBlxB,MAAOiwB,GAASkB,eAQpE,MAAMC,EAAMpB,EAAOjb,UAAU,CACzBK,KAAMpV,GAAS2e,EAAMqQ,IAAI,CAAEkC,KAAM,EAAyBlxB,UAC1Dsc,MAAOA,IACH,GAAI2T,GAASoB,aAGT,MAAM/U,EAEVqC,EAAMqQ,IAAI,CAAEkC,KAAM,EAAyB5U,SAAO,IAS1D0U,UAAYJ,UAAUQ,EAAIrB,YAAYuB,KAAKF,KAAI,EAGxC3C,OAAS,KACZ,MAAM8C,EAAU5S,IAChB,OAAQ4S,EAAQL,MACZ,KAAK,EACD,OAAOK,EAAQvxB,MACnB,KAAK,EACD,MAAMuxB,EAAQjV,MAClB,KAAK,EAGD,MAAM,IAAIkV,MAAc,IAA4D,uFAC5F,EAER","names":["webApiTypeRoot","webApiTypeScopes","ContentTypesService","constructor","http","context","dnnContext","this","apiUrl","name","$2sxc","retrieveContentType","staticName","get","params","appId","toString","contentTypeId","retrieveContentTypes","scope","getScopes","pipe","map","scopesData","scopes","old","Object","keys","key","value","getScopesV2","save","contentType","post","appid","delete","StaticName","import","files","formData","FormData","file","append","zoneId","createGhost","sourceStaticName","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_2__","jDH","factory","ɵfac","ExportAppPartsService","getContentInfo","webApiAppPartsRoot","exportParts","contentTypeIds","entityIds","templateIds","url","join","window","open","ExportAppService","getAppInfo","webApiAppRoot","exportAppUrl","exportForVersionControl","includeContentGroups","resetAppGuid","withFiles","withPortalFiles","GlobalDialogConfigService","globalConfigService","log","EavLogger","dialogSettings$","a","svcId","getShared$","getDialogSettings","shareReplay","refCount","reqBy","dlgSettings","Context","Language","List","filter","language","IsEnabled","tap","allowDebug","Enable","DebugMode","_angular_core__WEBPACK_IMPORTED_MODULE_6__","providedIn","ImportAppPartsService","importAppParts","resetApp","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","webApiEntityList","importQuery","from","toBase64","switchMap","fileBase64","AppId","ContentBase64","success","Success","Messages","clonePipeline","id","Id","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","export","getPolymorphism","getUsage","guid","_angular_core__WEBPACK_IMPORTED_MODULE_1__","EntityFilterComponent","idFilterString","idFilter","agInit","filterParams","isFilterActive","length","doesFilterPass","values","valueGetter","api","colDef","column","columnApi","data","node","getValue","field","some","includes","items","headerName","idFltr","itm","getModel","filterType","setModel","model","afterGuiAttached","valueInputRef","nativeElement","focus","updateIdFilter","split","el","parseInt","isNaN","filterChanged","filterChangedCallback","core","VBU","selectors","viewQuery","rf","ctx","$event","_r1","FormsModule","MatRadioModule","MatFormFieldModule","MatInputModule","styles","_r2","ctx_r2","do","item","_EditInfo","DisableDelete","ContentItemsActionsComponent","refresh","verb","standalone","features","decls","vars","consts","template","ContentItemsActionsComponent_ng_template_12_Template","menu_r4","MatRippleModule","MatIconModule","MatMenuModule","ctx_r0","entities","ContentItemsEntityComponent","Array","isArray","encodedValue","htmlEncode","allowMultiValue","text","replace","ContentItemsEntityComponent_Conditional_1_Template","TippyDirective","ctx_r1","openMetadata","_c0","metadataCount","metadata","metadataTooltip","ContentItemsStatusComponent","disableMetadata","DisableMetadata","Metadata","mdf","For","Target","TargetType","KeyNumber","KeyString","KeyGuid","Title","onOpenMetadata","ContentItemsStatusComponent_Conditional_4_Template","ContentItemsStatusComponent_Conditional_5_Template","published","NgClass","MatBadgeModule","metadataKeyValidator","form","control","keyType","controls","testValue","eavConstants","keyTypes","number","test","patternWholeNumber","hasCurly","bracket","substring","guidRegex","patternGuid","option_r2","targetType","label","vm_r3","formValues","CreateMetadataDialogComponent_Conditional_0_Conditional_14_For_2_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_14_Conditional_3_Template","ctx_r3","targetTypeOptions","unknownTargetType","targetTypeHint","option_r5","contentType_r6","Label","CreateMetadataDialogComponent_Conditional_0_Conditional_27_For_5_Template","contentTypes","scopeOption_r7","CreateMetadataDialogComponent_Conditional_0_Conditional_28_For_5_Template","scopeOptions","dropdownInsertValue","item_r8","Guid","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Case_0_Conditional_0_For_2_Template","contentItems","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Case_0_Conditional_0_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Case_0_Conditional_1_Template","guidedKey","contentType_r9","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Case_1_Conditional_0_For_2_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Case_1_Conditional_0_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Case_1_Conditional_1_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Case_2_ng_container_0_Template","defaultKeyInput_r10","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Case_0_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Case_1_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Case_2_Template","tmp_4_0","entity","CreateMetadataDialogComponent_Conditional_0_Conditional_37_Conditional_0_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_37_Conditional_1_Template","CreateMetadataDialogComponent_Conditional_0_ng_template_38_Conditional_0_Template","CreateMetadataDialogComponent_Conditional_0_ng_template_38_Conditional_1_Template","_r11","toggleGuidedKey","CreateMetadataDialogComponent_Conditional_0_Conditional_14_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_15_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_16_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_17_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_18_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_19_Template","CreateMetadataDialogComponent_Conditional_0_For_25_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_26_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_27_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_28_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_37_Template","CreateMetadataDialogComponent_Conditional_0_ng_template_38_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_40_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_41_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_42_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_43_Template","toggleGuidedMode","closeDialog","confirm","guidedMode","touched","invalid","errors","required","pattern","keyTypeOptions","guidedKeyExists","valid","CreateMetadataDialogComponent","BaseComponent","dialogRef","super","hostClass","contentItemsService","transient","ContentItemsService","contentTypesService","ngOnInit","option","keyTypeOptions$","BehaviorSubject","scopeOptions$","guidedMode$","contentItems$","contentTypes$","guidedKey$","fetchScopes","UntypedFormGroup","addControl","UntypedFormControl","Validators","default","subscriptions","add","scopeForContentTypes","valueChanges","startWith","distinctUntilChanged","subscribe","newScope","contentTypeForContentItems","patchValue","prompt","next","fetchContentTypes","merge","getRawValue","contentTypeStaticName","formValues$","mapUntilObjChanged","m","combineLatest","foundTargetType","find","RxHelpers","arraysEqual","updatedForm","isAppMetadata","app","ControlHelpers","disableControl","viewModel$","hint","ngOnDestroy","complete","result","close","event","checked","target","hostVars","hostBindings","CreateMetadataDialogComponent_Conditional_0_Template","tmp_0_0","ReactiveFormsModule","i4","MatSelectModule","i5","i6","MatOptionModule","i7","NgTemplateOutlet","MatButtonModule","i8","i9","MatDialogActions","MatSlideToggleModule","i10","AsyncPipe","FieldHintComponent","ClickStopPropagationDirective","PubMetaFilterComponent","hasMetadata","publishedPassed","metadataPassed","hasMetadataPassed","_r3","debugFilter","ContentItemsComponent_Conditional_0_Conditional_9_Template","onGridReady","filesDropped","exportContent","importContent","importItem","createMetadata","ContentItemsComponent_Conditional_0_Conditional_34_Template","editItem","vm_r4","Name","tmp_3_0","Properties","ListInstructions","gridOptions","isDebug","logSpecs","enabled","ContentItemsComponent","#dialogRouter","#contentTypeStaticName","snackBar","dialog","viewContainerRef","changeDetectorRef","contentType$","Subject","items$","undefined","defaultGridOptions","inject","GlobalConfigService","entitiesService","EntityEditService","contentExportService","ContentExportService","DialogRoutingService","gridApi$","snapshot","paramMap","fetchContentType","fetchItems","fetchColumns","doOnDialogClosed","getColumns","columns","columnsWithoutEphemeral","IsEphemeral","columnDefs","buildColumnDefs","filterModel","buildFilterModel","urlFilters","filters","charAt","atob","JSON","parse","console","error","IsPublished","IsMetadata","Status","entries","forEach","c","type","filterTo","JsonHelpers","tryParse","v","sessionStorage","getItem","keyFilters","setColumnDefs","gridApi","take","setFilterModel","GoToMetadata","getUrlEntity","_Title","navRelative","EditPrep","newFromType","editId","formUrl","convertFormToUrl","getFilterModel","hasFilters","ids","forEachNodeAfterFilterAndSort","rowNode","push","importFile","lastIndexOf","toLocaleLowerCase","state","autoFocus","width","afterClosed","itemFor","newMetadataFromInfo","markForCheck","warn","duration","ColumnDefinitions","IdWithDefaultRenderer","cellClass","ReadOnly","cellRendererParams","idFieldParamsTooltipGetter","headerClass","cellRenderer","flex","minWidth","sortable","onCellClicked","headerTooltip","_Used","_Uses","ActionsPinnedRight3","clone","Type","DataTypeCatalog","Entity","AllowMultiValue","valueGetterEntityField","DateTime","useTimePicker","UseTimePicker","valueGetterDateTime","Boolean","valueGetterBoolean","BooleanFilterComponent","Number","copy","exportEntity","_RepositoryId","err","dismiss","ExceptionMessage","rawValue","ContentItemsComponent_Conditional_0_Template","RouterOutlet","SafeHtmlPipe","DragAndDropDirective","ToggleDebugDirective","SxcGridModule","TrueFalseComponent","trueIcon","falseIcon","reverse","icon","_angular_core__WEBPACK_IMPORTED_MODULE_0__","encapsulation","ImportAppService","importApp","changedName","retryOnDuplicate","MessageType","FileUploadMessageTypes","Warning","folderName","Text","of","_angular_core__WEBPACK_IMPORTED_MODULE_4__","AgBoolCellIconsDefault","states","true","tooltip","false","AgBoolIconRenderer_Conditional_1_ng_container_1_Template","showIcon_r2","clickable","AgBoolIconRenderer","allSettings","settings","d","getUrl","AgBoolIconRenderer_Conditional_1_Template","AgBoolIconRenderer_Conditional_2_Template","AgBoolIconRenderer_ng_template_3_Template","cellClassSecAction","actionsRight","pinned","textSortFilter","ActionsPinnedRight1","ActionsPinnedRight4","ActionsPinnedRight5","ActionsPinnedRight6","ActionsPinnedRight7","IconShow","IsHidden","Items","Fields","Character","IdFieldComponent","Boolean2","Boolean3","TextWideType","TextWide","TextWideMin100","TextWideFlex3","TextNarrow","TextWideActionClass","tooltipGetter","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","isError","isShort","toggleIsShort","inputs","ngContentSelectors","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c1","tmp_2_0","align","copyToClipboard","onClick","stopPropagation","FsC","navigator","platform","match","metaKey","ctrlKey","shiftKey","altKey","toggleDebugEnabled","getSelection","removeAllRanges","webApiFieldsRoot","webApiFieldsAll","webApiFieldsGetShared","ContentTypesFieldsService","typeListRetrieve","getInputTypesList","inputConfigs","config","dataType","indexOf","inputType","description","Description","isDefault","IsDefault","isObsolete","IsObsolete","isRecommended","IsRecommended","obsoleteMessage","ObsoleteMessage","getReservedNames","getFields","fields","fld","md","merged","All","InputType","getShareableFields","getShareableFieldsFor","attributeId","addInheritedField","targetContentTypeId","sourceContentTypeStaticName","sourceFieldGuid","newName","ContentTypeId","SourceType","SourceField","share","inherit","inheritMetadataOf","reOrder","idArray","order","stringify","setTitle","rename","fieldId","IsTitle","Error","newField","Index","SortOrder","updateInputType","_angular_core__WEBPACK_IMPORTED_MODULE_3__","Custom","Empty","Hyperlink","String","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","readAsText","specs","ServiceBase","router","route","destroy","getCurrentNavigation","extras","callback","l","fnIf","childDialogClosed$","end","navPath","navigate","commands","relativeTo","navParentFirstChild","parent","firstChild","events","NavigationEnd","pairwise","hadChildBefore","hasChildNow","_angular_core__WEBPACK_IMPORTED_MODULE_7__","mapUntilChanged","fn","isEqual","boolEquals","x","y","stringEquals","valueEquals","objectsEqual","obj1","obj2","keys1","keys2","every","key1","hasOwnProperty","index","distinct","array","debugState","signal","computed","allowDebugMode","debugEnabled","debugEnabled$","toObservable","initial","keyDebug","set","allow","oldConfig","newConfig","all","getAvailableEntities","getEntities","QueryService","queryUrl","entitiesFilter","hasParams","urlParams","Guids","itemIds","Subscription","unsubscribe","source","options","injector","assertInInjectionContext","Injector","subject","ReplaySubject","watcher","effect","untracked","manualCleanup","DestroyRef","onDestroy","asObservable","toSignal","requiresCleanup","cleanupRef","requireSync","kind","initialValue","sub","rejectErrors","bind","current","ɵRuntimeError"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/app-administration/services/global-dialog-config.service.ts","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/shared/components/entity-filter/entity-filter.component.ts","./projects/eav-ui/src/app/shared/components/entity-filter/entity-filter.component.html","./projects/eav-ui/src/app/content-items/content-items-actions/content-items-actions.component.html","./projects/eav-ui/src/app/content-items/content-items-actions/content-items-actions.component.ts","./projects/eav-ui/src/app/content-items/content-items-entity/content-items-entity.component.html","./projects/eav-ui/src/app/content-items/content-items-entity/content-items-entity.component.ts","./projects/eav-ui/src/app/content-items/content-items-status/content-items-status.component.html","./projects/eav-ui/src/app/content-items/content-items-status/content-items-status.component.ts","./projects/eav-ui/src/app/content-items/create-metadata-dialog/metadata-key.validator.ts","./projects/eav-ui/src/app/content-items/create-metadata-dialog/create-metadata-dialog.component.html","./projects/eav-ui/src/app/content-items/create-metadata-dialog/create-metadata-dialog.component.ts","./projects/eav-ui/src/app/content-items/pub-meta-filter/pub-meta-filter.component.ts","./projects/eav-ui/src/app/content-items/pub-meta-filter/pub-meta-filter.component.html","./projects/eav-ui/src/app/content-items/content-items.component.html","./projects/eav-ui/src/app/content-items/content-items.component.ts","./projects/eav-ui/src/app/content-items/content-items.helpers.ts","./projects/eav-ui/src/app/dev-rest/api/true-false/true-false.component.ts","./projects/eav-ui/src/app/dev-rest/api/true-false/true-false.component.html","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-params.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.html","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.component.ts","./projects/eav-ui/src/app/shared/ag-grid/column-definitions.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.html","./projects/eav-ui/src/app/shared/constants/dropdown-insert-value.constant.ts","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/directives/toggle-debug.directive.ts","./projects/eav-ui/src/app/shared/fields/content-types-fields.service.ts","./projects/eav-ui/src/app/shared/fields/data-type-catalog.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts","./projects/eav-ui/src/app/shared/rxJs/mapUntilChanged.ts","./projects/eav-ui/src/app/shared/rxJs/rx.helpers.ts","./projects/eav-ui/src/app/shared/services/global-config.service.ts","./projects/eav-ui/src/app/shared/services/query.service.ts","./projects/eav-ui/src/app/shared/services/service-base.ts","./node_modules/@angular/core/fesm2022/rxjs-interop.mjs"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\n\r\n// We should list all the \"full\" paths here, so it's easier to find when searching for API calls\r\nexport const webApiTypeRoot = 'admin/type/';\r\nconst webApiTypeGet = 'admin/type/get';\r\nconst webApiTypes = 'admin/type/list';\r\nconst webApiTypeScopes = 'admin/type/scopes';\r\nconst webApiTypeSave = 'admin/type/save';\r\nconst webApiTypeDelete = 'admin/type/delete';\r\nconst webApiTypeImport = 'admin/type/import';\r\nconst webApiTypeAddGhost = 'admin/type/addghost';\r\n\r\n@Injectable()\r\nexport class ContentTypesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get<ContentType>(this.apiUrl(webApiTypeGet), {\r\n      params: { appId: this.context.appId.toString(), contentTypeId: staticName }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get<ContentType[]>(this.apiUrl(webApiTypes), {\r\n      params: { appId: this.context.appId.toString(), scope }\r\n    });\r\n  }\r\n\r\n  // TODO: remove this method after upgrade to V2\r\n  getScopes() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopesData => {\r\n        // wip during upgrade:\r\n        const scopes = scopesData.old;\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getScopesV2() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopesData => scopesData.scopes),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeSave), contentType, {\r\n      params: { appid: this.context.appId.toString() },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeDelete), {\r\n      params: { appid: this.context.appId.toString(), staticName: contentType.StaticName },\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeAddGhost), null, {\r\n      params: { appid: this.context.appId.toString(), sourceStaticName },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\n\r\n@Injectable()\r\nexport class ExportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getContentInfo(scope: string) {\r\n    return this.http.get<ContentInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Get'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString(), scope },\r\n    });\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.context.appId.toString()\r\n      + '&zoneId=' + this.context.zoneId.toString()\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AppInfo } from '../models/app-info.model';\r\n\r\n@Injectable()\r\nexport class ExportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAppInfo() {\r\n    return this.http.get<AppInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Statistics'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString() },\r\n    });\r\n  }\r\n\r\n  /** Generate the export app path. It can be extended with additional parameters */\r\n  exportAppUrl() {\r\n    return `${this.dnnContext.$2sxc.http.apiUrl(`${webApiAppRoot}Export`)}?appId=${this.context.appId}&zoneId=${this.context.zoneId}`;\r\n  }\r\n\r\n  exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'SaveData'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable, shareReplay, tap } from 'rxjs';\r\nimport { DialogSettings } from '../../shared/models/dialog-settings.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { EavLogger } from '../../shared/logging/eav-logger';\r\nimport { GlobalConfigService } from '../../shared/services/global-config.service';\r\n\r\nconst logThis = false;\r\nconst nameOfThis = 'GlobalDialogConfigService';\r\n\r\nconst webApiSettings = 'admin/dialog/settings';\r\n\r\n/**\r\n * Service for getting dialog settings for the current app.\r\n * \r\n * Note that it should normally be shared, to save resources / network calls.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class GlobalDialogConfigService {\r\n\r\n  log = new EavLogger(nameOfThis, logThis);\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private context: Context,\r\n    private globalConfigService: GlobalConfigService,\r\n  ) {\r\n    this.log.a(`using context #${this.context.log.svcId}`);\r\n  }\r\n\r\n  private dialogSettings$: Record<number, Observable<DialogSettings>> = {};\r\n\r\n  getShared$(appId: number): Observable<DialogSettings> {\r\n    this.log.a('getShared$ appId: ' + appId);\r\n    this.dialogSettings$[appId] ??= this.getDialogSettings(appId, 'getShared$')\r\n      .pipe(shareReplay({ refCount: false }));\r\n    return this.dialogSettings$[appId];\r\n  }\r\n\r\n  private getDialogSettings(appId?: number, reqBy?: string): Observable<DialogSettings> {\r\n    this.log.a('getDialogSettings', {appId, reqBy});\r\n    return this.http.get<DialogSettings>(webApiSettings, {\r\n      params: { appId: appId ?? this.context.appId.toString() },\r\n    }).pipe(\r\n      map(dlgSettings => {\r\n        dlgSettings.Context.Language.List = dlgSettings.Context.Language.List.filter(language => language.IsEnabled);\r\n        return dlgSettings;\r\n      }),\r\n      tap(dlgSettings => {\r\n        this.globalConfigService.allowDebug(dlgSettings.Context.Enable.DebugMode);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Query } from '../models/query.model';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get<Query[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryImport), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViews), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.context.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.dnnContext.$2sxc.http.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.context.appId.toString(), guid }\r\n    });\r\n  }\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component, ElementRef, ViewChild } from '@angular/core';\r\nimport { EntityFilterModel } from './entity-filter.model';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\n@Component({\r\n  selector: 'app-entity-filter',\r\n  templateUrl: './entity-filter.component.html',\r\n  styleUrls: ['./entity-filter.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    MatRadioModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n  ]\r\n})\r\nexport class EntityFilterComponent implements IFilterAngularComp {\r\n  @ViewChild('valueInput') private valueInputRef: ElementRef<HTMLInputElement>;\r\n\r\n  filter = '';\r\n  idFilterString = '';\r\n\r\n  private filterParams: IFilterParams;\r\n  private idFilter: number[] = [];\r\n\r\n  agInit(params: IFilterParams): void {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.filter !== '' || this.idFilter.length > 0;\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    if (this.filter !== '') {\r\n      const valueGetterParams: ValueGetterParams = {\r\n        api: this.filterParams.api,\r\n        colDef: this.filterParams.colDef,\r\n        column: this.filterParams.column,\r\n        columnApi: this.filterParams.columnApi,\r\n        context: this.filterParams.context,\r\n        data: params.node.data,\r\n        getValue: (field) => params.node.data[field],\r\n        node: params.node,\r\n      };\r\n      const values: string[] | undefined = this.filterParams.valueGetter(valueGetterParams);\r\n      if (values == null) { return false; }\r\n      if (!values.some(value => !!value && value.includes(this.filter))) { return false; }\r\n    }\r\n\r\n    if (this.idFilter.length > 0) {\r\n      const items: { Id: number; Title: string; }[] | undefined = params.data[this.filterParams.colDef.headerName];\r\n      if (items == null) { return false; }\r\n      if (!this.idFilter.some(idFltr => items.some(itm => itm.Id === idFltr))) { return false; }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  getModel(): EntityFilterModel {\r\n    if (!this.isFilterActive()) return;\r\n    const model: EntityFilterModel = {\r\n      filterType: 'entity',\r\n      filter: this.filter,\r\n      idFilter: this.idFilter,\r\n    };\r\n    return model;\r\n  }\r\n\r\n  setModel(model: EntityFilterModel): void {\r\n    this.filter = model?.filter ?? '';\r\n    this.idFilter = model?.idFilter ?? [];\r\n    this.idFilterString = model?.idFilter?.join(',') ?? '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams): void {\r\n    this.valueInputRef.nativeElement.focus();\r\n  }\r\n\r\n  updateIdFilter(): void {\r\n    this.idFilter = this.idFilterString.split(',').map(el => parseInt(el, 10)).filter(el => !isNaN(el));\r\n  }\r\n\r\n  filterChanged(): void {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n  <mat-label>Value</mat-label>\r\n  <input matInput type=\"text\" [(ngModel)]=\"filter\" (ngModelChange)=\"filterChanged()\" #valueInput>\r\n</mat-form-field>\r\n\r\n<mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n  <mat-label>IDs (comma separated)</mat-label>\r\n  <input matInput type=\"text\" [(ngModel)]=\"idFilterString\" (ngModelChange)=\"updateIdFilter(); filterChanged()\">\r\n</mat-form-field>\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Copy\" (click)=\"do('clone')\">\r\n    <mat-icon>file_copy</mat-icon>\r\n  </div>\r\n  <div class=\" eav-grid-action-button highlight\" matRipple tippy=\"Export\" (click)=\"do('export')\">\r\n    <mat-icon>cloud_download</mat-icon>\r\n  </div>\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"More\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"grid-more-menu\">\r\n  <ng-template matMenuContent>\r\n    <button mat-menu-item [disabled]=\"item._EditInfo.DisableDelete\" (click)=\"do('delete')\">\r\n      <mat-icon>delete</mat-icon>\r\n      <span>Delete</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { ContentItem } from '../models/content-item.model';\r\nimport { ContentItemsActionsParams, ContentItemType } from './content-items-actions.models';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRippleModule } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-content-items-actions',\r\n  templateUrl: './content-items-actions.component.html',\r\n  styleUrls: ['./content-items-actions.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n  ],\r\n})\r\nexport class ContentItemsActionsComponent implements ICellRendererAngularComp {\r\n  item: ContentItem;\r\n\r\n  private params: ICellRendererParams & ContentItemsActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & ContentItemsActionsParams): void {\r\n    this.params = params;\r\n    this.item = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n\r\n  do(verb: ContentItemType): void {\r\n    this.params.do(verb, this.item);\r\n  }\r\n}\r\n","<div [tippy]=\"encodedValue\">\r\n  @if (entities) {\r\n  <span class=\"more-entities\">{{ entities }}</span>\r\n  }\r\n  {{ encodedValue }}\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { ExtendedColDef } from '../models/extended-col-def.model';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-content-items-entity',\r\n  templateUrl: './content-items-entity.component.html',\r\n  styleUrls: ['./content-items-entity.component.scss'],\r\n  standalone: true,\r\n  imports: [TippyDirective,],\r\n})\r\nexport class ContentItemsEntityComponent implements ICellRendererAngularComp {\r\n  encodedValue: string;\r\n  entities: number;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    if (!Array.isArray(params.value)) return;\r\n\r\n    this.encodedValue = this.htmlEncode(params.value.join(', '));\r\n    if ((params.colDef as ExtendedColDef).allowMultiValue) {\r\n      this.entities = params.value.length;\r\n    }\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  // htmlencode strings (source: https://stackoverflow.com/a/7124052)\r\n  private htmlEncode(text: string) {\r\n    return text.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button icon\" [tippy]=\"value.published ? 'Published' : 'Not published'\">\r\n    <mat-icon>{{ value.published ? 'visibility' : 'visibility_off' }}</mat-icon>\r\n  </div>\r\n\r\n  @if (!disableMetadata) {\r\n  <div class=\"eav-grid-action-button highlight\" matRipple\r\n    [ngClass]=\"{ 'hide-until-row-hover': !metadataCount && !value.metadata }\" [tippy]=\"metadataTooltip\"\r\n    (click)=\"openMetadata()\">\r\n    <mat-icon [matBadge]=\"metadataCount\" matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadgeHidden]=\"!metadataCount\"\r\n      matBadgePosition=\"below after\" aria-hidden=\"false\">{{ value.metadata ? 'loyalty' : 'local_offer' }}\r\n    </mat-icon>\r\n  </div>\r\n  }\r\n  @if (disableMetadata && !(!metadataCount && !value.metadata)) {\r\n  <div class=\"eav-grid-action-button disabled\">\r\n    <mat-icon [matBadge]=\"metadataCount\" matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadgeDisabled=\"true\"\r\n      [matBadgeHidden]=\"!metadataCount\" matBadgePosition=\"below after\" aria-hidden=\"false\">{{ value.metadata ? 'loyalty'\r\n      : 'local_offer' }}\r\n    </mat-icon>\r\n  </div>\r\n  }\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { ContentItem } from '../models/content-item.model';\r\nimport { PubMeta } from '../pub-meta-filter/pub-meta-filter.model';\r\nimport { ContentItemsStatusParams } from './content-items-status.models';\r\nimport { EavForInAdminUi } from '../../edit/shared/models/eav';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-content-items-status',\r\n  templateUrl: './content-items-status.component.html',\r\n  styleUrls: ['./content-items-status.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    MatRippleModule,\r\n    NgClass,\r\n    MatBadgeModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class ContentItemsStatusComponent implements ICellRendererAngularComp {\r\n  value: PubMeta;\r\n  disableMetadata: boolean;\r\n  metadataCount: number;\r\n  metadataTooltip: string;\r\n\r\n  private item: ContentItem;\r\n  private params: ICellRendererParams & ContentItemsStatusParams;\r\n\r\n  agInit(params: ICellRendererParams & ContentItemsStatusParams): void {\r\n    this.value = params.value;\r\n    this.params = params;\r\n    this.item = params.data;\r\n    this.disableMetadata = this.item._EditInfo.DisableMetadata;\r\n\r\n    this.metadataCount = this.item.Metadata?.length ?? 0;\r\n\r\n    const mdf = this.item.For as EavForInAdminUi;\r\n    this.metadataTooltip = mdf\r\n      ? 'This item is metadata for:'\r\n      + `\\nTarget: ${mdf.Target}`\r\n      + `\\nTargetType: ${mdf.TargetType}`\r\n      + (mdf.KeyNumber ? `\\nNumber: ${mdf.KeyNumber}` : '')\r\n      + (mdf.KeyString ? `\\nString: ${mdf.KeyString}` : '')\r\n      + (mdf.KeyGuid ? `\\nGuid: ${mdf.KeyGuid}` : '')\r\n      + (mdf.Title ? `\\nTitle: ${mdf.Title}` : '')\r\n      : 'This item is not metadata.';\r\n    this.metadataTooltip += `\\n\\nThis item has ${this.metadataCount > 0 ? this.metadataCount : 'no'} other metadata ${this.metadataCount === 1 ? 'item' : 'items'} attached to it.`;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  openMetadata(): void {\r\n    this.params.onOpenMetadata(this.item);\r\n  }\r\n}\r\n","import { AbstractControl, UntypedFormGroup, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { eavConstants, MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { guidRegex } from '../../shared/constants/guid.constants';\r\n\r\nexport function metadataKeyValidator(form: UntypedFormGroup): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    if (!control.value) { return null; }\r\n\r\n    const keyType: MetadataKeyType = form.controls['keyType'].value;\r\n    const testValue = (control.value as string | number).toString();\r\n\r\n    switch (keyType) {\r\n      case eavConstants.keyTypes.number:\r\n        const isWholeNumber = /^[0-9]+$/.test(testValue);\r\n        return !isWholeNumber ? { patternWholeNumber: true } : null;\r\n      case eavConstants.keyTypes.guid:\r\n        // allow curly brackets around guid\r\n        const hasCurly = ['{', '}'].some(bracket => testValue.includes(bracket));\r\n        const guid = testValue.substring(\r\n          hasCurly ? 1 : 0,\r\n          hasCurly ? testValue.length - 1 : testValue.length,\r\n        );\r\n        const isGuid = guidRegex().test(guid);\r\n        return !isGuid ? { patternGuid: true } : null;\r\n      case eavConstants.keyTypes.string:\r\n        return null;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Create Metadata</div>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <p>\r\n      This is a special operation to add an item which is metadata for another item,\r\n      see <a href=\"https://go.2sxc.org/metadata\" target=\"_blank\">docs</a>.\r\n    </p>\r\n    <form [formGroup]=\"form\">\r\n      <!-- Target Type -->\r\n      <mat-form-field color=\"accent\" style=\"width: 100%; margin-bottom: 8px;\">\r\n        <mat-label>Target</mat-label>\r\n        @if (vm.guidedMode) {\r\n        <mat-select formControlName=\"targetType\" required>\r\n          @for (option of targetTypeOptions; track option) {\r\n          <mat-option [value]=\"option.targetType\">\r\n            {{ option.label }}\r\n          </mat-option>\r\n          }\r\n          @if (vm.unknownTargetType) {\r\n          <mat-option [value]=\"vm.formValues.targetType\">\r\n            {{ vm.formValues.targetType }}\r\n          </mat-option>\r\n          }\r\n        </mat-select>\r\n        }\r\n        @if (!vm.guidedMode) {\r\n        <input matInput type=\"number\" min=\"0\" formControlName=\"targetType\" required>\r\n        }\r\n      </mat-form-field>\r\n      @if (form.controls['targetType'].touched && !form.controls['targetType'].invalid && vm.unknownTargetType) {\r\n      <app-field-hint [isError]=\"false\">\r\n        Warning: you entered an unknown target type. This may work or may not. Please be sure you know what you're\r\n        doing\r\n      </app-field-hint>\r\n      }\r\n      @if (vm.targetTypeHint) {\r\n      <app-field-hint [isError]=\"false\">{{ vm.targetTypeHint }}</app-field-hint>\r\n      }\r\n      @if (form.controls['targetType'].touched && form.controls['targetType'].errors?.required) {\r\n      <app-field-hint [isError]=\"true\">\r\n        This field is required\r\n      </app-field-hint>\r\n      }\r\n      @if (form.controls['targetType'].touched && form.controls['targetType'].errors?.pattern) {\r\n      <app-field-hint [isError]=\"true\">\r\n        Must be a whole number\r\n      </app-field-hint>\r\n      }\r\n      <!-- Key Type -->\r\n      <mat-form-field color=\"accent\" style=\"width: 100%; margin-bottom: 8px;\">\r\n        <mat-label>Key type</mat-label>\r\n        <mat-select formControlName=\"keyType\" required>\r\n          @for (option of vm.keyTypeOptions; track option) {\r\n          <mat-option [value]=\"option\">\r\n            {{ option }}\r\n          </mat-option>\r\n          }\r\n        </mat-select>\r\n      </mat-form-field>\r\n      @if (form.controls['keyType'].touched && form.controls['keyType'].errors?.required) {\r\n      <app-field-hint [isError]=\"true\">\r\n        This field is required\r\n      </app-field-hint>\r\n      }\r\n      <!-- Content Type for Content Items -->\r\n      @if (vm.guidedMode && vm.formValues.targetType === eavConstants.metadata.entity.targetType) {\r\n      <mat-form-field color=\"accent\" style=\"width: 100%; margin-bottom: 8px;\">\r\n        <mat-label>Content Type</mat-label>\r\n        <mat-select formControlName=\"contentTypeForContentItems\"\r\n          [placeholder]=\"!vm.contentTypes.length ? 'No items found' : ''\">\r\n          @for (contentType of vm.contentTypes; track contentType) {\r\n          <mat-option [value]=\"contentType.StaticName\">\r\n            {{ contentType.Label }}\r\n          </mat-option>\r\n          }\r\n        </mat-select>\r\n      </mat-form-field>\r\n      }\r\n      <!-- Scope for Content Types -->\r\n      @if (vm.guidedMode && (vm.formValues.targetType === eavConstants.metadata.entity.targetType ||\r\n      vm.formValues.targetType === eavConstants.metadata.contentType.targetType)) {\r\n      <mat-form-field color=\"accent\" style=\"width: 100%; margin-bottom: 8px;\">\r\n        <mat-label>Scope</mat-label>\r\n        <mat-select formControlName=\"scopeForContentTypes\"\r\n          [placeholder]=\"!vm.scopeOptions.length ? 'No items found' : ''\">\r\n          @for (scopeOption of vm.scopeOptions; track scopeOption) {\r\n          <mat-option [value]=\"scopeOption.value\">\r\n            {{ scopeOption.name }}\r\n          </mat-option>\r\n          }\r\n          <mat-option [value]=\"dropdownInsertValue\">Other...</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      }\r\n      <app-field-hint>\r\n        The scope should almost never be changed -\r\n        <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n      </app-field-hint>\r\n      <!-- Key -->\r\n      <mat-form-field color=\"accent\" style=\"width: 100%; margin-bottom: 8px;\">\r\n        <mat-label>Key</mat-label>\r\n        @if (vm.guidedMode) {\r\n        @switch (vm.formValues.targetType) {\r\n        @case (eavConstants.metadata.entity.targetType) {\r\n        @if (vm.guidedKey) {\r\n        <mat-select formControlName=\"key\" required [placeholder]=\"!vm.contentItems.length ? 'No items found' : ''\">\r\n          @for (item of vm.contentItems; track item) {\r\n          <mat-option [value]=\"item.Guid\">\r\n            {{ item.Title }} ({{ item.Id }})\r\n          </mat-option>\r\n          }\r\n        </mat-select>\r\n        }\r\n        @if (!vm.guidedKey) {\r\n        <input matInput type=\"text\" formControlName=\"key\" required>\r\n        }\r\n        }\r\n        @case (eavConstants.metadata.contentType.targetType) {\r\n        @if (vm.guidedKey) {\r\n        <mat-select formControlName=\"key\" required [placeholder]=\"!vm.contentTypes.length ? 'No items found' : ''\">\r\n          @for (contentType of vm.contentTypes; track contentType) {\r\n          <mat-option [value]=\"contentType.StaticName\">\r\n            {{ contentType.Label }}\r\n          </mat-option>\r\n          }\r\n        </mat-select>\r\n        }\r\n        @if (!vm.guidedKey) {\r\n        <input matInput type=\"text\" formControlName=\"key\" required>\r\n        }\r\n        }\r\n        @default {\r\n        <ng-container *ngTemplateOutlet=\"defaultKeyInput\"></ng-container>\r\n        }\r\n        }\r\n        } @else {\r\n        @if (vm.formValues.keyType !== eavConstants.keyTypes.number) {\r\n        <input matInput type=\"text\" formControlName=\"key\" required>\r\n        }\r\n        @if (vm.formValues.keyType === eavConstants.keyTypes.number) {\r\n        <input matInput type=\"number\" formControlName=\"key\" required>\r\n        }\r\n        }\r\n        <ng-template #defaultKeyInput>\r\n          @if (vm.formValues.keyType !== eavConstants.keyTypes.number) {\r\n          <input matInput type=\"text\" formControlName=\"key\" required>\r\n          }\r\n          @if (vm.formValues.keyType === eavConstants.keyTypes.number) {\r\n          <input matInput type=\"number\" formControlName=\"key\" required>\r\n          }\r\n        </ng-template>\r\n        @if (vm.guidedMode && vm.guidedKeyExists) {\r\n        <div matTextSuffix class=\"eav-selection-suffix\">\r\n          <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\"\r\n            [ngClass]=\"{ 'active': vm.guidedKey }\" tippy=\"Pick existing value\" (click)=\"toggleGuidedKey(true)\">\r\n            <mat-icon class=\"eav-icon\">search</mat-icon>\r\n          </button>\r\n          <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\"\r\n            [ngClass]=\"{ 'active': !vm.guidedKey }\" tippy=\"Manual entry\" (click)=\"toggleGuidedKey(false)\">\r\n            <mat-icon class=\"eav-icon\">text_fields</mat-icon>\r\n          </button>\r\n        </div>\r\n        }\r\n      </mat-form-field>\r\n      @if (form.controls['key'].touched && form.controls['key'].errors?.required) {\r\n      <app-field-hint [isError]=\"true\">\r\n        This field is required\r\n      </app-field-hint>\r\n      }\r\n      @if (form.controls['key'].touched && form.controls['key'].errors?.patternWholeNumber) {\r\n      <app-field-hint [isError]=\"true\">\r\n        Must be a whole number\r\n      </app-field-hint>\r\n      }\r\n      @if (form.controls['key'].touched && form.controls['key'].errors?.patternGuid) {\r\n      <app-field-hint [isError]=\"true\">\r\n        Must be a valid GUID\r\n      </app-field-hint>\r\n      }\r\n    </form>\r\n  </div>\r\n  <mat-dialog-actions class=\"eav-dialog-actions\">\r\n    <mat-slide-toggle color=\"accent\"\r\n      [tippy]=\"vm.guidedMode ? 'Guided mode helps you select options that work' : 'Manual mode is for advanced uses and allows you to insert any values'\"\r\n      [checked]=\"vm.guidedMode\" (change)=\"toggleGuidedMode($event)\">\r\n      {{ vm.guidedMode ? 'Guided' : 'Manual' }}\r\n    </mat-slide-toggle>\r\n    <div>\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\" [disabled]=\"!form.valid\" (click)=\"confirm()\">\r\n        Confirm\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n</div>\r\n}\r\n","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogRef, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { BehaviorSubject, combineLatest, distinctUntilChanged, map, merge, Observable, startWith } from 'rxjs';\r\nimport { ContentType } from '../../app-administration/models';\r\nimport { ContentTypesService } from '../../app-administration/services';\r\nimport { BaseComponent } from '../../shared/components/base.component';\r\nimport { dropdownInsertValue } from '../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants, MetadataKeyType, ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentItem } from '../models/content-item.model';\r\nimport { ContentItemsService } from '../services/content-items.service';\r\nimport { MetadataDialogViewModel, MetadataFormValues, MetadataInfo, TargetTypeOption } from './create-metadata-dialog.models';\r\nimport { metadataKeyValidator } from './metadata-key.validator';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgTemplateOutlet, NgClass, AsyncPipe } from '@angular/common';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { ControlHelpers } from '../../edit/shared/controls/control.helpers';\r\nimport { RxHelpers } from '../../shared/rxJs/rx.helpers';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { mapUntilObjChanged } from '../../shared/rxJs/mapUntilChanged';\r\nimport { transient } from '../../core';\r\n\r\n@Component({\r\n  selector: 'app-create-metadata-dialog',\r\n  templateUrl: './create-metadata-dialog.component.html',\r\n  styleUrls: ['./create-metadata-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    NgTemplateOutlet,\r\n    MatButtonModule,\r\n    NgClass,\r\n    MatIconModule,\r\n    MatDialogActions,\r\n    MatSlideToggleModule,\r\n    AsyncPipe,\r\n    FieldHintComponent,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n  ]\r\n})\r\nexport class CreateMetadataDialogComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  eavConstants = eavConstants;\r\n  dropdownInsertValue = dropdownInsertValue;\r\n  form: UntypedFormGroup;\r\n  viewModel$: Observable<MetadataDialogViewModel>;\r\n  targetTypeOptions: TargetTypeOption[];\r\n\r\n  /** Constants from metadata definitions */\r\n  private keyTypeOptions: MetadataKeyType[];\r\n  private guidedMode$: BehaviorSubject<boolean>;\r\n  /** Currently available options */\r\n  private keyTypeOptions$: BehaviorSubject<MetadataKeyType[]>;\r\n  private scopeOptions$: BehaviorSubject<ScopeOption[]>;\r\n  private contentItems$: BehaviorSubject<ContentItem[]>;\r\n  private contentTypes$: BehaviorSubject<ContentType[]>;\r\n  private guidedKey$: BehaviorSubject<boolean>;\r\n\r\n  private contentItemsService = transient(ContentItemsService);\r\n  \r\n  private contentTypesService = transient(ContentTypesService);\r\n  constructor(\r\n    private dialogRef: MatDialogRef<CreateMetadataDialogComponent>,\r\n    private context: Context,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.targetTypeOptions = Object.values(eavConstants.metadata).map(option => ({ ...option }));\r\n    this.keyTypeOptions = Object.values(eavConstants.keyTypes);\r\n\r\n    this.keyTypeOptions$ = new BehaviorSubject<MetadataKeyType[]>([]);\r\n    this.scopeOptions$ = new BehaviorSubject<ScopeOption[]>([]);\r\n    this.guidedMode$ = new BehaviorSubject(true);\r\n    this.contentItems$ = new BehaviorSubject<ContentItem[]>([]);\r\n    this.contentTypes$ = new BehaviorSubject<ContentType[]>([]);\r\n    this.guidedKey$ = new BehaviorSubject(true);\r\n\r\n    this.fetchScopes();\r\n\r\n    this.form = new UntypedFormGroup({});\r\n    this.form.addControl('targetType', new UntypedFormControl(eavConstants.metadata.entity.targetType, [Validators.required, Validators.pattern(/^[0-9]+$/)]));\r\n    this.form.addControl('keyType', new UntypedFormControl(eavConstants.metadata.entity.keyType, [Validators.required]));\r\n    this.form.addControl('contentTypeForContentItems', new UntypedFormControl(null));\r\n    this.form.addControl('scopeForContentTypes', new UntypedFormControl(eavConstants.scopes.default.value));\r\n    this.form.addControl('key', new UntypedFormControl(null, [Validators.required, metadataKeyValidator(this.form)]));\r\n\r\n    this.subscriptions.add(\r\n      this.form.controls['scopeForContentTypes'].valueChanges.pipe(\r\n        startWith(this.form.controls['scopeForContentTypes'].value),\r\n        distinctUntilChanged(),\r\n      ).subscribe((newScope: string) => {\r\n        if (this.form.controls['contentTypeForContentItems'].value != null) {\r\n          this.form.controls['contentTypeForContentItems'].patchValue(null);\r\n        }\r\n\r\n        if (newScope === dropdownInsertValue) {\r\n          newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n          if (!this.scopeOptions$.value.some(option => option.value === newScope)) {\r\n            const newScopeOption: ScopeOption = {\r\n              name: newScope,\r\n              value: newScope,\r\n            };\r\n            this.scopeOptions$.next([newScopeOption, ...this.scopeOptions$.value]);\r\n          }\r\n          this.form.controls['scopeForContentTypes'].patchValue(newScope);\r\n        } else {\r\n          this.fetchContentTypes(newScope);\r\n        }\r\n      })\r\n    );\r\n\r\n    // reset key if target or keyType changed\r\n    this.subscriptions.add(\r\n      merge(\r\n        this.form.controls['targetType'].valueChanges.pipe(distinctUntilChanged()),\r\n        this.form.controls['keyType'].valueChanges.pipe(distinctUntilChanged()),\r\n      ).subscribe(() => {\r\n        this.guidedKey$.next(true);\r\n\r\n        const formValues: MetadataFormValues = this.form.getRawValue();\r\n        if (formValues.key != null) {\r\n          const updatedForm: Partial<MetadataFormValues> = {\r\n            key: null,\r\n          };\r\n          this.form.patchValue(updatedForm);\r\n        }\r\n      })\r\n    );\r\n\r\n    // reset key if contentTypeForContentItems changed\r\n    this.subscriptions.add(\r\n      this.form.controls['contentTypeForContentItems'].valueChanges.pipe(\r\n        startWith(this.form.controls['contentTypeForContentItems'].value),\r\n        distinctUntilChanged(),\r\n      ).subscribe(contentTypeStaticName => {\r\n        const formValues: MetadataFormValues = this.form.getRawValue();\r\n        if (formValues.targetType === eavConstants.metadata.entity.targetType && formValues.key != null) {\r\n          const updatedForm: Partial<MetadataFormValues> = {\r\n            key: null,\r\n          };\r\n          this.form.patchValue(updatedForm);\r\n        }\r\n\r\n        this.contentItemsService.getAll(contentTypeStaticName).subscribe(items => {\r\n          this.contentItems$.next(items);\r\n        });\r\n      })\r\n    );\r\n\r\n    const formValues$ = this.form.valueChanges.pipe(\r\n      startWith(this.form.getRawValue() as MetadataFormValues),\r\n      map(() => this.form.getRawValue() as MetadataFormValues),\r\n      mapUntilObjChanged(m => m)\r\n      // distinctUntilChanged(RxHelpers.objectsEqual),\r\n    );\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([formValues$, this.guidedMode$]).subscribe(([formValues, guidedMode]) => {\r\n        // keyTypeOptions depend on targetType and advanced\r\n        const foundTargetType = this.targetTypeOptions.find(option => option.targetType === formValues.targetType);\r\n        const keyTypeOptions = guidedMode && foundTargetType ? [foundTargetType.keyType] : [...this.keyTypeOptions];\r\n        if (!RxHelpers.arraysEqual(keyTypeOptions, this.keyTypeOptions$.value)) {\r\n          this.keyTypeOptions$.next(keyTypeOptions);\r\n        }\r\n\r\n        // update form if keyType is not available\r\n        const updatedForm: Partial<MetadataFormValues> = {};\r\n        if (!this.keyTypeOptions$.value.includes(formValues.keyType)) {\r\n          updatedForm.keyType = this.keyTypeOptions$.value[0];\r\n        }\r\n\r\n        // if target is app key must be current app id\r\n        const isAppMetadata = guidedMode && formValues.targetType === eavConstants.metadata.app.targetType;\r\n        if (isAppMetadata && formValues.key !== this.context.appId) {\r\n          updatedForm.key = this.context.appId;\r\n        }\r\n\r\n        if (Object.keys(updatedForm).length) {\r\n          this.form.patchValue(updatedForm);\r\n        }\r\n\r\n        const keyTypeDisabled = guidedMode && this.keyTypeOptions$.value.length <= 1;\r\n        ControlHelpers.disableControl(this.form.controls['keyType'], keyTypeDisabled);\r\n        ControlHelpers.disableControl(this.form.controls['key'], isAppMetadata);\r\n      })\r\n    );\r\n\r\n    this.viewModel$ = combineLatest([\r\n      combineLatest([this.guidedMode$, this.keyTypeOptions$, this.scopeOptions$, this.contentItems$, this.contentTypes$]),\r\n      combineLatest([formValues$, this.guidedKey$]),\r\n    ]).pipe(\r\n      map(([\r\n        [guidedMode, keyTypeOptions, scopeOptions, contentItems, contentTypes],\r\n        [formValues, guidedKey],\r\n      ]) => {\r\n        const viewModel: MetadataDialogViewModel = {\r\n          guidedMode,\r\n          unknownTargetType: !this.targetTypeOptions.some(option => option.targetType === formValues.targetType),\r\n          targetTypeHint: guidedMode && this.targetTypeOptions.find(option => option.targetType === formValues.targetType)?.hint,\r\n          keyTypeOptions,\r\n          scopeOptions,\r\n          guidedKey,\r\n          guidedKeyExists:\r\n            [eavConstants.metadata.entity.targetType, eavConstants.metadata.contentType.targetType].includes(formValues.targetType),\r\n          formValues,\r\n          contentItems,\r\n          contentTypes,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.guidedMode$.complete();\r\n    this.keyTypeOptions$.complete();\r\n    this.contentItems$.complete();\r\n    this.contentTypes$.complete();\r\n    this.guidedKey$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(result?: MetadataInfo): void {\r\n    this.dialogRef.close(result);\r\n  }\r\n\r\n  toggleGuidedKey(event: boolean): void {\r\n    this.guidedKey$.next(event);\r\n  }\r\n\r\n  toggleGuidedMode(event: MatSlideToggleChange): void {\r\n    this.guidedMode$.next(event.checked);\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: MetadataFormValues = this.form.getRawValue();\r\n\r\n    const result: MetadataInfo = {\r\n      target: this.targetTypeOptions.find(option => option.targetType === formValues.targetType)?.target,\r\n      targetType: formValues.targetType,\r\n      keyType: formValues.keyType,\r\n      // if keyType is guid remove curly brackets\r\n      key: formValues.keyType === eavConstants.keyTypes.guid ? (formValues.key as string).replace(/{|}/g, '') : formValues.key.toString(),\r\n    };\r\n    this.closeDialog(result);\r\n  }\r\n\r\n  private fetchContentTypes(scope: string): void {\r\n    this.contentTypesService.retrieveContentTypes(scope).subscribe(contentTypes => {\r\n      this.contentTypes$.next(contentTypes);\r\n    });\r\n  }\r\n\r\n  private fetchScopes(): void {\r\n    this.contentTypesService.getScopes().subscribe(scopes => {\r\n      this.scopeOptions$.next(scopes);\r\n    });\r\n  }\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { PubMeta, PubMetaFilterModel } from './pub-meta-filter.model';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\n\r\n@Component({\r\n  selector: 'app-pub-meta-filter',\r\n  templateUrl: './pub-meta-filter.component.html',\r\n  styleUrls: ['./pub-meta-filter.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRadioModule,\r\n    FormsModule,\r\n  ],\r\n})\r\nexport class PubMetaFilterComponent implements IFilterAngularComp {\r\n  published = '';\r\n  metadata = '';\r\n  hasMetadata = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.published !== '' || this.metadata !== '' || this.hasMetadata !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    let publishedPassed = false;\r\n    let metadataPassed = false;\r\n    let hasMetadataPassed = false;\r\n\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: PubMeta = this.filterParams.valueGetter(valueGetterParams);\r\n    if (this.published !== '') {\r\n      if (value.published === null || value.published === undefined) {\r\n        publishedPassed = false;\r\n      } else {\r\n        publishedPassed = value.published.toString() === this.published;\r\n      }\r\n    } else {\r\n      publishedPassed = true;\r\n    }\r\n    if (this.metadata !== '') {\r\n      if (value.metadata === null || value.metadata === undefined) {\r\n        metadataPassed = false;\r\n      } else {\r\n        metadataPassed = value.metadata.toString() === this.metadata;\r\n      }\r\n    } else {\r\n      metadataPassed = true;\r\n    }\r\n    if (this.hasMetadata !== '') {\r\n      if (value.hasMetadata === null || value.hasMetadata === undefined) {\r\n        hasMetadataPassed = false;\r\n      } else {\r\n        hasMetadataPassed = value.hasMetadata.toString() === this.hasMetadata;\r\n      }\r\n    } else {\r\n      hasMetadataPassed = true;\r\n    }\r\n    return publishedPassed && metadataPassed && hasMetadataPassed;\r\n  }\r\n\r\n  getModel(): PubMetaFilterModel {\r\n    if (!this.isFilterActive()) return;\r\n\r\n    const model: PubMetaFilterModel = {\r\n      filterType: 'pub-meta',\r\n      published: this.published,\r\n      metadata: this.metadata,\r\n      hasMetadata: this.hasMetadata,\r\n    };\r\n    return model;\r\n  }\r\n\r\n  setModel(model: PubMetaFilterModel) {\r\n    this.published = model ? model.published : '';\r\n    this.metadata = model ? model.metadata : '';\r\n    this.hasMetadata = model ? model.hasMetadata : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<div class=\"title\">Published</div>\r\n<mat-radio-group [(ngModel)]=\"published\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">Published</mat-radio-button>\r\n  <mat-radio-button value=\"false\">Not published</mat-radio-button>\r\n</mat-radio-group>\r\n\r\n<div class=\"title\">Is Metadata</div>\r\n<mat-radio-group [(ngModel)]=\"metadata\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">Is metadata</mat-radio-button>\r\n  <mat-radio-button value=\"false\">Is not metadata</mat-radio-button>\r\n</mat-radio-group>\r\n\r\n<div class=\"title\">Has Metadata</div>\r\n<mat-radio-group [(ngModel)]=\"hasMetadata\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">Has metadata</mat-radio-button>\r\n  <mat-radio-button value=\"false\">Has no metadata</mat-radio-button>\r\n</mat-radio-group>\r\n","@if (viewModel$ | async; as vm) {\r\n<div appToggleDebug class=\"eav-dialog nav-component-wrapper\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      {{ vm.contentType.Label || vm.contentType.Name }} Data\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content nav-component-wrapper\">\r\n    <router-outlet></router-outlet>\r\n    @if (vm.contentType?.Properties?.ListInstructions; as listInstructions) {\r\n    <div [innerHTML]=\"listInstructions | safeHtml\"></div>\r\n    }\r\n    <div class=\"grid-wrapper\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.items\" [gridOptions]=\"gridOptions\"\r\n        (gridReady)=\"onGridReady($event)\" appDragAndDrop [allowedFileTypes]=\"'xml,json'\"\r\n        (filesDropped)=\"filesDropped($event)\">\r\n      </ag-grid-angular>\r\n    </div>\r\n  </div>\r\n  <mat-dialog-actions class=\"eav-dialog-actions\">\r\n    <div class=\"eav-dialog-actions-div\">\r\n      <button mat-button class=\"eav-button__with-icon\" tippy=\"Export xml list\" (click)=\"exportContent()\">\r\n        <mat-icon class=\"eav-icon\">cloud_download</mat-icon>\r\n        <span>Data</span>\r\n      </button>\r\n      <button mat-button class=\"eav-button__with-icon\" tippy=\"Import xml list\" (click)=\"importContent()\">\r\n        <mat-icon class=\"eav-icon\">cloud_upload</mat-icon>\r\n        <span>Data</span>\r\n      </button>\r\n      <button mat-button class=\"eav-button__with-icon\" tippy=\"Import single json item\" (click)=\"importItem()\">\r\n        <mat-icon class=\"eav-icon\">cloud_upload</mat-icon>\r\n        <span>Item</span>\r\n      </button>\r\n      <button mat-button class=\"eav-button__with-icon\" tippy=\"Create metadata\" (click)=\"createMetadata()\">\r\n        <mat-icon class=\"eav-icon\">local_offer</mat-icon>\r\n        <span>Create Metadata</span>\r\n      </button>\r\n      @if (isDebug()) {\r\n      <button mat-button class=\"eav-button__with-icon\" color=\"accent\" tippy=\"Print filter to console\"\r\n        (click)=\"debugFilter()\">\r\n        <mat-icon class=\"eav-icon\">filter_list</mat-icon>\r\n        <span>Filter</span>\r\n      </button>\r\n      }\r\n    </div>\r\n    <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Add item\" (click)=\"editItem(null)\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n}\r\n","import { ColDef, GridApi, GridOptions, GridReadyEvent, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Component, inject, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, filter, map, Observable, Subject, take } from 'rxjs';\r\nimport { ContentType } from '../app-administration/models/content-type.model';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { ContentExportService } from '../content-export/services/content-export.service';\r\nimport { ContentImportDialogData } from '../content-import/content-import-dialog.config';\r\nimport { DataTypeCatalog } from '../shared/fields/data-type-catalog';\r\nimport { Field } from '../shared/fields/field.model';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { BooleanFilterComponent } from '../shared/components/boolean-filter/boolean-filter.component';\r\nimport { EntityFilterComponent } from '../shared/components/entity-filter/entity-filter.component';\r\nimport { FileUploadDialogData } from '../shared/components/file-upload-dialog';\r\nimport { IdFieldComponent } from '../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants } from '../shared/constants/eav.constants';\r\nimport { keyFilters } from '../shared/constants/session.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep } from '../shared/models/edit-form.model';\r\nimport { ContentItemsActionsComponent } from './content-items-actions/content-items-actions.component';\r\nimport { ContentItemsActionsParams } from './content-items-actions/content-items-actions.models';\r\nimport { ContentItemsEntityComponent } from './content-items-entity/content-items-entity.component';\r\nimport { ContentItemsStatusComponent } from './content-items-status/content-items-status.component';\r\nimport { ContentItemsStatusParams } from './content-items-status/content-items-status.models';\r\nimport { buildFilterModel } from './content-items.helpers';\r\nimport { CreateMetadataDialogComponent } from './create-metadata-dialog/create-metadata-dialog.component';\r\nimport { MetadataInfo } from './create-metadata-dialog/create-metadata-dialog.models';\r\nimport { AgGridFilterModel } from './models/ag-grid-filter.model';\r\nimport { ContentItem } from './models/content-item.model';\r\nimport { ExtendedColDef } from './models/extended-col-def.model';\r\nimport { PubMetaFilterComponent } from './pub-meta-filter/pub-meta-filter.component';\r\nimport { PubMeta } from './pub-meta-filter/pub-meta-filter.model';\r\nimport { ContentItemsService } from './services/content-items.service';\r\nimport { EntityEditService } from '../shared/services/entity-edit.service';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { SafeHtmlPipe } from '../shared/pipes/safe-html.pipe';\r\nimport { DragAndDropDirective } from '../shared/directives/drag-and-drop.directive';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { ToggleDebugDirective } from '../shared/directives/toggle-debug.directive';\r\nimport { transient } from '../core';\r\nimport { EavLogger } from '../shared/logging/eav-logger';\r\nimport { GlobalConfigService } from '../shared/services/global-config.service';\r\nimport { DialogRoutingService } from '../shared/routing/dialog-routing.service';\r\n\r\nconst logSpecs = {\r\n  enabled: false,\r\n  name: 'ContentItemsComponent',\r\n}\r\n\r\n@Component({\r\n  selector: 'app-content-items',\r\n  templateUrl: './content-items.component.html',\r\n  styleUrls: ['./content-items.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    MatDialogActions,\r\n    AsyncPipe,\r\n    SafeHtmlPipe,\r\n    DragAndDropDirective,\r\n    ToggleDebugDirective,\r\n    SxcGridModule,\r\n  ],\r\n})\r\nexport class ContentItemsComponent implements OnInit, OnDestroy {\r\n  contentType$ = new Subject<ContentType>();\r\n  items$ = new BehaviorSubject<ContentItem[]>(undefined);\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n  };\r\n\r\n  isDebug = inject(GlobalConfigService).isDebug;\r\n  private entitiesService = transient(EntityEditService);\r\n  private contentExportService = transient(ContentExportService);\r\n  private contentItemsService = transient(ContentItemsService);\r\n  private contentTypesService = transient(ContentTypesService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  private gridApi$ = new BehaviorSubject<GridApi>(null);\r\n  #contentTypeStaticName = this.#dialogRouter.snapshot.paramMap.get('contentTypeStaticName');\r\n\r\n  viewModel$: Observable<ContentItemsViewModel>;\r\n\r\n  log = new EavLogger(logSpecs);\r\n  constructor(\r\n    private dialogRef: MatDialogRef<ContentItemsComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchContentType();\r\n    this.fetchItems();\r\n    this.fetchColumns();\r\n    this.#dialogRouter.doOnDialogClosed(() => this.fetchItems());\r\n\r\n    // TODO: @2dg - this should be easy to get rid of #remove-observables\r\n    this.viewModel$ = combineLatest([\r\n      this.contentType$, this.items$\r\n    ]).pipe(\r\n      map(([contentType, items]) => ({ contentType, items }))\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.contentType$.complete();\r\n    this.items$.complete();\r\n    this.gridApi$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onGridReady(params: GridReadyEvent) {\r\n    this.gridApi$.next(params.api);\r\n  }\r\n\r\n  private fetchContentType() {\r\n    this.contentTypesService.retrieveContentType(this.#contentTypeStaticName).subscribe(contentType => {\r\n      this.contentType$.next(contentType);\r\n    });\r\n  }\r\n\r\n  private fetchItems() {\r\n    this.contentItemsService.getAll(this.#contentTypeStaticName).subscribe(items => {\r\n      this.items$.next(items);\r\n    });\r\n  }\r\n\r\n  private fetchColumns() {\r\n    this.contentItemsService.getColumns(this.#contentTypeStaticName).subscribe(columns => {\r\n      // filter out ephemeral columns as they don't have data to show\r\n      const columnsWithoutEphemeral = columns.filter(column => !column.IsEphemeral);\r\n      const columnDefs = this.buildColumnDefs(columnsWithoutEphemeral);\r\n      const filterModel = buildFilterModel(sessionStorage.getItem(keyFilters), columnDefs);\r\n      if (this.gridApi$.value) {\r\n        this.setColumnDefs(columnDefs, filterModel);\r\n      } else {\r\n        this.gridApi$.pipe(\r\n          filter(gridApi => gridApi != null), // firefox does web requests faster than drawing grid and getting gridApi\r\n          take(1),\r\n        ).subscribe(gridApi => {\r\n          this.setColumnDefs(columnDefs, filterModel);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private setColumnDefs(columnDefs: ColDef[], filterModel: AgGridFilterModel) {\r\n    this.gridApi$.value.setColumnDefs(columnDefs);\r\n    if (filterModel) {\r\n      this.log.a('Will try to apply filter:', filterModel);\r\n      this.gridApi$.value.setFilterModel(filterModel);\r\n    }\r\n  }\r\n\r\n  openMetadata(item: ContentItem) {\r\n    const url = GoToMetadata.getUrlEntity(\r\n      item.Guid,\r\n      `Metadata for Entity: ${item._Title} (${item.Id})`,\r\n      this.#contentTypeStaticName,\r\n    );\r\n    this.#dialogRouter.navRelative([url]);\r\n  }\r\n\r\n  editItem(item?: ContentItem) {\r\n    const form: EditForm = {\r\n      items: [\r\n        item == null\r\n          ? EditPrep.newFromType(this.#contentTypeStaticName)\r\n          : EditPrep.editId(item.Id)\r\n      ],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRouter.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  exportContent() {\r\n    const filterModel = this.gridApi$.value.getFilterModel();\r\n    const hasFilters = Object.keys(filterModel).length > 0;\r\n    const ids: number[] = [];\r\n    if (hasFilters) {\r\n      this.gridApi$.value.forEachNodeAfterFilterAndSort(rowNode => {\r\n        const contentItem: ContentItem = rowNode.data;\r\n        ids.push(contentItem.Id);\r\n      });\r\n    }\r\n    this.#dialogRouter.navRelative([`export/${this.#contentTypeStaticName}${ids.length > 0 ? `/${ids}` : ''}`]);\r\n  }\r\n\r\n  filesDropped(files: File[]) {\r\n    const importFile = files[0];\r\n    const ext = importFile.name.substring(importFile.name.lastIndexOf('.') + 1).toLocaleLowerCase();\r\n    switch (ext) {\r\n      case 'xml':\r\n        this.importContent(files);\r\n        break;\r\n      case 'json':\r\n        this.importItem(files);\r\n        break;\r\n    }\r\n  }\r\n\r\n  importContent(files?: File[]) {\r\n    const dialogData: ContentImportDialogData = { files };\r\n    this.#dialogRouter.navRelative([`${this.#contentTypeStaticName}/import`], { state: dialogData });\r\n  }\r\n\r\n  importItem(files?: File[]) {\r\n    const dialogData: FileUploadDialogData = { files };\r\n    this.#dialogRouter.navRelative(['import'], { state: dialogData });\r\n  }\r\n\r\n  createMetadata() {\r\n    const metadataDialogRef = this.dialog.open(CreateMetadataDialogComponent, {\r\n      autoFocus: false,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    metadataDialogRef.afterClosed().subscribe((itemFor: MetadataInfo) => {\r\n      if (itemFor == null) return;\r\n\r\n      const form: EditForm = {\r\n        items: [ EditPrep.newMetadataFromInfo(this.#contentTypeStaticName, itemFor) ],\r\n      };\r\n      const formUrl = convertFormToUrl(form);\r\n      this.#dialogRouter.navRelative([`edit/${formUrl}`]);\r\n      this.changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n\r\n  debugFilter() {\r\n    console.warn('Current filter:', this.gridApi$.value.getFilterModel());\r\n    this.snackBar.open('Check console for filter information', undefined, { duration: 3000 });\r\n  }\r\n\r\n  private buildColumnDefs(columns: Field[]) {\r\n    const columnDefs: ColDef[] = [\r\n      {\r\n        ...ColumnDefinitions.IdWithDefaultRenderer,\r\n        cellClass: (params) => {\r\n          const contentItem: ContentItem = params.data;\r\n          return `id-action no-padding no-outline ${contentItem._EditInfo.ReadOnly ? 'disabled' : ''}`.split(' ');\r\n        },\r\n        cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<ContentItem>()\r\n      },\r\n      {\r\n        field: 'Status',\r\n        width: 82,\r\n        headerClass: 'dense',\r\n        cellClass: 'secondary-action no-padding'.split(' '),\r\n        filter: PubMetaFilterComponent,\r\n        valueGetter: (params) => {\r\n          const item: ContentItem = params.data;\r\n          const published: PubMeta = {\r\n            published: item.IsPublished,\r\n            metadata: !!item.For,\r\n            hasMetadata: item.Metadata ? item.Metadata.length > 0 : false,\r\n          };\r\n          return published;\r\n        },\r\n        cellRenderer: ContentItemsStatusComponent,\r\n        cellRendererParams: (() => {\r\n          const params: ContentItemsStatusParams = {\r\n            onOpenMetadata: (item) => this.openMetadata(item),\r\n          };\r\n          return params;\r\n        })(),\r\n      },\r\n      {\r\n        headerName: 'Item (Entity)',\r\n        field: '_Title',\r\n        flex: 2,\r\n        minWidth: 250,\r\n        cellClass: 'primary-action highlight'.split(' '),\r\n        sortable: true,\r\n        filter: 'agTextColumnFilter',\r\n        onCellClicked: (params) => {\r\n          const contentItem: ContentItem = params.data;\r\n          this.editItem(contentItem);\r\n        },\r\n      },\r\n      {\r\n        headerName: 'Stats',\r\n        headerTooltip: 'Used by others / uses others',\r\n        field: '_Used',\r\n        width: 70,\r\n        headerClass: 'dense',\r\n        cellClass: 'no-outline',\r\n        sortable: true,\r\n        filter: 'agTextColumnFilter',\r\n        valueGetter: (params) => {\r\n          const item: ContentItem = params.data;\r\n          return `${item._Used} / ${item._Uses}`;\r\n        },\r\n      },\r\n      {\r\n        ...ColumnDefinitions.ActionsPinnedRight3,\r\n        cellRenderer: ContentItemsActionsComponent,\r\n        cellRendererParams: (() => {\r\n          const params: ContentItemsActionsParams = {\r\n            do: (verb, item) => {\r\n              switch (verb) {\r\n                case 'clone': this.clone(item); break;\r\n                case 'export': this.export(item); break;\r\n                case 'delete': this.delete(item); break;\r\n              }\r\n            }\r\n          } satisfies ContentItemsActionsParams;\r\n          return params;\r\n        })(),\r\n      },\r\n    ];\r\n    for (const column of columns) {\r\n      const colDef: ExtendedColDef = {\r\n        headerName: column.StaticName,\r\n        field: column.StaticName,\r\n        flex: 2,\r\n        minWidth: 250,\r\n        cellClass: 'no-outline',\r\n        sortable: true,\r\n      };\r\n      switch (column.Type) {\r\n        case DataTypeCatalog.Entity:\r\n          colDef.allowMultiValue = column.Metadata?.Entity?.AllowMultiValue ?? true;\r\n          colDef.cellRenderer = ContentItemsEntityComponent;\r\n          colDef.valueGetter = this.valueGetterEntityField;\r\n          colDef.filter = EntityFilterComponent;\r\n          break;\r\n        case DataTypeCatalog.DateTime:\r\n          colDef.useTimePicker = column.Metadata?.DateTime?.UseTimePicker ?? false;\r\n          colDef.valueGetter = this.valueGetterDateTime;\r\n          colDef.filter = 'agTextColumnFilter';\r\n          break;\r\n        case DataTypeCatalog.Boolean:\r\n          colDef.valueGetter = this.valueGetterBoolean;\r\n          colDef.filter = BooleanFilterComponent;\r\n          break;\r\n        case DataTypeCatalog.Number:\r\n          colDef.filter = 'agNumberColumnFilter';\r\n          break;\r\n        default:\r\n          colDef.filter = 'agTextColumnFilter';\r\n          break;\r\n      }\r\n      columnDefs.push(colDef);\r\n    }\r\n    return columnDefs;\r\n  }\r\n\r\n  private clone(item: ContentItem) {\r\n    const form: EditForm = {\r\n      items: [EditPrep.copy(this.#contentTypeStaticName, item.Id)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRouter.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  private export(item: ContentItem) {\r\n    this.contentExportService.exportEntity(item.Id, this.#contentTypeStaticName, true);\r\n  }\r\n\r\n  private delete(item: ContentItem) {\r\n    if (!confirm(`Delete '${item._Title}' (${item._RepositoryId})?`)) return;\r\n    this.snackBar.open('Deleting...');\r\n    this.entitiesService.delete(this.#contentTypeStaticName, item._RepositoryId, false).subscribe({\r\n      next: () => {\r\n        this.snackBar.open('Deleted', null, { duration: 2000 });\r\n        this.fetchItems();\r\n      },\r\n      error: (err: HttpErrorResponse) => {\r\n        this.snackBar.dismiss();\r\n        if (!confirm(`${err.error.ExceptionMessage}\\n\\nDo you want to force delete '${item._Title}' (${item._RepositoryId})?`)) {\r\n          return;\r\n        }\r\n        this.snackBar.open('Deleting...');\r\n        this.entitiesService.delete(this.#contentTypeStaticName, item._RepositoryId, true).subscribe(() => {\r\n          this.snackBar.open('Deleted', null, { duration: 2000 });\r\n          this.fetchItems();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private valueGetterEntityField(params: ValueGetterParams) {\r\n    const rawValue: ContentItem[] = params.data[params.colDef.field];\r\n    if (rawValue.length === 0) { return null; }\r\n    return rawValue.map(item => item.Title);\r\n  }\r\n\r\n  private valueGetterDateTime(params: ValueGetterParams) {\r\n    const rawValue: string = params.data[params.colDef.field];\r\n    if (!rawValue) { return null; }\r\n    return (params.colDef as ExtendedColDef).useTimePicker\r\n      ? rawValue.replace('T', ' ').replace('Z', '')\r\n      : rawValue.split('T')[0];\r\n  }\r\n\r\n  private valueGetterBoolean(params: ValueGetterParams) {\r\n    const rawValue = params.data[params.colDef.field];\r\n    if (typeof rawValue !== 'boolean') { return null; }\r\n    return rawValue.toString();\r\n  }\r\n}\r\n\r\ninterface ContentItemsViewModel {\r\n  contentType: ContentType;\r\n  items: ContentItem[];\r\n}\r\n","import { ColDef, NumberFilterModel, TextFilterModel } from '@ag-grid-community/core';\r\nimport { BooleanFilterModel } from '../shared/components/boolean-filter/boolean-filter.model';\r\nimport { EntityFilterComponent } from '../shared/components/entity-filter/entity-filter.component';\r\nimport { EntityFilterModel } from '../shared/components/entity-filter/entity-filter.model';\r\nimport { AgGridFilterModel } from './models/ag-grid-filter.model';\r\nimport { PubMetaFilterModel } from './pub-meta-filter/pub-meta-filter.model';\r\nimport { JsonHelpers } from '../shared/helpers/json.helpers';\r\n\r\nexport function buildFilterModel(urlFilters: string, columnDefs: ColDef[]) {\r\n  if (!urlFilters) return;\r\n\r\n  // special decode if parameter was passed as base64 - this is necessary for strings containing the \"+\" character\r\n  if (urlFilters.charAt(urlFilters.length - 1) === '=') {\r\n    urlFilters = atob(urlFilters);\r\n  }\r\n\r\n  let filters: Record<string, any>;\r\n  try {\r\n    filters = JSON.parse(urlFilters);\r\n  } catch (error) {\r\n    console.error('Can\\'t parse JSON with filters from url:', urlFilters);\r\n  }\r\n  if (!filters) return;\r\n\r\n  // handle IsPublished and IsMetadata\r\n  const filterModel: AgGridFilterModel = {};\r\n  if (filters.IsPublished || filters.IsMetadata) {\r\n    const filter: PubMetaFilterModel = {\r\n      filterType: 'pub-meta',\r\n      published: filters.IsPublished ?? '',\r\n      metadata: filters.IsMetadata ?? '',\r\n      hasMetadata: '',\r\n    };\r\n    filterModel.Status = filter;\r\n  }\r\n\r\n  // handle all other cases\r\n  Object.entries(filters)\r\n    .filter(([key, value]) => key !== 'IsPublished' && key !== 'IsMetadata')\r\n    .forEach(([key, value]) => {\r\n      const columnDef = columnDefs.find(c => c.headerName === key);\r\n      if (columnDef?.filter === EntityFilterComponent) {\r\n        value = JsonHelpers.tryParse(value) ?? value;\r\n        const filter: EntityFilterModel = {\r\n          filterType: 'entity',\r\n          filter: typeof value === 'string' ? value : undefined,\r\n          idFilter: typeof value === 'number' ? [value] : Array.isArray(value) ? value.filter(v => typeof v === 'number') : undefined,\r\n        };\r\n        filterModel[key] = filter;\r\n        return;\r\n      }\r\n\r\n      if (typeof value === 'string') {\r\n        const filter: TextFilterModel = { filterType: 'text', type: 'equals', filter: value };\r\n        filterModel[key] = filter;\r\n      } else if (typeof value === 'number') {\r\n        const filter: NumberFilterModel = { filterType: 'number', type: 'equals', filter: value, filterTo: null };\r\n        filterModel[key] = filter;\r\n      } else if (typeof value === 'boolean') {\r\n        const filter: BooleanFilterModel = { filterType: 'boolean', filter: value.toString() };\r\n        filterModel[key] = filter;\r\n      }\r\n    });\r\n\r\n  return filterModel;\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { TrueFalseParams } from './true-false.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-rest-api-true-false',\r\n  templateUrl: './true-false.component.html',\r\n  standalone: true,\r\n  imports: [MatIconModule],\r\n})\r\nexport class TrueFalseComponent implements ICellRendererAngularComp {\r\n  icon: string;\r\n\r\n  private trueIcon = 'check_circle';\r\n  private falseIcon = 'circle';\r\n\r\n  agInit(params: ICellRendererParams & TrueFalseParams): void {\r\n    let value: boolean = params.value;\r\n    if (params.reverse) { value = !value; }\r\n    if (params.trueIcon) { this.trueIcon = params.trueIcon; }\r\n    if (params.falseIcon) { this.falseIcon = params.falseIcon; }\r\n    this.icon = value ? this.trueIcon : this.falseIcon;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon>{{ icon }}</mat-icon>\r\n</div>\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","export interface AgBoolCellIconSetting {\r\n  clickable?: boolean;\r\n  tooltip: string;\r\n  icon: string;\r\n  url?: string;\r\n  getUrl?: (data: any) => string;\r\n}\r\n\r\nexport interface AgBoolCellIconSettings {\r\n  states: Record<'true' | 'false' | string, AgBoolCellIconSetting>;\r\n}\r\n\r\nexport interface AgBoolCellIconsParams<T = any> {\r\n  settings(data: T): AgBoolCellIconSettings;\r\n}\r\n\r\nexport const AgBoolCellIconsDefault: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      tooltip: 'true/on',\r\n      icon: 'radio_button_checked',\r\n    },\r\n    false: {\r\n      tooltip: 'false/off',\r\n      icon: 'radio_button_unchecked',\r\n    }\r\n  }\r\n};","<div class=\"icon-container\">\r\n  @if (data.url) {\r\n    <a [href]=\"data.url\" target=\"_blank\">\r\n      <ng-container *ngTemplateOutlet=\"showIcon\"></ng-container>\r\n    </a>\r\n  } @else {\r\n    <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n      <mat-icon>{{ data.icon }}</mat-icon>\r\n    </div>\r\n  }\r\n</div>\r\n\r\n<ng-template #showIcon>\r\n  <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n    <mat-icon>{{ data.icon }}</mat-icon>\r\n  </div>\r\n</ng-template>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { AgBoolCellIconSetting, AgBoolCellIconSettings, AgBoolCellIconsDefault, AgBoolCellIconsParams } from './ag-bool-icon-params';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgClass } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-ag-bool-icon-renderer',\r\n  templateUrl: './ag-bool-icon-renderer.html',\r\n  standalone: true,\r\n  imports: [\r\n    TippyDirective,\r\n    MatIconModule,\r\n    NgClass,\r\n  ],\r\n})\r\nexport class AgBoolIconRenderer implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  private allSettings: AgBoolCellIconSettings;\r\n\r\n  data: AgBoolCellIconSetting; // | { link: boolean  };\r\n\r\n  agInit(params: ICellRendererParams & AgBoolCellIconsParams): void {\r\n    this.value = params.value;\r\n\r\n    this.allSettings = params.settings?.(params.data) ?? AgBoolCellIconsDefault;\r\n    const d = this.allSettings.states[this.value ? 'true' : 'false'];\r\n    this.data = {\r\n      ...d,\r\n      url: d.url ?? d.getUrl?.(params.data),\r\n      // link: !!(d.url || d.getUrl),\r\n    };\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { ColDef } from '@ag-grid-community/core';\r\nimport { BooleanFilterComponent } from '../components/boolean-filter/boolean-filter.component';\r\nimport { App } from '../../apps-management/models/app.model';\r\nimport { AgBoolIconRenderer } from './apps-list-show/ag-bool-icon-renderer.component';\r\nimport { TrueFalseComponent } from '../../dev-rest/api/true-false/true-false.component';\r\nimport { TrueFalseParams } from '../../dev-rest/api/true-false/true-false.models';\r\nimport { IdFieldComponent } from '../components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../components/id-field/id-field.models';\r\n\r\nconst cellClassSecAction = 'secondary-action no-padding'.split(' ');\r\n\r\nconst actionsRight: ColDef = {\r\n  cellClass: cellClassSecAction,\r\n  pinned: 'right',\r\n};\r\n\r\nconst textSortFilter: ColDef = {\r\n  sortable: true,\r\n  filter: 'agTextColumnFilter',\r\n};\r\n\r\nexport class ColumnDefinitions {\r\n  static ActionsPinnedRight1: ColDef = {\r\n    width: 42,\r\n    ...actionsRight,\r\n  };\r\n\r\n  static ActionsPinnedRight3: ColDef = {\r\n    width: 122,\r\n    ...actionsRight,\r\n  };\r\n\r\n  static ActionsPinnedRight4: ColDef = {\r\n    width: 162,\r\n    ...actionsRight,\r\n  };\r\n\r\n  static ActionsPinnedRight5: ColDef = {\r\n    width: 202,\r\n    ...actionsRight,\r\n  };\r\n\r\n  // TODO: the name here is wrong - 6 indicates 6 buttons, but the size wouldn't allow this\r\n  static ActionsPinnedRight6: ColDef = {\r\n    width: 82,\r\n    ...actionsRight,\r\n  };\r\n\r\n  // TODO: the name here is wrong - 7 indicates 6 buttons, but the size wouldn't allow this\r\n  static ActionsPinnedRight7: ColDef = {\r\n    width: 62,\r\n    cellClass: cellClassSecAction + ' no-outline',\r\n    pinned: 'right',\r\n  };\r\n\r\n  static IconShow: ColDef = {\r\n    headerName: 'Show',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'icons no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: BooleanFilterComponent,\r\n    valueGetter: (params) => {\r\n      const app: App = params.data;\r\n      return !app.IsHidden;\r\n    },\r\n    cellRenderer: AgBoolIconRenderer,\r\n  };\r\n\r\n  static Items: ColDef = {\r\n    width: 102,\r\n    headerClass: 'dense',\r\n    cellClass: cellClassSecAction,\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static Fields: ColDef = {\r\n    width: 94,\r\n    headerClass: 'dense',\r\n    cellClass: cellClassSecAction,\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  /**\r\n   * Very narrow columns, typically just showing 1 character\r\n   */\r\n  static Character: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'no-outline',\r\n    ...textSortFilter,\r\n  };\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Id: ColDef = {\r\n    headerName: 'ID',\r\n    field: 'Id',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'id-action no-padding no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static IdWithDefaultRenderer: ColDef = {\r\n    ...ColumnDefinitions.Id,\r\n    cellRenderer: IdFieldComponent,\r\n  }\r\n\r\n  static Boolean: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'number-cell no-outline'.split(' '),\r\n    sortable: true,\r\n  };\r\n\r\n  static Boolean2: ColDef = {\r\n    width: 100,\r\n    sortable: true,\r\n    cellClass: 'no-outline',\r\n    filter: BooleanFilterComponent,\r\n  };\r\n\r\n  static Boolean3: ColDef = {\r\n    headerClass: 'dense',\r\n    width: 80,\r\n    cellClass: 'no-outline',\r\n    cellRenderer: TrueFalseComponent,\r\n    cellRendererParams: (() => ({\r\n      reverse: false,\r\n    } satisfies TrueFalseParams))(),\r\n  }\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Number: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'number-cell no-outline'.split(' '),\r\n    ...textSortFilter,\r\n  };\r\n\r\n  static TextWideType: ColDef = {\r\n    flex: 3,\r\n    minWidth: 250,\r\n    cellClass: 'primary-action highlight'.split(' '),\r\n    ...textSortFilter,\r\n  };\r\n\r\n  static TextWide: ColDef = {\r\n    flex: 2,\r\n    minWidth: 250,\r\n    cellClass: 'no-outline',\r\n    ...textSortFilter,\r\n  };\r\n\r\n  static TextWideMin100: ColDef = {\r\n    flex: 1,\r\n    minWidth: 100,\r\n    ...textSortFilter,\r\n  }\r\n\r\n  static TextWideFlex3: ColDef = {\r\n    flex: 3,\r\n    minWidth: 250,\r\n    cellClass: 'no-outline',\r\n    ...textSortFilter,\r\n  };\r\n\r\n  static TextNarrow: ColDef = {\r\n    flex: 1,\r\n    minWidth: 150,\r\n    cellClass: 'no-outline',\r\n    ...textSortFilter,\r\n  };\r\n\r\n  static TextWideActionClass: ColDef = {\r\n    flex: 2,\r\n    minWidth: 250,\r\n    cellClass: 'primary-action no-padding no-outline'.split(' '),\r\n    ...textSortFilter,\r\n  };\r\n\r\n  static idFieldParamsTooltipGetter<T extends { Id: string | number, Guid?: string }>(key?: keyof T): IdFieldParams<T> {\r\n    const objWithTooltipGetter: IdFieldParams<T> = {\r\n      tooltipGetter: (contentType: T) => `ID: ${contentType.Id}\\nGUID: ${contentType[key || \"Guid\"]}`,\r\n    };\r\n    return objWithTooltipGetter;\r\n  }\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { BooleanFilterModel } from './boolean-filter.model';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\n\r\n@Component({\r\n  selector: 'app-boolean-filter',\r\n  templateUrl: './boolean-filter.component.html',\r\n  styleUrls: ['./boolean-filter.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    MatRadioModule,\r\n  ]\r\n})\r\nexport class BooleanFilterComponent implements IFilterAngularComp {\r\n  filter = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.filter !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: boolean = this.filterParams.valueGetter(valueGetterParams);\r\n    if (value == null) { return false; }\r\n    return value.toString() === this.filter;\r\n  }\r\n\r\n  getModel(): BooleanFilterModel {\r\n    if (!this.isFilterActive()) return;\r\n    return {\r\n      filterType: 'boolean',\r\n      filter: this.filter,\r\n    };\r\n  }\r\n\r\n  setModel(model: BooleanFilterModel) {\r\n    this.filter = model ? model.filter : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<mat-radio-group [(ngModel)]=\"filter\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">True</mat-radio-button>\r\n  <mat-radio-button value=\"false\">False</mat-radio-button>\r\n</mat-radio-group>\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    NgClass,\r\n    NgTemplateOutlet\r\n  ]\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    MatIconModule,\r\n    TippyDirective,\r\n  ]\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(): void {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>","export const dropdownInsertValue = 'DROPDOWN_INSERT_VALUE' as const;\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\nconst logThis = false;\r\n\r\n@Directive({\r\n  selector: '[appClickStopPropagation]',\r\n  standalone: true,\r\n})\r\nexport class ClickStopPropagationDirective {\r\n  constructor() {\r\n    if (logThis)\r\n      console.log('ClickStopPropagationDirective.constructor');\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    if (logThis)\r\n      console.log('ClickStopPropagationDirective.onClick', event);\r\n    event.stopPropagation();\r\n  }\r\n\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { GlobalConfigService } from '../services/global-config.service';\r\n\r\n@Directive({\r\n  selector: '[appToggleDebug]',\r\n  standalone: true\r\n})\r\nexport class ToggleDebugDirective {\r\n\r\n  constructor(private globalConfigService: GlobalConfigService) { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    const CTRL_SHIFT_ALT_CLICK = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.shiftKey && event.altKey;\r\n    if (CTRL_SHIFT_ALT_CLICK) {\r\n      this.globalConfigService.toggleDebugEnabled();\r\n      window.getSelection().removeAllRanges();\r\n    }\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { ContentType } from '../../app-administration/models/content-type.model';\r\nimport { webApiTypeRoot } from '../../app-administration/services/content-types.service';\r\nimport { Context } from '../services/context';\r\nimport { Field, FieldInputTypeOption } from './field.model';\r\nimport { InputTypeMetadata } from './input-type-metadata.model';\r\nimport { InputTypeStrict } from './input-type-catalog';\r\n\r\nexport const webApiFieldsRoot = 'admin/field/';\r\nexport const webApiFieldsAll = 'admin/field/all';\r\nexport const webApiFieldsGetShared = 'admin/field/GetSharedFields';\r\n\r\n@Injectable()\r\nexport class ContentTypesFieldsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  typeListRetrieve() {\r\n    return this.http.get<string[]>(this.apiUrl(webApiFieldsRoot + 'DataTypes'), {\r\n      params: { appid: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getInputTypesList() {\r\n    return this.http\r\n      .get<InputTypeMetadata[]>(this.apiUrl(webApiFieldsRoot + 'InputTypes'), { params: { appid: this.context.appId.toString() } })\r\n      .pipe(\r\n        map(inputConfigs => {\r\n          const inputTypeOptions = inputConfigs.map(config => {\r\n            const option: FieldInputTypeOption = {\r\n              dataType: config.Type.substring(0, config.Type.indexOf('-')),\r\n              inputType: config.Type,\r\n              label: config.Label,\r\n              description: config.Description,\r\n              isDefault: config.IsDefault,\r\n              isObsolete: config.IsObsolete,\r\n              isRecommended: config.IsRecommended,\r\n              obsoleteMessage: config.ObsoleteMessage,\r\n              icon: config.IsDefault ? 'star' : config.IsRecommended ? 'star_outline' : null,\r\n            };\r\n            return option;\r\n          });\r\n          return inputTypeOptions;\r\n        }),\r\n      );\r\n  }\r\n\r\n  getReservedNames() {\r\n    return this.http.get<Record<string, string>>(this.apiUrl(webApiFieldsRoot + 'ReservedNames'));\r\n  }\r\n\r\n  /** Get all fields for some content type */\r\n  getFields(contentTypeStaticName: string) {\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsAll), {\r\n        params: { appid: this.context.appId.toString(), staticName: contentTypeStaticName },\r\n      })\r\n      .pipe(\r\n        map(fields => {\r\n          if (fields) {\r\n            for (const fld of fields) {\r\n              if (!fld.Metadata) continue;\r\n              const md = fld.Metadata;\r\n              const allMd = md.All;\r\n              const typeMd = md[fld.Type];\r\n              const inputMd = md[fld.InputType];\r\n              md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n            }\r\n          }\r\n          return fields;\r\n        }),\r\n      );\r\n  }\r\n\r\n  /** Get all possible sharable fields for a new sharing */\r\n  getShareableFields() {\r\n    return this.http.get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString() },\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Get sharable fields which are possible for this attribute.\r\n   * \r\n   * Reason is that eg. a bool-attribute can only receive metadata from a bool attribute, etc.\r\n   * \r\n   * @param attributeId the existing attributeId which will receive the new metadata\r\n   */\r\n  getShareableFieldsFor(attributeId: number) {\r\n    // TODO: @SDV - do the same as in getShareableFields()\r\n    // but add parameter attributeId to the webapi call\r\n    // I'll create the backend afterwards\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString(), attributeId: attributeId.toString() },\r\n      });\r\n  }\r\n\r\n  addInheritedField(targetContentTypeId: number, sourceContentTypeStaticName: string, sourceFieldGuid: string, newName: string) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'AddInheritedField'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: targetContentTypeId.toString(),\r\n        SourceType: sourceContentTypeStaticName,\r\n        SourceField: sourceFieldGuid,\r\n        name: newName,\r\n      }\r\n    });\r\n  }\r\n\r\n  share(attributeId: number, share: boolean = true) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Share'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        share,\r\n      },\r\n    });\r\n  }\r\n\r\n  inherit(attributeId: number, sourceFieldGuid: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Inherit'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        inheritMetadataOf: sourceFieldGuid,\r\n      },\r\n    });\r\n  }\r\n\r\n  reOrder(idArray: number[], contentType: ContentType) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'Sort'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        order: JSON.stringify(idArray),\r\n      },\r\n    });\r\n  }\r\n\r\n  setTitle(item: Field, contentType: ContentType) {\r\n    return this.http.post<null>(this.apiUrl(webApiTypeRoot + 'SetTitle'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  rename(fieldId: number, contentTypeId: number, newName: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Rename'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentTypeId.toString(),\r\n        attributeId: fieldId.toString(),\r\n        newName,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(item: Field, contentType: ContentType) {\r\n    if (item.IsTitle) {\r\n      throw new Error('Can\\'t delete Title');\r\n    }\r\n\r\n    return this.http.delete<boolean>(this.apiUrl(webApiFieldsRoot + 'Delete'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  add(newField: Partial<Field>, contentTypeId: number) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'Add'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: contentTypeId.toString(),\r\n        Id: newField.Id.toString(),\r\n        Type: newField.Type,\r\n        InputType: newField.InputType,\r\n        StaticName: newField.StaticName,\r\n        IsTitle: newField.IsTitle.toString(),\r\n        Index: newField.SortOrder.toString(),\r\n      }\r\n    });\r\n  }\r\n\r\n  updateInputType(id: number, staticName: string, inputType: InputTypeStrict) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'InputType'), null, {\r\n      params: { appId: this.context.appId.toString(), attributeId: id.toString(), field: staticName, inputType }\r\n    });\r\n  }\r\n}\r\n","export const DataTypeCatalog = {\r\n  Boolean: 'Boolean',\r\n  Custom: 'Custom',\r\n  DateTime: 'DateTime',\r\n  Empty: 'Empty',\r\n  Entity: 'Entity',\r\n  Hyperlink: 'Hyperlink',\r\n  Number: 'Number',\r\n  String: 'String',\r\n} as const;\r\n\r\nexport type DataTypeStrict = typeof DataTypeCatalog[keyof typeof DataTypeCatalog];\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","import { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { EavLogger } from '../logging/eav-logger';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { ServiceBase } from '../services/service-base';\r\n\r\nconst logSpecs = {\r\n  enabled: false,\r\n  name: 'DialogRoutingService',\r\n  specs: {\r\n    doOnDialogClosed: true,\r\n  }\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase implements OnDestroy {\r\n\r\n  log = new EavLogger(logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.destroy();\r\n  }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe(() => { callback(); })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  public navParentFirstChild(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route.parent.firstChild });\r\n  }\r\n  \r\n  childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n\r\n\r\n}\r\n","import { Observable, pipe, UnaryFunction } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport isEqual from 'lodash-es/isEqual';\r\n\r\n/**\r\n * Combine map and distinctUntilChanged, as this is a very common pattern.\r\n * @param fn the mapping function\r\n * @returns\r\n */\r\nexport function mapUntilChanged<T, R>(\r\n  fn: (state: T) => R\r\n): UnaryFunction<Observable<T>, Observable<R>> {\r\n  return pipe(\r\n    distinctUntilChanged(),\r\n    map(fn),\r\n    distinctUntilChanged(),\r\n  );\r\n}\r\n\r\nexport function mapUntilObjChanged<T, R>(\r\n  fn: (state: T) => R\r\n): UnaryFunction<Observable<T>, Observable<R>> {\r\n  return pipe(\r\n    distinctUntilChanged(),\r\n    map(fn),\r\n    distinctUntilChanged(isEqual),\r\n  );\r\n}\r\n","import isEqual from 'lodash-es/isEqual';\r\n\r\nexport class RxHelpers {\r\n\r\n  static boolEquals(x: boolean, y: boolean): boolean {\r\n    return x === y;\r\n  }\r\n\r\n  static stringEquals(x: string, y: string): boolean {\r\n    return x === y;\r\n  }\r\n\r\n  static valueEquals<T>(x: T, y: T): boolean {\r\n    return x === y;\r\n  }\r\n\r\n  static objectsEqual<T>(x: T, y: T): boolean {\r\n    if (x == null || y == null) return x === y;\r\n\r\n    const obj1 = x as Record<string, any>;\r\n    const obj2 = y as Record<string, any>;\r\n\r\n    const keys1 = Object.keys(obj1);\r\n    const keys2 = Object.keys(obj2);\r\n    if (keys1.length !== keys2.length) return false;\r\n\r\n    const equal = keys1.every(key1 => {\r\n      if (!obj2.hasOwnProperty(key1)) return false;\r\n\r\n      return obj1[key1] === obj2[key1];\r\n    });\r\n\r\n    return equal;\r\n  }\r\n\r\n  static arraysEqual<T>(x: T[], y: T[]): boolean {\r\n    if (x == null || y == null) return x === y;\r\n\r\n    if (x.length !== y.length) return false;\r\n\r\n    const equal = x.every((item, index) => {\r\n      return x[index] === y[index];\r\n    });\r\n\r\n    return equal;\r\n  }\r\n\r\n  /** used as .filter(distinct), filters array to only have distinct values */\r\n  static distinct<T>(value: T, index: number, array: T[]): boolean {\r\n    return array.indexOf(value) === index;\r\n  }\r\n\r\n}\r\n","import { Injectable, computed, signal } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { toObservable } from '@angular/core/rxjs-interop';\r\nimport { keyDebug } from '../constants/session.constants';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GlobalConfigService {\r\n\r\n  private debugState = signal<GlobalConfig>(null);\r\n\r\n  isDebug = computed(() => !!this.debugState()?.allowDebugMode && !!this.debugState()?.debugEnabled);\r\n\r\n  /** This observable is a left-over, try to remove once more is refactored */\r\n  debugEnabled$ = toObservable(this.isDebug);\r\n\r\n  constructor(private snackBar: MatSnackBar) {\r\n    const initial: GlobalConfig = {\r\n      id: 0,\r\n      debugEnabled: sessionStorage.getItem(keyDebug) === 'true',\r\n      allowDebugMode: false,\r\n    };\r\n    this.debugState.set(initial);\r\n  }\r\n\r\n  allowDebug(allow: boolean): void {\r\n    const oldConfig = this.debugState();\r\n    if (oldConfig.allowDebugMode === allow)\r\n      return;\r\n\r\n    const newConfig: GlobalConfig = {\r\n      ...oldConfig,\r\n      allowDebugMode: allow,\r\n    };\r\n    this.debugState.set(newConfig);\r\n  }\r\n\r\n  toggleDebugEnabled(): void {\r\n    const oldConfig = this.debugState();\r\n    if (!oldConfig.allowDebugMode) {\r\n      this.snackBar.open('You do not have permissions to enter developer mode', null, { duration: 3000 });\r\n      return;\r\n    }\r\n\r\n    const newConfig: GlobalConfig = {\r\n      ...oldConfig,\r\n      debugEnabled: !oldConfig.debugEnabled,\r\n    };\r\n    this.debugState.set(newConfig);\r\n    this.snackBar.open(newConfig.debugEnabled ? 'developer mode on' : 'developer mode off', null, { duration: 3000 });\r\n  }\r\n}\r\n\r\ninterface GlobalConfig {\r\n  id: 0;\r\n  debugEnabled: boolean;\r\n  allowDebugMode: boolean;\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavLogger } from '../logging/eav-logger';\r\nimport { Context } from './context';\r\nimport { QueryStreams } from '../models/query-stream.model';\r\n\r\nconst logSpecs = {\r\n  enabled: false,\r\n  name: 'QueryService',\r\n  specs: {\r\n    all: false,\r\n    getAvailableEntities: false,\r\n    getEntities: false,\r\n  }\r\n};\r\n\r\n@Injectable()\r\nexport class QueryService {\r\n\r\n  log = new EavLogger(logSpecs);\r\n  constructor(private http: HttpClient, private context: Context) { }\r\n\r\n  getAvailableEntities(queryUrl: string, params: string, fields: string, entitiesFilter?: string[]): Observable<QueryStreams> {\r\n    this.log.fnIf('getAvailableEntities', { queryUrl, params, fields, entitiesFilter });\r\n    // Check if any params we should auto-add are already set (like in a query which has these params set in the configuration)\r\n    const hasParams = !!params;\r\n    const paramsLower = params?.toLocaleLowerCase() ?? '';\r\n    const hasAppId = paramsLower.includes('appid=') ?? false;\r\n    const allParams = ''\r\n      + (hasAppId ? '' : `&appId=${this.context.appId}`)\r\n      + (hasParams ? `&${params}` : '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(`app/auto/query/${queryUrl}?${urlParams}`,\r\n      {\r\n        Guids: entitiesFilter,\r\n      },\r\n    );\r\n  }\r\n\r\n  getEntities({ contentTypes, itemIds, fields, log }: { contentTypes: string[]; itemIds: string[]; fields: string; log: string }): Observable<QueryStreams> {\r\n    this.log.fnIf(`getEntities`, { log, contentTypes, itemIds, fields });\r\n    const allParams =\r\n      '&typeNames=' + (contentTypes?.join(',') ?? '')\r\n      + `&appId=${this.context.appId}`\r\n      + '&itemIds=' + (itemIds?.join(',') ?? '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(\r\n      `app/auto/query/System.EntityPicker/Default?${urlParams}`,\r\n      {}\r\n    );\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/** Base class for services, withOUT logging */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  // todo use this instead\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n  // Note: we can't do this, because angular compiler complains about wanting to implement OnDestroy\r\n  // and if we do that, it will want a decorator, which we can't have here.\r\n  // ngOnDestroy() {\r\n  //   this.destroy();\r\n  // }\r\n\r\n}\r\n","/**\n * @license Angular v17.3.11\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { assertInInjectionContext, inject, DestroyRef, ɵRuntimeError, ɵgetOutputDestroyRef, Injector, effect, untracked, assertNotInReactiveContext, signal, computed } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Operator which completes the Observable when the calling context (component, directive, service,\n * etc) is destroyed.\n *\n * @param destroyRef optionally, the `DestroyRef` representing the current context. This can be\n *     passed explicitly to use `takeUntilDestroyed` outside of an [injection\n * context](guide/dependency-injection-context). Otherwise, the current `DestroyRef` is injected.\n *\n * @developerPreview\n */\nfunction takeUntilDestroyed(destroyRef) {\n    if (!destroyRef) {\n        assertInInjectionContext(takeUntilDestroyed);\n        destroyRef = inject(DestroyRef);\n    }\n    const destroyed$ = new Observable(observer => {\n        const unregisterFn = destroyRef.onDestroy(observer.next.bind(observer));\n        return unregisterFn;\n    });\n    return (source) => {\n        return source.pipe(takeUntil(destroyed$));\n    };\n}\n\n/**\n * Implementation of `OutputRef` that emits values from\n * an RxJS observable source.\n *\n * @internal\n */\nclass OutputFromObservableRef {\n    constructor(source) {\n        this.source = source;\n        this.destroyed = false;\n        this.destroyRef = inject(DestroyRef);\n        this.destroyRef.onDestroy(() => {\n            this.destroyed = true;\n        });\n    }\n    subscribe(callbackFn) {\n        if (this.destroyed) {\n            throw new ɵRuntimeError(953 /* ɵRuntimeErrorCode.OUTPUT_REF_DESTROYED */, ngDevMode &&\n                'Unexpected subscription to destroyed `OutputRef`. ' +\n                    'The owning directive/component is destroyed.');\n        }\n        // Stop yielding more values when the directive/component is already destroyed.\n        const subscription = this.source.pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\n            next: value => callbackFn(value),\n        });\n        return {\n            unsubscribe: () => subscription.unsubscribe(),\n        };\n    }\n}\n/**\n * Declares an Angular output that is using an RxJS observable as a source\n * for events dispatched to parent subscribers.\n *\n * The behavior for an observable as source is defined as followed:\n *    1. New values are forwarded to the Angular output (next notifications).\n *    2. Errors notifications are not handled by Angular. You need to handle these manually.\n *       For example by using `catchError`.\n *    3. Completion notifications stop the output from emitting new values.\n *\n * @usageNotes\n * Initialize an output in your directive by declaring a\n * class field and initializing it with the `outputFromObservable()` function.\n *\n * ```ts\n * @Directive({..})\n * export class MyDir {\n *   nameChange$ = <some-observable>;\n *   nameChange = outputFromObservable(this.nameChange$);\n * }\n * ```\n *\n * @developerPreview\n */\nfunction outputFromObservable(observable, opts) {\n    ngDevMode && assertInInjectionContext(outputFromObservable);\n    return new OutputFromObservableRef(observable);\n}\n\n/**\n * Converts an Angular output declared via `output()` or `outputFromObservable()`\n * to an observable.\n *\n * You can subscribe to the output via `Observable.subscribe` then.\n *\n * @developerPreview\n */\nfunction outputToObservable(ref) {\n    const destroyRef = ɵgetOutputDestroyRef(ref);\n    return new Observable(observer => {\n        // Complete the observable upon directive/component destroy.\n        // Note: May be `undefined` if an `EventEmitter` is declared outside\n        // of an injection context.\n        destroyRef?.onDestroy(() => observer.complete());\n        const subscription = ref.subscribe(v => observer.next(v));\n        return () => subscription.unsubscribe();\n    });\n}\n\n/**\n * Exposes the value of an Angular `Signal` as an RxJS `Observable`.\n *\n * The signal's value will be propagated into the `Observable`'s subscribers using an `effect`.\n *\n * `toObservable` must be called in an injection context unless an injector is provided via options.\n *\n * @developerPreview\n */\nfunction toObservable(source, options) {\n    !options?.injector && assertInInjectionContext(toObservable);\n    const injector = options?.injector ?? inject(Injector);\n    const subject = new ReplaySubject(1);\n    const watcher = effect(() => {\n        let value;\n        try {\n            value = source();\n        }\n        catch (err) {\n            untracked(() => subject.error(err));\n            return;\n        }\n        untracked(() => subject.next(value));\n    }, { injector, manualCleanup: true });\n    injector.get(DestroyRef).onDestroy(() => {\n        watcher.destroy();\n        subject.complete();\n    });\n    return subject.asObservable();\n}\n\n/**\n * Get the current value of an `Observable` as a reactive `Signal`.\n *\n * `toSignal` returns a `Signal` which provides synchronous reactive access to values produced\n * by the given `Observable`, by subscribing to that `Observable`. The returned `Signal` will always\n * have the most recent value emitted by the subscription, and will throw an error if the\n * `Observable` errors.\n *\n * With `requireSync` set to `true`, `toSignal` will assert that the `Observable` produces a value\n * immediately upon subscription. No `initialValue` is needed in this case, and the returned signal\n * does not include an `undefined` type.\n *\n * By default, the subscription will be automatically cleaned up when the current [injection\n * context](/guide/dependency-injection-context) is destroyed. For example, when `toSignal` is\n * called during the construction of a component, the subscription will be cleaned up when the\n * component is destroyed. If an injection context is not available, an explicit `Injector` can be\n * passed instead.\n *\n * If the subscription should persist until the `Observable` itself completes, the `manualCleanup`\n * option can be specified instead, which disables the automatic subscription teardown. No injection\n * context is needed in this configuration as well.\n *\n * @developerPreview\n */\nfunction toSignal(source, options) {\n    ngDevMode &&\n        assertNotInReactiveContext(toSignal, 'Invoking `toSignal` causes new subscriptions every time. ' +\n            'Consider moving `toSignal` outside of the reactive context and read the signal value where needed.');\n    const requiresCleanup = !options?.manualCleanup;\n    requiresCleanup && !options?.injector && assertInInjectionContext(toSignal);\n    const cleanupRef = requiresCleanup ? options?.injector?.get(DestroyRef) ?? inject(DestroyRef) : null;\n    // Note: T is the Observable value type, and U is the initial value type. They don't have to be\n    // the same - the returned signal gives values of type `T`.\n    let state;\n    if (options?.requireSync) {\n        // Initially the signal is in a `NoValue` state.\n        state = signal({ kind: 0 /* StateKind.NoValue */ });\n    }\n    else {\n        // If an initial value was passed, use it. Otherwise, use `undefined` as the initial value.\n        state = signal({ kind: 1 /* StateKind.Value */, value: options?.initialValue });\n    }\n    // Note: This code cannot run inside a reactive context (see assertion above). If we'd support\n    // this, we would subscribe to the observable outside of the current reactive context, avoiding\n    // that side-effect signal reads/writes are attribute to the current consumer. The current\n    // consumer only needs to be notified when the `state` signal changes through the observable\n    // subscription. Additional context (related to async pipe):\n    // https://github.com/angular/angular/pull/50522.\n    const sub = source.subscribe({\n        next: value => state.set({ kind: 1 /* StateKind.Value */, value }),\n        error: error => {\n            if (options?.rejectErrors) {\n                // Kick the error back to RxJS. It will be caught and rethrown in a macrotask, which causes\n                // the error to end up as an uncaught exception.\n                throw error;\n            }\n            state.set({ kind: 2 /* StateKind.Error */, error });\n        },\n        // Completion of the Observable is meaningless to the signal. Signals don't have a concept of\n        // \"complete\".\n    });\n    if (ngDevMode && options?.requireSync && state().kind === 0 /* StateKind.NoValue */) {\n        throw new ɵRuntimeError(601 /* ɵRuntimeErrorCode.REQUIRE_SYNC_WITHOUT_SYNC_EMIT */, '`toSignal()` called with `requireSync` but `Observable` did not emit synchronously.');\n    }\n    // Unsubscribe when the current context is destroyed, if requested.\n    cleanupRef?.onDestroy(sub.unsubscribe.bind(sub));\n    // The actual returned signal is a `computed` of the `State` signal, which maps the various states\n    // to either values or errors.\n    return computed(() => {\n        const current = state();\n        switch (current.kind) {\n            case 1 /* StateKind.Value */:\n                return current.value;\n            case 2 /* StateKind.Error */:\n                throw current.error;\n            case 0 /* StateKind.NoValue */:\n                // This shouldn't really happen because the error is thrown on creation.\n                // TODO(alxhub): use a RuntimeError when we finalize the error semantics\n                throw new ɵRuntimeError(601 /* ɵRuntimeErrorCode.REQUIRE_SYNC_WITHOUT_SYNC_EMIT */, '`toSignal()` called with `requireSync` but `Observable` did not emit synchronously.');\n        }\n    });\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { outputFromObservable, outputToObservable, takeUntilDestroyed, toObservable, toSignal };\n"],"x_google_ignoreList":[48]}