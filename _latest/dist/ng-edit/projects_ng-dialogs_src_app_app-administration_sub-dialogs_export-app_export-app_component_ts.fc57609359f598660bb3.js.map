{"version":3,"sources":["./projects/ng-dialogs/src/app/app-administration/sub-dialogs/export-app/export-app.component.html","./projects/ng-dialogs/src/app/app-administration/sub-dialogs/export-app/export-app.component.ts"],"names":["Name","Guid","Version","dialogRef","exportAppService","hostClass","includeContentGroups","resetAppGuid","appInfo$","isExporting$","templateVars$","this","pipe","appInfo","isExporting","ngOnInit","getAppInfo","subscribe","next","ngOnDestroy","complete","closeDialog","close","exportApp","ExportAppComponent"],"mappings":"wYAME,0B,sCAOA,kBACE,gBAA2B,iBAAK,QAChC,iBACE,cAAI,SAA6B,QACjC,cAAI,SAA6B,QACjC,cAAI,SAAmC,QACzC,QAEA,iBAA2B,qBAAQ,QACnC,kBACE,eAAI,UAAyC,QAC7C,eAAI,UAA2C,QAC/C,eACE,UAEF,QACA,eAAI,UAAyD,QAC7D,eAAI,UAA6D,QACnE,QAEA,mBACE,mBACE,4BAAc,oFACZ,oBACE,uJAEF,QACF,QACF,QACA,mBACE,4BAAc,4EACZ,oBACE,+HAEF,QACF,QACF,QACF,QACF,Q,qCAnCQ,kCAAAA,KAAA,IACA,kCAAAC,KAAA,IACA,qCAAAC,QAAA,IAKA,uDACA,yDAEF,4IAGE,uEACA,2EAKY,iDAAkC,0CAQlC,yCAA0B,mD,sCA3ChD,SAEE,iBACE,iBAA8B,sBAAU,QAC1C,QAEA,+BAEA,eACE,sCAAyB,cAAI,eAAG,QAAM,wFACf,gBAAkE,sBAAS,QAAI,eACxG,QAEA,0BAwCA,kBACE,qBAAwD,iEACtD,qBACF,QACA,qBAAuE,+DACrE,yBACF,QACF,QACF,Q,qBAvDgB,qCAO+C,iCAyCjC,yCAGe,0CClD7C,iBAgBE,WAAoBC,EAAqDC,GAArD,KAAAD,YAAqD,KAAAC,mBAV/C,KAAAC,UAAY,mBAEtC,KAAAC,sBAAuB,EACvB,KAAAC,cAAe,EACP,KAAAC,SAAW,IAAI,IAAyB,MACxC,KAAAC,aAAe,IAAI,KAAgB,GAC3C,KAAAC,eAAgB,QAAc,CAACC,KAAKH,SAAUG,KAAKF,eAAeG,MAChE,OAAI,SAAC,G,IAAA,gBAA2B,OAAGC,QAAtB,KAA+BC,YAAlB,S,OAK5B,YAAAC,SAAA,sBACEJ,KAAKP,iBAAiBY,aAAaC,UAAU,SAAAJ,GAC3C,EAAKL,SAASU,KAAKL,MAIvB,YAAAM,YAAA,WACER,KAAKH,SAASY,WACdT,KAAKF,aAAaW,YAGpB,YAAAC,YAAA,WACEV,KAAKR,UAAUmB,SAGjB,YAAAC,UAAA,WACEZ,KAAKF,aAAaS,MAAK,GACvBP,KAAKP,iBAAiBmB,UAAUZ,KAAKL,qBAAsBK,KAAKJ,cAChEI,KAAKF,aAAaS,MAAK,I,sCA/BdM,GAAkB,yB,wBAAlBA,EAAkB,0E,swBDZ/B,iC,uBAAe,0C,scCOf","file":"projects_ng-dialogs_src_app_app-administration_sub-dialogs_export-app_export-app_component_ts.fc57609359f598660bb3.js","sourcesContent":["<ng-container *ngIf=\"(templateVars$ | async) as data\">\r\n\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">Export app</div>\r\n  </div>\r\n\r\n  <mat-spinner *ngIf=\"data.isExporting\" mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n\r\n  <p class=\"dialog-description\">\r\n    Pack the entire app to a <em>zip</em> folder which can be imported again to another site.\r\n    For further help visit <a href=\"https://2sxc.org/en/help?tag=export-app\" target=\"_blank\">2sxc Help</a>.\r\n  </p>\r\n\r\n  <div class=\"dialog-component-content fancy-scrollbar-light\" *ngIf=\"data.appInfo\">\r\n    <p class=\"app-info__title\">Specs</p>\r\n    <ul class=\"app-info__content\">\r\n      <li>Name: {{ data.appInfo.Name }}</li>\r\n      <li>Guid: {{ data.appInfo.Guid }}</li>\r\n      <li>Version: {{ data.appInfo.Version }}</li>\r\n    </ul>\r\n\r\n    <p class=\"app-info__title\">Contains</p>\r\n    <ul class=\"app-info__content\">\r\n      <li>{{ data.appInfo.EntitiesCount }} entities</li>\r\n      <li>{{ data.appInfo.LanguagesCount }} languages</li>\r\n      <li>\r\n        {{ data.appInfo.TemplatesCount }} templates (Token: {{ data.appInfo.HasTokenTemplates }}, Razor:\r\n        {{ data.appInfo.HasRazorTemplates }})\r\n      </li>\r\n      <li>{{ data.appInfo.TransferableFilesCount }} files to export</li>\r\n      <li>{{ data.appInfo.FilesCount }} files in the app folder totally</li>\r\n    </ul>\r\n\r\n    <div class=\"options-wrapper\">\r\n      <div class=\"option-box\">\r\n        <mat-checkbox [(ngModel)]=\"includeContentGroups\" [disabled]=\"resetAppGuid || data.isExporting\">\r\n          <span class=\"option-box__text\">\r\n            Include all content-groups to re-import the app in an exact copy of this site.\r\n            Only select this option when you copy an entire DNN site.\r\n          </span>\r\n        </mat-checkbox>\r\n      </div>\r\n      <div class=\"option-box\">\r\n        <mat-checkbox [(ngModel)]=\"resetAppGuid\" [disabled]=\"includeContentGroups || data.isExporting\">\r\n          <span class=\"option-box__text\">\r\n            Reset the app GUID to zero. You only need this option for special tutorial apps,\r\n            and usually must not select it.\r\n          </span>\r\n        </mat-checkbox>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"dialog-component-actions\">\r\n    <button mat-raised-button [disabled]=\"data.isExporting\" (click)=\"closeDialog()\">\r\n      Cancel\r\n    </button>\r\n    <button mat-raised-button color=\"accent\" [disabled]=\"data.isExporting\" (click)=\"exportApp()\">\r\n      Export App\r\n    </button>\r\n  </div>\r\n</ng-container>\r\n","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AppInfo } from '../../models/app-info.model';\r\nimport { ExportAppService } from '../../services/export-app.service';\r\n\r\n@Component({\r\n  selector: 'app-export-app',\r\n  templateUrl: './export-app.component.html',\r\n  styleUrls: ['./export-app.component.scss'],\r\n})\r\nexport class ExportAppComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  includeContentGroups = false;\r\n  resetAppGuid = false;\r\n  private appInfo$ = new BehaviorSubject<AppInfo>(null);\r\n  private isExporting$ = new BehaviorSubject(false);\r\n  templateVars$ = combineLatest([this.appInfo$, this.isExporting$]).pipe(\r\n    map(([appInfo, isExporting]) => ({ appInfo, isExporting })),\r\n  );\r\n\r\n  constructor(private dialogRef: MatDialogRef<ExportAppComponent>, private exportAppService: ExportAppService) { }\r\n\r\n  ngOnInit() {\r\n    this.exportAppService.getAppInfo().subscribe(appInfo => {\r\n      this.appInfo$.next(appInfo);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.appInfo$.complete();\r\n    this.isExporting$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  exportApp() {\r\n    this.isExporting$.next(true);\r\n    this.exportAppService.exportApp(this.includeContentGroups, this.resetAppGuid);\r\n    this.isExporting$.next(false);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}