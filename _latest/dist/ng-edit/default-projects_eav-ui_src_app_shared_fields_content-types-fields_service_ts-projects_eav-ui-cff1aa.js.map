{"version":3,"file":"default-projects_eav-ui_src_app_shared_fields_content-types-fields_service_ts-projects_eav-ui-cff1aa.js","mappings":"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","sources":["./projects/eav-ui/src/app/shared/fields/content-types-fields.service.ts","./projects/eav-ui/src/app/shared/services/entity.service.ts","./projects/eav-ui/src/app/shared/services/query.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { Of } from '../../../../../core';\r\nimport { ContentType } from '../../app-administration/models/content-type.model';\r\nimport { webApiTypeRoot } from '../../app-administration/services';\r\nimport { HttpServiceBase } from '../services/http-service-base';\r\nimport { Field, FieldInputTypeOption } from './field.model';\r\nimport { InputTypeCatalog } from './input-type-catalog';\r\nimport { InputTypeMetadata } from './input-type-metadata.model';\r\n\r\nexport const webApiFieldsAll = 'admin/field/all';\r\n\r\n// All WebApi paths - to easily search/find when looking for where these are used\r\nconst webApiDataTypes = 'admin/field/DataTypes';\r\nconst webApiReservedNames = 'admin/field/ReservedNames';\r\nconst webApiAddInheritedField = 'admin/field/AddInheritedField';\r\nconst webApiInputTypes = 'admin/field/InputTypes';\r\nconst webApiInputType = 'admin/field/InputType';\r\nconst webApiShare = 'admin/field/Share';\r\nconst webApiInherit = 'admin/field/Inherit';\r\nconst webApiSort = 'admin/field/Sort';\r\nconst webApiSetTitle = webApiTypeRoot + 'SetTitle';\r\nconst webApiRename = 'admin/field/Rename';\r\nconst webApiDelete = 'admin/field/Delete';\r\nconst webApiAdd = 'admin/field/Add';\r\nconst webApiFieldsGetShared = 'admin/field/GetSharedFields';\r\nconst webApiGetAncestors = 'admin/field/GetAncestors';\r\nconst webApiGetDescendants = 'admin/field/GetDescendants';\r\n\r\n\r\n@Injectable()\r\nexport class ContentTypesFieldsService extends HttpServiceBase {\r\n\r\n  protected paramsAppId(more: Record<string, string | number | boolean | ReadonlyArray<string | number | boolean>> = {}) {\r\n    return {\r\n      params: {\r\n        appid: this.appId,\r\n        ...more,\r\n      },\r\n    };\r\n  }\r\n\r\n  typeListRetrieve() {\r\n    return this.getHttpApiUrl<string[]>(webApiDataTypes, this.paramsAppId());\r\n  }\r\n\r\n  getInputTypesList() {\r\n    return this.getHttpApiUrl<InputTypeMetadata[]>(webApiInputTypes, this.paramsAppId())\r\n      .pipe(\r\n        map(inputConfigs => {\r\n          const inputTypeOptions = inputConfigs.map(config => ({\r\n            dataType: config.Type.substring(0, config.Type.indexOf('-')),\r\n            inputType: config.Type,\r\n            label: config.Label,\r\n            description: config.Description,\r\n            isDefault: config.IsDefault,\r\n            isObsolete: config.IsObsolete,\r\n            isRecommended: config.IsRecommended,\r\n            obsoleteMessage: config.ObsoleteMessage,\r\n            icon: config.IsDefault ? 'star' : config.IsRecommended ? 'star_outline' : null,\r\n          } satisfies FieldInputTypeOption));\r\n          return inputTypeOptions;\r\n        }),\r\n      );\r\n  }\r\n\r\n  getReservedNames() {\r\n    return this.getHttpApiUrl<Record<string, string>>(webApiReservedNames);\r\n  }\r\n\r\n  /** Get all fields for some content type */\r\n  getFields(contentTypeStaticName: string) {\r\n    return this.getHttpApiUrl<Field[]>(webApiFieldsAll, this.paramsAppId({ staticName: contentTypeStaticName }))\r\n      .pipe(\r\n        map(fields => {\r\n          if (fields) {\r\n            for (const fld of fields) {\r\n              if (!fld.Metadata) continue;\r\n              const md = fld.Metadata;\r\n              const allMd = md.All;\r\n              const typeMd = md[fld.Type];\r\n              const inputMd = md[fld.InputType];\r\n              md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n            }\r\n          }\r\n          return fields;\r\n        }),\r\n      );\r\n  }\r\n\r\n  /** Get all possible sharable fields for a new sharing */\r\n  getShareableFields() {\r\n    return this.getHttpApiUrl<Field[]>(webApiFieldsGetShared, this.paramsAppId());\r\n  }\r\n\r\n  /**\r\n   * Get sharable fields which are possible for this attribute.\r\n   * Reason is that eg. a bool-attribute can only receive metadata from a bool attribute, etc.\r\n   * @param attributeId the existing attributeId which will receive the new metadata\r\n   */\r\n  getShareableFieldsFor(attributeId: number) {\r\n    return this.#getShareinfo(webApiFieldsGetShared, attributeId);\r\n    // return this.getHttp<Field[]>(this.apiUrl(webApiFieldsGetShared), this.paramsAppId({ attributeId }));\r\n  }\r\n\r\n  getAncestors(attributeId: number) {\r\n    return this.#getShareinfo(webApiGetAncestors, attributeId);\r\n  }\r\n\r\n  getDescendants(attributeId: number) {\r\n    return this.#getShareinfo(webApiGetDescendants, attributeId);\r\n  }\r\n\r\n  #getShareinfo(endpoint: string, attributeId: number) {\r\n    return this.getHttpApiUrl<Field[]>(endpoint, this.paramsAppId({ attributeId }));\r\n  }\r\n\r\n  addInheritedField(targetContentTypeId: number, sourceType: string, sourceFieldGuid: string /* guid */, name: string) {\r\n    return this.http.post<number>(this.apiUrl(webApiAddInheritedField), null, this.paramsAppId({\r\n      contentTypeId: targetContentTypeId.toString(),\r\n      sourceType,\r\n      sourceField: sourceFieldGuid,\r\n      name,\r\n    }));\r\n  }\r\n\r\n  share(attributeId: number, share: boolean = true) {\r\n    return this.http.post<null>(this.apiUrl(webApiShare), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        attributeId: attributeId.toString(),\r\n        share,\r\n      },\r\n    });\r\n  }\r\n\r\n  inherit(attributeId: number, sourceFieldGuid: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiInherit), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        attributeId: attributeId.toString(),\r\n        inheritMetadataOf: sourceFieldGuid,\r\n      },\r\n    });\r\n  }\r\n\r\n  reOrder(idArray: number[], contentType: ContentType) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiSort), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentType.Id.toString(),\r\n        order: JSON.stringify(idArray),\r\n      },\r\n    });\r\n  }\r\n\r\n  setTitle(item: Field, contentType: ContentType) {\r\n    return this.http.post<null>(this.apiUrl(webApiSetTitle), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  rename(fieldId: number, contentTypeId: number, newName: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiRename), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentTypeId.toString(),\r\n        attributeId: fieldId.toString(),\r\n        newName,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(item: Field, contentType: ContentType) {\r\n    if (item.IsTitle)\r\n      throw new Error('Can\\'t delete Title');\r\n\r\n    return this.http.delete<boolean>(this.apiUrl(webApiDelete), {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  add(newField: Partial<Field>, contentTypeId: number) {\r\n    return this.http.post<number>(this.apiUrl(webApiAdd), null, {\r\n      params: {\r\n        AppId: this.appId,\r\n        ContentTypeId: contentTypeId.toString(),\r\n        Id: newField.Id.toString(),\r\n        Type: newField.Type,\r\n        InputType: newField.InputType,\r\n        StaticName: newField.StaticName,\r\n        IsTitle: newField.IsTitle.toString(),\r\n        Index: newField.SortOrder.toString(),\r\n      }\r\n    });\r\n  }\r\n\r\n  updateInputType(attributeId: number, field: string, inputType: Of<typeof InputTypeCatalog>) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiInputType), null, {\r\n      params: { appId: this.appId, attributeId, field, inputType }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { filter, map, Observable, shareReplay, switchMap } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { EntityLightIdentifier } from '../../../../../edit-types/src/EntityLight';\r\nimport { classLog } from '../logging';\r\nimport { HttpServiceBase } from './http-service-base';\r\nimport { QueryService } from './query.service';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  getEntities: false,\r\n  getAvailableEntities: false,\r\n  delete: false,\r\n};\r\n\r\nexport const webApiEntityRoot = 'admin/entity/';\r\nexport const webApiEntityList = 'admin/entity/list';\r\n\r\n@Injectable()\r\nexport class EntityService extends HttpServiceBase {\r\n\r\n  log = classLog({ EntityService }, logSpecs);\r\n\r\n  private queryService = transient(QueryService);\r\n\r\n  /**\r\n   * Get entities based on the content type name.\r\n   * As of 2024-04-29 only used in REST API.\r\n   * @param params\r\n   * @returns\r\n   */\r\n  getEntities$(params: Observable<{ contentTypeName: string }>): Observable<EntityLightIdentifier[]> {\r\n    this.log.fnIf('getEntities');\r\n    return params.pipe(\r\n      filter(p => p != null),\r\n      switchMap(p => this.getAvailableEntities(p.contentTypeName).pipe(shareReplay(1))),\r\n    );\r\n  }\r\n\r\n  private getAvailableEntities(contentTypeName: string, entitiesFilter?: string[]): Observable<EntityLightIdentifier[]> {\r\n    var log = this.log.fnIf('getAvailableEntities');\r\n    return this.queryService.getEntities({\r\n      contentTypes: [contentTypeName],\r\n      itemIds: entitiesFilter,\r\n      fields: 'Id,Guid,Title',\r\n      log: 'getAvailableEntities'\r\n    }).pipe(\r\n      map(data => data.Default)\r\n    );\r\n  }\r\n\r\n  delete(appId: number, contentType: string, entityId: number, force: boolean, parentId?: number, parentField?: string): Observable<null> {\r\n    this.log.fnIf('delete', { appId, contentType, entityId, force, parentId, parent });\r\n    return this.http.delete<null>(this.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: {\r\n        contentType,\r\n        id: entityId.toString(),\r\n        appId,\r\n        force: force.toString(),\r\n        ...(parentId && { parentId: parentId.toString() }),\r\n        ...(parentId && parentField && { parentField }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { classLog } from '../logging';\r\nimport { QueryStreams } from '../models/query-stream.model';\r\nimport { Context } from './context';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  getAvailableEntities: false,\r\n  getEntities: false,\r\n};\r\n\r\n@Injectable()\r\nexport class QueryService {\r\n\r\n  log = classLog({QueryService}, logSpecs);\r\n\r\n  constructor(private http: HttpClient, private context: Context) { }\r\n\r\n  getFromQuery(queryUrl: string, params: string, fields: string, entitiesFilter?: string[]): Observable<QueryStreams> {\r\n    this.log.fnIf('getAvailableEntities', { queryUrl, params, fields, entitiesFilter });\r\n    // Check if any params we should auto-add are already set (like in a query which has these params set in the configuration)\r\n    const hasParams = !!params;\r\n    const paramsLower = params?.toLocaleLowerCase() ?? '';\r\n    const hasAppId = paramsLower.includes('appid=') ?? false;\r\n    const allParams = ''\r\n      + (hasAppId ? '' : `&appId=${this.context.appId}`)\r\n      + (hasParams ? `&${params}` : '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(`app/auto/query/${queryUrl}?${urlParams}`,\r\n      {\r\n        Guids: entitiesFilter,\r\n      },\r\n    );\r\n  }\r\n\r\n  getEntities({ contentTypes, itemIds, fields, log }: { contentTypes: string[]; itemIds: string[]; fields: string; log: string }): Observable<QueryStreams> {\r\n    this.log.fnIf(`getEntities`, { log, contentTypes, itemIds, fields });\r\n    const allParams =\r\n      '&typeNames=' + (contentTypes?.join(',') ?? '')\r\n      + `&appId=${this.context.appId}`\r\n      + '&itemIds=' + (itemIds?.join(',') ?? '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(\r\n      `app/auto/query/System.EntityPicker/Default?${urlParams}`,\r\n      {}\r\n    );\r\n  }\r\n}\r\n"],"names":["map","webApiTypeRoot","HttpServiceBase","webApiFieldsAll","webApiDataTypes","webApiReservedNames","webApiAddInheritedField","webApiInputTypes","webApiInputType","webApiShare","webApiInherit","webApiSort","webApiSetTitle","webApiRename","webApiDelete","webApiAdd","webApiFieldsGetShared","webApiGetAncestors","webApiGetDescendants","ContentTypesFieldsService","paramsAppId","more","params","appid","appId","typeListRetrieve","getHttpApiUrl","getInputTypesList","pipe","inputConfigs","inputTypeOptions","config","dataType","Type","substring","indexOf","inputType","label","Label","description","Description","isDefault","IsDefault","isObsolete","IsObsolete","isRecommended","IsRecommended","obsoleteMessage","ObsoleteMessage","icon","getReservedNames","getFields","contentTypeStaticName","staticName","fields","fld","Metadata","md","allMd","All","typeMd","inputMd","InputType","merged","getShareableFields","getShareableFieldsFor","attributeId","getShareinfo","getAncestors","getDescendants","#getShareinfo","endpoint","addInheritedField","targetContentTypeId","sourceType","sourceFieldGuid","name","http","post","apiUrl","contentTypeId","toString","sourceField","share","inherit","inheritMetadataOf","reOrder","idArray","contentType","Id","order","JSON","stringify","setTitle","item","rename","fieldId","newName","delete","IsTitle","Error","add","newField","AppId","ContentTypeId","StaticName","Index","SortOrder","updateInputType","field","__ngFactoryType__","factory","ɵfac","filter","shareReplay","switchMap","transient","classLog","QueryService","logSpecs","all","getEntities","getAvailableEntities","webApiEntityRoot","webApiEntityList","EntityService","constructor","log","queryService","getEntities$","fnIf","p","contentTypeName","entitiesFilter","contentTypes","itemIds","data","Default","entityId","force","parentId","parentField","parent","id","HttpClient","Context","context","getFromQuery","queryUrl","hasParams","paramsLower","toLocaleLowerCase","hasAppId","includes","allParams","urlParams","Guids","join","i0","ɵɵinject","i1","i2"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}