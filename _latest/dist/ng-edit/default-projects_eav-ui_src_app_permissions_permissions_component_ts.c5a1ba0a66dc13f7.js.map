{"version":3,"file":"default-projects_eav-ui_src_app_permissions_permissions_component_ts.c5a1ba0a66dc13f7.js","mappings":"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","names":["EntitiesService","constructor","http","context","dnnContext","this","create","contentType","entity","post","params","appId","zoneId","update","entityId","delete","type","id","tryForce","$2sxc","apiUrl","webApiEntityRoot","toString","force","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_2__","jDH","factory","ɵfac","transient","token","injector","inject","Injector","providers","parent","get","undefined","self","TrueFalseComponent","trueIcon","falseIcon","agInit","value","reverse","icon","refresh","_angular_core__WEBPACK_IMPORTED_MODULE_0__","VBU","selectors","standalone","features","decls","vars","consts","template","rf","ctx","MatIconModule","encapsulation","PermissionsActionsComponent","deletePermission","onDelete","data","fesm2022_core","MatRippleModule","_r1","ctx_r1","closeDialog","editPermission","permissions","gridOptions","PermissionsComponent","BaseWithChildDialogComponent","router","route","dialogRef","permissionsService","snackBar","super","permissions$","BehaviorSubject","buildGridOptions","targetType","parseInt","snapshot","paramMap","keyType","key","prefills","eavConstants","metadata","language","PermissionType","ngOnInit","fetchPermissions","subscriptions","add","childDialogClosed$","subscribe","viewModel$","combineLatest","pipe","map","ngOnDestroy","complete","close","getAll","next","permission","form","items","ContentTypeName","contentTypes","For","Target","Object","values","find","m","target","TargetType","keyTypes","guid","Guid","number","Number","string","String","Prefill","EntityId","Id","formUrl","convertFormToUrl","navigate","relativeTo","confirm","Title","open","duration","defaultGridOptions","columnDefs","ColumnDefinitions","cellRenderer","IdFieldComponent","cellRendererParams","tooltipGetter","TextWide","headerName","field","sort","onCellClicked","Character","ActionsPinnedRight1","i4","PermissionsService","MetadataService","PermissionsComponent_Conditional_0_Template","tmp_0_0","MatButtonModule","i5","i6","RouterOutlet","MatDialogActions","AsyncPipe","SxcGridModule","i7","getMetadata","contentTypeName","_angular_core__WEBPACK_IMPORTED_MODULE_1__","entitiesService","metadataService","Items","_angular_core__WEBPACK_IMPORTED_MODULE_5__","AgBoolCellIconsDefault","states","true","tooltip","false","AgBoolIconRenderer_Conditional_1_ng_container_1_Template","ctx_r0","url","showIcon_r2","_c0","clickable","AgBoolIconRenderer","allSettings","settings","d","getUrl","core","AgBoolIconRenderer_Conditional_1_Template","AgBoolIconRenderer_Conditional_2_Template","AgBoolIconRenderer_ng_template_3_Template","TippyDirective","NgClass","width","cellClass","split","pinned","ActionsPinnedRight3","ActionsPinnedRight4","ActionsPinnedRight5","ActionsPinnedRight6","ActionsPinnedRight7","IconShow","headerClass","sortable","filter","BooleanFilterComponent","valueGetter","IsHidden","Fields","Boolean","Boolean2","Boolean3","TextWideType","flex","minWidth","TextWideMin100","TextWideFlex3","TextNarrow","TextWideActionClass","filterParams","isFilterActive","doesFilterPass","api","colDef","column","columnApi","node","getValue","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","$event","FormsModule","MatRadioModule","styles","align","copy","copyToClipboard"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/content-items/services/entities.service.ts","./projects/eav-ui/src/app/core/transient.ts","./projects/eav-ui/src/app/dev-rest/api/true-false/true-false.component.ts","./projects/eav-ui/src/app/dev-rest/api/true-false/true-false.component.html","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.html","./projects/eav-ui/src/app/permissions/permissions.component.html","./projects/eav-ui/src/app/permissions/permissions.component.ts","./projects/eav-ui/src/app/permissions/services/metadata.service.ts","./projects/eav-ui/src/app/permissions/services/permissions.service.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-params.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.html","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.component.ts","./projects/eav-ui/src/app/shared/ag-grid/column-definitions.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.html","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.html"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../edit/shared/models/eav';\r\nimport { webApiEntityRoot } from '../../edit/shared/services';\r\nimport { ItemInListIdentifier } from '../../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Injectable()\r\nexport class EntitiesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.context.appId.toString(), force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n\r\nexport interface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: ItemInListIdentifier;\r\n  [field: string]: any;\r\n}\r\n\r\nexport interface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n","import { Injector, ProviderToken, TypeProvider, inject } from '@angular/core';\r\n\r\n/**\r\n * Transient dependency injection provider.\r\n * This will create a new instance of the provided token,\r\n * without making it available in sub-components\r\n * as would happen with providers in a component.\r\n * \r\n * @param token the class which is injectable\r\n * @param injector the injector to use, if not provided, the current injector will be used.\r\n *     Not not necessary when using transient in the class properties construction or in the constructor,\r\n *     as the injector will be available in the constructor.\r\n *     But necessary when using transient inside anything else.\r\n * @returns \r\n */\r\nexport function transient<T>(token: ProviderToken<T>, injector?: Injector): T {\r\n  // make sure we have an injector\r\n  // this will throw an error, if transient is used outside of construction and without providing an injector\r\n  injector ??= inject(Injector);\r\n\r\n  // create a new injector which is only meant to be used for this transient instance\r\n  const subInjector = Injector.create({\r\n    providers: [\r\n      token as TypeProvider\r\n    ],\r\n    parent: injector\r\n  });\r\n\r\n  // return the instance\r\n  return subInjector.get(token, undefined, { self: true });\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { TrueFalseParams } from './true-false.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n    selector: 'app-rest-api-true-false',\r\n    templateUrl: './true-false.component.html',\r\n    standalone: true,\r\n    imports: [MatIconModule],\r\n})\r\nexport class TrueFalseComponent implements ICellRendererAngularComp {\r\n  icon: string;\r\n\r\n  private trueIcon = 'check_circle';\r\n  private falseIcon = 'circle';\r\n\r\n  agInit(params: ICellRendererParams & TrueFalseParams): void {\r\n    let value: boolean = params.value;\r\n    if (params.reverse) { value = !value; }\r\n    if (params.trueIcon) { this.trueIcon = params.trueIcon; }\r\n    if (params.falseIcon) { this.falseIcon = params.falseIcon; }\r\n    this.icon = value ? this.trueIcon : this.falseIcon;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon>{{ icon }}</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Permission } from '../models/permission.model';\r\nimport { PermissionsActionsParams } from './permissions-actions.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRippleModule } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-permissions-actions',\r\n  templateUrl: './permissions-actions.component.html',\r\n  styleUrls: ['./permissions-actions.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n  ],\r\n})\r\nexport class PermissionsActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & PermissionsActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & PermissionsActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deletePermission(): void {\r\n    const permission: Permission = this.params.data;\r\n    this.params.onDelete(permission);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deletePermission()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog nav-component-wrapper\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">Permissions</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"eav-dialog-content nav-component-wrapper\">\r\n      <router-outlet></router-outlet>\r\n      <div class=\"grid-wrapper\">\r\n        <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.permissions\" [gridOptions]=\"gridOptions\">\r\n        </ag-grid-angular>\r\n      </div>\r\n      <mat-dialog-actions align=\"end\">\r\n        <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new permission\" (click)=\"editPermission(null)\">\r\n          <mat-icon>add</mat-icon>\r\n        </button>\r\n      </mat-dialog-actions>\r\n    </div>\r\n  </div>\r\n}\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, Observable, combineLatest, map } from 'rxjs';\r\nimport { BaseWithChildDialogComponent } from '../shared/components/base-with-child-dialog.component';\r\nimport { IdFieldComponent } from '../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { Permission } from './models/permission.model';\r\nimport { PermissionsActionsComponent } from './permissions-actions/permissions-actions.component';\r\nimport { PermissionsActionsParams } from './permissions-actions/permissions-actions.models';\r\nimport { PermissionsService } from './services/permissions.service';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MetadataService } from './services/metadata.service';\r\nimport { EntitiesService } from '../content-items/services/entities.service';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\n\r\n@Component({\r\n  selector: 'app-permissions',\r\n  templateUrl: './permissions.component.html',\r\n  styleUrls: ['./permissions.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    MatDialogActions,\r\n    AsyncPipe,\r\n    SxcGridModule,\r\n  ],\r\n  providers: [\r\n    PermissionsService,\r\n    MetadataService,\r\n    EntitiesService,\r\n  ],\r\n})\r\nexport class PermissionsComponent extends BaseWithChildDialogComponent implements OnInit, OnDestroy {\r\n  permissions$ = new BehaviorSubject<Permission[]>(undefined);\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private targetType = parseInt(this.route.snapshot.paramMap.get('targetType'), 10);\r\n  private keyType = this.route.snapshot.paramMap.get('keyType') as MetadataKeyType;\r\n  private key = this.route.snapshot.paramMap.get('key');\r\n  private prefills: Record<string, Record<string, string>> = {\r\n    [eavConstants.metadata.language.targetType]: {\r\n      PermissionType: 'language',\r\n    },\r\n  };\r\n\r\n  viewModel$: Observable<PermissionsViewModel>;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<PermissionsComponent>,\r\n\r\n    private permissionsService: PermissionsService,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchPermissions();\r\n    this.subscriptions.add(this.childDialogClosed$().subscribe(() => { this.fetchPermissions(); }));\r\n    this.viewModel$ = combineLatest([\r\n      this.permissions$\r\n    ]).pipe(map(([permissions]) => ({ permissions })));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.permissions$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private fetchPermissions() {\r\n    this.permissionsService.getAll(this.targetType, this.keyType, this.key).subscribe(permissions => {\r\n      this.permissions$.next(permissions);\r\n    });\r\n  }\r\n\r\n  editPermission(permission?: Permission) {\r\n    let form: EditForm;\r\n    if (permission == null) {\r\n      form = {\r\n        items: [{\r\n          ContentTypeName: eavConstants.contentTypes.permissions,\r\n          For: {\r\n            Target: Object.values(eavConstants.metadata).find(m => m.targetType === this.targetType)?.target ?? this.targetType.toString(),\r\n            TargetType: this.targetType,\r\n            ...(this.keyType === eavConstants.keyTypes.guid && { Guid: this.key }),\r\n            ...(this.keyType === eavConstants.keyTypes.number && { Number: parseInt(this.key, 10) }),\r\n            ...(this.keyType === eavConstants.keyTypes.string && { String: this.key }),\r\n          },\r\n          ...(this.prefills[this.targetType] && { Prefill: this.prefills[this.targetType] }),\r\n        }],\r\n      };\r\n    } else {\r\n      form = {\r\n        items: [{ EntityId: permission.Id }],\r\n      };\r\n    }\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private deletePermission(permission: Permission) {\r\n    if (!confirm(`Delete '${permission.Title}' (${permission.Id})?`)) { return; }\r\n    this.snackBar.open('Deleting...');\r\n    this.permissionsService.delete(permission.Id).subscribe(() => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.fetchPermissions();\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.Id,\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<Permission> = {\r\n              tooltipGetter: (permission: Permission) => `ID: ${permission.Id}\\nGUID: ${permission.Guid}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Name',\r\n          field: 'Title',\r\n          sort: 'asc',\r\n          onCellClicked: (params) => {\r\n            const permission: Permission = params.data;\r\n            this.editPermission(permission);\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Identity',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Condition',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Character,\r\n          field: 'Grant',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight1,\r\n          cellRenderer: PermissionsActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: PermissionsActionsParams = {\r\n              onDelete: (permission) => this.deletePermission(permission),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface PermissionsViewModel {\r\n  permissions: Permission[];\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { MetadataDto } from '../../metadata';\r\nimport { MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nconst webApiRoot = 'admin/metadata/get';\r\n\r\n@Injectable()\r\nexport class MetadataService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param targetType type of target metadata item is for, e.g. for Entity, or ContentType\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of target metadata item is for\r\n   * @param contentTypeName name of content type where permissions are stored. If blank, backend returns all metadata except permissions\r\n   */\r\n  getMetadata(targetType: number, keyType: MetadataKeyType, key: string | number, contentTypeName?: string): Observable<MetadataDto> {\r\n    return this.http.get<MetadataDto>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        targetType: targetType.toString(),\r\n        keyType,\r\n        key: key.toString(),\r\n        ...(contentTypeName && { contentType: contentTypeName }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { EntitiesService } from '../../content-items/services/entities.service';\r\nimport { eavConstants, MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Permission } from '../models/permission.model';\r\nimport { MetadataService } from './metadata.service';\r\nimport { transient } from '../../core';\r\n\r\n@Injectable()\r\nexport class PermissionsService {\r\n\r\n  private metadataService = transient(MetadataService);\r\n\r\n  constructor(private entitiesService: EntitiesService) { }\r\n\r\n  getAll(targetType: number, keyType: MetadataKeyType, key: string): Observable<Permission[]> {\r\n    return this.metadataService.getMetadata(targetType, keyType, key, eavConstants.contentTypes.permissions).pipe(\r\n      map(metadata => metadata.Items as Permission[]),\r\n    );\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.entitiesService.delete(eavConstants.contentTypes.permissions, id, false);\r\n  }\r\n}\r\n","export interface AgBoolCellIconSetting {\r\n  clickable?: boolean;\r\n  tooltip: string;\r\n  icon: string;\r\n  url?: string;\r\n  getUrl?: (data: any) => string;\r\n}\r\n\r\nexport interface AgBoolCellIconSettings {\r\n  states: Record<'true' | 'false' | string, AgBoolCellIconSetting>;\r\n}\r\n\r\nexport interface AgBoolCellIconsParams<T = any> {\r\n  settings(data: T): AgBoolCellIconSettings;\r\n}\r\n\r\nexport const AgBoolCellIconsDefault: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      tooltip: 'true/on',\r\n      icon: 'radio_button_checked',\r\n    },\r\n    false: {\r\n      tooltip: 'false/off',\r\n      icon: 'radio_button_unchecked',\r\n    }\r\n  }\r\n};","<div class=\"icon-container\">\r\n  @if (data.url) {\r\n    <a [href]=\"data.url\" target=\"_blank\">\r\n      <ng-container *ngTemplateOutlet=\"showIcon\"></ng-container>\r\n    </a>\r\n  } @else {\r\n    <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n      <mat-icon>{{ data.icon }}</mat-icon>\r\n    </div>\r\n  }\r\n</div>\r\n\r\n<ng-template #showIcon>\r\n  <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n    <mat-icon>{{ data.icon }}</mat-icon>\r\n  </div>\r\n</ng-template>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { AgBoolCellIconSetting, AgBoolCellIconSettings, AgBoolCellIconsDefault, AgBoolCellIconsParams } from './ag-bool-icon-params';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgClass } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-ag-bool-icon-renderer',\r\n  templateUrl: './ag-bool-icon-renderer.html',\r\n  standalone: true,\r\n  imports: [TippyDirective, MatIconModule, NgClass],\r\n})\r\nexport class AgBoolIconRenderer implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  private allSettings: AgBoolCellIconSettings;\r\n\r\n  data: AgBoolCellIconSetting; // | { link: boolean  };\r\n\r\n  agInit(params: ICellRendererParams & AgBoolCellIconsParams): void {\r\n    this.value = params.value;\r\n\r\n    this.allSettings = params.settings?.(params.data) ?? AgBoolCellIconsDefault;\r\n    const d = this.allSettings.states[this.value ? 'true' : 'false'];\r\n    this.data = {\r\n      ...d,\r\n      url: d.url ?? d.getUrl?.(params.data),\r\n      // link: !!(d.url || d.getUrl),\r\n    };\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { ColDef } from '@ag-grid-community/core';\r\nimport { BooleanFilterComponent } from '../components/boolean-filter/boolean-filter.component';\r\nimport { App } from '../../apps-management/models/app.model';\r\nimport { AgBoolIconRenderer } from './apps-list-show/ag-bool-icon-renderer.component';\r\nimport { TrueFalseComponent } from '../../dev-rest/api/true-false/true-false.component';\r\nimport { TrueFalseParams } from '../../dev-rest/api/true-false/true-false.models';\r\n\r\nexport class ColumnDefinitions {\r\n  static ActionsPinnedRight1: ColDef = {\r\n    width: 42,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight3: ColDef = {\r\n    width: 122,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight4: ColDef = {\r\n    width: 162,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight5: ColDef = {\r\n    width: 202,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight6: ColDef = {\r\n    width: 82,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight7: ColDef = {\r\n    width: 62,\r\n    cellClass: 'secondary-action no-outline no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static IconShow: ColDef = {\r\n    headerName: 'Show',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'icons no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: BooleanFilterComponent,\r\n    valueGetter: (params) => {\r\n      const app: App = params.data;\r\n      return !app.IsHidden;\r\n    },\r\n    cellRenderer: AgBoolIconRenderer,\r\n  };\r\n\r\n  static Items: ColDef = {\r\n    width: 102,\r\n    headerClass: 'dense',\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static Fields: ColDef = {\r\n    width: 94,\r\n    headerClass: 'dense',\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  /**\r\n   * Very narrow columns, typically just showing 1 character\r\n   */\r\n  static Character: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Id: ColDef = {\r\n    headerName: 'ID',\r\n    field: 'Id',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'id-action no-padding no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static Boolean: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'number-cell no-outline'.split(' '),\r\n    sortable: true,\r\n  };\r\n\r\n  static Boolean2: ColDef = {\r\n    width: 100,\r\n    sortable: true,\r\n    cellClass: 'no-outline',\r\n    filter: BooleanFilterComponent,\r\n  };\r\n\r\n  static Boolean3: ColDef = {\r\n    headerClass: 'dense',\r\n    width: 80,\r\n    cellClass: 'no-outline',\r\n    cellRenderer: TrueFalseComponent,\r\n    cellRendererParams: (() => {\r\n      const params: TrueFalseParams = {\r\n        reverse: false,\r\n      };\r\n      return params;\r\n    })(),\r\n  }\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Number: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'number-cell no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static TextWideType: ColDef = {\r\n    flex: 3,\r\n    minWidth: 250,\r\n    cellClass: 'primary-action highlight'.split(' '),\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextWide: ColDef = {\r\n    flex: 2,\r\n    minWidth: 250,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextWideMin100: ColDef = {\r\n    flex: 1,\r\n    minWidth: 100,\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  }\r\n\r\n  static TextWideFlex3: ColDef = {\r\n    flex: 3,\r\n    minWidth: 250,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextNarrow: ColDef = {\r\n    flex: 1,\r\n    minWidth: 150,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextWideActionClass: ColDef = {\r\n    flex: 2,\r\n    minWidth: 250,\r\n    cellClass: 'primary-action no-padding no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n\r\n\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component, NgModule } from '@angular/core';\r\nimport { BooleanFilterModel } from './boolean-filter.model';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\n\r\n@Component({\r\n  selector: 'app-boolean-filter',\r\n  templateUrl: './boolean-filter.component.html',\r\n  styleUrls: ['./boolean-filter.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    MatRadioModule,\r\n  ]\r\n})\r\nexport class BooleanFilterComponent implements IFilterAngularComp {\r\n  filter = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.filter !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: boolean = this.filterParams.valueGetter(valueGetterParams);\r\n    if (value == null) { return false; }\r\n    return value.toString() === this.filter;\r\n  }\r\n\r\n  getModel(): BooleanFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n    return {\r\n      filterType: 'boolean',\r\n      filter: this.filter,\r\n    };\r\n  }\r\n\r\n  setModel(model: BooleanFilterModel) {\r\n    this.filter = model ? model.filter : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<mat-radio-group [(ngModel)]=\"filter\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">True</mat-radio-button>\r\n  <mat-radio-button value=\"false\">False</mat-radio-button>\r\n</mat-radio-group>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n  standalone: true,\r\n  imports: [NgClass, MatIconModule, TippyDirective]\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(): void {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>"],"x_google_ignoreList":[]}