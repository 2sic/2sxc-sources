{"version":3,"file":"default-projects_eav-ui_src_app_app-administration_services_index_ts-projects_eav-ui_src_app_-488733.367df02163bd5cd1.js","mappings":"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","names":["AppDialogConfigService","ServiceBase","constructor","http","context","globalConfigService","featuresService","super","EavLogger","this","dialogSettings$","log","a","svcId","loadFromService","ngOnDestroy","destroy","getCurrent$","appId","getShared$","getSitePrimaryApp$","pipe","map","dc","Context","Site","PrimaryApp","getGlobalPrimaryApp$","System","getDialogSettings","shareReplay","refCount","reqBy","get","params","toString","dlgSettings","Language","List","filter","language","IsEnabled","tap","allowDebug","Enable","DebugMode","static","t","i0","i1","i2","i3","i4","_angular_core__WEBPACK_IMPORTED_MODULE_8__","jDH","factory","ɵfac","webApiTypeRoot","webApiTypeScopes","ContentTypesService","dnnContext","apiUrl","name","$2sxc","retrieveContentType","staticName","contentTypeId","retrieveContentTypes","scope","getScopes","scopesData","scopes","old","Object","keys","key","value","getScopesV2","save","contentType","post","appid","delete","StaticName","import","files","formData","FormData","file","append","zoneId","createGhost","sourceStaticName","_angular_core__WEBPACK_IMPORTED_MODULE_2__","ExportAppPartsService","getContentInfo","webApiAppPartsRoot","exportParts","contentTypeIds","entityIds","templateIds","url","join","window","open","ExportAppService","getAppInfo","webApiAppRoot","exportAppUrl","exportForVersionControl","includeContentGroups","resetAppGuid","withFiles","withPortalFiles","ImportAppPartsService","importAppParts","resetApp","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","webApiEntityList","importQuery","from","toBase64","switchMap","fileBase64","AppId","ContentBase64","success","Success","Messages","clonePipeline","id","Id","_angular_core__WEBPACK_IMPORTED_MODULE_6__","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","export","getPolymorphism","getUsage","guid","_angular_core__WEBPACK_IMPORTED_MODULE_1__","ImportAppService","importApp","changedName","retryOnDuplicate","result","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","of","_angular_core__WEBPACK_IMPORTED_MODULE_4__","BaseWithChildDialogComponent","BaseComponent","router","route","childDialogClosed$","events","event","NavigationEnd","startWith","snapshot","firstChild","pairwise","hadChildBefore","hasChildNow","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","split","onerror","error","readAsText","SignalHelpers","boolEquals","equal","RxHelpers","valueEquals","numberEquals","stringEquals","objectEquals","objectsEqual","webApiEntityRoot","EntityService","formConfig","queryService","transient","QueryService","getEntities$","p","getAvailableEntities","contentTypeName","entitiesFilter","rxTap","enabled","getEntities","contentTypes","itemIds","fields","data","Default","entityId","force","parentId","parentField","config","_angular_core__WEBPACK_IMPORTED_MODULE_9__","FeaturesService","dialogContext$","ReplaySubject","dialogContextSignal","signal","configService","subscribe","ds","load","dialogContext","next","set","computed","Features","arraysEqual","get$","featureNameId","find","f","nameId","getSignal","isEnabled$","isEnabled","providedIn","GlobalConfigService","snackBar","debugState","isDebug","allowDebugMode","debugEnabled","debugEnabled$","toObservable","initial","sessionStorage","getItem","keyDebug","allow","oldConfig","newConfig","toggleDebugEnabled","duration"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/app-dialog-config.service.ts","./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/shared/components/base-with-child-dialog.component.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts","./projects/eav-ui/src/app/shared/helpers/signal.helpers.ts","./projects/eav-ui/src/app/shared/services/entity.service.ts","./projects/eav-ui/src/app/shared/services/features.service.ts","./projects/eav-ui/src/app/shared/services/global-config.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { map, Observable, shareReplay, tap } from 'rxjs';\r\nimport { DialogSettings } from '../../shared/models/dialog-settings.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { ServiceBase } from '../../shared/services/service-base';\r\nimport { EavLogger } from '../../shared/logging/eav-logger';\r\nimport { DialogContextSiteApp } from '../../shared/models/dialog-context.models';\r\nimport { GlobalConfigService } from '../../shared/services/global-config.service';\r\n\r\nconst logThis = false;\r\n\r\nconst webApiSettings = 'admin/dialog/settings';\r\n\r\n@Injectable()\r\nexport class AppDialogConfigService extends ServiceBase implements OnDestroy {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private context: Context,\r\n    private globalConfigService: GlobalConfigService,\r\n    featuresService: FeaturesService,\r\n  ) {\r\n    super(new EavLogger('AppDialogConfigService', logThis));\r\n    this.log.a(`using context #${this.context.log.svcId}`);\r\n    featuresService.loadFromService(this);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.destroy();\r\n    // TODO: probably should add an onDestroy and ensure all subscriptions in dialogSettings$ are killed\r\n  }\r\n\r\n  private dialogSettings$: Record<number, Observable<DialogSettings>> = {};\r\n\r\n  getCurrent$(): Observable<DialogSettings> {\r\n    const appId = this.context.appId;\r\n    this.log.a(`getCurrent\\$ - appId:${appId}`);\r\n    return this.getShared$(appId);\r\n  }\r\n\r\n    // new 2dg\r\n    getSitePrimaryApp$(): Observable<DialogContextSiteApp> {\r\n      return this.getCurrent$().pipe(map(dc => dc?.Context.Site.PrimaryApp));\r\n    }\r\n\r\n    getGlobalPrimaryApp$(): Observable<DialogContextSiteApp> {\r\n      return this.getCurrent$().pipe(map(dc => dc?.Context.System.PrimaryApp));\r\n    }\r\n\r\n\r\n  getShared$(appId: number): Observable<DialogSettings> {\r\n    this.log.a('getShared$ appId: ' + appId);\r\n    // if (!this.dialogSettings$[appIdToUse])\r\n    this.dialogSettings$[appId] ??= this.getDialogSettings(appId, 'getShared$').pipe(shareReplay({ refCount: false }));\r\n    return this.dialogSettings$[appId];\r\n  }\r\n\r\n  getDialogSettings(appId?: number, reqBy?: string): Observable<DialogSettings> {\r\n    this.log.a('getDialogSettings', {appId, reqBy});\r\n    return this.http.get<DialogSettings>(webApiSettings, {\r\n      params: { appId: appId ?? this.context.appId.toString() },\r\n    }).pipe(\r\n      map(dlgSettings => {\r\n        dlgSettings.Context.Language.List = dlgSettings.Context.Language.List.filter(language => language.IsEnabled);\r\n        return dlgSettings;\r\n      }),\r\n      tap(dlgSettings => {\r\n        this.globalConfigService.allowDebug(dlgSettings.Context.Enable.DebugMode);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\n\r\n// We should list all the \"full\" paths here, so it's easier to find when searching for API calls\r\nexport const webApiTypeRoot = 'admin/type/';\r\nconst webApiTypeGet = 'admin/type/get';\r\nconst webApiTypes = 'admin/type/list';\r\nconst webApiTypeScopes = 'admin/type/scopes';\r\nconst webApiTypeSave = 'admin/type/save';\r\nconst webApiTypeDelete = 'admin/type/delete';\r\nconst webApiTypeImport = 'admin/type/import';\r\nconst webApiTypeAddGhost = 'admin/type/addghost';\r\n\r\n@Injectable()\r\nexport class ContentTypesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get<ContentType>(this.apiUrl(webApiTypeGet), {\r\n      params: { appId: this.context.appId.toString(), contentTypeId: staticName }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get<ContentType[]>(this.apiUrl(webApiTypes), {\r\n      params: { appId: this.context.appId.toString(), scope }\r\n    });\r\n  }\r\n\r\n  // TODO: remove this method after upgrade to V2\r\n  getScopes() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopesData => {\r\n        // wip during upgrade:\r\n        const scopes = scopesData.old;\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getScopesV2() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopesData => scopesData.scopes),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeSave), contentType, {\r\n      params: { appid: this.context.appId.toString() },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeDelete), {\r\n      params: { appid: this.context.appId.toString(), staticName: contentType.StaticName },\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeAddGhost), null, {\r\n      params: { appid: this.context.appId.toString(), sourceStaticName },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\n\r\n@Injectable()\r\nexport class ExportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getContentInfo(scope: string) {\r\n    return this.http.get<ContentInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Get'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString(), scope },\r\n    });\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.context.appId.toString()\r\n      + '&zoneId=' + this.context.zoneId.toString()\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AppInfo } from '../models/app-info.model';\r\n\r\n@Injectable()\r\nexport class ExportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAppInfo() {\r\n    return this.http.get<AppInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Statistics'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString() },\r\n    });\r\n  }\r\n\r\n  /** Generate the export app path. It can be extended with additional parameters */\r\n  exportAppUrl() {\r\n    return `${this.dnnContext.$2sxc.http.apiUrl(`${webApiAppRoot}Export`)}?appId=${this.context.appId}&zoneId=${this.context.zoneId}`;\r\n  }\r\n\r\n  exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'SaveData'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Query } from '../models/query.model';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get<Query[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryImport), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViews), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.context.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.dnnContext.$2sxc.http.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.context.appId.toString(), guid }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Directive, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith, tap } from 'rxjs';\r\nimport { BaseComponent } from './base.component';\r\nimport { EavLogger } from '../logging/eav-logger';\r\n\r\nconst logThis = false;\r\n\r\n// 2024-06-12 2dm experimental - remove comments if all is good mid of June\r\n// - previously had\r\n// @Directive()   // Needs the @Directive() so the compiler allows OnDestroy to be implemented\r\n// ...then tried this\r\n// @Component({\r\n//   selector: 'app-base-component-with-child',\r\n//   template: ''\r\n// })\r\n// ...but then added abstract, so I think it doesn't actually need all that\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class BaseWithChildDialogComponent extends BaseComponent implements OnDestroy {\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    public log?: EavLogger\r\n  ) {\r\n    super();\r\n    this.log ??= new EavLogger('BaseComponent', logThis);\r\n  }\r\n\r\n  // 2024-06-12 2dm - don't think this is needed since it's already on the base class\r\n  // ngOnDestroy() {\r\n  //   super.ngOnDestroy();\r\n  // }\r\n\r\n  protected childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n      // tap(() => console.log('2dm ' + 'childDialogClosed$'))\r\n    )\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","import { CreateComputedOptions } from '@angular/core';\r\nimport { RxHelpers } from '../rxJs/rx.helpers';\r\nimport { ValueEqualityFn } from '@angular/core/primitives/signals';\r\n\r\nexport class SignalHelpers {\r\n  /** Options for number signal to ensure equality only on value difference */\r\n  static boolEquals: CreateComputedOptions<boolean> = {\r\n    equal: RxHelpers.valueEquals<boolean>\r\n  };\r\n\r\n  /** Options for string signal to ensure equality only on value difference */\r\n  static numberEquals: CreateComputedOptions<number> = {\r\n    equal: RxHelpers.valueEquals<number>\r\n  };\r\n\r\n  /** Options for string signal to ensure equality only on value difference */\r\n  static stringEquals: CreateComputedOptions<string> = {\r\n    equal: RxHelpers.valueEquals<string>\r\n  };\r\n\r\n  // note: this doesn't work as expected; leaving in so nobody tries to repeat this\r\n  // /** Options for string signal to ensure equality only on value difference */\r\n  // static valueEquals: CreateComputedOptions<boolean | string | number> = {\r\n  //   equal: RxHelpers.valueEquals<boolean | string | number>\r\n  // };\r\n\r\n  /** Options for object signal to ensure equality only on value difference */\r\n  static objectEquals = { equal: RxHelpers.objectsEqual };\r\n}\r\n\r\n// export class SignalEquals<T>: CreateComputedOptions<T> {\r\n//   equal: RxHelpers.objectsEqual<T>;\r\n// }\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { filter, map, Observable, shareReplay, switchMap } from 'rxjs';\r\nimport { ServiceBase } from './service-base';\r\nimport { EavLogger } from '../logging/eav-logger';\r\nimport { EntityBasic } from '../../shared/models/entity-basic';\r\nimport { QueryService } from './query.service';\r\nimport { FormConfigService } from '../../edit/state/form-config.service';\r\nimport { transient } from '../../core';\r\n\r\nconst logThis = false;\r\n\r\nexport const webApiEntityRoot = 'admin/entity/';\r\nexport const webApiEntityList = 'admin/entity/list';\r\n\r\n @Injectable()\r\n export class EntityService extends ServiceBase {\r\n  private queryService = transient(QueryService);\r\n\r\n  constructor(private http: HttpClient,\r\n    private formConfig: FormConfigService,\r\n    private dnnContext: DnnContext,\r\n  )\r\n  {\r\n    super(new EavLogger('EntityService', logThis));\r\n  }\r\n\r\n  /**\r\n   * Get entities based on the content type name.\r\n   * As of 2024-04-29 only used in REST API.\r\n   * @param params\r\n   * @returns\r\n   */\r\n  getEntities$(params: Observable<{ contentTypeName: string }>): Observable<EntityBasic[]> {\r\n    return params.pipe(\r\n      filter(p => p != null),\r\n      switchMap(p => this.getAvailableEntities(p.contentTypeName).pipe(shareReplay(1))),\r\n    );\r\n  }\r\n\r\n  private getAvailableEntities(contentTypeName: string, entitiesFilter?: string[]): Observable<EntityBasic[]> {\r\n    var log = this.log.rxTap('getEntities', { enabled: true });\r\n    return this.queryService.getEntities({\r\n      contentTypes: [contentTypeName],\r\n      itemIds: entitiesFilter,\r\n      fields: 'Id,Guid,Title',\r\n      log: 'getAvailableEntities'\r\n    }).pipe(\r\n      log.pipe(),\r\n      map(data => data.Default)\r\n    );\r\n  }\r\n\r\n  delete(contentType: string, entityId: number, force: boolean, parentId?: number, parentField?: string): Observable<null> {\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: {\r\n        contentType,\r\n        id: entityId.toString(),\r\n        appId: this.formConfig.config.appId,\r\n        force: force.toString(),\r\n        ...(parentId && { parentId: parentId.toString() }),\r\n        ...(parentId && parentField && { parentField }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable, Signal, computed, signal } from '@angular/core';\r\nimport { map, Observable, ReplaySubject } from 'rxjs';\r\nimport { AppDialogConfigService } from '../../app-administration/services';\r\nimport { DialogContext } from '../models/dialog-settings.model';\r\nimport { ServiceBase } from './service-base';\r\nimport { EavLogger } from '../logging/eav-logger';\r\nimport { FeatureSummary } from '../../features/models/feature-summary.model';\r\nimport { SignalHelpers } from '../helpers/signal.helpers';\r\nimport { RxHelpers } from '../rxJs/rx.helpers';\r\n\r\nconst logThis = false;\r\n\r\n/**\r\n * Singleton Service to provide information about enabled/disabled features.\r\n *\r\n * It currently has a strange architecture, since it's singleton,\r\n * but needs context data.\r\n * So the AppDialogConfigService seems to call the loadFromService.\r\n * TODO: 2dm: I don't like this, should rethink the architecture, feels a bit flaky.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class FeaturesService extends ServiceBase {\r\n  // new 2dm WIP\r\n  // Provide context information and ensure that previously added data is always available\r\n  private dialogContext$ = new ReplaySubject<DialogContext>(1);\r\n  private dialogContextSignal = signal<DialogContext>(null);\r\n\r\n  constructor() {\r\n    super(new EavLogger('FeaturesService', logThis));\r\n  }\r\n\r\n  loadFromService(configService: AppDialogConfigService) {\r\n    configService.getCurrent$().subscribe(ds => this.load(ds.Context));\r\n  }\r\n\r\n  load(dialogContext: DialogContext) {\r\n    // new 2dm WIP\r\n    this.dialogContext$.next(dialogContext);\r\n    this.dialogContextSignal.set(dialogContext);\r\n  }\r\n\r\n  getAll(): Signal<FeatureSummary[]> {\r\n    return computed(\r\n      () => this.dialogContextSignal()?.Features ?? [],\r\n      { equal: RxHelpers.arraysEqual }\r\n    );\r\n  }\r\n\r\n  // new 2dm WIP\r\n  get$(featureNameId: string): Observable<FeatureSummary> {\r\n    return this.dialogContext$.pipe(\r\n      // tap(f => console.log('2dm', f, featureNameId)),\r\n      map(dc => dc?.Features.find(f => f.nameId === featureNameId))\r\n    );\r\n  }\r\n\r\n  getSignal(featureNameId: string): Signal<FeatureSummary> {\r\n    return computed(\r\n      () => this.dialogContextSignal()?.Features.find(f => f.nameId === featureNameId),\r\n      { equal: RxHelpers.objectsEqual }\r\n    );\r\n  }\r\n\r\n  isEnabled$(nameId: string): Observable<boolean> {\r\n    return this.get$(nameId).pipe(map(f => f?.isEnabled ?? false));\r\n  }\r\n\r\n  isEnabled(nameId: string): Signal<boolean> {\r\n    return computed(\r\n      () => this.dialogContextSignal()?.Features.find(f => f.nameId === nameId)?.isEnabled ?? false,\r\n      SignalHelpers.boolEquals\r\n    );\r\n  }\r\n}\r\n","import { Injectable, computed, signal } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { toObservable } from '@angular/core/rxjs-interop';\r\nimport { keyDebug } from '../constants/session.constants';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GlobalConfigService {\r\n\r\n  private debugState = signal<GlobalConfig>(null);\r\n\r\n  isDebug = computed(() => !!this.debugState()?.allowDebugMode && !!this.debugState()?.debugEnabled);\r\n\r\n  /** This observable is a left-over, try to remove once more is refactored */\r\n  debugEnabled$ = toObservable(this.isDebug);\r\n\r\n  constructor(private snackBar: MatSnackBar) {\r\n    const initial: GlobalConfig = {\r\n      id: 0,\r\n      debugEnabled: sessionStorage.getItem(keyDebug) === 'true',\r\n      allowDebugMode: false,\r\n    };\r\n    this.debugState.set(initial);\r\n  }\r\n\r\n  allowDebug(allow: boolean): void {\r\n    const oldConfig = this.debugState();\r\n    if (oldConfig.allowDebugMode === allow)\r\n      return;\r\n\r\n    const newConfig: GlobalConfig = {\r\n      ...oldConfig,\r\n      allowDebugMode: allow,\r\n    };\r\n    this.debugState.set(newConfig);\r\n  }\r\n\r\n  toggleDebugEnabled(): void {\r\n    const oldConfig = this.debugState();\r\n    if (!oldConfig.allowDebugMode) {\r\n      this.snackBar.open('You do not have permissions to enter developer mode', null, { duration: 3000 });\r\n      return;\r\n    }\r\n\r\n    const newConfig: GlobalConfig = {\r\n      ...oldConfig,\r\n      debugEnabled: !oldConfig.debugEnabled,\r\n    };\r\n    this.debugState.set(newConfig);\r\n    this.snackBar.open(newConfig.debugEnabled ? 'developer mode on' : 'developer mode off', null, { duration: 3000 });\r\n  }\r\n}\r\n\r\ninterface GlobalConfig {\r\n  id: 0;\r\n  debugEnabled: boolean;\r\n  allowDebugMode: boolean;\r\n}\r\n"],"x_google_ignoreList":[]}