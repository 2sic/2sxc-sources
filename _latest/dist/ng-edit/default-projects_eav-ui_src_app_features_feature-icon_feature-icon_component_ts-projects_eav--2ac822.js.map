{"version":3,"file":"default-projects_eav-ui_src_app_features_feature-icon_feature-icon_component_ts-projects_eav--2ac822.js","mappings":";;;;;;;;;;;;;;;;;AACuD;AACkB;AACD;;;;;;ICFtEG,4DAAA,kBAA4F;IAAvBA,wDAAA,mBAAAG,sEAAA;MAAAH,2DAAA,CAAAK,GAAA;MAAA,MAAAC,MAAA,GAAAN,2DAAA;MAAA,OAAAA,yDAAA,CAASM,MAAA,CAAAG,UAAA,EAAY;IAAA,EAAC;IAACT,oDAAA,cAAO;IAAAA,0DAAA,EAAW;;;ADa1G,MAAOY,oBAAqB,SAAQb,gFAAoB;;;;;8JAAjDa,oBAAoB,IAAAC,iBAAA,IAApBD,oBAAoB;MAAA;IAAA;EAAA;;;YAApBA,oBAAoB;MAAAE,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAAhB,wEAAA,EAAAA,iEAAA;MAAAmB,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCdjCxB,wDAAA,IAAA2B,2CAAA,sBAAc;;;UAAd3B,2DAAA,CAAAyB,GAAA,CAAAI,IAAA,YAEC;;;qBDQGhC,iEAAa,EAAAiC,2DAAA,EACbhC,8EAAc;MAAAkC,aAAA;IAAA;EAAA;;;;;;;;;;;;;;;AEXlB;AAEO,MAAMC,YAAY,GAAG;EAC1BC,oBAAoB,EAAE,sBAAsB;EAC5CC,qBAAqB,EAAE,uBAAuB;EAC9CC,uBAAuB,EAAE,yBAAyB;EAClDC,eAAe,EAAE,iBAAiB;EAClCC,qBAAqB,EAAE,uBAAuB;EAC9CC,kBAAkB,EAAE,oBAAoB;EACxCC,yBAAyB,EAAE,2BAA2B;EACtDC,UAAU,EAAE,uBAAuB;EACnCC,qBAAqB,EAAE,uBAAuB;EAC9CC,qBAAqB,EAAE,uBAAuB;EAC9CC,iCAAiC,EAAE,mCAAmC;EACtEC,uBAAuB,EAAE,yBAAyB;EAElD;EACAC,gBAAgB,EAAE,kBAAkB;EACpCC,aAAa,EAAE,eAAe;EAC9BC,eAAe,EAAE,iBAAiB;EAClCC,qBAAqB,EAAE,uBAAuB;EAC9CC,cAAc,EAAE,gBAAgB;EAChCC,gBAAgB,EAAE;CACV,CAAC;;;;;;;;;;;;;;;;;;;;ACvBsC;AACM;AACD;AACmB;AACL;AACI;;;;;;;;ICJtEnD,4DAAA,aAA0G;;IAA3EA,wDAAA,mBAAAuD,qEAAA;MAAAvD,2DAAA,CAAAK,GAAA;MAAA,MAAAC,MAAA,GAAAN,2DAAA;MAAA,OAAAA,yDAAA,CAASM,MAAA,CAAAG,UAAA,EAAY;IAAA,EAAC;IAEnDT,4DAAA,eAAuC;IAAAA,oDAAA,GAAY;IAAAA,0DAAA,EAAW;IAG5DA,4DADF,aAAuC,aACA;IAAAA,oDAAA,GAAgD;;IAAAA,0DAAA,EAAM;IAC3FA,4DAAA,aAAwC;IAAAA,oDAAA,GAA+C;;IAAAA,0DAAA,EAAM;IAC7FA,0DAAA,IAAyB;IAE7BA,0DADE,EAAM,EACF;;;;IATgDA,wDAAA,UAAAA,yDAAA,2BAAAM,MAAA,CAAAqD,OAAA,IAAmD;IAE7F3D,uDAAA,GAA4B;IAA5BA,oEAAA,eAAAM,MAAA,CAAAwD,IAAA,OAA4B;IAAC9D,uDAAA,EAAY;IAAZA,+DAAA,CAAAM,MAAA,CAAAwD,IAAA,GAAY;IAGZ9D,uDAAA,GAAgD;IAAhDA,+DAAA,CAAAA,yDAAA,wCAAgD;IAC7CA,uDAAA,GAA+C;IAA/CA,+DAAA,CAAAA,yDAAA,wCAA+C;;;ADWvF,MAAOiE,wBAAyB,SAAQlE,gFAAoB;EAGhEmE,YAAA;IAAgB,KAAK,EAAE;IAFvB,KAAAC,MAAM,GAAGf,oDAAK,CAAU,KAAK,CAAC;IAI9B,KAAAU,IAAI,GAAGR,6EAAW,CAAC,MAAM,EAAE,MAAM,IAAI,CAACa,MAAM,EAAE,GAAG,MAAM,GAAG,SAAS,CAAC;EAF3C;;;uCAHdF,wBAAwB;IAAA;EAAA;;;YAAxBA,wBAAwB;MAAAnD,SAAA;MAAAsD,MAAA;QAAAD,MAAA;MAAA;MAAApD,UAAA;MAAAC,QAAA,GAAAhB,wEAAA,EAAAA,iEAAA;MAAAqE,kBAAA,EAAAC,GAAA;MAAAnD,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAiD,kCAAA/C,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;UClBrCxB,wDAAA,IAAAwE,+CAAA,mBAAc;;;UAAdxE,2DAAA,CAAAyB,GAAA,CAAAI,IAAA,YAWC;;;qBDEGhC,iEAAa,EAAAiC,2DAAA,EACbuB,gEAAe,EAAAoB,8DAAA,EACf3E,8EAAc;MAAA6E,MAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AEfkB;AACkO;AACzK;AACF;;AAE3F;AAAA,MAAAL,GAAA;AAAA,MAAA6B,GAAA;AAAA,MAAAC,GAAA;AACA,MAAMC,4BAA4B,GAAG,IAAIzB,yDAAc,CAAC,8BAA8B,EAAE;EACpF0B,UAAU,EAAE,MAAM;EAClBC,OAAO,EAAEC;AACb,CAAC,CAAC;AACF;AACA,SAASA,oCAAoCA,CAAA,EAAG;EAC5C,OAAO;IACHC,KAAK,EAAE,QAAQ;IACfC,WAAW,EAAE,qBAAqB;IAClCC,mBAAmB,EAAE;EACzB,CAAC;AACL;;AAEA;AACA;AACA;AACA;AACA,IAAIC,oBAAoB;AACxB,CAAC,UAAUA,oBAAoB,EAAE;EAC7B;EACAA,oBAAoB,CAACA,oBAAoB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;EAC/D;EACAA,oBAAoB,CAACA,oBAAoB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;EACrE;EACAA,oBAAoB,CAACA,oBAAoB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW;EACzE;EACAA,oBAAoB,CAACA,oBAAoB,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,GAAG,eAAe;AACrF,CAAC,EAAEA,oBAAoB,KAAKA,oBAAoB,GAAG,CAAC,CAAC,CAAC,CAAC;AACvD;AACA;AACA;AACA;AACA,MAAMC,mCAAmC,GAAG;EACxCC,OAAO,EAAEjB,6DAAiB;EAC1BkB,WAAW,EAAElC,yDAAU,CAAC,MAAMmC,WAAW,CAAC;EAC1CC,KAAK,EAAE;AACX,CAAC;AACD;AACA,MAAMC,iBAAiB,CAAC;AAExB;AACA,IAAIC,YAAY,GAAG,CAAC;AACpB;AACA,MAAMC,QAAQ,GAAGZ,oCAAoC,CAAC,CAAC;AACvD,MAAMQ,WAAW,CAAC;EACd;EACAK,KAAKA,CAAA,EAAG;IACJ,IAAI,CAACC,aAAa,CAACC,aAAa,CAACF,KAAK,CAAC,CAAC;EAC5C;EACA;EACAG,kBAAkBA,CAACC,SAAS,EAAE;IAC1B,MAAMC,KAAK,GAAG,IAAIR,iBAAiB,CAAC,CAAC;IACrCQ,KAAK,CAACC,MAAM,GAAG,IAAI;IACnBD,KAAK,CAACE,OAAO,GAAGH,SAAS;IACzB,OAAOC,KAAK;EAChB;EACA;EACAG,0BAA0BA,CAAA,EAAG;IACzB,OAAO,IAAI,CAACP,aAAa,EAAEC,aAAa;EAC5C;EACA;EACA,IAAIO,OAAOA,CAAA,EAAG;IACV,OAAO,GAAG,IAAI,CAACC,EAAE,IAAI,IAAI,CAACC,SAAS,QAAQ;EAC/C;EACA9D,WAAWA,CAAC+D,WAAW,EAAEC,kBAAkB,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,cAAc,EAAEC,QAAQ,EAAE;IACtF,IAAI,CAACL,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACE,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB;IACA,IAAI,CAACC,iBAAiB,GAAG;MACrBC,kBAAkB,EAAE,sCAAsC;MAC1DC,wBAAwB,EAAE,4CAA4C;MACtEC,kBAAkB,EAAE,sCAAsC;MAC1DC,sBAAsB,EAAE,0CAA0C;MAClEC,sBAAsB,EAAE,0CAA0C;MAClEC,wBAAwB,EAAE;IAC9B,CAAC;IACD;AACR;AACA;AACA;IACQ,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB;AACR;AACA;IACQ,IAAI,CAACC,cAAc,GAAG,IAAI;IAC1B;IACA,IAAI,CAACC,aAAa,GAAG,OAAO;IAC5B;IACA,IAAI,CAACC,IAAI,GAAG,IAAI;IAChB;IACA,IAAI,CAACC,MAAM,GAAG,IAAIpE,uDAAY,CAAC,CAAC;IAChC;IACA,IAAI,CAACqE,mBAAmB,GAAG,IAAIrE,uDAAY,CAAC,CAAC;IAC7C;AACR;AACA;AACA;IACQ,IAAI,CAACsE,UAAU,GAAG,MAAM,CAAE,CAAC;IAC3B,IAAI,CAACC,sBAAsB,GAAG,EAAE;IAChC,IAAI,CAACC,kBAAkB,GAAG1C,oBAAoB,CAAC2C,IAAI;IACnD,IAAI,CAACC,6BAA6B,GAAG,MAAM,CAAE,CAAC;IAC9C,IAAI,CAACC,kBAAkB,GAAG,MAAM,CAAE,CAAC;IACnC,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,cAAc,GAAG,KAAK;IAC3B,IAAI,CAACtB,QAAQ,GAAG,IAAI,CAACA,QAAQ,IAAIlB,QAAQ;IACzC,IAAI,CAACX,KAAK,GAAG,IAAI,CAAC6B,QAAQ,CAAC7B,KAAK,IAAIW,QAAQ,CAACX,KAAK;IAClD,IAAI,CAAC2B,QAAQ,GAAGyB,QAAQ,CAACzB,QAAQ,CAAC,IAAI,CAAC;IACvC,IAAI,CAACL,EAAE,GAAG,IAAI,CAACC,SAAS,GAAG,oBAAoB,EAAEb,YAAY,EAAE;IAC/D,IAAI,CAACR,mBAAmB,GAAG2B,QAAQ,EAAE3B,mBAAmB,IAAI,KAAK;EACrE;EACAmD,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAIA,OAAO,CAAC,UAAU,CAAC,EAAE;MACrB,IAAI,CAACN,kBAAkB,CAAC,CAAC;IAC7B;EACJ;EACAO,eAAeA,CAAA,EAAG;IACd,IAAI,CAACC,kBAAkB,CAAC,IAAI,CAACL,cAAc,CAAC;EAChD;EACA;EACA,IAAIhC,OAAOA,CAAA,EAAG;IACV,OAAO,IAAI,CAAC8B,QAAQ;EACxB;EACA,IAAI9B,OAAOA,CAACsC,KAAK,EAAE;IACf,IAAIA,KAAK,IAAI,IAAI,CAACtC,OAAO,EAAE;MACvB,IAAI,CAAC8B,QAAQ,GAAGQ,KAAK;MACrB,IAAI,CAAChC,kBAAkB,CAACiC,YAAY,CAAC,CAAC;IAC1C;EACJ;EACA;EACA,IAAIC,QAAQA,CAAA,EAAG;IACX,OAAO,IAAI,CAACT,SAAS;EACzB;EACA,IAAIS,QAAQA,CAACF,KAAK,EAAE;IAChB,IAAIA,KAAK,KAAK,IAAI,CAACE,QAAQ,EAAE;MACzB,IAAI,CAACT,SAAS,GAAGO,KAAK;MACtB,IAAI,CAAChC,kBAAkB,CAACiC,YAAY,CAAC,CAAC;IAC1C;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;EACI,IAAIE,aAAaA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACT,cAAc;EAC9B;EACA,IAAIS,aAAaA,CAACH,KAAK,EAAE;IACrB,MAAMI,OAAO,GAAGJ,KAAK,IAAI,IAAI,CAACN,cAAc;IAC5C,IAAI,CAACA,cAAc,GAAGM,KAAK;IAC3B,IAAII,OAAO,EAAE;MACT,IAAI,IAAI,CAACV,cAAc,EAAE;QACrB,IAAI,CAACW,qBAAqB,CAAC3D,oBAAoB,CAAC4D,aAAa,CAAC;MAClE,CAAC,MACI;QACD,IAAI,CAACD,qBAAqB,CAAC,IAAI,CAAC3C,OAAO,GAAGhB,oBAAoB,CAAC6D,OAAO,GAAG7D,oBAAoB,CAAC8D,SAAS,CAAC;MAC5G;MACA,IAAI,CAACvB,mBAAmB,CAACwB,IAAI,CAAC,IAAI,CAACf,cAAc,CAAC;IACtD;IACA,IAAI,CAACK,kBAAkB,CAAC,IAAI,CAACL,cAAc,CAAC;EAChD;EACAgB,iBAAiBA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACC,aAAa,IAAI,IAAI,CAACT,QAAQ;EAC9C;EACA;EACAU,kBAAkBA,CAAA,EAAG;IACjB;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC5C,kBAAkB,CAAC6C,aAAa,CAAC,CAAC;EAC3C;EACA;EACAC,UAAUA,CAACd,KAAK,EAAE;IACd,IAAI,CAACtC,OAAO,GAAG,CAAC,CAACsC,KAAK;EAC1B;EACA;EACAe,gBAAgBA,CAACC,EAAE,EAAE;IACjB,IAAI,CAAC1B,6BAA6B,GAAG0B,EAAE;EAC3C;EACA;EACAC,iBAAiBA,CAACD,EAAE,EAAE;IAClB,IAAI,CAAC9B,UAAU,GAAG8B,EAAE;EACxB;EACA;EACAE,gBAAgBA,CAACC,UAAU,EAAE;IACzB,IAAI,CAACjB,QAAQ,GAAGiB,UAAU;EAC9B;EACA;EACAC,QAAQA,CAACC,OAAO,EAAE;IACd,OAAO,IAAI,CAACC,QAAQ,IAAID,OAAO,CAACrB,KAAK,KAAK,IAAI,GAAG;MAAE,UAAU,EAAE;IAAK,CAAC,GAAG,IAAI;EAChF;EACA;EACAuB,yBAAyBA,CAACP,EAAE,EAAE;IAC1B,IAAI,CAACzB,kBAAkB,GAAGyB,EAAE;EAChC;EACAX,qBAAqBA,CAACmB,QAAQ,EAAE;IAC5B,IAAIC,QAAQ,GAAG,IAAI,CAACrC,kBAAkB;IACtC,IAAIsC,OAAO,GAAG,IAAI,CAAC/D,0BAA0B,CAAC,CAAC;IAC/C,IAAI8D,QAAQ,KAAKD,QAAQ,IAAI,CAACE,OAAO,EAAE;MACnC;IACJ;IACA,IAAI,IAAI,CAACvC,sBAAsB,EAAE;MAC7BuC,OAAO,CAACC,SAAS,CAACC,MAAM,CAAC,IAAI,CAACzC,sBAAsB,CAAC;IACzD;IACA,IAAI,CAACA,sBAAsB,GAAG,IAAI,CAAC0C,yCAAyC,CAACJ,QAAQ,EAAED,QAAQ,CAAC;IAChG,IAAI,CAACpC,kBAAkB,GAAGoC,QAAQ;IAClC,IAAI,IAAI,CAACrC,sBAAsB,CAAC2C,MAAM,GAAG,CAAC,EAAE;MACxCJ,OAAO,CAACC,SAAS,CAACI,GAAG,CAAC,IAAI,CAAC5C,sBAAsB,CAAC;MAClD;MACA,MAAM6C,cAAc,GAAG,IAAI,CAAC7C,sBAAsB;MAClD,IAAI,CAAClB,OAAO,CAACgE,iBAAiB,CAAC,MAAM;QACjCC,UAAU,CAAC,MAAM;UACbR,OAAO,CAACC,SAAS,CAACC,MAAM,CAACI,cAAc,CAAC;QAC5C,CAAC,EAAE,IAAI,CAAC;MACZ,CAAC,CAAC;IACN;EACJ;EACAG,gBAAgBA,CAAA,EAAG;IACf,IAAI,CAAC7C,6BAA6B,CAAC,IAAI,CAAC5B,OAAO,CAAC;IAChD,IAAI,CAACsB,MAAM,CAACyB,IAAI,CAAC,IAAI,CAACnD,kBAAkB,CAAC,IAAI,CAACI,OAAO,CAAC,CAAC;IACvD;IACA;IACA,IAAI,IAAI,CAACN,aAAa,EAAE;MACpB,IAAI,CAACA,aAAa,CAACC,aAAa,CAACK,OAAO,GAAG,IAAI,CAACA,OAAO;IAC3D;EACJ;EACA;EACA0E,MAAMA,CAAA,EAAG;IACL,IAAI,CAAC1E,OAAO,GAAG,CAAC,IAAI,CAACA,OAAO;IAC5B,IAAI,CAAC4B,6BAA6B,CAAC,IAAI,CAAC5B,OAAO,CAAC;EACpD;EACA2E,iBAAiBA,CAAA,EAAG;IAChB,MAAM7F,WAAW,GAAG,IAAI,CAAC4B,QAAQ,EAAE5B,WAAW;IAC9C;IACA,IAAI,CAAC,IAAI,CAAC0D,QAAQ,IAAI1D,WAAW,KAAK,MAAM,EAAE;MAC1C;MACA,IAAI,IAAI,CAAC2D,aAAa,IAAI3D,WAAW,KAAK,OAAO,EAAE;QAC/C8F,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;UACzB,IAAI,CAAC9C,cAAc,GAAG,KAAK;UAC3B,IAAI,CAACT,mBAAmB,CAACwB,IAAI,CAAC,IAAI,CAACf,cAAc,CAAC;QACtD,CAAC,CAAC;MACN;MACA,IAAI,CAACF,QAAQ,GAAG,CAAC,IAAI,CAACA,QAAQ;MAC9B,IAAI,CAACa,qBAAqB,CAAC,IAAI,CAACb,QAAQ,GAAG9C,oBAAoB,CAAC6D,OAAO,GAAG7D,oBAAoB,CAAC8D,SAAS,CAAC;MACzG;MACA;MACA;MACA,IAAI,CAAC2B,gBAAgB,CAAC,CAAC;IAC3B,CAAC,MACI,IAAK,IAAI,CAACjC,QAAQ,IAAI,IAAI,CAACzD,mBAAmB,IAC9C,CAAC,IAAI,CAACyD,QAAQ,IAAI1D,WAAW,KAAK,MAAO,EAAE;MAC5C;MACA;MACA,IAAI,CAACY,aAAa,CAACC,aAAa,CAACK,OAAO,GAAG,IAAI,CAACA,OAAO;MACvD,IAAI,CAACN,aAAa,CAACC,aAAa,CAAC8C,aAAa,GAAG,IAAI,CAACA,aAAa;IACvE;EACJ;EACAsC,mBAAmBA,CAACjF,KAAK,EAAE;IACvB;IACA;IACA;IACAA,KAAK,CAACkF,eAAe,CAAC,CAAC;EAC3B;EACAC,OAAOA,CAAA,EAAG;IACN;IACA;IACA;IACA;IACA;IACAL,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;MACzB,IAAI,CAACtD,UAAU,CAAC,CAAC;MACjB,IAAI,CAAClB,kBAAkB,CAACiC,YAAY,CAAC,CAAC;IAC1C,CAAC,CAAC;EACN;EACA4B,yCAAyCA,CAACJ,QAAQ,EAAED,QAAQ,EAAE;IAC1D;IACA,IAAI,IAAI,CAACrD,cAAc,KAAK,gBAAgB,EAAE;MAC1C,OAAO,EAAE;IACb;IACA,QAAQsD,QAAQ;MACZ,KAAK/E,oBAAoB,CAAC2C,IAAI;QAC1B;QACA;QACA,IAAImC,QAAQ,KAAK9E,oBAAoB,CAAC6D,OAAO,EAAE;UAC3C,OAAO,IAAI,CAAClC,iBAAiB,CAACC,kBAAkB;QACpD,CAAC,MACI,IAAIkD,QAAQ,IAAI9E,oBAAoB,CAAC4D,aAAa,EAAE;UACrD,OAAO,IAAI,CAACd,QAAQ,GACd,IAAI,CAACnB,iBAAiB,CAACI,sBAAsB,GAC7C,IAAI,CAACJ,iBAAiB,CAACE,wBAAwB;QACzD;QACA;MACJ,KAAK7B,oBAAoB,CAAC8D,SAAS;QAC/B,OAAOgB,QAAQ,KAAK9E,oBAAoB,CAAC6D,OAAO,GAC1C,IAAI,CAAClC,iBAAiB,CAACC,kBAAkB,GACzC,IAAI,CAACD,iBAAiB,CAACE,wBAAwB;MACzD,KAAK7B,oBAAoB,CAAC6D,OAAO;QAC7B,OAAOiB,QAAQ,KAAK9E,oBAAoB,CAAC8D,SAAS,GAC5C,IAAI,CAACnC,iBAAiB,CAACG,kBAAkB,GACzC,IAAI,CAACH,iBAAiB,CAACI,sBAAsB;MACvD,KAAK/B,oBAAoB,CAAC4D,aAAa;QACnC,OAAOkB,QAAQ,KAAK9E,oBAAoB,CAAC6D,OAAO,GAC1C,IAAI,CAAClC,iBAAiB,CAACK,sBAAsB,GAC7C,IAAI,CAACL,iBAAiB,CAACM,wBAAwB;IAC7D;IACA,OAAO,EAAE;EACb;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIoB,kBAAkBA,CAACC,KAAK,EAAE;IACtB,MAAM4C,cAAc,GAAG,IAAI,CAACxF,aAAa;IACzC,IAAIwF,cAAc,EAAE;MAChBA,cAAc,CAACvF,aAAa,CAAC8C,aAAa,GAAGH,KAAK;IACtD;EACJ;EACA6C,aAAaA,CAAA,EAAG;IACZ,IAAI,CAACR,iBAAiB,CAAC,CAAC;EAC5B;EACAS,mBAAmBA,CAAA,EAAG;IAClB,IAAI,CAACT,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAAC,IAAI,CAACnC,QAAQ,EAAE;MAChB;MACA;MACA,IAAI,CAAC9C,aAAa,CAACC,aAAa,CAACF,KAAK,CAAC,CAAC;IAC5C;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI4F,yBAAyBA,CAACvF,KAAK,EAAE;IAC7B,IAAI,CAAC,CAACA,KAAK,CAACwF,MAAM,IAAI,IAAI,CAACC,aAAa,CAAC5F,aAAa,CAAC6F,QAAQ,CAAC1F,KAAK,CAACwF,MAAM,CAAC,EAAE;MAC3ExF,KAAK,CAACkF,eAAe,CAAC,CAAC;IAC3B;EACJ;EACA;IAAS,IAAI,CAACS,IAAI,YAAAC,oBAAAzM,iBAAA;MAAA,YAAAA,iBAAA,IAA+FmG,WAAW,EAArBhH,+DAAE,CAAqCA,qDAAa,GAApDA,+DAAE,CAA+DA,4DAAoB,GAArFA,+DAAE,CAAgGA,iDAAS,GAA3GA,+DAAE,CAAsH,UAAU,GAAlIA,+DAAE,CAA8J+E,gEAAqB,MAArL/E,+DAAE,CAAgNqG,4BAA4B;IAAA,CAA4D;EAAE;EACnZ;IAAS,IAAI,CAACuH,IAAI,kBADqF5N,+DAAE;MAAA8N,IAAA,EACJ9G,WAAW;MAAAlG,SAAA;MAAAiN,SAAA,WAAAC,kBAAAxM,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UADTxB,yDAAE,CAAAsE,GAAA;UAAFtE,yDAAE,CAAAmG,GAAA;UAAFnG,yDAAE,CAQgJgG,6DAAS;QAAA;QAAA,IAAAxE,EAAA;UAAA,IAAA0M,EAAA;UAR3JlO,4DAAE,CAAAkO,EAAA,GAAFlO,yDAAE,QAAAyB,GAAA,CAAA6F,aAAA,GAAA4G,EAAA,CAAAG,KAAA;UAAFrO,4DAAE,CAAAkO,EAAA,GAAFlO,yDAAE,QAAAyB,GAAA,CAAA0L,aAAA,GAAAe,EAAA,CAAAG,KAAA;UAAFrO,4DAAE,CAAAkO,EAAA,GAAFlO,yDAAE,QAAAyB,GAAA,CAAA6M,MAAA,GAAAJ,EAAA,CAAAG,KAAA;QAAA;MAAA;MAAAE,SAAA;MAAAC,QAAA;MAAAC,YAAA,WAAAC,yBAAAlN,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAFxB,4DAAE,OAAAyB,GAAA,CAAAsG,EACM,CAAC;UADT/H,yDAAE,aACJ,IAAI,gBAAJ,IAAI,qBAAJ,IAAI;UADFA,wDAAE,CAAAyB,GAAA,CAAAgF,KAAA,GACI,MAAM,GAAAhF,GAAA,CAAAgF,KAAA,GAAW,YAAf,CAAC;UADTzG,yDAAE,4BAAAyB,GAAA,CAAA4G,cAAA,KACe,gBAAT,CAAC,2BAAA5G,GAAA,CAAA2I,QAAD,CAAC,8BAAA3I,GAAA,CAAA2I,QAAD,CAAC,6BAAA3I,GAAA,CAAAmG,OAAD,CAAC,0CAAAnG,GAAA,CAAAkF,mBAAD,CAAC;QAAA;MAAA;MAAAvC,MAAA;QAAA0E,SAAA;QAAAC,cAAA;QAAAgG,eAAA;QAAAhH,EAAA;QAAAyD,QAAA,8BAAgQxG,2DAAgB;QAAAgE,aAAA;QAAAC,IAAA;QAAAiB,KAAA;QAAAW,aAAA,wCAAmH7F,2DAAgB;QAAAoD,QAAA,8BAAuC8B,KAAK,IAAMA,KAAK,IAAI,IAAI,GAAG8E,SAAS,GAAG/J,8DAAe,CAACiF,KAAK,CAAE;QAAAzD,KAAA;QAAAE,mBAAA,oDAAuF3B,2DAAgB;QAAA4C,OAAA,4BAAmC5C,2DAAgB;QAAAoF,QAAA,8BAAsCpF,2DAAgB;QAAAqF,aAAA,wCAAqDrF,2DAAgB;MAAA;MAAAiK,OAAA;QAAA/F,MAAA;QAAAC,mBAAA;MAAA;MAAA+F,QAAA;MAAAnO,UAAA;MAAAC,QAAA,GADtxBhB,gEAAE,CACy1C,CAC17C6G,mCAAmC,EACnC;QACIC,OAAO,EAAEhB,yDAAa;QACtBiB,WAAW,EAAEC,WAAW;QACxBC,KAAK,EAAE;MACX,CAAC,CACJ,GARkGjH,sEAAE,EAAFA,kEAAE,EAAFA,iEAAE;MAAAqE,kBAAA,EAAA+B,GAAA;MAAAjF,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAgO,qBAAA9N,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAA,MAAAnB,GAAA,GAAFL,8DAAE;UAAFA,6DAAE;UAAFA,4DAAE,YAQsW,CAAC;UARzWA,wDAAE,mBAAAyP,0CAAAC,MAAA;YAAF1P,2DAAE,CAAAK,GAAA;YAAA,OAAFL,yDAAE,CAQmUyB,GAAA,CAAAwL,yBAAA,CAAAyC,MAAgC,CAAC;UAAA,CAAC,CAAC;UARxW1P,4DAAE,eAQgZ,CAAC,YAAoJ,CAAC;UARxiBA,wDAAE,mBAAA2P,0CAAA;YAAF3P,2DAAE,CAAAK,GAAA;YAAA,OAAFL,yDAAE,CAQ8gByB,GAAA,CAAAuL,mBAAA,CAAoB,CAAC;UAAA,CAAC,CAAC;UARviBhN,0DAAE,CAQ2iB,CAAC;UAR9iBA,4DAAE,iBAQ29C,CAAC;UAR99CA,wDAAE,kBAAA4P,2CAAA;YAAF5P,2DAAE,CAAAK,GAAA;YAAA,OAAFL,yDAAE,CAQk3CyB,GAAA,CAAAoL,OAAA,CAAQ,CAAC;UAAA,CAAC,CAAC,mBAAAgD,4CAAA;YAR/3C7P,2DAAE,CAAAK,GAAA;YAAA,OAAFL,yDAAE,CAQo5CyB,GAAA,CAAAsL,aAAA,CAAc,CAAC;UAAA,CAAC,CAAC,oBAAA+C,6CAAAJ,MAAA;YARv6C1P,2DAAE,CAAAK,GAAA;YAAA,OAAFL,yDAAE,CAQ67CyB,GAAA,CAAAkL,mBAAA,CAAA+C,MAA0B,CAAC;UAAA,CAAC,CAAC;UAR59C1P,0DAAE,CAQ29C,CAAC;UAR99CA,uDAAE,YAQ2gD,CAAC;UAR9gDA,4DAAE,YAQyjD,CAAC;UAR5jDA,4DAAE;UAAFA,4DAAE,YAQ2sD,CAAC;UAR9sDA,uDAAE,cAQs1D,CAAC;UARz1DA,0DAAE,CAQo2D,CAAC;UARv2DA,6DAAE;UAAFA,uDAAE,cAQy5D,CAAC;UAR55DA,0DAAE,CAQq6D,CAAC;UARx6DA,uDAAE,cAQ+nE,CAAC;UARloEA,0DAAE,CAQyoE,CAAC;UAR5oEA,4DAAE,mBAQk8E,CAAC;UARr8EA,0DAAE,GAQi+E,CAAC;UARp+EA,0DAAE,CAQ6+E,CAAC,CAAO,CAAC;QAAA;QAAA,IAAAwB,EAAA;UAAA,MAAA0O,WAAA,GARx/ElQ,yDAAE;UAAFA,wDAAE,kBAAAyB,GAAA,CAAAuH,aAQuT,CAAC;UAR1ThJ,uDAAE,EAQssB,CAAC;UARzsBA,yDAAE,2BAAAyB,GAAA,CAAAmG,OAQssB,CAAC;UARzsB5H,wDAAE,YAAAyB,GAAA,CAAAmG,OAQomC,CAAC,kBAAAnG,GAAA,CAAA4I,aAA6C,CAAC,aAAA5I,GAAA,CAAA2I,QAAA,KAAA3I,GAAA,CAAAkF,mBAA2D,CAAC,OAAAlF,GAAA,CAAAqG,OAA4B,CAAC,aAAArG,GAAA,CAAA+J,QAAmC,CAAC,aAAA/J,GAAA,CAAA2I,QAAA,KAAA3I,GAAA,CAAAkF,mBAAA,QAAAlF,GAAA,CAAA2G,QAA2E,CAAC;UAR91CpI,yDAAE,eAAAyB,GAAA,CAAAqH,SAAA,6BAAArH,GAAA,CAAAsH,cAAA,sBAAAtH,GAAA,CAAAsN,eAAA,kBAAAtN,GAAA,CAAA4I,aAAA,oCAAA5I,GAAA,CAAA2I,QAAA,IAAA3I,GAAA,CAAAkF,mBAAA,wBAAAlF,GAAA,CAAAwH,IAAA,WAAAxH,GAAA,CAAAyI,KAAA;UAAFlK,uDAAE,EAQ2hE,CAAC;UAR9hEA,wDAAE,qBAAAkQ,WAQ2hE,CAAC,sBAAAzO,GAAA,CAAAoJ,aAAA,IAAApJ,GAAA,CAAA2I,QAAwD,CAAC,0BAAmC,CAAC;UAR3nEpK,uDAAE,CAQi8E,CAAC;UARp8EA,wDAAE,QAAAyB,GAAA,CAAAqG,OAQi8E,CAAC;QAAA;MAAA;MAAAsI,YAAA,GAAsxdpK,6DAAS,EAAwPC,yEAAqB;MAAAtB,MAAA;MAAA3C,aAAA;MAAAqO,eAAA;IAAA,EAAyK;EAAE;AACtwjB;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAV2GtQ,+DAAE,CAUXgH,WAAW,EAAc,CAAC;IAChH8G,IAAI,EAAE5I,oDAAS;IACfsL,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAE,cAAc;MAAEC,IAAI,EAAE;QAC7B,OAAO,EAAE,kBAAkB;QAC3B,iBAAiB,EAAE,MAAM;QACzB,mBAAmB,EAAE,MAAM;QAC3B,wBAAwB,EAAE,MAAM;QAChC,iCAAiC,EAAE,qCAAqC;QACxE,gCAAgC,EAAE,UAAU;QAC5C,MAAM,EAAE,IAAI;QACZ;QACA,mCAAmC,EAAE,UAAU;QAC/C,kCAAkC,EAAE,SAAS;QAC7C,+CAA+C,EAAE,qBAAqB;QACtE,SAAS,EAAE;MACf,CAAC;MAAEC,SAAS,EAAE,CACV9J,mCAAmC,EACnC;QACIC,OAAO,EAAEhB,yDAAa;QACtBiB,WAAW,EAAEC,WAAW;QACxBC,KAAK,EAAE;MACX,CAAC,CACJ;MAAEiI,QAAQ,EAAE,aAAa;MAAElN,aAAa,EAAEmD,4DAAiB,CAACyL,IAAI;MAAEP,eAAe,EAAEjL,kEAAuB,CAACyL,MAAM;MAAE9P,UAAU,EAAE,IAAI;MAAE+P,OAAO,EAAE,CAAC9K,6DAAS,EAAEC,yEAAqB,CAAC;MAAE3E,QAAQ,EAAE,gwEAAgwE;MAAEqD,MAAM,EAAE,CAAC,uqdAAuqd;IAAE,CAAC;EAC9niB,CAAC,CAAC,EAAkB,MAAM,CAAC;IAAEmJ,IAAI,EAAE9N,qDAAawN;EAAC,CAAC,EAAE;IAAEM,IAAI,EAAE9N,4DAAoByN;EAAC,CAAC,EAAE;IAAEK,IAAI,EAAE9N,iDAAS0N;EAAC,CAAC,EAAE;IAAEI,IAAI,EAAEkB,SAAS;IAAE+B,UAAU,EAAE,CAAC;MAC7HjD,IAAI,EAAEzI,oDAAS;MACfmL,IAAI,EAAE,CAAC,UAAU;IACrB,CAAC;EAAE,CAAC,EAAE;IAAE1C,IAAI,EAAEkB,SAAS;IAAE+B,UAAU,EAAE,CAAC;MAClCjD,IAAI,EAAExI,mDAAQA;IAClB,CAAC,EAAE;MACCwI,IAAI,EAAEvI,iDAAM;MACZiL,IAAI,EAAE,CAACzL,gEAAqB;IAChC,CAAC;EAAE,CAAC,EAAE;IAAE+I,IAAI,EAAEkB,SAAS;IAAE+B,UAAU,EAAE,CAAC;MAClCjD,IAAI,EAAExI,mDAAQA;IAClB,CAAC,EAAE;MACCwI,IAAI,EAAEvI,iDAAM;MACZiL,IAAI,EAAE,CAACnK,4BAA4B;IACvC,CAAC;EAAE,CAAC,CAAC,EAAkB;IAAEyC,SAAS,EAAE,CAAC;MACrCgF,IAAI,EAAEtI,gDAAK;MACXgL,IAAI,EAAE,CAAC,YAAY;IACvB,CAAC,CAAC;IAAEzH,cAAc,EAAE,CAAC;MACjB+E,IAAI,EAAEtI,gDAAK;MACXgL,IAAI,EAAE,CAAC,iBAAiB;IAC5B,CAAC,CAAC;IAAEzB,eAAe,EAAE,CAAC;MAClBjB,IAAI,EAAEtI,gDAAK;MACXgL,IAAI,EAAE,CAAC,kBAAkB;IAC7B,CAAC,CAAC;IAAEzI,EAAE,EAAE,CAAC;MACL+F,IAAI,EAAEtI,gDAAKA;IACf,CAAC,CAAC;IAAEgG,QAAQ,EAAE,CAAC;MACXsC,IAAI,EAAEtI,gDAAK;MACXgL,IAAI,EAAE,CAAC;QAAEQ,SAAS,EAAEhM,2DAAgBA;MAAC,CAAC;IAC1C,CAAC,CAAC;IAAEgE,aAAa,EAAE,CAAC;MAChB8E,IAAI,EAAEtI,gDAAKA;IACf,CAAC,CAAC;IAAEyD,IAAI,EAAE,CAAC;MACP6E,IAAI,EAAEtI,gDAAKA;IACf,CAAC,CAAC;IAAE0D,MAAM,EAAE,CAAC;MACT4E,IAAI,EAAErI,iDAAMA;IAChB,CAAC,CAAC;IAAE0D,mBAAmB,EAAE,CAAC;MACtB2E,IAAI,EAAErI,iDAAMA;IAChB,CAAC,CAAC;IAAEyE,KAAK,EAAE,CAAC;MACR4D,IAAI,EAAEtI,gDAAKA;IACf,CAAC,CAAC;IAAEqF,aAAa,EAAE,CAAC;MAChBiD,IAAI,EAAEtI,gDAAK;MACXgL,IAAI,EAAE,CAAC;QAAEQ,SAAS,EAAEhM,2DAAgBA;MAAC,CAAC;IAC1C,CAAC,CAAC;IAAEsC,aAAa,EAAE,CAAC;MAChBwG,IAAI,EAAEpI,oDAAS;MACf8K,IAAI,EAAE,CAAC,OAAO;IAClB,CAAC,CAAC;IAAErD,aAAa,EAAE,CAAC;MAChBW,IAAI,EAAEpI,oDAAS;MACf8K,IAAI,EAAE,CAAC,OAAO;IAClB,CAAC,CAAC;IAAEpI,QAAQ,EAAE,CAAC;MACX0F,IAAI,EAAEtI,gDAAK;MACXgL,IAAI,EAAE,CAAC;QAAEQ,SAAS,EAAG9G,KAAK,IAAMA,KAAK,IAAI,IAAI,GAAG8E,SAAS,GAAG/J,8DAAe,CAACiF,KAAK;MAAG,CAAC;IACzF,CAAC,CAAC;IAAEzD,KAAK,EAAE,CAAC;MACRqH,IAAI,EAAEtI,gDAAKA;IACf,CAAC,CAAC;IAAEmB,mBAAmB,EAAE,CAAC;MACtBmH,IAAI,EAAEtI,gDAAK;MACXgL,IAAI,EAAE,CAAC;QAAEQ,SAAS,EAAEhM,2DAAgBA;MAAC,CAAC;IAC1C,CAAC,CAAC;IAAEsJ,MAAM,EAAE,CAAC;MACTR,IAAI,EAAEpI,oDAAS;MACf8K,IAAI,EAAE,CAACxK,6DAAS;IACpB,CAAC,CAAC;IAAE4B,OAAO,EAAE,CAAC;MACVkG,IAAI,EAAEtI,gDAAK;MACXgL,IAAI,EAAE,CAAC;QAAEQ,SAAS,EAAEhM,2DAAgBA;MAAC,CAAC;IAC1C,CAAC,CAAC;IAAEoF,QAAQ,EAAE,CAAC;MACX0D,IAAI,EAAEtI,gDAAK;MACXgL,IAAI,EAAE,CAAC;QAAEQ,SAAS,EAAEhM,2DAAgBA;MAAC,CAAC;IAC1C,CAAC,CAAC;IAAEqF,aAAa,EAAE,CAAC;MAChByD,IAAI,EAAEtI,gDAAK;MACXgL,IAAI,EAAE,CAAC;QAAEQ,SAAS,EAAEhM,2DAAgBA;MAAC,CAAC;IAC1C,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA;AACA,MAAMiM,+BAA+B,GAAG;EACpCnK,OAAO,EAAEhB,yDAAa;EACtBiB,WAAW,EAAElC,yDAAU,CAAC,MAAMqM,4BAA4B,CAAC;EAC3DjK,KAAK,EAAE;AACX,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMiK,4BAA4B,SAASnL,qEAAyB,CAAC;EACjE;IAAS,IAAI,CAACsH,IAAI;MAAA,IAAA8D,yCAAA;MAAA,gBAAAC,qCAAAvQ,iBAAA;QAAA,QAAAsQ,yCAAA,KAAAA,yCAAA,GAvHqFnR,mEAAE,CAuHQkR,4BAA4B,IAAArQ,iBAAA,IAA5BqQ,4BAA4B;MAAA;IAAA,IAAqD;EAAE;EACpM;IAAS,IAAI,CAACI,IAAI,kBAxHqFtR,+DAAE;MAAA8N,IAAA,EAwHJoD,4BAA4B;MAAApQ,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAxH1BhB,gEAAE,CAwHkM,CAACiR,+BAA+B,CAAC,GAxHrOjR,wEAAE;IAAA,EAwH2Q;EAAE;AAC1X;AACA;EAAA,QAAAsQ,SAAA,oBAAAA,SAAA,KA1H2GtQ,+DAAE,CA0HXkR,4BAA4B,EAAc,CAAC;IACjIpD,IAAI,EAAEnI,oDAAS;IACf6K,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE;AAC9B,kFAAkF;MAC9DE,SAAS,EAAE,CAACM,+BAA+B,CAAC;MAC5ClQ,UAAU,EAAE;IAChB,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;AACA,MAAMyQ,mCAAmC,CAAC;EACtC;IAAS,IAAI,CAACnE,IAAI,YAAAoE,4CAAA5Q,iBAAA;MAAA,YAAAA,iBAAA,IAA+F2Q,mCAAmC;IAAA,CAAkD;EAAE;EACxM;IAAS,IAAI,CAACE,IAAI,kBA1IqF1R,8DAAE;MAAA8N,IAAA,EA0IS0D;IAAmC,EAAqF;EAAE;EAC5O;IAAS,IAAI,CAACI,IAAI,kBA3IqF5R,8DAAE,IA2I+C;EAAE;AAC9J;AACA;EAAA,QAAAsQ,SAAA,oBAAAA,SAAA,KA7I2GtQ,+DAAE,CA6IXwR,mCAAmC,EAAc,CAAC;IACxI1D,IAAI,EAAElI,mDAAQ;IACd4K,IAAI,EAAE,CAAC;MACCM,OAAO,EAAE,CAACI,4BAA4B,CAAC;MACvCY,OAAO,EAAE,CAACZ,4BAA4B;IAC1C,CAAC;EACT,CAAC,CAAC;AAAA;AACV,MAAMa,iBAAiB,CAAC;EACpB;IAAS,IAAI,CAAC1E,IAAI,YAAA2E,0BAAAnR,iBAAA;MAAA,YAAAA,iBAAA,IAA+FkR,iBAAiB;IAAA,CAAkD;EAAE;EACtL;IAAS,IAAI,CAACL,IAAI,kBAtJqF1R,8DAAE;MAAA8N,IAAA,EAsJSiE;IAAiB,EAAqF;EAAE;EAC1N;IAAS,IAAI,CAACH,IAAI,kBAvJqF5R,8DAAE;MAAA8Q,OAAA,GAuJsC9J,WAAW,EAAEd,mEAAe,EAAEA,mEAAe;IAAA,EAAI;EAAE;AACtM;AACA;EAAA,QAAAoK,SAAA,oBAAAA,SAAA,KAzJ2GtQ,+DAAE,CAyJX+R,iBAAiB,EAAc,CAAC;IACtHjE,IAAI,EAAElI,mDAAQ;IACd4K,IAAI,EAAE,CAAC;MACCM,OAAO,EAAE,CAAC9J,WAAW,EAAEd,mEAAe,CAAC;MACvC4L,OAAO,EAAE,CAAC9K,WAAW,EAAEd,mEAAe;IAC1C,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA","sources":["./projects/eav-ui/src/app/features/feature-icon/feature-icon.component.ts","./projects/eav-ui/src/app/features/feature-icon/feature-icon.component.html","./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.ts","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.html","./node_modules/@angular/material/fesm2022/checkbox.mjs"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { FeatureComponentBase } from '../shared/base-feature.component';\r\n\r\n@Component({\r\n  selector: 'app-feature-icon',\r\n  templateUrl: './feature-icon.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class FeatureIconComponent extends FeatureComponentBase { }\r\n","@if (show()) {\r\n  <mat-icon class=\"feature-icon\" tippyTranslate=\"Features.NotActivated\"(click)=\"openDialog()\">diamond</mat-icon>\r\n}","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  ContentTypeFieldsReuseDefinitions: 'ContentTypeFieldsReuseDefinitions',\r\n  AppExportAssetsAdvanced: 'AppExportAssetsAdvanced',\r\n\r\n  // Picker features\r\n  PickerUiCheckbox: 'PickerUiCheckbox',\r\n  PickerUiRadio: 'PickerUiRadio',\r\n  PickerSourceCsv: 'PickerSourceCsv',\r\n  PickerSourceAppAssets: 'PickerSourceAppAssets',\r\n  PickerFormulas: 'PickerFormulas',\r\n  PickerUiMoreInfo: 'PickerUiMoreInfo',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","import { Component, input } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { computedObj } from '../../shared/signals/signal.utilities';\r\nimport { FeatureComponentBase } from '../shared/base-feature.component';\r\n\r\n@Component({\r\n  selector: 'app-feature-text-info',\r\n  templateUrl: './feature-text-info.component.html',\r\n  styleUrls: ['./feature-text-info.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    TranslateModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class FeatureTextInfoComponent extends FeatureComponentBase {\r\n  asInfo = input<boolean>(false);\r\n\r\n  constructor() { super(); }\r\n\r\n  icon = computedObj('icon', () => this.asInfo() ? 'info' : 'warning');\r\n}\r\n","@if (show()) {\r\n  <div class=\"feature-text-info\" (click)=\"openDialog()\" [tippy]=\"'Features.Tooltip' | translate: feature()\">\r\n    <!-- Icon column -->\r\n    <mat-icon class=\"icon icon-{{icon()}}\">{{ icon() }}</mat-icon>\r\n    <!-- Text column -->\r\n    <div class=\"feature-text-info-content\">\r\n      <div class=\"feature-text-info-title\">{{ 'Features.FeatureNotActivated' | translate }}</div>\r\n      <div class=\"feature-text-info-subtitle\">{{ 'Features.ClickToFindOutMore' | translate }}</div>\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n}\r\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, ANIMATION_MODULE_TYPE, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { MatRipple, _MatInternalFormField, MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n        disabledInteractive: false,\n    };\n}\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nvar TransitionCheckState;\n(function (TransitionCheckState) {\n    /** The initial state of the component before any user interaction. */\n    TransitionCheckState[TransitionCheckState[\"Init\"] = 0] = \"Init\";\n    /** The state representing the component when it's becoming checked. */\n    TransitionCheckState[TransitionCheckState[\"Checked\"] = 1] = \"Checked\";\n    /** The state representing the component when it's becoming unchecked. */\n    TransitionCheckState[TransitionCheckState[\"Unchecked\"] = 2] = \"Unchecked\";\n    /** The state representing the component when it's becoming indeterminate. */\n    TransitionCheckState[TransitionCheckState[\"Indeterminate\"] = 3] = \"Indeterminate\";\n})(TransitionCheckState || (TransitionCheckState = {}));\n/**\n * @deprecated Will stop being exported.\n * @breaking-change 19.0.0\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatCheckbox),\n    multi: true,\n};\n/** Change event object emitted by checkbox. */\nclass MatCheckboxChange {\n}\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\nclass MatCheckbox {\n    /** Focuses the checkbox. */\n    focus() {\n        this._inputElement.nativeElement.focus();\n    }\n    /** Creates the change event that will be emitted by the checkbox. */\n    _createChangeEvent(isChecked) {\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = isChecked;\n        return event;\n    }\n    /** Gets the element on which to add the animation CSS classes. */\n    _getAnimationTargetElement() {\n        return this._inputElement?.nativeElement;\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    constructor(_elementRef, _changeDetectorRef, _ngZone, tabIndex, _animationMode, _options) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /** CSS classes to add when transitioning between the different checkbox states. */\n        this._animationClasses = {\n            uncheckedToChecked: 'mdc-checkbox--anim-unchecked-checked',\n            uncheckedToIndeterminate: 'mdc-checkbox--anim-unchecked-indeterminate',\n            checkedToUnchecked: 'mdc-checkbox--anim-checked-unchecked',\n            checkedToIndeterminate: 'mdc-checkbox--anim-checked-indeterminate',\n            indeterminateToChecked: 'mdc-checkbox--anim-indeterminate-checked',\n            indeterminateToUnchecked: 'mdc-checkbox--anim-indeterminate-unchecked',\n        };\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n        this.labelPosition = 'after';\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** Event emitted when the checkbox's `checked` value changes. */\n        this.change = new EventEmitter();\n        /** Event emitted when the checkbox's `indeterminate` value changes. */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        this._currentAnimationClass = '';\n        this._currentCheckState = TransitionCheckState.Init;\n        this._controlValueAccessorChangeFn = () => { };\n        this._validatorChangeFn = () => { };\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || defaults;\n        this.color = this._options.color || defaults.color;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.id = this._uniqueId = `mat-mdc-checkbox-${++nextUniqueId}`;\n        this.disabledInteractive = _options?.disabledInteractive ?? false;\n    }\n    ngOnChanges(changes) {\n        if (changes['required']) {\n            this._validatorChangeFn();\n        }\n    }\n    ngAfterViewInit() {\n        this._syncIndeterminate(this._indeterminate);\n    }\n    /** Whether the checkbox is checked. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the checkbox is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value !== this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    get indeterminate() {\n        return this._indeterminate;\n    }\n    set indeterminate(value) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            }\n            else {\n                this._transitionCheckState(this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    // Implemented as a part of Validator.\n    validate(control) {\n        return this.required && control.value !== true ? { 'required': true } : null;\n    }\n    // Implemented as a part of Validator.\n    registerOnValidatorChange(fn) {\n        this._validatorChangeFn = fn;\n    }\n    _transitionCheckState(newState) {\n        let oldState = this._currentCheckState;\n        let element = this._getAnimationTargetElement();\n        if (oldState === newState || !element) {\n            return;\n        }\n        if (this._currentAnimationClass) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    element.classList.remove(animationClass);\n                }, 1000);\n            });\n        }\n    }\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(this._createChangeEvent(this.checked));\n        // Assigning the value again here is redundant, but we have to do it in case it was\n        // changed inside the `change` listener which will cause the input to be out of sync.\n        if (this._inputElement) {\n            this._inputElement.nativeElement.checked = this.checked;\n        }\n    }\n    /** Toggles the `checked` state of the checkbox. */\n    toggle() {\n        this.checked = !this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n    }\n    _handleInputClick() {\n        const clickAction = this._options?.clickAction;\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && clickAction !== 'check') {\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n            this._checked = !this._checked;\n            this._transitionCheckState(this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if ((this.disabled && this.disabledInteractive) ||\n            (!this.disabled && clickAction === 'noop')) {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    _onBlur() {\n        // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n        // Angular does not expect events to be raised during change detection, so any state change\n        // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n        // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n        // telling the form control it has been touched until the next tick.\n        Promise.resolve().then(() => {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        switch (oldState) {\n            case TransitionCheckState.Init:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === TransitionCheckState.Checked) {\n                    return this._animationClasses.uncheckedToChecked;\n                }\n                else if (newState == TransitionCheckState.Indeterminate) {\n                    return this._checked\n                        ? this._animationClasses.checkedToIndeterminate\n                        : this._animationClasses.uncheckedToIndeterminate;\n                }\n                break;\n            case TransitionCheckState.Unchecked:\n                return newState === TransitionCheckState.Checked\n                    ? this._animationClasses.uncheckedToChecked\n                    : this._animationClasses.uncheckedToIndeterminate;\n            case TransitionCheckState.Checked:\n                return newState === TransitionCheckState.Unchecked\n                    ? this._animationClasses.checkedToUnchecked\n                    : this._animationClasses.checkedToIndeterminate;\n            case TransitionCheckState.Indeterminate:\n                return newState === TransitionCheckState.Checked\n                    ? this._animationClasses.indeterminateToChecked\n                    : this._animationClasses.indeterminateToUnchecked;\n        }\n        return '';\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     */\n    _syncIndeterminate(value) {\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n    _onInputClick() {\n        this._handleInputClick();\n    }\n    _onTouchTargetClick() {\n        this._handleInputClick();\n        if (!this.disabled) {\n            // Normally the input should be focused already, but if the click\n            // comes from the touch target, then we might have to focus it ourselves.\n            this._inputElement.nativeElement.focus();\n        }\n    }\n    /**\n     *  Prevent click events that come from the `<label/>` element from bubbling. This prevents the\n     *  click handler on the host from triggering twice when clicking on the `<label/>` element. After\n     *  the click event on the `<label/>` propagates, the browsers dispatches click on the associated\n     *  `<input/>`. By preventing clicks on the label by bubbling, we ensure only one click event\n     *  bubbles when the label is clicked.\n     */\n    _preventBubblingFromLabel(event) {\n        if (!!event.target && this._labelElement.nativeElement.contains(event.target)) {\n            event.stopPropagation();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCheckbox, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: 'tabindex', attribute: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_CHECKBOX_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatCheckbox, isStandalone: true, selector: \"mat-checkbox\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], id: \"id\", required: [\"required\", \"required\", booleanAttribute], labelPosition: \"labelPosition\", name: \"name\", value: \"value\", disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? undefined : numberAttribute(value))], color: \"color\", disabledInteractive: [\"disabledInteractive\", \"disabledInteractive\", booleanAttribute], checked: [\"checked\", \"checked\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute], indeterminate: [\"indeterminate\", \"indeterminate\", booleanAttribute] }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, host: { properties: { \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"class._mat-animation-noopable\": \"_animationMode === 'NoopAnimations'\", \"class.mdc-checkbox--disabled\": \"disabled\", \"id\": \"id\", \"class.mat-mdc-checkbox-disabled\": \"disabled\", \"class.mat-mdc-checkbox-checked\": \"checked\", \"class.mat-mdc-checkbox-disabled-interactive\": \"disabledInteractive\", \"class\": \"color ? \\\"mat-\\\" + color : \\\"mat-accent\\\"\" }, classAttribute: \"mat-mdc-checkbox\" }, providers: [\n            MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR,\n            {\n                provide: NG_VALIDATORS,\n                useExisting: MatCheckbox,\n                multi: true,\n            },\n        ], viewQueries: [{ propertyName: \"_inputElement\", first: true, predicate: [\"input\"], descendants: true }, { propertyName: \"_labelElement\", first: true, predicate: [\"label\"], descendants: true }, { propertyName: \"ripple\", first: true, predicate: MatRipple, descendants: true }], exportAs: [\"matCheckbox\"], usesOnChanges: true, ngImport: i0, template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\" (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.aria-disabled]=\\\"disabled && disabledInteractive ? true : null\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled && !disabledInteractive\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\" #label [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox:hover .mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:hover .mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:active .mdc-checkbox__native-control~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:active .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity));background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-app-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity));background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-app-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mdc-checkbox__ripple{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.cdk-high-contrast-active .mdc-checkbox--disabled{opacity:.5}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mdc-checkbox-unselected-icon-color, var(--mat-app-on-surface-variant));top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2)}.mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary))}.mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mdc-checkbox:hover .mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mat-app-on-surface));background-color:rgba(0,0,0,0)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary))}.mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mat-app-on-surface))}.mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover .mdc-checkbox__native-control~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mdc-checkbox__checkmark{color:CanvasText}.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.cdk-high-contrast-active .mdc-checkbox--disabled .mdc-checkbox__checkmark,.cdk-high-contrast-active .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mdc-checkbox__mixedmark{margin:0 1px}.mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox._mat-animation-noopable .mdc-checkbox *,.mat-mdc-checkbox._mat-animation-noopable .mdc-checkbox *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox .mat-internal-form-field{color:var(--mat-checkbox-label-text-color, var(--mat-app-on-surface));font-family:var(--mat-checkbox-label-text-font, var(--mat-app-body-medium-font));line-height:var(--mat-checkbox-label-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mat-checkbox-label-text-size, var(--mat-app-body-medium-size));letter-spacing:var(--mat-checkbox-label-text-tracking, var(--mat-app-body-medium-tracking));font-weight:var(--mat-checkbox-label-text-weight, var(--mat-app-body-medium-weight))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive{pointer-events:auto}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive input{cursor:default}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color)}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;left:50%;height:48px;width:48px;transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"component\", type: _MatInternalFormField, selector: \"div[mat-internal-form-field]\", inputs: [\"labelPosition\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCheckbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-checkbox', host: {\n                        'class': 'mat-mdc-checkbox',\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                        '[class.mdc-checkbox--disabled]': 'disabled',\n                        '[id]': 'id',\n                        // Add classes that users can use to more easily target disabled or checked checkboxes.\n                        '[class.mat-mdc-checkbox-disabled]': 'disabled',\n                        '[class.mat-mdc-checkbox-checked]': 'checked',\n                        '[class.mat-mdc-checkbox-disabled-interactive]': 'disabledInteractive',\n                        '[class]': 'color ? \"mat-\" + color : \"mat-accent\"',\n                    }, providers: [\n                        MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR,\n                        {\n                            provide: NG_VALIDATORS,\n                            useExisting: MatCheckbox,\n                            multi: true,\n                        },\n                    ], exportAs: 'matCheckbox', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [MatRipple, _MatInternalFormField], template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\" (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.aria-disabled]=\\\"disabled && disabledInteractive ? true : null\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled && !disabledInteractive\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\" #label [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox:hover .mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:hover .mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:active .mdc-checkbox__native-control~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:active .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity));background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-app-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity));background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-app-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mdc-checkbox__ripple{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.cdk-high-contrast-active .mdc-checkbox--disabled{opacity:.5}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mdc-checkbox-unselected-icon-color, var(--mat-app-on-surface-variant));top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2)}.mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary))}.mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mdc-checkbox:hover .mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mat-app-on-surface));background-color:rgba(0,0,0,0)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary))}.mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mat-app-on-surface))}.mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover .mdc-checkbox__native-control~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mdc-checkbox__checkmark{color:CanvasText}.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.cdk-high-contrast-active .mdc-checkbox--disabled .mdc-checkbox__checkmark,.cdk-high-contrast-active .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mdc-checkbox__mixedmark{margin:0 1px}.mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox._mat-animation-noopable .mdc-checkbox *,.mat-mdc-checkbox._mat-animation-noopable .mdc-checkbox *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox .mat-internal-form-field{color:var(--mat-checkbox-label-text-color, var(--mat-app-on-surface));font-family:var(--mat-checkbox-label-text-font, var(--mat-app-body-medium-font));line-height:var(--mat-checkbox-label-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mat-checkbox-label-text-size, var(--mat-app-body-medium-size));letter-spacing:var(--mat-checkbox-label-text-tracking, var(--mat-app-body-medium-tracking));font-weight:var(--mat-checkbox-label-text-weight, var(--mat-app-body-medium-weight))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive{pointer-events:auto}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive input{cursor:default}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color)}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;left:50%;height:48px;width:48px;transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n                }] }], propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], id: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], labelPosition: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], indeterminateChange: [{\n                type: Output\n            }], value: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], _inputElement: [{\n                type: ViewChild,\n                args: ['input']\n            }], _labelElement: [{\n                type: ViewChild,\n                args: ['label']\n            }], tabIndex: [{\n                type: Input,\n                args: [{ transform: (value) => (value == null ? undefined : numberAttribute(value)) }]\n            }], color: [{\n                type: Input\n            }], disabledInteractive: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], ripple: [{\n                type: ViewChild,\n                args: [MatRipple]\n            }], checked: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], indeterminate: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n    multi: true,\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n *\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCheckboxRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatCheckboxRequiredValidator, isStandalone: true, selector: \"mat-checkbox[required][formControlName],\\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]\", providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCheckboxRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                    providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR],\n                    standalone: true,\n                }]\n        }] });\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nclass _MatCheckboxRequiredValidatorModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, imports: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCheckboxRequiredValidator],\n                    exports: [MatCheckboxRequiredValidator],\n                }]\n        }] });\nclass MatCheckboxModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCheckboxModule, imports: [MatCheckbox, MatCommonModule], exports: [MatCheckbox, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCheckboxModule, imports: [MatCheckbox, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCheckbox, MatCommonModule],\n                    exports: [MatCheckbox, MatCommonModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, TransitionCheckState, _MatCheckboxRequiredValidatorModule };\n"],"names":["MatIconModule","TippyDirective","FeatureComponentBase","i0","ɵɵelementStart","ɵɵlistener","FeatureIconComponent_Conditional_0_Template_mat_icon_click_0_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","openDialog","ɵɵtext","ɵɵelementEnd","FeatureIconComponent","__ngFactoryType__","selectors","standalone","features","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","decls","vars","consts","template","FeatureIconComponent_Template","rf","ctx","ɵɵtemplate","FeatureIconComponent_Conditional_0_Template","ɵɵconditional","show","i1","MatIcon","encapsulation","FeatureNames","AppSyncWithSiteFiles","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","LightSpeed","ContentSecurityPolicy","PermissionsByLanguage","ContentTypeFieldsReuseDefinitions","AppExportAssetsAdvanced","PickerUiCheckbox","PickerUiRadio","PickerSourceCsv","PickerSourceAppAssets","PickerFormulas","PickerUiMoreInfo","input","TranslateModule","computedObj","FeatureTextInfoComponent_Conditional_0_Template_div_click_0_listener","ɵɵprojection","ɵɵproperty","ɵɵpipeBind2","feature","ɵɵadvance","ɵɵclassMapInterpolate1","icon","ɵɵtextInterpolate","ɵɵpipeBind1","FeatureTextInfoComponent","constructor","asInfo","inputs","ngContentSelectors","_c0","FeatureTextInfoComponent_Template","FeatureTextInfoComponent_Conditional_0_Template","i2","TranslatePipe","styles","InjectionToken","forwardRef","EventEmitter","ANIMATION_MODULE_TYPE","booleanAttribute","numberAttribute","Component","ViewEncapsulation","ChangeDetectionStrategy","Attribute","Optional","Inject","Input","Output","ViewChild","Directive","NgModule","NG_VALUE_ACCESSOR","NG_VALIDATORS","CheckboxRequiredValidator","MatRipple","_MatInternalFormField","MatCommonModule","_c1","_c2","MAT_CHECKBOX_DEFAULT_OPTIONS","providedIn","factory","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","color","clickAction","disabledInteractive","TransitionCheckState","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","provide","useExisting","MatCheckbox","multi","MatCheckboxChange","nextUniqueId","defaults","focus","_inputElement","nativeElement","_createChangeEvent","isChecked","event","source","checked","_getAnimationTargetElement","inputId","id","_uniqueId","_elementRef","_changeDetectorRef","_ngZone","tabIndex","_animationMode","_options","_animationClasses","uncheckedToChecked","uncheckedToIndeterminate","checkedToUnchecked","checkedToIndeterminate","indeterminateToChecked","indeterminateToUnchecked","ariaLabel","ariaLabelledby","labelPosition","name","change","indeterminateChange","_onTouched","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_validatorChangeFn","_checked","_disabled","_indeterminate","parseInt","ngOnChanges","changes","ngAfterViewInit","_syncIndeterminate","value","markForCheck","disabled","indeterminate","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","emit","_isRippleDisabled","disableRipple","_onLabelTextChange","detectChanges","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","validate","control","required","registerOnValidatorChange","newState","oldState","element","classList","remove","_getAnimationClassForCheckStateTransition","length","add","animationClass","runOutsideAngular","setTimeout","_emitChangeEvent","toggle","_handleInputClick","Promise","resolve","then","_onInteractionEvent","stopPropagation","_onBlur","nativeCheckbox","_onInputClick","_onTouchTargetClick","_preventBubblingFromLabel","target","_labelElement","contains","ɵfac","MatCheckbox_Factory","ɵɵdirectiveInject","ElementRef","ChangeDetectorRef","NgZone","ɵɵinjectAttribute","ɵcmp","ɵɵdefineComponent","type","viewQuery","MatCheckbox_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","ripple","hostAttrs","hostVars","hostBindings","MatCheckbox_HostBindings","ɵɵhostProperty","ɵɵattribute","ɵɵclassMap","ɵɵclassProp","ariaDescribedby","undefined","outputs","exportAs","ɵɵProvidersFeature","ɵɵInputTransformsFeature","ɵɵNgOnChangesFeature","MatCheckbox_Template","ɵɵgetCurrentView","ɵɵprojectionDef","MatCheckbox_Template_div_click_0_listener","$event","MatCheckbox_Template_div_click_3_listener","MatCheckbox_Template_input_blur_4_listener","MatCheckbox_Template_input_click_4_listener","MatCheckbox_Template_input_change_4_listener","ɵɵelement","ɵɵnamespaceSVG","ɵɵnamespaceHTML","checkbox_r2","ɵɵreference","dependencies","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","host","providers","None","OnPush","imports","decorators","transform","MAT_CHECKBOX_REQUIRED_VALIDATOR","MatCheckboxRequiredValidator","ɵMatCheckboxRequiredValidator_BaseFactory","MatCheckboxRequiredValidator_Factory","ɵɵgetInheritedFactory","ɵdir","ɵɵdefineDirective","_MatCheckboxRequiredValidatorModule","_MatCheckboxRequiredValidatorModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports","MatCheckboxModule","MatCheckboxModule_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[5]}