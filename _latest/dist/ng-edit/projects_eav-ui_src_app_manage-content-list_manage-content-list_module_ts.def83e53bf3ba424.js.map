{"version":3,"file":"projects_eav-ui_src_app_manage-content-list_manage-content-list_module_ts.def83e53bf3ba424.js","mappings":"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","names":["AppDialogConfigService","constructor","http","context","dnnContext","globalConfigService","featuresService","this","dialogSettings$","loadFromService","getShared$","appId","getDialogSettings","pipe","shareReplay","refCount","get","$2sxc","apiUrl","webApiDialogRoot","params","toString","map","dialogSettings","Context","Language","List","filter","language","IsEnabled","tap","allowDebug","Enable","DebugMode","static","t","i0","i1","i2","i3","i4","i5","_angular_core__WEBPACK_IMPORTED_MODULE_5__","wxM","factory","ɵfac","webApiTypeRoot","webApiTypeScopes","ContentTypesService","name","retrieveContentType","staticName","contentTypeId","retrieveContentTypes","scope","getScopes","scopesData","scopes","old","Object","keys","key","value","getScopesV2","save","contentType","post","appid","delete","StaticName","import","files","formData","FormData","file","append","zoneId","createGhost","sourceStaticName","_angular_core__WEBPACK_IMPORTED_MODULE_2__","ExportAppPartsService","getContentInfo","webApiAppPartsRoot","exportParts","contentTypeIds","entityIds","templateIds","url","join","window","open","ExportAppService","getAppInfo","webApiAppRoot","exportApp","includeContentGroups","resetAppGuid","exportForVersionControl","withFiles","withPortalFiles","ImportAppPartsService","importAppParts","resetApp","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","webApiEntityList","importQuery","from","toBase64","switchMap","fileBase64","AppId","ContentBase64","success","Success","Messages","clonePipeline","id","Id","_angular_core__WEBPACK_IMPORTED_MODULE_6__","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","export","getPolymorphism","getUsage","guid","_angular_core__WEBPACK_IMPORTED_MODULE_1__","ImportAppService","importApp","changedName","retryOnDuplicate","result","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","of","_angular_core__WEBPACK_IMPORTED_MODULE_4__","manageContentListDialog","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","ManageContentListComponent","Promise","all","__webpack_require__","e","then","bind","routes","path","component","DialogEntryComponent","data","dialog","children","matcher","edit","loadChildren","m","EditModule","refreshEdit","RefreshEditModule","ReplaceContentModule","ManageContentListRoutingModule","core","a4G","s3X","RouterModule","forChild","ManageContentListModule","ContentGroupService","EavService","imports","CommonModule","SharedComponentsModule","MatDialogModule","MatButtonModule","MatIconModule","DragDropModule","MatSnackBarModule","TranslateModule","buildTranslateConfiguration","translateLoaderFactory","viewContainerRef","router","route","changeDetectorRef","navigation","getCurrentNavigation","dialogData","extras","state","ngOnInit","dialogConfig","snapshot","Error","consoleLogDev","_dialogAnimatingOpen","_lastDialogRef","afterOpened","subscribe","openDialogComponent","ngOnDestroy","dialogRef","close","init","autoFocus","backdropClass","closeOnNavigation","showScrollbar","position","top","afterClosed","navRes","navigateUrl","pathFromRoot","length","parent","totalPopup","navigate","relativeTo","markForCheck","In1","selectors","decls","vars","template","rf","ctx","resolve","reject","reader","FileReader","readAsDataURL","onload","split","onerror","error","readAsText","loader","provide","TranslateLoader","useFactory","deps","HttpClient","defaultLanguage","isolate","TranslateLoaderWithErrorHandling","sxcVersion","prefix","suffix","getTranslation","lang","catchError","console","warn"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/app-dialog-config.service.ts","./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/manage-content-list/manage-content-list-dialog.config.ts","./projects/eav-ui/src/app/manage-content-list/manage-content-list-routing.module.ts","./projects/eav-ui/src/app/manage-content-list/manage-content-list.module.ts","./projects/eav-ui/src/app/shared/components/dialog-entry/dialog-entry.component.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts","./projects/eav-ui/src/app/shared/translation/translate-configuration.ts","./projects/eav-ui/src/app/shared/translation/translate-loader-factory.ts","./projects/eav-ui/src/app/shared/translation/translate-loader-with-error-handling.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable, shareReplay, tap } from 'rxjs';\r\nimport { GlobalConfigService } from '../../edit/shared/store/ngrx-data';\r\nimport { DialogSettings } from '../../shared/models/dialog-settings.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\n\r\nconst webApiDialogRoot = 'admin/dialog/';\r\n\r\n@Injectable()\r\nexport class AppDialogConfigService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private context: Context,\r\n    private dnnContext: DnnContext,\r\n    private globalConfigService: GlobalConfigService,\r\n    featuresService: FeaturesService,\r\n  ) {\r\n    featuresService.loadFromService(this);\r\n  }\r\n\r\n  private dialogSettings$: Record<number, Observable<DialogSettings>> = {};\r\n\r\n  getShared$(appId?: number) {\r\n    appId ??= this.context.appId;\r\n    if (!this.dialogSettings$[appId])\r\n      this.dialogSettings$[appId] = this.getDialogSettings(appId).pipe(shareReplay({ refCount: false }));\r\n    return this.dialogSettings$[appId];\r\n    // TODO: probably should add an onDestroy and ensure all subscriptions are killed\r\n  }\r\n\r\n  getDialogSettings(appId?: number) {\r\n    return this.http.get<DialogSettings>(this.dnnContext.$2sxc.http.apiUrl(webApiDialogRoot + 'settings'), {\r\n      params: { appId: appId ?? this.context.appId.toString() },\r\n    }).pipe(\r\n      map(dialogSettings => {\r\n        dialogSettings.Context.Language.List = dialogSettings.Context.Language.List.filter(language => language.IsEnabled);\r\n        return dialogSettings;\r\n      }),\r\n      tap(dialogSettings => {\r\n        this.globalConfigService.allowDebug(dialogSettings.Context.Enable.DebugMode);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\n\r\n// We should list all the \"full\" paths here, so it's easier to find when searching for API calls\r\nexport const webApiTypeRoot = 'admin/type/';\r\nconst webApiTypeGet = 'admin/type/get';\r\nconst webApiTypes = 'admin/type/list';\r\nconst webApiTypeScopes = 'admin/type/scopes';\r\nconst webApiTypeSave = 'admin/type/save';\r\nconst webApiTypeDelete = 'admin/type/delete';\r\nconst webApiTypeImport = 'admin/type/import';\r\nconst webApiTypeAddGhost = 'admin/type/addghost';\r\n\r\n@Injectable()\r\nexport class ContentTypesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get<ContentType>(this.apiUrl(webApiTypeGet), {\r\n      params: { appId: this.context.appId.toString(), contentTypeId: staticName }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get<ContentType[]>(this.apiUrl(webApiTypes), {\r\n      params: { appId: this.context.appId.toString(), scope }\r\n    });\r\n  }\r\n\r\n  // TODO: remove this method after upgrade to V2\r\n  getScopes() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopesData => {\r\n        // wip during upgrade:\r\n        const scopes = scopesData.old;\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getScopesV2() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopesData => scopesData.scopes),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeSave), contentType, {\r\n      params: { appid: this.context.appId.toString() },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeDelete), {\r\n      params: { appid: this.context.appId.toString(), staticName: contentType.StaticName },\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeAddGhost), null, {\r\n      params: { appid: this.context.appId.toString(), sourceStaticName },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\n\r\n@Injectable()\r\nexport class ExportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getContentInfo(scope: string) {\r\n    return this.http.get<ContentInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Get'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString(), scope },\r\n    });\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.context.appId.toString()\r\n      + '&zoneId=' + this.context.zoneId.toString()\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AppInfo } from '../models/app-info.model';\r\n\r\n@Injectable()\r\nexport class ExportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAppInfo() {\r\n    return this.http.get<AppInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Statistics'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString() },\r\n    });\r\n  }\r\n\r\n  exportApp(includeContentGroups: boolean, resetAppGuid: boolean) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Export')\r\n      + '?appId=' + this.context.appId\r\n      + '&zoneId=' + this.context.zoneId\r\n      + '&includeContentGroups=' + includeContentGroups\r\n      + '&resetAppGuid=' + resetAppGuid;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'SaveData'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { webApiEntityList } from '../../edit/shared/services';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Query } from '../models/query.model';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get<Query[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryImport), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViews), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.context.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.dnnContext.$2sxc.http.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.context.appId.toString(), guid }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const manageContentListDialog: DialogConfig = {\r\n  name: 'MANAGE_CONTENT_LIST_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ManageContentListComponent } = await import('./manage-content-list.component');\r\n    return ManageContentListComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { edit, refreshEdit } from '../edit/edit.matcher';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { manageContentListDialog } from './manage-content-list-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: manageContentListDialog }, children: [\r\n      {\r\n        matcher: edit,\r\n        loadChildren: () => import('../edit/edit.module').then(m => m.EditModule)\r\n      },\r\n      {\r\n        matcher: refreshEdit,\r\n        loadChildren: () => import('../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n      },\r\n      {\r\n        path: ':guid/:part/:index/replace',\r\n        loadChildren: () => import('../replace-content/replace-content.module').then(m => m.ReplaceContentModule)\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ManageContentListRoutingModule { }\r\n","import { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { ManageContentListRoutingModule } from './manage-content-list-routing.module';\r\nimport { ManageContentListComponent } from './manage-content-list.component';\r\nimport { ContentGroupService } from './services/content-group.service';\r\nimport { buildTranslateConfiguration } from '../shared/translation';\r\nimport { EavService } from '../edit/shared/services';\r\nimport { AppDialogConfigService } from '../app-administration/services';\r\nimport { translateLoaderFactory } from '../shared/translation/translate-loader-factory';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ManageContentListComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ManageContentListRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    DragDropModule,\r\n    MatSnackBarModule,\r\n    TranslateModule.forChild(buildTranslateConfiguration(translateLoaderFactory)),\r\n  ],\r\n  providers: [\r\n    Context,\r\n    ContentGroupService,\r\n    EavService,\r\n    AppDialogConfigService\r\n  ]\r\n})\r\nexport class ManageContentListModule { }\r\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit, Type, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NavigateFormResult } from '../../../edit/shared/models';\r\nimport { consoleLogDev } from '../../helpers/console-log-angular.helper';\r\nimport { DialogConfig } from '../../models/dialog-config.model';\r\nimport { EavWindow } from '../../models/eav-window.model';\r\nimport { Context } from '../../services/context';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-dialog-entry',\r\n  templateUrl: './dialog-entry.component.html',\r\n  styleUrls: ['./dialog-entry.component.scss'],\r\n})\r\nexport class DialogEntryComponent implements OnInit, OnDestroy {\r\n  private dialogData: Record<string, any>;\r\n  private dialogRef: MatDialogRef<any>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.dialogData = navigation?.extras?.state || {};\r\n  }\r\n\r\n  ngOnInit() {\r\n    const dialogConfig: DialogConfig = this.route.snapshot.data.dialog;\r\n    if (dialogConfig == null) {\r\n      throw new Error(`Could not find config for dialog. Did you forget to add DialogConfig to route data?`);\r\n    }\r\n    consoleLogDev('Open dialog:', dialogConfig.name, 'Context id:', this.context.id, 'Context:', this.context);\r\n\r\n    dialogConfig.getComponent().then(component => {\r\n      // spm Workaround for \"feature\" where you can't open new dialog while last one is still opening\r\n      // https://github.com/angular/components/commit/728cf1c8ebd49e089f4bae945511bb0918972c26\r\n      if ((this.dialog as any)._dialogAnimatingOpen && (this.dialog as any)._lastDialogRef) {\r\n        ((this.dialog as any)._lastDialogRef as MatDialogRef<any>).afterOpened().subscribe(() => {\r\n          this.openDialogComponent(dialogConfig, component);\r\n        });\r\n      } else {\r\n        this.openDialogComponent(dialogConfig, component);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private openDialogComponent(dialogConfig: DialogConfig, component: Type<any>) {\r\n    if (dialogConfig.initContext) {\r\n      this.context.init(this.route);\r\n    }\r\n\r\n    this.dialogRef = this.dialog.open(component, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: this.dialogData,\r\n      panelClass: [\r\n        'dialog-panel',\r\n        `dialog-panel-${dialogConfig.panelSize}`,\r\n        dialogConfig.showScrollbar ? 'show-scrollbar' : 'no-scrollbar',\r\n        ...(dialogConfig.panelClass ? dialogConfig.panelClass : []),\r\n      ],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n\r\n    this.dialogRef.afterClosed().subscribe((data: any) => {\r\n      consoleLogDev('Dialog was closed:', dialogConfig.name, 'Data:', data);\r\n\r\n      const navRes = data as NavigateFormResult;\r\n      if (navRes?.navigateUrl != null) {\r\n        this.router.navigate([navRes.navigateUrl]);\r\n        return;\r\n      }\r\n\r\n      if (this.route.pathFromRoot.length <= 3) {\r\n        try {\r\n          window.parent.$2sxc.totalPopup.close();\r\n        } catch (error) { }\r\n        return;\r\n      }\r\n\r\n      if (this.route.snapshot.url.length > 0) {\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent, state: data });\r\n      } else {\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent.parent, state: data });\r\n      }\r\n    });\r\n\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader, TranslateModuleConfig } from '@ngx-translate/core';\r\n\r\nexport function buildTranslateConfiguration(factory: (http: HttpClient) => TranslateLoader): TranslateModuleConfig {\r\n  const config: TranslateModuleConfig = {\r\n    loader: {\r\n      provide: TranslateLoader,\r\n      useFactory: factory,\r\n      deps: [HttpClient],\r\n    },\r\n    defaultLanguage: 'en',\r\n    isolate: true,\r\n  };\r\n  return config;\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { TranslateLoader } from \"@ngx-translate/core\";\r\nimport { EavWindow } from \"../models/eav-window.model\";\r\nimport { TranslateLoaderWithErrorHandling } from \"./translate-loader-with-error-handling\";\r\n\r\ndeclare const window: EavWindow;\r\n\r\n// AoT requires an exported function for factories\r\n// at least according to https://github.com/ngx-translate/http-loader\r\nexport function translateLoaderFactory(http: HttpClient): TranslateLoader {\r\n    return new TranslateLoaderWithErrorHandling(http, './i18n/', `.js?${window.sxcVersion}`);\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader } from '@ngx-translate/core';\r\nimport { catchError, Observable, of } from 'rxjs';\r\n\r\n/**\r\n * This loader should catch a 404 if the file doesn't exist and not result in errors.\r\n * https://stackoverflow.com/questions/47391613/how-to-set-a-fallback-assets-i18n-en-json-when-url-is-not-available-ngx-trans\r\n */\r\nexport class TranslateLoaderWithErrorHandling implements TranslateLoader {\r\n  constructor(private http: HttpClient, private prefix: string, private suffix: string) { }\r\n\r\n  getTranslation(lang: string): Observable<Record<string, any>> {\r\n    return this.http.get<Record<string, any>>(`${this.prefix}${lang}${this.suffix}`).pipe(\r\n      catchError(error => {\r\n        console.warn(`Translation: Failed to get language '${lang}' from ${this.prefix}`, error);\r\n        return of({});\r\n      }),\r\n    );\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}