{"version":3,"sources":["./projects/ng-dialogs/src/app/import-app/services/import-app.service.ts","./projects/ng-dialogs/src/app/shared/components/dialog-entry/dialog-entry.component.ts"],"names":["webApiAppRoot","http","context","dnnContext","importApp","file","changedName","formData","FormData","append","this","post","$2sxc","apiUrl","params","zoneId","toString","ImportAppService","dialog","viewContainerRef","router","route","changeDetectorRef","navigation","getCurrentNavigation","dialogData","extras","state","ngOnInit","dialogConfig","snapshot","data","Error","name","id","getComponent","then","component","initContext","init","dialogRef","open","autoFocus","backdropClass","closeOnNavigation","panelClass","panelSize","showScrollbar","position","top","afterClosed","pipe","subscribe","navRes","navigateUrl","pathFromRoot","length","window","parent","totalPopup","close","error","navigate","url","relativeTo","markForCheck","ngOnDestroy","DialogEntryComponent"],"mappings":"2SAMaA,EAAgB,aAE7B,aAEE,WAAoBC,EAA0BC,EAA0BC,GAApD,KAAAF,OAA0B,KAAAC,UAA0B,KAAAC,a,OAExE,YAAAC,UAAA,SAAUC,EAAYC,GACpB,IAAMC,EAAW,IAAIC,SAGrB,OAFAD,EAASE,OAAO,OAAQJ,GACxBE,EAASE,OAAO,OAAQH,GAA4B,IAC7CI,KAAKT,KAAKU,KAAsBD,KAAKP,WAAWS,MAAMX,KAAKY,OAAOb,EAAgB,UAAWO,EAAU,CAC5GO,OAAQ,CAAEC,OAAQL,KAAKR,QAAQa,OAAOC,e,sCAR/BC,GAAgB,qC,0BAAhBA,EAAgB,QAAhBA,EAAgB,Y,EAD7B,I,2ICIA,aASE,WACUC,EACAC,EACAC,EACAC,EACAnB,EACAoB,G,MALA,KAAAJ,SACA,KAAAC,mBACA,KAAAC,SACA,KAAAC,QACA,KAAAnB,UACA,KAAAoB,oBAER,IAAMC,EAAab,KAAKU,OAAOI,uBAC/Bd,KAAKe,YAA+B,QAAlB,EAAAF,aAAU,EAAVA,EAAYG,cAAM,eAAEC,QAAS,G,OAGjD,YAAAC,SAAA,sBACQC,EAA6BnB,KAAKW,MAAMS,SAASC,KAAKb,OAC5D,GAAoB,MAAhBW,EACF,MAAM,IAAIG,MAAM,wFAElB,OAAkB,eAAgBH,EAAaI,KAAM,cAAevB,KAAKR,QAAQgC,GAAI,WAAYxB,KAAKR,SAEtG2B,EAAaM,eAAeC,KAAK,SAAAC,GAC3BR,EAAaS,aACf,EAAKpC,QAAQqC,KAAK,EAAKlB,OAGzB,EAAKmB,UAAY,EAAKtB,OAAOuB,KAAKJ,EAAW,CAC3CK,WAAW,EACXC,cAAe,kBACfC,mBAAmB,EACnBb,KAAM,EAAKN,WACXoB,YAAY,QAAF,CACR,eACA,gBAAgBhB,EAAaiB,UAC7BjB,EAAakB,cAAgB,iBAAmB,iB,QAC5ClB,EAAagB,WAAahB,EAAagB,WAAa,KAI1DG,SAAU,CAAEC,IAAK,KACjB9B,iBAAkB,EAAKA,mBAGzB,EAAKqB,UAAUU,cAAcC,MAAK,OAAK,IAAIC,UAAU,SAACrB,IACpD,OAAkB,qBAAsBF,EAAaI,KAAM,QAASF,GAEpE,IAAMsB,EAAStB,EACf,GAA2B,OAAvBsB,aAAM,EAANA,EAAQC,aAKZ,GAAI,EAAKjC,MAAMkC,aAAaC,QAAU,EACpC,IACEC,OAAOC,OAAO9C,MAAM+C,WAAWC,QAC/B,MAAOC,SAKT,EAAKzC,OAAO0C,SAAS,CAAC,MADpB,EAAKzC,MAAMS,SAASiC,IAAIP,OAAS,EACN,CAAEQ,WAAY,EAAK3C,MAAMqC,OAAQ/B,MAAOI,GAExC,CAAEiC,WAAY,EAAK3C,MAAMqC,OAAOA,OAAQ/B,MAAOI,SAd5E,EAAKX,OAAO0C,SAAS,CAACT,EAAOC,gBAkBjC,EAAKhC,kBAAkB2C,kBAI3B,YAAAC,YAAA,WACExD,KAAK8B,UAAUoB,S,sCAzENO,GAAoB,2E,wBAApBA,EAAoB,uF,EALjC","file":"projects_ng-dialogs_src_app_import-app_services_import-app_service_ts-projects_ng-dialogs_src-7b8bdd.6c60d7403da29545b7ff.js","sourcesContent":["import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ImportAppResult } from '../models/import-app-result.model';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ? changedName : '');\r\n    return this.http.post<ImportAppResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { take } from 'rxjs/operators';\r\nimport { NavigateFormResult } from '../../../../../../edit/shared/models';\r\nimport { consoleLogAngular } from '../../helpers/console-log-angular.helper';\r\nimport { DialogConfig } from '../../models/dialog-config.model';\r\nimport { EavWindow } from '../../models/eav-window.model';\r\nimport { Context } from '../../services/context';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-dialog-entry',\r\n  templateUrl: './dialog-entry.component.html',\r\n  styleUrls: ['./dialog-entry.component.scss'],\r\n})\r\nexport class DialogEntryComponent implements OnInit, OnDestroy {\r\n  private dialogData: Record<string, any>;\r\n  private dialogRef: MatDialogRef<any>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.dialogData = navigation?.extras?.state || {};\r\n  }\r\n\r\n  ngOnInit() {\r\n    const dialogConfig: DialogConfig = this.route.snapshot.data.dialog;\r\n    if (dialogConfig == null) {\r\n      throw new Error(`Could not find config for dialog. Did you forget to add DialogConfig to route data?`);\r\n    }\r\n    consoleLogAngular('Open dialog:', dialogConfig.name, 'Context id:', this.context.id, 'Context:', this.context);\r\n\r\n    dialogConfig.getComponent().then(component => {\r\n      if (dialogConfig.initContext) {\r\n        this.context.init(this.route);\r\n      }\r\n\r\n      this.dialogRef = this.dialog.open(component, {\r\n        autoFocus: false,\r\n        backdropClass: 'dialog-backdrop',\r\n        closeOnNavigation: false,\r\n        data: this.dialogData,\r\n        panelClass: [\r\n          'dialog-panel',\r\n          `dialog-panel-${dialogConfig.panelSize}`,\r\n          dialogConfig.showScrollbar ? 'show-scrollbar' : 'no-scrollbar',\r\n          ...(dialogConfig.panelClass ? dialogConfig.panelClass : []),\r\n        ],\r\n        // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n        // Real top margin is overwritten in css e.g. dialog-panel-large\r\n        position: { top: '0' },\r\n        viewContainerRef: this.viewContainerRef,\r\n      });\r\n\r\n      this.dialogRef.afterClosed().pipe(take(1)).subscribe((data: any) => {\r\n        consoleLogAngular('Dialog was closed:', dialogConfig.name, 'Data:', data);\r\n\r\n        const navRes = data as NavigateFormResult;\r\n        if (navRes?.navigateUrl != null) {\r\n          this.router.navigate([navRes.navigateUrl]);\r\n          return;\r\n        }\r\n\r\n        if (this.route.pathFromRoot.length <= 3) {\r\n          try {\r\n            window.parent.$2sxc.totalPopup.close();\r\n          } catch (error) { }\r\n          return;\r\n        }\r\n\r\n        if (this.route.snapshot.url.length > 0) {\r\n          this.router.navigate(['./'], { relativeTo: this.route.parent, state: data });\r\n        } else {\r\n          this.router.navigate(['./'], { relativeTo: this.route.parent.parent, state: data });\r\n        }\r\n      });\r\n\r\n      this.changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}