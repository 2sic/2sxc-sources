{"version":3,"file":"projects_eav-ui_src_app_app-administration_sub-dialogs_analyze-settings_settings-item-details-4ac85a.2593a1d76bcd8d43.js","mappings":"gXAyBO,IAAMA,EAA4B,MAAnC,MAAOA,EAWXC,YACUC,EACAC,GADAC,KAAAF,SACAE,KAAAD,QARVC,KAAAC,SAAQC,YAA4BC,GAEpCH,KAAAI,YAAcJ,KAAKK,mBAEXL,KAAAM,0BAAyBC,KAAUC,KAMzCR,KAAKS,KAAOT,KAAKD,MAAMW,SAASC,OAAOC,SAASC,IAAI,QACpD,MAAMC,EAAgBd,KAAKD,MAAMW,SAASE,SAASC,IAAI,QACvDb,KAAKe,aAAe,CAAC,YAAa,QAAQC,SAASF,QAAiBX,EAAYW,EAChFd,KAAKiB,gBAAkBjB,KAAKD,MAAMW,SAASE,SAASC,IAAI,kBAC1D,CAEAK,WACElB,KAAKM,uBAAuBa,SAASnB,KAAKS,KAAMT,KAAKiB,gBAAiBjB,KAAKe,cAAc,GAAMK,UAAUnB,IACvGD,KAAKC,MAAMoB,IAAIpB,EAAK,EAExB,CAEAqB,cACEtB,KAAKF,OAAOyB,OACd,CAEQlB,mBAgBN,MAfiC,IAC5BmB,IACHC,WAAY,CACV,IACKC,IAAkBC,oBACrBC,WAAY,QACZC,MAAO,SACPC,aAAcC,KAEhB,IACKL,IAAkBM,WACrBH,MAAO,WAKf,iDAhDWjC,GAA4BqC,MAAAC,MAAAD,MAAAE,MAAA,oCAA5BvC,EAA4BwC,UAAA,gCAAAC,YAAA,EAAAC,SAAA,CAAAL,OAAAM,MAAA,GAAAC,KAAA,EAAAC,OAAA,mQAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICtBnCV,MAHN,UAGMA,CAH6B,UAG7BA,CAFsB,UAEtBA,CAD4B,SACvBA,MAAA,GAAqBA,QAC1BA,MAAA,cAA6CA,MAAA,0BAASW,EAAAtB,aAAa,GACjEW,MAAA,cAAUA,MAAA,WAGhBA,cACAA,MAAA,SACEA,MAAA,8BAAuBA,MAAA,WAAMA,MAAA,IAAqBA,QAAQA,MAAA,uBAC5DA,QACAA,MAAA,YAEEA,MADA,uBACAA,CAD8G,YAGlHA,iBAbWA,MAAA,GAAAA,MAAAW,EAAA3B,iBAOsBgB,MAAA,GAAAA,MAAAW,EAAA3B,iBAGcgB,MAAA,GAAoBA,MAApB,UAAAW,EAAA3C,QAAoBgC,CAAD,cAAAW,EAAAxC,6BDO9DyC,KAAeC,KACfC,KAAaC,KACbC,IAAaC,MAAAC,OAAA,gGAGJvD,CAA4B","names":["SettingsItemDetailsComponent","constructor","dialog","route","this","stack","signal","undefined","gridOptions","buildGridOptions","analyzeSettingsService","transient","AnalyzeSettingsService","part","snapshot","parent","paramMap","get","routeViewGuid","selectedView","includes","settingsItemKey","ngOnInit","getStack","subscribe","set","closeDialog","close","defaultGridOptions","columnDefs","ColumnDefinitions","TextWideActionClass","headerName","field","cellRenderer","AnalyzeSettingsValueComponent","TextNarrow","i0","i1","i2","selectors","standalone","features","decls","vars","consts","template","rf","ctx","MatButtonModule","i3","MatIconModule","i4","SxcGridModule","i5","styles"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/settings-item-details/settings-item-details.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/settings-item-details/settings-item-details.component.html"],"sourcesContent":["import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnInit, signal } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Of, transient } from '../../../../../../../core';\r\nimport { ColumnDefinitions } from '../../../../shared/ag-grid/column-definitions';\r\nimport { defaultGridOptions } from '../../../../shared/constants/default-grid-options.constants';\r\nimport { SxcGridModule } from '../../../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { AnalyzeSettingsService } from '../../../services/analyze-settings.service';\r\nimport { AnalyzeSettingsValueComponent } from '../analyze-settings-value/analyze-settings-value.component';\r\nimport { AnalyzeParts, SettingsStackItem } from '../analyze-settings.models';\r\n\r\n@Component({\r\n  selector: 'app-settings-item-details',\r\n  templateUrl: './settings-item-details.component.html',\r\n  styleUrls: ['./settings-item-details.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    SxcGridModule,\r\n  ],\r\n})\r\nexport class SettingsItemDetailsComponent implements OnInit {\r\n  part: Of<typeof AnalyzeParts>;\r\n  selectedView: string;\r\n  settingsItemKey: string;\r\n\r\n  stack = signal<SettingsStackItem[]>(undefined);\r\n\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private analyzeSettingsService = transient(AnalyzeSettingsService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<SettingsItemDetailsComponent>,\r\n    private route: ActivatedRoute,\r\n  ) {\r\n    this.part = this.route.snapshot.parent.paramMap.get('part') as Of<typeof AnalyzeParts>;\r\n    const routeViewGuid = this.route.snapshot.paramMap.get('view');\r\n    this.selectedView = ['undefined', 'null'].includes(routeViewGuid) ? undefined : routeViewGuid;\r\n    this.settingsItemKey = this.route.snapshot.paramMap.get('settingsItemKey');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.analyzeSettingsService.getStack(this.part, this.settingsItemKey, this.selectedView, true).subscribe(stack => {\r\n      this.stack.set(stack);\r\n    });\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialog.close();\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.TextWideActionClass,\r\n          headerName: 'Value',\r\n          field: '_value',\r\n          cellRenderer: AnalyzeSettingsValueComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextNarrow,\r\n          field: 'Source',\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","<div class=\"nav-component-wrapper\">\r\n  <div mat-mdc-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>{{ settingsItemKey }}</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <p class=\"dialog-description\">\r\n    Here you can see where <code>{{ settingsItemKey }}</code> is configured.\r\n  </p>\r\n  <div class=\"grid-wrapper\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"stack()\" [gridOptions]=\"gridOptions\"> </ag-grid-angular>\r\n    <div class=\"grid-more-actions-box\"></div>\r\n  </div>\r\n</div>\r\n"],"x_google_ignoreList":[]}