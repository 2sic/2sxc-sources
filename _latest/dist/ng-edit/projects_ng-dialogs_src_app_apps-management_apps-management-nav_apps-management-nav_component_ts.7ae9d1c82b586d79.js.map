{"version":3,"mappings":"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","names":["i0","ctx_r5","ctx_r8","SystemInfoComponent","zoneService","snackBar","d","this","systemInfoSet$","BehaviorSubject","undefined","buildTemplateVars","getSystemInfo","complete","text","copyToClipboard","open","duration","subscribe","error","t","next","systemInfoSet","systemInfos$","pipe","map","label","value","System","EavVersion","Platform","PlatformVersion","Zones","toString","Fingerprint","siteInfos$","Site","ZoneId","SiteId","Apps","Languages","templateVars$","combineLatest","systemInfos","u","siteInfos","i","selectors","AppsListActionsComponent","params","app","data","onFlush","onDelete","ctx","AppsListShowComponent","AppsListComponent","router","route","appsListService","AllCommunityModules","Object","defaultGridOptions","frameworkComponents","booleanFilterComponent","BooleanFilterComponent","idFieldComponent","IdFieldComponent","appsListShowComponent","appsListActionsComponent","columnDefs","headerName","field","width","headerClass","cellClass","cellRenderer","sortable","filter","cellRendererParams","tooltipGetter","Id","Guid","valueGetter","showValueGetter","flex","minWidth","sort","onCellClicked","openApp","bind","Thumbnail","pinned","deleteApp","flushApp","Subscription","fetchAppsList","refreshOnChildClosed","apps$","fabOpen$","subscription","unsubscribe","window","navigate","relativeTo","firstChild","files","state","getAll","apps","IsHidden","result","prompt","Name","delete","o","alert","confirm","flushCache","add","events","event","NavigationEnd","startWith","snapshot","pairwise","SiteLanguagesStatusComponent","onEnabledToggle","SiteLanguagesComponent","siteLanguagesStatusComponent","language","Code","handleNameClicked","toggleLanguage","fetchLanguages","languages$","IsEnabled","getLanguages","languages","SystemSettingsComponent","dialogService","appDialogConfigService","sitePrimaryApp","openAppAdministration","AppId","getDialogSettings","openSiteSettings","globalPrimaryApp","openGlobalSettings","callback","dialogSettings","Context","PrimaryApp","FeaturesListNameComponent","feature","AgGridHeightDirective","elementRef","element","nativeElement","changes","itemsCount","style","height","headerHeight","maxRows","rowHeight","extraHeight","LicensesOrderPipe","licenses","Array","isArray","a","b","Priority","pure","LicenseInfoComponent","featuresConfigService","featuresListNameComponent","NameId","openFeature","fetchLicenses","licenses$","index","license","getLicenses","FeaturesListEnabledReasonComponent","FeaturesListEnabledComponent","FeaturesListPublicComponent","FeaturesListSecurityComponent","FeaturesListUiComponent","FeaturesStatusComponent","nextValue","ctx_r2","ctx_r4","ManageFeaturesWipComponent","dialogRef","featuresStatusComponent","s","License","Enabled","enabled","toggle","fetchFeatures","changed$","features$","originalFeatures$","changedFeatures","originalFeatures","some","GeneralHelpers","f","find","close","featuresStates","FeatureGuid","saveFeaturesNew","closeDialog","features","newFeatures","B","updateIndex","findIndex","ctx_r7","ctx_r9","ManageFeaturesComponent","globalConfigService","dialog","viewContainerRef","featuresListEnabledComponent","featuresListUiComponent","featuresListPublicComponent","featuresListEnabledReasonComponent","featuresListSecurityComponent","Ui","Public","EnabledReason","L","Expires","_a","replace","Security","Impact","getDebugEnabled$","showManagement$","showSpinner$","managementUrl$","p","showManagement","showSpinner","managementUrl","subscribeToMessages","getManageFeaturesUrl","url","includes","Error","fromEvent","origin","endsWith","featuresString","JSON","stringify","saveFeatures","autoFocus","backdropClass","closeOnNavigation","panelClass","position","top","afterClosed","SxcInsightsComponent","sxcInsightsService","loading$","$2sxc","http","apiUrl","form","activatePageLog","pageLogDuration","res","document","activeElement","HTMLElement","blur","resetForm","AppsManagementNavComponent","context","zoneId","tabs","indexOf","path","tabIndex","FieldHintComponent","isShort","h","id","align","tooltip","C","ToggleDebugDirective","navigator","platform","match","metaKey","ctrlKey","shiftKey","altKey","toggleDebugEnabled","getSelection","removeAllRanges","I","str","el","createElement","setAttribute","left","body","appendChild","selected","rangeCount","getRangeAt","select","execCommand","removeChild","addRange"],"sources":["./projects/ng-dialogs/src/app/apps-management/system-info/system-info.component.html","./projects/ng-dialogs/src/app/apps-management/system-info/system-info.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/apps-list-actions/apps-list-actions.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/apps-list-actions/apps-list-actions.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/apps-list-show/apps-list-show.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/apps-list-show/apps-list-show.component.ts","./projects/ng-dialogs/src/app/apps-management/apps-list/apps-list.component.ts","./projects/ng-dialogs/src/app/apps-management/apps-list/apps-list.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/site-languages-status/site-languages-status.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/site-languages-status/site-languages-status.component.html","./projects/ng-dialogs/src/app/apps-management/site-languages/site-languages.component.ts","./projects/ng-dialogs/src/app/apps-management/site-languages/site-languages.component.html","./projects/ng-dialogs/src/app/apps-management/system-settings/system-settings.component.ts","./projects/ng-dialogs/src/app/apps-management/system-settings/system-settings.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-name/features-list-name.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-name/features-list-name.component.html","./projects/ng-dialogs/src/app/apps-management/licence-info/ag-grid-height.directive.ts","./projects/ng-dialogs/src/app/apps-management/licence-info/licenses-order.pipe.ts","./projects/ng-dialogs/src/app/apps-management/licence-info/license-info.component.html","./projects/ng-dialogs/src/app/apps-management/licence-info/license-info.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-enabled-reason/features-list-enabled-reason.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-enabled-reason/features-list-enabled-reason.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-enabled/features-list-enabled.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-enabled/features-list-enabled.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-public/features-list-public.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-public/features-list-public.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-security/features-list-security.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-security/features-list-security.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-ui/features-list-ui.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-ui/features-list-ui.component.ts","./projects/ng-dialogs/src/app/apps-management/manage-features-wip/features-status/features-status.component.ts","./projects/ng-dialogs/src/app/apps-management/manage-features-wip/features-status/features-status.component.html","./projects/ng-dialogs/src/app/apps-management/manage-features-wip/manage-features-wip.component.html","./projects/ng-dialogs/src/app/apps-management/manage-features-wip/manage-features-wip.component.ts","./projects/ng-dialogs/src/app/apps-management/manage-features/manage-features.component.html","./projects/ng-dialogs/src/app/apps-management/manage-features/manage-features.component.ts","./projects/ng-dialogs/src/app/apps-management/sxc-insights/sxc-insights.component.html","./projects/ng-dialogs/src/app/apps-management/sxc-insights/sxc-insights.component.ts","./projects/ng-dialogs/src/app/apps-management/apps-management-nav/apps-management-nav.component.html","./projects/ng-dialogs/src/app/apps-management/apps-management-nav/apps-management-nav.component.ts","./projects/ng-dialogs/src/app/shared/components/field-hint/field-hint.component.html","./projects/ng-dialogs/src/app/shared/components/field-hint/field-hint.component.ts","./projects/ng-dialogs/src/app/shared/components/id-field/id-field.component.ts","./projects/ng-dialogs/src/app/shared/components/id-field/id-field.component.html","./projects/ng-dialogs/src/app/shared/directives/toggle-debug.directive.ts","./projects/ng-dialogs/src/app/shared/helpers/copy-to-clipboard.helper.ts"],"sourcesContent":["<div class=\"cards-box\" *ngIf=\"templateVars$ | async as data\">\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Platform</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"info-row\" *ngFor=\"let info of data.systemInfos\">\r\n        <div class=\"info-row__label\">{{ info.label }}</div>\r\n        <div class=\"info-row__value\">\r\n          <span [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">\r\n            {{ info.value }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Current Site</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"info-row\" *ngFor=\"let info of data.siteInfos\">\r\n        <div class=\"info-row__label\">{{ info.label }}</div>\r\n        <div class=\"info-row__value\">\r\n          <span [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">\r\n            {{ info.value }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { SystemInfoSet } from '../models/system-info.model';\r\nimport { ZoneService } from '../services/zone.service';\r\nimport { InfoTemplate, SystemInfoTemplateVars } from './system-info.models';\r\n\r\n@Component({\r\n  selector: 'app-system-info',\r\n  templateUrl: './system-info.component.html',\r\n  styleUrls: ['./system-info.component.scss'],\r\n})\r\nexport class SystemInfoComponent implements OnInit, OnDestroy {\r\n  templateVars$: Observable<SystemInfoTemplateVars>;\r\n\r\n  private systemInfoSet$: BehaviorSubject<SystemInfoSet | undefined>;\r\n\r\n  constructor(private zoneService: ZoneService, private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.systemInfoSet$ = new BehaviorSubject<SystemInfoSet>(undefined);\r\n\r\n    this.buildTemplateVars();\r\n    this.getSystemInfo();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.systemInfoSet$.complete();\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  private getSystemInfo(): void {\r\n    this.zoneService.getSystemInfo().subscribe({\r\n      error: () => {\r\n        this.systemInfoSet$.next(undefined);\r\n      },\r\n      next: (systemInfoSet) => {\r\n        this.systemInfoSet$.next(systemInfoSet);\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildTemplateVars(): void {\r\n    const systemInfos$ = this.systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) { return; }\r\n        const info: InfoTemplate[] = [\r\n          { label: 'EAV / 2sic Version', value: systemInfoSet.System.EavVersion },\r\n          { label: 'Platform', value: systemInfoSet.System.Platform },\r\n          { label: 'Platform Version', value: systemInfoSet.System.PlatformVersion },\r\n          { label: 'Zones', value: systemInfoSet.System.Zones.toString() },\r\n          { label: 'Fingerprint', value: systemInfoSet.System.Fingerprint },\r\n        ];\r\n        return info;\r\n      })\r\n    );\r\n    const siteInfos$ = this.systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) { return; }\r\n        const info: InfoTemplate[] = [\r\n          { label: 'Zone Id', value: systemInfoSet.Site.ZoneId.toString() },\r\n          { label: 'Site Id', value: systemInfoSet.Site.SiteId.toString() },\r\n          { label: 'Apps', value: systemInfoSet.Site.Apps.toString() },\r\n          { label: 'Languages', value: systemInfoSet.Site.Languages.toString() },\r\n        ];\r\n        return info;\r\n      })\r\n    );\r\n    this.templateVars$ = combineLatest([systemInfos$, siteInfos$]).pipe(\r\n      map(([systemInfos, siteInfos]) => {\r\n        const templateVars: SystemInfoTemplateVars = {\r\n          systemInfos,\r\n          siteInfos,\r\n        };\r\n        return templateVars;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button icon\"\r\n    [tippy]=\"app.IsGlobal ? 'This app is global' : app.IsInherited ? 'This app is inherited' : ''\"\r\n    [tippyDisabled]=\"!app.IsGlobal && !app.IsInherited\">\r\n    <mat-icon *ngIf=\"app.IsGlobal\">foundation</mat-icon>\r\n    <mat-icon *ngIf=\"app.IsInherited\">holiday_village</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple tippy=\"More\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"grid-more-menu\">\r\n  <button mat-menu-item (click)=\"flushCache()\">\r\n    <mat-icon>cached</mat-icon>\r\n    <span>Flush cache</span>\r\n  </button>\r\n  <button mat-menu-item [disabled]=\"!app.IsApp\" (click)=\"deleteApp()\">\r\n    <mat-icon>delete</mat-icon>\r\n    <span>Delete</span>\r\n  </button>\r\n</mat-menu>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { App } from '../../models/app.model';\r\nimport { AppsListActionsParams } from './apps-list-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-apps-list-actions',\r\n  templateUrl: './apps-list-actions.component.html',\r\n  styleUrls: ['./apps-list-actions.component.scss'],\r\n})\r\nexport class AppsListActionsComponent implements ICellRendererAngularComp {\r\n  app: App;\r\n  private params: AppsListActionsParams;\r\n\r\n  constructor() { }\r\n\r\n  agInit(params: AppsListActionsParams) {\r\n    this.params = params;\r\n    this.app = this.params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  flushCache() {\r\n    this.params.onFlush(this.app);\r\n  }\r\n\r\n  deleteApp() {\r\n    this.params.onDelete(this.app);\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon tippy=\"Show this app to users\" *ngIf=\"value\">visibility</mat-icon>\r\n  <mat-icon tippy=\"Don't show this app to users\" *ngIf=\"!value\">visibility_off</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-apps-list-show',\r\n  templateUrl: './apps-list-show.component.html',\r\n  styleUrls: ['./apps-list-show.component.scss'],\r\n})\r\nexport class AppsListShowComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { AllCommunityModules, CellClickedEvent, GridOptions, ICellRendererParams, ValueGetterParams } from '@ag-grid-community/all-modules';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { filter, map, pairwise, startWith } from 'rxjs/operators';\r\nimport { ImportAppDialogData } from '../../import-app/import-app-dialog.config';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { AppsListActionsComponent } from '../ag-grid-components/apps-list-actions/apps-list-actions.component';\r\nimport { AppsListActionsParams } from '../ag-grid-components/apps-list-actions/apps-list-actions.models';\r\nimport { AppsListShowComponent } from '../ag-grid-components/apps-list-show/apps-list-show.component';\r\nimport { App } from '../models/app.model';\r\nimport { AppsListService } from '../services/apps-list.service';\r\n\r\n@Component({\r\n  selector: 'app-apps-list',\r\n  templateUrl: './apps-list.component.html',\r\n  styleUrls: ['./apps-list.component.scss'],\r\n})\r\nexport class AppsListComponent implements OnInit, OnDestroy {\r\n  apps$ = new BehaviorSubject<App[]>(null);\r\n  fabOpen$ = new BehaviorSubject(false);\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      idFieldComponent: IdFieldComponent,\r\n      appsListShowComponent: AppsListShowComponent,\r\n      appsListActionsComponent: AppsListActionsComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'Id', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agNumberColumnFilter',\r\n        cellRendererParams: {\r\n          tooltipGetter: (app: App) => `ID: ${app.Id}\\nGUID: ${app.Guid}`,\r\n        } as IdFieldParams,\r\n      },\r\n      {\r\n        headerName: 'Show', field: 'IsHidden', width: 70, headerClass: 'dense', cellClass: 'icons no-outline', sortable: true,\r\n        filter: 'booleanFilterComponent', cellRenderer: 'appsListShowComponent', valueGetter: this.showValueGetter,\r\n      },\r\n      {\r\n        headerName: 'Name', field: 'Name', flex: 2, minWidth: 250, cellClass: 'apps-list-primary-action highlight', sortable: true,\r\n        sort: 'asc', filter: 'agTextColumnFilter', onCellClicked: this.openApp.bind(this), cellRenderer: (params: ICellRendererParams) => {\r\n          const app: App = params.data;\r\n          if (app.Thumbnail != null) {\r\n            return `\r\n            <div class=\"container\">\r\n              <img class=\"image logo\" src=\"${app.Thumbnail}?w=40&h=40&mode=crop\"></img>\r\n              <div class=\"text\">${params.value}</div>\r\n            </div>`;\r\n          } else {\r\n            return `\r\n            <div class=\"container\">\r\n              <div class=\"image logo\">\r\n                <span class=\"material-icons-outlined\">star_border</span>\r\n              </div>\r\n              <div class=\"text\">${params.value}</div>\r\n            </div>`;\r\n          }\r\n        },\r\n      },\r\n      {\r\n        headerName: 'Folder', field: 'Folder', flex: 2, minWidth: 250, cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter',\r\n      },\r\n      {\r\n        headerName: 'Version', field: 'Version', width: 78, headerClass: 'dense', cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter',\r\n      },\r\n      {\r\n        headerName: 'Items', field: 'Items', width: 70, headerClass: 'dense', cellClass: 'number-cell no-outline', sortable: true,\r\n        filter: 'agNumberColumnFilter',\r\n      },\r\n      {\r\n        width: 82, cellClass: 'secondary-action no-padding', cellRenderer: 'appsListActionsComponent', pinned: 'right',\r\n        cellRendererParams: {\r\n          onDelete: this.deleteApp.bind(this),\r\n          onFlush: this.flushApp.bind(this),\r\n        } as AppsListActionsParams,\r\n      },\r\n    ],\r\n  };\r\n\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private appsListService: AppsListService,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchAppsList();\r\n    this.refreshOnChildClosed();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.apps$.complete();\r\n    this.fabOpen$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  openChange(open: boolean) {\r\n    this.fabOpen$.next(open);\r\n  }\r\n\r\n  browseCatalog() {\r\n    window.open('https://2sxc.org/apps', '_blank');\r\n  }\r\n\r\n  createApp() {\r\n    this.router.navigate(['create'], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  createInheritedApp(): void {\r\n    this.router.navigate(['create-inherited'], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  importApp(files?: File[]) {\r\n    const dialogData: ImportAppDialogData = { files };\r\n    this.router.navigate(['import'], { relativeTo: this.route.firstChild, state: dialogData });\r\n  }\r\n\r\n  private fetchAppsList() {\r\n    this.appsListService.getAll().subscribe(apps => {\r\n      this.apps$.next(apps);\r\n    });\r\n  }\r\n\r\n  private showValueGetter(params: ValueGetterParams) {\r\n    const app: App = params.data;\r\n    return !app.IsHidden;\r\n  }\r\n\r\n  private deleteApp(app: App) {\r\n    const result = prompt(`This cannot be undone. To really delete this app, type 'yes!' or type/paste the app-name here. Are you sure want to delete '${app.Name}' (${app.Id})?`);\r\n    if (result === null) { return; }\r\n    if (result === app.Name || result === 'yes!') {\r\n      this.snackBar.open('Deleting...');\r\n      this.appsListService.delete(app.Id).subscribe(() => {\r\n        this.snackBar.open('Deleted', null, { duration: 2000 });\r\n        this.fetchAppsList();\r\n      });\r\n    } else {\r\n      alert('Input did not match - will not delete');\r\n    }\r\n  }\r\n\r\n  private flushApp(app: App) {\r\n    if (!confirm(`Flush the App Cache for ${app.Name} (${app.Id})?`)) { return; }\r\n    this.snackBar.open('Flushing cache...');\r\n    this.appsListService.flushCache(app.Id).subscribe(() => {\r\n      this.snackBar.open('Cache flushed', null, { duration: 2000 });\r\n    });\r\n  }\r\n\r\n  private openApp(params: CellClickedEvent) {\r\n    const appId = (params.data as App).Id;\r\n    this.router.navigate([appId.toString()], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        startWith(!!this.route.snapshot.firstChild.firstChild),\r\n        map(() => !!this.route.snapshot.firstChild.firstChild),\r\n        pairwise(),\r\n        filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n      ).subscribe(() => {\r\n        this.fetchAppsList();\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"apps$ | async\" [modules]=\"modules\" [gridOptions]=\"gridOptions\"\r\n    appDragAndDrop [allowedFileTypes]=\"'zip'\" (filesDropped)=\"importApp($event)\">\r\n  </ag-grid-angular>\r\n\r\n  <div class=\"grid-more-actions-box\"></div>\r\n\r\n  <eco-fab-speed-dial class=\"grid-fab\" [ngClass]=\"{ 'fab-opened': (fabOpen$ | async) }\"\r\n    (openChange)=\"openChange($event)\">\r\n    <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n      <button mat-fab>\r\n        <mat-icon class=\"spin180\">{{ (fabOpen$ | async) ? 'close' : 'add' }}</mat-icon>\r\n      </button>\r\n    </eco-fab-speed-dial-trigger>\r\n\r\n    <eco-fab-speed-dial-actions>\r\n      <button mat-mini-fab label=\"Find more apps\" (click)=\"browseCatalog()\">\r\n        <mat-icon>search</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab label=\"Create inherited app\" (click)=\"createInheritedApp()\">\r\n        <mat-icon>holiday_village</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab label=\"Import app\" (click)=\"importApp()\">\r\n        <mat-icon>cloud_upload</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab label=\"Create app\" (click)=\"createApp()\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </eco-fab-speed-dial-actions>\r\n  </eco-fab-speed-dial>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { SiteLanguage } from '../../models/site-language.model';\r\nimport { SiteLanguagesStatusParams } from './site-languages-status.models';\r\n\r\n@Component({\r\n  selector: 'app-site-languages-status',\r\n  templateUrl: './site-languages-status.component.html',\r\n  styleUrls: ['./site-languages-status.component.scss'],\r\n})\r\nexport class SiteLanguagesStatusComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n  private params: SiteLanguagesStatusParams;\r\n\r\n  agInit(params: SiteLanguagesStatusParams) {\r\n    this.params = params;\r\n    this.value = this.params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  toggleLanguage() {\r\n    const language: SiteLanguage = this.params.data;\r\n    this.params.onEnabledToggle(language);\r\n  }\r\n}\r\n","<mat-slide-toggle [checked]=\"value\" (change)=\"toggleLanguage()\"></mat-slide-toggle>\r\n","import { AllCommunityModules, CellClickedEvent, GridOptions } from '@ag-grid-community/all-modules';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { SiteLanguagesStatusComponent } from '../ag-grid-components/site-languages-status/site-languages-status.component';\r\nimport { SiteLanguagesStatusParams } from '../ag-grid-components/site-languages-status/site-languages-status.models';\r\nimport { SiteLanguage } from '../models/site-language.model';\r\nimport { ZoneService } from '../services/zone.service';\r\n\r\n@Component({\r\n  selector: 'app-site-languages',\r\n  templateUrl: './site-languages.component.html',\r\n  styleUrls: ['./site-languages.component.scss'],\r\n})\r\nexport class SiteLanguagesComponent implements OnInit, OnDestroy {\r\n  languages$ = new BehaviorSubject<SiteLanguage[]>(null);\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      idFieldComponent: IdFieldComponent,\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      siteLanguagesStatusComponent: SiteLanguagesStatusComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'Code', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter',\r\n        cellRendererParams: {\r\n          tooltipGetter: (language: SiteLanguage) => `ID: ${language.Code}`,\r\n        } as IdFieldParams,\r\n      },\r\n      {\r\n        headerName: 'Name', field: 'Culture', flex: 2, minWidth: 250, cellClass: 'primary-action highlight no-outline', sortable: true,\r\n        sort: 'asc', filter: 'agTextColumnFilter', onCellClicked: this.handleNameClicked.bind(this),\r\n      },\r\n      {\r\n        headerName: 'Status', field: 'IsEnabled', width: 72, headerClass: 'dense', cellClass: 'no-padding no-outline',\r\n        cellRenderer: 'siteLanguagesStatusComponent', sortable: true, filter: 'booleanFilterComponent',\r\n        cellRendererParams: {\r\n          onEnabledToggle: this.toggleLanguage.bind(this),\r\n        } as SiteLanguagesStatusParams,\r\n      },\r\n    ],\r\n  };\r\n\r\n  constructor(private zoneService: ZoneService) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchLanguages();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.languages$.complete();\r\n  }\r\n\r\n  private handleNameClicked(params: CellClickedEvent) {\r\n    const language: SiteLanguage = params.data;\r\n    this.toggleLanguage(language);\r\n  }\r\n\r\n  private toggleLanguage(language: SiteLanguage) {\r\n    this.zoneService.toggleLanguage(language.Code, !language.IsEnabled).subscribe(() => {\r\n      this.fetchLanguages();\r\n    });\r\n  }\r\n\r\n  private fetchLanguages() {\r\n    this.zoneService.getLanguages().subscribe(languages => {\r\n      this.languages$.next(languages);\r\n    });\r\n  }\r\n}\r\n","<div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"languages$ | async\" [modules]=\"modules\"\r\n    [gridOptions]=\"gridOptions\">\r\n  </ag-grid-angular>\r\n\r\n  <div class=\"grid-more-actions-box\"></div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { AppDialogConfigService } from '../../app-administration/services';\r\nimport { DialogContextSiteApp } from '../../shared/models/dialog-context.models';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-system-settings',\r\n  templateUrl: './system-settings.component.html',\r\n  styleUrls: ['./system-settings.component.scss'],\r\n})\r\nexport class SystemSettingsComponent {\r\n  private sitePrimaryApp: DialogContextSiteApp;\r\n  private globalPrimaryApp: DialogContextSiteApp;\r\n\r\n  constructor(private dialogService: DialogService, private appDialogConfigService: AppDialogConfigService) { }\r\n\r\n  openSiteSettings(): void {\r\n    if (this.sitePrimaryApp == null) {\r\n      this.getDialogSettings(() => { this.openSiteSettings(); });\r\n      return;\r\n    }\r\n\r\n    this.dialogService.openAppAdministration(this.sitePrimaryApp.ZoneId, this.sitePrimaryApp.AppId, 'app');\r\n  }\r\n\r\n  openGlobalSettings(): void {\r\n    if (this.globalPrimaryApp == null) {\r\n      this.getDialogSettings(() => { this.openGlobalSettings(); });\r\n      return;\r\n    }\r\n\r\n    this.dialogService.openAppAdministration(this.globalPrimaryApp.ZoneId, this.globalPrimaryApp.AppId, 'app');\r\n  }\r\n\r\n  private getDialogSettings(callback: () => void): void {\r\n    this.appDialogConfigService.getDialogSettings(0).subscribe(dialogSettings => {\r\n      this.sitePrimaryApp = dialogSettings.Context.Site.PrimaryApp;\r\n      this.globalPrimaryApp = dialogSettings.Context.System.PrimaryApp;\r\n      callback();\r\n    });\r\n  }\r\n}\r\n","<div class=\"cards-box\">\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Manage Site Settings</mat-card-title>\r\n      <div class=\"mat-card-header-icon\">\r\n        <mat-icon>settings</mat-icon>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      This includes both pre-defined SystemSettings as well as custom Settings. It will affect the entire Site / Portal.\r\n      See <a href=\"http://r.2sxc.org/settings\" target=\"_blank\">docs</a>.\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-button (click)=\"openSiteSettings()\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        <span>Open Site Settings</span>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Manage Global Settings</mat-card-title>\r\n      <div class=\"mat-card-header-icon\">\r\n        <mat-icon>settings_suggest</mat-icon>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      This includes both pre-defined SystemSettings as well as custom Settings. It will affect the entire Installation.\r\n      See <a href=\"http://r.2sxc.org/settings\" target=\"_blank\">docs</a>.\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-button (click)=\"openGlobalSettings()\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        <span>Open Global Settings</span>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../models/feature.model';\r\n\r\n@Component({\r\n  selector: 'app-features-list-name',\r\n  templateUrl: './features-list-name.component.html',\r\n  styleUrls: ['./features-list-name.component.scss'],\r\n})\r\nexport class FeaturesListNameComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n  feature: Feature;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.feature = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div [tippy]=\"feature.Description\">{{ value }}</div>\r\n","import { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n@Directive({ selector: '[appAgGridHeight]' })\r\nexport class AgGridHeightDirective implements OnChanges {\r\n  @Input() itemsCount = 0;\r\n  @Input() headerHeight = 32;\r\n  @Input() rowHeight = 48;\r\n  @Input() maxRows = 100;\r\n\r\n  /** Fixes a bug where scrollbar appears when then is no overflow */\r\n  private extraHeight = 2;\r\n\r\n  private element: HTMLElement;\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.itemsCount != null) {\r\n      const rows = this.itemsCount === 0 ? 2 : this.itemsCount > this.maxRows ? this.maxRows : this.itemsCount;\r\n      this.element.style.height = `${this.headerHeight + rows * this.rowHeight + this.extraHeight}px`;\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { License } from '../models/license.model';\r\n\r\n@Pipe({ name: 'licensesOrder' })\r\nexport class LicensesOrderPipe implements PipeTransform {\r\n\r\n  transform(licenses: License[]): any {\r\n    if (!Array.isArray(licenses)) { return licenses; }\r\n\r\n    const sorted = [...licenses].sort((a: License, b: License) => {\r\n      if (a.Priority < b.Priority) {\r\n        return -1;\r\n      } else if (a.Priority > b.Priority) {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    return sorted;\r\n  }\r\n}\r\n","<mat-accordion multi *ngIf=\"licenses$ | async as licenses\">\r\n  <mat-expansion-panel #panel *ngFor=\"let license of licenses | licensesOrder; trackBy: trackLicenses\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        <div class=\"panel-title\">{{ license.Name }} ({{ license.IsEnabled ? 'active' : 'inactive' }})</div>\r\n        <div class=\"panel-description\">{{ license.Description }}</div>\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n\r\n    <ng-container *ngIf=\"panel.expanded\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"license.Features\" [modules]=\"modules\"\r\n        [gridOptions]=\"gridOptions\" appAgGridHeight [itemsCount]=\"license.Features?.length\">\r\n      </ag-grid-angular>\r\n    </ng-container>\r\n  </mat-expansion-panel>\r\n</mat-accordion>\r\n","import { AllCommunityModules, GridOptions } from '@ag-grid-community/all-modules';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { FeaturesListNameComponent } from '../ag-grid-components/features-list-name/features-list-name.component';\r\nimport { Feature } from '../models/feature.model';\r\nimport { License } from '../models/license.model';\r\nimport { FeaturesConfigService } from '../services/features-config.service';\r\n\r\n@Component({\r\n  selector: 'app-license-info',\r\n  templateUrl: './license-info.component.html',\r\n  styleUrls: ['./license-info.component.scss'],\r\n})\r\nexport class LicenseInfoComponent implements OnInit, OnDestroy {\r\n  licenses$ = new BehaviorSubject<License[]>(undefined);\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      idFieldComponent: IdFieldComponent,\r\n      featuresListNameComponent: FeaturesListNameComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        field: 'ID', width: 200, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter',\r\n        valueGetter: (params) => (params.data as Feature).NameId,\r\n        cellRendererParams: {\r\n          tooltipGetter: (feature: Feature) => `NameId: ${feature.NameId}\\nGUID: ${feature.Guid}`,\r\n        } as IdFieldParams,\r\n      },\r\n      {\r\n        field: 'Name', flex: 3, minWidth: 250, cellClass: 'primary-action highlight', sortable: true,\r\n        filter: 'agTextColumnFilter', cellRenderer: 'featuresListNameComponent',\r\n        onCellClicked: (params) => this.openFeature(params.data),\r\n        valueGetter: (params) => (params.data as Feature).Name,\r\n      },\r\n    ],\r\n  };\r\n\r\n  constructor(private featuresConfigService: FeaturesConfigService) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchLicenses();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.licenses$.complete();\r\n  }\r\n\r\n  trackLicenses(index: number, license: License): string {\r\n    return license.Guid;\r\n  }\r\n\r\n  private fetchLicenses() {\r\n    this.featuresConfigService.getLicenses().subscribe({\r\n      error: () => {\r\n        this.licenses$.next(undefined);\r\n      },\r\n      next: (licenses) => {\r\n        this.licenses$.next(licenses);\r\n      },\r\n    });\r\n  }\r\n\r\n  private openFeature(feature: Feature) {\r\n    window.open(`https://2sxc.org/r/f/${feature.Guid}`, '_blank');\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../models/feature.model';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled-reason',\r\n  templateUrl: './features-list-enabled-reason.component.html',\r\n  styleUrls: ['./features-list-enabled-reason.component.scss'],\r\n})\r\nexport class FeaturesListEnabledReasonComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n  feature: Feature;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.feature = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div [tippy]=\"feature.EnabledReasonDetailed\">{{ value }}</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled',\r\n  templateUrl: './features-list-enabled.component.html',\r\n  styleUrls: ['./features-list-enabled.component.scss'],\r\n})\r\nexport class FeaturesListEnabledComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon>{{ value ? 'check_box' : 'check_box_outline_blank' }}</mat-icon>\r\n</div>\r\n","<div class=\"icon-container\">\r\n  <mat-icon *ngIf=\"value\">person</mat-icon>\r\n  <mat-icon *ngIf=\"!value\">remove</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-features-list-public',\r\n  templateUrl: './features-list-public.component.html',\r\n  styleUrls: ['./features-list-public.component.scss'],\r\n})\r\nexport class FeaturesListPublicComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../models/feature.model';\r\n\r\n@Component({\r\n  selector: 'app-features-list-security',\r\n  templateUrl: './features-list-security.component.html',\r\n  styleUrls: ['./features-list-security.component.scss'],\r\n})\r\nexport class FeaturesListSecurityComponent implements ICellRendererAngularComp {\r\n  value: number;\r\n  feature: Feature;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.feature = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div [tippy]=\"feature.Security.Message\">{{ value }}</div>\r\n","<div class=\"icon-container\">\r\n  <mat-icon *ngIf=\"value\">visibility</mat-icon>\r\n  <mat-icon *ngIf=\"!value\">remove</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-features-list-ui',\r\n  templateUrl: './features-list-ui.component.html',\r\n  styleUrls: ['./features-list-ui.component.scss'],\r\n})\r\nexport class FeaturesListUiComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../models/feature.model';\r\nimport { FeaturesStatusParams } from './features-status.models';\r\n\r\n@Component({\r\n  selector: 'app-features-status',\r\n  templateUrl: './features-status.component.html',\r\n  styleUrls: ['./features-status.component.scss'],\r\n})\r\nexport class FeaturesStatusComponent implements ICellRendererAngularComp {\r\n  value: boolean | null;\r\n  private params: FeaturesStatusParams;\r\n\r\n  agInit(params: FeaturesStatusParams) {\r\n    this.params = params;\r\n    this.value = this.params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  toggle() {\r\n    const feature: Feature = this.params.data;\r\n    let nextValue: boolean;\r\n    switch (this.value) {\r\n      case false:\r\n        nextValue = null;\r\n        break;\r\n      case null:\r\n        nextValue = true;\r\n        break;\r\n      case true:\r\n        nextValue = false;\r\n        break;\r\n    }\r\n    this.params.onEnabledToggle(feature, nextValue);\r\n  }\r\n}\r\n","<mat-slide-toggle [checked]=\"value\" (change)=\"toggle()\" [ngClass]=\"{\r\n  'toggle-false': value === false,\r\n  'toggle-null': value === null\r\n  }\">\r\n</mat-slide-toggle>\r\n","<div class=\"nav-component-wrapper\" *ngIf=\"{\r\n  features: features$ | async,\r\n  changed: changed$ | async\r\n} as data\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Manage features</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"grid-wrapper\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"data.features\" [modules]=\"modules\"\r\n      [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n\r\n    <div class=\"grid-more-actions-box\"></div>\r\n\r\n    <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Save\" [disabled]=\"!data.changed\" (click)=\"save()\">\r\n      <mat-icon>done</mat-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { AllCommunityModules, GridOptions } from '@ag-grid-community/all-modules';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { GeneralHelpers } from '../../../../../edit/shared/helpers';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { FeaturesListNameComponent } from '../ag-grid-components/features-list-name/features-list-name.component';\r\nimport { Feature } from '../models/feature.model';\r\nimport { FeaturesConfigService } from '../services/features-config.service';\r\nimport { FeaturesStatusComponent } from './features-status/features-status.component';\r\nimport { FeaturesStatusParams } from './features-status/features-status.models';\r\nimport { FeatureState } from './manage-features-wip.models';\r\n\r\n@Component({\r\n  selector: 'app-manage-features-wip',\r\n  templateUrl: './manage-features-wip.component.html',\r\n  styleUrls: ['./manage-features-wip.component.scss'],\r\n})\r\nexport class ManageFeaturesWipComponent implements OnInit, OnDestroy {\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      idFieldComponent: IdFieldComponent,\r\n      featuresListNameComponent: FeaturesListNameComponent,\r\n      featuresStatusComponent: FeaturesStatusComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        field: 'ID', width: 200, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter',\r\n        valueGetter: (params) => (params.data as Feature).NameId,\r\n        cellRendererParams: {\r\n          tooltipGetter: (feature: Feature) => `NameId: ${feature.NameId}\\nGUID: ${feature.Guid}`,\r\n        } as IdFieldParams,\r\n      },\r\n      {\r\n        field: 'Name', flex: 3, minWidth: 250, cellClass: 'primary-action highlight', sortable: true,\r\n        filter: 'agTextColumnFilter', cellRenderer: 'featuresListNameComponent',\r\n        onCellClicked: (params) => this.openFeature(params.data),\r\n        valueGetter: (params) => (params.data as Feature).Name,\r\n      },\r\n      {\r\n        field: 'License', flex: 1, minWidth: 150, cellClass: 'no-outline', sortable: true, filter: 'agTextColumnFilter',\r\n        valueGetter: (params) => (params.data as Feature).License,\r\n      },\r\n      {\r\n        field: 'Status', width: 72, headerClass: 'dense', cellClass: 'no-padding no-outline',\r\n        cellRenderer: 'featuresStatusComponent', sortable: true, filter: 'booleanFilterComponent',\r\n        valueGetter: (params) => (params.data as Feature).Enabled,\r\n        cellRendererParams: {\r\n          onEnabledToggle: (feature, enabled) => this.toggle(feature, enabled),\r\n        } as FeaturesStatusParams,\r\n      },\r\n    ],\r\n  };\r\n\r\n  features$ = new BehaviorSubject<Feature[]>(undefined);\r\n  changed$: Observable<boolean>;\r\n  private originalFeatures$ = new BehaviorSubject<Feature[]>(undefined);\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<ManageFeaturesWipComponent>,\r\n    private featuresConfigService: FeaturesConfigService,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchFeatures();\r\n    this.changed$ = combineLatest([this.features$, this.originalFeatures$]).pipe(\r\n      map(([changedFeatures, originalFeatures]) => {\r\n        if (changedFeatures == null || originalFeatures == null) { return false; }\r\n        const changed = changedFeatures.some(f => !GeneralHelpers.objectsEqual(f, originalFeatures.find(o => o.Guid === f.Guid)));\r\n        return changed;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.features$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  save() {\r\n    this.snackBar.open('Saving...');\r\n    const featuresStates = this.features$.value.map(feature => {\r\n      const state: FeatureState = { FeatureGuid: feature.Guid, Enabled: feature.Enabled };\r\n      return state;\r\n    });\r\n    this.featuresConfigService.saveFeaturesNew(featuresStates).subscribe({\r\n      error: () => {\r\n        this.snackBar.open('Failed to save features. Please check console for more information', undefined, { duration: 3000 });\r\n      },\r\n      next: () => {\r\n        this.snackBar.open('Saved', undefined, { duration: 3000 });\r\n        this.closeDialog();\r\n      }\r\n    });\r\n  }\r\n\r\n  private openFeature(feature: Feature) {\r\n    window.open(`https://2sxc.org/r/f/${feature.Guid}`, '_blank');\r\n  }\r\n\r\n  private fetchFeatures() {\r\n    this.featuresConfigService.getAll().subscribe(features => {\r\n      this.originalFeatures$.next(features);\r\n      this.features$.next(features);\r\n    });\r\n  }\r\n\r\n  private toggle(feature: Feature, enabled: boolean) {\r\n    const newFeatures = [...this.features$.value];\r\n    const updateIndex = newFeatures.findIndex(f => f.Guid === feature.Guid);\r\n    if (updateIndex < 0) { return; }\r\n    newFeatures[updateIndex] = {\r\n      ...newFeatures[updateIndex],\r\n      Enabled: enabled,\r\n    };\r\n    this.features$.next(newFeatures);\r\n  }\r\n}\r\n","<ng-container *ngIf=\"templateVars$ | async as data\">\r\n\r\n  <div class=\"grid-wrapper mat-tab-grid-wrapper\" [ngClass]=\"{ 'iframe-wrapper': data.showManagement }\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [ngClass]=\"{ 'force-hide': data.showManagement }\"\r\n      [rowData]=\"data.features\" [modules]=\"modules\" [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n\r\n    <mat-spinner class=\"spinner\" *ngIf=\"data.showSpinner\" mode=\"indeterminate\" diameter=\"20\" color=\"accent\">\r\n    </mat-spinner>\r\n\r\n    <iframe class=\"iframe\" *ngIf=\"data.showManagement\" [src]=\"data.managementUrl | safeResourceUrl\"></iframe>\r\n\r\n    <div class=\"grid-more-actions-box\">\r\n      <button mat-button *ngIf=\"debugEnabled$ | async\" color=\"accent\" (click)=\"wip()\">\r\n        <mat-icon>bug_report</mat-icon>\r\n        WIP\r\n      </button>\r\n    </div>\r\n\r\n    <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Manage features\" *ngIf=\"!data.showManagement\"\r\n      (click)=\"toggleManagement()\">\r\n      <mat-icon>tune</mat-icon>\r\n    </button>\r\n  </div>\r\n</ng-container>\r\n","import { AllCommunityModules, GridOptions } from '@ag-grid-community/all-modules';\r\nimport { Component, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { BehaviorSubject, combineLatest, fromEvent, Subscription } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { GlobalConfigService } from '../../../../../edit/shared/store/ngrx-data';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { FeaturesListEnabledReasonComponent } from '../ag-grid-components/features-list-enabled-reason/features-list-enabled-reason.component';\r\nimport { FeaturesListEnabledComponent } from '../ag-grid-components/features-list-enabled/features-list-enabled.component';\r\nimport { FeaturesListNameComponent } from '../ag-grid-components/features-list-name/features-list-name.component';\r\nimport { FeaturesListPublicComponent } from '../ag-grid-components/features-list-public/features-list-public.component';\r\nimport { FeaturesListSecurityComponent } from '../ag-grid-components/features-list-security/features-list-security.component';\r\nimport { FeaturesListUiComponent } from '../ag-grid-components/features-list-ui/features-list-ui.component';\r\nimport { ManageFeaturesWipComponent } from '../manage-features-wip/manage-features-wip.component';\r\nimport { Feature } from '../models/feature.model';\r\nimport { ManageFeaturesMessageData } from '../models/manage-features-message-data.model';\r\nimport { FeaturesConfigService } from '../services/features-config.service';\r\n\r\n@Component({\r\n  selector: 'app-manage-features',\r\n  templateUrl: './manage-features.component.html',\r\n  styleUrls: ['./manage-features.component.scss'],\r\n})\r\nexport class ManageFeaturesComponent implements OnInit, OnDestroy {\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      idFieldComponent: IdFieldComponent,\r\n      featuresListEnabledComponent: FeaturesListEnabledComponent,\r\n      featuresListUiComponent: FeaturesListUiComponent,\r\n      featuresListPublicComponent: FeaturesListPublicComponent,\r\n      featuresListNameComponent: FeaturesListNameComponent,\r\n      featuresListEnabledReasonComponent: FeaturesListEnabledReasonComponent,\r\n      featuresListSecurityComponent: FeaturesListSecurityComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        field: 'ID', width: 200, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter',\r\n        valueGetter: (params) => (params.data as Feature).NameId,\r\n        cellRendererParams: {\r\n          tooltipGetter: (feature: Feature) => `NameId: ${feature.NameId}\\nGUID: ${feature.Guid}`,\r\n        } as IdFieldParams,\r\n      },\r\n      {\r\n        field: 'Enabled', width: 80, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'booleanFilterComponent', cellRenderer: 'featuresListEnabledComponent',\r\n        valueGetter: (params) => (params.data as Feature).Enabled,\r\n      },\r\n      {\r\n        field: 'UI', width: 70, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'booleanFilterComponent', cellRenderer: 'featuresListUiComponent',\r\n        valueGetter: (params) => (params.data as Feature).Ui,\r\n      },\r\n      {\r\n        field: 'Public', width: 70, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'booleanFilterComponent', cellRenderer: 'featuresListPublicComponent',\r\n        valueGetter: (params) => (params.data as Feature).Public,\r\n      },\r\n      {\r\n        field: 'Name', flex: 3, minWidth: 250, cellClass: 'primary-action highlight', sortable: true,\r\n        filter: 'agTextColumnFilter', cellRenderer: 'featuresListNameComponent',\r\n        onCellClicked: (params) => this.openFeature(params.data),\r\n        valueGetter: (params) => (params.data as Feature).Name,\r\n      },\r\n      {\r\n        field: 'EnabledReason', headerName: 'Reason', flex: 1, minWidth: 150, cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter', cellRenderer: 'featuresListEnabledReasonComponent',\r\n        valueGetter: (params) => (params.data as Feature).EnabledReason,\r\n      },\r\n      {\r\n        field: 'Expires', flex: 1, minWidth: 200, cellClass: 'no-outline',\r\n        sortable: true, filter: 'agTextColumnFilter',\r\n        valueGetter: (params) => (params.data as Feature).Expires?.replace('T', ' ').replace('Z', ''),\r\n      },\r\n      {\r\n        field: 'Security', width: 80, cellClass: 'no-outline', cellRenderer: 'featuresListSecurityComponent',\r\n        sortable: true, filter: 'agNumberColumnFilter',\r\n        valueGetter: (params) => (params.data as Feature).Security.Impact,\r\n      },\r\n      {\r\n        field: 'License', flex: 1, minWidth: 150, cellClass: 'no-outline', sortable: true, filter: 'agTextColumnFilter',\r\n        valueGetter: (params) => (params.data as Feature).License,\r\n      },\r\n    ],\r\n  };\r\n\r\n  debugEnabled$ = this.globalConfigService.getDebugEnabled$();\r\n\r\n  private features$ = new BehaviorSubject<Feature[]>(null);\r\n  private showManagement$ = new BehaviorSubject(false);\r\n  private showSpinner$ = new BehaviorSubject(false);\r\n  private managementUrl$ = new BehaviorSubject<string>(null);\r\n  templateVars$ = combineLatest([this.features$, this.showManagement$, this.showSpinner$, this.managementUrl$]).pipe(\r\n    map(([features, showManagement, showSpinner, managementUrl]) => ({ features, showManagement, showSpinner, managementUrl })),\r\n  );\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private featuresConfigService: FeaturesConfigService,\r\n    private globalConfigService: GlobalConfigService,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchFeatures();\r\n    this.subscribeToMessages();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.features$.complete();\r\n    this.showManagement$.complete();\r\n    this.showSpinner$.complete();\r\n    this.managementUrl$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  toggleManagement() {\r\n    this.showManagement$.next(!this.showManagement$.value);\r\n    if (!this.showManagement$.value) { return; }\r\n\r\n    this.showSpinner$.next(true);\r\n    this.managementUrl$.next(null); // reset url\r\n    this.featuresConfigService.getManageFeaturesUrl().subscribe(url => {\r\n      this.showSpinner$.next(false);\r\n      if (url.includes('error: user needs host permissions')) {\r\n        this.showManagement$.next(false);\r\n        throw new Error('User needs host permissions!');\r\n      }\r\n      this.managementUrl$.next(url);\r\n    });\r\n  }\r\n\r\n  private openFeature(feature: Feature) {\r\n    window.open(`https://2sxc.org/r/f/${feature.Guid}`, '_blank');\r\n  }\r\n\r\n  private fetchFeatures() {\r\n    this.featuresConfigService.getAll().subscribe(features => {\r\n      this.features$.next(features);\r\n    });\r\n  }\r\n\r\n  /** Waits for a json message from the iframe and sends it to the server */\r\n  private subscribeToMessages() {\r\n    this.subscription.add(\r\n      fromEvent<MessageEvent>(window, 'message').pipe(\r\n        filter(() => this.showManagement$.value),\r\n        filter(event => event.origin.endsWith('2sxc.org') === true),\r\n        filter(event => event.data != null),\r\n      ).subscribe(event => {\r\n        const features: ManageFeaturesMessageData = event.data;\r\n        const featuresString = JSON.stringify(features);\r\n        this.featuresConfigService.saveFeatures(featuresString).subscribe(res => {\r\n          this.showManagement$.next(false);\r\n          this.fetchFeatures();\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  wip(): void {\r\n    const wipRef = this.dialog.open(ManageFeaturesWipComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      panelClass: [\r\n        'dialog-panel',\r\n        `dialog-panel-large`,\r\n        'no-scrollbar',\r\n      ],\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    wipRef.afterClosed().subscribe(() => {\r\n      this.fetchFeatures();\r\n    });\r\n  }\r\n}\r\n","<div class=\"cards-box\">\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>2sxc Insights for Super Users</mat-card-title>\r\n      <div class=\"mat-card-header-icon\">\r\n        <mat-icon>speed</mat-icon>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      This is to access a special section to see what is really in the server memory. It's intended for extensive\r\n      debugging\r\n      - see also <a href=\"https://2sxc.org/en/blog/post/using-2sxc-insights\" target=\"_blank\">this blog post</a>.\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-button (click)=\"openInsights()\">\r\n        <mat-icon>speed</mat-icon>\r\n        <span>Open 2sxc Insights</span>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Activate Page Level Logging</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <form #activateLogForm=\"ngForm\" class=\"activate-log-form\" (ngSubmit)=\"activatePageLog(activateLogForm)\">\r\n        <div>\r\n          This will place insights-logs in the HTML of the user output for users with ?debug=true in the url. It can\r\n          only be activated for short periods of time.\r\n        </div>\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Duration in Minutes</mat-label>\r\n          <input matInput type=\"number\" min=\"0\" required [pattern]=\"positiveWholeNumber\" [(ngModel)]=\"pageLogDuration\"\r\n            name=\"Duration\" #duration=\"ngModel\" [disabled]=\"loading$ | async\">\r\n        </mat-form-field>\r\n        <ng-container *ngIf=\"duration.touched && duration.errors\">\r\n          <app-field-hint *ngIf=\"duration.errors.pattern\" [isError]=\"true\">\r\n            Only positive whole numbers\r\n          </app-field-hint>\r\n        </ng-container>\r\n        <div class=\"form-actions\">\r\n          <button mat-raised-button type=\"submit\" color=\"accent\"\r\n            [disabled]=\"!activateLogForm.valid || (loading$ | async)\">\r\n            Activate\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { SxcInsightsService } from '../services/sxc-insights.service';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-sxc-insights',\r\n  templateUrl: './sxc-insights.component.html',\r\n  styleUrls: ['./sxc-insights.component.scss'],\r\n})\r\nexport class SxcInsightsComponent implements OnInit, OnDestroy {\r\n  pageLogDuration: number;\r\n  positiveWholeNumber = /^[1-9][0-9]*$/;\r\n  loading$ = new BehaviorSubject(false);\r\n\r\n  constructor(private sxcInsightsService: SxcInsightsService, private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.loading$.complete();\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/help'), '_blank');\r\n  }\r\n\r\n  activatePageLog(form: NgForm) {\r\n    this.loading$.next(true);\r\n    this.snackBar.open('Activating...');\r\n    this.sxcInsightsService.activatePageLog(this.pageLogDuration).subscribe(res => {\r\n      this.loading$.next(false);\r\n      this.snackBar.open(res, null, { duration: 4000 });\r\n    });\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n    form.resetForm();\r\n  }\r\n}\r\n","<div class=\"nav-component-wrapper\" appToggleDebug>\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Manage Apps in Zone {{ zoneId }}</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <!-- spm NOTE: we use mat-tab-group because mat-tab-nav-bar doesn't have animations and doesn't look pretty -->\r\n  <mat-tab-group class=\"mat-tab-group-max-height\" dynamicHeight color=\"accent\" (selectedTabChange)=\"changeTab($event)\"\r\n    [selectedIndex]=\"tabIndex$ | async\">\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"System Info\">\r\n        <mat-icon>settings_suggest</mat-icon>\r\n        <span>System</span>\r\n      </div>\r\n      <app-system-info *matTabContent></app-system-info>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Apps\">\r\n        <mat-icon>star_border</mat-icon>\r\n        <span>Apps</span>\r\n      </div>\r\n      <app-apps-list *matTabContent></app-apps-list>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Languages\">\r\n        <mat-icon>translate</mat-icon>\r\n        <span>Languages</span>\r\n      </div>\r\n      <app-site-languages *matTabContent></app-site-languages>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"System Settings\">\r\n        <mat-icon>settings</mat-icon>\r\n        <span>Settings</span>\r\n      </div>\r\n      <app-system-settings *matTabContent></app-system-settings>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"License Info\">\r\n        <mat-icon>copyright</mat-icon>\r\n        <span>License</span>\r\n      </div>\r\n      <app-license-info *matTabContent></app-license-info>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Features\">\r\n        <mat-icon>tune</mat-icon>\r\n        <span>Features</span>\r\n      </div>\r\n      <app-manage-features *matTabContent></app-manage-features>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"2sxc Insights\">\r\n        <mat-icon>speed</mat-icon>\r\n        <span>2sxc Insights</span>\r\n      </div>\r\n      <app-sxc-insights *matTabContent></app-sxc-insights>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, startWith } from 'rxjs/operators';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Component({\r\n  selector: 'app-apps-management-nav',\r\n  templateUrl: './apps-management-nav.component.html',\r\n  styleUrls: ['./apps-management-nav.component.scss'],\r\n})\r\nexport class AppsManagementNavComponent implements OnInit {\r\n  zoneId = this.context.zoneId;\r\n\r\n  private tabs = ['system', 'list', 'languages', 'settings', 'license', 'features', 'sxc-insights']; // tabs order has to match template\r\n  tabIndex$ = this.router.events.pipe(\r\n    filter(event => event instanceof NavigationEnd),\r\n    map(() => this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path)),\r\n    filter(tabIndex => tabIndex >= 0),\r\n    startWith(this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path)),\r\n  );\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AppsManagementNavComponent>,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeTab(event: MatTabChangeEvent) {\r\n    const path = this.tabs[event.index];\r\n    this.router.navigate([path], { relativeTo: this.route });\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\" [ngSwitch]=\"isError\">\r\n  <mat-hint *ngSwitchCase=\"false\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-hint>\r\n\r\n  <mat-error *ngSwitchCase=\"true\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-error>\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: IdFieldParams) {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy() {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { GlobalConfigService } from '../../../../../edit/shared/store/ngrx-data';\r\n\r\n@Directive({ selector: '[appToggleDebug]' })\r\nexport class ToggleDebugDirective {\r\n\r\n  constructor(private globalConfigService: GlobalConfigService) { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    const CTRL_SHIFT_ALT_CLICK = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.shiftKey && event.altKey;\r\n    if (CTRL_SHIFT_ALT_CLICK) {\r\n      this.globalConfigService.toggleDebugEnabled();\r\n      window.getSelection().removeAllRanges();\r\n    }\r\n  }\r\n}\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"projects_ng-dialogs_src_app_apps-management_apps-management-nav_apps-management-nav_component_ts.7ae9d1c82b586d79.js"}