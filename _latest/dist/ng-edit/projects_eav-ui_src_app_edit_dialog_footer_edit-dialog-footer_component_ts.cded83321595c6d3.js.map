{"version":3,"file":"projects_eav-ui_src_app_edit_dialog_footer_edit-dialog-footer_component_ts.cded83321595c6d3.js","mappings":"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","names":["EntitiesService","constructor","http","context","dnnContext","this","create","contentType","entity","post","params","appId","zoneId","update","entityId","delete","type","id","tryForce","$2sxc","apiUrl","webApiEntityRoot","toString","force","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_2__","jDH","factory","ɵfac","DebugTypes","Data","Formulas","Logs","log_r2","_r1","$implicit","ctx_r2","logToConsole","_c0","severity","LogSeverities","Error","Warn","time","label","LogsDumpComponent_Conditional_0_Conditional_1_Template","LogsDumpComponent_Conditional_0_For_3_Template","vm_r4","logs","length","LogsDumpComponent","loggingService","ngOnInit","logs$","getLogs$","viewModel$","combineLatest","pipe","map","log","Log","console","error","warn","core","VBU","selectors","standalone","features","decls","vars","consts","template","rf","ctx","LogsDumpComponent_Conditional_0_Template","tmp_0_0","NgClass","ExtendedModule","AsyncPipe","DatePipe","styles","SelectTargets","Entity","Field","Target","SnippetLabelSizePipe","maxLength","transform","substring","EJ8","pure","entityOption_r3","entityGuid","_c2","hasFormula","fieldOption_r4","fieldName","targetOption_r6","target","$event","_r5","ctx_r1","selectedChanged","FormulaDesignerComponent_Conditional_0_Conditional_16_For_2_Template","state","targetOptions","_r7","snippet_r9","_r8","copyToClipboard","code","snippet_r11","_r10","result","value","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_0_Conditional_0_Template","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_0_Conditional_1_Template","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_0_Conditional_2_Template","undefined","isOnlyPromise","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_0_Template","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_1_Template","isError","_r12","save","editMode","tmp_3_0","currentFormula","source","tmp_4_0","saving","FormulaDesignerComponent_Conditional_0_For_6_Template","trackEntityOptions","FormulaDesignerComponent_Conditional_0_For_12_Template","trackFieldOptions","FormulaDesignerComponent_Conditional_0_Conditional_16_Template","FormulaDesignerComponent_Conditional_0_Conditional_17_Template","toggleFreeText","formulaChanged","onFocused","onBlurred","FormulaDesignerComponent_Conditional_0_For_32_Template","trackSnippets","FormulaDesignerComponent_Conditional_0_Conditional_33_Template","FormulaDesignerComponent_Conditional_0_For_35_Template","FormulaDesignerComponent_Conditional_0_Conditional_40_Template","toggleEdit","deleteFormula","reset","FormulaDesignerComponent_Conditional_0_Conditional_60_Template","run","entityOptions","fieldsOptions","freeTextTarget","focused","filename","tmp_12_0","v2JsTypings","monacoOptions","_c1","v1DataSnippets","tmp_17_0","v1ContextSnippets","isDeleted","menu_r13","tmp_21_0","sourceId","allowSaveFormula","tmp_23_0","FormulaDesignerComponent","#designerSvc","snackBar","formConfig","itemService","contentTypeService","translate","loadError","config","enableFormulaSave","signal","minimap","enabled","lineHeight","lineNumbers","lineDecorationsWidth","folding","scrollBeyondLastLine","tabSize","fixedOverflowWidgets","formId","entitiesService","transient","inject","FormulaDesignerService","designerState","formulaResult","currentTargetOptions","computed","Object","values","FormulaListItemTargets","includes","listItemFormulaNow","defaultFormulaNow","EavLogger","keys","itemSettingsServices","setDesignerOpen","initAfterItemSettingsAreReady","ngOnDestroy","index","entityOption","fieldOption","snippet","newState","selectedSettingsSvc","getFieldsProps","set","formula","designer","cache","updateFormulaFromEditor","text","open","duration","oldState","resetFormula","retriggerFormulas","item","getItem","contentTypeId","ItemHelper","getContentTypeNameId","atAllFieldSettings","getContentType","Attributes","find","a","Name","Metadata","m","Type","Id","eavConstants","contentTypes","formulas","Title","Formula","Enabled","ParentRelationship","Add","EntityId","Index","Parent","Guid","subscribe","savedFormula","updateSaved","sourceGuid","confirm","instant","title","next","_","i4","FormulaDesignerComponent_Conditional_0_Template","MatFormFieldModule","i5","MatSelectModule","i6","i7","FormsModule","i8","MatOptionModule","i9","MatInputModule","i10","MatButtonModule","i11","MatIconModule","i12","MonacoEditorComponent","MatMenuModule","i13","JsonPipe","TippyDirective","items","DataDumpComponent","items$","getItems$","itemGuids","DataDumpComponent_Conditional_0_Template","EditDialogFooterComponent_Conditional_20_Conditional_1_Template","EditDialogFooterComponent_Conditional_20_Conditional_2_Template","EditDialogFooterComponent_Conditional_20_Conditional_3_Template","ctx_r0","activeDebug","EditDialogFooterComponent","debugInfoOpened","EventEmitter","sxcVer","window","sxcVersion","lastIndexOf","toggleDialog","emit","outputs","EditDialogFooterComponent_Conditional_20_Template","MatCardModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/content-items/services/entities.service.ts","./projects/eav-ui/src/app/edit/dialog/footer/edit-dialog-footer.models.ts","./projects/eav-ui/src/app/edit/dialog/footer/logs-dump/logs-dump.component.html","./projects/eav-ui/src/app/edit/dialog/footer/logs-dump/logs-dump.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/formula-designer/formula-designer.models.ts","./projects/eav-ui/src/app/edit/dialog/footer/formula-designer/snippet-label-size.pipe.ts","./projects/eav-ui/src/app/edit/dialog/footer/formula-designer/formula-designer.component.html","./projects/eav-ui/src/app/edit/dialog/footer/formula-designer/formula-designer.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/data-dump/data-dump.component.html","./projects/eav-ui/src/app/edit/dialog/footer/data-dump/data-dump.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/edit-dialog-footer.component.html","./projects/eav-ui/src/app/edit/dialog/footer/edit-dialog-footer.component.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../edit/shared/models/eav';\r\nimport { ItemInListIdentifier } from '../../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { webApiEntityRoot } from '../../shared/services/entity.service';\r\n\r\n@Injectable()\r\nexport class EntitiesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.context.appId.toString(), force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n\r\nexport interface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: ItemInListIdentifier;\r\n  [field: string]: any;\r\n}\r\n\r\nexport interface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n","export const DebugTypes = {\r\n  Data: 'data',\r\n  Formulas: 'formulas',\r\n  Logs: 'logs',\r\n} as const;\r\n\r\nexport type DebugType = typeof DebugTypes[keyof typeof DebugTypes];\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"logs-box fancy-scrollbar-light\">\r\n    @if (vm.logs.length === 0) {\r\n      <div>Logs are empty</div>\r\n    }\r\n    @for (log of vm.logs; track log) {\r\n      <div class=\"log-entry\" [ngClass]=\"{\r\n        'log-error': log.severity === LogSeverities.Error,\r\n        'log-warn': log.severity === LogSeverities.Warn\r\n        }\">\r\n        <span class=\"log-entry-part log-entry-time\">{{ log.time | date : 'HH:mm:ss' }}:</span>\r\n        <span class=\"log-entry-part log-entry-label\">{{ log.label }}</span>\r\n        <span class=\"log-entry-part log-entry-show\" tippy=\"Log to console\" (click)=\"logToConsole(log)\">\r\n          console\r\n        </span>\r\n      </div>\r\n    }\r\n  </div>\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { combineLatest, map, Observable } from 'rxjs';\r\nimport { LogsDumpViewModel } from './logs-dump.component.models';\r\nimport { ExtendedModule } from '@angular/flex-layout/extended';\r\nimport { NgClass, AsyncPipe, DatePipe } from '@angular/common';\r\nimport { LogEntry, LoggingService, LogSeverities } from '../../../shared/services/logging.service';\r\n\r\n@Component({\r\n  selector: 'app-logs-dump',\r\n  templateUrl: './logs-dump.component.html',\r\n  styleUrls: ['./logs-dump.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    ExtendedModule,\r\n    AsyncPipe,\r\n    DatePipe,\r\n  ],\r\n})\r\nexport class LogsDumpComponent implements OnInit {\r\n  LogSeverities = LogSeverities;\r\n  viewModel$: Observable<LogsDumpViewModel>;\r\n\r\n  constructor(private loggingService: LoggingService) { }\r\n\r\n  ngOnInit(): void {\r\n    const logs$ = this.loggingService.getLogs$();\r\n    this.viewModel$ = combineLatest([logs$]).pipe(\r\n      map(([logs]) => {\r\n        const viewModel: LogsDumpViewModel = {\r\n          logs,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  logToConsole(log: LogEntry): void {\r\n    switch (log.severity) {\r\n      case LogSeverities.Log:\r\n        console.log(log.label, log.error);\r\n        break;\r\n      case LogSeverities.Warn:\r\n        console.warn(log.label, log.error);\r\n        break;\r\n      case LogSeverities.Error:\r\n        console.error(log.label, log.error);\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { FormulaCacheItem, FormulaTarget } from '../../../formulas/models/formula.models';\r\n\r\nexport interface EntityOption {\r\n  entityGuid: string;\r\n  formulas: FormulaCacheItem[];\r\n  hasFormula: boolean;\r\n  label: string;\r\n}\r\n\r\nexport interface FieldOption {\r\n  fieldName: string;\r\n  formulas: FormulaCacheItem[];\r\n  hasFormula: boolean;\r\n  inputType: string;\r\n  label: string;\r\n}\r\n\r\nexport interface TargetOption {\r\n  hasFormula: boolean;\r\n  label: string;\r\n  target: FormulaTarget;\r\n}\r\n\r\nexport interface DesignerSnippet {\r\n  code: string;\r\n  label: string;\r\n}\r\n\r\nexport const SelectTargets = {\r\n  Entity: 'entityGuid',\r\n  Field: 'fieldValue',\r\n  Target: 'formulaTarget',\r\n} as const;\r\n\r\nexport type SelectTarget = typeof SelectTargets[keyof typeof SelectTargets];\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'snippetLabelSize',\r\n    standalone: true\r\n})\r\nexport class SnippetLabelSizePipe implements PipeTransform {\r\n\r\n  private maxLength = 24;\r\n\r\n  transform(label: string): string {\r\n    if (label.length <= this.maxLength) { return label; }\r\n    return `…${label.substring(label.length - this.maxLength)}`;\r\n  }\r\n}\r\n","@if (!loadError) {\r\n  <div class=\"formula-context-box\">\r\n    <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n      <mat-label>Entity</mat-label>\r\n      <mat-select [ngModel]=\"state().entityGuid\" (ngModelChange)=\"selectedChanged(SelectTargets.Entity, $event)\">\r\n        @for (entityOption of entityOptions(); track trackEntityOptions($index, entityOption)) {\r\n          <mat-option\r\n            [value]=\"entityOption.entityGuid\">\r\n            <span [ngClass]=\"{ 'has-formula': entityOption.hasFormula }\">\r\n              {{ entityOption.label }}\r\n            </span>\r\n          </mat-option>\r\n        }\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n      <mat-label>Attribute</mat-label>\r\n      <mat-select [ngModel]=\"state().fieldName\" (ngModelChange)=\"selectedChanged(SelectTargets.Field, $event)\"\r\n        [disabled]=\"state().entityGuid == null\">\r\n        @for (fieldOption of fieldsOptions(); track trackFieldOptions($index, fieldOption)) {\r\n          <mat-option\r\n            [value]=\"fieldOption.fieldName\">\r\n            <span [ngClass]=\"{ 'has-formula': fieldOption.hasFormula }\">\r\n              {{ fieldOption.fieldName }}\r\n            </span>\r\n          </mat-option>\r\n        }\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n      <mat-label>Target</mat-label>\r\n      @if (!freeTextTarget) {\r\n        <mat-select [ngModel]=\"state().target\"\r\n          (ngModelChange)=\"selectedChanged(SelectTargets.Target, $event)\"\r\n          [disabled]=\"state().entityGuid == null || state().fieldName == null\">\r\n          @for (targetOption of targetOptions(); track targetOption) {\r\n            <mat-option [value]=\"targetOption.target\">\r\n              <span [ngClass]=\"{ 'has-formula': targetOption.hasFormula }\">\r\n                {{ targetOption.label }}\r\n              </span>\r\n            </mat-option>\r\n          }\r\n        </mat-select>\r\n      }\r\n      @if (freeTextTarget) {\r\n        <input matInput [ngModel]=\"state().target\"\r\n          (ngModelChange)=\"selectedChanged(SelectTargets.Target, $event)\"\r\n          [disabled]=\"state().entityGuid == null || state().fieldName == null\">\r\n      }\r\n    </mat-form-field>\r\n    <button mat-icon-button tippy=\"FreeText Target\" class=\"eav-formula-button\"\r\n      [disabled]=\"state().entityGuid == null || state().fieldName == null\" (click)=\"toggleFreeText()\">\r\n      <mat-icon>text_fields</mat-icon>\r\n    </button>\r\n    <div class=\"spacer\"></div>\r\n    <a mat-icon-button tippy=\"Help\" class=\"eav-formula-button\" href=\"https://go.2sxc.org/formulas\" target=\"_blank\">\r\n      <mat-icon>help</mat-icon>\r\n    </a>\r\n  </div>\r\n  <div class=\"formula-box\">\r\n    <div class=\"formula-field\" [ngClass]=\"{\r\n      'disabled': !state().editMode || state().entityGuid == null || state().fieldName == null || state().target == null,\r\n      'focused': focused\r\n      }\">\r\n      <mat-label class=\"label\">Function</mat-label>\r\n      <app-monaco-editor class=\"editor\" [filename]=\"filename\" [value]=\"currentFormula()?.source ?? template()\"\r\n        [jsTypings]=\"v2JsTypings()\" (valueChanged)=\"formulaChanged($event)\" [options]=\"monacoOptions\"\r\n        (focused)=\"onFocused()\" (blurred)=\"onBlurred()\">\r\n      </app-monaco-editor>\r\n    </div>\r\n    <div class=\"formula-snippets fancy-scrollbar-light\" [ngClass]=\"{ 'disabled': !state().editMode }\">\r\n      @for (snippet of v1DataSnippets(); track trackSnippets($index, snippet)) {\r\n        <div class=\"snippet\" [title]=\"snippet.code\"\r\n          (click)=\"copyToClipboard(snippet.code)\">\r\n          {{ snippet.label | snippetLabelSize }}\r\n        </div>\r\n      }\r\n      @if (v1DataSnippets()?.length && v1ContextSnippets().length) {\r\n        <div class=\"separator\"></div>\r\n      }\r\n      @for (snippet of v1ContextSnippets(); track trackSnippets($index, snippet)) {\r\n        <div class=\"snippet\" [title]=\"snippet.code\"\r\n          (click)=\"copyToClipboard(snippet.code)\">\r\n          {{ snippet.label | snippetLabelSize }}\r\n        </div>\r\n      }\r\n    </div>\r\n  </div>\r\n  <div class=\"formula-footer-box\">\r\n    <div class=\"formula-result-box hide-scrollbar\">\r\n      <span class=\"label\">Result:&nbsp;</span>\r\n      @if (result() != null && !isDeleted()) {\r\n        @if (!result().isError) {\r\n          @if (result().value !== undefined) {\r\n            <span>{{ result().value | json }}</span>\r\n          }\r\n          @else if (!result().isOnlyPromise) {\r\n            <span class=\"result-undefined\">undefined</span>\r\n          }\r\n          @else {\r\n            <span>promise(🤞🏽)</span>\r\n          }\r\n        }\r\n        @else {\r\n          <span class=\"result-error\">\r\n            Calculation failed. Please check logs for more info\r\n          </span>\r\n        }\r\n      }\r\n    </div>\r\n    <div class=\"formula-actions-box\">\r\n      <button mat-icon-button tippy=\"Edit\" class=\"eav-formula-action-button\" (click)=\"toggleEdit()\">\r\n        <mat-icon>edit</mat-icon>\r\n      </button>\r\n      <button mat-icon-button tippy=\"Menu\" class=\"eav-formula-action-button\" [matMenuTriggerFor]=\"menu\">\r\n        <mat-icon>more_vert</mat-icon>\r\n      </button>\r\n      <mat-menu #menu=\"matMenu\">\r\n        <button mat-menu-item (click)=\"deleteFormula()\"\r\n          [disabled]=\"!currentFormula()?.sourceId\">\r\n          <mat-icon>delete</mat-icon>\r\n          <span>Delete</span>\r\n        </button>\r\n        <button mat-menu-item (click)=\"reset()\">\r\n          <mat-icon>history</mat-icon>\r\n          <span>Reset</span>\r\n        </button>\r\n      </mat-menu>\r\n      @if (allowSaveFormula) {\r\n        <button mat-icon-button tippy=\"Save\" class=\"eav-formula-action-button\"\r\n          [tippyDisabled]=\"!state().editMode || !currentFormula()?.source\"\r\n          [disabled]=\"!state().editMode || !currentFormula()?.source || saving()\" (click)=\"save()\">\r\n          <mat-icon>save</mat-icon>\r\n        </button>\r\n      }\r\n      <button mat-icon-button class=\"eav-formula-action-button\" tippy=\"Run\"\r\n        [disabled]=\"!state().editMode || !currentFormula()?.source\" (click)=\"run()\">\r\n        <mat-icon>play_arrow</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, computed, inject, OnDestroy, OnInit, signal } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport type * as Monaco from 'monaco-editor';\r\nimport { EntitiesService } from '../../../../content-items/services/entities.service';\r\nimport { eavConstants } from '../../../../shared/constants/eav.constants';\r\nimport { copyToClipboard } from '../../../../shared/helpers/copy-to-clipboard.helper';\r\nimport { FormulaDesignerService } from '../../../formulas/formula-designer.service';\r\nimport { defaultFormulaNow, listItemFormulaNow } from '../../../formulas/formula.constants';\r\nimport { FormulaListItemTargets, FormulaTarget } from '../../../formulas/models/formula.models';\r\nimport { ContentTypeService, ItemService } from '../../../shared/store/ngrx-data';\r\nimport { DesignerSnippet, EntityOption, FieldOption, SelectTarget, SelectTargets } from './formula-designer.models';\r\nimport { DesignerState } from '../../../formulas/models/formula-results.models';\r\nimport { SnippetLabelSizePipe } from './snippet-label-size.pipe';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MonacoEditorComponent } from '../../../../monaco-editor/monaco-editor.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ExtendedModule } from '@angular/flex-layout/extended';\r\nimport { NgClass, AsyncPipe, JsonPipe } from '@angular/common';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { transient } from '../../../../core/transient';\r\nimport { EavLogger } from '../../../../shared/logging/eav-logger';\r\nimport { FormConfigService } from '../../../state/form-config.service';\r\nimport { ItemHelper } from '../../../shared/helpers/item.helper';\r\n\r\nconst logThis = true;\r\nconst nameOfThis = 'FormulaDesignerComponent';\r\n\r\n@Component({\r\n  selector: 'app-formula-designer',\r\n  templateUrl: './formula-designer.component.html',\r\n  styleUrls: ['./formula-designer.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    MatOptionModule,\r\n    NgClass,\r\n    ExtendedModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MonacoEditorComponent,\r\n    MatMenuModule,\r\n    AsyncPipe,\r\n    JsonPipe,\r\n    SnippetLabelSizePipe,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class FormulaDesignerComponent implements OnInit, OnDestroy {\r\n  SelectTargets = SelectTargets;\r\n  loadError = false;\r\n  freeTextTarget = false;\r\n  allowSaveFormula = this.formConfig.config.enableFormulaSave;\r\n  isDeleted = signal(false);\r\n  saving = signal(false);\r\n  monacoOptions: Monaco.editor.IStandaloneEditorConstructionOptions = {\r\n    minimap: {\r\n      enabled: false,\r\n    },\r\n    lineHeight: 19,\r\n    lineNumbers: 'off',\r\n    lineDecorationsWidth: 0,\r\n    folding: false,\r\n    scrollBeyondLastLine: false,\r\n    tabSize: 2,\r\n    fixedOverflowWidgets: true,\r\n  };\r\n  filename = `formula${this.formConfig.config.formId}.js`;\r\n  focused = false;\r\n\r\n  private entitiesService = transient(EntitiesService);\r\n\r\n  #designerSvc = inject(FormulaDesignerService);\r\n  protected state = this.#designerSvc.designerState;\r\n  protected result = this.#designerSvc.formulaResult;\r\n  protected targetOptions = this.#designerSvc.currentTargetOptions;\r\n  \r\n  protected entityOptions = this.#designerSvc.entityOptions;\r\n  protected fieldsOptions = this.#designerSvc.fieldsOptions;\r\n  protected currentFormula = this.#designerSvc.currentFormula;\r\n\r\n  protected v2JsTypings = this.#designerSvc.v2JsTypings;\r\n\r\n  protected v1ContextSnippets = this.#designerSvc.v1ContextSnippets;\r\n  protected v1DataSnippets = this.#designerSvc.v1DataSnippets;\r\n\r\n  protected template = computed(() => {\r\n    return Object.values(FormulaListItemTargets).includes(this.state().target)\r\n    ? listItemFormulaNow\r\n    : defaultFormulaNow;\r\n  });\r\n\r\n  private log = new EavLogger(nameOfThis, logThis);\r\n  \r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private formConfig: FormConfigService,\r\n    private itemService: ItemService,\r\n    private contentTypeService: ContentTypeService,\r\n    private translate: TranslateService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadError = false;\r\n    if (Object.keys(this.#designerSvc.itemSettingsServices).length < 1) {\r\n      this.loadError = true;\r\n      return;\r\n    }\r\n    \r\n    this.#designerSvc.setDesignerOpen(true);\r\n    this.#designerSvc.initAfterItemSettingsAreReady();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.#designerSvc.setDesignerOpen(false);\r\n  }\r\n\r\n  trackEntityOptions(index: number, entityOption: EntityOption): string {\r\n    return entityOption.entityGuid;\r\n  }\r\n\r\n  trackFieldOptions(index: number, fieldOption: FieldOption): string {\r\n    return fieldOption.fieldName;\r\n  }\r\n\r\n  trackSnippets(index: number, snippet: DesignerSnippet): string {\r\n    return snippet.code;\r\n  }\r\n\r\n  selectedChanged(target: SelectTarget, value: string | FormulaTarget): void {\r\n    const newState: DesignerState = {\r\n      ...this.#designerSvc.designerState(),\r\n      editMode: false,\r\n    };\r\n    switch (target) {\r\n      case SelectTargets.Entity:\r\n        newState.entityGuid = value;\r\n        const selectedSettingsSvc = this.#designerSvc.itemSettingsServices[newState.entityGuid];\r\n        newState.fieldName = Object.keys(selectedSettingsSvc.getFieldsProps())[0];\r\n        break;\r\n      case SelectTargets.Field:\r\n        newState.fieldName = value;\r\n        break;\r\n      case SelectTargets.Target:\r\n        newState.target = value as FormulaTarget;\r\n        break;\r\n    }\r\n\r\n    this.#designerSvc.designerState.set(newState);\r\n  }\r\n\r\n  toggleFreeText(): void {\r\n    this.freeTextTarget = !this.freeTextTarget;\r\n  }\r\n\r\n  formulaChanged(formula: string): void {\r\n    const designer = this.#designerSvc.designerState();\r\n    this.#designerSvc.cache.updateFormulaFromEditor(designer, formula, false);\r\n  }\r\n\r\n  onFocused(): void {\r\n    this.focused = true;\r\n  }\r\n\r\n  onBlurred(): void {\r\n    this.focused = false;\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  toggleEdit(): void {\r\n    const oldState = this.#designerSvc.designerState();\r\n    const designer: DesignerState = {\r\n      ...oldState,\r\n      editMode: !oldState.editMode,\r\n    };\r\n    this.#designerSvc.designerState.set(designer);\r\n    if (designer.editMode) {\r\n      const formula = this.#designerSvc.currentFormula();\r\n      if (formula == null) {\r\n        this.#designerSvc.cache.updateFormulaFromEditor(designer, Object.values(FormulaListItemTargets).includes(designer.target) ? listItemFormulaNow : defaultFormulaNow, false);\r\n      }\r\n    }\r\n  }\r\n\r\n  reset(): void {\r\n    const designer: DesignerState = {\r\n      ...this.#designerSvc.designerState(),\r\n      editMode: false,\r\n    };\r\n    this.#designerSvc.designerState.set(designer);\r\n    this.#designerSvc.cache.resetFormula(designer);\r\n    this.#designerSvc.itemSettingsServices[designer.entityGuid].retriggerFormulas();\r\n  }\r\n\r\n  run(): void {\r\n    const designer = this.#designerSvc.designerState();\r\n    const formula = this.#designerSvc.currentFormula();\r\n    this.#designerSvc.cache.updateFormulaFromEditor(designer, formula.source, true);\r\n    this.#designerSvc.itemSettingsServices[designer.entityGuid].retriggerFormulas();\r\n    this.isDeleted.set(false);\r\n  }\r\n\r\n  save(): void {\r\n    this.saving.set(true);\r\n    const formula = this.#designerSvc.currentFormula();\r\n\r\n    if (formula.sourceId == null) {\r\n      const item = this.itemService.getItem(formula.entityGuid);\r\n      const contentTypeId = ItemHelper.getContentTypeNameId(item);\r\n      const contentType = this.contentTypeService.getContentType(contentTypeId);\r\n      const attributeDef = contentType.Attributes.find(a => a.Name === formula.fieldName);\r\n      const atAllFieldSettings = attributeDef.Metadata.find(m => m.Type.Id === '@All');\r\n      if (!atAllFieldSettings) {\r\n        this.snackBar.open('Field configuration is missing. Please create formula in Administration', undefined, { duration: 3000 });\r\n        this.saving.set(false);\r\n        return;\r\n      }\r\n      this.entitiesService.create(\r\n        eavConstants.contentTypes.formulas,\r\n        {\r\n          Title: formula.target,\r\n          Target: formula.target,\r\n          Formula: formula.source,\r\n          Enabled: true,\r\n          ParentRelationship: {\r\n            Add: null,\r\n            EntityId: null,\r\n            Field: 'Formulas',\r\n            Index: 0,\r\n            Parent: atAllFieldSettings.Guid,\r\n          },\r\n        },\r\n      ).subscribe(savedFormula => {\r\n        this.#designerSvc.cache.updateSaved(formula, savedFormula.Guid, savedFormula.Id);\r\n        this.snackBar.open('Formula saved', null, { duration: 2000 });\r\n        this.saving.set(false);\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.entitiesService.update(eavConstants.contentTypes.formulas, formula.sourceId, { Formula: formula.source }).subscribe(() => {\r\n      this.#designerSvc.cache.updateSaved(formula, formula.sourceGuid, formula.sourceId);\r\n      this.snackBar.open('Formula saved', null, { duration: 2000 });\r\n      this.saving.set(false);\r\n    });\r\n  }\r\n\r\n  deleteFormula(): void {\r\n    const designer = this.#designerSvc.designerState();\r\n    const formula = this.#designerSvc.currentFormula();\r\n\r\n    const id = formula.sourceId;\r\n    const title = formula.fieldName + ' - ' + formula.target;\r\n\r\n    const confirmed = confirm(this.translate.instant('Data.Delete.Question', { title, id }));\r\n    if (!confirmed)\r\n      return;\r\n\r\n    this.entitiesService.delete(eavConstants.contentTypes.formulas, formula.sourceId, true).subscribe({\r\n      next: () => {\r\n        this.#designerSvc.cache.delete(formula);\r\n        this.snackBar.open(this.translate.instant('Message.Deleted'), null, { duration: 2000 });\r\n        this.isDeleted.set(true);\r\n        if (designer.editMode)\r\n          this.toggleEdit();\r\n      },\r\n      error: (_: HttpErrorResponse) => {\r\n        this.snackBar.open(this.translate.instant('Message.DeleteError'), null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  \r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <textarea readonly class=\"fancy-scrollbar-light\">{{ vm.items | json }}</textarea>\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { combineLatest, map, Observable } from 'rxjs';\r\nimport { ItemService } from '../../../shared/store/ngrx-data';\r\nimport { DataDumpViewModel } from './data-dump.component.models';\r\nimport { AsyncPipe, JsonPipe } from '@angular/common';\r\nimport { FormConfigService } from '../../../state/form-config.service';\r\n\r\n@Component({\r\n    selector: 'app-data-dump',\r\n    templateUrl: './data-dump.component.html',\r\n    styleUrls: ['./data-dump.component.scss'],\r\n    standalone: true,\r\n    imports: [AsyncPipe, JsonPipe],\r\n})\r\nexport class DataDumpComponent implements OnInit {\r\n  viewModel$: Observable<DataDumpViewModel>;\r\n\r\n  constructor(private itemService: ItemService, private formConfig: FormConfigService) { }\r\n\r\n  ngOnInit(): void {\r\n    const items$ = this.itemService.getItems$(this.formConfig.config.itemGuids);\r\n    this.viewModel$ = combineLatest([items$]).pipe(\r\n      map(([items]) => {\r\n        const viewModel: DataDumpViewModel = {\r\n          items,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","<mat-card appearance=\"raised\" class=\"mat-elevation-z4\" [ngClass]=\"{ 'debug-enabled': activeDebug != null }\">\r\n\r\n  <div class=\"debug-buttons-container\">\r\n    <button mat-button tippy=\"Show Data JSON\" (click)=\"toggleDialog(DebugTypes.Data)\">\r\n      <mat-icon>offline_bolt</mat-icon>\r\n      <span>Data</span>\r\n    </button>\r\n    <button mat-button tippy=\"Show Formula Designer\" (click)=\"toggleDialog(DebugTypes.Formulas)\">\r\n      <mat-icon>functions</mat-icon>\r\n      <span>Formulas</span>\r\n    </button>\r\n    <button mat-button tippy=\"Show Logs\" (click)=\"toggleDialog(DebugTypes.Logs)\">\r\n      <mat-icon>speed</mat-icon>\r\n      <span>Logs</span>\r\n    </button>\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"sxc-version\">2sxc {{ sxcVer }}</div>\r\n  </div>\r\n\r\n  @if (activeDebug != null) {\r\n    <div class=\"debug-info-container\">\r\n      @if (activeDebug === DebugTypes.Data) {\r\n        <app-data-dump></app-data-dump>\r\n      }\r\n      @if (activeDebug === DebugTypes.Formulas) {\r\n        <app-formula-designer>\r\n        </app-formula-designer>\r\n      }\r\n      @if (activeDebug === DebugTypes.Logs) {\r\n        <app-logs-dump></app-logs-dump>\r\n      }\r\n    </div>\r\n  }\r\n</mat-card>","import { Component, EventEmitter, Input, Output, QueryList } from '@angular/core';\r\nimport { EavWindow } from '../../../shared/models/eav-window.model';\r\nimport { EntityFormBuilderComponent } from '../../entity-form/entity-form-builder/form-builder.component';\r\nimport { DebugType, DebugTypes } from './edit-dialog-footer.models';\r\nimport { LogsDumpComponent } from './logs-dump/logs-dump.component';\r\nimport { FormulaDesignerComponent } from './formula-designer/formula-designer.component';\r\nimport { DataDumpComponent } from './data-dump/data-dump.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { ExtendedModule } from '@angular/flex-layout/extended';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-edit-dialog-footer',\r\n  templateUrl: './edit-dialog-footer.component.html',\r\n  styleUrls: ['./edit-dialog-footer.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    NgClass,\r\n    ExtendedModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    DataDumpComponent,\r\n    FormulaDesignerComponent,\r\n    LogsDumpComponent,\r\n  ],\r\n})\r\nexport class EditDialogFooterComponent {\r\n  @Output() private debugInfoOpened = new EventEmitter<boolean>();\r\n\r\n  DebugTypes = DebugTypes;\r\n  activeDebug: DebugType;\r\n  sxcVer = window.sxcVersion.substring(0, window.sxcVersion.lastIndexOf('.'));\r\n\r\n  toggleDialog(type: DebugType): void {\r\n    this.activeDebug = type !== this.activeDebug ? type : null;\r\n    this.debugInfoOpened.emit(this.activeDebug != null);\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}