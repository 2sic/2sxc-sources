{"version":3,"mappings":"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","names":["appFilesAsset","SourceService","http","context","dnnContext","this","viewKey","global","urlItems","get","$2sxc","apiUrl","params","Object","appId","templateIdOrPath","pipe","map","view","Type","toLocaleLowerCase","Extension","post","mask","Files","d","forEach","O","Shared","_a","C","getAll","files","splitIndex","file","Path","lastIndexOf","fileExtIndex","folder","substring","name","path","isShared","apiPath","zoneId","purpose","type","templateKey","test","find","T","EntityId","toString","i","IsShared","templateId","w","i0","factory","FileLocationDialogComponent","dialogRef","E","form","FormGroup","FormControl","Validators","close","formValues","getRawValue","closeDialog","selectors","ctx","defaultThrottleConfig","leading","trailing","durationSelector","operate","source","subscriber","hasValue","sendValue","throttled","isComplete","endThrottling","unsubscribe","send","complete","cleanupThrottling","startThrottle","value","innerFrom","subscribe","OperatorSubscriber","next","closed","MatInputAutofocusDirective","matInput","elementRef","setTimeout","t","focus","toBoolean","autofocusSelectValue","nativeElement","setSelectionRange","length","valueLowerCase","ctx_r14","ctx_r16","CreateFileDialogComponent","dialogData","sourceService","subscription","Subscription","templates$","BehaviorSubject","loadingPreview$","buildForm","fetchTemplates","buildTemplateVars","result","finalName","getPredefinedTemplates","controls","response","Default","patchValue","Templates","platform","all","c","disabled","y","_b","add","combineLatest","valueChanges","startWith","distinctUntilChanged","I","template","Key","suggestedName","u","f","SuggestedFileName","trim","SanitizeHelper","h","g","Prefix","concat","m","Suffix","Z","_c","replace","platforms$","platformsMap","templates","Platforms","keys","purposes$","purposesMap","Purpose","l","filter","F","includes","tap","some","newTemplateKey","preview$","duration","config","arguments","duration$","timer","asyncScheduler","throttle","throttleTime","switchMap","forkJoin","getPreview","of","undefined","templateVars$","preview","platforms","purposes","loadingPreview","Preview","previewValid","IsValid","previewError","Error","MAT_DIALOG_DATA","CreateFileDialogModule","N","Context","imports","CommonModule","SharedComponentsModule","MatButtonModule","MatSelectModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","MatProgressSpinnerModule"],"sources":["./projects/ng-dialogs/src/app/code-editor/services/source.service.ts","./projects/ng-dialogs/src/app/create-file-dialog/file-location-dialog/file-location-dialog.component.html","./projects/ng-dialogs/src/app/create-file-dialog/file-location-dialog/file-location-dialog.component.ts","./node_modules/rxjs/dist/esm/internal/operators/throttle.js","./projects/ng-dialogs/src/app/shared/directives/mat-input-autofocus.directive.ts","./projects/ng-dialogs/src/app/create-file-dialog/create-file-dialog.component.html","./projects/ng-dialogs/src/app/create-file-dialog/create-file-dialog.component.ts","./node_modules/rxjs/dist/esm/internal/operators/throttleTime.js","./projects/ng-dialogs/src/app/create-file-dialog/create-file-dialog.module.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { WebApi, WebApiDetails } from '../../app-administration/models';\r\nimport { SourceItem } from '../../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FileAsset } from '../models/file-asset.model';\r\nimport { PredefinedTemplatesResponse } from '../models/predefined-template.model';\r\nimport { Preview } from '../models/preview.models';\r\nimport { SourceView } from '../models/source-view.model';\r\n\r\nconst appFilesAll = 'admin/AppFiles/AppFiles';\r\nconst appFilesAsset = 'admin/AppFiles/asset';\r\nconst appFilesCreate = 'admin/AppFiles/create';\r\nconst apiExplorerInspect = 'admin/ApiExplorer/inspect';\r\nconst appFilesPredefinedTemplates = 'admin/AppFiles/GetTemplates';\r\nconst appFilesPreview = 'admin/AppFiles/preview';\r\n\r\n@Injectable()\r\nexport class SourceService {\r\n\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /** ViewKey is templateId or path */\r\n  get(viewKey: string, global: boolean, urlItems: SourceItem[]): Observable<SourceView> {\r\n    return this.http.get<SourceView>(this.dnnContext.$2sxc.http.apiUrl(appFilesAsset), {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    }).pipe(\r\n      map(view => {\r\n        if (view.Type.toLocaleLowerCase() === 'auto') {\r\n          switch (view.Extension.toLocaleLowerCase()) {\r\n            case '.cs':\r\n            case '.cshtml':\r\n              view.Type = 'Razor';\r\n              break;\r\n            case '.html':\r\n            case '.css':\r\n            case '.js':\r\n              view.Type = 'Token';\r\n              break;\r\n          }\r\n        }\r\n        return view;\r\n      })\r\n    );\r\n  }\r\n\r\n  /** ViewKey is templateId or path */\r\n  save(viewKey: string, global: boolean, view: SourceView, urlItems: SourceItem[]): Observable<boolean> {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(appFilesAsset), view, {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    });\r\n  }\r\n\r\n  getAll(mask?: string): Observable<FileAsset[]> {\r\n    return this.http.get<{ Files: FileAsset[] }>(this.dnnContext.$2sxc.http.apiUrl(appFilesAll), {\r\n      params: {\r\n        appId: this.context.appId,\r\n        ...(mask && { mask }),\r\n      },\r\n    }).pipe(\r\n      map(({ Files }) => {\r\n        Files.forEach(file => {\r\n          file.Shared ??= false;\r\n        });\r\n        return Files;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getWebApis(): Observable<WebApi[]> {\r\n    return this.getAll('*Controller.cs').pipe(\r\n      map(files => {\r\n        const webApis: WebApi[] = files.map(file => {\r\n          const splitIndex = file.Path.lastIndexOf('/');\r\n          const fileExtIndex = file.Path.lastIndexOf('.');\r\n          const folder = file.Path.substring(0, splitIndex);\r\n          const name = file.Path.substring(splitIndex + 1, fileExtIndex);\r\n          const webApi: WebApi = { path: file.Path, folder, name, isShared: file.Shared };\r\n          return webApi;\r\n        });\r\n        return webApis;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getWebApiDetails(apiPath: string): Observable<WebApiDetails> {\r\n    return this.http.get<WebApiDetails>(this.dnnContext.$2sxc.http.apiUrl(apiExplorerInspect), {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId, path: apiPath },\r\n    });\r\n  }\r\n\r\n  getPredefinedTemplates(purpose?: 'Template' | 'Search' | 'Api', type?: 'Token' | 'Razor'): Observable<PredefinedTemplatesResponse> {\r\n    return this.http.get<PredefinedTemplatesResponse>(this.dnnContext.$2sxc.http.apiUrl(appFilesPredefinedTemplates), {\r\n      params: {\r\n        ...(purpose && { purpose }),\r\n        ...(type && { type }),\r\n      },\r\n    });\r\n  }\r\n\r\n  getPreview(path: string, global: boolean, templateKey: string): Observable<Preview> {\r\n    return this.http.get<Preview>(this.dnnContext.$2sxc.http.apiUrl(appFilesPreview), {\r\n      params: {\r\n        appId: this.context.appId,\r\n        path,\r\n        templateKey,\r\n        global,\r\n      },\r\n    });\r\n  }\r\n\r\n  create(path: string, global: boolean, templateKey: string): Observable<boolean> {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(appFilesCreate), {}, {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        purpose: 'auto',\r\n        path,\r\n        templateKey,\r\n      },\r\n    });\r\n  }\r\n\r\n  private templateIdOrPath(viewKey: string, global: boolean, urlItems: SourceItem[]) {\r\n    if (/^[0-9]*$/g.test(viewKey)) {\r\n      const path = urlItems.find(i => i.EntityId?.toString() === viewKey && i.IsShared === global)?.Path;\r\n      return {\r\n        templateId: viewKey,\r\n        ...(path != null && { path }),\r\n      };\r\n    } else {\r\n      return { path: viewKey };\r\n    }\r\n  }\r\n}\r\n","<div mat-dialog-title>\r\n  <div class=\"dialog-title-box\">New file location</div>\r\n</div>\r\n\r\n<form [formGroup]=\"form\" class=\"dialog-form\">\r\n  <div class=\"dialog-form-content fancy-scrollbar-light\">\r\n\r\n    <!-- Shared -->\r\n    <mat-form-field appearance=\"standard\" color=\"accent\">\r\n      <mat-label>Location</mat-label>\r\n      <mat-select formControlName=\"isShared\">\r\n        <mat-option [value]=\"false\">App</mat-option>\r\n        <mat-option [value]=\"true\">Shared (global)</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <app-field-hint *ngIf=\"form.controls.isShared.touched && form.controls.isShared.errors?.required\" [isError]=\"true\">\r\n      This field is required\r\n    </app-field-hint>\r\n\r\n    <div class=\"dialog-form-actions\">\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\" [disabled]=\"!form.valid\" (click)=\"confirm()\">\r\n        Confirm\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, HostBinding, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { FileLocationFormValues } from '..';\r\n\r\n@Component({\r\n  selector: 'app-file-location-dialog',\r\n  templateUrl: './file-location-dialog.component.html',\r\n  styleUrls: ['./file-location-dialog.component.scss']\r\n})\r\nexport class FileLocationDialogComponent implements OnInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private dialogRef: MatDialogRef<FileLocationDialogComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      isShared: new FormControl(null, Validators.required),\r\n    });\r\n  }\r\n\r\n  closeDialog(isShared?: boolean): void {\r\n    this.dialogRef.close(isShared);\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: FileLocationFormValues = this.form.getRawValue();\r\n    this.closeDialog(formValues.isShared);\r\n  }\r\n}\r\n","import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false,\n};\nexport function throttle(durationSelector, { leading, trailing } = defaultThrottleConfig) {\n    return operate((source, subscriber) => {\n        let hasValue = false;\n        let sendValue = null;\n        let throttled = null;\n        let isComplete = false;\n        const endThrottling = () => {\n            throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();\n            throttled = null;\n            if (trailing) {\n                send();\n                isComplete && subscriber.complete();\n            }\n        };\n        const cleanupThrottling = () => {\n            throttled = null;\n            isComplete && subscriber.complete();\n        };\n        const startThrottle = (value) => (throttled = innerFrom(durationSelector(value)).subscribe(new OperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n        const send = () => {\n            if (hasValue) {\n                hasValue = false;\n                const value = sendValue;\n                sendValue = null;\n                subscriber.next(value);\n                !isComplete && startThrottle(value);\n            }\n        };\n        source.subscribe(new OperatorSubscriber(subscriber, (value) => {\n            hasValue = true;\n            sendValue = value;\n            !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        }, () => {\n            isComplete = true;\n            !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }));\n    });\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\r\nimport { MatInput } from '@angular/material/input';\r\n\r\n@Directive({ selector: '[appMatInputAutofocus]' })\r\nexport class MatInputAutofocusDirective implements OnInit {\r\n  @Input() autofocusSelectValue: string | boolean | null | undefined = false;\r\n\r\n  constructor(private matInput: MatInput, private elementRef: ElementRef<HTMLInputElement>) { }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.matInput.focus();\r\n\r\n      if (this.toBoolean(this.autofocusSelectValue)) {\r\n        this.elementRef.nativeElement.setSelectionRange(0, this.matInput.value.length);\r\n      }\r\n    });\r\n  }\r\n\r\n  private toBoolean(value: any): boolean | null | undefined {\r\n    if (typeof value === 'boolean') { return value; }\r\n    if (typeof value === 'string') {\r\n      const valueLowerCase = value.toLocaleLowerCase();\r\n      if (valueLowerCase === 'true') { return true; }\r\n      if (valueLowerCase === 'false') { return false; }\r\n      return;\r\n    }\r\n    if (value == null) { return value; }\r\n  }\r\n}\r\n","<ng-container *ngIf=\"templateVars$ | async as data\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box hide-scrollbar\">\r\n      <span>Create</span>\r\n      <span class=\"file-name\">{{\r\n        controls.finalName.value\r\n        || (controls.folder.value ? controls.folder.value.trim() + '/' : '')\r\n        }}</span>\r\n    </div>\r\n  </div>\r\n\r\n  <form [formGroup]=\"form\" class=\"dialog-form\">\r\n    <div class=\"dialog-form-content fancy-scrollbar-light\">\r\n\r\n      <div class=\"field-container multiple\">\r\n        <!-- Platform -->\r\n        <div class=\"multiple-field\">\r\n          <mat-form-field appearance=\"standard\" color=\"accent\">\r\n            <mat-label>Platform</mat-label>\r\n            <mat-select formControlName=\"platform\">\r\n              <mat-option *ngFor=\"let platform of data.platforms\" [value]=\"platform\">\r\n                {{ platform }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <!-- Purpose -->\r\n        <div class=\"multiple-field\">\r\n          <mat-form-field appearance=\"standard\" color=\"accent\">\r\n            <mat-label>Purpose</mat-label>\r\n            <mat-select formControlName=\"purpose\">\r\n              <mat-option *ngFor=\"let purpose of data.purposes\" [value]=\"purpose\">\r\n                {{ purpose }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Template -->\r\n      <div class=\"field-container\">\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Template</mat-label>\r\n          <mat-select formControlName=\"templateKey\">\r\n            <mat-option *ngFor=\"let template of data.templates\" [value]=\"template.Key\">\r\n              {{ template.Name }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <!-- Name -->\r\n      <div class=\"field-container\">\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"name\" required appMatInputAutofocus autofocusSelectValue=\"true\">\r\n        </mat-form-field>\r\n        <app-field-hint *ngIf=\"controls.name.touched && controls.name.errors?.required\" [isError]=\"true\">\r\n          This field is required\r\n        </app-field-hint>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"dialog-form-actions\">\r\n      <ng-container *ngIf=\"data.loadingPreview\">\r\n        <mat-spinner mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n        <div class=\"spacer\"></div>\r\n      </ng-container>\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\"\r\n        [disabled]=\"!form.valid || data.loadingPreview || !data.previewValid\" (click)=\"confirm()\">\r\n        Create\r\n      </button>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"data.preview\">\r\n      <div class=\"preview-label-box\">\r\n        <label class=\"preview-label\" [ngClass]=\"{ 'disabled': data.loadingPreview }\">Preview</label>\r\n      </div>\r\n      <pre class=\"fancy-scrollbar-light\" [ngClass]=\"{ 'disabled': data.loadingPreview }\">{{ data.preview }}</pre>\r\n    </ng-container>\r\n\r\n    <div class=\"preview-error\" *ngIf=\"!data.loadingPreview && data.previewError\">\r\n      {{ data.previewError }}\r\n    </div>\r\n  </form>\r\n</ng-container>\r\n","import { Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { asyncScheduler, BehaviorSubject, combineLatest, forkJoin, Observable, of, Subscription, timer } from 'rxjs';\r\nimport { distinctUntilChanged, map, startWith, switchMap, tap, throttleTime } from 'rxjs/operators';\r\nimport { CreateFileDialogData, CreateFileDialogResult, CreateFileFormControls, CreateFileFormValues, CreateFileTemplateVars } from '.';\r\nimport { SanitizeHelper } from '../../../../edit/shared/helpers';\r\nimport { PredefinedTemplate } from '../code-editor/models/predefined-template.model';\r\nimport { Preview } from '../code-editor/models/preview.models';\r\nimport { SourceService } from '../code-editor/services/source.service';\r\n\r\n@Component({\r\n  selector: 'app-create-file-dialog',\r\n  templateUrl: './create-file-dialog.component.html',\r\n  styleUrls: ['./create-file-dialog.component.scss']\r\n})\r\nexport class CreateFileDialogComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: FormGroup;\r\n  controls: CreateFileFormControls;\r\n  templateVars$: Observable<CreateFileTemplateVars>;\r\n\r\n  private all = 'All' as const;\r\n  private templates$: BehaviorSubject<PredefinedTemplate[]>;\r\n  private loadingPreview$: BehaviorSubject<boolean>;\r\n  private subscription: Subscription;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: CreateFileDialogData,\r\n    private dialogRef: MatDialogRef<CreateFileDialogComponent>,\r\n    private sourceService: SourceService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = new Subscription();\r\n    this.templates$ = new BehaviorSubject<PredefinedTemplate[]>([]);\r\n    this.loadingPreview$ = new BehaviorSubject(false);\r\n\r\n    this.buildForm();\r\n    this.fetchTemplates();\r\n    this.buildTemplateVars();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.templates$.complete();\r\n    this.loadingPreview$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  closeDialog(result?: CreateFileDialogResult): void {\r\n    this.dialogRef.close(result);\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: CreateFileFormValues = this.form.getRawValue();\r\n\r\n    const result: CreateFileDialogResult = {\r\n      name: formValues.finalName,\r\n      templateKey: formValues.templateKey,\r\n    };\r\n    this.closeDialog(result);\r\n  }\r\n\r\n  private fetchTemplates(): void {\r\n    this.sourceService.getPredefinedTemplates(this.dialogData.purpose, this.dialogData.type).subscribe(response => {\r\n      if (this.controls.templateKey.value !== response.Default) {\r\n        this.controls.templateKey.patchValue(response.Default);\r\n      }\r\n      this.templates$.next(response.Templates);\r\n    });\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new FormGroup({\r\n      platform: new FormControl(this.all),\r\n      purpose: new FormControl({ value: this.dialogData.purpose ?? this.all, disabled: this.dialogData.purpose != null }),\r\n      templateKey: new FormControl(null, Validators.required),\r\n      name: new FormControl(null, Validators.required),\r\n      finalName: new FormControl({ value: null, disabled: true }),\r\n      folder: new FormControl({ value: this.dialogData.folder ?? '', disabled: true }),\r\n    });\r\n\r\n    this.controls = this.form.controls as any;\r\n\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.templates$,\r\n        this.controls.templateKey.valueChanges.pipe(\r\n          startWith<string>(this.controls.templateKey.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n      ]).subscribe(([templates, templateKey]) => {\r\n        const template = templates.find(t => t.Key === templateKey);\r\n        const suggestedName = template?.SuggestedFileName ?? null;\r\n\r\n        if (this.controls.name.value !== suggestedName) {\r\n          this.controls.name.patchValue(suggestedName);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.templates$,\r\n        this.controls.templateKey.valueChanges.pipe(\r\n          startWith<string>(this.controls.templateKey.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n        this.controls.name.valueChanges.pipe(\r\n          startWith<string>(this.controls.name.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n        this.controls.folder.valueChanges.pipe(\r\n          startWith<string>(this.controls.folder.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n      ]).subscribe(([templates, templateKey, name, folder]) => {\r\n        const template = templates.find(t => t.Key === templateKey);\r\n\r\n        let finalName: string = null;\r\n        if (name) {\r\n          folder = folder.trim();\r\n          name = SanitizeHelper.sanitizePath(name.trim());\r\n          name = `${template?.Prefix ?? ''}${name}${template?.Suffix ?? ''}${template?.Extension ?? ''}`;\r\n          finalName = `${folder ? `${folder}/` : ''}${name}`.replace(/\\/{2,}/g, '/');\r\n        }\r\n\r\n        if (this.controls.finalName.value !== finalName) {\r\n          this.controls.finalName.patchValue(finalName);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private buildTemplateVars(): void {\r\n    const platforms$ = this.templates$.pipe(\r\n      map(templates => {\r\n        const platformsMap: Record<string, string> = {\r\n          [this.all]: this.all,\r\n        };\r\n        templates.forEach(template => {\r\n          template.Platforms?.forEach(platform => {\r\n            platformsMap[platform] = platform;\r\n          });\r\n        });\r\n        return Object.keys(platformsMap);\r\n      }),\r\n    );\r\n    const purposes$ = this.templates$.pipe(\r\n      map(templates => {\r\n        const purposesMap: Record<string, string> = {\r\n          [this.all]: this.all,\r\n        };\r\n        templates.forEach(template => {\r\n          purposesMap[template.Purpose] = template.Purpose;\r\n        });\r\n        return Object.keys(purposesMap);\r\n      }),\r\n    );\r\n    const templates$ = combineLatest([\r\n      this.templates$,\r\n      this.controls.platform.valueChanges.pipe(\r\n        startWith<string>(this.controls.platform.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n      this.controls.purpose.valueChanges.pipe(\r\n        startWith<string>(this.controls.purpose.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n    ]).pipe(\r\n      map(([templates, platform, purpose]) => {\r\n        const filtered = templates.filter(template => {\r\n          const platformMatch = platform === this.all || (template.Platforms?.includes(platform) ?? false);\r\n          const purposeMatch = purpose === this.all || template.Purpose === purpose;\r\n          return platformMatch && purposeMatch;\r\n        });\r\n        return filtered;\r\n      }),\r\n      tap(templates => {\r\n        if (!templates.some(t => t.Key === this.controls.templateKey.value)) {\r\n          const newTemplateKey = templates[0]?.Key ?? null;\r\n          if (this.controls.templateKey.value !== newTemplateKey) {\r\n            this.controls.templateKey.patchValue(newTemplateKey);\r\n          }\r\n        }\r\n      }),\r\n    );\r\n    const preview$ = combineLatest([\r\n      this.controls.finalName.valueChanges.pipe(\r\n        startWith<string>(this.controls.finalName.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n      this.controls.templateKey.valueChanges.pipe(\r\n        startWith<string>(this.controls.templateKey.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n    ]).pipe(\r\n      throttleTime(100, asyncScheduler, { leading: true, trailing: true }),\r\n      tap(() => {\r\n        this.loadingPreview$.next(true);\r\n      }),\r\n      switchMap(([finalName, templateKey]) => {\r\n        return !finalName || !templateKey\r\n          ? of<Preview | undefined>(undefined)\r\n          : forkJoin([\r\n            this.sourceService.getPreview(finalName, this.dialogData.global, templateKey),\r\n            timer(500),\r\n          ]).pipe(map(([preview]) => preview));\r\n      }),\r\n      tap(() => {\r\n        this.loadingPreview$.next(false);\r\n      }),\r\n    );\r\n    this.templateVars$ = combineLatest([platforms$, purposes$, templates$, preview$, this.loadingPreview$]).pipe(\r\n      map(([platforms, purposes, templates, preview, loadingPreview]) => {\r\n        const templateVars: CreateFileTemplateVars = {\r\n          platforms,\r\n          purposes,\r\n          templates,\r\n          loadingPreview,\r\n          preview: preview?.Preview,\r\n          previewValid: preview?.IsValid ?? false,\r\n          previewError: preview?.Error,\r\n        };\r\n        return templateVars;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { asyncScheduler } from '../scheduler/async';\nimport { defaultThrottleConfig, throttle } from './throttle';\nimport { timer } from '../observable/timer';\nexport function throttleTime(duration, scheduler = asyncScheduler, config = defaultThrottleConfig) {\n    const duration$ = timer(duration, scheduler);\n    return throttle(() => duration$, config);\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { CreateFileDialogComponent, FileLocationDialogComponent } from '.';\r\nimport { SourceService } from '../code-editor/services/source.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CreateFileDialogComponent,\r\n    FileLocationDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedComponentsModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  exports: [\r\n    CreateFileDialogComponent,\r\n    FileLocationDialogComponent,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    SourceService,\r\n  ],\r\n})\r\nexport class CreateFileDialogModule { }\r\n"],"sourceRoot":"webpack:///","file":"default-projects_ng-dialogs_src_app_create-file-dialog_index_ts.17e6df3a45b96f65.js"}