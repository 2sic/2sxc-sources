{"version":3,"mappings":"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","names":["appFilesAsset","SourceService","constructor","http","context","dnnContext","this","get","viewKey","global","urlItems","$2sxc","apiUrl","params","Object","appId","templateIdOrPath","pipe","map","view","Type","toLocaleLowerCase","Extension","save","post","getAll","mask","Files","forEach","file","v","Shared","_a","_","getWebApis","files","splitIndex","Path","lastIndexOf","fileExtIndex","folder","substring","name","path","isShared","getWebApiDetails","apiPath","zoneId","getPredefinedTemplates","purpose","type","getPreview","templateKey","create","test","find","i","k","EntityId","toString","IsShared","templateId","i0","factory","scenario","root","urlParams","verbs","virtual","startsWith","length","contextParams","tabId","moduleId","directUrl","pathWithParams","result","Array","includes","push","ApiCall","list","pathWithContext","inSameContext","CodeSample","hint$2sxc","in2sxc","endPointGetter","endPointGetWithParams","inSameSite","warningExternal","snippetsGet","warningSimpleSampleOnly","snippetsPost","DevRestApiIntroductionComponent","AllScenarios","ngOnInit","selectors","DevRestTabIntroductionComponent","InfoBoxComponent","getIcon","infoBoxIconMap","DevRestTabExamplesComponent","TrueFalseComponent","agInit","value","reverse","trueIcon","falseIcon","icon","refresh","DevRestApiActionParamsComponent","AllCommunityModules","defaultGridOptions","columnDefs","field","headerClass","width","cellClass","split","valueGetter","data","isOptional","cellRenderer","cellRendererParams","flex","minWidth","headerName","defaultValue","ctx_r7","oxw","ctx_r14","DevRestUrlsAndCodeComponent","snackBar","callApiGet","url","subscribe","res","console","log","openSnackBar","copyCode","text","copyToClipboard","message","action","open","duration","DevRestApiPermissionsComponent","gridModules","booleanColumnDef","gridOptions","requirement","class","method","effective","comments","ngOnChanges","changes","buildGridItems","gridItems","details","security","ignoreSecurity","selected","mergedSecurity","allowAnonymous","requireVerificationToken","edit","admin","superUser","requireContext","gridHeight","DevRestHttpHeadersComponent","ctx_r9","ctx_r11","ctx_r12","ctx_r13","DevRestApiComponent","DevRestBase","appDialogConfigService","dialogRef","router","route","sourceService","super","BehaviorSubject","webApi$","combineLatest","paramMap","pm","GoToDevRest","webApis","decodeURIComponent","w","apiDetails$","switchMap","webApi","share","take","filter","x","p","m","actions","selectedActionName$","next","selectedAction$","T","a","root$","scenario$","dialogSettings$","dialogSettings","resolved","replace","encodeURI","Context","App","Folder","controller","rootBasedOnScenario","templateVars$","urlParams$","diag","buildBaseTemplateVars","permissionsHasAnonymous","apiCalls","generateWebApiCalls","updateParams","event","target","updateAction","DevRestDataIntroductionComponent","DevRestTabPermissionsComponent","Id","Title","Identity","Condition","Grant","openPermissions","navigate","GoToPermissions","permissionTarget","relativeTo","ctx","DevRestDataComponent","contentTypesService","permissionsService","entityService","contentType$","ctName","retrieveContentType","permissions$","buildPermissionStream","contentType","Name","itemOfThisType$","reactiveEntities","ct","contentTypeName","StaticName","Value","Text","permissions","item","itemId","itemGuid","generateApiCalls","devRestDialog","initContext","panelSize","panelClass","getComponent","DevRestEntryComponent","s","id","streamNames","pathWithStream","DevRestQueryIntroductionComponent","routes","component","DialogEntryComponent","dialog","title","children","pipelinesService","query$","eavConstants","queryGuid","all","q","Guid","query","streamNames$","generateQueryCalls","updateStreams","DevRestQueryComponent","DevRestRoutingModule","RouterModule","DevRestModule","ContentTypesService","AppDialogConfigService","PermissionsService","MetadataService","EntitiesService","EntityService","PipelinesService","EavService","imports","CommonModule","SharedComponentsModule","FormsModule","MatDialogModule","MatButtonModule","MatSnackBarModule","MatFormFieldModule","MatInputModule","MatSelectModule","MatTabsModule","MatListModule","MatIconModule","MatExpansionModule","AgGridModule","MatBadgeModule","nextId","_MatBadgeBase","mixinDisabled","BADGE_CONTENT_CLASS","MatBadge","_ngZone","_elementRef","_ariaDescriber","_renderer","_animationMode","_color","_overlap","position","size","_id","_isInitialized","color","_setColor","overlap","val","coerceBooleanProperty","content","_content","newContent","_updateRenderedContent","description","_description","newDescription","_updateHostAriaDescription","hidden","_hidden","isAbove","indexOf","isAfter","getBadgeElement","_badgeElement","_clearExistingBadges","_createBadgeElement","ngOnDestroy","destroyNode","removeDescription","nativeElement","badgeElement","createElement","activeClass","setAttribute","classList","add","appendChild","requestAnimationFrame","runOutsideAngular","newContentNormalized","trim","textContent","describe","colorPalette","remove","badges","querySelectorAll","from","ɵfac","i1","ANIMATION_MODULE_TYPE","ɵdir","ɵmod","ɵinj","A11yModule","MatCommonModule"],"sources":["./projects/ng-dialogs/src/app/code-editor/services/source.service.ts","./projects/ng-dialogs/src/app/dev-rest/api/api-samples.ts","./projects/ng-dialogs/src/app/dev-rest/api/introduction/introduction.component.ts","./projects/ng-dialogs/src/app/dev-rest/api/introduction/introduction.component.html","./projects/ng-dialogs/src/app/dev-rest/tab-introduction/tab-introduction.component.html","./projects/ng-dialogs/src/app/dev-rest/tab-introduction/tab-introduction.component.ts","./projects/ng-dialogs/src/app/dev-rest/info-box/info-box.component.html","./projects/ng-dialogs/src/app/dev-rest/info-box/info-box.component.ts","./projects/ng-dialogs/src/app/dev-rest/tab-examples/tab-examples.component.html","./projects/ng-dialogs/src/app/dev-rest/tab-examples/tab-examples.component.ts","./projects/ng-dialogs/src/app/dev-rest/api/action-params/true-false.component.ts","./projects/ng-dialogs/src/app/dev-rest/api/action-params/true-false.component.html","./projects/ng-dialogs/src/app/dev-rest/api/action-params/action-params.component.html","./projects/ng-dialogs/src/app/dev-rest/api/action-params/action-params.component.ts","./projects/ng-dialogs/src/app/dev-rest/dev-rest-urls-and-code/dev-rest-urls-and-code.component.html","./projects/ng-dialogs/src/app/dev-rest/dev-rest-urls-and-code/dev-rest-urls-and-code.component.ts","./projects/ng-dialogs/src/app/dev-rest/api/permissions/permissions.component.ts","./projects/ng-dialogs/src/app/dev-rest/api/permissions/permissions.component.html","./projects/ng-dialogs/src/app/dev-rest/tab-headers/tab-headers.component.ts","./projects/ng-dialogs/src/app/dev-rest/tab-headers/tab-headers.component.html","./projects/ng-dialogs/src/app/dev-rest/api/api.component.html","./projects/ng-dialogs/src/app/dev-rest/api/api.component.ts","./projects/ng-dialogs/src/app/dev-rest/data/introduction/introduction.component.ts","./projects/ng-dialogs/src/app/dev-rest/data/introduction/introduction.component.html","./projects/ng-dialogs/src/app/dev-rest/tab-permissions/tab-permissions.component.html","./projects/ng-dialogs/src/app/dev-rest/tab-permissions/tab-permissions.component.ts","./projects/ng-dialogs/src/app/dev-rest/data/data.component.html","./projects/ng-dialogs/src/app/dev-rest/data/data.component.ts","./projects/ng-dialogs/src/app/dev-rest/dev-rest-dialog.config.ts","./projects/ng-dialogs/src/app/dev-rest/query/query-samples.ts","./projects/ng-dialogs/src/app/dev-rest/query/introduction/introduction.component.ts","./projects/ng-dialogs/src/app/dev-rest/query/introduction/introduction.component.html","./projects/ng-dialogs/src/app/dev-rest/query/query.component.html","./projects/ng-dialogs/src/app/dev-rest/dev-rest-routing.module.ts","./projects/ng-dialogs/src/app/dev-rest/query/query.component.ts","./projects/ng-dialogs/src/app/dev-rest/dev-rest.module.ts","./node_modules/@angular/material/fesm2015/badge.mjs"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { WebApi, WebApiDetails } from '../../app-administration/models';\r\nimport { SourceItem } from '../../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FileAsset } from '../models/file-asset.model';\r\nimport { PredefinedTemplatesResponse } from '../models/predefined-template.model';\r\nimport { Preview } from '../models/preview.models';\r\nimport { SourceView } from '../models/source-view.model';\r\n\r\nconst appFilesAll = 'admin/AppFiles/AppFiles';\r\nconst appFilesAsset = 'admin/AppFiles/asset';\r\nconst appFilesCreate = 'admin/AppFiles/create';\r\nconst apiExplorerInspect = 'admin/ApiExplorer/inspect';\r\nconst appFilesPredefinedTemplates = 'admin/AppFiles/GetTemplates';\r\nconst appFilesPreview = 'admin/AppFiles/preview';\r\n\r\n@Injectable()\r\nexport class SourceService {\r\n\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /** ViewKey is templateId or path */\r\n  get(viewKey: string, global: boolean, urlItems: SourceItem[]): Observable<SourceView> {\r\n    return this.http.get<SourceView>(this.dnnContext.$2sxc.http.apiUrl(appFilesAsset), {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    }).pipe(\r\n      map(view => {\r\n        if (view.Type.toLocaleLowerCase() === 'auto') {\r\n          switch (view.Extension.toLocaleLowerCase()) {\r\n            case '.cs':\r\n            case '.cshtml':\r\n              view.Type = 'Razor';\r\n              break;\r\n            case '.html':\r\n            case '.css':\r\n            case '.js':\r\n              view.Type = 'Token';\r\n              break;\r\n          }\r\n        }\r\n        return view;\r\n      })\r\n    );\r\n  }\r\n\r\n  /** ViewKey is templateId or path */\r\n  save(viewKey: string, global: boolean, view: SourceView, urlItems: SourceItem[]): Observable<boolean> {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(appFilesAsset), view, {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    });\r\n  }\r\n\r\n  getAll(mask?: string): Observable<FileAsset[]> {\r\n    return this.http.get<{ Files: FileAsset[] }>(this.dnnContext.$2sxc.http.apiUrl(appFilesAll), {\r\n      params: {\r\n        appId: this.context.appId,\r\n        ...(mask && { mask }),\r\n      },\r\n    }).pipe(\r\n      map(({ Files }) => {\r\n        Files.forEach(file => {\r\n          file.Shared ??= false;\r\n        });\r\n        return Files;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getWebApis(): Observable<WebApi[]> {\r\n    return this.getAll('*Controller.cs').pipe(\r\n      map(files => {\r\n        const webApis: WebApi[] = files.map(file => {\r\n          const splitIndex = file.Path.lastIndexOf('/');\r\n          const fileExtIndex = file.Path.lastIndexOf('.');\r\n          const folder = file.Path.substring(0, splitIndex);\r\n          const name = file.Path.substring(splitIndex + 1, fileExtIndex);\r\n          const webApi: WebApi = { path: file.Path, folder, name, isShared: file.Shared };\r\n          return webApi;\r\n        });\r\n        return webApis;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getWebApiDetails(apiPath: string): Observable<WebApiDetails> {\r\n    return this.http.get<WebApiDetails>(this.dnnContext.$2sxc.http.apiUrl(apiExplorerInspect), {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId, path: apiPath },\r\n    });\r\n  }\r\n\r\n  getPredefinedTemplates(purpose?: 'Template' | 'Search' | 'Api', type?: 'Token' | 'Razor'): Observable<PredefinedTemplatesResponse> {\r\n    return this.http.get<PredefinedTemplatesResponse>(this.dnnContext.$2sxc.http.apiUrl(appFilesPredefinedTemplates), {\r\n      params: {\r\n        ...(purpose && { purpose }),\r\n        ...(type && { type }),\r\n      },\r\n    });\r\n  }\r\n\r\n  getPreview(path: string, global: boolean, templateKey: string): Observable<Preview> {\r\n    return this.http.get<Preview>(this.dnnContext.$2sxc.http.apiUrl(appFilesPreview), {\r\n      params: {\r\n        appId: this.context.appId,\r\n        path,\r\n        templateKey,\r\n        global,\r\n      },\r\n    });\r\n  }\r\n\r\n  create(path: string, global: boolean, templateKey: string): Observable<boolean> {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(appFilesCreate), {}, {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        purpose: 'auto',\r\n        path,\r\n        templateKey,\r\n      },\r\n    });\r\n  }\r\n\r\n  private templateIdOrPath(viewKey: string, global: boolean, urlItems: SourceItem[]) {\r\n    if (/^[0-9]*$/g.test(viewKey)) {\r\n      const path = urlItems.find(i => i.EntityId?.toString() === viewKey && i.IsShared === global)?.Path;\r\n      return {\r\n        templateId: viewKey,\r\n        ...(path != null && { path }),\r\n      };\r\n    } else {\r\n      return { path: viewKey };\r\n    }\r\n  }\r\n}\r\n","import { SxcRoot } from '@2sic.com/2sxc-typings';\r\nimport { ApiCall, CodeSample, hint$2sxc, Scenario, warningExternal, warningSimpleSampleOnly } from '..';\r\nimport { Context } from '../../shared/services/context';\r\n// tslint:disable: curly\r\n\r\nexport function generateWebApiCalls($2sxc: SxcRoot, scenario: Scenario, context: Context, root: string,\r\n  urlParams: string, verbs: string[]) {\r\n  const virtual = root[0] !== '/' && !root.startsWith('http');\r\n\r\n  // if urlParams exist and it doesn't starts with a ?, add that\r\n  if (urlParams && urlParams.length && urlParams[0] !== '?')\r\n    urlParams = '?' + urlParams;\r\n\r\n  const contextParams = virtual\r\n    ? `${urlParams}${urlParams ? '&' : '?'}PageId=${context.tabId}&ModuleId=${context.moduleId}`\r\n    : '';\r\n  const directUrl = $2sxc.http.apiUrl(root) + contextParams;\r\n  const pathWithParams = root + urlParams;\r\n\r\n  const result = new Array<ApiCall>();\r\n  if (verbs.includes('GET'))\r\n    result.push(new ApiCall(virtual, 'GET', pathWithParams, 'call the WebAPI endpoint', 'call GET on this endpoint', true,\r\n      snippetsGet(scenario, pathWithParams, context), directUrl));\r\n\r\n  if (verbs.includes('POST'))\r\n    result.push(new ApiCall(virtual, 'POST', pathWithParams, 'call the WebAPI endpoint', 'call POST on this endpoint', false,\r\n      snippetsPost(scenario, pathWithParams, context.moduleId), directUrl));\r\n\r\n  return result;\r\n}\r\n\r\nfunction snippetsGet(scenario: Scenario, path: string, context: Context): CodeSample[] {\r\n  const moduleId = context.moduleId;\r\n  const virtual = path[0] !== '/';\r\n  const list: CodeSample[] = [];\r\n  const pathWithContext = `${path}?PageId=${context.tabId}&ModuleId=${context.moduleId}`;\r\n\r\n  if (scenario.inSameContext)\r\n    list.push(new CodeSample('Example with global $2sxc and event-context',\r\n      'This example finds the context information from the HTML where an action started.',\r\n      `\r\n<button onclick=\"$2sxc(this).webApi.get('${path}').then(data => console.log(data))\">\r\n  get it\r\n</button>`, false, [hint$2sxc]));\r\n\r\n  if (scenario.in2sxc)\r\n    list.push(new CodeSample(`Example with global $2sxc and a Module-Id ${moduleId}`,\r\n      `This is how you get the context when your code doesn't start with a DOM context, so you need the moduleId.`,\r\n      `\r\n// get the sxc-controller for this module\r\nvar sxc = $2sxc(${moduleId});\r\n// now get the data in the promise\r\nsxc.webApi.get('${path}')\r\n  .then(data => {\r\n    console.log(data)\r\n  });`,\r\n      false, [hint$2sxc]),\r\n      new CodeSample(`Same example as one-liner`,\r\n        'This is the same as above, but as a one-liner so you can run it directly in the F12 console right now.',\r\n        `$2sxc(${moduleId}).webApi.get('${path}').then(data => console.log('just got:', data));`, true));\r\n\r\n  if (scenario.in2sxc && scenario.inSameContext)\r\n    list.push(new CodeSample('Example where you get the Module-Id from Razor',\r\n      `This example doesn't use a fixed moduleId but let's the Razor add the current moduleId when the page is rendered.`,\r\n      `\r\n// this will be replaced on the server with the ID\r\nvar moduleId = @Dnn.Module.ModuleID;\r\nvar sxc = $2sxc(moduleId);\r\nvar promise = sxc.webApi.get('${path}');`, false, [hint$2sxc]));\r\n\r\n  // jquery examples, they differ based on the scenario\r\n  const endPointGetter = virtual ? `$2sxc.http.apiUrl('${path}')` : `'${path}'`;\r\n  const endPointGetWithParams = virtual ? `$2sxc.http.apiUrl('${pathWithContext}')` : `'${pathWithContext}'`;\r\n  if (scenario.inSameSite) {\r\n    // jQuery using setModuleHeaders\r\n    list.push(new CodeSample('Using jQuery inside DNN',\r\n      `This example uses jQuery instead of the $2sxc to do the AJAX call.\r\n      It shows you how to resolve the virtual path for use in other ways.`,\r\n      `\r\nvar endpoint = ${endPointGetter};\r\n$.ajax({\r\n  url:endpoint,\r\n  beforeSend: $.dnnSF(${moduleId}).setModuleHeaders\r\n}).then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, []));\r\n\r\n    // jQuery Single-Liner\r\n    list.push(new CodeSample('Using jQuery as single-liner',\r\n      `The same example as above, just as single-liner so you can test it directly in the F12 console.\r\n      This will only work if you're on a DNN page with this module.`,\r\n      `$.ajax({url: ${endPointGetter}, beforeSend: $.dnnSF(${moduleId}).setModuleHeaders }).then(data => console.log(data))`,\r\n      false, []));\r\n\r\n    // jQuery without setModuleHeaders\r\n    list.push(new CodeSample('Using jQuery and add Context in URL',\r\n      `This example uses jQuery instead of the $2sxc to do the AJAX call.\r\n      But instead of using the DNN Services Framework it adds relevant headers to the url.`,\r\n      `\r\n$.ajax(${endPointGetWithParams}).then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, []));\r\n\r\n    // jQuery Single-Liner without SetModuleHeaders\r\n    list.push(new CodeSample('Using jQuery with url-context as single-liner',\r\n      `The same example as above, just as single-liner so you can test it directly in the F12 console.\r\n      This will work on a DNN page which has jQuery activated. `,\r\n      `$.ajax(${endPointGetWithParams}).then(data => console.log(data))`,\r\n      false, []));\r\n\r\n  } else {\r\n    // jQuery External\r\n    list.push(new CodeSample('Using jQuery in another Site or External',\r\n      `This example uses jQuery and doesn't use $2sxc or the DNN ServicesFramework,\r\n      because they would be either missing, or give wrong context-headers.`,\r\n      `\r\n$.ajax('${path}').then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, [warningExternal]));\r\n\r\n    // jQuery External with Context\r\n    list.push(new CodeSample('Using jQuery with Context in URL',\r\n      `This example uses jQuery and includes a module-context. This is unusual for external access, but may be needed sometime.`,\r\n      `\r\n$.ajax('${pathWithContext}').then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, [warningExternal]));\r\n  }\r\n  // return generated snippets\r\n  return list;\r\n}\r\n\r\n/** Snippets for basic Post */\r\nfunction snippetsPost(scenario: Scenario, path: string, moduleId: number): CodeSample[] {\r\n  const showWarning = !scenario.inSameContext;\r\n  return [\r\n    new CodeSample('Basic Example',\r\n      `This example uses the ModuleId to get the context information.\r\nTo see other ways to get the context and headers, check out the GET examples.\r\nNote that this snippet doesn't use real names of properties to add.`,\r\n      `// get the sxc-controller for this module\r\nvar sxc = $2sxc(${moduleId});\r\n\r\n// The object we'll send to get created. It's just a simple object with properties\r\nvar urlParams = {\r\n  id: 47,\r\n};\r\nvar postParams = {\r\n  // related items like tags can be assigned with IDs\r\n  // which you would usually get from somewhere first\r\n  list: [17, 4203, 5030],\r\n  message: 'Some Text',\r\n};\r\n\r\n// now create it and get the id back\r\nsxc.webApi.post('${path}', urlParams, postParams)\r\n  .then(data => {\r\n    console.log('Got this ID information: ', data)\r\n  });`,\r\n      false,\r\n      showWarning ? [warningSimpleSampleOnly] : []),\r\n  ];\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AllScenarios } from '../..';\r\nimport { DevRestApiTemplateVars } from '../api-template-vars';\r\n\r\n@Component({\r\n  selector: 'app-dev-api-introduction',\r\n  templateUrl: './introduction.component.html',\r\n})\r\nexport class DevRestApiIntroductionComponent implements OnInit {\r\n\r\n  @Input() data: DevRestApiTemplateVars;\r\n\r\n  /** List of scenarios */\r\n  scenarios = AllScenarios;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>\n  To learn more about WebAPIs you may want to read these <a href=\"https://docs.2sxc.org/index.html\" target=\"_blank\">docs</a>:\n</p>\n<ul>\n  <li><a href=\"https://docs.2sxc.org/web-api/index.html\" target=\"_blank\">WebAPIs in 2sxc</a></li>\n  <li><a href=\"https://docs.2sxc.org/web-api/query-rest-web-api.html\" target=\"_blank\">Query REST API</a></li>\n</ul>\n","<p>\n  All data can be used in JavaScript, SPAs or anywhere with the REST API\n  (see <a href=\"https://docs.2sxc.org/web-api/index.html\" target=\"_blank\">docs</a>).\n  Use this for things like:\n</p>\n<ul>\n  <li><a href=\"https://docs.2sxc.org/web-api/index.html\" target=\"_blank\">WebAPI in 2sxc</a></li>\n  <li><a href=\"https://docs.2sxc.org/web-api/headless/index.html\" target=\"_blank\">Using DNN/2sxc as a headless CMS</a></li>\n  <li>Create SPAs in DNN/2sxc</li>\n  <li>Get data for mobile apps</li>\n  <li>Share data to other platforms</li>\n</ul>\n<p>\n  Just set off HTTP <code>GET</code> requests or similar\n  to the endpoint like <code>{{ data.root }}</code>. You can find the full list with example code\n  in the next tabs.\n  Make sure you also read about permissions and HTTP headers.\n</p>\n<h3>Scenarios Explained (dropdown on top)</h3>\n<p>\n  The examples / code / permission infos will change based on the scenario you choose.\n</p>\n<ng-container *ngFor=\"let scenario of scenarios\">\n  <h4>Scenario: {{ scenario.name }}</h4>\n  <p>\n    {{ scenario.description }}\n  </p>\n  <p *ngIf=\"scenario.notes\">\n    <em>\n      {{ scenario.notes }}\n    </em>\n  </p>\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AllScenarios, DevRestDataTemplateVars } from '..';\r\nimport { DevRestBaseTemplateVars } from '../base-template-vars';\r\n\r\n@Component({\r\n  selector: 'app-dev-rest-tab-introduction',\r\n  templateUrl: './tab-introduction.component.html',\r\n})\r\nexport class DevRestTabIntroductionComponent implements OnInit {\r\n\r\n  @Input() data: DevRestBaseTemplateVars;\r\n\r\n  /** List of scenarios */\r\n  scenarios = AllScenarios;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p class=\"icon-box {{ type }}\">\r\n  <mat-icon>{{ getIcon() }}</mat-icon>\r\n  <strong *ngIf=\"title\" [innerHTML]=\"title\"></strong>\r\n  <br *ngIf=\"title\">\r\n  <ng-content></ng-content>\r\n</p>\r\n","import { Component, Input } from '@angular/core';\r\nimport { infoBoxIconMap, InfoBoxType } from './hint';\r\n\r\n@Component({\r\n  selector: 'app-info-box',\r\n  templateUrl: './info-box.component.html',\r\n  styleUrls: ['./info-box.component.scss']\r\n})\r\nexport class InfoBoxComponent {\r\n  @Input() type: InfoBoxType;\r\n  @Input() title: string;\r\n  constructor() { }\r\n\r\n  getIcon() {\r\n    return infoBoxIconMap[this.type];\r\n  }\r\n}\r\n","<app-info-box type=\"info\" *ngIf=\"data.scenario.useVirtual\">\r\n  Virtual REST URLs are short. They will be resolved internally\r\n  to the full length (based on the dnn-version, current portal, etc.)\r\n  thanks to $2sxc JS API. This happens when you use the\r\n  <a href=\"https://docs.2sxc.org/specs/js/sxcewebapi.html\" target=\"_blank\">\r\n    $2sxc(<em>id-or-htmlnode</em>).webApi.get(...)\r\n  </a>\r\n  or if you use\r\n  <a href=\"http://r.2sxc.org/js-angular\" target=\"_blank\">\r\n    dnn-sxc-angular (npm package)\r\n  </a>\r\n  (which also passes url-resolving through $2sxc).\r\n</app-info-box>\r\n\r\n<app-info-box *ngIf=\"data.scenario.needsAnonymous && !data.permissionsHasAnonymous\" type=\"warning\">\r\n  To use the REST API from external, you usually will want to set some permissions for <code>Anonymous</code>.\r\n  As of now, no such permissions are configured.\r\n</app-info-box>\r\n\r\n<app-info-box *ngIf=\"data.scenario.needsAnonymous && data.permissionsHasAnonymous\" type=\"alert\">\r\n  It seems that you have some permissions configured for <code>Anonymous</code>.\r\n  This is correct if you plan on using the REST endpoints from externaly.\r\n  Please make sure that they are the ones you need, and that you don't accidentally open up too much.\r\n</app-info-box>\r\n\r\n<p>\r\n  The examples below use real values to make it easier to get started.\r\n  The values used are the current content-type <code>{{ data.name }}</code>,\r\n  the current Module ID <code>{{ data.moduleId }}</code>\r\n  and the folder of the current App folder <code>{{ data.folder }}</code> (where needed).\r\n  <ng-container *ngIf=\"data.itemId\">\r\n  The code also looked up an item of this type and will use it's ID <code>{{ data.itemId }}</code> in the\r\n  examples.\r\n</ng-container>\r\n</p>\r\n","import { Component, Input } from '@angular/core';\r\nimport { DevRestBaseTemplateVars } from '..';\r\n\r\n@Component({\r\n  selector: 'app-dev-rest-tab-examples-intro',\r\n  templateUrl: './tab-examples.component.html',\r\n  styleUrls: ['./tab-examples.component.scss']\r\n})\r\nexport class DevRestTabExamplesComponent {\r\n  @Input() data: DevRestBaseTemplateVars;\r\n  constructor() { }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { TrueFalseParams } from './true-false-column-params';\r\n\r\n@Component({\r\n  selector: 'app-rest-api-true-false',\r\n  templateUrl: './true-false.component.html',\r\n})\r\nexport class TrueFalseComponent implements ICellRendererAngularComp {\r\n  icon: string;\r\n\r\n  private trueIcon = 'check_circle';\r\n  private falseIcon = 'circle';\r\n\r\n  agInit(params: TrueFalseParams) {\r\n    let value = params.value;\r\n    if (params.reverse) { value = !value; }\r\n    if (params.trueIcon) { this.trueIcon = params.trueIcon; }\r\n    if (params.falseIcon) { this.falseIcon = params.falseIcon; }\r\n    this.icon = value ? this.trueIcon : this.falseIcon;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon>{{ icon }}</mat-icon>\r\n</div>\r\n","\n<h3><code>{{data.name}}</code> Parameters</h3>\n\n<p *ngIf=\"!data.parameters.length\" class=\"warning info-box\">\n  <mat-icon>info</mat-icon>\n  This endpoint doesn't seem to use any parameters.\n</p>\n\n<ag-grid-angular *ngIf=\"data.parameters.length\" class=\"ag-theme-material\" [rowData]=\"data.parameters\" [modules]=\"modules\"\n  [gridOptions]=\"gridOptions\" [style.height]=\"(33 + data.parameters.length * 48) + 'px'\">\n</ag-grid-angular>\n\n","import { AllCommunityModules, GridOptions } from '@ag-grid-community/all-modules';\r\nimport { Component, Input } from '@angular/core';\r\nimport { WebApiAction, WebApiActionParameters } from '../../../app-administration/models/web-api-details';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { TrueFalseParams } from './true-false-column-params';\r\nimport { TrueFalseComponent } from './true-false.component';\r\n\r\n@Component({\r\n  selector: 'app-dev-rest-api-action-params',\r\n  templateUrl: './action-params.component.html',\r\n})\r\nexport class DevRestApiActionParamsComponent {\r\n\r\n  @Input() data: WebApiAction;\r\n\r\n  /** AgGrid modules */\r\n  modules = AllCommunityModules;\r\n  /** AgGrid options */\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    columnDefs: [\r\n      {\r\n        field: 'Required', headerClass: 'dense', width: 80, cellClass: 'no-padding no-outline'.split(' '),\r\n        valueGetter: (params) => (params.data as WebApiActionParameters).isOptional,\r\n        cellRenderer: TrueFalseComponent,\r\n        cellRendererParams: { reverse: true } as TrueFalseParams,\r\n      },\r\n      {\r\n        field: 'Name', flex: 2, minWidth: 200, cellClass: 'no-outline',\r\n        valueGetter: (params) => (params.data as WebApiActionParameters).name,\r\n      },\r\n      {\r\n        field: 'Type', flex: 2, headerClass: 'dense', cellClass: 'no-outline',\r\n        valueGetter: (params) => (params.data as WebApiActionParameters).type,\r\n      },\r\n      {\r\n        headerName: 'Default Value', field: 'DefaultValue', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n        valueGetter: (params) => (params.data as WebApiActionParameters).defaultValue,\r\n      },\r\n    ],\r\n  };\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<mat-accordion multi class=\"rest-urls-accordion\">\r\n  <mat-expansion-panel *ngFor=\"let apiCall of data.apiCalls\">\r\n\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        <div class=\"rest-urls-title\">\r\n          <code>{{ apiCall.verb }}</code>: <code>{{ apiCall.url }}</code>\r\n          <span>&nbsp;to {{ apiCall.teaser }}</span>\r\n        </div>\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n\r\n    <mat-panel-description style=\"display: block;\">\r\n      <h4>{{ apiCall.instructions }}</h4>\r\n      <p>\r\n        HTTP Verb: <code>{{ apiCall.verb }}</code> <br>\r\n        {{ data.scenario.useVirtual ? 'Virtual' : 'Absolute' }} Url: <code>{{ apiCall.url }}</code>\r\n      </p>\r\n      <p *ngIf=\"apiCall.enableButton\">\r\n        <button mat-raised-button (click)=\"callApiGet(apiCall.url)\">Call and Output to Console</button>\r\n        <ng-container *ngIf=\"apiCall.browseUrl\">\r\n          &nbsp;\r\n          <a [href]=\"apiCall.browseUrl\" target=\"_blank\">Open in Browser</a>\r\n          <span *ngIf=\"data.scenario.useVirtual\">\r\n            (for the demo to work it will add context parameters)\r\n          </span>\r\n        </ng-container>\r\n      </p>\r\n\r\n      <!-- show the code examples -->\r\n      <ng-container *ngFor=\"let code of apiCall.code\">\r\n        <h4>{{ code.title }}</h4>\r\n        <p>{{ code.description }}</p>\r\n        <div class=\"code-example\">\r\n          <pre class=\"code-example__text\">{{ code.code }}</pre>\r\n          <button mat-icon-button class=\"code-example__copy\" tippy=\"Copy to clipboard\" (click)=\"copyCode(code.code)\">\r\n            <mat-icon>copy</mat-icon>\r\n          </button>\r\n        </div>\r\n\r\n        <!-- show hints / warnings -->\r\n        <app-info-box *ngFor=\"let hint of code.hints\" [type]=\"hint.type\">\r\n          <span [innerHtml]=\"hint.message\"></span>\r\n        </app-info-box>\r\n\r\n      </ng-container>\r\n\r\n    </mat-panel-description>\r\n  </mat-expansion-panel>\r\n</mat-accordion>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DevRestBaseTemplateVars, DevRestDataTemplateVars } from '..';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\n\r\n@Component({\r\n  selector: 'app-dev-rest-urls-and-code',\r\n  templateUrl: './dev-rest-urls-and-code.component.html',\r\n  styleUrls: ['./dev-rest-urls-and-code.component.scss']\r\n})\r\nexport class DevRestUrlsAndCodeComponent {\r\n  @Input() data: DevRestBaseTemplateVars;\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n  callApiGet(url: string) {\r\n    this.http.get<any>(url).subscribe(res => {\r\n      console.log(`Called ${url} and got this:`, res);\r\n      this.openSnackBar(`Called ${url}. You can see the full result in the F12 console`, 'API call returned');\r\n    });\r\n    this.openSnackBar(`Calling ${url}. You can see the full result in the F12 console`, 'API call sent');\r\n  }\r\n\r\n  copyCode(text: string) {\r\n    copyToClipboard(text);\r\n    this.openSnackBar('Copied to clipboard');\r\n  }\r\n\r\n  private openSnackBar(message: string, action?: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n}\r\n","import { AllCommunityModules, ColDef, GridOptions, Module } from '@ag-grid-community/all-modules';\r\nimport { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { TrueFalseParams } from '../action-params/true-false-column-params';\r\nimport { TrueFalseComponent } from '../action-params/true-false.component';\r\nimport { DevRestApiTemplateVars } from '../api-template-vars';\r\n\r\n@Component({\r\n  selector: 'app-dev-api-permissions',\r\n  templateUrl: './permissions.component.html',\r\n})\r\nexport class DevRestApiPermissionsComponent implements OnInit, OnChanges {\r\n  @Input() data: DevRestApiTemplateVars;\r\n\r\n  gridModules: Module[];\r\n  gridOptions: GridOptions;\r\n  gridItems: ApiPermissionsGridItem[];\r\n  gridHeight: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.gridModules = AllCommunityModules;\r\n    const booleanColumnDef: ColDef = {\r\n      headerClass: 'dense', width: 80, cellClass: 'no-outline', cellRenderer: TrueFalseComponent,\r\n      cellRendererParams: { reverse: false } as TrueFalseParams,\r\n    };\r\n    this.gridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          field: 'Requirement', flex: 2, minWidth: 200, cellClass: 'no-outline',\r\n          valueGetter: (params) => (params.data as ApiPermissionsGridItem).requirement,\r\n        },\r\n        { ...booleanColumnDef, field: 'Class', valueGetter: (params) => (params.data as ApiPermissionsGridItem).class },\r\n        { ...booleanColumnDef, field: 'Method', valueGetter: (params) => (params.data as ApiPermissionsGridItem).method },\r\n        { ...booleanColumnDef, field: 'Effective', valueGetter: (params) => (params.data as ApiPermissionsGridItem).effective },\r\n        {\r\n          field: 'Comments', flex: 3, minWidth: 250, cellClass: 'no-outline',\r\n          valueGetter: (params) => (params.data as ApiPermissionsGridItem).comments,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.data) {\r\n      this.buildGridItems();\r\n    }\r\n  }\r\n\r\n  private buildGridItems() {\r\n    this.gridItems = [\r\n      {\r\n        requirement: 'Ignore All Security Checks <code>[AllowAnonymous]</code>',\r\n        class: this.data.details.security.ignoreSecurity,\r\n        method: this.data.selected.security.ignoreSecurity,\r\n        effective: this.data.selected.mergedSecurity.ignoreSecurity,\r\n        comments: 'If this is set all other security checks are skipped',\r\n      },\r\n      {\r\n        requirement: 'Allow Anonymous Use',\r\n        class: this.data.details.security.allowAnonymous,\r\n        method: this.data.selected.security.allowAnonymous,\r\n        effective: this.data.selected.mergedSecurity.allowAnonymous,\r\n        comments: '',\r\n      },\r\n      {\r\n        requirement: 'Require Verification Token',\r\n        class: this.data.details.security.requireVerificationToken,\r\n        method: this.data.selected.security.requireVerificationToken,\r\n        effective: this.data.selected.mergedSecurity.requireVerificationToken,\r\n        comments: '',\r\n      },\r\n      {\r\n        requirement: 'Allow users with <strong>view</strong> permissions',\r\n        class: this.data.details.security.view,\r\n        method: this.data.selected.security.view,\r\n        effective: this.data.selected.mergedSecurity.view,\r\n        comments: '',\r\n      },\r\n      {\r\n        requirement: 'Allow users with <strong>edit</strong> permissions',\r\n        class: this.data.details.security.edit,\r\n        method: this.data.selected.security.edit,\r\n        effective: this.data.selected.mergedSecurity.edit,\r\n        comments: '',\r\n      },\r\n      {\r\n        requirement: 'Allow users with <strong>admin</strong> permissions',\r\n        class: this.data.details.security.admin,\r\n        method: this.data.selected.security.admin,\r\n        effective: this.data.selected.mergedSecurity.admin,\r\n        comments: '',\r\n      },\r\n      {\r\n        requirement: 'Allow users with <strong>super-user</strong> permissions',\r\n        class: this.data.details.security.superUser,\r\n        method: this.data.selected.security.superUser,\r\n        effective: this.data.selected.mergedSecurity.superUser,\r\n        comments: '',\r\n      },\r\n      {\r\n        requirement: 'Require Context',\r\n        class: this.data.details.security.requireContext,\r\n        method: this.data.selected.security.requireContext,\r\n        effective: this.data.selected.mergedSecurity.requireContext,\r\n        comments: 'If required, the context must be included - see also headers',\r\n      },\r\n    ];\r\n    this.gridHeight = `${33 + this.gridItems.length * 48}px`;\r\n  }\r\n}\r\n\r\nexport interface ApiPermissionsGridItem {\r\n  requirement: string;\r\n  class: boolean;\r\n  method: boolean;\r\n  effective: boolean;\r\n  comments: string;\r\n}\r\n","<h3>Permissions in WebAPIs</h3>\r\n\r\n<p>\r\n  Permissions must be specified in the code, using Attributes such as <code>[AllowAnonymous]</code>.\r\n  Read more about it in the <a href=\"https://docs.2sxc.org/web-api/custom/custom-web-api-security.html\" target=\"_blank\">\r\n    Docs for custom WebAPI Security</a>.\r\n</p>\r\n\r\n<ag-grid-angular class=\"ag-theme-material\" [rowData]=\"gridItems\" [modules]=\"gridModules\" [gridOptions]=\"gridOptions\"\r\n  [style.height]=\"gridHeight\">\r\n</ag-grid-angular>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { DevRestBaseTemplateVars } from '..';\r\n\r\n@Component({\r\n  selector: 'app-dev-rest-tab-headers',\r\n  templateUrl: './tab-headers.component.html',\r\n})\r\nexport class DevRestHttpHeadersComponent implements OnInit {\r\n\r\n  @Input() data: DevRestBaseTemplateVars;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h2>HTTP Headers, Security and Context</h2>\n<!-- Background about Context -->\n<p>\n  HTTP headers and url-parameters are used for <strong>Security</strong> and <strong>Context</strong>.\n  We'll explain the <em>Security</em> part further below, and start with <em>Context</em>.\n  When you work with WebApi endpoints, there are two distinct scenarios:\n</p>\n<h3>Using WebApi with Context</h3>\n<p>\n    In this case the endpoint knows what <strong>Page</strong> and what <strong>module</strong> the request is for.\n    This <strong>Context</strong> is then used to <em>auto-detect</em> the app (so you can use <code>/auto/</code> in the url).\n    <br>\n    It can also be used for for security checks - so you can set <strong>Permissions</strong>\n    like <code>Allow READ If the user may see the module</code>.\n</p>\n<app-info-box type=\"tip\">\n  TIP: In the case of <strong>Queries</strong> the <strong>Context</strong> can also provide parameters which were configured in the module.\n</app-info-box>\n\n<h3>Using WebApi without Context</h3>\n<p>\n  If the <strong>Context</strong> is not known, the endpoint cannot <em>auto-detect</em> the the app, so instead of <code>/auto/</code>\n  you must supply the correct app-name in the url, in this case <code>{{ data.folder }}</code>.\n  <br>\n  You also must specify more specific <strong>Permissions</strong> like <code>Allow READ if user is in group Members</code> or\n  <code>Allow READ for all ANONYMOUS users</code>.\n</p>\n\n<app-info-box type=\"info\" title=\"Site & Language are <em>not</em> part of the Context.\">\n  Technically the context needs more information than we just talked about, like what <strong>Site</strong> are we on and what\n  <strong>Language</strong> is being used. This information is already in the URL. So the root (before any <code>/api/</code>)\n  paths already contains that information.\n</app-info-box>\n\n<!-- Defining the Context -->\n<h2>How to get the Context</h2>\n<h3>How the Context is Defined</h3>\n<p>\n  The context always requires a <code>PageId</code> (in DNN it is hisorically called the <code>TabId</code>) and the <code>ModuleId</code>.\n  This lets the system look up the configuration for this module and figure out everything else.\n</p>\n\n<h3>Supplying Context in HTTP Headers (default)</h3>\n<p>\n  The standard behavior is to include the Context information in hidden <strong>HTTP headers</strong>.\n  This requires a bit more JavaScript code to attach the headers, but most of the APIs like the <code>$2sxc</code>\n  will do this automatically when used from within a 2sxc-App.\n  These are the context headers provided by $2sxc:\n</p>\n<ul>\n  <li>\n    <code>PageId</code> - this is the page we're on (number). <em>this header is new in v11.11</em>\n  </li>\n  <li>\n    <s><code>TabId</code></s> - <em>obsolete</em> this is also the page id (number). <em>just but for backward compatibility</em>\n  </li>\n  <li>\n    <code>ModuleId</code> - this is the module id (number)\n  </li>\n  <li>\n    <code>ContentBlockId</code> - this in an internal ID for working in inner-content (number). You will usually not care about this.\n  </li>\n</ul>\n\n<h3>Supplying Context as URL Parameters <code>?PageId=...</code></h3>\n<p>\n  The headers above (<code>PageId</code>, <code>ModuleId</code>) can also be added to the URL and will have the same effect.\n</p>\n\n<!-- Security -->\n<h2>Security Headers</h2>\n<p>\n  In addition to context headers, a request can also include <strong>Security</strong> headers:\n</p>\n<ol>\n  <li>\n    <code>RequestVerificationToken</code> - this is a crypto key to prove that the request originated from the\n    same site. It's only included in POST/PUT/DELETE but not GET requests.\n  </li>\n</ol>\n<p>\n  These are only used on <code>PUT</code>, <code>POST</code>, <code>DELETE</code> etc. but not on <code>GET</code> requests.\n</p>\n<app-info-box type=\"tip\">\n  This header is only usefull to verify that the request came from a real DNN page.\n  The 2sxc-api <code>$2sxc</code> will add this automatically for you, so you don't need to do anything if you use that.\n</app-info-box>\n","<ng-container *ngIf=\"templateVars$ | async as data\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Using REST with API <code>{{ data.webApi?.name }}</code></div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <!-- Template below this line -->\r\n\r\n  <div style=\"display: flex; flex-wrap: wrap;\">\r\n    <app-selector-with-help style=\"display: block; max-width: 100%;\" label=\"Choose Scenario\" [items]=\"scenarios\"\r\n      [value]=\"data.scenario.key\" (valueChange)=\"changeScenario($event)\">\r\n    </app-selector-with-help>\r\n\r\n    <mat-form-field color=\"accent\" style=\"width: 360px; max-width: calc(100% - 40px);\">\r\n      <mat-label>Select an Action on the Controller</mat-label>\r\n      <mat-select [value]=\"data.selected?.name\" (selectionChange)=\"updateAction($event.value)\">\r\n        <mat-option *ngFor=\"let action of data.details.actions\" [value]=\"action.name\">\r\n          {{ action.name }} ({{ action.verbs.join(', ') }})\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <!-- now the tabs -->\r\n\r\n  <mat-tab-group dynamicHeight color=\"accent\"\r\n    class=\"mat-tab-group-fit-height mat-tab-group-fancy-scrollbar default-fonts\">\r\n\r\n    <!-- Introduction -->\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Introduction\">\r\n        <mat-icon>emoji_objects</mat-icon>\r\n        <span>Introduction</span>\r\n      </div>\r\n\r\n      <app-dev-api-introduction [data]=\"data\"></app-dev-api-introduction>\r\n\r\n      <app-dev-rest-tab-introduction [data]=\"data\"></app-dev-rest-tab-introduction>\r\n    </mat-tab>\r\n\r\n    <!-- Absolute / Virtual URLs -->\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\"\r\n        [tippy]=\"(data.scenario.useVirtual ? 'Virtual ' : 'Absolute ') + 'REST URLs'\">\r\n        <!-- <mat-icon>code</mat-icon> -->\r\n        <mat-icon svgIcon=\"code-curly\"></mat-icon>\r\n        <span>Call {{ data.scenario.useVirtual ? 'Virtual' : 'Absolute' }} REST URLs</span>\r\n      </div>\r\n\r\n      <app-dev-rest-tab-examples-intro [data]=\"data\"></app-dev-rest-tab-examples-intro>\r\n\r\n      <!-- Show Params of this Action -->\r\n      <app-dev-rest-api-action-params [data]=\"data.selected\"></app-dev-rest-api-action-params>\r\n\r\n      <mat-accordion multi class=\"rest-urls-accordion\">\r\n        <mat-expansion-panel>\r\n\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <div>Specify Additional Test Parameters (Url / POST)</div>\r\n            </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n\r\n          <mat-panel-description style=\"display: block;\">\r\n            <div class=\"form-with-textarea\">\r\n              <mat-form-field appearance=\"standard\" color=\"accent\">\r\n                <mat-label>Additional Url Parameters</mat-label>\r\n                <input matInput placeholder=\"?id=27\" [value]=\"urlParams$.value\" (input)=\"updateParams($event)\">\r\n              </mat-form-field>\r\n              <mat-form-field appearance=\"standard\" color=\"accent\">\r\n                <mat-label>Post body</mat-label>\r\n                <textarea matInput [rows]=\"10\" placeholder=\"Placeholder\" [value]=\"urlParams$.value\"\r\n                  (input)=\"updateParams($event)\">\r\n                </textarea>\r\n              </mat-form-field>\r\n            </div>\r\n          </mat-panel-description>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n\r\n      <!-- REST Tab showing the urls and code snippets -->\r\n      <app-dev-rest-urls-and-code [data]=\"data\"></app-dev-rest-urls-and-code>\r\n    </mat-tab>\r\n\r\n    <!-- Permissions explained -->\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Permissions\">\r\n        <mat-icon>person</mat-icon>\r\n        <span>Permissions </span>\r\n      </div>\r\n      <app-dev-api-permissions [data]=\"data\"></app-dev-api-permissions>\r\n    </mat-tab>\r\n\r\n    <!-- HTTP Headers Explained -->\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"HTTP headers and auto\">\r\n        <mat-icon>perm_device_information</mat-icon>\r\n        <span>HTTP headers & &nbsp;<code>/auto/</code></span>\r\n      </div>\r\n      <app-dev-rest-tab-headers [data]=\"data\"></app-dev-rest-tab-headers>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</ng-container>\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { Component, HostBinding, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { filter, map, share, switchMap, take } from 'rxjs/operators';\r\nimport { DevRestBase } from '..';\r\nimport { AppDialogConfigService } from '../../app-administration/services';\r\nimport { SourceService } from '../../code-editor/services/source.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { GoToDevRest } from '../go-to-dev-rest';\r\nimport { generateWebApiCalls } from './api-samples';\r\nimport { DevRestApiTemplateVars } from './api-template-vars';\r\n\r\nconst pathToApi = 'app/{appname}/api/{controller}/{action}';\r\n\r\n@Component({\r\n  selector: 'app-dev-rest-api',\r\n  templateUrl: './api.component.html',\r\n  styleUrls: ['../dev-rest-all.scss', '../header-selector.scss'],\r\n})\r\nexport class DevRestApiComponent extends DevRestBase<DevRestApiTemplateVars> implements OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  /** action name to check for */\r\n  selectedActionName$ = new BehaviorSubject<string>(null);\r\n\r\n  /** Test values for url params */\r\n  urlParams$ = new BehaviorSubject<string>('');\r\n\r\n  constructor(\r\n    appDialogConfigService: AppDialogConfigService,\r\n    /** Context for this dialog. Used for appId, zoneId, tabId, etc. */\r\n    context: Context,\r\n    dnnContext: DnnContext,\r\n    dialogRef: MatDialogRef<DevRestApiComponent>,\r\n    router: Router,\r\n    route: ActivatedRoute,\r\n    private sourceService: SourceService,\r\n  ) {\r\n    super(appDialogConfigService, context, dialogRef, dnnContext, router, route, null);\r\n\r\n    const webApi$ = combineLatest([\r\n      this.route.paramMap.pipe(map(pm => pm.get(GoToDevRest.paramApiPath))),\r\n      this.sourceService.getWebApis(),\r\n    ]).pipe(map(([name, webApis]) => {\r\n      name = decodeURIComponent(name);\r\n      return webApis.find(w => w.path === name);\r\n    }));\r\n\r\n    const apiDetails$ = webApi$.pipe(\r\n      switchMap(webApi => this.sourceService.getWebApiDetails(webApi.path)),\r\n      share());\r\n    apiDetails$.pipe(take(1), filter(x => !!x?.actions?.length)).subscribe(x => this.selectedActionName$.next(x?.actions[0]?.name));\r\n    // apiDetails$.subscribe(x => console.log('details', x));\r\n\r\n    const selectedAction$ = combineLatest([apiDetails$, this.selectedActionName$])\r\n      .pipe(map(([details, name]) => details?.actions?.find(a => a.name === name)));\r\n\r\n    // Build Root Stream for the root folder\r\n    const root$ = combineLatest([webApi$, apiDetails$, selectedAction$, this.scenario$, this.dialogSettings$]).pipe(\r\n      map(([webApi, details, action, scenario, dialogSettings]) => {\r\n        console.log('webApi object', webApi);\r\n        const resolved = pathToApi\r\n          .replace('{appname}', scenario.inSameContext ? 'auto' : encodeURI(dialogSettings.Context.App.Folder))\r\n          .replace('/api/', `/${webApi.folder}/`)\r\n          .replace('{controller}', details.controller.replace(/controller/i, ''))\r\n          .replace('{action}', action.name);\r\n        return this.rootBasedOnScenario(resolved, scenario);\r\n      }),\r\n    );\r\n\r\n    this.templateVars$ = combineLatest([\r\n      combineLatest([webApi$, apiDetails$, selectedAction$, this.urlParams$, this.scenario$]),\r\n      combineLatest([root$, this.dialogSettings$]),\r\n    ])\r\n      .pipe(\r\n        map(([[webApi, details, selected, urlParams, scenario], [root, /* item, */ diag]]) => ({\r\n          ...this.buildBaseTemplateVars(webApi.name, webApi.path, diag, null, root, scenario),\r\n          webApi,\r\n          details,\r\n          selected,\r\n          permissionsHasAnonymous: true, // dummy value to prevent error being shown\r\n          apiCalls: generateWebApiCalls(dnnContext.$2sxc, scenario, context, root, urlParams, selected.verbs),\r\n        })),\r\n      );\r\n  }\r\n\r\n  updateParams(event: Event) {\r\n    this.urlParams$.next((event.target as HTMLInputElement).value);\r\n  }\r\n\r\n  updateAction(value: string) {\r\n    this.selectedActionName$.next(value);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AllScenarios, DevRestQueryTemplateVars } from '../..';\r\nimport { DevRestDataTemplateVars } from '../data-template-vars';\r\n\r\n@Component({\r\n  selector: 'app-dev-data-introduction',\r\n  templateUrl: './introduction.component.html',\r\n})\r\nexport class DevRestDataIntroductionComponent implements OnInit {\r\n\r\n  @Input() data: DevRestDataTemplateVars;\r\n\r\n  /** List of scenarios */\r\n  scenarios = AllScenarios;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>\n  To learn more about data you may want to read these <a href=\"https://docs.2sxc.org/index.html\" target=\"_blank\">docs</a>:\n</p>\n<ul>\n  <li><a href=\"https://docs.2sxc.org/basics/data/index.html\" target=\"_blank\">Data & Content-Types in 2sxc</a></li>\n  <li><a href=\"https://docs.2sxc.org/web-api/content-rest-web-api.html\" target=\"_blank\">Content REST API</a></li>\n</ul>\n","<h3>Permissions ({{ data.permissions.length }})</h3>\r\n<p>\r\n  This target <code>{{ data.name }}</code> has {{ data.permissions.length }} permissions\r\n  configured.\r\n  <button mat-icon-button tippy=\"Open permissions\" (click)=\"openPermissions()\">\r\n    <mat-icon [matBadge]=\"data.permissions.length\" matBadgeColor=\"accent\" matBadgeSize=\"small\"\r\n      *ngIf=\"data.permissions.length\">\r\n      person\r\n    </mat-icon>\r\n    <mat-icon *ngIf=\"!data.permissions.length\">person</mat-icon>\r\n  </button>\r\n</p>\r\n<p *ngIf=\"!data.permissions.length\" class=\"warning info-box\">\r\n  <mat-icon>warning</mat-icon>\r\n  Warning: you don't have any permissions configured. So only Super-Users (Host) will be able to use the API\r\n  endpoints.\r\n</p>\r\n\r\n<ag-grid-angular class=\"ag-theme-material\" [rowData]=\"data.permissions\" [modules]=\"modules\" [gridOptions]=\"gridOptions\"\r\n  [style.height]=\"(33 + data.permissions.length * 48) + 'px'\">\r\n</ag-grid-angular>\r\n\r\n<h4>Super-Users (Host) can use all Endpoints</h4>\r\n<p>\r\n  As a super-user you can always access these REST endpoints, so this will make development easy.\r\n  Just remember to change the content-type permissions when you publish your work to public pages.\r\n</p>\r\n\r\n<h4>Set permissions for visitors to use this</h4>\r\n<p>\r\n  To let JavaScript access the REST endpoints for normal users, you must set the permissions of the\r\n  content-type.\r\n  Usually you will just want to set it like <em>if user has view-permissions, let him read this\r\n    content-type</em>.\r\n  In rare cases (eg. JS based forms) you may also want to give it some write permissions. Just be careful.\r\n  If you give write permissions, you will usually <em>only</em> want to give create, but not edit.\r\n</p>\r\n\r\n<h4>Setting permissions for use outside of DNN</h4>\r\n<p>\r\n  When calling API endpoints from a DNN page you will usually use the <code>$2sxc</code> or the DNN\r\n  Services-Framework.\r\n  These automatically add some HTTP-Headers (see tab about HTTP Headers) which let DNN determine that the\r\n  API-Call\r\n  was made on a specific page/module - and DNN uses this to check the permissions.\r\n</p>\r\n<p>\r\n  IF you are calling the endpoint from outside of DNN then these headers will be missing.\r\n  Because of this, permissions saying \"If has VIEW permissions, allow read\" will fail - because DNN cannot\r\n  determine\r\n  if the user has view permissions.\r\n</p>\r\n<p>\r\n  So to enable use from external, the condition must be \"If has ANONYMOUS permissions, allow ...\".\r\n  Because the ANONYMOUS check passes even if DNN doesn't know what page the module is on.\r\n</p>\r\n","import { AllCommunityModules, GridOptions } from '@ag-grid-community/all-modules';\r\nimport { Component, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DevRestBaseTemplateVars } from '..';\r\nimport { Permission } from '../../permissions';\r\nimport { GoToPermissions } from '../../permissions/go-to-permissions';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\n\r\n@Component({\r\n  selector: 'app-dev-rest-tab-permissions',\r\n  templateUrl: './tab-permissions.component.html',\r\n})\r\nexport class DevRestTabPermissionsComponent {\r\n\r\n  @Input() data: DevRestBaseTemplateVars;\r\n\r\n  /** AgGrid modules */\r\n  modules = AllCommunityModules;\r\n  /** AgGrid options */\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'Id', width: 70, headerClass: 'dense', cellClass: 'no-padding no-outline'.split(' '),\r\n        valueGetter: (params) => (params.data as Permission).Id,\r\n      },\r\n      {\r\n        field: 'Name', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n        valueGetter: (params) => (params.data as Permission).Title,\r\n      },\r\n      {\r\n        field: 'Identity', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n        valueGetter: (params) => (params.data as Permission).Identity,\r\n      },\r\n      {\r\n        field: 'Condition', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n        valueGetter: (params) => (params.data as Permission).Condition,\r\n      },\r\n      {\r\n        field: 'Grant', width: 70, headerClass: 'dense', cellClass: 'no-outline',\r\n        valueGetter: (params) => (params.data as Permission).Grant,\r\n      },\r\n    ],\r\n  };\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  openPermissions() {\r\n    this.router.navigate([GoToPermissions.getUrlContentType(this.data.permissionTarget)], { relativeTo: this.route });\r\n  }\r\n}\r\n","<ng-container *ngIf=\"templateVars$ | async as data\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Using REST with Data of <code>{{ data.name }}</code></div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <app-selector-with-help label=\"Choose Scenario\" [items]=\"scenarios\" [value]=\"data.scenario.key\"\r\n    (valueChange)=\"changeScenario($event)\">\r\n  </app-selector-with-help>\r\n\r\n  <mat-tab-group dynamicHeight color=\"accent\"\r\n    class=\"mat-tab-group-fit-height mat-tab-group-fancy-scrollbar default-fonts\">\r\n\r\n    <!-- Introduction -->\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Introduction\">\r\n        <mat-icon>emoji_objects</mat-icon>\r\n        <span>Introduction</span>\r\n      </div>\r\n      <app-dev-data-introduction [data]=\"data\"></app-dev-data-introduction>\r\n\r\n      <app-dev-rest-tab-introduction [data]=\"data\"></app-dev-rest-tab-introduction>\r\n    </mat-tab>\r\n\r\n    <!-- Absolute / Virtual URLs -->\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\"\r\n        [tippy]=\"(data.scenario.useVirtual ? 'Virtual ' : 'Absolute ') + 'REST URLs'\">\r\n        <mat-icon svgIcon=\"code-curly\"></mat-icon>\r\n        <span>Call {{ data.scenario.useVirtual ? 'Virtual' : 'Absolute' }} REST URLs</span>\r\n      </div>\r\n\r\n      <app-dev-rest-tab-examples-intro [data]=\"data\"></app-dev-rest-tab-examples-intro>\r\n\r\n      <!-- REST Tab showing the urls and code snippets -->\r\n      <app-dev-rest-urls-and-code [data]=\"data\"></app-dev-rest-urls-and-code>\r\n    </mat-tab>\r\n\r\n    <!-- Permissions explained -->\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Permissions\">\r\n        <mat-icon>person</mat-icon>\r\n        <span>Permissions ({{ data.permissions.length }})</span>\r\n        <mat-icon *ngIf=\"!data.permissions.length\">warning</mat-icon>\r\n      </div>\r\n      <app-dev-rest-tab-permissions [data]=\"data\"></app-dev-rest-tab-permissions>\r\n    </mat-tab>\r\n\r\n    <!-- HTTP Headers Explained -->\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"HTTP headers and auto\">\r\n        <mat-icon>perm_device_information</mat-icon>\r\n        <span>HTTP headers & &nbsp;<code>/auto/</code></span>\r\n      </div>\r\n      <app-dev-rest-tab-headers [data]=\"data\"></app-dev-rest-tab-headers>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</ng-container>\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { Component, HostBinding, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { combineLatest } from 'rxjs';\r\nimport { filter, map, share, switchMap } from 'rxjs/operators';\r\nimport { generateApiCalls } from '..';\r\nimport { EntityInfo } from '../../../../../edit-types';\r\nimport { EntityService } from '../../../../../edit/shared/services';\r\nimport { AppDialogConfigService, ContentTypesService } from '../../app-administration/services';\r\nimport { PermissionsService } from '../../permissions';\r\nimport { Context } from '../../shared/services/context';\r\nimport { DevRestBase } from '../dev-rest-base.component';\r\nimport { GoToDevRest } from '../go-to-dev-rest';\r\nimport { DevRestDataTemplateVars } from './data-template-vars';\r\n\r\nconst pathToContent = 'app/{appname}/data/{typename}';\r\n\r\n@Component({\r\n  selector: 'app-dev-rest-data',\r\n  templateUrl: './data.component.html',\r\n  styleUrls: ['../dev-rest-all.scss'],\r\n  // we need preserve whitespace - otherwise spaces are missing in some conditional HTML\r\n  preserveWhitespaces: true,\r\n})\r\nexport class DevRestDataComponent extends DevRestBase<DevRestDataTemplateVars> implements OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  constructor(\r\n    dialogRef: MatDialogRef<DevRestDataComponent>,\r\n    router: Router,\r\n    route: ActivatedRoute,\r\n    contentTypesService: ContentTypesService,\r\n    appDialogConfigService: AppDialogConfigService,\r\n    permissionsService: PermissionsService,\r\n    entityService: EntityService,\r\n    /** Context for this dialog. Used for appId, zoneId, tabId, etc. */\r\n    context: Context,\r\n    /** dnn-sxc-angular context. Used to resolve urls */\r\n    dnnContext: DnnContext,\r\n  ) {\r\n    super(appDialogConfigService, context, dialogRef, dnnContext, router, route, permissionsService);\r\n\r\n    // Build ContentType Stream\r\n    const contentType$ = route.paramMap.pipe(\r\n      map(pm => pm.get(GoToDevRest.paramTypeName)),\r\n      switchMap(ctName => contentTypesService.retrieveContentType(ctName)),\r\n      share()\r\n    );\r\n\r\n    // Build Dialog Settings Stream\r\n    // Note: this is probably already loaded somewhere, so I'm not sure why we're getting it again\r\n    // const dialogSettings$ = appDialogConfigService.getDialogSettings().pipe(share());\r\n\r\n    this.permissions$ = this.buildPermissionStream(GoToDevRest.paramTypeName);\r\n\r\n    // Build Root Stream (for the root folder)\r\n    const root$ = combineLatest([contentType$, this.scenario$, this.dialogSettings$]).pipe(\r\n      map(([contentType, scenario, dialogSettings]) => {\r\n        const resolved = pathToContent\r\n          .replace('{typename}', contentType.Name)\r\n          .replace('{appname}', scenario.inSameContext ? 'auto' : encodeURI(dialogSettings.Context.App.Folder));\r\n        return this.rootBasedOnScenario(resolved, scenario);\r\n      }),\r\n    );\r\n\r\n    // Get an item of this type for building urls\r\n    const itemOfThisType$ = entityService.reactiveEntities(\r\n      contentType$.pipe(\r\n        filter(ct => !!ct),\r\n        map(ct => ({ contentTypeName: ct.StaticName })),\r\n      ),\r\n    ).pipe(\r\n      map(list => list.length\r\n        ? list[0]\r\n        // we need a dummy in case nothing is found, otherwise the observables stop\r\n        : { Id: 0, Value: 'no data found', Text: 'no data found' } as EntityInfo),\r\n    );\r\n\r\n    // Prepare everything for use in the template\r\n    // Note that we need to mix multiple combineLatest, because a combineLatest can only take 6 streams\r\n    this.templateVars$ = combineLatest([\r\n      combineLatest([contentType$, this.scenario$, this.permissions$]),\r\n      combineLatest([root$, itemOfThisType$, this.dialogSettings$]),\r\n    ]).pipe(\r\n      map(([[contentType, scenario, permissions], [root, item, diag]]) => ({\r\n        ...this.buildBaseTemplateVars(contentType.Name, contentType.StaticName, diag, permissions, root, scenario),\r\n        contentType,\r\n        itemId: item.Id,\r\n        itemGuid: item.Value,\r\n        apiCalls: generateApiCalls(dnnContext.$2sxc, scenario, context, root, item.Id),\r\n      })),\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const devRestDialog: DialogConfig = {\r\n  name: 'DEV_REST_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { DevRestEntryComponent } = await import('./entry/entry.component');\r\n    return DevRestEntryComponent;\r\n  }\r\n};\r\n","import { SxcRoot } from '@2sic.com/2sxc-typings';\r\nimport { ApiCall, CodeSample, hint$2sxc, Scenario, warningExternal } from '..';\r\nimport { Context } from '../../shared/services/context';\r\n// tslint:disable: curly\r\n\r\nexport function generateQueryCalls($2sxc: SxcRoot, scenario: Scenario, context: Context, root: string, id: number,\r\n  streamNames: string, urlParams: string) {\r\n  const virtual = root[0] !== '/' && !root.startsWith('http');\r\n\r\n  // if urlParams exist and it doesn't starts with a ?, add that\r\n  if (urlParams && urlParams.length && urlParams[0] !== '?')\r\n    urlParams = '?' + urlParams;\r\n\r\n  const contextParams = virtual\r\n    ? `${urlParams}${urlParams ? '&' : '?'}PageId=${context.tabId}&ModuleId=${context.moduleId}`\r\n    : '';\r\n  const directUrl = $2sxc.http.apiUrl(root) + contextParams;\r\n  // const directWId = $2sxc.http.apiUrl(withId) + contextParams;\r\n  const pathWithParams = root + urlParams;\r\n  const pathWithStream = `${root}/${streamNames ?? 'Default'}${urlParams}`;\r\n\r\n  return [\r\n    new ApiCall(virtual, 'GET', pathWithParams, 'read all query streams', 'Read list of all items', true,\r\n      snippetsGet(scenario, pathWithParams, context), directUrl),\r\n\r\n    new ApiCall(virtual, 'GET', pathWithStream, 'read only Stream Default', 'Read list of all items', true,\r\n      snippetsGet(scenario, pathWithStream, context), directUrl),\r\n\r\n    // #todoquery 2dm\r\n    // 1. later sample with IDs\r\n    // 1. later maybe sample with guids, but not certain because it's kind of an unexpected opening\r\n  ];\r\n}\r\n\r\nfunction snippetsGet(scenario: Scenario, path: string, context: Context, streamNames?: string): CodeSample[] {\r\n  const moduleId = context.moduleId;\r\n  const virtual = path[0] !== '/';\r\n  const list: CodeSample[] = [];\r\n  const pathWithContext = `${path}?PageId=${context.tabId}&ModuleId=${context.moduleId}`;\r\n\r\n  if (scenario.inSameContext)\r\n    list.push(new CodeSample('Example with global $2sxc and event-context',\r\n      'This example finds the context information from the HTML where an action started.',\r\n      `\r\n<button onclick=\"$2sxc(this).webApi.get('${path}').then(data => console.log(data))\">\r\n  get it\r\n</button>`, false, [hint$2sxc]));\r\n\r\n  if (scenario.in2sxc)\r\n    list.push(new CodeSample(`Example with global $2sxc and a Module-Id ${moduleId}`,\r\n      `This is how you get the context when your code doesn't start with a DOM context, so you need the moduleId.`,\r\n      `\r\n// get the sxc-controller for this module\r\nvar sxc = $2sxc(${moduleId});\r\n// now get the data in the promise\r\nsxc.webApi.get('${path}')\r\n  .then(data => {\r\n    console.log(data)\r\n  });`,\r\n      false, [hint$2sxc]),\r\n      new CodeSample(`Same example as one-liner`,\r\n        'This is the same as above, but as a one-liner so you can run it directly in the F12 console right now.',\r\n        `$2sxc(${moduleId}).webApi.get('${path}').then(data => console.log('just got:', data));`, true));\r\n\r\n  if (scenario.in2sxc && scenario.inSameContext)\r\n    list.push(new CodeSample('Example where you get the Module-Id from Razor',\r\n      `This example doesn't use a fixed moduleId but let's the Razor add the current moduleId when the page is rendered.`,\r\n      `\r\n// this will be replaced on the server with the ID\r\nvar moduleId = @Dnn.Module.ModuleID;\r\nvar sxc = $2sxc(moduleId);\r\nvar promise = sxc.webApi.get('${path}');`, false, [hint$2sxc]));\r\n\r\n  // jquery examples, they differ based on the scenario\r\n  const endPointGetter = virtual ? `$2sxc.http.apiUrl('${path}')` : `'${path}'`;\r\n  const endPointGetWithParams = virtual ? `$2sxc.http.apiUrl('${pathWithContext}')` : `'${pathWithContext}'`;\r\n  if (scenario.inSameSite) {\r\n    // jQuery using setModuleHeaders\r\n    list.push(new CodeSample('Using jQuery inside DNN',\r\n      `This example uses jQuery instead of the $2sxc to do the AJAX call.\r\n      It shows you how to resolve the virtual path for use in other ways.`,\r\n      `\r\nvar endpoint = ${endPointGetter};\r\n$.ajax({\r\n  url:endpoint,\r\n  beforeSend: $.dnnSF(${moduleId}).setModuleHeaders\r\n}).then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, []));\r\n\r\n    // jQuery Single-Liner\r\n    list.push(new CodeSample('Using jQuery as single-liner',\r\n      `The same example as above, just as single-liner so you can test it directly in the F12 console.\r\n      This will only work if you're on a DNN page with this module.`,\r\n      `$.ajax({url: ${endPointGetter}, beforeSend: $.dnnSF(${moduleId}).setModuleHeaders }).then(data => console.log(data))`,\r\n      false, []));\r\n\r\n    // jQuery without setModuleHeaders\r\n    list.push(new CodeSample('Using jQuery and add Context in URL',\r\n      `This example uses jQuery instead of the $2sxc to do the AJAX call.\r\n      But instead of using the DNN Services Framework it adds relevant headers to the url.`,\r\n      `\r\n$.ajax(${endPointGetWithParams}).then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, []));\r\n\r\n    // jQuery Single-Liner without SetModuleHeaders\r\n    list.push(new CodeSample('Using jQuery with url-context as single-liner',\r\n      `The same example as above, just as single-liner so you can test it directly in the F12 console.\r\n      This will work on a DNN page which has jQuery activated. `,\r\n      `$.ajax(${endPointGetWithParams}).then(data => console.log(data))`,\r\n      false, []));\r\n\r\n  } else {\r\n    // jQuery External\r\n    list.push(new CodeSample('Using jQuery in another Site or External',\r\n      `This example uses jQuery and doesn't use $2sxc or the DNN ServicesFramework,\r\n      because they would be either missing, or give wrong context-headers.`,\r\n      `\r\n$.ajax('${path}').then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, [warningExternal]));\r\n\r\n    // jQuery External with Context\r\n    list.push(new CodeSample('Using jQuery with Context in URL',\r\n      `This example uses jQuery and includes a module-context. This is unusual for external access, but may be needed sometime.`,\r\n      `\r\n$.ajax('${pathWithContext}').then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, [warningExternal]));\r\n  }\r\n  // return generated snippets\r\n  return list;\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AllScenarios, DevRestQueryTemplateVars } from '../..';\r\n\r\n@Component({\r\n  selector: 'app-dev-query-introduction',\r\n  templateUrl: './introduction.component.html',\r\n})\r\nexport class DevRestQueryIntroductionComponent implements OnInit {\r\n\r\n  @Input() data: DevRestQueryTemplateVars;\r\n\r\n  /** List of scenarios */\r\n  scenarios = AllScenarios;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>\n  To learn more about queries you may want to read these <a href=\"https://docs.2sxc.org/index.html\" target=\"_blank\">docs</a>:\n</p>\n<ul>\n  <li><a href=\"https://docs.2sxc.org/basics/query/index.html\" target=\"_blank\">Queries in 2sxc</a></li>\n  <li><a href=\"https://docs.2sxc.org/web-api/query-rest-web-api.html\" target=\"_blank\">Query REST API</a></li>\n</ul>\n","<ng-container *ngIf=\"templateVars$ | async as data\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Using REST with Query <code>{{ data.name }}</code></div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <!-- Template below this line -->\r\n\r\n  <app-selector-with-help label=\"Choose Scenario\" [items]=\"scenarios\" [value]=\"data.scenario.key\"\r\n    (valueChange)=\"changeScenario($event)\">\r\n  </app-selector-with-help>\r\n\r\n  <mat-tab-group dynamicHeight color=\"accent\"\r\n    class=\"mat-tab-group-fit-height mat-tab-group-fancy-scrollbar default-fonts\">\r\n\r\n    <!-- Introduction -->\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Introduction\">\r\n        <mat-icon>emoji_objects</mat-icon>\r\n        <span>Introduction</span>\r\n      </div>\r\n\r\n      <app-dev-query-introduction [data]=\"data\"></app-dev-query-introduction>\r\n\r\n      <app-dev-rest-tab-introduction [data]=\"data\"></app-dev-rest-tab-introduction>\r\n    </mat-tab>\r\n\r\n    <!-- Absolute / Virtual URLs -->\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\"\r\n        [tippy]=\"(data.scenario.useVirtual ? 'Virtual ' : 'Absolute ') + 'REST URLs'\">\r\n        <mat-icon svgIcon=\"code-curly\"></mat-icon>\r\n        <span>Call {{ data.scenario.useVirtual ? 'Virtual' : 'Absolute' }} REST URLs</span>\r\n      </div>\r\n\r\n      <app-dev-rest-tab-examples-intro [data]=\"data\"></app-dev-rest-tab-examples-intro>\r\n\r\n      <!-- Custom Parameters for calling -->\r\n      <div class=\"params-form\">\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Stream Name(s) to Limit, comma-separated</mat-label>\r\n          <input matInput placeholder=\"Default\" [value]=\"streamNames$.value\" (input)=\"updateStreams($event)\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Additional Url Parameters</mat-label>\r\n          <input matInput placeholder=\"?id=27\" [value]=\"urlParams$.value\" (input)=\"updateParams($event)\">\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <!-- REST Tab showing the urls and code snippets -->\r\n      <app-dev-rest-urls-and-code [data]=\"data\"></app-dev-rest-urls-and-code>\r\n    </mat-tab>\r\n\r\n    <!-- Permissions explained -->\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Permissions\">\r\n        <mat-icon>person</mat-icon>\r\n        <span>Permissions ({{ data.permissions.length }})</span>\r\n        <mat-icon *ngIf=\"!data.permissions.length\">warning</mat-icon>\r\n      </div>\r\n      <app-dev-rest-tab-permissions [data]=\"data\"></app-dev-rest-tab-permissions>\r\n    </mat-tab>\r\n\r\n    <!-- HTTP Headers Explained -->\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"HTTP headers and auto\">\r\n        <mat-icon>perm_device_information</mat-icon>\r\n        <span>HTTP headers & &nbsp;<code>/auto/</code></span>\r\n      </div>\r\n      <app-dev-rest-tab-headers [data]=\"data\"></app-dev-rest-tab-headers>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n\r\n</ng-container>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { GoToPermissions } from '../permissions/go-to-permissions';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { DevRestApiComponent } from './api/api.component';\r\nimport { DevRestDataComponent } from './data/data.component';\r\nimport { devRestDialog } from './dev-rest-dialog.config';\r\nimport { GoToDevRest } from './go-to-dev-rest';\r\nimport { DevRestQueryComponent } from './query/query.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: devRestDialog, title: 'REST API' }, children: [\r\n      {\r\n        path: `data/:${GoToDevRest.paramTypeName}`, component: DevRestDataComponent, children: [\r\n          GoToPermissions.route,\r\n        ]\r\n      },\r\n      {\r\n        path: `query/:${GoToDevRest.paramQuery}`, component: DevRestQueryComponent, children: [\r\n          GoToPermissions.route,\r\n        ]\r\n      },\r\n      { path: `custom/:${GoToDevRest.paramApiPath}`, component: DevRestApiComponent },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DevRestRoutingModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { Component, HostBinding, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { map, share } from 'rxjs/operators';\r\nimport { GoToDevRest } from '..';\r\nimport { AppDialogConfigService, PipelinesService } from '../../app-administration/services';\r\nimport { PermissionsService } from '../../permissions';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { DevRestBase } from '../dev-rest-base.component';\r\nimport { generateQueryCalls } from './query-samples';\r\nimport { DevRestQueryTemplateVars } from './query-template-vars';\r\n\r\nconst pathToQuery = 'app/{appname}/query/{queryname}';\r\n\r\n@Component({\r\n  selector: 'app-dev-rest-query',\r\n  templateUrl: './query.component.html',\r\n  styleUrls: [/*'./query.component.scss',*/ '../dev-rest-all.scss'],\r\n})\r\nexport class DevRestQueryComponent extends DevRestBase<DevRestQueryTemplateVars> implements OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  /** Test values for url params */\r\n  urlParams$ = new BehaviorSubject<string>('');\r\n\r\n  /** Test values for stream names */\r\n  streamNames$ = new BehaviorSubject<string>('Default');\r\n\r\n  constructor(\r\n    appDialogConfigService: AppDialogConfigService,\r\n    /** Context for this dialog. Used for appId, zoneId, tabId, etc. */\r\n    context: Context,\r\n    dialogRef: MatDialogRef<DevRestQueryComponent>,\r\n    router: Router,\r\n    route: ActivatedRoute,\r\n    pipelinesService: PipelinesService,\r\n    permissionsService: PermissionsService,\r\n    dnnContext: DnnContext,\r\n  ) {\r\n    super(appDialogConfigService, context, dialogRef, dnnContext, router, route, permissionsService);\r\n\r\n    // build Query Stream\r\n    const query$ = combineLatest([\r\n      route.paramMap.pipe(map(pm => pm.get(GoToDevRest.paramQuery))),\r\n      pipelinesService.getAll(eavConstants.contentTypes.query).pipe(share()),\r\n    ]).pipe(\r\n      map(([queryGuid, all]) => all.find(q => q.Guid === queryGuid)),\r\n      share()\r\n    );\r\n\r\n    this.permissions$ = this.buildPermissionStream(GoToDevRest.paramQuery);\r\n\r\n    // Build Root Stream (for the root folder)\r\n    const root$ = combineLatest([query$, this.scenario$, this.dialogSettings$]).pipe(\r\n      map(([query, scenario, dialogSettings]) => {\r\n        const resolved = pathToQuery\r\n          .replace('{queryname}', query.Name)\r\n          .replace('{appname}', scenario.inSameContext ? 'auto' : encodeURI(dialogSettings.Context.App.Folder));\r\n        return this.rootBasedOnScenario(resolved, scenario);\r\n      }),\r\n    );\r\n\r\n    // build variables for template\r\n    this.templateVars$ = combineLatest([\r\n      combineLatest([query$, this.scenario$, this.permissions$]),\r\n      combineLatest([root$, /* itemOfThisType$, */ this.dialogSettings$]),\r\n      combineLatest([this.streamNames$, this.urlParams$])\r\n    ]).pipe(\r\n      map(([[query, scenario, permissions], [root, diag], [streamNames, urlParams]]) => ({\r\n        ...this.buildBaseTemplateVars(query.Name, query.Guid, diag, permissions, root, scenario),\r\n        query,\r\n        apiCalls: generateQueryCalls(dnnContext.$2sxc, scenario, context, root, 0 /* #todoquery */, streamNames, urlParams),\r\n      })),\r\n    );\r\n  }\r\n\r\n  updateStreams(event: Event) {\r\n    this.streamNames$.next((event.target as HTMLInputElement).value);\r\n  }\r\n  updateParams(event: Event) {\r\n    this.urlParams$.next((event.target as HTMLInputElement).value);\r\n  }\r\n\r\n}\r\n","import { AgGridModule } from '@ag-grid-community/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { HelpPopupComponent, SelectorWithHelpComponent } from '.';\r\nimport { EavService, EntityService } from '../../../../edit/shared/services';\r\nimport { PipelinesService } from '../app-administration/services';\r\nimport { AppDialogConfigService } from '../app-administration/services/app-dialog-config.service';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { SourceService } from '../code-editor/services/source.service';\r\nimport { EntitiesService } from '../content-items/services/entities.service';\r\nimport { MetadataService } from '../permissions/services/metadata.service';\r\nimport { PermissionsService } from '../permissions/services/permissions.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { DevRestApiActionParamsComponent } from './api/action-params/action-params.component';\r\nimport { TrueFalseComponent } from './api/action-params/true-false.component';\r\nimport { DevRestApiComponent } from './api/api.component';\r\nimport { DevRestApiIntroductionComponent } from './api/introduction/introduction.component';\r\nimport { DevRestApiPermissionsComponent } from './api/permissions/permissions.component';\r\nimport { DevRestDataComponent } from './data/data.component';\r\nimport { DevRestDataIntroductionComponent } from './data/introduction/introduction.component';\r\nimport { DevRestRoutingModule } from './dev-rest-routing.module';\r\nimport { DevRestUrlsAndCodeComponent } from './dev-rest-urls-and-code/dev-rest-urls-and-code.component';\r\nimport { DevRestEntryComponent } from './entry/entry.component';\r\nimport { InfoBoxComponent } from './info-box/info-box.component';\r\nimport { DevRestQueryIntroductionComponent } from './query/introduction/introduction.component';\r\nimport { DevRestQueryComponent } from './query/query.component';\r\nimport { DevRestTabExamplesComponent } from './tab-examples/tab-examples.component';\r\nimport { DevRestHttpHeadersComponent } from './tab-headers/tab-headers.component';\r\nimport { DevRestTabIntroductionComponent } from './tab-introduction/tab-introduction.component';\r\nimport { DevRestTabPermissionsComponent } from './tab-permissions/tab-permissions.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DevRestEntryComponent,\r\n\r\n    InfoBoxComponent,\r\n    DevRestUrlsAndCodeComponent,\r\n    SelectorWithHelpComponent,\r\n    HelpPopupComponent,\r\n    DevRestHttpHeadersComponent,\r\n    DevRestTabPermissionsComponent,\r\n    DevRestTabIntroductionComponent,\r\n    DevRestTabExamplesComponent,\r\n\r\n    // Data\r\n    DevRestDataComponent,\r\n    DevRestDataIntroductionComponent,\r\n\r\n    // Query\r\n    DevRestQueryComponent,\r\n    DevRestQueryIntroductionComponent,\r\n\r\n    // Custom WebAPIs\r\n    DevRestApiComponent,\r\n    DevRestApiIntroductionComponent,\r\n    DevRestApiActionParamsComponent,\r\n    TrueFalseComponent,\r\n    DevRestApiPermissionsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DevRestRoutingModule,\r\n    SharedComponentsModule,\r\n    FormsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatSnackBarModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatTabsModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatExpansionModule,\r\n    AgGridModule.withComponents([]),\r\n    MatBadgeModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    ContentTypesService,\r\n    AppDialogConfigService,\r\n    PermissionsService,\r\n    MetadataService,\r\n    EntitiesService,\r\n    EntityService,\r\n    PipelinesService,\r\n    EavService,\r\n    SourceService,\r\n  ],\r\n})\r\nexport class DevRestModule { }\r\n","import * as i0 from '@angular/core';\nimport { Directive, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\nlet nextId = 0;\n// Boilerplate for applying mixins to MatBadge.\n/** @docs-private */\nconst _MatBadgeBase = mixinDisabled(class {\n});\nconst BADGE_CONTENT_CLASS = 'mat-badge-content';\n/** Directive to display a text badge. */\nclass MatBadge extends _MatBadgeBase {\n    constructor(_ngZone, _elementRef, _ariaDescriber, _renderer, _animationMode) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        this._renderer = _renderer;\n        this._animationMode = _animationMode;\n        this._color = 'primary';\n        this._overlap = true;\n        /**\n         * Position the badge should reside.\n         * Accepts any combination of 'above'|'below' and 'before'|'after'\n         */\n        this.position = 'above after';\n        /** Size of the badge. Can be 'small', 'medium', or 'large'. */\n        this.size = 'medium';\n        /** Unique id for the badge */\n        this._id = nextId++;\n        /** Whether the OnInit lifecycle hook has run yet */\n        this._isInitialized = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const nativeElement = _elementRef.nativeElement;\n            if (nativeElement.nodeType !== nativeElement.ELEMENT_NODE) {\n                throw Error('matBadge must be attached to an element node.');\n            }\n        }\n    }\n    /** The color of the badge. Can be `primary`, `accent`, or `warn`. */\n    get color() {\n        return this._color;\n    }\n    set color(value) {\n        this._setColor(value);\n        this._color = value;\n    }\n    /** Whether the badge should overlap its contents or not */\n    get overlap() {\n        return this._overlap;\n    }\n    set overlap(val) {\n        this._overlap = coerceBooleanProperty(val);\n    }\n    /** The content for the badge */\n    get content() {\n        return this._content;\n    }\n    set content(newContent) {\n        this._updateRenderedContent(newContent);\n    }\n    /** Message used to describe the decorated element via aria-describedby */\n    get description() {\n        return this._description;\n    }\n    set description(newDescription) {\n        this._updateHostAriaDescription(newDescription);\n    }\n    /** Whether the badge is hidden. */\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(val) {\n        this._hidden = coerceBooleanProperty(val);\n    }\n    /** Whether the badge is above the host or not */\n    isAbove() {\n        return this.position.indexOf('below') === -1;\n    }\n    /** Whether the badge is after the host or not */\n    isAfter() {\n        return this.position.indexOf('before') === -1;\n    }\n    /**\n     * Gets the element into which the badge's content is being rendered. Undefined if the element\n     * hasn't been created (e.g. if the badge doesn't have content).\n     */\n    getBadgeElement() {\n        return this._badgeElement;\n    }\n    ngOnInit() {\n        // We may have server-side rendered badge that we need to clear.\n        // We need to do this in ngOnInit because the full content of the component\n        // on which the badge is attached won't necessarily be in the DOM until this point.\n        this._clearExistingBadges();\n        if (this.content && !this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n            this._updateRenderedContent(this.content);\n        }\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        // ViewEngine only: when creating a badge through the Renderer, Angular remembers its index.\n        // We have to destroy it ourselves, otherwise it'll be retained in memory.\n        if (this._renderer.destroyNode) {\n            this._renderer.destroyNode(this._badgeElement);\n        }\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.description);\n    }\n    /** Creates the badge element */\n    _createBadgeElement() {\n        const badgeElement = this._renderer.createElement('span');\n        const activeClass = 'mat-badge-active';\n        badgeElement.setAttribute('id', `mat-badge-content-${this._id}`);\n        // The badge is aria-hidden because we don't want it to appear in the page's navigation\n        // flow. Instead, we use the badge to describe the decorated element with aria-describedby.\n        badgeElement.setAttribute('aria-hidden', 'true');\n        badgeElement.classList.add(BADGE_CONTENT_CLASS);\n        if (this._animationMode === 'NoopAnimations') {\n            badgeElement.classList.add('_mat-animation-noopable');\n        }\n        this._elementRef.nativeElement.appendChild(badgeElement);\n        // animate in after insertion\n        if (typeof requestAnimationFrame === 'function' && this._animationMode !== 'NoopAnimations') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    badgeElement.classList.add(activeClass);\n                });\n            });\n        }\n        else {\n            badgeElement.classList.add(activeClass);\n        }\n        return badgeElement;\n    }\n    /** Update the text content of the badge element in the DOM, creating the element if necessary. */\n    _updateRenderedContent(newContent) {\n        const newContentNormalized = `${newContent !== null && newContent !== void 0 ? newContent : ''}`.trim();\n        // Don't create the badge element if the directive isn't initialized because we want to\n        // append the badge element to the *end* of the host element's content for backwards\n        // compatibility.\n        if (this._isInitialized && newContentNormalized && !this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n        }\n        if (this._badgeElement) {\n            this._badgeElement.textContent = newContentNormalized;\n        }\n        this._content = newContentNormalized;\n    }\n    /** Updates the host element's aria description via AriaDescriber. */\n    _updateHostAriaDescription(newDescription) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.description);\n        if (newDescription) {\n            this._ariaDescriber.describe(this._elementRef.nativeElement, newDescription);\n        }\n        this._description = newDescription;\n    }\n    /** Adds css theme class given the color to the component host */\n    _setColor(colorPalette) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-badge-${this._color}`);\n        if (colorPalette) {\n            classList.add(`mat-badge-${colorPalette}`);\n        }\n    }\n    /** Clears any existing badges that might be left over from server-side rendering. */\n    _clearExistingBadges() {\n        // Only check direct children of this host element in order to avoid deleting\n        // any badges that might exist in descendant elements.\n        const badges = this._elementRef.nativeElement.querySelectorAll(`:scope > .${BADGE_CONTENT_CLASS}`);\n        for (const badgeElement of Array.from(badges)) {\n            if (badgeElement !== this._badgeElement) {\n                badgeElement.remove();\n            }\n        }\n    }\n}\nMatBadge.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatBadge, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i1.AriaDescriber }, { token: i0.Renderer2 }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatBadge.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: MatBadge, selector: \"[matBadge]\", inputs: { disabled: [\"matBadgeDisabled\", \"disabled\"], color: [\"matBadgeColor\", \"color\"], overlap: [\"matBadgeOverlap\", \"overlap\"], position: [\"matBadgePosition\", \"position\"], content: [\"matBadge\", \"content\"], description: [\"matBadgeDescription\", \"description\"], size: [\"matBadgeSize\", \"size\"], hidden: [\"matBadgeHidden\", \"hidden\"] }, host: { properties: { \"class.mat-badge-overlap\": \"overlap\", \"class.mat-badge-above\": \"isAbove()\", \"class.mat-badge-below\": \"!isAbove()\", \"class.mat-badge-before\": \"!isAfter()\", \"class.mat-badge-after\": \"isAfter()\", \"class.mat-badge-small\": \"size === \\\"small\\\"\", \"class.mat-badge-medium\": \"size === \\\"medium\\\"\", \"class.mat-badge-large\": \"size === \\\"large\\\"\", \"class.mat-badge-hidden\": \"hidden || !content\", \"class.mat-badge-disabled\": \"disabled\" }, classAttribute: \"mat-badge\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatBadge, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matBadge]',\n                    inputs: ['disabled: matBadgeDisabled'],\n                    host: {\n                        'class': 'mat-badge',\n                        '[class.mat-badge-overlap]': 'overlap',\n                        '[class.mat-badge-above]': 'isAbove()',\n                        '[class.mat-badge-below]': '!isAbove()',\n                        '[class.mat-badge-before]': '!isAfter()',\n                        '[class.mat-badge-after]': 'isAfter()',\n                        '[class.mat-badge-small]': 'size === \"small\"',\n                        '[class.mat-badge-medium]': 'size === \"medium\"',\n                        '[class.mat-badge-large]': 'size === \"large\"',\n                        '[class.mat-badge-hidden]': 'hidden || !content',\n                        '[class.mat-badge-disabled]': 'disabled',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i1.AriaDescriber }, { type: i0.Renderer2 }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { color: [{\n                type: Input,\n                args: ['matBadgeColor']\n            }], overlap: [{\n                type: Input,\n                args: ['matBadgeOverlap']\n            }], position: [{\n                type: Input,\n                args: ['matBadgePosition']\n            }], content: [{\n                type: Input,\n                args: ['matBadge']\n            }], description: [{\n                type: Input,\n                args: ['matBadgeDescription']\n            }], size: [{\n                type: Input,\n                args: ['matBadgeSize']\n            }], hidden: [{\n                type: Input,\n                args: ['matBadgeHidden']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatBadgeModule {\n}\nMatBadgeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatBadgeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatBadgeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatBadgeModule, declarations: [MatBadge], imports: [A11yModule, MatCommonModule], exports: [MatBadge, MatCommonModule] });\nMatBadgeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatBadgeModule, imports: [[A11yModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatBadgeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, MatCommonModule],\n                    exports: [MatBadge, MatCommonModule],\n                    declarations: [MatBadge],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatBadge, MatBadgeModule };\n"],"sourceRoot":"webpack:///","file":"projects_ng-dialogs_src_app_dev-rest_dev-rest_module_ts.c0d72239a62334bf.js"}