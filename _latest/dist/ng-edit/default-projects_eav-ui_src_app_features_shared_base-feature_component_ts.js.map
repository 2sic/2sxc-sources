{"version":3,"file":"default-projects_eav-ui_src_app_features_shared_base-feature_component_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts","./projects/eav-ui/src/app/shared/services/clipboard.service.ts"],"sourcesContent":["import { Component, Inject, input, Optional } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { transient } from '../../../../../../core/transient';\r\nimport { SafeHtmlPipe } from '../../../shared/pipes/safe-html.pipe';\r\nimport { ClipboardService } from '../../../shared/services/clipboard.service';\r\nimport { computedObj } from '../../../shared/signals/signal.utilities';\r\nimport { FeatureDetailsDialogData } from './feature-details-dialog.models';\r\n\r\n@Component({\r\n    selector: 'app-feature-details-dialog',\r\n    templateUrl: './feature-details-dialog.component.html',\r\n    imports: [\r\n        MatCardModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        SafeHtmlPipe,\r\n        TranslateModule,\r\n    ]\r\n})\r\nexport class FeatureDetailsDialogComponent {\r\n  specs = input<FeatureDetailsDialogData>();\r\n\r\n  constructor(\r\n    @Optional() @Inject(MAT_DIALOG_DATA) private dialogSpecs: FeatureDetailsDialogData,\r\n    protected dialog: MatDialogRef<FeatureDetailsDialogComponent>,\r\n  ) { }\r\n\r\n  protected mySpecs = computedObj('mySpecs', () =>  this.specs() ?? this.dialogSpecs );\r\n  protected feature = computedObj('feature', () => this.mySpecs()?.feature);\r\n  protected clipboard = transient(ClipboardService);\r\n}\r\n","@if (feature()) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ feature().name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"feature().description | safeHtml\"></p>\r\n      <!-- Name ID -->\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">ID:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span (click)=\"clipboard.copyToClipboard(feature().nameId)\">{{ feature().nameId }}</span>\r\n        </div>\r\n      </div>\r\n      <!-- Status -->\r\n      @if (mySpecs().showStatus) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">{{ 'Features.Status' | translate }}:</div>\r\n          <div class=\"eav-info-row__value\">\r\n            <span>{{ (feature().isEnabled ? 'Features.Active' : 'Features.NotActive') | translate }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n      <!-- GUID -->\r\n      @if (mySpecs().showGuid) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">GUID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span (click)=\"clipboard.copyToClipboard(feature().guid)\">{{ feature().guid }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n      <!-- Security Rating -->\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">Security Rating:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ feature().security.Impact + ': ' + feature().security.Message }}</span>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      <a [href]=\"feature().link\" target=\"_blank\" mat-raised-button class=\"eav-card-action-button\" color=\"accent\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        Find out more\r\n      </a>\r\n      @if (mySpecs().showClose != false) {\r\n        <button mat-raised-button class=\"eav-card-action-button\" (click)=\"dialog.close()\">Close</button>\r\n      }\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}\r\n","import { Component, Inject, OnInit, signal } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { transient } from \"projects/core\";\r\nimport { FeatureDetailsDialogComponent } from \"../../apps-management/licence-info/feature-details-dialog/feature-details-dialog.component\";\r\nimport { ClipboardService } from \"../../shared/services/clipboard.service\";\r\nimport { FeatureDetailService } from \"../services/feature-detail.service\";\r\n\r\n@Component({\r\n    selector: 'app-feature-info-dialog',\r\n    templateUrl: './feature-info-dialog.component.html',\r\n    imports: [\r\n        FeatureDetailsDialogComponent\r\n    ]\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  #featureDetailSvc = transient(FeatureDetailService);\r\n  featureId = signal<string>('');\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    protected dialog: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.featureId.set(this.route.snapshot.data['featureId'] || this.dialogData || '');\r\n    this.featureDetails = this.#featureDetailSvc.getFeatureDetail(this.featureId());\r\n  }\r\n\r\n  protected featureDetails: any;\r\n  protected clipboard = transient(ClipboardService);\r\n}\r\n","@if (featureDetails(); as feature) {\r\n  <app-feature-details-dialog [specs]=\"{ feature: feature, showGuid: false, showStatus: true, showClose: true }\"></app-feature-details-dialog>\r\n}\r\n","import { Injectable, signal, Signal } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Feature } from '../models';\r\n\r\nconst webApiFeatureDetails = \"admin/feature/details\";\r\n\r\n@Injectable()\r\nexport class FeatureDetailService extends HttpServiceBase {\r\n\r\n  getFeatureDetail(nameId: string): Signal<Feature> {\r\n    return this.getSignal<Feature>(webApiFeatureDetails, {\r\n      params: { nameId }\r\n    });\r\n  }\r\n\r\n  getFeatureDetails(nameIds: string[]): Signal<Feature[]> {\r\n    const featureList = signal<Feature[]>([]);\r\n    for (const nameId of nameIds) {\r\n      this.xx(nameId).subscribe(feature => {\r\n        featureList.update(prev => [...prev, feature]);\r\n      });\r\n    }\r\n    return featureList;\r\n  }\r\n\r\n  // TODO: Daniel fragen, getFeatureDetails(nameIds: string[]) ist nicht korrekt\r\n  // getFeatureDetails(nameIds: string[]): Signal<Feature[]> {\r\n  //   console.log('getFeatureDetails', nameIds);\r\n  //   const featureList = signal<Feature[]>([]);\r\n  //   for (const nameId of nameIds) {\r\n  //   console.log('getFeatureDetails', nameId);\r\n\r\n\r\n  //     const x = this.getFeatureDetail(nameId) ;\r\n  //     featureList.update(prev => [...prev, x()]);\r\n  //   }\r\n  //   return featureList;\r\n  // }\r\n\r\n  // Remove later\r\n  xx(nameId: string): Observable<Feature> {\r\n    return this.getHttpApiUrl<Feature>(webApiFeatureDetails, {\r\n      params: { nameId }\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Directive, ViewContainerRef, inject, input } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { computedObj } from '../../shared/signals/signal.utilities';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { FeaturesScopedService } from '../features-scoped.service';\r\n\r\n/**\r\n * Base component for various UI components which inform that a feature is not enabled.\r\n * It's meant to show the indicator/warning, and open a dialog with more information about the feature.\r\n */\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n\r\n  /** Feature NameId to check */\r\n  featureNameId = input.required<string>();\r\n\r\n  /** When to show it - typically when it is _not_ enabled (default) */\r\n  showIf = input<boolean>(false);\r\n\r\n  #matDialog = inject(MatDialog);\r\n  #viewContainerRef = inject(ViewContainerRef);\r\n  #changeDetectorRef = inject(ChangeDetectorRef);\r\n  #featuresService = inject(FeaturesScopedService);\r\n\r\n  constructor() { }\r\n\r\n  feature = computedObj('feature', () => this.#featuresService.getCurrent(this.featureNameId()));\r\n\r\n  show = computedObj('show', () => {\r\n    const feat = this.feature();\r\n    if (feat == null) return false;\r\n    return this.showIf() == (feat?.isEnabled ?? false);\r\n  })\r\n\r\n  openDialog() {\r\n    openFeatureDialog(this.#matDialog, this.featureNameId(), this.#viewContainerRef, this.#changeDetectorRef);\r\n  }\r\n}\r\n\r\nexport function openFeatureDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n  dialog.open(FeatureInfoDialogComponent, {\r\n    autoFocus: false,\r\n    data: featureId,\r\n    viewContainerRef: viewContainerRef,\r\n    width: '400px',\r\n  });\r\n\r\n  changeDetectorRef?.markForCheck();\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../helpers/copy-to-clipboard.helper';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ClipboardService {\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}"],"names":["input","MatButtonModule","MatCardModule","MAT_DIALOG_DATA","MatDialogRef","MatIconModule","TranslateModule","transient","SafeHtmlPipe","ClipboardService","computedObj","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵtextInterpolate","ctx_r1","feature","isEnabled","ɵɵlistener","FeatureDetailsDialogComponent_Conditional_0_Conditional_14_Template_span_click_4_listener","ɵɵrestoreView","_r3","ɵɵnextContext","ɵɵresetView","clipboard","copyToClipboard","guid","FeatureDetailsDialogComponent_Conditional_0_Conditional_26_Template_button_click_0_listener","_r4","dialog","close","ɵɵelement","FeatureDetailsDialogComponent_Conditional_0_Template_span_click_11_listener","_r1","nameId","ɵɵtemplate","FeatureDetailsDialogComponent_Conditional_0_Conditional_13_Template","FeatureDetailsDialogComponent_Conditional_0_Conditional_14_Template","FeatureDetailsDialogComponent_Conditional_0_Conditional_26_Template","name","ɵɵproperty","description","ɵɵsanitizeHtml","ɵɵconditional","mySpecs","showStatus","showGuid","security","Impact","Message","link","ɵɵsanitizeUrl","showClose","FeatureDetailsDialogComponent","constructor","dialogSpecs","specs","ɵɵdirectiveInject","i1","selectors","inputs","decls","vars","consts","template","FeatureDetailsDialogComponent_Template","rf","ctx","FeatureDetailsDialogComponent_Conditional_0_Template","i2","MatCard","MatCardActions","MatCardContent","MatCardHeader","MatCardTitle","i3","MatAnchor","MatButton","i4","MatIcon","i5","TranslatePipe","encapsulation","signal","ActivatedRoute","FeatureDetailService","ɵɵpureFunction1","_c0","FeatureInfoDialogComponent","featureDetailSvc","dialogData","route","featureId","ngOnInit","set","snapshot","data","featureDetails","getFeatureDetail","FeatureInfoDialogComponent_Template","FeatureInfoDialogComponent_Conditional_0_Template","tmp_0_0","Signal","HttpServiceBase","webApiFeatureDetails","getSignal","params","getFeatureDetails","nameIds","featureList","xx","subscribe","update","prev","getHttpApiUrl","__ngFactoryType__","factory","ɵfac","ChangeDetectorRef","ViewContainerRef","inject","MatDialog","FeaturesScopedService","FeatureComponentBase","matDialog","viewContainerRef","changeDetectorRef","featuresService","featureNameId","required","showIf","getCurrent","show","feat","openDialog","openFeatureDialog","open","autoFocus","width","markForCheck","MatSnackBar","snackBar","text","duration","ɵɵinject","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}