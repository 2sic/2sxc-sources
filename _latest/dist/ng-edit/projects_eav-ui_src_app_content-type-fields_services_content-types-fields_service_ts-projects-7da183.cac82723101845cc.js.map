{"version":3,"file":"projects_eav-ui_src_app_content-type-fields_services_content-types-fields_service_ts-projects-7da183.cac82723101845cc.js","mappings":"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","names":["webApiFieldsRoot","webApiFieldsAll","webApiFieldsGetShared","ContentTypesFieldsService","constructor","http","context","dnnContext","this","apiUrl","name","$2sxc","typeListRetrieve","get","params","appid","appId","toString","getInputTypesList","pipe","map","inputConfigs","config","dataType","Type","substring","indexOf","inputType","label","Label","description","Description","isDefault","IsDefault","isObsolete","IsObsolete","isRecommended","IsRecommended","obsoleteMessage","ObsoleteMessage","icon","getReservedNames","getFields","contentTypeStaticName","staticName","fields","fld","Metadata","md","merged","All","InputType","getShareableFields","getShareableFieldsFor","attributeId","addInheritedField","targetContentTypeId","sourceContentTypeStaticName","sourceFieldGuid","newName","post","AppId","ContentTypeId","SourceType","SourceField","share","inherit","inheritMetadataOf","reOrder","idArray","contentType","contentTypeId","Id","order","JSON","stringify","setTitle","item","webApiTypeRoot","rename","fieldId","delete","IsTitle","Error","add","newField","StaticName","Index","SortOrder","updateInputType","id","field","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_3__","jDH","factory","ɵfac","ctx_r0","dialogData","message","ConfirmDeleteDialogComponent","dialogRef","hostClass","closeDialog","confirm","close","MAT_DIALOG_DATA","core","VBU","selectors","hostVars","hostBindings","rf","ctx","ConfirmDeleteDialogComponent_Conditional_4_Template","entityTitle","entityId","MatCardModule","MatButtonModule","SafeHtmlPipe","styles","MetadataActionsComponent","agInit","refresh","deleteMetadata","onDelete","data","standalone","features","decls","vars","consts","template","MatRippleModule","MatIconModule","MetadataContentTypeComponent","value","metadata","_Type","TippyDirective","scopeOption_r2","MetadataSaveDialogComponent_Conditional_0_Conditional_11_For_5_Template","vm_r3","scopeOptions","length","ctx_r3","dropdownInsertValue","contentType_r5","MetadataSaveDialogComponent_Conditional_0_Conditional_15_For_2_Template","contentTypes","MetadataSaveDialogComponent_Conditional_0_Conditional_11_Template","MetadataSaveDialogComponent_Conditional_0_Conditional_15_Template","MetadataSaveDialogComponent_Conditional_0_Conditional_16_Template","_r1","toggleGuidedContentType","MetadataSaveDialogComponent_Conditional_0_Conditional_24_Template","$event","toggleAdvancedMode","form","advancedMode","guidedContentType","_c0","controls","touched","errors","required","valid","MetadataSaveDialogComponent","contentTypesService","ngOnInit","contentTypes$","BehaviorSubject","scopeOptions$","buildForm","fetchScopes","viewModel$","combineLatest","ngOnDestroy","complete","event","checked","formValues","getRawValue","UntypedFormGroup","addControl","UntypedFormControl","Validators","eavConstants","scopes","default","scope","valueChanges","startWith","distinctUntilChanged","subscribe","newScope","patchValue","prompt","some","option","next","fetchContentTypes","retrieveContentTypes","getScopes","MetadataSaveDialogComponent_Conditional_0_Template","tmp_0_0","FormsModule","i4","ReactiveFormsModule","MatFormFieldModule","i5","MatSelectModule","i6","i7","MatOptionModule","MatInputModule","i8","i9","NgClass","i10","MatSlideToggleModule","i11","AsyncPipe","FieldHintComponent","ClickStopPropagationDirective","itemFor","KeyNumber","KeyGuid","KeyString","Title","MetadataComponent_Conditional_0_Conditional_10_Conditional_5_Template","MetadataComponent_Conditional_0_Conditional_10_Conditional_6_Template","MetadataComponent_Conditional_0_Conditional_10_Conditional_7_Template","MetadataComponent_Conditional_0_Conditional_10_Conditional_8_Template","Target","TargetType","_r4","ctx_r1","createMetadata","recommendation_r7","Icon","Enabled","_r6","$implicit","MetadataComponent_Conditional_0_Conditional_16_For_10_Conditional_1_Template","MetadataComponent_Conditional_0_Conditional_16_For_10_Conditional_2_Template","_r5","openChange","MetadataComponent_Conditional_0_Conditional_16_For_10_Template","fabOpen","recommendations","MetadataComponent_Conditional_0_Conditional_9_Template","MetadataComponent_Conditional_0_Conditional_10_Template","MetadataComponent_Conditional_0_Conditional_15_Template","MetadataComponent_Conditional_0_Conditional_16_Template","title","gridOptions","MetadataComponent","BaseWithChildDialogComponent","router","route","snackBar","dialog","viewContainerRef","changeDetectorRef","super","EavLogger","buildGridOptions","entitiesService","transient","EntitiesService","metadataService","MetadataService","contentItemsService","ContentItemsService","metadataSet$","Items","Recommendations","itemFor$","undefined","fabOpen$","targetType","parseInt","snapshot","paramMap","keyType","key","decodeURIComponent","fetchFor","fetchMetadata","subscriptions","childDialogClosed$","logFilteredRecs","log","rxTap","set","a","filteredRecs$","filter","r","i","Count","logViewModel","open","recommendation","CreateEmpty","Name","create","For","calculateItemFor","error","duration","createMetadataForm","openFeatureDialog","MissingFeature","autoFocus","width","afterClosed","items","ContentTypeName","formUrl","convertFormToUrl","navigate","relativeTo","markForCheck","Object","values","find","m","target","keyTypes","guid","Guid","number","Number","string","String","getAll","logGetMetadata","getMetadata","take","forEach","startsWith","replace","window","atob","editMetadata","EntityId","confirmed","DeleteWarning","isConfirmed","defaultGridOptions","columnDefs","ColumnDefinitions","cellRenderer","IdFieldComponent","cellRendererParams","tooltipGetter","TextWide","onCellClicked","headerName","valueGetter","ActionsPinnedRight1","MetadataComponent_Conditional_0_Template","RouterOutlet","SxcGridModule","MatDialogActions","EcoFabSpeedDialComponent","EcoFabSpeedDialTriggerComponent","EcoFabSpeedDialActionsComponent","MatBadgeModule","GoToPermissions","path","loadChildren","__webpack_require__","e","then","bind","permissionRoutes","getUrl","getUrlApp","app","getUrlAttribute","attribute","getUrlContentType","getUrlEntity","entity","getUrlLanguage","language","permissionsDialog","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","PermissionsComponent","Promise","all","component","DialogEntryComponent","children","EditRoutesSubItems","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","isError","isShort","toggleIsShort","_angular_core__WEBPACK_IMPORTED_MODULE_0__","inputs","ngContentSelectors","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c1","tmp_2_0","NgTemplateOutlet","onClick","stopPropagation","FsC"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/content-type-fields/services/content-types-fields.service.ts","./projects/eav-ui/src/app/metadata/confirm-delete-dialog/confirm-delete-dialog.component.html","./projects/eav-ui/src/app/metadata/confirm-delete-dialog/confirm-delete-dialog.component.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.html","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.ts","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.ts","./projects/eav-ui/src/app/metadata/metadata.component.html","./projects/eav-ui/src/app/metadata/metadata.component.ts","./projects/eav-ui/src/app/permissions/go-to-permissions.ts","./projects/eav-ui/src/app/permissions/permissions-dialog.config.ts","./projects/eav-ui/src/app/permissions/permissions.routing.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { ContentType } from '../../app-administration/models/content-type.model';\r\nimport { webApiTypeRoot } from '../../app-administration/services/content-types.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Field, FieldInputTypeOption } from '../models/field.model';\r\nimport { InputType } from '../models/input-type.model';\r\nimport { ReservedNames } from '../models/reserved-names.model';\r\nimport { InputTypeStrict } from '../constants/input-type.constants';\r\n\r\nexport const webApiFieldsRoot = 'admin/field/';\r\nexport const webApiFieldsAll = 'admin/field/all';\r\nexport const webApiFieldsGetShared = 'admin/field/GetSharedFields';\r\n\r\n@Injectable()\r\nexport class ContentTypesFieldsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  typeListRetrieve() {\r\n    return this.http.get<string[]>(this.apiUrl(webApiFieldsRoot + 'DataTypes'), {\r\n      params: { appid: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getInputTypesList() {\r\n    return this.http\r\n      .get<InputType[]>(this.apiUrl(webApiFieldsRoot + 'InputTypes'), { params: { appid: this.context.appId.toString() } })\r\n      .pipe(\r\n        map(inputConfigs => {\r\n          const inputTypeOptions = inputConfigs.map(config => {\r\n            const option: FieldInputTypeOption = {\r\n              dataType: config.Type.substring(0, config.Type.indexOf('-')),\r\n              inputType: config.Type,\r\n              label: config.Label,\r\n              description: config.Description,\r\n              isDefault: config.IsDefault,\r\n              isObsolete: config.IsObsolete,\r\n              isRecommended: config.IsRecommended,\r\n              obsoleteMessage: config.ObsoleteMessage,\r\n              icon: config.IsDefault ? 'star' : config.IsRecommended ? 'star_outline' : null,\r\n            };\r\n            return option;\r\n          });\r\n          return inputTypeOptions;\r\n        }),\r\n      );\r\n  }\r\n\r\n  getReservedNames() {\r\n    return this.http.get<ReservedNames>(this.apiUrl(webApiFieldsRoot + 'ReservedNames'));\r\n  }\r\n\r\n  /** Get all fields for some content type */\r\n  getFields(contentTypeStaticName: string) {\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsAll), {\r\n        params: { appid: this.context.appId.toString(), staticName: contentTypeStaticName },\r\n      })\r\n      .pipe(\r\n        map(fields => {\r\n          if (fields) {\r\n            for (const fld of fields) {\r\n              if (!fld.Metadata) { continue; }\r\n              const md = fld.Metadata;\r\n              const allMd = md.All;\r\n              const typeMd = md[fld.Type];\r\n              const inputMd = md[fld.InputType];\r\n              md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n            }\r\n          }\r\n          return fields;\r\n        }),\r\n      );\r\n  }\r\n\r\n  /** Get all possible sharable fields for a new sharing */\r\n  getShareableFields() {\r\n    return this.http.get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString() },\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Get sharable fields which are possible for this attribute.\r\n   * \r\n   * Reason is that eg. a bool-attribute can only receive metadata from a bool attribute, etc.\r\n   * \r\n   * @param attributeId the existing attributeId which will receive the new metadata\r\n   */\r\n  getShareableFieldsFor(attributeId: number) {\r\n    // TODO: @SDV - do the same as in getShareableFields()\r\n    // but add parameter attributeId to the webapi call\r\n    // I'll create the backend afterwards\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString(), attributeId: attributeId.toString() },\r\n      });\r\n  }\r\n\r\n  addInheritedField(targetContentTypeId: number, sourceContentTypeStaticName: string, sourceFieldGuid: string, newName: string) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'AddInheritedField'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: targetContentTypeId.toString(),\r\n        SourceType: sourceContentTypeStaticName,\r\n        SourceField: sourceFieldGuid,\r\n        name: newName,\r\n      }\r\n    });\r\n  }\r\n\r\n  share(attributeId: number, share: boolean = true) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Share'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        share,\r\n      },\r\n    });\r\n  }\r\n\r\n  inherit(attributeId: number, sourceFieldGuid: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Inherit'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        inheritMetadataOf: sourceFieldGuid,\r\n      },\r\n    });\r\n  }\r\n\r\n  reOrder(idArray: number[], contentType: ContentType) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'Sort'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        order: JSON.stringify(idArray),\r\n      },\r\n    });\r\n  }\r\n\r\n  setTitle(item: Field, contentType: ContentType) {\r\n    return this.http.post<null>(this.apiUrl(webApiTypeRoot + 'SetTitle'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  rename(fieldId: number, contentTypeId: number, newName: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Rename'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentTypeId.toString(),\r\n        attributeId: fieldId.toString(),\r\n        newName,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(item: Field, contentType: ContentType) {\r\n    if (item.IsTitle) {\r\n      throw new Error('Can\\'t delete Title');\r\n    }\r\n\r\n    return this.http.delete<boolean>(this.apiUrl(webApiFieldsRoot + 'Delete'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  add(newField: Partial<Field>, contentTypeId: number) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'Add'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: contentTypeId.toString(),\r\n        Id: newField.Id.toString(),\r\n        Type: newField.Type,\r\n        InputType: newField.InputType,\r\n        StaticName: newField.StaticName,\r\n        IsTitle: newField.IsTitle.toString(),\r\n        Index: newField.SortOrder.toString(),\r\n      }\r\n    });\r\n  }\r\n\r\n  updateInputType(id: number, staticName: string, inputType: InputTypeStrict) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'InputType'), null, {\r\n      params: { appId: this.context.appId.toString(), attributeId: id.toString(), field: staticName, inputType }\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>Delete {{ dialogData.entityTitle }} ({{ dialogData.entityId }})?</mat-card-title>\r\n    @if (dialogData.message) {\r\n      <mat-card-subtitle [innerHtml]=\"dialogData.message | safeHtml\"></mat-card-subtitle>\r\n    }\r\n  </mat-card-header>\r\n  <mat-card-actions align=\"end\">\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog(true)\">Delete</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, HostBinding, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ConfirmDeleteDialogData } from './confirm-delete-dialog.models';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\n\r\n@Component({\r\n  selector: 'app-confirm-delete-dialog',\r\n  templateUrl: './confirm-delete-dialog.component.html',\r\n  styleUrls: ['./confirm-delete-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    SafeHtmlPipe,\r\n  ],\r\n})\r\nexport class ConfirmDeleteDialogComponent {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: ConfirmDeleteDialogData,\r\n    private dialogRef: MatDialogRef<ConfirmDeleteDialogComponent>,\r\n  ) { }\r\n\r\n  closeDialog(confirm?: boolean) {\r\n    this.dialogRef.close(confirm);\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MetadataItem } from '../models/metadata.model';\r\nimport { MetadataActionsParams } from './metadata-actions.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRippleModule } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-metadata-actions',\r\n  templateUrl: './metadata-actions.component.html',\r\n  styleUrls: ['./metadata-actions.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n  ],\r\n})\r\nexport class MetadataActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & MetadataActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & MetadataActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deleteMetadata(): void {\r\n    const metadata: MetadataItem = this.params.data;\r\n    this.params.onDelete(metadata);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deleteMetadata()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MetadataItem } from '../models/metadata.model';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-metadata-content-type',\r\n  templateUrl: './metadata-content-type.component.html',\r\n  styleUrls: ['./metadata-content-type.component.scss'],\r\n  standalone: true,\r\n  imports: [TippyDirective,],\r\n})\r\nexport class MetadataContentTypeComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n  metadata: MetadataItem;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.metadata = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"container\" [tippy]=\"metadata._Type.Description\" [tippyDisabled]=\"!metadata._Type.Description\">\r\n  {{ value }}\r\n</div>\r\n","@if (viewModel$ | async; as vm) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>Create Metadata</mat-card-title>\r\n      <mat-card-subtitle>\r\n        This is a special operation to add an item which is metadata for another item,\r\n        see <a href=\"https://go.2sxc.org/metadata\" target=\"_blank\">docs</a>.\r\n      </mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <form [formGroup]=\"form\">\r\n        <!-- Scope -->\r\n        @if (advancedMode && guidedContentType) {\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Scope</mat-label>\r\n            <mat-select formControlName=\"scope\" [placeholder]=\"!vm.scopeOptions.length ? 'No items found' : ''\">\r\n              @for (scopeOption of vm.scopeOptions; track scopeOption) {\r\n                <mat-option [value]=\"scopeOption.value\">\r\n                  {{ scopeOption.name }}\r\n                </mat-option>\r\n              }\r\n              <mat-option [value]=\"dropdownInsertValue\">Other...</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <app-field-hint>\r\n            The scope should almost never be changed -\r\n            <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n          </app-field-hint>\r\n        }\r\n        <!-- Content Type of metadata item -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Content Type</mat-label>\r\n          @if (guidedContentType) {\r\n            <mat-select formControlName=\"contentType\" required\r\n              [placeholder]=\"!vm.contentTypes.length ? 'No items found' : ''\">\r\n              @for (contentType of vm.contentTypes; track contentType) {\r\n                <mat-option [value]=\"contentType.StaticName\">\r\n                  {{ contentType.Label }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          }\r\n          @if (!guidedContentType) {\r\n            <input matInput type=\"text\" formControlName=\"contentType\" required>\r\n          }\r\n          <div matTextSuffix>\r\n            <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': guidedContentType }\" tippy=\"Pick existing value\"\r\n              (click)=\"toggleGuidedContentType(true)\">\r\n              <mat-icon>search</mat-icon>\r\n            </button>\r\n            <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': !guidedContentType }\" tippy=\"Manual entry\"\r\n              (click)=\"toggleGuidedContentType(false)\">\r\n              <mat-icon>text_fields</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-form-field>\r\n        @if (form.controls.contentType.touched && form.controls.contentType.errors?.required) {\r\n          <app-field-hint\r\n            [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      </form>\r\n    </mat-card-content>\r\n    <mat-card-actions class=\"eav-card-actions\">\r\n      <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n        {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n      </mat-slide-toggle>\r\n      <div>\r\n        <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\" class=\"eav-card-action-button\" [disabled]=\"!form.valid\" (click)=\"confirm()\">\r\n          Confirm\r\n        </button>\r\n      </div>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}\r\n","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { BehaviorSubject, combineLatest, distinctUntilChanged, map, Observable, startWith } from 'rxjs';\r\nimport { ContentType } from '../../app-administration/models';\r\nimport { ContentTypesService } from '../../app-administration/services';\r\nimport { dropdownInsertValue } from '../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants, ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { MetadataSaveDialogViewModel, MetadataSaveFormValues } from './metadata-save-dialog.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgClass, AsyncPipe } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\n\r\n@Component({\r\n  selector: 'app-metadata-save-dialog',\r\n  templateUrl: './metadata-save-dialog.component.html',\r\n  styleUrls: ['./metadata-save-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    NgClass,\r\n    MatIconModule,\r\n    MatSlideToggleModule,\r\n    AsyncPipe,\r\n    FieldHintComponent,\r\n    ClickStopPropagationDirective,\r\n  ]\r\n})\r\nexport class MetadataSaveDialogComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  dropdownInsertValue = dropdownInsertValue;\r\n  viewModel$: Observable<MetadataSaveDialogViewModel>;\r\n  guidedContentType = true;\r\n  advancedMode = false;\r\n\r\n  private contentTypes$: BehaviorSubject<ContentType[]>;\r\n  private scopeOptions$: BehaviorSubject<ScopeOption[]>;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<MetadataSaveDialogComponent>,\r\n    private contentTypesService: ContentTypesService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.contentTypes$ = new BehaviorSubject<ContentType[]>([]);\r\n    this.scopeOptions$ = new BehaviorSubject<ScopeOption[]>([]);\r\n\r\n    this.buildForm();\r\n    this.fetchScopes();\r\n\r\n    this.viewModel$ = combineLatest([this.contentTypes$, this.scopeOptions$]).pipe(\r\n      map(([contentTypes, scopeOptions]) => {\r\n        const viewModel: MetadataSaveDialogViewModel = {\r\n          contentTypes,\r\n          scopeOptions,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.contentTypes$.complete();\r\n    this.scopeOptions$.complete();\r\n  }\r\n\r\n  closeDialog(contentType?: string): void {\r\n    this.dialogRef.close(contentType);\r\n  }\r\n\r\n  toggleGuidedContentType(guidedContentType: boolean): void {\r\n    this.guidedContentType = guidedContentType;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: MetadataSaveFormValues = this.form.getRawValue();\r\n    this.closeDialog(formValues.contentType);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({});\r\n    this.form.addControl('contentType', new UntypedFormControl(null, [Validators.required]));\r\n    this.form.addControl('scope', new UntypedFormControl(eavConstants.scopes.default.value));\r\n\r\n    this.form.controls.scope.valueChanges.pipe(\r\n      startWith(this.form.controls.scope.value),\r\n      distinctUntilChanged(),\r\n    ).subscribe((newScope: string) => {\r\n      // reset content types when scope changes\r\n      if (this.form.controls.contentType.value != null) {\r\n        this.form.controls.contentType.patchValue(null);\r\n      }\r\n\r\n      // add new scope on manual entry\r\n      if (newScope === dropdownInsertValue) {\r\n        newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n        if (!this.scopeOptions$.value.some(option => option.value === newScope)) {\r\n          const newScopeOption: ScopeOption = {\r\n            name: newScope,\r\n            value: newScope,\r\n          };\r\n          this.scopeOptions$.next([newScopeOption, ...this.scopeOptions$.value]);\r\n        }\r\n        this.form.controls.scope.patchValue(newScope);\r\n      } else {\r\n        this.fetchContentTypes(newScope);\r\n      }\r\n    });\r\n  }\r\n\r\n  private fetchContentTypes(scope: string): void {\r\n    this.contentTypesService.retrieveContentTypes(scope).subscribe(contentTypes => {\r\n      this.contentTypes$.next(contentTypes);\r\n    });\r\n  }\r\n\r\n  private fetchScopes(): void {\r\n    this.contentTypesService.getScopes().subscribe(scopes => {\r\n      this.scopeOptions$.next(scopes);\r\n    });\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog nav-component-wrapper\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">\r\n        {{ title || 'Metadata' }}\r\n      </div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"eav-dialog-content nav-component-wrapper\">\r\n      <p>\r\n        @if (!vm.itemFor) {\r\n          This item is not metadata for anything else.\r\n        }\r\n        @else {\r\n          This item is metadata for:\r\n          <br>Target: {{ vm.itemFor.Target }}\r\n          <br>TargetType: {{ vm.itemFor.TargetType }}\r\n          @if (vm.itemFor.KeyNumber) {\r\n            <br>Key Number: {{ vm.itemFor.KeyNumber }}\r\n          }\r\n          @if (vm.itemFor.KeyGuid) {\r\n            <br>Key Guid: {{ vm.itemFor.KeyGuid }}\r\n          }\r\n          @if (vm.itemFor.KeyString) {\r\n            <br>Key String: {{ vm.itemFor.KeyString }}\r\n          }\r\n          @if (vm.itemFor.Title) {\r\n            <br>Title: {{ vm.itemFor.Title }}\r\n          }\r\n        }\r\n      </p>\r\n      <router-outlet></router-outlet>\r\n      <div class=\"grid-wrapper\">\r\n        <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.metadata\" [gridOptions]=\"gridOptions\">\r\n        </ag-grid-angular>\r\n      </div>\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      @if (vm.recommendations.length === 0) {\r\n        <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new metadata for this item\"\r\n          (click)=\"createMetadata()\">\r\n          <mat-icon>add</mat-icon>\r\n        </button>\r\n      }\r\n      @if (vm.recommendations.length > 0) {\r\n        <eco-fab-speed-dial class=\"eav-eco-fab-speed-dial\" [ngClass]=\"{ 'fab-opened': vm.fabOpen }\"\r\n          (openChange)=\"openChange($event)\">\r\n          <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n            <button mat-fab>\r\n              <mat-icon class=\"spin180\">{{ vm.fabOpen ? 'close' : 'add' }}</mat-icon>\r\n            </button>\r\n          </eco-fab-speed-dial-trigger>\r\n          <eco-fab-speed-dial-actions class=\"eav-eco-fab-speed-dial-actions\">\r\n            <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Other Content Type\"\r\n              (click)=\"createMetadata()\">\r\n              <mat-icon>search</mat-icon>\r\n            </button>\r\n            @for (recommendation of vm.recommendations; track recommendation) {\r\n              <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" [attr.label]=\"recommendation.Title\"\r\n                (click)=\"createMetadata(recommendation)\">\r\n                @if (recommendation.Icon) {\r\n                  <div style=\"color: white; fill: white;\" [innerHTML]=\"recommendation.Icon | safeHtml\"\r\n                    [matBadgeHidden]=\"recommendation.Enabled\" matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadge=\"💎\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\"></div>\r\n                } @else {\r\n                  <mat-icon>add</mat-icon>\r\n                }\r\n              </button>\r\n            }\r\n          </eco-fab-speed-dial-actions>\r\n        </eco-fab-speed-dial>\r\n      }\r\n    </mat-dialog-actions>\r\n  </div>\r\n}\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, map, Observable, take } from 'rxjs';\r\nimport { ContentItemsService } from '../content-items/services/content-items.service';\r\nimport { EntitiesService } from '../content-items/services/entities.service';\r\nimport { EavFor } from '../edit/shared/models/eav';\r\nimport { MetadataService } from '../permissions';\r\nimport { BaseWithChildDialogComponent } from '../shared/components/base-with-child-dialog.component';\r\nimport { IdFieldComponent } from '../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { ConfirmDeleteDialogComponent } from './confirm-delete-dialog/confirm-delete-dialog.component';\r\nimport { ConfirmDeleteDialogData } from './confirm-delete-dialog/confirm-delete-dialog.models';\r\nimport { MetadataActionsComponent } from './metadata-actions/metadata-actions.component';\r\nimport { MetadataActionsParams } from './metadata-actions/metadata-actions.models';\r\nimport { MetadataContentTypeComponent } from './metadata-content-type/metadata-content-type.component';\r\nimport { MetadataSaveDialogComponent } from './metadata-save-dialog/metadata-save-dialog.component';\r\nimport { MetadataDto, MetadataItem, MetadataRecommendation, MetadataViewModel } from './models/metadata.model';\r\nimport { openFeatureDialog } from '../features/shared/base-feature.component';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { NgClass, AsyncPipe } from '@angular/common';\r\nimport { EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent, EcoFabSpeedDialActionsComponent } from '@ecodev/fab-speed-dial';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { EavLogger } from '../shared/logging/eav-logger';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { SafeHtmlPipe } from '../shared/pipes/safe-html.pipe';\r\nimport { transient } from '../core';\r\n\r\nconst logThis = false;\r\n@Component({\r\n  selector: 'app-metadata',\r\n  templateUrl: './metadata.component.html',\r\n  styleUrls: ['./metadata.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    SxcGridModule,\r\n    MatDialogActions,\r\n    EcoFabSpeedDialComponent,\r\n    NgClass,\r\n    EcoFabSpeedDialTriggerComponent,\r\n    EcoFabSpeedDialActionsComponent,\r\n    MatBadgeModule,\r\n    AsyncPipe,\r\n    SafeHtmlPipe,\r\n  ],\r\n  providers: [\r\n    MetadataService,\r\n  ]\r\n})\r\nexport class MetadataComponent extends BaseWithChildDialogComponent implements OnInit, OnDestroy {\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private entitiesService = transient(EntitiesService);\r\n  private metadataService = transient(MetadataService);\r\n  private contentItemsService = transient(ContentItemsService);\r\n\r\n\r\n\r\n  private metadataSet$ = new BehaviorSubject<MetadataDto>({ Items: [], Recommendations: [] } as MetadataDto);\r\n  private itemFor$ = new BehaviorSubject<EavFor | undefined>(undefined);\r\n  private fabOpen$ = new BehaviorSubject(false);\r\n  private targetType = parseInt(this.route.snapshot.paramMap.get('targetType'), 10);\r\n  private keyType = this.route.snapshot.paramMap.get('keyType') as MetadataKeyType;\r\n  private key = this.route.snapshot.paramMap.get('key');\r\n  title = decodeURIComponent(this.route.snapshot.paramMap.get('title') ?? '');\r\n  private contentTypeStaticName = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n  viewModel$: Observable<MetadataViewModel>;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<MetadataComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super(router, route, new EavLogger('MetadataComponent', logThis));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchFor();\r\n    this.fetchMetadata();\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe(() => { this.fetchMetadata(); })\r\n    );\r\n\r\n    const logFilteredRecs = this.log.rxTap('filteredRecs$');\r\n    this.metadataSet$.subscribe((set) => {\r\n      this.log.a('test 2dm', { set });\r\n    });\r\n\r\n    const filteredRecs$ = this.metadataSet$.pipe(\r\n      logFilteredRecs.pipe(),\r\n      map((set) => set.Recommendations.filter(r => set.Items.filter(i => i._Type.Id === r.Id).length < r.Count)),\r\n      logFilteredRecs.map(),\r\n    );\r\n\r\n    const logViewModel = this.log.rxTap('viewModel$');\r\n    this.viewModel$ = combineLatest([this.metadataSet$, filteredRecs$, this.itemFor$, this.fabOpen$]).pipe(\r\n      logViewModel.pipe(),\r\n      map(([metadata, recommendations, itemFor, fabOpen]) => {\r\n        const viewModel: MetadataViewModel = {\r\n          metadata: metadata.Items,\r\n          recommendations,\r\n          itemFor,\r\n          fabOpen,\r\n        };\r\n        return viewModel;\r\n      }),\r\n      logViewModel.map(),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.log.a('destroying');\r\n    this.metadataSet$.complete();\r\n    this.itemFor$.complete();\r\n    this.fabOpen$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  openChange(open: boolean) {\r\n    this.fabOpen$.next(open);\r\n  }\r\n\r\n  createMetadata(recommendation?: MetadataRecommendation) {\r\n    if (recommendation) {\r\n      // If the feature is not enabled, open the info dialog instead of metadata\r\n      if (!recommendation.Enabled) {\r\n        openFeatureDialog(this.dialog, recommendation.MissingFeature, this.viewContainerRef, this.changeDetectorRef);\r\n        return;\r\n      }\r\n      // Feature is enabled, check if it's an empty metadata\r\n      if (recommendation.CreateEmpty) {\r\n        this.snackBar.open(`Creating ${recommendation.Name}...`);\r\n        this.entitiesService.create(recommendation.Id, { For: this.calculateItemFor() }).subscribe({\r\n          error: () => {\r\n            this.snackBar.open(`Creating ${recommendation.Name} failed. Please check console for more info`, undefined, { duration: 3000 });\r\n            this.fetchMetadata();\r\n          },\r\n          next: () => {\r\n            this.snackBar.open(`Created ${recommendation.Name}`, undefined, { duration: 3000 });\r\n            this.fetchMetadata();\r\n          },\r\n        });\r\n      } else {\r\n        // Default case - open new-metadata dialog\r\n        this.createMetadataForm(recommendation.Id);\r\n      }\r\n      return;\r\n    }\r\n    const metadataDialogRef = this.dialog.open(MetadataSaveDialogComponent, {\r\n      autoFocus: false,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    metadataDialogRef.afterClosed().subscribe((contentType?: string) => {\r\n      if (contentType == null) return;\r\n      this.createMetadataForm(contentType);\r\n    });\r\n  }\r\n\r\n  private createMetadataForm(contentType: string) {\r\n    const form: EditForm = {\r\n      items: [{\r\n        ContentTypeName: contentType,\r\n        For: this.calculateItemFor(),\r\n      }],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private calculateItemFor(): EavFor {\r\n    const itemFor: EavFor = {\r\n      Target: Object.values(eavConstants.metadata).find(m => m.targetType === this.targetType)?.target ?? this.targetType.toString(),\r\n      TargetType: this.targetType,\r\n      ...(this.keyType === eavConstants.keyTypes.guid && { Guid: this.key }),\r\n      ...(this.keyType === eavConstants.keyTypes.number && { Number: parseInt(this.key, 10) }),\r\n      ...(this.keyType === eavConstants.keyTypes.string && { String: this.key }),\r\n    };\r\n    return itemFor;\r\n  }\r\n\r\n  private fetchFor() {\r\n    if (!this.contentTypeStaticName) { return; }\r\n\r\n    this.contentItemsService.getAll(this.contentTypeStaticName).subscribe(items => {\r\n      const item = items.find(i => i.Guid === this.key);\r\n      if (item?.For) {\r\n        this.itemFor$.next(item.For);\r\n      }\r\n    });\r\n  }\r\n\r\n  private fetchMetadata() {\r\n    const logGetMetadata = this.log.rxTap('getMetadata');\r\n    this.metadataService.getMetadata(this.targetType, this.keyType, this.key)\r\n      .pipe(\r\n        logGetMetadata.pipe(),\r\n        take(1),\r\n        map(metadata => {\r\n          metadata.Recommendations.forEach(r => {\r\n            if (r.Icon?.startsWith('base64:')) {\r\n              r.Icon = r.Icon.replace('base64:', '');\r\n              r.Icon = window.atob(r.Icon);\r\n              // used for coloring black icons to white\r\n              r.Icon = r.Icon.replace('fill=\"#000000\"', 'fill=\"#ffffff\"');\r\n            }\r\n          });\r\n          return metadata;\r\n        }),\r\n        logGetMetadata.map(),\r\n      )\r\n      // 2024-05-30 2dm - this standard shorthand seems to fail\r\n      // for reasons unknown to me. I've replaced it with the longhand\r\n      // The problem occurs when the metadataSet$ is updated after the initial load.\r\n      // .subscribe(this.metadataSet$);\r\n      .subscribe(data => this.metadataSet$.next(data));\r\n  }\r\n\r\n  private editMetadata(metadata: MetadataItem) {\r\n    const form: EditForm = {\r\n      items: [{ EntityId: metadata.Id }],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private deleteMetadata(metadata: MetadataItem, confirmed = false) {\r\n    if (!confirmed) {\r\n      const data: ConfirmDeleteDialogData = {\r\n        entityId: metadata.Id,\r\n        entityTitle: metadata.Title,\r\n        message: this.metadataSet$.value.Recommendations.find(r => r.Id === metadata._Type.Id)?.DeleteWarning,\r\n      };\r\n      const confirmationDialogRef = this.dialog.open(ConfirmDeleteDialogComponent, {\r\n        autoFocus: false,\r\n        data,\r\n        viewContainerRef: this.viewContainerRef,\r\n        width: '400px',\r\n      });\r\n      confirmationDialogRef.afterClosed().subscribe((isConfirmed: boolean) => {\r\n        if (isConfirmed)\r\n          this.deleteMetadata(metadata, true);\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.snackBar.open('Deleting...');\r\n    this.entitiesService.delete(metadata._Type.Id, metadata.Id, false).subscribe({\r\n      next: () => {\r\n        this.snackBar.open('Deleted', null, { duration: 2000 });\r\n        this.fetchMetadata();\r\n      },\r\n      error: () => {\r\n        this.snackBar.open('Delete failed. Please check console for more information', null, { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.Id,\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<MetadataItem> = {\r\n              tooltipGetter: (metadata: MetadataItem) => `ID: ${metadata.Id}\\nGUID: ${metadata.Guid}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Title',\r\n          onCellClicked: (params) => {\r\n            const metadata: MetadataItem = params.data;\r\n            this.editMetadata(metadata);\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Content Type',\r\n          field: 'ContentType',\r\n          valueGetter: (params) => {\r\n            const metadata: MetadataItem = params.data;\r\n            return `${metadata._Type.Name}${metadata._Type.Title !== metadata._Type.Name ? ` (${metadata._Type.Title})` : ''}`;\r\n          },\r\n          cellRenderer: MetadataContentTypeComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight1,\r\n          cellRenderer: MetadataActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: MetadataActionsParams = {\r\n              onDelete: (metadata) => this.deleteMetadata(metadata),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\n\r\nexport class GoToPermissions {\r\n\r\n  static route: Route = {\r\n    path: 'permissions/:targetType/:keyType/:key',\r\n    loadChildren: () => import('./permissions.routing').then(m => m.permissionRoutes),\r\n    // loadChildren: () => import('./permissions.module').then(m => m.PermissionsModule),\r\n    data: { title: 'Permissions' },\r\n  };\r\n\r\n  static getUrl(targetType: number, keyType: MetadataKeyType, key: string): string {\r\n    return `permissions/${targetType}/${keyType}/${key}`;\r\n  }\r\n\r\n  static getUrlApp(appId: number): string {\r\n    return this.getUrl(eavConstants.metadata.app.targetType, eavConstants.metadata.app.keyType, appId.toString());\r\n  }\r\n\r\n  static getUrlAttribute(id: number): string {\r\n    return this.getUrl(eavConstants.metadata.attribute.targetType, eavConstants.metadata.attribute.keyType, id.toString());\r\n  }\r\n\r\n  /** For historic reasons, it's the same as Entity */\r\n  static getUrlContentType(guid: string): string {\r\n    return this.getUrlEntity(guid);\r\n  }\r\n\r\n  static getUrlEntity(guid: string): string {\r\n    return this.getUrl(eavConstants.metadata.entity.targetType, eavConstants.metadata.entity.keyType, guid);\r\n  }\r\n\r\n  static getUrlLanguage(id: string): string {\r\n    return this.getUrl(eavConstants.metadata.language.targetType, eavConstants.metadata.language.keyType, id);\r\n  }\r\n\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const permissionsDialog: DialogConfig = {\r\n  name: 'SET_PERMISSIONS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { PermissionsComponent } = await import('./permissions.component');\r\n    return PermissionsComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { permissionsDialog } from './permissions-dialog.config';\r\nimport { EditRoutesSubItems } from '../edit/edit.routing';\r\n\r\nexport const permissionRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: permissionsDialog },\r\n    children: EditRoutesSubItems\r\n  },\r\n];\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule, NgClass, NgTemplateOutlet\r\n  ]\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\nconst logThis = false;\r\n\r\n@Directive({\r\n  selector: '[appClickStopPropagation]',\r\n  standalone: true,\r\n})\r\nexport class ClickStopPropagationDirective {\r\n  constructor() {\r\n    if (logThis)\r\n      console.log('ClickStopPropagationDirective.constructor');\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    if (logThis)\r\n      console.log('ClickStopPropagationDirective.onClick', event);\r\n    event.stopPropagation();\r\n  }\r\n\r\n}\r\n"],"x_google_ignoreList":[]}