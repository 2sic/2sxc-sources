{"version":3,"sources":["./projects/ng-dialogs/src/app/apps-management/system-info/system-info.component.html","./projects/ng-dialogs/src/app/apps-management/system-info/system-info.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/apps-list-actions/apps-list-actions.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/apps-list-actions/apps-list-actions.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/apps-list-show/apps-list-show.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/apps-list-show/apps-list-show.component.ts","./projects/ng-dialogs/src/app/apps-management/apps-list/apps-list.component.ts","./projects/ng-dialogs/src/app/apps-management/apps-list/apps-list.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/site-languages-status/site-languages-status.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/site-languages-status/site-languages-status.component.html","./projects/ng-dialogs/src/app/apps-management/site-languages/site-languages.component.ts","./projects/ng-dialogs/src/app/apps-management/site-languages/site-languages.component.html","./projects/ng-dialogs/src/app/apps-management/system-settings/system-settings.component.ts","./projects/ng-dialogs/src/app/apps-management/system-settings/system-settings.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-enabled-reason/features-list-enabled-reason.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-enabled-reason/features-list-enabled-reason.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-enabled/features-list-enabled.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-enabled/features-list-enabled.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-name/features-list-name.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-name/features-list-name.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-public/features-list-public.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-public/features-list-public.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-security/features-list-security.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-security/features-list-security.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-ui/features-list-ui.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-ui/features-list-ui.component.ts","./projects/ng-dialogs/src/app/apps-management/manage-features/manage-features.component.html","./projects/ng-dialogs/src/app/apps-management/manage-features/manage-features.component.ts","./projects/ng-dialogs/src/app/apps-management/sxc-insights/sxc-insights.component.html","./projects/ng-dialogs/src/app/apps-management/sxc-insights/sxc-insights.component.ts","./projects/ng-dialogs/src/app/apps-management/apps-management-nav/apps-management-nav.component.html","./projects/ng-dialogs/src/app/apps-management/apps-management-nav/apps-management-nav.component.ts","./projects/ng-dialogs/src/app/shared/components/field-hint/field-hint.component.html","./projects/ng-dialogs/src/app/shared/components/field-hint/field-hint.component.ts","./projects/ng-dialogs/src/app/shared/components/id-field/id-field.component.ts","./projects/ng-dialogs/src/app/shared/components/id-field/id-field.component.html","./projects/ng-dialogs/src/app/shared/helpers/copy-to-clipboard.helper.ts"],"names":["zoneService","snackBar","ngOnInit","this","systemInfoSet$","BehaviorSubject","undefined","buildTemplateVars","getSystemInfo","ngOnDestroy","complete","copyToClipboard","text","open","duration","subscribe","error","next","systemInfoSet","systemInfos$","pipe","map","label","value","System","EavVersion","Platform","PlatformVersion","Zones","toString","Fingerprint","siteInfos$","Site","ZoneId","SiteId","Apps","Languages","templateVars$","combineLatest","systemInfos","siteInfos","SystemInfoComponent","agInit","params","app","data","refresh","flushCache","onFlush","deleteApp","onDelete","AppsListActionsComponent","AppsListShowComponent","router","route","appsListService","apps$","fabOpen$","modules","gridOptions","frameworkComponents","booleanFilterComponent","idFieldComponent","appsListShowComponent","appsListActionsComponent","columnDefs","headerName","field","width","headerClass","cellClass","cellRenderer","sortable","filter","cellRendererParams","tooltipGetter","Id","Guid","valueGetter","showValueGetter","flex","minWidth","sort","onCellClicked","openApp","bind","Thumbnail","pinned","flushApp","subscription","Subscription","fetchAppsList","refreshOnChildClosed","unsubscribe","openChange","browseCatalog","window","createApp","navigate","relativeTo","firstChild","createInheritedApp","importApp","files","state","getAll","apps","IsHidden","result","prompt","Name","delete","alert","confirm","add","events","event","startWith","snapshot","pairwise","AppsListComponent","toggleLanguage","onEnabledToggle","SiteLanguagesStatusComponent","languages$","siteLanguagesStatusComponent","language","Code","handleNameClicked","fetchLanguages","IsEnabled","getLanguages","languages","SiteLanguagesComponent","dialogService","appDialogConfigService","openSiteSettings","sitePrimaryApp","openAppAdministration","AppId","getDialogSettings","openGlobalSettings","globalPrimaryApp","callback","dialogSettings","Context","PrimaryApp","SystemSettingsComponent","feature","FeaturesListEnabledReasonComponent","FeaturesListEnabledComponent","FeaturesListNameComponent","FeaturesListPublicComponent","FeaturesListSecurityComponent","FeaturesListUiComponent","featuresConfigService","featuresListEnabledComponent","featuresListUiComponent","featuresListPublicComponent","featuresListNameComponent","featuresListEnabledReasonComponent","featuresListSecurityComponent","NameId","Enabled","Ui","Public","openFeature","EnabledReason","Expires","replace","Security","Impact","License","features$","showManagement$","showSpinner$","managementUrl$","features","showManagement","showSpinner","managementUrl","fetchFeatures","subscribeToMessages","toggleManagement","getManageFeaturesUrl","url","includes","Error","fromEvent","origin","endsWith","featuresString","JSON","stringify","saveFeatures","res","ManageFeaturesComponent","sxcInsightsService","positiveWholeNumber","loading$","openInsights","$2sxc","http","apiUrl","activatePageLog","form","pageLogDuration","document","activeElement","HTMLElement","blur","resetForm","SxcInsightsComponent","dialogRef","context","zoneId","tabs","tabIndex$","indexOf","path","tabIndex","closeDialog","close","changeTab","index","AppsManagementNavComponent","isError","isShort","toggleIsShort","FieldHintComponent","id","tooltip","copy","IdFieldComponent","str","el","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange"],"mappings":"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","file":"projects_ng-dialogs_src_app_apps-management_apps-management-nav_apps-management-nav_component_ts.735935608ac871972a74.js","sourcesContent":["<div class=\"cards-box\" *ngIf=\"templateVars$ | async as data\">\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Platform</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"info-row\" *ngFor=\"let info of data.systemInfos\">\r\n        <div class=\"info-row__label\">{{ info.label }}</div>\r\n        <div class=\"info-row__value\">\r\n          <span [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">\r\n            {{ info.value }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Current Site</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"info-row\" *ngFor=\"let info of data.siteInfos\">\r\n        <div class=\"info-row__label\">{{ info.label }}</div>\r\n        <div class=\"info-row__value\">\r\n          <span [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">\r\n            {{ info.value }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { SystemInfoSet } from '../models/system-info.model';\r\nimport { ZoneService } from '../services/zone.service';\r\nimport { InfoTemplate, SystemInfoTemplateVars } from './system-info.models';\r\n\r\n@Component({\r\n  selector: 'app-system-info',\r\n  templateUrl: './system-info.component.html',\r\n  styleUrls: ['./system-info.component.scss'],\r\n})\r\nexport class SystemInfoComponent implements OnInit, OnDestroy {\r\n  templateVars$: Observable<SystemInfoTemplateVars>;\r\n\r\n  private systemInfoSet$: BehaviorSubject<SystemInfoSet | undefined>;\r\n\r\n  constructor(private zoneService: ZoneService, private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.systemInfoSet$ = new BehaviorSubject<SystemInfoSet>(undefined);\r\n\r\n    this.buildTemplateVars();\r\n    this.getSystemInfo();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.systemInfoSet$.complete();\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  private getSystemInfo(): void {\r\n    this.zoneService.getSystemInfo().subscribe({\r\n      error: () => {\r\n        this.systemInfoSet$.next(undefined);\r\n      },\r\n      next: (systemInfoSet) => {\r\n        this.systemInfoSet$.next(systemInfoSet);\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildTemplateVars(): void {\r\n    const systemInfos$ = this.systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) { return; }\r\n        const info: InfoTemplate[] = [\r\n          { label: 'EAV / 2sic Version', value: systemInfoSet.System.EavVersion },\r\n          { label: 'Platform', value: systemInfoSet.System.Platform },\r\n          { label: 'Platform Version', value: systemInfoSet.System.PlatformVersion },\r\n          { label: 'Zones', value: systemInfoSet.System.Zones.toString() },\r\n          { label: 'Fingerprint', value: systemInfoSet.System.Fingerprint },\r\n        ];\r\n        return info;\r\n      })\r\n    );\r\n    const siteInfos$ = this.systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) { return; }\r\n        const info: InfoTemplate[] = [\r\n          { label: 'Zone Id', value: systemInfoSet.Site.ZoneId.toString() },\r\n          { label: 'Site Id', value: systemInfoSet.Site.SiteId.toString() },\r\n          { label: 'Apps', value: systemInfoSet.Site.Apps.toString() },\r\n          { label: 'Languages', value: systemInfoSet.Site.Languages.toString() },\r\n        ];\r\n        return info;\r\n      })\r\n    );\r\n    this.templateVars$ = combineLatest([systemInfos$, siteInfos$]).pipe(\r\n      map(([systemInfos, siteInfos]) => {\r\n        const templateVars: SystemInfoTemplateVars = {\r\n          systemInfos,\r\n          siteInfos,\r\n        };\r\n        return templateVars;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button icon\"\r\n    [tippy]=\"app.IsGlobal ? 'This app is global' : app.IsInherited ? 'This app is inherited' : ''\"\r\n    [tippyDisabled]=\"!app.IsGlobal && !app.IsInherited\">\r\n    <mat-icon *ngIf=\"app.IsGlobal\">foundation</mat-icon>\r\n    <mat-icon *ngIf=\"app.IsInherited\">holiday_village</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple tippy=\"More\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"grid-more-menu\">\r\n  <button mat-menu-item (click)=\"flushCache()\">\r\n    <mat-icon>cached</mat-icon>\r\n    <span>Flush cache</span>\r\n  </button>\r\n  <button mat-menu-item [disabled]=\"!app.IsApp\" (click)=\"deleteApp()\">\r\n    <mat-icon>delete</mat-icon>\r\n    <span>Delete</span>\r\n  </button>\r\n</mat-menu>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { App } from '../../models/app.model';\r\nimport { AppsListActionsParams } from './apps-list-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-apps-list-actions',\r\n  templateUrl: './apps-list-actions.component.html',\r\n  styleUrls: ['./apps-list-actions.component.scss'],\r\n})\r\nexport class AppsListActionsComponent implements ICellRendererAngularComp {\r\n  app: App;\r\n  private params: AppsListActionsParams;\r\n\r\n  constructor() { }\r\n\r\n  agInit(params: AppsListActionsParams) {\r\n    this.params = params;\r\n    this.app = this.params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  flushCache() {\r\n    this.params.onFlush(this.app);\r\n  }\r\n\r\n  deleteApp() {\r\n    this.params.onDelete(this.app);\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon tippy=\"Show this app to users\" *ngIf=\"value\">visibility</mat-icon>\r\n  <mat-icon tippy=\"Don't show this app to users\" *ngIf=\"!value\">visibility_off</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-apps-list-show',\r\n  templateUrl: './apps-list-show.component.html',\r\n  styleUrls: ['./apps-list-show.component.scss'],\r\n})\r\nexport class AppsListShowComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { AllCommunityModules, CellClickedEvent, GridOptions, ICellRendererParams, ValueGetterParams } from '@ag-grid-community/all-modules';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { filter, map, pairwise, startWith } from 'rxjs/operators';\r\nimport { ImportAppDialogData } from '../../import-app/import-app-dialog.config';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { AppsListActionsComponent } from '../ag-grid-components/apps-list-actions/apps-list-actions.component';\r\nimport { AppsListActionsParams } from '../ag-grid-components/apps-list-actions/apps-list-actions.models';\r\nimport { AppsListShowComponent } from '../ag-grid-components/apps-list-show/apps-list-show.component';\r\nimport { App } from '../models/app.model';\r\nimport { AppsListService } from '../services/apps-list.service';\r\n\r\n@Component({\r\n  selector: 'app-apps-list',\r\n  templateUrl: './apps-list.component.html',\r\n  styleUrls: ['./apps-list.component.scss'],\r\n})\r\nexport class AppsListComponent implements OnInit, OnDestroy {\r\n  apps$ = new BehaviorSubject<App[]>(null);\r\n  fabOpen$ = new BehaviorSubject(false);\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      idFieldComponent: IdFieldComponent,\r\n      appsListShowComponent: AppsListShowComponent,\r\n      appsListActionsComponent: AppsListActionsComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'Id', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter',\r\n        cellRendererParams: {\r\n          tooltipGetter: (app: App) => `ID: ${app.Id}\\nGUID: ${app.Guid}`,\r\n        } as IdFieldParams,\r\n      },\r\n      {\r\n        headerName: 'Show', field: 'IsHidden', width: 70, headerClass: 'dense', cellClass: 'icons no-outline', sortable: true,\r\n        filter: 'booleanFilterComponent', cellRenderer: 'appsListShowComponent', valueGetter: this.showValueGetter,\r\n      },\r\n      {\r\n        headerName: 'Name', field: 'Name', flex: 2, minWidth: 250, cellClass: 'apps-list-primary-action highlight', sortable: true,\r\n        sort: 'asc', filter: 'agTextColumnFilter', onCellClicked: this.openApp.bind(this), cellRenderer: (params: ICellRendererParams) => {\r\n          const app: App = params.data;\r\n          if (app.Thumbnail != null) {\r\n            return `\r\n            <div class=\"container\">\r\n              <img class=\"image logo\" src=\"${app.Thumbnail}?w=40&h=40&mode=crop\"></img>\r\n              <div class=\"text\">${params.value}</div>\r\n            </div>`;\r\n          } else {\r\n            return `\r\n            <div class=\"container\">\r\n              <div class=\"image logo\">\r\n                <span class=\"material-icons-outlined\">star_border</span>\r\n              </div>\r\n              <div class=\"text\">${params.value}</div>\r\n            </div>`;\r\n          }\r\n        },\r\n      },\r\n      {\r\n        headerName: 'Folder', field: 'Folder', flex: 2, minWidth: 250, cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter',\r\n      },\r\n      {\r\n        headerName: 'Version', field: 'Version', width: 78, headerClass: 'dense', cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter',\r\n      },\r\n      {\r\n        headerName: 'Items', field: 'Items', width: 70, headerClass: 'dense', cellClass: 'number-cell no-outline', sortable: true,\r\n        filter: 'agNumberColumnFilter',\r\n      },\r\n      {\r\n        width: 82, cellClass: 'secondary-action no-padding', cellRenderer: 'appsListActionsComponent', pinned: 'right',\r\n        cellRendererParams: {\r\n          onDelete: this.deleteApp.bind(this),\r\n          onFlush: this.flushApp.bind(this),\r\n        } as AppsListActionsParams,\r\n      },\r\n    ],\r\n  };\r\n\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private appsListService: AppsListService,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchAppsList();\r\n    this.refreshOnChildClosed();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.apps$.complete();\r\n    this.fabOpen$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  openChange(open: boolean) {\r\n    this.fabOpen$.next(open);\r\n  }\r\n\r\n  browseCatalog() {\r\n    window.open('https://2sxc.org/apps', '_blank');\r\n  }\r\n\r\n  createApp() {\r\n    this.router.navigate(['create'], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  createInheritedApp(): void {\r\n    this.router.navigate(['create-inherited'], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  importApp(files?: File[]) {\r\n    const dialogData: ImportAppDialogData = { files };\r\n    this.router.navigate(['import'], { relativeTo: this.route.firstChild, state: dialogData });\r\n  }\r\n\r\n  private fetchAppsList() {\r\n    this.appsListService.getAll().subscribe(apps => {\r\n      this.apps$.next(apps);\r\n    });\r\n  }\r\n\r\n  private showValueGetter(params: ValueGetterParams) {\r\n    const app: App = params.data;\r\n    return !app.IsHidden;\r\n  }\r\n\r\n  private deleteApp(app: App) {\r\n    const result = prompt(`This cannot be undone. To really delete this app, type 'yes!' or type/paste the app-name here. Are you sure want to delete '${app.Name}' (${app.Id})?`);\r\n    if (result === null) { return; }\r\n    if (result === app.Name || result === 'yes!') {\r\n      this.snackBar.open('Deleting...');\r\n      this.appsListService.delete(app.Id).subscribe(() => {\r\n        this.snackBar.open('Deleted', null, { duration: 2000 });\r\n        this.fetchAppsList();\r\n      });\r\n    } else {\r\n      alert('Input did not match - will not delete');\r\n    }\r\n  }\r\n\r\n  private flushApp(app: App) {\r\n    if (!confirm(`Flush the App Cache for ${app.Name} (${app.Id})?`)) { return; }\r\n    this.snackBar.open('Flushing cache...');\r\n    this.appsListService.flushCache(app.Id).subscribe(() => {\r\n      this.snackBar.open('Cache flushed', null, { duration: 2000 });\r\n    });\r\n  }\r\n\r\n  private openApp(params: CellClickedEvent) {\r\n    const appId = (params.data as App).Id;\r\n    this.router.navigate([appId.toString()], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        startWith(!!this.route.snapshot.firstChild.firstChild),\r\n        map(() => !!this.route.snapshot.firstChild.firstChild),\r\n        pairwise(),\r\n        filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n      ).subscribe(() => {\r\n        this.fetchAppsList();\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"apps$ | async\" [modules]=\"modules\" [gridOptions]=\"gridOptions\"\r\n    appDragAndDrop [allowedFileTypes]=\"'zip'\" (filesDropped)=\"importApp($event)\">\r\n  </ag-grid-angular>\r\n\r\n  <div class=\"grid-more-actions-box\"></div>\r\n\r\n  <eco-fab-speed-dial class=\"grid-fab\" [ngClass]=\"{ 'fab-opened': (fabOpen$ | async) }\"\r\n    (openChange)=\"openChange($event)\">\r\n    <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n      <button mat-fab>\r\n        <mat-icon class=\"spin180\">{{ (fabOpen$ | async) ? 'close' : 'add' }}</mat-icon>\r\n      </button>\r\n    </eco-fab-speed-dial-trigger>\r\n\r\n    <eco-fab-speed-dial-actions>\r\n      <button mat-mini-fab label=\"Find more apps\" (click)=\"browseCatalog()\">\r\n        <mat-icon>search</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab label=\"Create inherited app\" (click)=\"createInheritedApp()\">\r\n        <mat-icon>holiday_village</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab label=\"Import app\" (click)=\"importApp()\">\r\n        <mat-icon>cloud_upload</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab label=\"Create app\" (click)=\"createApp()\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </eco-fab-speed-dial-actions>\r\n  </eco-fab-speed-dial>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { SiteLanguage } from '../../models/site-language.model';\r\nimport { SiteLanguagesStatusParams } from './site-languages-status.models';\r\n\r\n@Component({\r\n  selector: 'app-site-languages-status',\r\n  templateUrl: './site-languages-status.component.html',\r\n  styleUrls: ['./site-languages-status.component.scss'],\r\n})\r\nexport class SiteLanguagesStatusComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n  private params: SiteLanguagesStatusParams;\r\n\r\n  agInit(params: SiteLanguagesStatusParams) {\r\n    this.params = params;\r\n    this.value = this.params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  toggleLanguage() {\r\n    const language: SiteLanguage = this.params.data;\r\n    this.params.onEnabledToggle(language);\r\n  }\r\n}\r\n","<mat-slide-toggle [checked]=\"value\" (change)=\"toggleLanguage()\"></mat-slide-toggle>\r\n","import { AllCommunityModules, CellClickedEvent, GridOptions } from '@ag-grid-community/all-modules';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { SiteLanguagesStatusComponent } from '../ag-grid-components/site-languages-status/site-languages-status.component';\r\nimport { SiteLanguagesStatusParams } from '../ag-grid-components/site-languages-status/site-languages-status.models';\r\nimport { SiteLanguage } from '../models/site-language.model';\r\nimport { ZoneService } from '../services/zone.service';\r\n\r\n@Component({\r\n  selector: 'app-site-languages',\r\n  templateUrl: './site-languages.component.html',\r\n  styleUrls: ['./site-languages.component.scss'],\r\n})\r\nexport class SiteLanguagesComponent implements OnInit, OnDestroy {\r\n  languages$ = new BehaviorSubject<SiteLanguage[]>(null);\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      idFieldComponent: IdFieldComponent,\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      siteLanguagesStatusComponent: SiteLanguagesStatusComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'Code', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter',\r\n        cellRendererParams: {\r\n          tooltipGetter: (language: SiteLanguage) => `ID: ${language.Code}`,\r\n        } as IdFieldParams,\r\n      },\r\n      {\r\n        headerName: 'Name', field: 'Culture', flex: 2, minWidth: 250, cellClass: 'primary-action highlight no-outline', sortable: true,\r\n        sort: 'asc', filter: 'agTextColumnFilter', onCellClicked: this.handleNameClicked.bind(this),\r\n      },\r\n      {\r\n        headerName: 'Status', field: 'IsEnabled', width: 72, headerClass: 'dense', cellClass: 'no-padding no-outline',\r\n        cellRenderer: 'siteLanguagesStatusComponent', sortable: true, filter: 'booleanFilterComponent',\r\n        cellRendererParams: {\r\n          onEnabledToggle: this.toggleLanguage.bind(this),\r\n        } as SiteLanguagesStatusParams,\r\n      },\r\n    ],\r\n  };\r\n\r\n  constructor(private zoneService: ZoneService) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchLanguages();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.languages$.complete();\r\n  }\r\n\r\n  private handleNameClicked(params: CellClickedEvent) {\r\n    const language: SiteLanguage = params.data;\r\n    this.toggleLanguage(language);\r\n  }\r\n\r\n  private toggleLanguage(language: SiteLanguage) {\r\n    this.zoneService.toggleLanguage(language.Code, !language.IsEnabled).subscribe(() => {\r\n      this.fetchLanguages();\r\n    });\r\n  }\r\n\r\n  private fetchLanguages() {\r\n    this.zoneService.getLanguages().subscribe(languages => {\r\n      this.languages$.next(languages);\r\n    });\r\n  }\r\n}\r\n","<div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"languages$ | async\" [modules]=\"modules\"\r\n    [gridOptions]=\"gridOptions\">\r\n  </ag-grid-angular>\r\n\r\n  <div class=\"grid-more-actions-box\"></div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { AppDialogConfigService } from '../../app-administration/services';\r\nimport { DialogContextSiteApp } from '../../shared/models/dialog-context.models';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-system-settings',\r\n  templateUrl: './system-settings.component.html',\r\n  styleUrls: ['./system-settings.component.scss'],\r\n})\r\nexport class SystemSettingsComponent {\r\n  private sitePrimaryApp: DialogContextSiteApp;\r\n  private globalPrimaryApp: DialogContextSiteApp;\r\n\r\n  constructor(private dialogService: DialogService, private appDialogConfigService: AppDialogConfigService) { }\r\n\r\n  openSiteSettings(): void {\r\n    if (this.sitePrimaryApp == null) {\r\n      this.getDialogSettings(() => { this.openSiteSettings(); });\r\n      return;\r\n    }\r\n\r\n    this.dialogService.openAppAdministration(this.sitePrimaryApp.ZoneId, this.sitePrimaryApp.AppId, 'app');\r\n  }\r\n\r\n  openGlobalSettings(): void {\r\n    if (this.globalPrimaryApp == null) {\r\n      this.getDialogSettings(() => { this.openGlobalSettings(); });\r\n      return;\r\n    }\r\n\r\n    this.dialogService.openAppAdministration(this.globalPrimaryApp.ZoneId, this.globalPrimaryApp.AppId, 'app');\r\n  }\r\n\r\n  private getDialogSettings(callback: () => void): void {\r\n    this.appDialogConfigService.getDialogSettings(0).subscribe(dialogSettings => {\r\n      this.sitePrimaryApp = dialogSettings.Context.Site.PrimaryApp;\r\n      this.globalPrimaryApp = dialogSettings.Context.System.PrimaryApp;\r\n      callback();\r\n    });\r\n  }\r\n}\r\n","<div class=\"cards-box\">\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Manage Site Settings</mat-card-title>\r\n      <div class=\"mat-card-header-icon\">\r\n        <mat-icon>settings</mat-icon>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      This includes both pre-defined SystemSettings as well as custom Settings. It will affect the entire Site / Portal.\r\n      See <a href=\"http://r.2sxc.org/settings\" target=\"_blank\">docs</a>.\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-button (click)=\"openSiteSettings()\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        <span>Open Site Settings</span>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Manage Global Settings</mat-card-title>\r\n      <div class=\"mat-card-header-icon\">\r\n        <mat-icon>settings_suggest</mat-icon>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      This includes both pre-defined SystemSettings as well as custom Settings. It will affect the entire Installation.\r\n      See <a href=\"http://r.2sxc.org/settings\" target=\"_blank\">docs</a>.\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-button (click)=\"openGlobalSettings()\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        <span>Open Global Settings</span>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../models/feature.model';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled-reason',\r\n  templateUrl: './features-list-enabled-reason.component.html',\r\n  styleUrls: ['./features-list-enabled-reason.component.scss'],\r\n})\r\nexport class FeaturesListEnabledReasonComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n  feature: Feature;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.feature = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div [tippy]=\"feature.EnabledReasonDetailed\">{{ value }}</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled',\r\n  templateUrl: './features-list-enabled.component.html',\r\n  styleUrls: ['./features-list-enabled.component.scss'],\r\n})\r\nexport class FeaturesListEnabledComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon>{{ value ? 'check_box' : 'check_box_outline_blank' }}</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../models/feature.model';\r\n\r\n@Component({\r\n  selector: 'app-features-list-name',\r\n  templateUrl: './features-list-name.component.html',\r\n  styleUrls: ['./features-list-name.component.scss'],\r\n})\r\nexport class FeaturesListNameComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n  feature: Feature;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.feature = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div [tippy]=\"feature.Description\">{{ value }}</div>\r\n","<div class=\"icon-container\">\r\n  <mat-icon *ngIf=\"value\">person</mat-icon>\r\n  <mat-icon *ngIf=\"!value\">remove</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-features-list-public',\r\n  templateUrl: './features-list-public.component.html',\r\n  styleUrls: ['./features-list-public.component.scss'],\r\n})\r\nexport class FeaturesListPublicComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../models/feature.model';\r\n\r\n@Component({\r\n  selector: 'app-features-list-security',\r\n  templateUrl: './features-list-security.component.html',\r\n  styleUrls: ['./features-list-security.component.scss'],\r\n})\r\nexport class FeaturesListSecurityComponent implements ICellRendererAngularComp {\r\n  value: number;\r\n  feature: Feature;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.feature = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div [tippy]=\"feature.Security.Message\">{{ value }}</div>\r\n","<div class=\"icon-container\">\r\n  <mat-icon *ngIf=\"value\">visibility</mat-icon>\r\n  <mat-icon *ngIf=\"!value\">remove</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-features-list-ui',\r\n  templateUrl: './features-list-ui.component.html',\r\n  styleUrls: ['./features-list-ui.component.scss'],\r\n})\r\nexport class FeaturesListUiComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"templateVars$ | async as data\">\r\n\r\n  <div class=\"grid-wrapper mat-tab-grid-wrapper\" [ngClass]=\"{ 'iframe-wrapper': data.showManagement }\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [ngClass]=\"{ 'force-hide': data.showManagement }\"\r\n      [rowData]=\"data.features\" [modules]=\"modules\" [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n\r\n    <mat-spinner class=\"spinner\" *ngIf=\"data.showSpinner\" mode=\"indeterminate\" diameter=\"20\" color=\"accent\">\r\n    </mat-spinner>\r\n\r\n    <iframe class=\"iframe\" *ngIf=\"data.showManagement\" [src]=\"data.managementUrl | safeResourceUrl\"></iframe>\r\n\r\n    <div class=\"grid-more-actions-box\"></div>\r\n\r\n    <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Manage features\" *ngIf=\"!data.showManagement\"\r\n      (click)=\"toggleManagement()\">\r\n      <mat-icon>tune</mat-icon>\r\n    </button>\r\n  </div>\r\n</ng-container>\r\n","import { AllCommunityModules, GridOptions } from '@ag-grid-community/all-modules';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { BehaviorSubject, combineLatest, fromEvent, Subscription } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { FeaturesListEnabledReasonComponent } from '../ag-grid-components/features-list-enabled-reason/features-list-enabled-reason.component';\r\nimport { FeaturesListEnabledComponent } from '../ag-grid-components/features-list-enabled/features-list-enabled.component';\r\nimport { FeaturesListNameComponent } from '../ag-grid-components/features-list-name/features-list-name.component';\r\nimport { FeaturesListPublicComponent } from '../ag-grid-components/features-list-public/features-list-public.component';\r\nimport { FeaturesListSecurityComponent } from '../ag-grid-components/features-list-security/features-list-security.component';\r\nimport { FeaturesListUiComponent } from '../ag-grid-components/features-list-ui/features-list-ui.component';\r\nimport { Feature } from '../models/feature.model';\r\nimport { ManageFeaturesMessageData } from '../models/manage-features-message-data.model';\r\nimport { FeaturesConfigService } from '../services/features-config.service';\r\n\r\n@Component({\r\n  selector: 'app-manage-features',\r\n  templateUrl: './manage-features.component.html',\r\n  styleUrls: ['./manage-features.component.scss'],\r\n})\r\nexport class ManageFeaturesComponent implements OnInit, OnDestroy {\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      idFieldComponent: IdFieldComponent,\r\n      featuresListEnabledComponent: FeaturesListEnabledComponent,\r\n      featuresListUiComponent: FeaturesListUiComponent,\r\n      featuresListPublicComponent: FeaturesListPublicComponent,\r\n      featuresListNameComponent: FeaturesListNameComponent,\r\n      featuresListEnabledReasonComponent: FeaturesListEnabledReasonComponent,\r\n      featuresListSecurityComponent: FeaturesListSecurityComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        field: 'ID', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter',\r\n        valueGetter: (params) => (params.data as Feature).Guid,\r\n        cellRendererParams: {\r\n          tooltipGetter: (feature: Feature) => `NameId: ${feature.NameId}\\nGUID: ${feature.Guid}`,\r\n        } as IdFieldParams,\r\n      },\r\n      {\r\n        field: 'Enabled', width: 80, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'booleanFilterComponent', cellRenderer: 'featuresListEnabledComponent',\r\n        valueGetter: (params) => (params.data as Feature).Enabled,\r\n      },\r\n      {\r\n        field: 'UI', width: 70, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'booleanFilterComponent', cellRenderer: 'featuresListUiComponent',\r\n        valueGetter: (params) => (params.data as Feature).Ui,\r\n      },\r\n      {\r\n        field: 'Public', width: 70, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'booleanFilterComponent', cellRenderer: 'featuresListPublicComponent',\r\n        valueGetter: (params) => (params.data as Feature).Public,\r\n      },\r\n      {\r\n        field: 'Name', flex: 3, minWidth: 250, cellClass: 'primary-action highlight', sortable: true,\r\n        filter: 'agTextColumnFilter', cellRenderer: 'featuresListNameComponent',\r\n        onCellClicked: (params) => this.openFeature(params.data),\r\n        valueGetter: (params) => (params.data as Feature).Name,\r\n      },\r\n      {\r\n        field: 'EnabledReason', headerName: 'Reason', flex: 1, minWidth: 150, cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter', cellRenderer: 'featuresListEnabledReasonComponent',\r\n        valueGetter: (params) => (params.data as Feature).EnabledReason,\r\n      },\r\n      {\r\n        field: 'Expires', flex: 1, minWidth: 200, cellClass: 'no-outline',\r\n        sortable: true, filter: 'agTextColumnFilter',\r\n        valueGetter: (params) => (params.data as Feature).Expires?.replace('T', ' ').replace('Z', ''),\r\n      },\r\n      {\r\n        field: 'Security', width: 80, cellClass: 'no-outline', cellRenderer: 'featuresListSecurityComponent',\r\n        sortable: true, filter: 'agNumberColumnFilter',\r\n        valueGetter: (params) => (params.data as Feature).Security.Impact,\r\n      },\r\n      {\r\n        field: 'License', flex: 1, minWidth: 150, cellClass: 'no-outline', sortable: true, filter: 'agTextColumnFilter',\r\n        valueGetter: (params) => (params.data as Feature).License,\r\n      },\r\n    ],\r\n  };\r\n\r\n  private features$ = new BehaviorSubject<Feature[]>(null);\r\n  private showManagement$ = new BehaviorSubject(false);\r\n  private showSpinner$ = new BehaviorSubject(false);\r\n  private managementUrl$ = new BehaviorSubject<string>(null);\r\n  templateVars$ = combineLatest([this.features$, this.showManagement$, this.showSpinner$, this.managementUrl$]).pipe(\r\n    map(([features, showManagement, showSpinner, managementUrl]) => ({ features, showManagement, showSpinner, managementUrl })),\r\n  );\r\n  private subscription = new Subscription();\r\n\r\n  constructor(private featuresConfigService: FeaturesConfigService) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchFeatures();\r\n    this.subscribeToMessages();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.features$.complete();\r\n    this.showManagement$.complete();\r\n    this.showSpinner$.complete();\r\n    this.managementUrl$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  toggleManagement() {\r\n    this.showManagement$.next(!this.showManagement$.value);\r\n    if (!this.showManagement$.value) { return; }\r\n\r\n    this.showSpinner$.next(true);\r\n    this.managementUrl$.next(null); // reset url\r\n    this.featuresConfigService.getManageFeaturesUrl().subscribe(url => {\r\n      this.showSpinner$.next(false);\r\n      if (url.includes('error: user needs host permissions')) {\r\n        this.showManagement$.next(false);\r\n        throw new Error('User needs host permissions!');\r\n      }\r\n      this.managementUrl$.next(url);\r\n    });\r\n  }\r\n\r\n  private openFeature(feature: Feature) {\r\n    window.open(`https://2sxc.org/r/f/${feature.Guid}`, '_blank');\r\n  }\r\n\r\n  private fetchFeatures() {\r\n    this.featuresConfigService.getAll().subscribe(features => {\r\n      this.features$.next(features);\r\n    });\r\n  }\r\n\r\n  /** Waits for a json message from the iframe and sends it to the server */\r\n  private subscribeToMessages() {\r\n    this.subscription.add(\r\n      fromEvent<MessageEvent>(window, 'message').pipe(\r\n        filter(() => this.showManagement$.value),\r\n        filter(event => event.origin.endsWith('2sxc.org') === true),\r\n        filter(event => event.data != null),\r\n      ).subscribe(event => {\r\n        const features: ManageFeaturesMessageData = event.data;\r\n        const featuresString = JSON.stringify(features);\r\n        this.featuresConfigService.saveFeatures(featuresString).subscribe(res => {\r\n          this.showManagement$.next(false);\r\n          this.fetchFeatures();\r\n        });\r\n      })\r\n    );\r\n  }\r\n}\r\n","<div class=\"cards-box\">\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>2sxc Insights for Super Users</mat-card-title>\r\n      <div class=\"mat-card-header-icon\">\r\n        <mat-icon>speed</mat-icon>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      This is to access a special section to see what is really in the server memory. It's intended for extensive\r\n      debugging\r\n      - see also <a href=\"https://2sxc.org/en/blog/post/using-2sxc-insights\" target=\"_blank\">this blog post</a>.\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-button (click)=\"openInsights()\">\r\n        <mat-icon>speed</mat-icon>\r\n        <span>Open 2sxc Insights</span>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Activate Page Level Logging</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <form #activateLogForm=\"ngForm\" class=\"activate-log-form\" (ngSubmit)=\"activatePageLog(activateLogForm)\">\r\n        <div>\r\n          This will place insights-logs in the HTML of the user output for users with ?debug=true in the url. It can\r\n          only be activated for short periods of time.\r\n        </div>\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Duration in Minutes</mat-label>\r\n          <input matInput type=\"number\" min=\"0\" required [pattern]=\"positiveWholeNumber\" [(ngModel)]=\"pageLogDuration\"\r\n            name=\"Duration\" #duration=\"ngModel\" [disabled]=\"loading$ | async\">\r\n        </mat-form-field>\r\n        <ng-container *ngIf=\"duration.touched && duration.errors\">\r\n          <app-field-hint *ngIf=\"duration.errors.pattern\" [isError]=\"true\">\r\n            Only positive whole numbers\r\n          </app-field-hint>\r\n        </ng-container>\r\n        <div class=\"form-actions\">\r\n          <button mat-raised-button type=\"submit\" color=\"accent\"\r\n            [disabled]=\"!activateLogForm.valid || (loading$ | async)\">\r\n            Activate\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { SxcInsightsService } from '../services/sxc-insights.service';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-sxc-insights',\r\n  templateUrl: './sxc-insights.component.html',\r\n  styleUrls: ['./sxc-insights.component.scss'],\r\n})\r\nexport class SxcInsightsComponent implements OnInit, OnDestroy {\r\n  pageLogDuration: number;\r\n  positiveWholeNumber = /^[1-9][0-9]*$/;\r\n  loading$ = new BehaviorSubject(false);\r\n\r\n  constructor(private sxcInsightsService: SxcInsightsService, private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.loading$.complete();\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/help'), '_blank');\r\n  }\r\n\r\n  activatePageLog(form: NgForm) {\r\n    this.loading$.next(true);\r\n    this.snackBar.open('Activating...');\r\n    this.sxcInsightsService.activatePageLog(this.pageLogDuration).subscribe(res => {\r\n      this.loading$.next(false);\r\n      this.snackBar.open(res, null, { duration: 4000 });\r\n    });\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n    form.resetForm();\r\n  }\r\n}\r\n","<div class=\"nav-component-wrapper\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Manage Apps in Zone {{ zoneId }}</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <!-- spm NOTE: we use mat-tab-group because mat-tab-nav-bar doesn't have animations and doesn't look pretty -->\r\n  <mat-tab-group class=\"mat-tab-group-max-height\" dynamicHeight color=\"accent\" (selectedTabChange)=\"changeTab($event)\"\r\n    [selectedIndex]=\"tabIndex$ | async\">\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"System Info\">\r\n        <mat-icon>settings_suggest</mat-icon>\r\n        <span>System</span>\r\n      </div>\r\n      <app-system-info *matTabContent></app-system-info>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Apps\">\r\n        <mat-icon>star_border</mat-icon>\r\n        <span>Apps</span>\r\n      </div>\r\n      <app-apps-list *matTabContent></app-apps-list>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Languages\">\r\n        <mat-icon>translate</mat-icon>\r\n        <span>Languages</span>\r\n      </div>\r\n      <app-site-languages *matTabContent></app-site-languages>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"System Settings\">\r\n        <mat-icon>settings</mat-icon>\r\n        <span>Settings</span>\r\n      </div>\r\n      <app-system-settings *matTabContent></app-system-settings>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Features\">\r\n        <mat-icon>tune</mat-icon>\r\n        <span>Features</span>\r\n      </div>\r\n      <app-manage-features *matTabContent></app-manage-features>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"2sxc Insights\">\r\n        <mat-icon>speed</mat-icon>\r\n        <span>2sxc Insights</span>\r\n      </div>\r\n      <app-sxc-insights *matTabContent></app-sxc-insights>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, startWith } from 'rxjs/operators';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Component({\r\n  selector: 'app-apps-management-nav',\r\n  templateUrl: './apps-management-nav.component.html',\r\n  styleUrls: ['./apps-management-nav.component.scss'],\r\n})\r\nexport class AppsManagementNavComponent implements OnInit {\r\n  zoneId = this.context.zoneId;\r\n\r\n  private tabs = ['system', 'list', 'languages', 'settings', 'features', 'sxc-insights']; // tabs order has to match template\r\n  tabIndex$ = this.router.events.pipe(\r\n    filter(event => event instanceof NavigationEnd),\r\n    map(() => this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path)),\r\n    filter(tabIndex => tabIndex >= 0),\r\n    startWith(this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path)),\r\n  );\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AppsManagementNavComponent>,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeTab(event: MatTabChangeEvent) {\r\n    const path = this.tabs[event.index];\r\n    this.router.navigate([path], { relativeTo: this.route });\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\" [ngSwitch]=\"isError\">\r\n  <mat-hint *ngSwitchCase=\"false\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-hint>\r\n\r\n  <mat-error *ngSwitchCase=\"true\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-error>\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: IdFieldParams) {\r\n    this.id = params.value;\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy() {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}