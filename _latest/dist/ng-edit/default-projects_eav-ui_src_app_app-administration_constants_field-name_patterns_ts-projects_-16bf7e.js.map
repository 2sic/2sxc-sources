{"version":3,"file":"default-projects_eav-ui_src_app_app-administration_constants_field-name_patterns_ts-projects_-16bf7e.js","mappings":"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","sources":["./projects/eav-ui/src/app/app-administration/constants/field-name.patterns.ts","./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields.helpers.ts","./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/reserved-names.directive.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/shared/fields/input-type-catalog.ts","./node_modules/rxjs/dist/esm/internal/operators/toArray.js"],"sourcesContent":["export const fieldNamePattern = /^[A-Za-z][A-Za-z0-9]+$/;\r\nexport const fieldNameError = 'Standard letters and numbers are allowed. Must start with a letter.';\r\n","import { computed, Injectable, Signal } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\n\r\n// We should list all the \"full\" paths here, so it's easier to find when searching for API calls\r\nexport const webApiTypeRoot = 'admin/type/';\r\nconst webApiTypeGet = 'admin/type/get';\r\nconst webApiTypes = 'admin/type/list';\r\nconst webApiTypeScopes = 'admin/type/scopes';\r\nconst webApiTypeSave = 'admin/type/save';\r\nconst webApiTypeDelete = 'admin/type/delete';\r\nconst webApiTypeImport = 'admin/type/import';\r\nconst webApiTypeAddGhost = 'admin/type/addghost';\r\n\r\n@Injectable()\r\nexport class ContentTypesService extends HttpServiceBase {\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.getHttpApiUrl<ContentType>(webApiTypeGet, {\r\n      params: { appId: this.appId, contentTypeId: staticName }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypeSig(staticName: string, initial: undefined): Signal<ContentType> {\r\n    return this.getSignal<ContentType>(webApiTypeGet, {\r\n      params: { appId: this.appId, contentTypeId: staticName }\r\n    }, initial);\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.getHttpApiUrl<ContentType[]>(webApiTypes, {\r\n      params: { appId: this.appId, scope }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypesSig(scope: string, initial: undefined): Signal<ContentType[]> {\r\n    return this.getSignal<ContentType[]>(webApiTypes, {\r\n      params: { appId: this.appId, scope }\r\n    }, initial);\r\n  }\r\n\r\n  // TODO: remove this method after upgrade to V2\r\n  getScopes() {\r\n    return this.getHttpApiUrl<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(webApiTypeScopes, {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => {\r\n        // wip during upgrade:\r\n        const scopes = scopesData.old;\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getScopesSig(initial: undefined): Signal<ScopeOption[]> {\r\n    const scopesSignal = this.getSignal<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(\r\n      webApiTypeScopes,\r\n      { params: { appId: this.appId } }, initial,\r\n    );\r\n\r\n    const scopeOptionsSignal = computed(() => {\r\n      const scopesData = scopesSignal();\r\n\r\n      // Add null/undefined check here\r\n      if (!scopesData || !scopesData.old) {\r\n        return []; // Return an empty array or handle this case as appropriate\r\n      }\r\n\r\n      const scopes = scopesData.old;\r\n      return Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n    });\r\n\r\n    return scopeOptionsSignal;\r\n  }\r\n\r\n\r\n  getScopesV2() {\r\n    return this.getHttpApiUrl<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(webApiTypeScopes, {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => scopesData.scopes),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeSave), contentType, {\r\n      params: { appid: this.appId },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeDelete), {\r\n      params: { appid: this.appId, staticName: contentType.StaticName },\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeAddGhost), null, {\r\n      params: { appid: this.appId, sourceStaticName },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\n\r\nconst webApiAppPartsGet = 'admin/appParts/get';\r\n@Injectable()\r\nexport class ExportAppPartsService extends HttpServiceBase {\r\n\r\n  getContentInfo(scope: string, initial: ContentInfo) {\r\n    return this.getSignal<ContentInfo>(webApiAppPartsGet, {\r\n      params: { appid: this.appId, zoneId: this.zoneId, scope }\r\n    }, initial);\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.appId\r\n      + '&zoneId=' + this.zoneId\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { AppInfo } from '../models/app-info.model';\r\n\r\n const webApiAppRootStatistics = 'admin/app/Statistics';\r\n const webApiAppRootSaveData = 'admin/app/SaveData';\r\n\r\n\r\n@Injectable()\r\nexport class ExportAppService extends HttpServiceBase {\r\n\r\n  getAppInfo(initial: AppInfo) {\r\n    return this.getSignal<AppInfo>(webApiAppRootStatistics, {\r\n      params: { appid: this.appId, zoneId: this.zoneId },\r\n    }, initial);\r\n  }\r\n\r\n  /** Generate the export app path. It can be extended with additional parameters */\r\n  exportAppUrl() {\r\n    return `${this.apiUrl(`${webApiAppRoot}Export`)}?appId=${this.appId}&zoneId=${this.zoneId}`;\r\n  }\r\n\r\n  exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }) {\r\n    // return this.get<boolean>(webApiAppRoot + 'SaveData', {\r\n    return this.getHttpApiUrl<boolean>(webApiAppRootSaveData, {\r\n      params: {\r\n        appid: this.appId,\r\n        zoneId: this.zoneId,\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService extends HttpServiceBase {\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.appId,\r\n        zoneId: this.zoneId,\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { DataTypeCatalog } from '../shared/fields/data-type-catalog';\r\n\r\nexport function calculateTypeIcon(typeName: string): string {\r\n  const typeIconMap: Record<string, string> = {\r\n    [DataTypeCatalog.Boolean]: 'toggle_on',\r\n    [DataTypeCatalog.Custom]: 'extension',\r\n    [DataTypeCatalog.DateTime]: 'today',\r\n    [DataTypeCatalog.Empty]: 'crop_free',\r\n    [DataTypeCatalog.Entity]: 'share',\r\n    [DataTypeCatalog.Hyperlink]: 'link',\r\n    [DataTypeCatalog.Number]: 'dialpad',\r\n    [DataTypeCatalog.String]: 'text_fields',\r\n  };\r\n  return typeIconMap[typeName] ?? 'device_unknown';\r\n}\r\n\r\nexport function calculateTypeLabel(typeName: string): string {\r\n  const typeLabelMap: Record<string, string> = {\r\n    [DataTypeCatalog.Boolean]: 'Boolean (yes/no)',\r\n    [DataTypeCatalog.Custom]: 'Custom - ui-tools or custom types',\r\n    [DataTypeCatalog.DateTime]: 'Date and/or time',\r\n    [DataTypeCatalog.Empty]: 'Empty - for form-titles etc.',\r\n    [DataTypeCatalog.Entity]: 'Entity (other content-items)',\r\n    [DataTypeCatalog.Hyperlink]: 'Link / file reference',\r\n    [DataTypeCatalog.Number]: 'Number',\r\n    [DataTypeCatalog.String]: 'Text / string',\r\n  };\r\n  return typeLabelMap[typeName] ?? 'device_unknown';\r\n}\r\n","import { Directive, Input } from '@angular/core';\r\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\r\nimport { Field } from '../../shared/fields/field.model';\r\n\r\n@Directive({\r\n    selector: '[appReservedNames]',\r\n    providers: [\r\n      { provide: NG_VALIDATORS, useExisting: ReservedNamesValidatorDirective, multi: true },\r\n    ],\r\n    standalone: true,\r\n})\r\nexport class ReservedNamesValidatorDirective implements Validator {\r\n  @Input('appReservedNames') reservedNames: Record<string, string> = {};\r\n\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    if (!control.value) { return null; }\r\n\r\n    const controlValue = (control.value as string).toLocaleLowerCase();\r\n    const reservedName = Object.keys(this.reservedNames).find(name => name.toLocaleLowerCase() === controlValue);\r\n    return reservedName ? { reservedNames: this.reservedNames[reservedName] } : null;\r\n  }\r\n\r\n  static mergeReserved(reservedNames: Record<string, string>, fields: Field[]) {\r\n    const existingFields: Record<string, string> = {};\r\n    fields.forEach(field => {\r\n      existingFields[field.StaticName] = 'this field already exists';\r\n    });\r\n    return {\r\n      ...reservedNames,\r\n      ...existingFields,\r\n    };\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService extends HttpServiceBase {\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.zoneId }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","export const InputTypeCatalog = {\r\n  // Boolean\r\n  BooleanDefault: 'boolean-default',\r\n  BooleanTristate: 'boolean-tristate',\r\n\r\n  // Custom\r\n  CustomDefault: 'custom-default',\r\n  CustomGps: 'custom-gps',\r\n  CustomJsonEditor: 'custom-json-editor',\r\n\r\n  // Date / Time\r\n  DateTimeDefault: 'datetime-default',\r\n\r\n  DefaultSuffix: '-default',\r\n\r\n  // Empty\r\n  EmptyDefault: 'empty-default',\r\n  EmptyEnd: 'empty-end',\r\n  EmptyMessage: 'empty-message',\r\n\r\n  // Entity - all pickers\r\n  EntityContentBlocks: 'entity-content-blocks',\r\n  EntityDefault: 'entity-default',\r\n  EntityQuery: 'entity-query',\r\n\r\n  // External\r\n  ExternalWebComponent: 'external-web-component',\r\n\r\n  // Hyperlink / File\r\n  HyperlinkDefault: 'hyperlink-default',\r\n  HyperlinkLibrary: 'hyperlink-library',\r\n\r\n  // Numbers\r\n  NumberDefault: 'number-default',\r\n  NumberDropdown: 'number-dropdown', // picker\r\n\r\n  // String\r\n  StringDefault: 'string-default',\r\n  StringDropdown: 'string-dropdown', // picker\r\n  StringDropdownQuery: 'string-dropdown-query', // picker\r\n  StringFontIconPicker: 'string-font-icon-picker',\r\n  StringJson: 'string-json',\r\n  StringTemplatePicker: 'string-template-picker', // picker\r\n  StringUrlPath: 'string-url-path',\r\n  StringWysiwyg: 'string-wysiwyg',\r\n\r\n  /** New Pickers v17.x */\r\n  EntityPicker: 'entity-picker',\r\n  StringPicker: 'string-picker',\r\n  NumberPicker: 'number-picker',\r\n\r\n  /** for all situations where we need a fallback; new v16.04 */\r\n  Unknown: 'unknown',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","import { reduce } from './reduce';\nimport { operate } from '../util/lift';\nconst arrReducer = (arr, value) => (arr.push(value), arr);\nexport function toArray() {\n    return operate((source, subscriber) => {\n        reduce(arrReducer, [])(source).subscribe(subscriber);\n    });\n}\n"],"names":["fieldNamePattern","fieldNameError","computed","Signal","map","HttpServiceBase","webApiTypeRoot","webApiTypeGet","webApiTypes","webApiTypeScopes","webApiTypeSave","webApiTypeDelete","webApiTypeImport","webApiTypeAddGhost","ContentTypesService","retrieveContentType","staticName","getHttpApiUrl","params","appId","contentTypeId","retrieveContentTypeSig","initial","getSignal","retrieveContentTypes","scope","retrieveContentTypesSig","getScopes","pipe","scopesData","scopes","old","scopeOptions","Object","keys","key","name","value","getScopesSig","scopesSignal","scopeOptionsSignal","getScopesV2","save","contentType","http","post","apiUrl","appid","delete","StaticName","import","files","formData","FormData","file","append","zoneId","createGhost","sourceStaticName","__ngFactoryType__","factory","ɵfac","webApiAppPartsRoot","webApiAppPartsGet","ExportAppPartsService","getContentInfo","exportParts","contentTypeIds","entityIds","templateIds","url","join","window","open","webApiAppRoot","webApiAppRootStatistics","webApiAppRootSaveData","ExportAppService","getAppInfo","exportAppUrl","exportForVersionControl","includeContentGroups","resetAppGuid","withFiles","toString","withPortalFiles","ImportAppPartsService","importAppParts","resetApp","DataTypeCatalog","calculateTypeIcon","typeName","typeIconMap","Boolean","Custom","DateTime","Empty","Entity","Hyperlink","Number","String","calculateTypeLabel","typeLabelMap","AbstractControl","NG_VALIDATORS","ValidationErrors","ReservedNamesValidatorDirective","constructor","reservedNames","validate","control","controlValue","toLocaleLowerCase","reservedName","find","mergeReserved","fields","existingFields","forEach","field","selectors","inputs","standalone","features","i0","ɵɵProvidersFeature","provide","useExisting","multi","of","switchMap","FileUploadMessageTypes","ImportAppService","importApp","changedName","retryOnDuplicate","result","Messages","MessageType","Warning","folderName","prompt","Text","InputTypeCatalog","BooleanDefault","BooleanTristate","CustomDefault","CustomGps","CustomJsonEditor","DateTimeDefault","DefaultSuffix","EmptyDefault","EmptyEnd","EmptyMessage","EntityContentBlocks","EntityDefault","EntityQuery","ExternalWebComponent","HyperlinkDefault","HyperlinkLibrary","NumberDefault","NumberDropdown","StringDefault","StringDropdown","StringDropdownQuery","StringFontIconPicker","StringJson","StringTemplatePicker","StringUrlPath","StringWysiwyg","EntityPicker","StringPicker","NumberPicker","Unknown","reduce","operate","arrReducer","arr","push","toArray","source","subscriber","subscribe"],"sourceRoot":"webpack:///","x_google_ignoreList":[9]}