{"version":3,"file":"projects_eav-ui_src_app_import-app_services_import-app_service_ts-projects_eav-ui_src_app_sha-d90db2.e39f72a053e29295.js","mappings":"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","names":["webApiAppRoot","ImportAppService","_class","constructor","http","context","dnnContext","this","importApp","file","changedName","retryOnDuplicate","formData","FormData","append","post","$2sxc","apiUrl","params","zoneId","toString","pipe","switchMap","result","Messages","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","of","i0","i1","i2","i3","factory","Éµfac","DialogEntryComponent","dialog","viewContainerRef","router","route","changeDetectorRef","navigation","getCurrentNavigation","dialogData","extras","state","ngOnInit","dialogConfig","snapshot","data","Error","consoleLogAngular","name","id","getComponent","then","component","_dialogAnimatingOpen","_lastDialogRef","afterOpened","subscribe","openDialogComponent","ngOnDestroy","dialogRef","close","initContext","init","open","autoFocus","backdropClass","closeOnNavigation","panelClass","panelSize","showScrollbar","position","top","afterClosed","navRes","navigateUrl","pathFromRoot","length","window","parent","totalPopup","navigate","url","relativeTo","markForCheck","selectors","decls","vars","template","rf","ctx","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","args","arguments","apply","err"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/shared/components/dialog-entry/dialog-entry.component.ts","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit, Type, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NavigateFormResult } from '../../../edit/shared/models';\r\nimport { consoleLogAngular } from '../../helpers/console-log-angular.helper';\r\nimport { DialogConfig } from '../../models/dialog-config.model';\r\nimport { EavWindow } from '../../models/eav-window.model';\r\nimport { Context } from '../../services/context';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-dialog-entry',\r\n  templateUrl: './dialog-entry.component.html',\r\n  styleUrls: ['./dialog-entry.component.scss'],\r\n})\r\nexport class DialogEntryComponent implements OnInit, OnDestroy {\r\n  private dialogData: Record<string, any>;\r\n  private dialogRef: MatDialogRef<any>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.dialogData = navigation?.extras?.state || {};\r\n  }\r\n\r\n  ngOnInit() {\r\n    const dialogConfig: DialogConfig = this.route.snapshot.data.dialog;\r\n    if (dialogConfig == null) {\r\n      throw new Error(`Could not find config for dialog. Did you forget to add DialogConfig to route data?`);\r\n    }\r\n    consoleLogAngular('Open dialog:', dialogConfig.name, 'Context id:', this.context.id, 'Context:', this.context);\r\n\r\n    dialogConfig.getComponent().then(component => {\r\n      // spm Workaround for \"feature\" where you can't open new dialog while last one is still opening\r\n      // https://github.com/angular/components/commit/728cf1c8ebd49e089f4bae945511bb0918972c26\r\n      if ((this.dialog as any)._dialogAnimatingOpen && (this.dialog as any)._lastDialogRef) {\r\n        ((this.dialog as any)._lastDialogRef as MatDialogRef<any>).afterOpened().subscribe(() => {\r\n          this.openDialogComponent(dialogConfig, component);\r\n        });\r\n      } else {\r\n        this.openDialogComponent(dialogConfig, component);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private openDialogComponent(dialogConfig: DialogConfig, component: Type<any>) {\r\n    if (dialogConfig.initContext) {\r\n      this.context.init(this.route);\r\n    }\r\n\r\n    this.dialogRef = this.dialog.open(component, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: this.dialogData,\r\n      panelClass: [\r\n        'dialog-panel',\r\n        `dialog-panel-${dialogConfig.panelSize}`,\r\n        dialogConfig.showScrollbar ? 'show-scrollbar' : 'no-scrollbar',\r\n        ...(dialogConfig.panelClass ? dialogConfig.panelClass : []),\r\n      ],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n\r\n    this.dialogRef.afterClosed().subscribe((data: any) => {\r\n      consoleLogAngular('Dialog was closed:', dialogConfig.name, 'Data:', data);\r\n\r\n      const navRes = data as NavigateFormResult;\r\n      if (navRes?.navigateUrl != null) {\r\n        this.router.navigate([navRes.navigateUrl]);\r\n        return;\r\n      }\r\n\r\n      if (this.route.pathFromRoot.length <= 3) {\r\n        try {\r\n          window.parent.$2sxc.totalPopup.close();\r\n        } catch (error) { }\r\n        return;\r\n      }\r\n\r\n      if (this.route.snapshot.url.length > 0) {\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent, state: data });\r\n      } else {\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent.parent, state: data });\r\n      }\r\n    });\r\n\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"x_google_ignoreList":[2]}