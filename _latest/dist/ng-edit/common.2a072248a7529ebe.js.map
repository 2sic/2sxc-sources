{"version":3,"mappings":"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","names":["AnalyzeSettingsValueComponent","constructor","snackBar","agInit","params","this","value","refresh","copy","text","m","_a","copyToClipboard","open","duration","i0","selectors","ctx","contentExportDialog","name","initContext","panelSize","panelClass","getComponent","ContentExportComponent","t","routes","path","component","DialogEntryComponent","data","dialog","ContentExportRoutingModule","RouterModule","ContentExportModule","Context","ContentExportService","AppDialogConfigService","ContentTypesService","imports","CommonModule","SharedComponentsModule","MatDialogModule","MatButtonModule","MatIconModule","FormsModule","MatInputModule","MatSelectModule","MatRadioModule","contentImportDialog","ContentImportComponent","Promise","ContentImportRoutingModule","ContentImportModule","ContentImportService","http","context","dnnContext","evaluateContent","formValues","from","toBase64","file","pipe","switchMap","fileBase64","requestData","AppId","appId","toString","DefaultLanguage","defaultLanguage","ContentType","contentType","ContentBase64","ResourcesReferences","resourcesReferences","ClearEntities","clearEntities","post","$2sxc","apiUrl","webApiEntityRoot","map","result","Success","Errors","Detail","importContent","factory","contentItemImportDialog","ContentItemImportComponent","contentItemsDialog","ContentItemsComponent","children","GoToMetadata","loadChildren","then","title","matcher","edit","EditModule","refreshEdit","RefreshEditModule","ContentItemsRoutingModule","ContentItemsModule","ContentItemsService","EntitiesService","SxcGridModule","MatRippleModule","MatSnackBarModule","MatMenuModule","ReactiveFormsModule","MatSlideToggleModule","MatBadgeModule","typeName","d","DataTypeConstants","contentTypeFieldsDialog","ContentTypeFieldsComponent","editContentTypeFieldsDialog","EditContentTypeFieldsComponent","GoToPermissions","ContentTypeFieldsRoutingModule","ContentTypeFieldsModule","ContentTypesFieldsService","importAppDialog","ImportAppComponent","ImportAppRoutingModule","ImportAppModule","ImportAppService","webApiContentGroup","ContentGroupService","getItems","item","get","guid","part","index","saveItem","entityId","id","add","getList","contentGroup","saveList","resortedList","getHeader","dropdownInsertValue","MousedownStopPropagationDirective","onMousedown","event","stopPropagation","scriptObjects","callback","iteration","newCallback","isLast","length","loadScripts","bind","scrObj","global","test","w","window","require","src","exportedVar","EcoFabSpeedDialActionsComponent","injector","renderer","miniFabVisible","hideMiniFab","_parent","EcoFabSpeedDialComponent","ngAfterContentInit","_buttons","changes","subscribe","initButtonStates","setActionsVisibility","forEach","button","i","addClass","_getHostElement","changeElementStyle","show","resetAnimationState","showMiniFabAnimation","setTimeout","transform","transitionDelay","animationMode","getTranslateFunction","hostElement","clearTimeout","unsubscribe","hide","obs","opacity","fromEvent","take","forkJoin","dir","direction","elem","style","setStyle","ɵfac","ɵcmp","r","MatButton","g","o","f","directives","i1","encapsulation","elementRef","document","isInitialized","_direction","_open","_animationMode","_fixed","_documentClickUnlistener","openChange","EventEmitter","fixed","_processOutsideClickState","previousOpen","emit","previousDirection","_setElementClass","previousAnimationMode","resolve","ngOnDestroy","_unsetDocumentClickListener","toggle","_onClick","_childActions","elemClass","isAdd","finalClass","nativeElement","removeClass","_setDocumentClickListener","listen","DOCUMENT","l","styles","EcoFabSpeedDialTriggerComponent","spin","sp","S","EcoFabSpeedDialModule","ɵmod","ɵinj"],"sources":["./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-value/analyze-settings-value.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-value/analyze-settings-value.component.html","./projects/eav-ui/src/app/content-export/content-export-dialog.config.ts","./projects/eav-ui/src/app/content-export/content-export-routing.module.ts","./projects/eav-ui/src/app/content-export/content-export.module.ts","./projects/eav-ui/src/app/content-import/content-import-dialog.config.ts","./projects/eav-ui/src/app/content-import/content-import-routing.module.ts","./projects/eav-ui/src/app/content-import/content-import.module.ts","./projects/eav-ui/src/app/content-import/services/content-import.service.ts","./projects/eav-ui/src/app/content-items/content-item-import/content-item-import-dialog.config.ts","./projects/eav-ui/src/app/content-items/content-items-dialog.config.ts","./projects/eav-ui/src/app/content-items/content-items-routing.module.ts","./projects/eav-ui/src/app/content-items/content-items.module.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields.helpers.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields-dialog.config.ts","./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/edit-content-type-fields-dialog.config.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields-routing.module.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields.module.ts","./projects/eav-ui/src/app/import-app/import-app-dialog.config.ts","./projects/eav-ui/src/app/import-app/import-app-routing.module.ts","./projects/eav-ui/src/app/import-app/import-app.module.ts","./projects/eav-ui/src/app/manage-content-list/services/content-group.service.ts","./projects/eav-ui/src/app/shared/constants/dropdown-insert-value.constant.ts","./projects/eav-ui/src/app/shared/directives/mousedown-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/helpers/load-scripts.helper.ts","./node_modules/@ecodev/fab-speed-dial/fesm2015/ecodev-fab-speed-dial.mjs"],"sourcesContent":["import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { GeneralHelpers } from '../../../../edit/shared/helpers';\r\nimport { copyToClipboard } from '../../../../shared/helpers/copy-to-clipboard.helper';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings-value',\r\n  templateUrl: './analyze-settings-value.component.html',\r\n  styleUrls: ['./analyze-settings-value.component.scss'],\r\n})\r\nexport class AnalyzeSettingsValueComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(text: string) {\r\n    text = GeneralHelpers.tryParse(text) ?? text;\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"value-box highlight\" [tippy]=\"value\" (click)=\"copy(value)\">\r\n  <span class=\"value\">{{ value }}</span>\r\n</div>\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentExportDialog: DialogConfig = {\r\n  name: 'EXPORT_CONTENT_TYPE_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentExportComponent } = await import('./content-export.component');\r\n    return ContentExportComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { contentExportDialog } from './content-export-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: DialogEntryComponent, data: { dialog: contentExportDialog } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ContentExportRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { AppDialogConfigService } from '../app-administration/services/app-dialog-config.service';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { ContentExportRoutingModule } from './content-export-routing.module';\r\nimport { ContentExportComponent } from './content-export.component';\r\nimport { ContentExportService } from './services/content-export.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ContentExportComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ContentExportRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    ContentExportService,\r\n    AppDialogConfigService,\r\n    ContentTypesService,\r\n  ]\r\n})\r\nexport class ContentExportModule { }\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentImportDialog: DialogConfig = {\r\n  name: 'IMPORT_CONTENT_TYPE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentImportComponent } = await import('./content-import.component');\r\n    return ContentImportComponent;\r\n  }\r\n};\r\n\r\nexport interface ContentImportDialogData {\r\n  files?: File[];\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { contentImportDialog } from './content-import-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: DialogEntryComponent, data: { dialog: contentImportDialog } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ContentImportRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { AppDialogConfigService } from '../app-administration/services/app-dialog-config.service';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { ContentImportRoutingModule } from './content-import-routing.module';\r\nimport { ContentImportComponent } from './content-import.component';\r\nimport { ContentImportService } from './services/content-import.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ContentImportComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ContentImportRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    ContentImportService,\r\n    AppDialogConfigService,\r\n    ContentTypesService,\r\n  ]\r\n})\r\nexport class ContentImportModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { webApiEntityRoot } from '../../edit/shared/services';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentImport, EvaluateContentResult, ImportContentRequest, ImportContentResult } from '../models/content-import.model';\r\n\r\n@Injectable()\r\nexport class ContentImportService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  evaluateContent(formValues: ContentImport) {\r\n    return from(toBase64(formValues.file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        const requestData: ImportContentRequest = {\r\n          AppId: this.context.appId.toString(),\r\n          DefaultLanguage: formValues.defaultLanguage,\r\n          ContentType: formValues.contentType,\r\n          ContentBase64: fileBase64,\r\n          ResourcesReferences: formValues.resourcesReferences,\r\n          ClearEntities: formValues.clearEntities,\r\n        };\r\n        return this.http.post<EvaluateContentResult>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'XmlPreview'), requestData).pipe(\r\n          map(result => {\r\n            if (!result.Success) {\r\n              result.Errors = result.Detail as any;\r\n              delete result.Detail;\r\n            }\r\n            return result;\r\n          }),\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  importContent(formValues: ContentImport) {\r\n    return from(toBase64(formValues.file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        const requestData: ImportContentRequest = {\r\n          AppId: this.context.appId.toString(),\r\n          DefaultLanguage: formValues.defaultLanguage,\r\n          ContentType: formValues.contentType,\r\n          ContentBase64: fileBase64,\r\n          ResourcesReferences: formValues.resourcesReferences,\r\n          ClearEntities: formValues.clearEntities,\r\n        };\r\n        return this.http.post<ImportContentResult>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'XmlUpload'), requestData);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const contentItemImportDialog: DialogConfig = {\r\n  name: 'IMPORT_CONTENT_ITEM_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentItemImportComponent } = await import('./content-item-import.component');\r\n    return ContentItemImportComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentItemsDialog: DialogConfig = {\r\n  name: 'CONTENT_ITEMS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentItemsComponent } = await import('./content-items.component');\r\n    return ContentItemsComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { edit, refreshEdit } from '../edit/edit.matcher';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { contentItemImportDialog } from './content-item-import/content-item-import-dialog.config';\r\nimport { contentItemsDialog } from './content-items-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: contentItemsDialog }, children: [\r\n      ...GoToMetadata.getRoutes(),\r\n      {\r\n        path: 'export/:contentTypeStaticName',\r\n        loadChildren: () => import('../content-export/content-export.module').then(m => m.ContentExportModule)\r\n      },\r\n      {\r\n        path: 'export/:contentTypeStaticName/:selectedIds',\r\n        loadChildren: () => import('../content-export/content-export.module').then(m => m.ContentExportModule)\r\n      },\r\n      { path: 'import', component: DialogEntryComponent, data: { dialog: contentItemImportDialog } },\r\n      {\r\n        path: ':contentTypeStaticName/import',\r\n        loadChildren: () => import('../content-import/content-import.module').then(m => m.ContentImportModule),\r\n        data: { title: 'Import Items' },\r\n      },\r\n      {\r\n        matcher: edit,\r\n        loadChildren: () => import('../edit/edit.module').then(m => m.EditModule)\r\n      },\r\n      {\r\n        matcher: refreshEdit,\r\n        loadChildren: () => import('../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ContentItemsRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { ContentExportService } from '../content-export/services/content-export.service';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { ContentItemImportComponent } from './content-item-import/content-item-import.component';\r\nimport { ContentItemsActionsComponent } from './content-items-actions/content-items-actions.component';\r\nimport { ContentItemsEntityComponent } from './content-items-entity/content-items-entity.component';\r\nimport { ContentItemsRoutingModule } from './content-items-routing.module';\r\nimport { ContentItemsStatusComponent } from './content-items-status/content-items-status.component';\r\nimport { ContentItemsComponent } from './content-items.component';\r\nimport { CreateMetadataDialogComponent } from './create-metadata-dialog/create-metadata-dialog.component';\r\nimport { PubMetaFilterComponent } from './pub-meta-filter/pub-meta-filter.component';\r\nimport { ContentItemsService } from './services/content-items.service';\r\nimport { EntitiesService } from './services/entities.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ContentItemsComponent,\r\n    PubMetaFilterComponent,\r\n    ContentItemsStatusComponent,\r\n    ContentItemsActionsComponent,\r\n    ContentItemsEntityComponent,\r\n    ContentItemImportComponent,\r\n    CreateMetadataDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ContentItemsRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    SxcGridModule,\r\n    FormsModule,\r\n    MatRadioModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRippleModule,\r\n    MatSnackBarModule,\r\n    MatMenuModule,\r\n    ReactiveFormsModule,\r\n    MatSlideToggleModule,\r\n    MatBadgeModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    ContentItemsService,\r\n    EntitiesService,\r\n    ContentExportService,\r\n    ContentTypesService,\r\n  ],\r\n})\r\nexport class ContentItemsModule { }\r\n","import { DataTypeConstants } from './constants/data-type.constants';\r\n\r\nexport function calculateTypeIcon(typeName: string): string {\r\n  const typeIconMap: Record<string, string> = {\r\n    [DataTypeConstants.Boolean]: 'toggle_on',\r\n    [DataTypeConstants.Custom]: 'extension',\r\n    [DataTypeConstants.DateTime]: 'today',\r\n    [DataTypeConstants.Empty]: 'crop_free',\r\n    [DataTypeConstants.Entity]: 'share',\r\n    [DataTypeConstants.Hyperlink]: 'link',\r\n    [DataTypeConstants.Number]: 'dialpad',\r\n    [DataTypeConstants.String]: 'text_fields',\r\n  };\r\n  return typeIconMap[typeName] ?? 'device_unknown';\r\n}\r\n\r\nexport function calculateTypeLabel(typeName: string): string {\r\n  const typeLabelMap: Record<string, string> = {\r\n    [DataTypeConstants.Boolean]: 'Boolean (yes/no)',\r\n    [DataTypeConstants.Custom]: 'Custom - ui-tools or custom types',\r\n    [DataTypeConstants.DateTime]: 'Date and/or time',\r\n    [DataTypeConstants.Empty]: 'Empty - for form-titles etc.',\r\n    [DataTypeConstants.Entity]: 'Entity (other content-items)',\r\n    [DataTypeConstants.Hyperlink]: 'Link / file reference',\r\n    [DataTypeConstants.Number]: 'Number',\r\n    [DataTypeConstants.String]: 'Text / string',\r\n  };\r\n  return typeLabelMap[typeName] ?? 'device_unknown';\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentTypeFieldsDialog: DialogConfig = {\r\n  name: 'CONTENT_TYPE_FIELDS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentTypeFieldsComponent } = await import('./content-type-fields.component');\r\n    return ContentTypeFieldsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const editContentTypeFieldsDialog: DialogConfig = {\r\n  name: 'EDIT_CONTENT_TYPE_FIELDS_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { EditContentTypeFieldsComponent } = await import('./edit-content-type-fields.component');\r\n    return EditContentTypeFieldsComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { edit, refreshEdit } from '../edit/edit.matcher';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { GoToPermissions } from '../permissions/go-to-permissions';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { contentTypeFieldsDialog } from './content-type-fields-dialog.config';\r\nimport { editContentTypeFieldsDialog } from './edit-content-type-fields/edit-content-type-fields-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: contentTypeFieldsDialog }, children: [\r\n      { path: 'add/:contentTypeStaticName', component: DialogEntryComponent, data: { dialog: editContentTypeFieldsDialog } },\r\n      {\r\n        path: 'update/:contentTypeStaticName/:id/:editMode',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: editContentTypeFieldsDialog },\r\n      },\r\n      ...GoToMetadata.getRoutes(),\r\n      GoToPermissions.route,\r\n      {\r\n        matcher: edit,\r\n        loadChildren: () => import('../edit/edit.module').then(m => m.EditModule)\r\n      },\r\n      {\r\n        matcher: refreshEdit,\r\n        loadChildren: () => import('../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ContentTypeFieldsRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { ContentTypeFieldsActionsComponent } from './content-type-fields-actions/content-type-fields-actions.component';\r\nimport { ContentTypeFieldsInputTypeComponent } from './content-type-fields-input-type/content-type-fields-input-type.component';\r\nimport { ContentTypeFieldsRoutingModule } from './content-type-fields-routing.module';\r\nimport { ContentTypeFieldsSpecialComponent } from './content-type-fields-special/content-type-fields-special.component';\r\nimport { ContentTypeFieldsTitleComponent } from './content-type-fields-title/content-type-fields-title.component';\r\nimport { ContentTypeFieldsTypeComponent } from './content-type-fields-type/content-type-fields-type.component';\r\nimport { ContentTypeFieldsComponent } from './content-type-fields.component';\r\nimport { EditContentTypeFieldsComponent } from './edit-content-type-fields/edit-content-type-fields.component';\r\nimport { ReservedNamesValidatorDirective } from './edit-content-type-fields/reserved-names.directive';\r\nimport { ContentTypesFieldsService } from './services/content-types-fields.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ContentTypeFieldsComponent,\r\n    ContentTypeFieldsTitleComponent,\r\n    ContentTypeFieldsInputTypeComponent,\r\n    ContentTypeFieldsActionsComponent,\r\n    EditContentTypeFieldsComponent,\r\n    ContentTypeFieldsTypeComponent,\r\n    ContentTypeFieldsSpecialComponent,\r\n    ReservedNamesValidatorDirective,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ContentTypeFieldsRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    SxcGridModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRippleModule,\r\n    MatSnackBarModule,\r\n    MatMenuModule,\r\n    MatBadgeModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    ContentTypesService,\r\n    ContentTypesFieldsService,\r\n  ]\r\n})\r\nexport class ContentTypeFieldsModule { }\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const importAppDialog: DialogConfig = {\r\n  name: 'IMPORT_APP_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportAppComponent } = await import('./import-app.component');\r\n    return ImportAppComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { importAppDialog } from './import-app-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: DialogEntryComponent, data: { dialog: importAppDialog } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ImportAppRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { ImportAppRoutingModule } from './import-app-routing.module';\r\nimport { ImportAppComponent } from './import-app.component';\r\nimport { ImportAppService } from './services/import-app.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ImportAppComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ImportAppRoutingModule,\r\n    SharedComponentsModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    ImportAppService,\r\n  ]\r\n})\r\nexport class ImportAppModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ReplaceConfig } from '../../replace-content/models/replace-config.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentGroup, ContentGroupAdd } from '../models/content-group.model';\r\nimport { GroupHeader } from '../models/group-header.model';\r\n\r\nconst webApiContentGroup = 'cms/contentgroup/';\r\n\r\n@Injectable()\r\nexport class ContentGroupService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getItems(item: ContentGroup) {\r\n    return this.http.get<ReplaceConfig>(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'replace'), {\r\n      params: { appId: this.context.appId.toString(), guid: item.guid, part: item.part, index: item.index.toString() }\r\n    });\r\n  }\r\n\r\n  saveItem(item: ContentGroupAdd) {\r\n    return this.http.post<null>(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'replace'), {}, {\r\n      params: { guid: item.guid, part: item.part, index: item.index.toString(), entityId: item.id.toString(), add: `${item.add}` }\r\n    });\r\n  }\r\n\r\n  getList(contentGroup: ContentGroup) {\r\n    return this.http.get<GroupHeader[]>(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'itemlist'), {\r\n      params: { appId: this.context.appId.toString(), guid: contentGroup.guid, part: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  saveList(contentGroup: ContentGroup, resortedList: GroupHeader[]) {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'itemlist'), resortedList, {\r\n      params: { appId: this.context.appId.toString(), guid: contentGroup.guid, part: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  getHeader(contentGroup: ContentGroup) {\r\n    return this.http.get<GroupHeader>(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'header'), {\r\n      params: { appId: this.context.appId.toString(), guid: contentGroup.guid }\r\n    });\r\n  }\r\n}\r\n","export const dropdownInsertValue = 'DROPDOWN_INSERT_VALUE' as const;\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({ selector: '[appMousedownStopPropagation]' })\r\nexport class MousedownStopPropagationDirective {\r\n  @HostListener('mousedown', ['$event'])\r\n  onMousedown(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import { EavWindow } from '../models/eav-window.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport function loadScripts(scriptObjects: ScriptObject[], callback: () => void, iteration = 0) {\r\n  const isLast = scriptObjects.length === iteration + 1;\r\n  const newCallback = isLast ? callback : loadScripts.bind(this, scriptObjects, callback, iteration + 1);\r\n  const scrObj = scriptObjects[iteration];\r\n\r\n  const global = typeof scrObj.test === 'string' ? scrObj.test : null;\r\n  const test = typeof scrObj.test === 'function' ? scrObj.test : null;\r\n  const w = window as Record<string, any>;\r\n\r\n  if (global != null && !!w[global]) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  if (test != null && test()) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  window.require([scrObj.src], (exportedVar: any) => {\r\n    if (exportedVar && !w[global]) {\r\n      w[global] = exportedVar;\r\n    }\r\n    newCallback();\r\n  });\r\n}\r\n\r\nexport interface ScriptObject {\r\n  /** window.xxx or a function that returns a boolean */\r\n  test: string | (() => boolean);\r\n  src: string;\r\n}\r\n","import * as i0 from '@angular/core';\nimport { Component, ContentChildren, EventEmitter, ViewEncapsulation, Inject, Input, HostBinding, Output, ContentChild, HostListener, NgModule } from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { fromEvent, forkJoin } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nconst Z_INDEX_ITEM = 23;\nclass EcoFabSpeedDialActionsComponent {\n    constructor(injector, renderer) {\n        this.renderer = renderer;\n        /**\n         * Whether the min-fab button exist in DOM\n         */\n        this.miniFabVisible = false;\n        /**\n         * When we will remove mini-fab buttons from DOM, after the animation is complete\n         */\n        this.hideMiniFab = null;\n        this._parent = injector.get(EcoFabSpeedDialComponent);\n    }\n    ngAfterContentInit() {\n        this._buttons.changes.subscribe(() => {\n            this.initButtonStates();\n            this._parent.setActionsVisibility();\n        });\n        this.initButtonStates();\n    }\n    initButtonStates() {\n        this._buttons.forEach((button, i) => {\n            this.renderer.addClass(button._getHostElement(), 'eco-fab-action-item');\n            this.changeElementStyle(button._getHostElement(), 'z-index', '' + (Z_INDEX_ITEM - i));\n        });\n    }\n    show() {\n        if (!this._buttons) {\n            return;\n        }\n        this.resetAnimationState();\n        this.miniFabVisible = true;\n        this.showMiniFabAnimation = setTimeout(() => {\n            this._buttons.forEach((button, i) => {\n                let transitionDelay = 0;\n                let transform;\n                if (this._parent.animationMode === 'scale') {\n                    // Incremental transition delay of 65ms for each action button\n                    transitionDelay = 3 + 65 * i;\n                    transform = 'scale(1)';\n                }\n                else {\n                    transform = this.getTranslateFunction('0');\n                }\n                const hostElement = button._getHostElement();\n                this.changeElementStyle(hostElement, 'transition-delay', transitionDelay + 'ms');\n                this.changeElementStyle(hostElement, 'opacity', '1');\n                this.changeElementStyle(hostElement, 'transform', transform);\n            });\n        }, 50); // Be sure that *ngIf can show elements before trying to animate them\n    }\n    resetAnimationState() {\n        clearTimeout(this.showMiniFabAnimation);\n        if (this.hideMiniFab) {\n            this.hideMiniFab.unsubscribe();\n            this.hideMiniFab = null;\n        }\n    }\n    hide() {\n        if (!this._buttons) {\n            return;\n        }\n        this.resetAnimationState();\n        const obs = this._buttons.map((button, i) => {\n            let opacity = '1';\n            let transitionDelay = 0;\n            let transform;\n            if (this._parent.animationMode === 'scale') {\n                transitionDelay = 3 - 65 * i;\n                transform = 'scale(0)';\n                opacity = '0';\n            }\n            else {\n                transform = this.getTranslateFunction(55 * (i + 1) - i * 5 + 'px');\n            }\n            const hostElement = button._getHostElement();\n            this.changeElementStyle(hostElement, 'transition-delay', transitionDelay + 'ms');\n            this.changeElementStyle(hostElement, 'opacity', opacity);\n            this.changeElementStyle(hostElement, 'transform', transform);\n            return fromEvent(hostElement, 'transitionend').pipe(take(1));\n        });\n        // Wait for all animation to finish, then destroy their elements\n        this.hideMiniFab = forkJoin(obs).subscribe(() => (this.miniFabVisible = false));\n    }\n    getTranslateFunction(value) {\n        const dir = this._parent.direction;\n        const translateFn = dir === 'up' || dir === 'down' ? 'translateY' : 'translateX';\n        const sign = dir === 'down' || dir === 'right' ? '-' : '';\n        return translateFn + '(' + sign + value + ')';\n    }\n    changeElementStyle(elem, style, value) {\n        // FIXME - Find a way to create a \"wrapper\" around the action button(s) provided by the user, so we don't change it's style tag\n        this.renderer.setStyle(elem, style, value);\n    }\n}\nEcoFabSpeedDialActionsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: EcoFabSpeedDialActionsComponent, deps: [{ token: i0.Injector }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\nEcoFabSpeedDialActionsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.5\", type: EcoFabSpeedDialActionsComponent, selector: \"eco-fab-speed-dial-actions\", queries: [{ propertyName: \"_buttons\", predicate: MatButton }], ngImport: i0, template: ` <ng-content select=\"[mat-mini-fab]\" *ngIf=\"miniFabVisible\"></ng-content>`, isInline: true, directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: EcoFabSpeedDialActionsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'eco-fab-speed-dial-actions',\n                    template: ` <ng-content select=\"[mat-mini-fab]\" *ngIf=\"miniFabVisible\"></ng-content>`,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i0.Renderer2 }]; }, propDecorators: { _buttons: [{\n                type: ContentChildren,\n                args: [MatButton]\n            }] } });\n/** @dynamic @see https://github.com/angular/angular/issues/20351#issuecomment-344009887 */\nclass EcoFabSpeedDialComponent {\n    constructor(elementRef, renderer, document) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.document = document;\n        this.isInitialized = false;\n        this._direction = 'up';\n        this._open = false;\n        this._animationMode = 'fling';\n        this._fixed = false;\n        this._documentClickUnlistener = null;\n        this.openChange = new EventEmitter();\n    }\n    /**\n     * Whether this speed dial is fixed on screen (user cannot change it by clicking)\n     */\n    get fixed() {\n        return this._fixed;\n    }\n    set fixed(fixed) {\n        this._fixed = fixed;\n        this._processOutsideClickState();\n    }\n    /**\n     * Whether this speed dial is opened\n     */\n    get open() {\n        return this._open;\n    }\n    set open(open) {\n        const previousOpen = this._open;\n        this._open = open;\n        if (previousOpen !== this._open) {\n            this.openChange.emit(this._open);\n            if (this.isInitialized) {\n                this.setActionsVisibility();\n            }\n        }\n    }\n    /**\n     * The direction of the speed dial. Can be 'up', 'down', 'left' or 'right'\n     */\n    get direction() {\n        return this._direction;\n    }\n    set direction(direction) {\n        const previousDirection = this._direction;\n        this._direction = direction;\n        if (previousDirection !== this.direction) {\n            this._setElementClass(previousDirection, false);\n            this._setElementClass(this.direction, true);\n            if (this.isInitialized) {\n                this.setActionsVisibility();\n            }\n        }\n    }\n    /**\n     * The animation mode to open the speed dial. Can be 'fling' or 'scale'\n     */\n    get animationMode() {\n        return this._animationMode;\n    }\n    set animationMode(animationMode) {\n        const previousAnimationMode = this._animationMode;\n        this._animationMode = animationMode;\n        if (previousAnimationMode !== this._animationMode) {\n            this._setElementClass(previousAnimationMode, false);\n            this._setElementClass(this.animationMode, true);\n            if (this.isInitialized) {\n                // To start another detect lifecycle and force the \"close\" on the action buttons\n                Promise.resolve(null).then(() => (this.open = false));\n            }\n        }\n    }\n    ngAfterContentInit() {\n        this.isInitialized = true;\n        this.setActionsVisibility();\n        this._setElementClass(this.direction, true);\n        this._setElementClass(this.animationMode, true);\n    }\n    ngOnDestroy() {\n        this._unsetDocumentClickListener();\n    }\n    /**\n     * Toggle the open state of this speed dial\n     */\n    toggle() {\n        this.open = !this.open;\n    }\n    _onClick() {\n        if (!this.fixed && this.open) {\n            this.open = false;\n        }\n    }\n    setActionsVisibility() {\n        if (!this._childActions) {\n            return;\n        }\n        if (this.open) {\n            this._childActions.show();\n        }\n        else {\n            this._childActions.hide();\n        }\n        this._processOutsideClickState();\n    }\n    _setElementClass(elemClass, isAdd) {\n        const finalClass = `eco-${elemClass}`;\n        if (isAdd) {\n            this.renderer.addClass(this.elementRef.nativeElement, finalClass);\n        }\n        else {\n            this.renderer.removeClass(this.elementRef.nativeElement, finalClass);\n        }\n    }\n    _processOutsideClickState() {\n        if (!this.fixed && this.open) {\n            this._setDocumentClickListener();\n        }\n        else {\n            this._unsetDocumentClickListener();\n        }\n    }\n    _setDocumentClickListener() {\n        if (!this._documentClickUnlistener) {\n            this._documentClickUnlistener = this.renderer.listen(this.document, 'click', () => {\n                this.open = false;\n            });\n        }\n    }\n    _unsetDocumentClickListener() {\n        if (this._documentClickUnlistener) {\n            this._documentClickUnlistener();\n            this._documentClickUnlistener = null;\n        }\n    }\n}\nEcoFabSpeedDialComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: EcoFabSpeedDialComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component });\nEcoFabSpeedDialComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.5\", type: EcoFabSpeedDialComponent, selector: \"eco-fab-speed-dial\", inputs: { fixed: \"fixed\", open: \"open\", direction: \"direction\", animationMode: \"animationMode\" }, outputs: { openChange: \"openChange\" }, host: { listeners: { \"click\": \"_onClick()\" }, properties: { \"class.eco-opened\": \"this.open\" } }, queries: [{ propertyName: \"_childActions\", first: true, predicate: EcoFabSpeedDialActionsComponent, descendants: true }], ngImport: i0, template: `\n        <div class=\"eco-fab-speed-dial-container\">\n            <ng-content select=\"eco-fab-speed-dial-trigger\"></ng-content>\n            <ng-content select=\"eco-fab-speed-dial-actions\"></ng-content>\n        </div>\n    `, isInline: true, styles: [\"eco-fab-speed-dial{display:inline-block}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180{transform:rotate(180deg)}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transform:rotate(360deg)}eco-fab-speed-dial .eco-fab-speed-dial-container{position:relative;display:flex;align-items:center;z-index:20}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{pointer-events:auto;z-index:24}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180,eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transition:all .6s cubic-bezier(.4,0,.2,1)}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-actions{display:flex;position:absolute;height:0;width:0}eco-fab-speed-dial.eco-fling .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{display:block;opacity:1;transition:all .3s cubic-bezier(.55,0,.55,.2)}eco-fab-speed-dial.eco-scale .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{transform:scale(0);transition:all .3s cubic-bezier(.55,0,.55,.2);transition-duration:.14286s}eco-fab-speed-dial.eco-down eco-fab-speed-dial-actions{bottom:2px;left:7px}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column;order:2}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-top:10px}eco-fab-speed-dial.eco-up eco-fab-speed-dial-actions{top:2px;left:7px}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column-reverse;order:1}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-bottom:10px}eco-fab-speed-dial.eco-left eco-fab-speed-dial-actions{top:7px;left:2px}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row-reverse;order:1}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-right:10px}eco-fab-speed-dial.eco-right eco-fab-speed-dial-actions{top:7px;right:2px}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row;order:2}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-left:10px}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: EcoFabSpeedDialComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'eco-fab-speed-dial', template: `\n        <div class=\"eco-fab-speed-dial-container\">\n            <ng-content select=\"eco-fab-speed-dial-trigger\"></ng-content>\n            <ng-content select=\"eco-fab-speed-dial-actions\"></ng-content>\n        </div>\n    `, encapsulation: ViewEncapsulation.None, styles: [\"eco-fab-speed-dial{display:inline-block}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180{transform:rotate(180deg)}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transform:rotate(360deg)}eco-fab-speed-dial .eco-fab-speed-dial-container{position:relative;display:flex;align-items:center;z-index:20}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{pointer-events:auto;z-index:24}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180,eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transition:all .6s cubic-bezier(.4,0,.2,1)}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-actions{display:flex;position:absolute;height:0;width:0}eco-fab-speed-dial.eco-fling .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{display:block;opacity:1;transition:all .3s cubic-bezier(.55,0,.55,.2)}eco-fab-speed-dial.eco-scale .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{transform:scale(0);transition:all .3s cubic-bezier(.55,0,.55,.2);transition-duration:.14286s}eco-fab-speed-dial.eco-down eco-fab-speed-dial-actions{bottom:2px;left:7px}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column;order:2}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-top:10px}eco-fab-speed-dial.eco-up eco-fab-speed-dial-actions{top:2px;left:7px}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column-reverse;order:1}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-bottom:10px}eco-fab-speed-dial.eco-left eco-fab-speed-dial-actions{top:7px;left:2px}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row-reverse;order:1}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-right:10px}eco-fab-speed-dial.eco-right eco-fab-speed-dial-actions{top:7px;right:2px}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row;order:2}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-left:10px}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: Document, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { fixed: [{\n                type: Input\n            }], open: [{\n                type: HostBinding,\n                args: ['class.eco-opened']\n            }, {\n                type: Input\n            }], direction: [{\n                type: Input\n            }], animationMode: [{\n                type: Input\n            }], openChange: [{\n                type: Output\n            }], _childActions: [{\n                type: ContentChild,\n                args: [EcoFabSpeedDialActionsComponent]\n            }], _onClick: [{\n                type: HostListener,\n                args: ['click']\n            }] } });\nclass EcoFabSpeedDialTriggerComponent {\n    constructor(injector) {\n        this.spin = false;\n        this._parent = injector.get(EcoFabSpeedDialComponent);\n    }\n    /**\n     * Whether this trigger should spin (360dg) while opening the speed dial\n     */\n    get sp() {\n        return this.spin;\n    }\n    _onClick(event) {\n        if (!this._parent.fixed) {\n            this._parent.toggle();\n            event.stopPropagation();\n        }\n    }\n}\nEcoFabSpeedDialTriggerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: EcoFabSpeedDialTriggerComponent, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\nEcoFabSpeedDialTriggerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.5\", type: EcoFabSpeedDialTriggerComponent, selector: \"eco-fab-speed-dial-trigger\", inputs: { spin: \"spin\" }, host: { listeners: { \"click\": \"_onClick($event)\" }, properties: { \"class.eco-spin\": \"this.sp\" } }, ngImport: i0, template: ` <ng-content select=\"[mat-fab]\"></ng-content>`, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: EcoFabSpeedDialTriggerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'eco-fab-speed-dial-trigger',\n                    template: ` <ng-content select=\"[mat-fab]\"></ng-content>`,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }]; }, propDecorators: { sp: [{\n                type: HostBinding,\n                args: ['class.eco-spin']\n            }], spin: [{\n                type: Input\n            }], _onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\n\nclass EcoFabSpeedDialModule {\n}\nEcoFabSpeedDialModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: EcoFabSpeedDialModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nEcoFabSpeedDialModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: EcoFabSpeedDialModule, declarations: [EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent], imports: [CommonModule], exports: [EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent] });\nEcoFabSpeedDialModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: EcoFabSpeedDialModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: EcoFabSpeedDialModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent],\n                    exports: [EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent],\n                }]\n        }] });\n\n/*\n * Public API Surface of fab-speed-dial\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialModule, EcoFabSpeedDialTriggerComponent };\n"],"sourceRoot":"webpack:///","file":"common.2a072248a7529ebe.js"}