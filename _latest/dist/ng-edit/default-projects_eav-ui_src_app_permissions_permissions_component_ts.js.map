{"version":3,"file":"default-projects_eav-ui_src_app_permissions_permissions_component_ts.js","mappings":";;;;;;;;;;;;;;;;AAGyD;AACF;;;;AAajD,MAAOE,2BAA2B;EAGtCC,MAAMA,CAACC,MAAsD;IAC3D,IAAI,CAACA,MAAM,GAAGA,MAAM;EACtB;EAEAC,OAAOA,CAACD,MAAY;IAClB,OAAO,IAAI;EACb;EAEAE,gBAAgBA,CAAA;IACd,MAAMC,UAAU,GAAe,IAAI,CAACH,MAAM,CAACI,IAAI;IAC/C,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAACF,UAAU,CAAC;EAClC;;;uCAdWL,2BAA2B;IAAA;EAAA;;;YAA3BA,2BAA2B;MAAAQ,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAAC,iEAAA;MAAAE,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,qCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UChBtCP,4DADF,aAA+B,aACuE;UAA7BA,wDAAA,mBAAAW,0DAAA;YAAA,OAASH,GAAA,CAAAf,gBAAA,EAAkB;UAAA,EAAC;UACjGO,4DAAA,eAAU;UAAAA,oDAAA,aAAM;UAEpBA,0DAFoB,EAAW,EACvB,EACF;;;qBDSFb,mEAAe,EAAA2B,6DAAA,EACf1B,iEAAa,EAAA4B,2DAAA;MAAAE,aAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEbyC;AACC;AACe;AACnB;AACG;AACX;AACW;AACe;AACe;AACL;AACd;AACC;AACY;AACF;AAEkB;AAE9B;;;;;;;AAc9D,MAAOiB,oBAAoB;EAG/B,CAAAC,kBAAmB;EACnB,CAAAC,YAAa;EAEb,CAAA9C,MAAO;EAMP,CAAA+C,QAAS;EAMTC,YACUC,MAA0C,EAC1CC,QAAqB;IADrB,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,QAAQ,GAARA,QAAQ;IAnBlB,KAAAC,WAAW,GAAG,IAAI,CAACC,gBAAgB,EAAE;IACrC,KAAAC,WAAW,GAAGzB,sDAAM,CAAe,EAAE,CAAC;IACtC,MAAAiB,kBAAmB,GAAGV,gDAAS,CAACQ,6EAAkB,CAAC;IACnD,MAAAG,YAAa,GAAGX,gDAAS,CAACO,wFAAoB,CAAC;IAE/C,MAAA1C,MAAO,GAAGkC,8CAAO,CAAC,IAAI,CAAC,CAAAY,YAAa,CAACQ,SAAS,CAAC,CAAC,YAAY,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,EAAEC,CAAC,KAAK;MACtFC,UAAU,EAAEC,QAAQ,CAACF,CAAC,CAACC,UAAU,EAAE,EAAE,CAAC;MACtCE,OAAO,EAAEH,CAAC,CAACG,OAAsC;MACjDC,GAAG,EAAEJ,CAAC,CAACI;KACR,CAAC,CAAC;IAEH,MAAAZ,QAAS,GAA2C;MAClD,CAACT,yEAAY,CAACsB,QAAQ,CAACC,QAAQ,CAACL,UAAU,GAAG;QAC3CM,cAAc,EAAE;;KAEnB;EAMD;EAEAC,QAAQA,CAAA;IACN,IAAI,CAAC,CAAAC,gBAAiB,EAAE;IACxB,IAAI,CAAC,CAAAlB,YAAa,CAACmB,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAAD,gBAAiB,EAAE,CAAC;EACrE;EAEAE,WAAWA,CAAA;IACT,IAAI,CAACjB,MAAM,CAACkB,KAAK,EAAE;EACrB;EAEA,CAAAH,gBAAiBI,CAAA;IACf,IAAI,CAAC,CAAAvB,kBAAmB,CAACwB,MAAM,CAAC,IAAI,CAAC,CAAArE,MAAO,CAACwD,UAAU,EAAE,IAAI,CAAC,CAAAxD,MAAO,CAAC0D,OAAO,EAAE,IAAI,CAAC,CAAA1D,MAAO,CAAC2D,GAAG,CAAC,CAC7FW,SAAS,CAACjB,WAAW,IAAG;MACvB,IAAI,CAACA,WAAW,CAACkB,GAAG,CAAClB,WAAW,CAAC;IACnC,CAAC,CAAC;EACN;EAEAmB,cAAcA,CAACrE,UAAuB;IACpC,IAAIsE,IAAc;IAClB,IAAItE,UAAU,IAAI,IAAI,EAAE;MACtBsE,IAAI,GAAG;QACLC,KAAK,EAAE,CAAC;UACN,GAAGlC,oEAAQ,CAACmC,mBAAmB,CAC7BrC,yEAAY,CAACsC,YAAY,CAACvB,WAAW,EACrCb,oEAAQ,CAACqC,qBAAqB,CAAC,IAAI,CAAC,CAAA7E,MAAO,CAACwD,UAAU,EAAE,IAAI,CAAC,CAAAxD,MAAO,CAAC0D,OAAO,EAAE,IAAI,CAAC,CAAA1D,MAAO,CAAC2D,GAAG,CAAC,CAChG;UACD,IAAI,IAAI,CAAC,CAAAZ,QAAS,CAAC,IAAI,CAAC,CAAA/C,MAAO,CAACwD,UAAU,CAAC,IAAI;YAAEsB,OAAO,EAAE,IAAI,CAAC,CAAA/B,QAAS,CAAC,IAAI,CAAC,CAAA/C,MAAO,CAACwD,UAAU;UAAC,CAAE;SACpG;OACF;IACH,CAAC,MAAM;MACLiB,IAAI,GAAG;QACLC,KAAK,EAAE,CAAClC,oEAAQ,CAACuC,MAAM,CAAC5E,UAAU,CAAC6E,EAAE,CAAC;OACvC;IACH;IACA,MAAMC,OAAO,GAAG1C,iFAAgB,CAACkC,IAAI,CAAC;IACtC,IAAI,CAAC,CAAA3B,YAAa,CAACoC,WAAW,CAAC,CAAC,QAAQD,OAAO,EAAE,CAAC,CAAC;EACrD;EAEQ/E,gBAAgBA,CAACC,UAAsB;IAC7C,IAAI,CAACgF,OAAO,CAAC,WAAWhF,UAAU,CAACiF,KAAK,MAAMjF,UAAU,CAAC6E,EAAE,IAAI,CAAC,EAAE;IAClE,IAAI,CAAC9B,QAAQ,CAACmC,IAAI,CAAC,aAAa,CAAC;IACjC,IAAI,CAAC,CAAAxC,kBAAmB,CAACyC,MAAM,CAACnF,UAAU,CAAC6E,EAAE,CAAC,CAACV,SAAS,CAAC,MAAK;MAC5D,IAAI,CAACpB,QAAQ,CAACmC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE;QAAEE,QAAQ,EAAE;MAAI,CAAE,CAAC;MACvD,IAAI,CAAC,CAAAvB,gBAAiB,EAAE;IAC1B,CAAC,CAAC;EACJ;EAEQZ,gBAAgBA,CAAA;IACtB,MAAMD,WAAW,GAAgB;MAC/B,GAAGd,gGAAkB;MACrBmD,UAAU,EAAE,CACV;QACE,GAAGpD,iFAAiB,CAAC4C,EAAE;QACvBS,kBAAkB,EAAErD,iFAAiB,CAACsD,0BAA0B;OACjE,EACD;QACE,GAAGtD,iFAAiB,CAACuD,QAAQ;QAC7BC,UAAU,EAAE,MAAM;QAClBC,KAAK,EAAE,OAAO;QACdC,IAAI,EAAE,KAAK;QACXC,aAAa,EAAG/F,MAAM,IAAI;UACxB,MAAMG,UAAU,GAAeH,MAAM,CAACI,IAAI;UAC1C,IAAI,CAACoE,cAAc,CAACrE,UAAU,CAAC;QACjC;OACD,EACD;QACE,GAAGiC,iFAAiB,CAACuD,QAAQ;QAC7BE,KAAK,EAAE;OACR,EACD;QACE,GAAGzD,iFAAiB,CAACuD,QAAQ;QAC7BE,KAAK,EAAE;OACR,EACD;QACE,GAAGzD,iFAAiB,CAAC4D,SAAS;QAC9BH,KAAK,EAAE;OACR,EACD;QACE,GAAGzD,iFAAiB,CAAC6D,mBAAmB;QACxCC,YAAY,EAAEpG,2GAA2B;QACzC2F,kBAAkB,EAAE,CAAC,MAAK;UACxB,MAAMzF,MAAM,GAA6B;YACvCK,QAAQ,EAAGF,UAAU,IAAK,IAAI,CAACD,gBAAgB,CAACC,UAAU;WAC3D;UACD,OAAOH,MAAM;QACf,CAAC,EAAC;OACH;KAEJ;IACD,OAAOmD,WAAW;EACpB;;;uCAjHWP,oBAAoB,EAAAnC,gEAAA,CAAAc,mEAAA,GAAAd,gEAAA,CAAAgB,qEAAA;IAAA;EAAA;;;YAApBmB,oBAAoB;MAAAtC,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAAC,kEAAA;MAAAE,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAsF,8BAAApF,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UC9B7BP,6DAFJ,aAA8C,aACb,aACS;UAAAA,qDAAA,kBAAW;UAAAA,2DAAA,EAAM;UACvDA,6DAAA,gBAAqE;UAAxBA,yDAAA,mBAAA4F,sDAAA;YAAA,OAASpF,GAAA,CAAAiD,WAAA,EAAa;UAAA,EAAC;UAClEzD,6DAAA,eAAU;UAAAA,qDAAA,YAAK;UAEnBA,2DAFmB,EAAW,EACnB,EACL;UACNA,6DAAA,aAAsD;UACpDA,wDAAA,oBAA+B;UAC/BA,6DAAA,aAA0B;UACxBA,wDAAA,0BACkB;UACpBA,2DAAA,EAAM;UAEJA,6DADF,6BAAgC,iBACoF;UAA/BA,yDAAA,mBAAA8F,uDAAA;YAAA,OAAStF,GAAA,CAAAuD,cAAA,CAAe,IAAI,CAAC;UAAA,EAAC;UAC/G/D,6DAAA,gBAAU;UAAAA,qDAAA,WAAG;UAIrBA,2DAJqB,EAAW,EACjB,EACU,EACjB,EACF;;;UAT2CA,wDAAA,IAAyB;UAACA,yDAA1B,YAAAQ,GAAA,CAAAoC,WAAA,GAAyB,gBAAApC,GAAA,CAAAkC,WAAA,CAA4B;;;qBDelGtB,sEAAe,EAAA6E,oEAAA,EAAAA,mEAAA,EACf7G,kEAAa,EAAAgH,4DAAA,EACb5E,0DAAY,EACZH,uEAAgB,EAChBW,0FAAa,EAAAqE,sEAAA;MAAAnF,aAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;AExByD;;AAE1E,MAAMsF,UAAU,GAAG,oBAAoB;AAGjC,MAAOC,eAAgB,SAAQF,+EAAe;EAClD;;;;;;;EAOAG,WAAWA,CAAC3D,UAAkB,EAAEE,OAAoC,EAAEC,GAAoB,EAAEyD,eAAwB;IAClH,OAAO,IAAI,CAACC,OAAO,CAAcJ,UAAU,EAAE;MAC3CjH,MAAM,EAAE;QACNsH,KAAK,EAAE,IAAI,CAACA,KAAK;QACjB9D,UAAU,EAAEA,UAAU,CAAC+D,QAAQ,EAAE;QACjC7D,OAAO;QACPC,GAAG,EAAEA,GAAG,CAAC4D,QAAQ,EAAE;QACnB,IAAIH,eAAe,IAAI;UAAEI,WAAW,EAAEJ;QAAe,CAAE;;KAE1D,CAAC;EACJ;;;;;oJAlBWF,eAAe,IAAAO,iBAAA,IAAfP,eAAe;MAAA;IAAA;EAAA;;;aAAfA,eAAe;MAAAQ,OAAA,EAAfR,eAAe,CAAAS;IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;ACTW;AACa;AACkC;AACR;AAEzB;;AAG/C,MAAOhF,kBAAkB;EAD/BK,YAAA;IAGU,KAAA8E,eAAe,GAAG3F,gDAAS,CAAC+E,8DAAe,CAAC;IAE5C,KAAAa,eAAe,GAAG5F,gDAAS,CAAC0F,mFAAiB,CAAC;;EAEtDxD,MAAMA,CAACb,UAAkB,EAAEE,OAAoC,EAAEC,GAAW;IAC1E,OAAO,IAAI,CAACmE,eAAe,CAACX,WAAW,CAAC3D,UAAU,EAAEE,OAAO,EAAEC,GAAG,EAAErB,yEAAY,CAACsC,YAAY,CAACvB,WAAW,CAAC,CAAC2E,IAAI,CAC3GJ,yCAAG,CAAChE,QAAQ,IAAIA,QAAQ,CAACqE,KAAqB,CAAC,CAChD;EACH;EAEA3C,MAAMA,CAAC4C,EAAU;IACf,OAAO,IAAI,CAACH,eAAe,CAACzC,MAAM,CAAChD,yEAAY,CAACsC,YAAY,CAACvB,WAAW,EAAE6E,EAAE,EAAE,KAAK,CAAC;EACtF;;;uCAdWvF,kBAAkB;IAAA;EAAA;;;aAAlBA,kBAAkB;MAAA+E,OAAA,EAAlB/E,kBAAkB,CAAAgF;IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;ACT2D;AAClC;AAED;AACjB;;;AAEtC,MAAMgB,QAAQ,GAAG;EACf1E,gBAAgB,EAAE;CACnB;AAED;;;;;AAMM,MAAOvB,oBAAqB,SAAQ+F,+DAAW;EAInDzF,YACS4F,MAAc,EACdC,KAAqB;IAE5B,KAAK,EAAE;IAHA,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,KAAK,GAALA,KAAK;IAJd,KAAAC,GAAG,GAAGJ,kDAAQ,CAAC;MAAChG;IAAoB,CAAC,EAAEiG,QAAQ,CAAC;EAOhD;EAEA,IAAII,QAAQA,CAAA;IAAK,OAAO,IAAI,CAACF,KAAK,CAACE,QAAQ;EAAE;EAE7C,IAAIC,GAAGA,CAAA;IAAK,OAAO,IAAI,CAACJ,MAAM,CAACI,GAAG;EAAE;EAEpCC,QAAQA,CAACtF,GAAW;IAClB,OAAO,IAAI,CAACkF,KAAK,CAACE,QAAQ,CAACG,QAAQ,CAACC,GAAG,CAACxF,GAAG,CAAC;EAC9C;EAEAL,SAASA,CAAmB8F,IAAS;IACnC,MAAMF,QAAQ,GAAG,IAAI,CAACL,KAAK,CAACE,QAAQ,CAACG,QAAQ;IAC7C,OAAOE,IAAI,CAACC,MAAM,CAAC,CAACC,GAAG,EAAE3F,GAAG,KAAI;MAC9B2F,GAAG,CAAC3F,GAAG,CAAC,GAAGuF,QAAQ,CAACC,GAAG,CAACxF,GAAG,CAAC;MAC5B,OAAO2F,GAAG;IACZ,CAAC,EAAE,EAA4B,CAAC;EAClC;EAEAC,aAAaA,CAAC5F,GAAW;IACvB,OAAO,IAAI,CAACkF,KAAK,CAACE,QAAQ,CAACS,aAAa,CAACL,GAAG,CAACxF,GAAG,CAAC;EACnD;EAEA8F,cAAcA,CAAmBL,IAAS;IACxC,MAAMI,aAAa,GAAG,IAAI,CAACX,KAAK,CAACE,QAAQ,CAACS,aAAa;IACvD,OAAOJ,IAAI,CAACC,MAAM,CAAC,CAACC,GAAG,EAAE3F,GAAG,KAAI;MAC9B2F,GAAG,CAAC3F,GAAG,CAAC,GAAG6F,aAAa,CAACL,GAAG,CAACxF,GAAG,CAAC;MACjC,OAAO2F,GAAG;IACZ,CAAC,EAAE,EAA4B,CAAC;EAClC;EAGAI,KAAKA,CAAA;IAAc,OAAO,IAAI,CAACd,MAAM,CAACe,oBAAoB,EAAE,CAACC,MAAM,EAAEF,KAAU;EAAE;EAEjF;;;EAGOzF,gBAAgBA,CAAC4F,QAAoB;IAC1C,MAAMC,CAAC,GAAG,IAAI,CAAChB,GAAG,CAACiB,IAAI,CAAC,kBAAkB,CAAC;IAC3C,IAAI,CAACC,aAAa,CAACC,GAAG,CACpB,IAAI,CAACC,kBAAkB,EAAE,CAAC5F,SAAS,CAAC,MAAMuF,QAAQ,EAAE,CAAC,CACtD;IACDC,CAAC,CAACK,GAAG,EAAE;EACT;EAEA;;;;EAIOC,OAAOA,CAACpB,GAAW,EAAEY,MAAyB;IACnD,OAAO,IAAI,CAAChB,MAAM,CAACyB,QAAQ,CAAC,CAACrB,GAAG,CAAC,EAAEY,MAAM,CAAC;EAC5C;EAEA;;;EAGO1E,WAAWA,CAACoF,QAAe,EAAEV,MAA6C;IAC/E,OAAO,IAAI,CAAChB,MAAM,CAACyB,QAAQ,CAACC,QAAQ,EAAE;MAAE,GAAGV,MAAM;MAAEW,UAAU,EAAE,IAAI,CAAC1B;IAAK,CAAE,CAAC;EAC9E;EAEO2B,mBAAmBA,CAACF,QAAe,EAAEV,MAA6C;IACvF,OAAO,IAAI,CAAChB,MAAM,CAACyB,QAAQ,CAACC,QAAQ,EAAE;MAAE,GAAGV,MAAM;MAAEW,UAAU,EAAE,IAAI,CAAC1B,KAAK,CAAC4B,MAAM,CAACC;IAAU,CAAE,CAAC;EAChG;EAEAR,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACtB,MAAM,CAAC+B,MAAM,CAAC3C,IAAI,CAC5BM,4CAAM,CAACsC,KAAK,IAAIA,KAAK,YAAYxC,0DAAa,CAAC,EAC/CI,+CAAS,CAAC,CAAC,CAAC,IAAI,CAACK,KAAK,CAACE,QAAQ,CAAC2B,UAAU,CAAC,EAC3C9C,yCAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAACiB,KAAK,CAACE,QAAQ,CAAC2B,UAAU,CAAC,EAC3CnC,8CAAQ,EAAE,EACVD,4CAAM,CAAC,CAAC,CAACuC,cAAc,EAAEC,WAAW,CAAC,KAAKD,cAAc,IAAI,CAACC,WAAW,CAAC,CAC1E;EACH;;;uCAhFWpI,oBAAoB,EAAAjC,sDAAA,CAAAc,mDAAA,GAAAd,sDAAA,CAAAc,2DAAA;IAAA;EAAA;;;aAApBmB,oBAAoB;MAAAgF,OAAA,EAApBhF,oBAAoB,CAAAiF;IAAA;EAAA;;;;;;;;;;;;;;;;;;ACZmB;AACE;;AAGhD,MAAOE,iBAAkB,SAAQb,+DAAe;EAEpDiE,MAAMA,CAA0BzD,WAAmB,EAAE0D,MAA0B;IAC7E,OAAO,IAAI,CAACC,IAAI,CAACC,IAAI,CAAI,iBAAiB5D,WAAW,EAAE,EAAE0D,MAAM,EAAE;MAC/DlL,MAAM,EAAE;QAAEsH,KAAK,EAAE,IAAI,CAACA,KAAK;QAAE+D,MAAM,EAAE,IAAI,CAACA;MAAM;KACjD,CAAC;EACJ;EAEAC,MAAMA,CAA0B9D,WAAmB,EAAE+D,QAAgB,EAAEL,MAA0B;IAC/F,OAAO,IAAI,CAACC,IAAI,CAACC,IAAI,CAAI,iBAAiB5D,WAAW,IAAI+D,QAAQ,EAAE,EAAEL,MAAM,EAAE;MAC3ElL,MAAM,EAAE;QAAEsH,KAAK,EAAE,IAAI,CAACA,KAAK;QAAE+D,MAAM,EAAE,IAAI,CAACA;MAAM;KACjD,CAAC;EACJ;EAEA/F,MAAMA,CAACkG,IAAY,EAAEtD,EAAU,EAAEuD,QAAiB;IAChD,OAAO,IAAI,CAACN,IAAI,CAAC7F,MAAM,CAAO,IAAI,CAACoG,MAAM,CAACV,6DAAgB,GAAG,QAAQ,CAAC,EAAE;MACtEhL,MAAM,EAAE;QAAEwH,WAAW,EAAEgE,IAAI;QAAEtD,EAAE,EAAEA,EAAE,CAACX,QAAQ,EAAE;QAAED,KAAK,EAAE,IAAI,CAACA,KAAK;QAAEqE,KAAK,EAAEF,QAAQ,CAAClE,QAAQ;MAAE;KAC9F,CAAC;EACJ;;;;;wJAlBWM,iBAAiB,IAAAJ,iBAAA,IAAjBI,iBAAiB;MAAA;IAAA;EAAA;;;aAAjBA,iBAAiB;MAAAH,OAAA,EAAjBG,iBAAiB,CAAAF;IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACPyC;AACvB;AAEV;AACgB;AACP;;AAE/C,MAAMgB,QAAQ,GAAG;EACfoD,GAAG,EAAE,KAAK;EACVC,WAAW,EAAE,KAAK;EAClBC,oBAAoB,EAAE,KAAK;EAC3B3G,MAAM,EAAE;CACT;AAEM,MAAM0F,gBAAgB,GAAG,eAAe;AACxC,MAAMkB,gBAAgB,GAAG,mBAAmB;AAG7C,MAAOC,aAAc,SAAQnF,+DAAe;EADlDhE,YAAA;;IAGE,KAAA8F,GAAG,GAAGJ,kDAAQ,CAAC;MAAEyD;IAAa,CAAE,EAAExD,QAAQ,CAAC;IAEnC,KAAAyD,YAAY,GAAGjK,gDAAS,CAAC2J,wDAAY,CAAC;;EAE9C;;;;;;EAMAO,YAAYA,CAACrM,MAA+C;IAC1D,IAAI,CAAC8I,GAAG,CAACiB,IAAI,CAAC,aAAa,CAAC;IAC5B,OAAO/J,MAAM,CAACgI,IAAI,CAChBM,4CAAM,CAAC/E,CAAC,IAAIA,CAAC,IAAI,IAAI,CAAC,EACtBsI,+CAAS,CAACtI,CAAC,IAAI,IAAI,CAAC0I,oBAAoB,CAAC1I,CAAC,CAAC6D,eAAe,CAAC,CAACY,IAAI,CAAC4D,iDAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAClF;EACH;EAEQK,oBAAoBA,CAAC7E,eAAuB,EAAEkF,cAAyB;IAC7E,IAAIxD,GAAG,GAAG,IAAI,CAACA,GAAG,CAACiB,IAAI,CAAC,sBAAsB,CAAC;IAC/C,OAAO,IAAI,CAACqC,YAAY,CAACJ,WAAW,CAAC;MACnCpH,YAAY,EAAE,CAACwC,eAAe,CAAC;MAC/BmF,OAAO,EAAED,cAAc;MACvBE,MAAM,EAAE,eAAe;MACvB1D,GAAG,EAAE;KACN,CAAC,CAACd,IAAI,CACLJ,yCAAG,CAACxH,IAAI,IAAIA,IAAI,CAACqM,OAAO,CAAC,CAC1B;EACH;EAEAnH,MAAMA,CAACgC,KAAa,EAAEE,WAAmB,EAAE+D,QAAgB,EAAEI,KAAc,EAAEe,QAAiB,EAAEC,WAAoB;IAClH,IAAI,CAAC7D,GAAG,CAACiB,IAAI,CAAC,QAAQ,EAAE;MAAEzC,KAAK;MAAEE,WAAW;MAAE+D,QAAQ;MAAEI,KAAK;MAAEe,QAAQ;MAAEjC;IAAM,CAAE,CAAC;IAClF,OAAO,IAAI,CAACU,IAAI,CAAC7F,MAAM,CAAO,IAAI,CAACoG,MAAM,CAACV,gBAAgB,GAAG,QAAQ,CAAC,EAAE;MACtEhL,MAAM,EAAE;QACNwH,WAAW;QACXU,EAAE,EAAEqD,QAAQ,CAAChE,QAAQ,EAAE;QACvBD,KAAK;QACLqE,KAAK,EAAEA,KAAK,CAACpE,QAAQ,EAAE;QACvB,IAAImF,QAAQ,IAAI;UAAEA,QAAQ,EAAEA,QAAQ,CAACnF,QAAQ;QAAE,CAAE,CAAC;QAClD,IAAImF,QAAQ,IAAIC,WAAW,IAAI;UAAEA;QAAW,CAAE;;KAEjD,CAAC;EACJ;;;;;gJA5CWR,aAAa,IAAA1E,iBAAA,IAAb0E,aAAa;MAAA;IAAA;EAAA;;;aAAbA,aAAa;MAAAzE,OAAA,EAAbyE,aAAa,CAAAxE;IAAA;EAAA;;;;;;;;;;;;;;;;;;;ACnBwB;AAGZ;AAEF;;;;AAEpC,MAAMgB,QAAQ,GAAG;EACfoD,GAAG,EAAE,KAAK;EACVE,oBAAoB,EAAE,KAAK;EAC3BD,WAAW,EAAE;CACd;AAGK,MAAOF,YAAY;EAIvB9I,YAAoBmI,IAAgB,EAAU2B,OAAgB;IAA1C,KAAA3B,IAAI,GAAJA,IAAI;IAAsB,KAAA2B,OAAO,GAAPA,OAAO;IAFrD,KAAAhE,GAAG,GAAGJ,kDAAQ,CAAC;MAACoD;IAAY,CAAC,EAAEnD,QAAQ,CAAC;EAE0B;EAElEoE,YAAYA,CAACC,QAAgB,EAAEhN,MAAc,EAAEwM,MAAc,EAAEF,cAAyB;IACtF,IAAI,CAACxD,GAAG,CAACiB,IAAI,CAAC,sBAAsB,EAAE;MAAEiD,QAAQ;MAAEhN,MAAM;MAAEwM,MAAM;MAAEF;IAAc,CAAE,CAAC;IACnF;IACA,MAAMW,SAAS,GAAG,CAAC,CAACjN,MAAM;IAC1B,MAAMkN,WAAW,GAAGlN,MAAM,EAAEmN,iBAAiB,EAAE,IAAI,EAAE;IACrD,MAAMC,QAAQ,GAAGF,WAAW,CAACG,QAAQ,CAAC,QAAQ,CAAC,IAAI,KAAK;IACxD,MAAMC,SAAS,GAAG,EAAE,IACfF,QAAQ,GAAG,EAAE,GAAG,UAAU,IAAI,CAACN,OAAO,CAACxF,KAAK,EAAE,CAAC,IAC/C2F,SAAS,GAAG,IAAIjN,MAAM,EAAE,GAAG,EAAE,CAAC,GAC/B,WAAW,IAAIwM,MAAM,IAAI,EAAE,CAAC,6CAA6C;IAC7E;IACA,MAAMe,SAAS,GAAGD,SAAS,CAACE,SAAS,CAAC,CAAC,CAAC;IACxC,OAAO,IAAI,CAACrC,IAAI,CAACC,IAAI,CAAe,kBAAkB4B,QAAQ,IAAIO,SAAS,EAAE,EAC3E;MACEE,KAAK,EAAEnB;KACR,CACF;EACH;EAEAN,WAAWA,CAAC;IAAEpH,YAAY;IAAE2H,OAAO;IAAEC,MAAM;IAAE1D;EAAG,CAA8E;IAC5H,IAAI,CAACA,GAAG,CAACiB,IAAI,CAAC,aAAa,EAAE;MAAEjB,GAAG;MAAElE,YAAY;MAAE2H,OAAO;MAAEC;IAAM,CAAE,CAAC;IACpE,MAAMc,SAAS,GACb,aAAa,IAAI1I,YAAY,EAAE8I,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAC7C,UAAU,IAAI,CAACZ,OAAO,CAACxF,KAAK,EAAE,GAC9B,WAAW,IAAIiF,OAAO,EAAEmB,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GACxC,WAAW,IAAIlB,MAAM,IAAI,EAAE,CAAC,6CAA6C;IAC7E;IACA,MAAMe,SAAS,GAAGD,SAAS,CAACE,SAAS,CAAC,CAAC,CAAC;IACxC,OAAO,IAAI,CAACrC,IAAI,CAACC,IAAI,CACnB,8CAA8CmC,SAAS,EAAE,EACzD,EAAE,CACH;EACH;;;uCAtCWzB,YAAY,EAAArL,sDAAA,CAAAc,4DAAA,GAAAd,sDAAA,CAAAgB,6CAAA;IAAA;EAAA;;;aAAZqK,YAAY;MAAApE,OAAA,EAAZoE,YAAY,CAAAnE;IAAA;EAAA;;;;;;;;;;;;;;;;;ACbW;;AAEpC;;;;AAKM,MAAgBc,WAAW;EADjCzF,YAAA;IAGY,KAAAgH,aAAa,GAAG,IAAI2D,8CAAY,EAAE;;EAE5CC,WAAWA,CAAA;IACT,IAAI,CAACC,OAAO,EAAE;EAChB;EAEA;EACAA,OAAOA,CAAA;IACL,IAAI,CAAC7D,aAAa,CAAC8D,WAAW,EAAE;EAClC;;;uCAXoBrF,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAf,OAAA,EAAXe,WAAW,CAAAd;IAAA;EAAA","sources":["./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.html","./projects/eav-ui/src/app/permissions/permissions.component.ts","./projects/eav-ui/src/app/permissions/permissions.component.html","./projects/eav-ui/src/app/permissions/services/metadata.service.ts","./projects/eav-ui/src/app/permissions/services/permissions.service.ts","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts","./projects/eav-ui/src/app/shared/services/entity-edit.service.ts","./projects/eav-ui/src/app/shared/services/entity.service.ts","./projects/eav-ui/src/app/shared/services/query.service.ts","./projects/eav-ui/src/app/shared/services/service-base.ts"],"sourcesContent":["import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { Permission } from '../models/permission.model';\r\nimport { PermissionsActionsParams } from './permissions-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-permissions-actions',\r\n  templateUrl: './permissions-actions.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n  ],\r\n})\r\nexport class PermissionsActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & PermissionsActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & PermissionsActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deletePermission(): void {\r\n    const permission: Permission = this.params.data;\r\n    this.params.onDelete(permission);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deletePermission()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnInit, signal } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { convert, Of, transient } from '../../../../core';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants, MetadataKeyTypes } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep } from '../shared/models/edit-form.model';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../shared/routing/dialog-routing.service';\r\nimport { Permission } from './models/permission.model';\r\nimport { PermissionsActionsComponent } from './permissions-actions/permissions-actions.component';\r\nimport { PermissionsActionsParams } from './permissions-actions/permissions-actions.models';\r\nimport { PermissionsService } from './services/permissions.service';\r\n\r\n@Component({\r\n  selector: 'app-permissions',\r\n  templateUrl: './permissions.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    MatDialogActions,\r\n    SxcGridModule,\r\n  ],\r\n})\r\nexport class PermissionsComponent implements OnInit {\r\n  gridOptions = this.buildGridOptions();\r\n  permissions = signal<Permission[]>([]);\r\n  #permissionsService = transient(PermissionsService);\r\n  #dialogRoutes = transient(DialogRoutingService);\r\n\r\n  #params = convert(this.#dialogRoutes.getParams(['targetType', 'keyType', 'key']), p => ({\r\n    targetType: parseInt(p.targetType, 10),\r\n    keyType: p.keyType as Of<typeof MetadataKeyTypes>,\r\n    key: p.key,\r\n  }));\r\n\r\n  #prefills: Record<string, Record<string, string>> = {\r\n    [eavConstants.metadata.language.targetType]: {\r\n      PermissionType: 'language',\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<PermissionsComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.#fetchPermissions();\r\n    this.#dialogRoutes.doOnDialogClosed(() => this.#fetchPermissions());\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  #fetchPermissions() {\r\n    this.#permissionsService.getAll(this.#params.targetType, this.#params.keyType, this.#params.key)\r\n      .subscribe(permissions => {\r\n        this.permissions.set(permissions);\r\n      });\r\n  }\r\n\r\n  editPermission(permission?: Permission) {\r\n    let form: EditForm;\r\n    if (permission == null) {\r\n      form = {\r\n        items: [{\r\n          ...EditPrep.newMetadataFromInfo(\r\n            eavConstants.contentTypes.permissions,\r\n            EditPrep.constructMetadataInfo(this.#params.targetType, this.#params.keyType, this.#params.key)\r\n          ),\r\n          ...(this.#prefills[this.#params.targetType] && { Prefill: this.#prefills[this.#params.targetType] }),\r\n        }],\r\n      };\r\n    } else {\r\n      form = {\r\n        items: [EditPrep.editId(permission.Id)],\r\n      };\r\n    }\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  private deletePermission(permission: Permission) {\r\n    if (!confirm(`Delete '${permission.Title}' (${permission.Id})?`)) return;\r\n    this.snackBar.open('Deleting...');\r\n    this.#permissionsService.delete(permission.Id).subscribe(() => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.#fetchPermissions();\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.Id,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<Permission>()\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Name',\r\n          field: 'Title',\r\n          sort: 'asc',\r\n          onCellClicked: (params) => {\r\n            const permission: Permission = params.data;\r\n            this.editPermission(permission);\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Identity',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Condition',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Character,\r\n          field: 'Grant',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight1,\r\n          cellRenderer: PermissionsActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: PermissionsActionsParams = {\r\n              onDelete: (permission) => this.deletePermission(permission),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","<div class=\"eav-dialog nav-component-wrapper\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Permissions</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content nav-component-wrapper\">\r\n    <router-outlet></router-outlet>\r\n    <div class=\"grid-wrapper\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"permissions()\" [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new permission\" (click)=\"editPermission(null)\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Of } from '../../../../../core';\r\nimport { MetadataDto } from '../../metadata';\r\nimport { MetadataKeyTypes } from '../../shared/constants/eav.constants';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiRoot = 'admin/metadata/get';\r\n\r\n@Injectable()\r\nexport class MetadataService extends HttpServiceBase {\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param targetType type of target metadata item is for, e.g. for Entity, or ContentType\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of target metadata item is for\r\n   * @param contentTypeName name of content type where permissions are stored. If blank, backend returns all metadata except permissions\r\n   */\r\n  getMetadata(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string | number, contentTypeName?: string): Observable<MetadataDto> {\r\n    return this.getHttp<MetadataDto>(webApiRoot, {\r\n      params: {\r\n        appId: this.appId,\r\n        targetType: targetType.toString(),\r\n        keyType,\r\n        key: key.toString(),\r\n        ...(contentTypeName && { contentType: contentTypeName }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { Of, transient } from '../../../../../core';\r\nimport { eavConstants, MetadataKeyTypes } from '../../shared/constants/eav.constants';\r\nimport { EntityEditService } from '../../shared/services/entity-edit.service';\r\nimport { Permission } from '../models/permission.model';\r\nimport { MetadataService } from './metadata.service';\r\n\r\n@Injectable()\r\nexport class PermissionsService {\r\n\r\n  private metadataService = transient(MetadataService);\r\n\r\n  private entitiesService = transient(EntityEditService);\r\n\r\n  getAll(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string): Observable<Permission[]> {\r\n    return this.metadataService.getMetadata(targetType, keyType, key, eavConstants.contentTypes.permissions).pipe(\r\n      map(metadata => metadata.Items as Permission[]),\r\n    );\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.entitiesService.delete(eavConstants.contentTypes.permissions, id, false);\r\n  }\r\n}\r\n","import { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { ServiceBase } from '../services/service-base';\r\nimport { classLog } from '../logging';\r\n\r\nconst logSpecs = {\r\n  doOnDialogClosed: true,\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase {\r\n\r\n  log = classLog({DialogRoutingService}, logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  getParam(key: string): string {\r\n    return this.route.snapshot.paramMap.get(key);\r\n  }\r\n\r\n  getParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const paramMap = this.route.snapshot.paramMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = paramMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  getQueryParam(key: string): string {\r\n    return this.route.snapshot.queryParamMap.get(key);\r\n  }\r\n\r\n  getQueryParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const queryParamMap = this.route.snapshot.queryParamMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = queryParamMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe(() => callback())\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  public navParentFirstChild(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route.parent.firstChild });\r\n  }\r\n  \r\n  childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../edit/shared/models/eav';\r\nimport { ItemInListIdentifier } from '../models/edit-form.model';\r\nimport { webApiEntityRoot } from './entity.service';\r\nimport { HttpServiceBase } from './http-service-base';\r\n\r\n@Injectable()\r\nexport class EntityEditService extends HttpServiceBase {\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.appId, force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n\r\ninterface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: ItemInListIdentifier;\r\n  [field: string]: any;\r\n}\r\n\r\ninterface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { filter, map, Observable, shareReplay, switchMap } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { EntityLightIdentifier } from '../../../../../edit-types/src/EntityLight';\r\nimport { classLog } from '../logging';\r\nimport { HttpServiceBase } from './http-service-base';\r\nimport { QueryService } from './query.service';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  getEntities: false,\r\n  getAvailableEntities: false,\r\n  delete: false,\r\n};\r\n\r\nexport const webApiEntityRoot = 'admin/entity/';\r\nexport const webApiEntityList = 'admin/entity/list';\r\n\r\n@Injectable()\r\nexport class EntityService extends HttpServiceBase {\r\n\r\n  log = classLog({ EntityService }, logSpecs);\r\n\r\n  private queryService = transient(QueryService);\r\n\r\n  /**\r\n   * Get entities based on the content type name.\r\n   * As of 2024-04-29 only used in REST API.\r\n   * @param params\r\n   * @returns\r\n   */\r\n  getEntities$(params: Observable<{ contentTypeName: string }>): Observable<EntityLightIdentifier[]> {\r\n    this.log.fnIf('getEntities');\r\n    return params.pipe(\r\n      filter(p => p != null),\r\n      switchMap(p => this.getAvailableEntities(p.contentTypeName).pipe(shareReplay(1))),\r\n    );\r\n  }\r\n\r\n  private getAvailableEntities(contentTypeName: string, entitiesFilter?: string[]): Observable<EntityLightIdentifier[]> {\r\n    var log = this.log.fnIf('getAvailableEntities');\r\n    return this.queryService.getEntities({\r\n      contentTypes: [contentTypeName],\r\n      itemIds: entitiesFilter,\r\n      fields: 'Id,Guid,Title',\r\n      log: 'getAvailableEntities'\r\n    }).pipe(\r\n      map(data => data.Default)\r\n    );\r\n  }\r\n\r\n  delete(appId: number, contentType: string, entityId: number, force: boolean, parentId?: number, parentField?: string): Observable<null> {\r\n    this.log.fnIf('delete', { appId, contentType, entityId, force, parentId, parent });\r\n    return this.http.delete<null>(this.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: {\r\n        contentType,\r\n        id: entityId.toString(),\r\n        appId,\r\n        force: force.toString(),\r\n        ...(parentId && { parentId: parentId.toString() }),\r\n        ...(parentId && parentField && { parentField }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { classLog } from '../logging';\r\nimport { QueryStreams } from '../models/query-stream.model';\r\nimport { Context } from './context';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  getAvailableEntities: false,\r\n  getEntities: false,\r\n};\r\n\r\n@Injectable()\r\nexport class QueryService {\r\n\r\n  log = classLog({QueryService}, logSpecs);\r\n\r\n  constructor(private http: HttpClient, private context: Context) { }\r\n\r\n  getFromQuery(queryUrl: string, params: string, fields: string, entitiesFilter?: string[]): Observable<QueryStreams> {\r\n    this.log.fnIf('getAvailableEntities', { queryUrl, params, fields, entitiesFilter });\r\n    // Check if any params we should auto-add are already set (like in a query which has these params set in the configuration)\r\n    const hasParams = !!params;\r\n    const paramsLower = params?.toLocaleLowerCase() ?? '';\r\n    const hasAppId = paramsLower.includes('appid=') ?? false;\r\n    const allParams = ''\r\n      + (hasAppId ? '' : `&appId=${this.context.appId}`)\r\n      + (hasParams ? `&${params}` : '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(`app/auto/query/${queryUrl}?${urlParams}`,\r\n      {\r\n        Guids: entitiesFilter,\r\n      },\r\n    );\r\n  }\r\n\r\n  getEntities({ contentTypes, itemIds, fields, log }: { contentTypes: string[]; itemIds: string[]; fields: string; log: string }): Observable<QueryStreams> {\r\n    this.log.fnIf(`getEntities`, { log, contentTypes, itemIds, fields });\r\n    const allParams =\r\n      '&typeNames=' + (contentTypes?.join(',') ?? '')\r\n      + `&appId=${this.context.appId}`\r\n      + '&itemIds=' + (itemIds?.join(',') ?? '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(\r\n      `app/auto/query/System.EntityPicker/Default?${urlParams}`,\r\n      {}\r\n    );\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n"],"names":["MatRippleModule","MatIconModule","PermissionsActionsComponent","agInit","params","refresh","deletePermission","permission","data","onDelete","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","PermissionsActionsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","PermissionsActionsComponent_Template_div_click_1_listener","ɵɵtext","ɵɵelementEnd","i1","MatRipple","i2","MatIcon","encapsulation","signal","MatButtonModule","MatDialogActions","MatDialogRef","MatSnackBar","RouterOutlet","convert","transient","ColumnDefinitions","defaultGridOptions","eavConstants","convertFormToUrl","EditPrep","SxcGridModule","DialogRoutingService","PermissionsService","PermissionsComponent","permissionsService","dialogRoutes","prefills","constructor","dialog","snackBar","gridOptions","buildGridOptions","permissions","getParams","p","targetType","parseInt","keyType","key","metadata","language","PermissionType","ngOnInit","fetchPermissions","doOnDialogClosed","closeDialog","close","#fetchPermissions","getAll","subscribe","set","editPermission","form","items","newMetadataFromInfo","contentTypes","constructMetadataInfo","Prefill","editId","Id","formUrl","navRelative","confirm","Title","open","delete","duration","columnDefs","cellRendererParams","idFieldParamsTooltipGetter","TextWide","headerName","field","sort","onCellClicked","Character","ActionsPinnedRight1","cellRenderer","ɵɵdirectiveInject","PermissionsComponent_Template","PermissionsComponent_Template_button_click_4_listener","ɵɵelement","PermissionsComponent_Template_button_click_12_listener","ɵɵadvance","ɵɵproperty","i3","MatIconButton","MatFabButton","i4","i5","AgGridAngular","HttpServiceBase","webApiRoot","MetadataService","getMetadata","contentTypeName","getHttp","appId","toString","contentType","__ngFactoryType__","factory","ɵfac","map","EntityEditService","metadataService","entitiesService","pipe","Items","id","ActivatedRoute","NavigationEnd","Router","filter","pairwise","startWith","ServiceBase","classLog","logSpecs","router","route","log","snapshot","url","getParam","paramMap","get","keys","reduce","acc","getQueryParam","queryParamMap","getQueryParams","state","getCurrentNavigation","extras","callback","l","fnIf","subscriptions","add","childDialogClosed$","end","navPath","navigate","commands","relativeTo","navParentFirstChild","parent","firstChild","events","event","hadChildBefore","hasChildNow","ɵɵinject","webApiEntityRoot","create","entity","http","post","zoneId","update","entityId","type","tryForce","apiUrl","force","shareReplay","switchMap","QueryService","all","getEntities","getAvailableEntities","webApiEntityList","EntityService","queryService","getEntities$","entitiesFilter","itemIds","fields","Default","parentId","parentField","HttpClient","Context","context","getFromQuery","queryUrl","hasParams","paramsLower","toLocaleLowerCase","hasAppId","includes","allParams","urlParams","substring","Guids","join","Subscription","ngOnDestroy","destroy","unsubscribe"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}