{"version":3,"file":"default-projects_eav-ui_src_app_permissions_permissions_component_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/content-items/services/entities.service.ts","./projects/eav-ui/src/app/core/transient.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.html","./projects/eav-ui/src/app/permissions/permissions.component.ts","./projects/eav-ui/src/app/permissions/permissions.component.html","./projects/eav-ui/src/app/permissions/services/metadata.service.ts","./projects/eav-ui/src/app/permissions/services/permissions.service.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.html"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../edit/shared/models/eav';\r\nimport { webApiEntityRoot } from '../../edit/shared/services';\r\nimport { ItemInListIdentifier } from '../../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Injectable()\r\nexport class EntitiesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.context.appId.toString(), force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n\r\nexport interface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: ItemInListIdentifier;\r\n  [field: string]: any;\r\n}\r\n\r\nexport interface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n","import { Injector, ProviderToken, TypeProvider, inject } from '@angular/core';\r\n\r\n/**\r\n * Transient dependency injection provider.\r\n * This will create a new instance of the provided token,\r\n * without making it available in sub-components\r\n * as would happen with providers in a component.\r\n * \r\n * @param token the class which is injectable\r\n * @param injector the injector to use, if not provided, the current injector will be used.\r\n *     Not not necessary when using transient in the class properties construction or in the constructor,\r\n *     as the injector will be available in the constructor.\r\n *     But necessary when using transient inside anything else.\r\n * @returns \r\n */\r\nexport function transient<T>(token: ProviderToken<T>, injector?: Injector): T {\r\n  // make sure we have an injector\r\n  // this will throw an error, if transient is used outside of construction and without providing an injector\r\n  injector ??= inject(Injector);\r\n\r\n  // create a new injector which is only meant to be used for this transient instance\r\n  const subInjector = Injector.create({\r\n    providers: [\r\n      token as TypeProvider\r\n    ],\r\n    parent: injector\r\n  });\r\n\r\n  // return the instance\r\n  return subInjector.get(token, undefined, { self: true });\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Permission } from '../models/permission.model';\r\nimport { PermissionsActionsParams } from './permissions-actions.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRippleModule } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-permissions-actions',\r\n  templateUrl: './permissions-actions.component.html',\r\n  styleUrls: ['./permissions-actions.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n  ],\r\n})\r\nexport class PermissionsActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & PermissionsActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & PermissionsActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deletePermission(): void {\r\n    const permission: Permission = this.params.data;\r\n    this.params.onDelete(permission);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deletePermission()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, Observable, combineLatest, map } from 'rxjs';\r\nimport { BaseWithChildDialogComponent } from '../shared/components/base-with-child-dialog.component';\r\nimport { IdFieldComponent } from '../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { Permission } from './models/permission.model';\r\nimport { PermissionsActionsComponent } from './permissions-actions/permissions-actions.component';\r\nimport { PermissionsActionsParams } from './permissions-actions/permissions-actions.models';\r\nimport { PermissionsService } from './services/permissions.service';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MetadataService } from './services/metadata.service';\r\nimport { EntitiesService } from '../content-items/services/entities.service';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\n\r\n@Component({\r\n  selector: 'app-permissions',\r\n  templateUrl: './permissions.component.html',\r\n  styleUrls: ['./permissions.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    MatDialogActions,\r\n    AsyncPipe,\r\n    SxcGridModule,\r\n  ],\r\n  providers: [\r\n    PermissionsService,\r\n    MetadataService,\r\n    EntitiesService,\r\n  ],\r\n})\r\nexport class PermissionsComponent extends BaseWithChildDialogComponent implements OnInit, OnDestroy {\r\n  permissions$ = new BehaviorSubject<Permission[]>(undefined);\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private targetType = parseInt(this.route.snapshot.paramMap.get('targetType'), 10);\r\n  private keyType = this.route.snapshot.paramMap.get('keyType') as MetadataKeyType;\r\n  private key = this.route.snapshot.paramMap.get('key');\r\n  private prefills: Record<string, Record<string, string>> = {\r\n    [eavConstants.metadata.language.targetType]: {\r\n      PermissionType: 'language',\r\n    },\r\n  };\r\n\r\n  viewModel$: Observable<PermissionsViewModel>;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<PermissionsComponent>,\r\n\r\n    private permissionsService: PermissionsService,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchPermissions();\r\n    this.subscriptions.add(this.childDialogClosed$().subscribe(() => { this.fetchPermissions(); }));\r\n    this.viewModel$ = combineLatest([\r\n      this.permissions$\r\n    ]).pipe(map(([permissions]) => ({ permissions })));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.permissions$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private fetchPermissions() {\r\n    this.permissionsService.getAll(this.targetType, this.keyType, this.key).subscribe(permissions => {\r\n      this.permissions$.next(permissions);\r\n    });\r\n  }\r\n\r\n  editPermission(permission?: Permission) {\r\n    let form: EditForm;\r\n    if (permission == null) {\r\n      form = {\r\n        items: [{\r\n          ContentTypeName: eavConstants.contentTypes.permissions,\r\n          For: {\r\n            Target: Object.values(eavConstants.metadata).find(m => m.targetType === this.targetType)?.target ?? this.targetType.toString(),\r\n            TargetType: this.targetType,\r\n            ...(this.keyType === eavConstants.keyTypes.guid && { Guid: this.key }),\r\n            ...(this.keyType === eavConstants.keyTypes.number && { Number: parseInt(this.key, 10) }),\r\n            ...(this.keyType === eavConstants.keyTypes.string && { String: this.key }),\r\n          },\r\n          ...(this.prefills[this.targetType] && { Prefill: this.prefills[this.targetType] }),\r\n        }],\r\n      };\r\n    } else {\r\n      form = {\r\n        items: [{ EntityId: permission.Id }],\r\n      };\r\n    }\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private deletePermission(permission: Permission) {\r\n    if (!confirm(`Delete '${permission.Title}' (${permission.Id})?`)) { return; }\r\n    this.snackBar.open('Deleting...');\r\n    this.permissionsService.delete(permission.Id).subscribe(() => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.fetchPermissions();\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.Id,\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<Permission> = {\r\n              tooltipGetter: (permission: Permission) => `ID: ${permission.Id}\\nGUID: ${permission.Guid}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Name',\r\n          field: 'Title',\r\n          sort: 'asc',\r\n          onCellClicked: (params) => {\r\n            const permission: Permission = params.data;\r\n            this.editPermission(permission);\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Identity',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Condition',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Character,\r\n          field: 'Grant',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight1,\r\n          cellRenderer: PermissionsActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: PermissionsActionsParams = {\r\n              onDelete: (permission) => this.deletePermission(permission),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface PermissionsViewModel {\r\n  permissions: Permission[];\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog nav-component-wrapper\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">Permissions</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"eav-dialog-content nav-component-wrapper\">\r\n      <router-outlet></router-outlet>\r\n      <div class=\"grid-wrapper\">\r\n        <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.permissions\" [gridOptions]=\"gridOptions\">\r\n        </ag-grid-angular>\r\n      </div>\r\n      <mat-dialog-actions align=\"end\">\r\n        <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new permission\" (click)=\"editPermission(null)\">\r\n          <mat-icon>add</mat-icon>\r\n        </button>\r\n      </mat-dialog-actions>\r\n    </div>\r\n  </div>\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { MetadataDto } from '../../metadata';\r\nimport { MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nconst webApiRoot = 'admin/metadata/get';\r\n\r\n@Injectable()\r\nexport class MetadataService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param targetType type of target metadata item is for, e.g. for Entity, or ContentType\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of target metadata item is for\r\n   * @param contentTypeName name of content type where permissions are stored. If blank, backend returns all metadata except permissions\r\n   */\r\n  getMetadata(targetType: number, keyType: MetadataKeyType, key: string | number, contentTypeName?: string): Observable<MetadataDto> {\r\n    return this.http.get<MetadataDto>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        targetType: targetType.toString(),\r\n        keyType,\r\n        key: key.toString(),\r\n        ...(contentTypeName && { contentType: contentTypeName }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { EntitiesService } from '../../content-items/services/entities.service';\r\nimport { eavConstants, MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Permission } from '../models/permission.model';\r\nimport { MetadataService } from './metadata.service';\r\nimport { transient } from '../../core';\r\n\r\n@Injectable()\r\nexport class PermissionsService {\r\n\r\n  private metadataService = transient(MetadataService);\r\n\r\n  constructor(private entitiesService: EntitiesService) { }\r\n\r\n  getAll(targetType: number, keyType: MetadataKeyType, key: string): Observable<Permission[]> {\r\n    return this.metadataService.getMetadata(targetType, keyType, key, eavConstants.contentTypes.permissions).pipe(\r\n      map(metadata => metadata.Items as Permission[]),\r\n    );\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.entitiesService.delete(eavConstants.contentTypes.permissions, id, false);\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n  standalone: true,\r\n  imports: [NgClass, MatIconModule, TippyDirective]\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(): void {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>"],"names":["Context","DnnContext","HttpClient","webApiEntityRoot","EntitiesService","constructor","http","context","dnnContext","create","contentType","entity","post","params","appId","zoneId","update","entityId","delete","type","id","tryForce","$2sxc","apiUrl","toString","force","_","i0","ɵɵinject","i1","i2","i3","_2","factory","ɵfac","Injector","inject","transient","token","injector","subInjector","providers","parent","get","undefined","self","MatIconModule","MatRippleModule","PermissionsActionsComponent","agInit","refresh","deletePermission","permission","data","onDelete","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","PermissionsActionsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","PermissionsActionsComponent_Template_div_click_1_listener","ɵɵtext","ɵɵelementEnd","MatRipple","MatIcon","styles","MatDialogRef","MatDialogActions","MatSnackBar","ActivatedRoute","Router","RouterOutlet","BehaviorSubject","combineLatest","map","BaseWithChildDialogComponent","IdFieldComponent","defaultGridOptions","eavConstants","convertFormToUrl","PermissionsService","ColumnDefinitions","AsyncPipe","MatButtonModule","MetadataService","SxcGridModule","PermissionsComponent_Conditional_0_Template_button_click_4_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","closeDialog","ɵɵelement","PermissionsComponent_Conditional_0_Template_button_click_12_listener","editPermission","ɵɵadvance","ɵɵproperty","permissions","gridOptions","PermissionsComponent","router","route","dialogRef","permissionsService","snackBar","permissions$","buildGridOptions","targetType","parseInt","snapshot","paramMap","keyType","key","prefills","metadata","language","PermissionType","ngOnInit","fetchPermissions","subscriptions","add","childDialogClosed$","subscribe","viewModel$","pipe","ngOnDestroy","complete","close","getAll","next","form","items","ContentTypeName","contentTypes","For","Target","Object","values","find","m","target","TargetType","keyTypes","guid","Guid","number","Number","string","String","Prefill","EntityId","Id","formUrl","navigate","relativeTo","confirm","Title","open","duration","columnDefs","cellRenderer","cellRendererParams","tooltipGetter","TextWide","headerName","field","sort","onCellClicked","Character","ActionsPinnedRight1","ɵɵdirectiveInject","i4","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","PermissionsComponent_Template","ɵɵtemplate","PermissionsComponent_Conditional_0_Template","ɵɵconditional","tmp_0_0","ɵɵpipeBind1","i5","MatIconButton","MatFabButton","i6","i7","AgGridAngular","webApiRoot","getMetadata","contentTypeName","entitiesService","metadataService","Items","copyToClipboard","NgClass","TippyDirective","value","align","tooltip","copy","IdFieldComponent_Template","IdFieldComponent_Template_div_click_0_listener","ɵɵpureFunction2","_c0","ɵɵtextInterpolate"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}