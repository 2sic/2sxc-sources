{"version":3,"sources":["./projects/ng-dialogs/src/app/apps-management/apps-management-nav/apps-management-dialog.config.ts","./projects/ng-dialogs/src/app/apps-management/create-app/create-app-dialog.config.ts","./projects/ng-dialogs/src/app/apps-management/create-inherited-app/create-inherited-app-dialog.config.ts","./projects/ng-dialogs/src/app/apps-management/apps-management-routing.module.ts","./projects/ng-dialogs/src/app/apps-management/apps-management.module.ts","./projects/ng-dialogs/src/app/apps-management/services/apps-list.service.ts","./projects/ng-dialogs/src/app/apps-management/services/features-config.service.ts","./projects/ng-dialogs/src/app/apps-management/services/sxc-insights.service.ts"],"names":["appsManagementDialog","name","initContext","panelSize","panelClass","getComponent","createAppDialog","createInheritedAppDialog","appsManagementRoutes","path","component","data","dialog","children","redirectTo","pathMatch","title","loadChildren","then","m","ImportAppModule","AppAdministrationModule","AppsManagementRoutingModule","AppsManagementModule","A","http","context","dnnContext","apiUrl","this","$2sxc","getAll","get","params","zoneId","toString","getInheritable","create","inheritAppId","post","delete","appId","flushCache","AppsListService","webApiFeatures","getManageFeaturesUrl","saveFeatures","featuresString","FeaturesConfigService","activatePageLog","duration","webApiLogRoot","SxcInsightsService"],"mappings":"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","file":"projects_ng-dialogs_src_app_apps-management_apps-management_module_ts.710772f15ec57c71abbb.js","sourcesContent":["import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const appsManagementDialog: DialogConfig = {\r\n  name: 'APPS_MANAGEMENT_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { AppsManagementNavComponent } = await import('./apps-management-nav.component');\r\n    return AppsManagementNavComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const createAppDialog: DialogConfig = {\r\n  name: 'CREATE_APP_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'small',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { CreateAppComponent } = await import('./create-app.component');\r\n    return CreateAppComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const createInheritedAppDialog: DialogConfig = {\r\n  name: 'CREATE_INHERITED_APP_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'small',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { CreateInheritedAppComponent } = await import('./create-inherited-app.component');\r\n    return CreateInheritedAppComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { EmptyRouteComponent } from '../shared/components/empty-route/empty-route.component';\r\nimport { appsManagementDialog } from './apps-management-nav/apps-management-dialog.config';\r\nimport { createAppDialog } from './create-app/create-app-dialog.config';\r\nimport { createInheritedAppDialog } from './create-inherited-app/create-inherited-app-dialog.config';\r\n\r\nconst appsManagementRoutes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: appsManagementDialog }, children: [\r\n      { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n      { path: 'system', component: EmptyRouteComponent, data: { title: 'System Info' } },\r\n      {\r\n        path: 'list', component: EmptyRouteComponent, children: [\r\n          {\r\n            path: 'import',\r\n            loadChildren: () => import('../import-app/import-app.module').then(m => m.ImportAppModule)\r\n          },\r\n          { path: 'create', component: DialogEntryComponent, data: { dialog: createAppDialog } },\r\n          { path: 'create-inherited', component: DialogEntryComponent, data: { dialog: createInheritedAppDialog } },\r\n          {\r\n            path: ':appId',\r\n            loadChildren: () => import('../app-administration/app-administration.module').then(m => m.AppAdministrationModule)\r\n          },\r\n        ],\r\n        data: { title: 'Apps in this Zone' },\r\n      },\r\n      { path: 'settings', component: EmptyRouteComponent, data: { title: 'System Settings' } },\r\n      { path: 'languages', component: EmptyRouteComponent, data: { title: 'Zone Languages' } },\r\n      { path: 'features', component: EmptyRouteComponent, data: { title: 'Zone Features' } },\r\n      { path: 'sxc-insights', component: EmptyRouteComponent, data: { title: 'Debug Insights' } },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(appsManagementRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppsManagementRoutingModule { }\r\n","import { AgGridModule } from '@ag-grid-community/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { EcoFabSpeedDialModule } from '@ecodev/fab-speed-dial';\r\nimport { AppDialogConfigService } from '../app-administration/services';\r\nimport { Context } from '../shared/services/context';\r\nimport { DialogService } from '../shared/services/dialog.service';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { AppsListActionsComponent } from './ag-grid-components/apps-list-actions/apps-list-actions.component';\r\nimport { AppsListShowComponent } from './ag-grid-components/apps-list-show/apps-list-show.component';\r\nimport { FeaturesListEnabledReasonComponent } from './ag-grid-components/features-list-enabled-reason/features-list-enabled-reason.component';\r\nimport { FeaturesListEnabledComponent } from './ag-grid-components/features-list-enabled/features-list-enabled.component';\r\nimport { FeaturesListNameComponent } from './ag-grid-components/features-list-name/features-list-name.component';\r\nimport { FeaturesListPublicComponent } from './ag-grid-components/features-list-public/features-list-public.component';\r\nimport { FeaturesListSecurityComponent } from './ag-grid-components/features-list-security/features-list-security.component';\r\nimport { FeaturesListUiComponent } from './ag-grid-components/features-list-ui/features-list-ui.component';\r\nimport { SiteLanguagesStatusComponent } from './ag-grid-components/site-languages-status/site-languages-status.component';\r\nimport { AppsListComponent } from './apps-list/apps-list.component';\r\nimport { AppsManagementNavComponent } from './apps-management-nav/apps-management-nav.component';\r\nimport { AppsManagementRoutingModule } from './apps-management-routing.module';\r\nimport { CreateAppComponent } from './create-app/create-app.component';\r\nimport { CreateInheritedAppComponent } from './create-inherited-app/create-inherited-app.component';\r\nimport { ManageFeaturesComponent } from './manage-features/manage-features.component';\r\nimport { AppsListService } from './services/apps-list.service';\r\nimport { FeaturesConfigService } from './services/features-config.service';\r\nimport { SxcInsightsService } from './services/sxc-insights.service';\r\nimport { ZoneService } from './services/zone.service';\r\nimport { SiteLanguagesComponent } from './site-languages/site-languages.component';\r\nimport { SxcInsightsComponent } from './sxc-insights/sxc-insights.component';\r\nimport { SystemInfoComponent } from './system-info/system-info.component';\r\nimport { SystemSettingsComponent } from './system-settings/system-settings.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppsManagementNavComponent,\r\n    AppsListComponent,\r\n    ManageFeaturesComponent,\r\n    SxcInsightsComponent,\r\n    AppsListShowComponent,\r\n    AppsListActionsComponent,\r\n    FeaturesListEnabledComponent,\r\n    FeaturesListUiComponent,\r\n    FeaturesListPublicComponent,\r\n    FeaturesListNameComponent,\r\n    FeaturesListSecurityComponent,\r\n    SiteLanguagesComponent,\r\n    SiteLanguagesStatusComponent,\r\n    SystemSettingsComponent,\r\n    CreateAppComponent,\r\n    CreateInheritedAppComponent,\r\n    SystemInfoComponent,\r\n    FeaturesListEnabledReasonComponent,\r\n  ],\r\n  imports: [\r\n    AppsManagementRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    CommonModule,\r\n    AgGridModule.withComponents([]),\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatSlideToggleModule,\r\n    MatTabsModule,\r\n    MatRippleModule,\r\n    EcoFabSpeedDialModule,\r\n    MatCardModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    ReactiveFormsModule,\r\n    MatSelectModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    AppsListService,\r\n    ZoneService,\r\n    FeaturesConfigService,\r\n    SxcInsightsService,\r\n    DialogService,\r\n    AppDialogConfigService,\r\n  ],\r\n})\r\nexport class AppsManagementModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { App } from '../models/app.model';\r\n\r\n@Injectable()\r\nexport class AppsListService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  getAll() {\r\n    return this.http.get<App[]>(this.apiUrl(webApiAppRoot + 'list'), {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  getInheritable() {\r\n    return this.http.get<App[]>(this.apiUrl(webApiAppRoot + 'InheritableApps'), {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  create(name: string, inheritAppId?: number) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRoot + 'app'), {}, {\r\n      params: {\r\n        zoneId: this.context.zoneId.toString(),\r\n        name,\r\n        ...(inheritAppId != null && { inheritAppId }),\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(appId: number) {\r\n    return this.http.delete<null>(this.apiUrl(webApiAppRoot + 'app'), {\r\n      params: { zoneId: this.context.zoneId.toString(), appId: appId.toString() },\r\n    });\r\n  }\r\n\r\n  flushCache(appId: number) {\r\n    return this.http.get<null>(this.apiUrl(webApiAppRoot + 'flushcache'), {\r\n      params: { zoneId: this.context.zoneId.toString(), appId: appId.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Feature } from '../models/feature.model';\r\n\r\nconst webApiFeatures = 'admin/feature/';\r\n\r\n@Injectable()\r\nexport class FeaturesConfigService {\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<Feature[]>(this.dnnContext.$2sxc.http.apiUrl(webApiFeatures + 'List'));\r\n  }\r\n\r\n  getManageFeaturesUrl() {\r\n    return this.http.get<string>(this.dnnContext.$2sxc.http.apiUrl(webApiFeatures + 'RemoteManageUrl'));\r\n  }\r\n\r\n  saveFeatures(featuresString: string) {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiFeatures + 'Save'), featuresString);\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nconst webApiLogRoot = 'sys/log/';\r\n\r\n@Injectable()\r\nexport class SxcInsightsService {\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext) { }\r\n\r\n  activatePageLog(duration: number) {\r\n    return this.http.get<string>(this.dnnContext.$2sxc.http.apiUrl(webApiLogRoot + 'EnableDebug'), {\r\n      params: { duration: duration.toString() }\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}