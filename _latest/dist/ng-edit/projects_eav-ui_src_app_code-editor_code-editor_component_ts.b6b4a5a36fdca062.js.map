{"version":3,"file":"projects_eav-ui_src_app_code-editor_code-editor_component_ts.b6b4a5a36fdca062.js","mappings":"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","names":["SafeHtmlPipe","constructor","sanitizer","this","transform","html","bypassSecurityTrustHtml","static","__ngFactoryType__","i0","i1","_angular_core__WEBPACK_IMPORTED_MODULE_0__","EJ8","pure","ctx_r0","snackBarData","fileName","codeFile","edition","CodeAndEditionWarningsComponent_Conditional_2_Conditional_1_Template","CodeAndEditionWarningsComponent_Conditional_2_Conditional_3_Template","otherEditions","_r2","openCodeBehind","CodeAndEditionWarningsComponent","snackRef","dismissWithAction","MAT_SNACK_BAR_DATA","debug_node_JnOYh9kg","VBU","selectors","decls","vars","consts","template","rf","ctx","CodeAndEditionWarningsComponent_Conditional_1_Template","CodeAndEditionWarningsComponent_Conditional_2_Template","CodeAndEditionWarningsComponent_Conditional_4_Template","MatButtonModule","i2","styles","translateLoaderFactoryCode","http","TranslateLoaderWithErrorHandling","window","sxcVersion","CodeEditorHelper","updateSingleViewInfo","currentViewInfos","viewKey","updates","index","findIndex","v","RxHelpers","objectsEqual","updatedViewInfo","slice","processLoadedView","viewInfos","view","snippets","tooltips","showWarningsCallback","templates","updatedViewInfos","explorerSnipps","sets","editorSnipps","list","savedCode","Code","Explorers","Templates","Snippets","ObjectToArrayPipe","obj","Array","isArray","Object","values","_r8","snippet_r7","$implicit","ctx_r2","toggleMore","key","toggledMores","includes","link_r9","url","name","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_7_For_4_Template","help","links","link_r12","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_8_For_1_Conditional_6_For_4_Template","more_r11","_r10","addSnippet","snip","toggleInfo","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_8_For_1_Conditional_6_Template","label","toggledInfos","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_8_For_1_Template","more","_r6","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_4_Template","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_7_Template","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_8_Template","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Template","folder_r5","value","_r4","toggleFolder","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_Template","section_r2","toggledFolders","CodeSnippetsComponent_For_2_Conditional_7_For_1_Template","_r1","toggleSection","CodeSnippetsComponent_For_2_Conditional_7_Template","toggledSections","CodeSnippetsComponent","input","insertSnippet","output","snippet","emit","ArrayHelpers","toggleInArray","inputs","outputs","CodeSnippetsComponent_For_2_Template","MatIconModule","MatRippleModule","KeyValuePipe","TranslateModule","i3","ClickStopPropagationDirective","TippyDirective","calculateTree","tree","parent","paths","Path","split","last","length","pathFromRoot","i","path","existing","find","item","children","depth","isShared","Shared","isFolder","push","DepthPaddingPipe","padding","bypassSecurityTrustStyle","SortItemsPipe","items","sort","item1","item2","CodeTemplatesComponent_For_3_ng_container_0_Template","fileOrFolder_r3","_c0","item_r2","item_r5","ctx_r5","openTemplate","_c1","isToggled","CodeTemplatesComponent_ng_template_5_Conditional_1_Conditional_11_For_1_ng_container_0_Template","item1_r8","CodeTemplatesComponent_ng_template_5_Conditional_1_Conditional_11_For_1_Template","_r7","toggleItem","addFile","CodeTemplatesComponent_ng_template_5_Conditional_1_Conditional_11_Template","_c2","CodeTemplatesComponent_ng_template_5_Conditional_0_Template","CodeTemplatesComponent_ng_template_5_Conditional_1_Template","CodeTemplatesComponent","openView","createTemplate","toggledItemsApp","toggledItemsShared","ngOnChanges","changes","calculateTreeAppShared","filter","f","previousView","previousValue","FileName","IsShared","showFileInTree","shared","folder","file","toggledItems","features","CodeTemplatesComponent_For_3_Template","_forTrack0","CodeTemplatesComponent_ng_template_5_Template","menu_r9","NgTemplateOutlet","NgClass","MatMenuModule","SnippetsService","HttpServiceBase","translate","super","getTooltips","language","getHttpApiUrl","params","getSnippets","pipe","map","res","relevant","#filterAwayNotNeededSnippetsList","standardAndInputSnips","#extractInputTypeSnippets","#initSnippetsWithConfig","standardArray","inputTypeSnippets","keyPrefixes","keyPrefixIndex","Type","indexOf","newList","itm","setHasPrefix","set","substring","inputTypeArray","#catalogInputTypeSnippets","inputTypeList","undefined","subset","templateConfiguration","#makeTree","Content","assign","Fields","PresentationFields","TypeContent","#loadContentType","TypeContentPresentation","HasList","List","TypeList","TypeListPresentation","HasApp","App","Resources","Settings","o","reformatted","#label","content","#help","#linksList","#getHelpKey","result","instant","addition","linksString","llist","l","pair","link","trim","target","type","prefix","#getFields","AppId","then","fields","field","fieldname","StaticName","#valuePlaceholder","Metadata","merged","Notes","toLowerCase","snipDefaults","cloneDeep","#attachSnippets","InputType","std","val","replace","appId","staticName","fetchPromise","webApiFieldsAll","appid","toString","DataTypeCatalog","Empty","fld","md","All","inputType","genericSnippet","fieldType","typeSnips","concat","fieldSnips","g","#localizeGenericSnippet","collapse","objName","fieldName","root_effect_scheduler_DCy1y1b8","jDH","factory","ɵfac","tab_r2","CodeEditorComponent_Conditional_11_For_2_Conditional_2_Template","CodeEditorComponent_Conditional_11_For_2_Conditional_6_Template","CodeEditorComponent_Conditional_11_For_2_Conditional_7_Template","closeEditor","isActive","isModified","isLoading","CodeEditorComponent_Conditional_11_For_2_Template","tabs","$event","tmp_2_0","codeChanged","active","tmp_1_0","monacoOptions","tmp_4_0","tmp_5_0","_r5","save","CodeEditorComponent","BaseComponent","#sourceSvc","#snippetSvc","#titleSvc","#openViews","#viewInfos","#urlItems","#documentTitle","#notLoadedViews","#createViewObservables","view$","get","share","snippets$","switchMap","tooltips$","Extension","forkJoin","of","context","route","snackBar","zone","matDialog","viewContainerRef","activeExplorer","theme","tabSize","fixedOverflowWidgets","transient","SourceService","Title","signal","activeView","computed","openViews","viewInfo","activeViewKey","activeViewInfo","some","init","codeItems","JSON","parse","sessionStorage","getItem","keyItems","keyIsShared","forEach","codeItem","startsWith","effect","notLoaded","subscribe","results","#showCodeAndEditionWarnings","bind","newTitle","getTitle","setTitle","ngOnInit","initialViews","EntityId","#attachListeners","getAllPromise","ngOnDestroy","toggleExplorer","explorer","createFileDialogData","global","purpose","open","CreateFileDialogComponent","autoFocus","data","width","afterClosed","create","templateKey","files","monacoEditorRef","code","selectedIndex","selectedViewInfo","newViewInfo","oldActiveView","oldOpenViews","newOpenViews","newActiveView","codeToSave","next","duration","newViewInfos","error","pathAndName","pathSeparator","lastIndexOf","pathWithSlash","fullName","nameCode","endsWith","Edition","snackBarRef","openFromComponent","onAction","containerInstance","snackBarConfig","runOutsideAngular","subscriptions","add","fromEvent","event","preventDefault","returnValue","isCtrlS","run","i4","viewQuery","MonacoEditorComponent","provide","TranslateLoader","useFactory","deps","HttpClient","TranslateService","CodeEditorComponent_Conditional_11_Template","CodeEditorComponent_Conditional_12_Template","CodeEditorComponent_Conditional_13_Template","tmp_7_0","tmp_9_0","i5","MatProgressSpinnerModule","i6","MonacoEditorComponent_1","i7","ToggleDebugDirective","globalConfigService","onClick","navigator","platform","match","metaKey","ctrlKey","shiftKey","altKey","toggleDebugEnabled","getSelection","removeAllRanges","FsC","hostBindings"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/pipes/safe-html.pipe.ts","./projects/eav-ui/src/app/code-editor/code-and-edition-warnings/code-and-edition-warnings.component.html","./projects/eav-ui/src/app/code-editor/code-and-edition-warnings/code-and-edition-warnings.component.ts","./projects/eav-ui/src/app/code-editor/code-editor-translate-loader-factory.ts","./projects/eav-ui/src/app/code-editor/code-editor.helper.ts","./projects/eav-ui/src/app/code-editor/code-editor.models.ts","./projects/eav-ui/src/app/code-editor/code-snippets/object-to-array.pipe.ts","./projects/eav-ui/src/app/code-editor/code-snippets/code-snippets.component.html","./projects/eav-ui/src/app/code-editor/code-snippets/code-snippets.component.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.helpers.ts","./projects/eav-ui/src/app/code-editor/code-templates/depth-padding.pipe.ts","./projects/eav-ui/src/app/code-editor/code-templates/order-items.pipe.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.component.html","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.component.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.models.ts","./projects/eav-ui/src/app/code-editor/services/snippets.service.ts","./projects/eav-ui/src/app/code-editor/code-editor.component.html","./projects/eav-ui/src/app/code-editor/code-editor.component.ts","./projects/eav-ui/src/app/shared/directives/toggle-debug.directive.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safeHtml',\r\n})\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n","<div class=\"messages\">\r\n  @if (snackBarData.codeFile) {\r\n  <div>\"{{ snackBarData.fileName }}\" also has a code-behind file \"{{ snackBarData.codeFile }}\".</div>\r\n  <br>\r\n  }\r\n\r\n  @if (snackBarData.otherEditions) {\r\n  <div>\r\n    @if (snackBarData.edition) {\r\n    You are editing \"{{ snackBarData.edition }}\" edition.\r\n    }\r\n    There are {{ snackBarData.otherEditions }} other editions of \"{{ snackBarData.fileName }}\".\r\n    @if (!snackBarData.edition) {\r\n    You may be editing an edition which is not the one you see.\r\n    }\r\n    See <a href=\"https://go.2sxc.org/polymorphism\" target=\"_blank\">docs</a>.\r\n  </div>\r\n  }\r\n</div>\r\n\r\n<div class=\"actions\">\r\n  @if (snackBarData.codeFile) {\r\n  <button mat-button color=\"primary\" (click)=\"openCodeBehind()\">\r\n    Open code-behind file\r\n  </button>\r\n  }\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\nimport { CodeAndEditionWarningsSnackBarData } from './code-and-edition-warnings.models';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@Component({\r\n    selector: 'app-code-and-edition-warnings',\r\n    templateUrl: './code-and-edition-warnings.component.html',\r\n    styleUrls: ['./code-and-edition-warnings.component.scss'],\r\n    imports: [MatButtonModule]\r\n})\r\nexport class CodeAndEditionWarningsComponent {\r\n  constructor(\r\n    private snackRef: MatSnackBarRef<CodeAndEditionWarningsComponent>,\r\n    @Inject(MAT_SNACK_BAR_DATA) public snackBarData: CodeAndEditionWarningsSnackBarData,\r\n  ) { }\r\n\r\n  openCodeBehind(): void {\r\n    this.snackBarData.openCodeBehind = true;\r\n    this.snackRef.dismissWithAction();\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { TranslateLoader } from \"@ngx-translate/core\";\r\nimport { EavWindow } from \"../shared/models/eav-window.model\";\r\nimport { TranslateLoaderWithErrorHandling } from \"../shared/translation\";\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport function translateLoaderFactoryCode(http: HttpClient): TranslateLoader {\r\n  return new TranslateLoaderWithErrorHandling(http, './i18n/code-editor.', `.js?${window.sxcVersion}`);\r\n}\r\n","import { RxHelpers } from \"../shared/rxJs/rx.helpers\";\r\nimport { ViewInfo, ViewKey } from \"./code-editor.models\";\r\nimport { FileAsset } from \"./models/file-asset.model\";\r\nimport { Snippet, SnippetsSets } from \"./models/snippet.model\";\r\nimport { SourceView } from \"./models/source-view.model\";\r\nimport { Tooltip } from \"./models/tooltip.model\";\r\n\r\n/**\r\n * Helper class providing utility methods for managing code editor views.\r\n * Contains stateless methods for updating and processing view information.\r\n */\r\nexport class CodeEditorHelper {\r\n    /**\r\n     * Updates a single ViewInfo in a list of ViewInfos.\r\n     * If the ViewInfo with the given viewKey exists, it updates it with the provided data.\r\n     * If it doesn't exist, it adds a new ViewInfo to the list.\r\n     * @returns A new array with the updated ViewInfo\r\n     */\r\n    static updateSingleViewInfo(currentViewInfos: ViewInfo[], viewKey: ViewKey, updates: Partial<ViewInfo> = {}): ViewInfo[] {\r\n        const index = currentViewInfos.findIndex(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n\r\n        // If the viewKey is not found, add a new ViewInfo\r\n        if (index < 0)\r\n            return [...currentViewInfos, { viewKey, ...updates }];\r\n\r\n        // Otherwise update the existing ViewInfo\r\n        const updatedViewInfo = { ...currentViewInfos[index], ...updates };\r\n        return [\r\n            ...currentViewInfos.slice(0, index),\r\n            updatedViewInfo,\r\n            ...currentViewInfos.slice(index + 1)\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Processes a loaded view and updates its ViewInfo with the loaded data.\r\n     * Also triggers warning callbacks for the processed view.\r\n     * @returns A new array with the updated ViewInfo\r\n     */\r\n    static processLoadedView(\r\n        viewInfos: ViewInfo[],\r\n        viewKey: ViewKey,\r\n        view: SourceView,\r\n        snippets: { list: Snippet[]; sets: SnippetsSets; },\r\n        tooltips: Tooltip[],\r\n        showWarningsCallback: (viewKey: ViewKey, view: SourceView, templates: FileAsset[]) => void,\r\n        templates: FileAsset[]\r\n    ): ViewInfo[] {\r\n        // Update ViewInfo with the loaded data\r\n        const updatedViewInfos = this.updateSingleViewInfo(viewInfos, viewKey, {\r\n            view,\r\n            explorerSnipps: snippets.sets,\r\n            editorSnipps: snippets.list,\r\n            tooltips,\r\n            savedCode: view.Code\r\n        });\r\n\r\n        // Show warnings based on the loaded view\r\n        showWarningsCallback(viewKey, view, templates);\r\n\r\n        return updatedViewInfos;\r\n    }\r\n}","import { Snippet, SnippetsSets } from './models/snippet.model';\r\nimport { SourceView } from './models/source-view.model';\r\nimport { Tooltip } from './models/tooltip.model';\r\n\r\nexport interface Tab {\r\n  viewKey: ViewKey;\r\n  label: string;\r\n  isActive: boolean;\r\n  isModified: boolean;\r\n  isLoading: boolean;\r\n}\r\n\r\nexport const Explorers = {\r\n  Templates: 'Templates',\r\n  Snippets: 'Snippets',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n\r\nexport interface ViewInfo {\r\n  viewKey: ViewKey;\r\n  view?: SourceView;\r\n  explorerSnipps?: SnippetsSets;\r\n  editorSnipps?: Snippet[];\r\n  tooltips?: Tooltip[];\r\n  savedCode?: string;\r\n}\r\n\r\nexport interface ViewKey {\r\n  /** ViewKey is templateId or path */\r\n  key: string;\r\n  shared: boolean;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'objectToArray',\r\n})\r\nexport class ObjectToArrayPipe implements PipeTransform {\r\n  transform(obj: Record<string, any> | Record<string, any>[]): Record<string, any>[] {\r\n    if (obj == null) return;\r\n\r\n    if (Array.isArray(obj)) { return obj; }\r\n\r\n    return Object.values(obj);\r\n  }\r\n}\r\n","<div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n  @for (section of snippets() | keyvalue; track section) {\r\n    <div>\r\n      <div\r\n        class=\"collapsible-header section\"\r\n        [tippyTranslate]=\"'SourceEditorSnippets.' + section.key + '.Help'\"\r\n        tippyShowDelay=\"750\"\r\n        (click)=\"toggleSection(section.key)\"\r\n      >\r\n        <mat-icon>\r\n          {{ toggledSections.includes(section.key) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n        </mat-icon>\r\n        <span>{{ 'SourceEditorSnippets.' + section.key + '.Title' | translate }}</span>\r\n      </div>\r\n      @if (toggledSections.includes(section.key)) {\r\n        @for (folder of section.value | keyvalue; track folder) {\r\n          <div>\r\n            <div\r\n              class=\"collapsible-header folder\"\r\n              [tippyTranslate]=\"'SourceEditorSnippets.' + section.key + '.' + folder.key + '.Help'\"\r\n              tippyShowDelay=\"750\"\r\n              (click)=\"toggleFolder(folder.key)\"\r\n            >\r\n              <mat-icon>\r\n                {{ toggledFolders.includes(folder.key) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n              </mat-icon>\r\n              <span>{{ 'SourceEditorSnippets.' + section.key + '.' + folder.key + '.Title' | translate }}</span>\r\n            </div>\r\n            @if (toggledFolders.includes(folder.key)) {\r\n              @for (snippet of folder.value | objectToArray; track snippet) {\r\n                <div class=\"snippet\">\r\n                  <div class=\"snippet-label\">\r\n                    <div matRipple class=\"text\" [tippy]=\"snippet.snip\" tippyShowDelay=\"750\" (click)=\"addSnippet(snippet.snip)\">\r\n                      {{ snippet.label }}\r\n                    </div>\r\n                    @if (snippet.more) {\r\n                      <mat-icon tippy=\"Show More\" tippyShowDelay=\"750\" (click)=\"toggleMore(snippet.key)\">\r\n                        {{ toggledMores.includes(snippet.key) ? 'more_vert' : 'more_horiz' }}\r\n                      </mat-icon>\r\n                    }\r\n                    <mat-icon tippy=\"Show Help\" tippyShowDelay=\"750\" appClickStopPropagation (click)=\"toggleInfo(snippet.key)\"\r\n                      >info</mat-icon\r\n                    >\r\n                  </div>\r\n                  @if (toggledInfos.includes(snippet.key)) {\r\n                    <div class=\"snippet-help\">\r\n                      <div class=\"text\" [innerHTML]=\"snippet.help | safeHtml\"></div>\r\n                      @for (link of snippet.links; track link) {\r\n                        <div>\r\n                          <a [href]=\"link.url\" target=\"_blank\">{{ link.name }}</a>\r\n                        </div>\r\n                      }\r\n                    </div>\r\n                  }\r\n                  @if (toggledMores.includes(snippet.key)) {\r\n                    @for (more of snippet.more | objectToArray; track more) {\r\n                      <div>\r\n                        <div class=\"snippet-label\">\r\n                          <div matRipple class=\"text text-more\" [tippy]=\"more.snip\" tippyShowDelay=\"750\" (click)=\"addSnippet(more.snip)\">\r\n                            {{ more.label }}\r\n                          </div>\r\n                          <mat-icon tippy=\"Show Help\" tippyShowDelay=\"750\" appClickStopPropagation (click)=\"toggleInfo(more.key)\"\r\n                            >info</mat-icon\r\n                          >\r\n                        </div>\r\n                        @if (toggledInfos.includes(more.key)) {\r\n                          <div class=\"snippet-help snippet-help-more\">\r\n                            <div class=\"text\" [innerHTML]=\"more.help | safeHtml\"></div>\r\n                            @for (link of more.links; track link) {\r\n                              <div>\r\n                                <a [href]=\"link.url\" target=\"_blank\">{{ link.name }}</a>\r\n                              </div>\r\n                            }\r\n                          </div>\r\n                        }\r\n                      </div>\r\n                    }\r\n                  }\r\n                </div>\r\n              }\r\n            }\r\n          </div>\r\n        }\r\n      }\r\n    </div>\r\n  }\r\n</div>\r\n","import { KeyValuePipe } from '@angular/common';\r\nimport { Component, input, output } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\nimport { SnippetsSets } from '../models/snippet.model';\r\nimport { ObjectToArrayPipe } from './object-to-array.pipe';\r\n\r\n@Component({\r\n    selector: 'app-code-snippets',\r\n    templateUrl: './code-snippets.component.html',\r\n    styleUrls: ['./code-snippets.component.scss'],\r\n    imports: [\r\n        MatIconModule,\r\n        MatRippleModule,\r\n        KeyValuePipe,\r\n        TranslateModule,\r\n        ObjectToArrayPipe,\r\n        ClickStopPropagationDirective,\r\n        TippyDirective,\r\n        SafeHtmlPipe,\r\n    ]\r\n})\r\nexport class CodeSnippetsComponent {\r\n  snippets = input<SnippetsSets>();\r\n  insertSnippet = output<string>();\r\n  toggledSections: string[] = [];\r\n  toggledFolders: string[] = [];\r\n  toggledInfos: string[] = [];\r\n  toggledMores: string[] = [];\r\n\r\n  constructor() { }\r\n\r\n  addSnippet(snippet: string): void {\r\n    this.insertSnippet.emit(snippet);\r\n  }\r\n\r\n  toggleSection(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledSections);\r\n  }\r\n\r\n  toggleFolder(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledFolders);\r\n  }\r\n\r\n  toggleInfo(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledInfos);\r\n  }\r\n\r\n  toggleMore(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledMores);\r\n  }\r\n}\r\n","import { FileAsset } from '../models/file-asset.model';\r\nimport { TreeItem } from '../models/tree-item.model';\r\nimport { appSharedRoot } from './code-templates.models';\r\n\r\nexport function calculateTreeAppShared(templates: FileAsset[]): TreeItem[] {\r\n  const tree: TreeItem[] = [\r\n    {\r\n      depth: -1,\r\n      name: 'App Files',\r\n      pathFromRoot: appSharedRoot,\r\n      isShared: false,\r\n      isFolder: true,\r\n      children: calculateTree(templates.filter(f => !f.Shared)),\r\n    },\r\n    {\r\n      depth: -1,\r\n      name: 'Shared App Files',\r\n      pathFromRoot: appSharedRoot,\r\n      isShared: true,\r\n      isFolder: true,\r\n      children: calculateTree(templates.filter(f => f.Shared)),\r\n    },\r\n  ];\r\n  return tree;\r\n}\r\n\r\nfunction calculateTree(templates: FileAsset[]): TreeItem[] {\r\n  if (!templates) { return []; }\r\n\r\n  const tree: TreeItem[] = [];\r\n  for (const template of templates) {\r\n    let parent: TreeItem[] = tree;\r\n    const paths = template.Path.split('/');\r\n    const last = paths[paths.length - 1];\r\n    let pathFromRoot = '';\r\n    for (let i = 0; i < paths.length; i++) {\r\n      const path = paths[i];\r\n      pathFromRoot += i ? `/${path}` : path;\r\n      const existing = parent.find(item => item.name === path);\r\n      if (existing) {\r\n        parent = existing.children;\r\n      } else {\r\n        const item: TreeItem = {\r\n          depth: i,\r\n          name: path,\r\n          pathFromRoot,\r\n          isShared: template.Shared,\r\n          isFolder: path !== last,\r\n          ...(path !== last && { children: [] }),\r\n        };\r\n        parent.push(item);\r\n        parent = item.children;\r\n      }\r\n    }\r\n  }\r\n\r\n  return tree;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'depthPadding',\r\n})\r\nexport class DepthPaddingPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(depth: number, isFolder: boolean): SafeStyle {\r\n    let padding: number;\r\n    if (isFolder) {\r\n      padding = depth * 8;\r\n    } else {\r\n      padding = (depth === 0) ? 8 : (depth * 8 + 16);\r\n    }\r\n    return this.sanitizer.bypassSecurityTrustStyle(`padding-left: ${padding}px;`);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TreeItem } from '../models/tree-item.model';\r\n\r\n/** Sorts folders before files */\r\n@Pipe({\r\n  name: 'sortItems',\r\n})\r\nexport class SortItemsPipe implements PipeTransform {\r\n\r\n  transform(items: TreeItem[]) {\r\n    if (items == null) { return items; }\r\n\r\n    items.sort((item1, item2) => {\r\n      if (item1.isFolder < item2.isFolder) {\r\n        return 1;\r\n      } else if (item1.isFolder > item2.isFolder) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    return items;\r\n  }\r\n}\r\n","<div class=\"editor-active-explorer fancy-scrollbar-dark explorer-wrapper\">\r\n\r\n  <div>\r\n    @for (item of (tree | sortItems); track item.name) {\r\n    <ng-container *ngTemplateOutlet=\"fileOrFolder; context: {item: item}\"></ng-container>\r\n    }\r\n\r\n    <ng-template #fileOrFolder let-item=\"item\">\r\n\r\n      @if (!item.isFolder) {\r\n      <div class=\"file\" [style]=\"item.depth | depthPadding: item.isFolder\"\r\n        [ngClass]=\"{'active': isToggled(item.pathFromRoot, item.isShared) }\" [tippy]=\"item.name\" tippyShowDelay=\"750\"\r\n        (click)=\"openTemplate(item.pathFromRoot, item.isShared)\">\r\n        {{ item.name }}\r\n      </div>\r\n      }\r\n\r\n      @if (item.isFolder) {\r\n      <div>\r\n        <div class=\"folder-name-wrapper\" [ngClass]=\"{'app-shared-root': item.depth < 0}\"\r\n          [style]=\"item.depth + 1 | depthPadding: item.isFolder\" (click)=\"toggleItem(item.pathFromRoot, item.isShared)\">\r\n          <div class=\"folder-name\" [tippy]=\"item.name\" tippyShowDelay=\"750\">\r\n            <mat-icon> {{ isToggled(item.pathFromRoot, item.isShared) ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\r\n              }}\r\n            </mat-icon>\r\n            <span>{{ item.name }}</span>\r\n          </div>\r\n          <div class=\"add-item\" tippy=\"Create file in this folder\" tippyShowDelay=\"750\" appClickStopPropagation\r\n            (click)=\"addFile(item.pathFromRoot, item.isShared)\">\r\n            <mat-icon>add</mat-icon>\r\n          </div>\r\n        </div>\r\n        @if (isToggled(item.pathFromRoot, item.isShared)) {\r\n        @for (item1 of (item.children | sortItems); track item1) {\r\n        <ng-container *ngTemplateOutlet=\"fileOrFolder; context: {item: item1}\"></ng-container>\r\n        }\r\n        }\r\n      </div>\r\n      }\r\n\r\n    </ng-template>\r\n  </div>\r\n\r\n  <div class=\"create-button-wrapper\">\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" tippy=\"Create file\" tippyPlacement=\"left\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button mat-menu-item (click)=\"addFile('', false)\">\r\n        <span>App</span>\r\n      </button>\r\n      <button mat-menu-item (click)=\"addFile('', true)\">\r\n        <span>Shared (global)</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, input, OnChanges, output, SimpleChanges } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { ViewKey } from '../code-editor.models';\r\nimport { FileAsset } from '../models/file-asset.model';\r\nimport { SourceView } from '../models/source-view.model';\r\nimport { TreeItem } from '../models/tree-item.model';\r\nimport { calculateTreeAppShared } from './code-templates.helpers';\r\nimport { appSharedRoot, CreateTemplateParams } from './code-templates.models';\r\nimport { DepthPaddingPipe } from './depth-padding.pipe';\r\nimport { SortItemsPipe } from './order-items.pipe';\r\n\r\n@Component({\r\n    selector: 'app-code-templates',\r\n    templateUrl: './code-templates.component.html',\r\n    styleUrls: ['./code-templates.component.scss'],\r\n    imports: [\r\n        NgTemplateOutlet,\r\n        NgClass,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        MatMenuModule,\r\n        DepthPaddingPipe,\r\n        SortItemsPipe,\r\n        ClickStopPropagationDirective,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class CodeTemplatesComponent implements OnChanges {\r\n  view? = input<SourceView>();\r\n  templates = input<FileAsset[]>();\r\n  openView = output<ViewKey>();\r\n  createTemplate = output<CreateTemplateParams>();\r\n  tree: TreeItem[];\r\n  toggledItemsApp: string[] = [];\r\n  toggledItemsShared: string[] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.templates != null) {\r\n      this.tree = calculateTreeAppShared(this.templates());\r\n    }\r\n    if (changes.view != null) {\r\n      const previousView: SourceView = changes.view?.previousValue;\r\n      if (previousView) {\r\n        this.toggleItem(previousView.FileName, previousView.IsShared);\r\n      }\r\n      if (this.view()) {\r\n        this.showFileInTree(this.view().FileName, this.view().IsShared);\r\n      }\r\n    }\r\n  }\r\n\r\n  isToggled(path: string, isShared: boolean): boolean {\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    return toggledItems.includes(path);\r\n  }\r\n\r\n  openTemplate(path: string, isShared: boolean): void {\r\n    const viewKey: ViewKey = { key: path, shared: isShared };\r\n    this.openView.emit(viewKey);\r\n  }\r\n\r\n  toggleItem(path: string, isShared: boolean): void {\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    ArrayHelpers.toggleInArray(path, toggledItems);\r\n  }\r\n\r\n  addFile(folder?: string, isShared?: boolean): void {\r\n    const params: CreateTemplateParams = { folder, isShared };\r\n    this.createTemplate.emit(params);\r\n  }\r\n\r\n  private showFileInTree(file: string, isShared: boolean): void {\r\n    if (file == null) return;\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    if (toggledItems.includes(file)) return;\r\n\r\n    const paths = [appSharedRoot, ...file.split('/')];\r\n    let pathFromRoot = '';\r\n    for (const path of paths) {\r\n      pathFromRoot = !pathFromRoot ? path : `${pathFromRoot}/${path}`;\r\n      if (toggledItems.includes(pathFromRoot)) continue;\r\n      this.toggleItem(pathFromRoot, isShared);\r\n    }\r\n  }\r\n}\r\n","export const appSharedRoot = '' as const;\r\n\r\nexport interface CreateTemplateParams {\r\n  folder?: string;\r\n  isShared?: boolean;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { map, Observable } from 'rxjs';\r\nimport { Of } from '../../../../../core';\r\nimport { webApiFieldsAll } from '../../shared/fields/content-types-fields.service';\r\nimport { DataTypeCatalog } from '../../shared/fields/data-type-catalog';\r\nimport { Field } from '../../shared/fields/field.model';\r\nimport { InputTypeCatalog } from '../../shared/fields/input-type-catalog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { MoreSnippet, SetSnippet, SetSnippetLink, Snippet, SnippetsSets, SnippetsSubSubSets } from '../models/snippet.model';\r\nimport { SourceView } from '../models/source-view.model';\r\nimport { Tooltip } from '../models/tooltip.model';\r\n\r\nexport const inlineHelp = 'admin/Code/InlineHelp';\r\n\r\n@Injectable()\r\nexport class SnippetsService extends HttpServiceBase {\r\n\r\n  constructor(private translate: TranslateService) {\r\n    super();\r\n  }\r\n\r\n  // TODO: @2dg, ask 2dm \r\n  getTooltips(language: string): Observable<Tooltip[]> {\r\n    return this.getHttpApiUrl<Tooltip[]>(inlineHelp, {\r\n      params: {\r\n        language,\r\n      },\r\n    });\r\n  }\r\n\r\n  getSnippets(view: SourceView): Observable<{ list: Snippet[]; sets: SnippetsSets; }> {\r\n    return this.getHttpApiUrl<{ snippets: Snippet[] }>('../ng-assets/snippets.json.js').pipe(\r\n      map(res => {\r\n        const relevant = this.#filterAwayNotNeededSnippetsList(res.snippets, view);\r\n        const standardAndInputSnips = this.#extractInputTypeSnippets(relevant);\r\n        const sets = this.#initSnippetsWithConfig(standardAndInputSnips.standardArray, view, standardAndInputSnips.inputTypeSnippets);\r\n        const sorted: { list: Snippet[]; sets: SnippetsSets; } = {\r\n          list: standardAndInputSnips.standardArray,\r\n          sets\r\n        };\r\n        return sorted;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** Scan the list for sets starting with @ or [ and filter if not needed right now */\r\n  #filterAwayNotNeededSnippetsList(list: Snippet[], view: SourceView): Snippet[] {\r\n    const keyPrefixes = ['@', '['];\r\n    const keyPrefixIndex = (v: SourceView) => (v.Type.indexOf('Razor') > -1) ? 0 : 1;\r\n\r\n    const newList: Snippet[] = [];\r\n    for (const itm of list) {\r\n      const setHasPrefix = keyPrefixes.indexOf(itm.set[0]);\r\n      if (setHasPrefix === -1 || (setHasPrefix === keyPrefixIndex(view))) {\r\n        // if necessary, remove first char\r\n        if (setHasPrefix === keyPrefixIndex(view)) {\r\n          itm.set = itm.set.substring(1);\r\n        }\r\n        newList.push(itm);\r\n      }\r\n    }\r\n    return newList;\r\n  }\r\n\r\n  #extractInputTypeSnippets(list: Snippet[]): { standardArray: Snippet[]; inputTypeSnippets: Record<string, Snippet[]>; } {\r\n    const standardArray: Snippet[] = [];\r\n    const inputTypeArray: Snippet[] = [];\r\n\r\n    for (const itm of list) {\r\n      const systemSnippet = itm.set[0] === '\\\\';\r\n      if (!systemSnippet) {\r\n        standardArray.push(itm);\r\n      } else {\r\n        itm.set = itm.set.substring(1);\r\n        inputTypeArray.push(itm);\r\n      }\r\n    }\r\n    const inputTypeSnippets = this.#catalogInputTypeSnippets(inputTypeArray);\r\n    const extracted: { standardArray: Snippet[]; inputTypeSnippets: Record<string, Snippet[]>; } = {\r\n      standardArray,\r\n      inputTypeSnippets,\r\n    };\r\n    return extracted;\r\n  }\r\n\r\n  #catalogInputTypeSnippets(list: Snippet[]): Record<string, Snippet[]> {\r\n    const inputTypeList: Record<string, Snippet[]> = {};\r\n    for (const itm of list) {\r\n      if (inputTypeList[itm.subset] === undefined) {\r\n        inputTypeList[itm.subset] = [];\r\n      }\r\n      inputTypeList[itm.subset].push(itm);\r\n    }\r\n    return inputTypeList;\r\n  }\r\n\r\n  #initSnippetsWithConfig(\r\n    standardArray: Snippet[],\r\n    templateConfiguration: SourceView,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): SnippetsSets {\r\n    const sets = this.#makeTree(standardArray);\r\n\r\n    // retrieve all relevant content-types and infos\r\n    sets.Content = Object.assign({}, sets.Content, { Fields: {}, PresentationFields: {} });\r\n    if (templateConfiguration.TypeContent) {\r\n      this.#loadContentType(\r\n        sets.Content.Fields as SnippetsSubSubSets,\r\n        templateConfiguration.TypeContent,\r\n        'Content',\r\n        templateConfiguration,\r\n        inputTypeSnippets,\r\n      );\r\n    }\r\n    if (templateConfiguration.TypeContentPresentation) {\r\n      this.#loadContentType(\r\n        sets.Content.PresentationFields as SnippetsSubSubSets,\r\n        templateConfiguration.TypeContentPresentation,\r\n        'Content.Presentation',\r\n        templateConfiguration,\r\n        inputTypeSnippets,\r\n      );\r\n    }\r\n\r\n    if (templateConfiguration.HasList) {\r\n      sets.List = Object.assign({}, sets.List, { Fields: {}, PresentationFields: {} });\r\n      if (templateConfiguration.TypeList) {\r\n        this.#loadContentType(\r\n          sets.List.Fields as SnippetsSubSubSets,\r\n          templateConfiguration.TypeList,\r\n          'Header',\r\n          templateConfiguration,\r\n          inputTypeSnippets,\r\n        );\r\n      }\r\n      if (templateConfiguration.TypeListPresentation) {\r\n        this.#loadContentType(\r\n          sets.List.PresentationFields as SnippetsSubSubSets,\r\n          templateConfiguration.TypeListPresentation,\r\n          'Header.Presentation',\r\n          templateConfiguration,\r\n          inputTypeSnippets,\r\n        );\r\n      }\r\n    } else {\r\n      delete sets.List;\r\n    }\r\n\r\n    // maybe App-infos\r\n    if (templateConfiguration.HasApp) {\r\n      sets.App.Resources = {};\r\n      sets.App.Settings = {};\r\n      this.#loadContentType(sets.App.Resources, 'App-Resources', 'App.Resources', templateConfiguration, inputTypeSnippets);\r\n      this.#loadContentType(sets.App.Settings, 'App-Settings', 'App.Settings', templateConfiguration, inputTypeSnippets);\r\n    }\r\n\r\n    return sets;\r\n  }\r\n\r\n  /** Convert the list into a tree with set/subset/item */\r\n  #makeTree(list: Snippet[]): SnippetsSets {\r\n    const tree: SnippetsSets = {};\r\n    for (const o of list) {\r\n      if (tree[o.set] === undefined) {\r\n        tree[o.set] = {};\r\n      }\r\n      if (tree[o.set][o.subset] === undefined) {\r\n        tree[o.set][o.subset] = [];\r\n      }\r\n      const reformatted: SetSnippet = {\r\n        key: o.name,\r\n        label: this.#label(o.set, o.subset, o.name),\r\n        snip: o.content,\r\n        help: o.help || this.#help(o.set, o.subset, o.name),\r\n        links: this.#linksList(o.links)\r\n      };\r\n\r\n      (tree[o.set][o.subset] as SetSnippet[]).push(reformatted);\r\n    }\r\n    return tree;\r\n  }\r\n\r\n  #label(set: string, subset: string, snip: string): string {\r\n    const key = this.#getHelpKey(set, subset, snip, '.Key');\r\n\r\n    let result: string = this.translate.instant(key);\r\n    if (result === key) {\r\n      result = snip;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  #getHelpKey(set: string, subset: string, snip: string, addition: string): string {\r\n    return 'SourceEditorSnippets' + '.' + set + '.' + subset + '.' + snip + addition;\r\n  }\r\n\r\n  #help(set: string, subset: string, snip: string): string {\r\n    const key = this.#getHelpKey(set, subset, snip, '.Help');\r\n\r\n    let result: string = this.translate.instant(key);\r\n    if (result === key) {\r\n      result = '';\r\n    }\r\n    return result;\r\n  }\r\n\r\n  #linksList(linksString: string): SetSnippetLink[] {\r\n    if (!linksString) { return null; }\r\n\r\n    const links: SetSnippetLink[] = [];\r\n    const llist = linksString.split('\\n');\r\n    for (const l of llist) {\r\n      const pair = l.split(':');\r\n      if (pair.length === 3) {\r\n        const link: SetSnippetLink = {\r\n          name: pair[0].trim(),\r\n          url: pair[1].trim() + ':' + pair[2].trim(),\r\n        };\r\n        links.push(link);\r\n      }\r\n    }\r\n    if (links.length === 0) { return null; }\r\n    return links;\r\n  }\r\n\r\n  /** spm TODO: this happens after snippets are calculated for the first time. Needs to be fixed */\r\n  #loadContentType(\r\n    target: SnippetsSubSubSets,\r\n    type: string,\r\n    prefix: string,\r\n    templateConfiguration: SourceView,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): void {\r\n    this.#getFields(templateConfiguration.AppId, type).then(fields => {\r\n      // first add common items if the content-type actually exists\r\n      for (const field of fields) {\r\n        const fieldname = field.StaticName;\r\n        target[fieldname] = {\r\n          key: fieldname,\r\n          label: fieldname,\r\n          snip: this.#valuePlaceholder(prefix, fieldname, templateConfiguration),\r\n          help: field.Metadata.merged.Notes || ' (' + field.Type.toLowerCase() + ') '\r\n        };\r\n        // try to add generic snippets specific to this input-type\r\n        const snipDefaults = cloneDeep(target[fieldname]); // must be a copy, because target[fieldname] will grow\r\n        this.#attachSnippets(target, prefix, fieldname, field.InputType, snipDefaults, inputTypeSnippets);\r\n      }\r\n\r\n      if (fields.length) {\r\n        const std = ['EntityId', 'EntityTitle', 'EntityGuid', 'EntityType', 'IsPublished', 'Modified'];\r\n        // tslint:disable-next-line:prefer-for-of\r\n        for (let i = 0; i < std.length; i++) {\r\n          target[std[i]] = {\r\n            key: std[i],\r\n            label: std[i],\r\n            snip: this.#valuePlaceholder(prefix, std[i], templateConfiguration),\r\n            help: this.translate.instant('SourceEditorSnippets.StandardFields.' + std[i] + '.Help'),\r\n          };\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  #valuePlaceholder(obj: string, val: string, templateConfiguration: SourceView): string {\r\n    return (templateConfiguration.Type.indexOf('Razor') > -1)\r\n      ? '@' + obj + '.' + val\r\n      : '[' + obj.replace('.', ':') + ':' + val + ']';\r\n  }\r\n\r\n\r\n#getFields(appId: number, staticName: string): Promise<Field[]> {\r\n  return this.fetchPromise<Field[]>(webApiFieldsAll, {\r\n    params: { appid: appId.toString(), staticName },\r\n  }).then(fields => {\r\n    // Filtere leere Datentypen raus\r\n    fields = fields.filter(field => field.Type !== DataTypeCatalog.Empty);\r\n    // Merged-Metadata erzeugen wie vorher\r\n    for (const fld of fields) {\r\n      if (!fld.Metadata) continue;\r\n      const md = fld.Metadata;\r\n      const allMd = md.All;\r\n      const typeMd = md[fld.Type];\r\n      const inputMd = md[fld.InputType];\r\n      md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n    }\r\n    return fields;\r\n  });\r\n}\r\n\r\n  #attachSnippets(\r\n    target: SnippetsSubSubSets,\r\n    prefix: string,\r\n    fieldname: string,\r\n    inputType: Of<typeof InputTypeCatalog>,\r\n    snipDefaults: SetSnippet,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): void {\r\n    let genericSnippet = inputTypeSnippets[inputType];\r\n    if (inputType.indexOf('-')) { // if it's a sub-type, let's also get the master-type\r\n      const fieldType = inputType.substring(0, inputType.indexOf('-'));\r\n      if (fieldType) {\r\n        const typeSnips = inputTypeSnippets[fieldType];\r\n        if (typeSnips) {\r\n          genericSnippet = genericSnippet ? genericSnippet.concat(typeSnips) : typeSnips;\r\n        }\r\n      }\r\n    }\r\n    if (!genericSnippet) return;\r\n\r\n    if (target[fieldname].more === undefined) {\r\n      target[fieldname].more = {};\r\n    }\r\n    const fieldSnips = target[fieldname].more;\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let g = 0; g < genericSnippet.length; g++) {\r\n      try {\r\n        fieldSnips[fieldname + '-' + genericSnippet[g].name] = Object.assign({}, snipDefaults, {\r\n          key: fieldname + ' - ' + genericSnippet[g].name,\r\n          label: genericSnippet[g].name,\r\n          snip: this.#localizeGenericSnippet(genericSnippet[g].content, prefix, fieldname),\r\n          collapse: true,\r\n        } as MoreSnippet);\r\n      } finally { }\r\n    }\r\n  }\r\n\r\n  #localizeGenericSnippet(snip: string, objName: string, fieldName: string): string {\r\n    snip = snip\r\n      .replace(/(\\$\\{[0-9]+\\:)var(\\})/gi, '$1' + objName + '$2')\r\n      .replace(/(\\$\\{[0-9]+\\:)prop(\\})/gi, '$1' + fieldName + '$2');\r\n    return snip;\r\n  }\r\n}\r\n","<div class=\"editor-root\" appToggleDebug [ngClass]=\"{ 'sxc-dark': monacoOptions.theme === '2sxc-dark' }\">\r\n  <div class=\"editor-side-toolbar\">\r\n    <div class=\"button\" [ngClass]=\"{ 'active': activeExplorer === Explorers.Templates }\" tippy=\"Templates\"\r\n      (click)=\"toggleExplorer(Explorers.Templates)\">\r\n      <mat-icon>file_copy</mat-icon>\r\n    </div>\r\n    <div class=\" button\" [ngClass]=\"{ 'active': activeExplorer === Explorers.Snippets }\" tippy=\"Snippets\"\r\n      (click)=\"toggleExplorer(Explorers.Snippets)\">\r\n      <mat-icon>code</mat-icon>\r\n    </div>\r\n  </div>\r\n  <app-code-templates [hidden]=\"activeExplorer !== Explorers.Templates\" [view]=\"active()?.view\"\r\n    [templates]=\"templates()\" (openView)=\"openView($event)\" (createTemplate)=\"createTemplate($event)\">\r\n  </app-code-templates>\r\n  <app-code-snippets [hidden]=\"activeExplorer !== Explorers.Snippets\" [snippets]=\"active()?.explorerSnipps\"\r\n    (insertSnippet)=\"insertSnippet($event)\">\r\n  </app-code-snippets>\r\n  <div class=\"editor-group\">\r\n    @if (tabs().length > 0) {\r\n    <div class=\"tabs-container fancy-scrollbar-dark\">\r\n      @for (tab of tabs(); track tab.viewKey) {\r\n      <div class=\"tab\" [ngClass]=\"{\r\n              'active': tab.isActive,\r\n              'modified': tab.isModified,\r\n              'loading': tab.isLoading\r\n              }\" (click)=\"openView(tab.viewKey)\">\r\n        <div class=\"tab-label-container\" [tippy]=\"tab.label\" tippyShowDelay=\"750\">\r\n          @if (tab.viewKey.shared) {\r\n          <mat-icon class=\"icon-shared\">share</mat-icon>\r\n          }\r\n          <span class=\"tab-label\">{{ tab.label }}</span>\r\n        </div>\r\n        <div class=\"tab-actions-container\">\r\n          @if (tab.isModified) {\r\n          <mat-icon class=\"tab-action icon-modified\">circle</mat-icon>\r\n          }\r\n          @if (tab.isLoading) {\r\n          <mat-spinner class=\"spinner\" mode=\"indeterminate\" diameter=\"14\" color=\"white\">\r\n          </mat-spinner>\r\n          }\r\n          <mat-icon class=\"tab-action icon-close\" tippy=\"Close\" appClickStopPropagation\r\n            (click)=\"closeEditor(tab.viewKey)\">close</mat-icon>\r\n        </div>\r\n      </div>\r\n      }\r\n    </div>\r\n    }\r\n    @if (active()?.view) {\r\n    <app-monaco-editor [filename]=\"active()?.view.FileName\" [value]=\"active()?.view.Code\"\r\n      (valueChanged)=\"codeChanged($event, active()?.viewKey)\" [options]=\"monacoOptions\"\r\n      [snippets]=\"active()?.editorSnipps\" [tooltips]=\"active()?.tooltips\" [autoFocus]=\"true\">\r\n    </app-monaco-editor>\r\n    }\r\n  </div>\r\n  @if (activeView()) {\r\n  <button mat-fab mat-elevation-z24 tippy=\"Click to save or CTRL + S\" (click)=\"save()\">\r\n    <mat-icon>done</mat-icon>\r\n  </button>\r\n  }\r\n</div>\r\n","import { NgClass } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, computed, effect, NgZone, OnDestroy, OnInit, signal, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport type * as Monaco from 'monaco-editor';\r\nimport { forkJoin, fromEvent, of, share, switchMap } from 'rxjs';\r\nimport { Of, transient } from '../../../../core';\r\nimport { CreateFileDialogComponent, CreateFileDialogData, CreateFileDialogResult } from '../create-file-dialog';\r\nimport { isCtrlS } from '../edit/dialog/main/keyboard-shortcuts';\r\nimport { MonacoEditorComponent } from '../monaco-editor';\r\nimport { MonacoEditorComponent as MonacoEditorComponent_1 } from '../monaco-editor/monaco-editor.component';\r\nimport { BaseComponent } from '../shared/components/base.component';\r\nimport { keyIsShared, keyItems } from '../shared/constants/session.constants';\r\nimport { ClickStopPropagationDirective } from '../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../shared/directives/tippy.directive';\r\nimport { ToggleDebugDirective } from '../shared/directives/toggle-debug.directive';\r\nimport { ViewOrFileIdentifier } from '../shared/models/edit-form.model';\r\nimport { RxHelpers } from '../shared/rxJs/rx.helpers';\r\nimport { Context } from '../shared/services/context';\r\nimport { CodeAndEditionWarningsComponent } from './code-and-edition-warnings/code-and-edition-warnings.component';\r\nimport { CodeAndEditionWarningsSnackBarData } from './code-and-edition-warnings/code-and-edition-warnings.models';\r\nimport { translateLoaderFactoryCode } from './code-editor-translate-loader-factory';\r\nimport { CodeEditorHelper } from './code-editor.helper';\r\nimport { Explorers, Tab, ViewInfo, ViewKey } from './code-editor.models';\r\nimport { CodeSnippetsComponent } from './code-snippets/code-snippets.component';\r\nimport { CodeTemplatesComponent } from './code-templates/code-templates.component';\r\nimport { CreateTemplateParams } from './code-templates/code-templates.models';\r\nimport { FileAsset } from './models/file-asset.model';\r\nimport { SourceView } from './models/source-view.model';\r\nimport { SnippetsService } from './services/snippets.service';\r\nimport { SourceService } from './services/source.service';\r\n\r\n@Component({\r\n  selector: 'app-code-editor',\r\n  templateUrl: './code-editor.component.html',\r\n  styleUrls: ['./code-editor.component.scss'],\r\n  imports: [\r\n    NgClass,\r\n    MatIconModule,\r\n    CodeTemplatesComponent,\r\n    CodeSnippetsComponent,\r\n    MatProgressSpinnerModule,\r\n    MonacoEditorComponent_1,\r\n    MatButtonModule,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n    ToggleDebugDirective,\r\n    TranslateModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: TranslateLoader,\r\n      useFactory: translateLoaderFactoryCode,\r\n      deps: [HttpClient],\r\n    },\r\n    TranslateService,\r\n  ]\r\n})\r\nexport class CodeEditorComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @ViewChild(MonacoEditorComponent) private monacoEditorRef: MonacoEditorComponent;\r\n\r\n  Explorers = Explorers;\r\n  activeExplorer: Of<typeof Explorers> = Explorers.Templates;\r\n  monacoOptions: Monaco.editor.IStandaloneEditorConstructionOptions = {\r\n    theme: '2sxc-dark',\r\n    tabSize: 2,\r\n    fixedOverflowWidgets: true,\r\n  };\r\n\r\n  #sourceSvc = transient(SourceService);\r\n  #snippetSvc = transient(SnippetsService);\r\n  #titleSvc = transient(Title);\r\n\r\n  templates = signal<FileAsset[]>([]);\r\n  activeView = signal<ViewKey>(undefined);\r\n  #openViews = signal<ViewKey[]>([]);\r\n  #viewInfos = signal<ViewInfo[]>([]);\r\n\r\n  // Computed signal that finds the active view information from the list of viewInfos.\r\n  // It checks if the activeView signal matches any viewKey in the viewInfos list using objectsEqual.\r\n  active = computed(() => {\r\n    const activeView = this.activeView();\r\n    return this.#viewInfos().find(v => RxHelpers.objectsEqual(v.viewKey, activeView));\r\n  })\r\n\r\n  // Each tab object includes the viewKey, label (file name or key), active state,\r\n  // modified state (if the view's code differs from the saved code), and loading state.\r\n  // It checks for matching view information in viewInfos using objectsEqual.\r\n  tabs = computed(() => {\r\n    const openViews = this.#openViews();\r\n    const activeView = this.activeView();\r\n    const viewInfos = this.#viewInfos();\r\n    return openViews.map(viewKey => {\r\n      const viewInfo = viewInfos.find(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n      return {\r\n        viewKey,\r\n        label: viewInfo?.view?.FileName ?? viewKey.key,\r\n        isActive: RxHelpers.objectsEqual(viewKey, activeView),\r\n        isModified: viewInfo?.view?.Code !== viewInfo?.savedCode,\r\n        isLoading: viewInfo?.view == null,\r\n      } satisfies Tab;\r\n    })\r\n  });\r\n\r\n  #urlItems: ViewOrFileIdentifier[];\r\n\r\n  /**\r\n * Computed property for the current document title\r\n */\r\n  #documentTitle = computed(() => {\r\n    const activeViewKey = this.activeView();\r\n    const viewInfos = this.#viewInfos() || [];\r\n    const activeViewInfo = viewInfos.find(v => RxHelpers.objectsEqual(v.viewKey, activeViewKey));\r\n\r\n    return activeViewInfo?.view?.FileName\r\n      ? `${activeViewInfo.view.FileName} - Code Editor`\r\n      : 'Code Editor';\r\n  });\r\n\r\n  /**\r\n   * Computed property that identifies views that need to be loaded.\r\n   * Returns an array of ViewKey objects that exist in openViews but are not yet loaded in viewInfos.\r\n   */\r\n  #notLoadedViews = computed(() => {\r\n    const openViews = this.#openViews();\r\n    const viewInfos = this.#viewInfos();\r\n\r\n    // Filter open views to find those not yet loaded in viewInfos\r\n    return openViews.filter(viewKey =>\r\n      !viewInfos.some(v => RxHelpers.objectsEqual(v.viewKey, viewKey))\r\n    );\r\n  });\r\n\r\n  /**\r\n   * Creates a set of observables for loading a view and its related data.\r\n   * @returns A forkJoin observable that emits the viewKey, view, snippets, and tooltips when all are loaded\r\n   */\r\n  #createViewObservables(viewKey: ViewKey) {\r\n    // Get the view content and share the observable\r\n    const view$ = this.#sourceSvc.get(viewKey.key, viewKey.shared, this.#urlItems).pipe(share());\r\n    // Create dependent observables for snippets and tooltips\r\n    const snippets$ = view$.pipe(switchMap(view => this.#snippetSvc.getSnippets(view)));\r\n    const tooltips$ = view$.pipe(switchMap(view =>\r\n      this.#snippetSvc.getTooltips(view.Extension.substring(1))\r\n    ));\r\n\r\n    // Combine all observables to emit results together\r\n    return forkJoin([of(viewKey), view$, snippets$, tooltips$]);\r\n  }\r\n\r\n  constructor(\r\n    private context: Context,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n    private zone: NgZone,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) {\r\n    super();\r\n    this.context.init(this.route);\r\n    const codeItems: ViewOrFileIdentifier[] = JSON.parse(sessionStorage.getItem(keyItems));\r\n    const isShared = (sessionStorage.getItem(keyIsShared) ?? 'false') === 'true';\r\n    codeItems.forEach(codeItem => {\r\n      // remove leading \"/\" from path\r\n      if (codeItem.Path.startsWith('/')) {\r\n        codeItem.Path = codeItem.Path.substring(1);\r\n      }\r\n      codeItem.IsShared ??= isShared;\r\n    });\r\n    this.#urlItems = codeItems;\r\n\r\n    /**\r\n * Main effect responsible for loading views that are open but not yet loaded.\r\n */\r\n    effect(() => {\r\n      const templates = this.templates();\r\n      if (templates.length === 0) return; // Exit early if no templates are available\r\n      const notLoaded = this.#notLoadedViews();\r\n      if (notLoaded.length === 0) return; // Exit early if all views are already loaded\r\n\r\n      // Mark all not-yet-loaded views as \"loading\" in viewInfos\r\n      let viewInfos = this.#viewInfos();\r\n      notLoaded.forEach(viewKey => {\r\n        viewInfos = CodeEditorHelper.updateSingleViewInfo(viewInfos, viewKey);\r\n      });\r\n      this.#viewInfos.set(viewInfos);\r\n\r\n      // Start data requests for all not-yet-loaded views in parallel\r\n      forkJoin(\r\n        notLoaded.map(viewKey => this.#createViewObservables(viewKey))\r\n      ).subscribe(results => {\r\n        let updatedViewInfos = this.#viewInfos();\r\n\r\n        // Process each result and update the viewInfos incrementally\r\n        results.forEach(([viewKey, view, snippets, tooltips]) => {\r\n          updatedViewInfos = CodeEditorHelper.processLoadedView(\r\n            updatedViewInfos, viewKey, view, snippets, tooltips, this.#showCodeAndEditionWarnings.bind(this), templates\r\n          );\r\n        });\r\n\r\n        this.#viewInfos.set(updatedViewInfos); // Update the viewInfos signal with all processed results\r\n      });\r\n\r\n      this.#viewInfos.set(viewInfos);  // Set the initial viewInfos with loading indicators before actual data is loaded\r\n    }); \r\n\r\n\r\n    /**\r\n    * Effect that updates the document title when it changes\r\n    */\r\n    effect(() => {\r\n      const newTitle = this.#documentTitle();\r\n      if (this.#titleSvc.getTitle() !== newTitle) {\r\n        this.#titleSvc.setTitle(newTitle);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const initialViews = this.#urlItems.map(item => {\r\n      const viewKey: ViewKey = { key: item.EntityId?.toString() ?? item.Path, shared: item.IsShared };\r\n      return viewKey;\r\n    });\r\n\r\n    this.activeView.set(initialViews[0]);\r\n    this.#openViews.set(initialViews);\r\n\r\n    this.#attachListeners();\r\n\r\n    // Load templates\r\n    this.#sourceSvc.getAllPromise().then(templates => {\r\n      this.templates.set(templates);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  toggleExplorer(explorer: Of<typeof Explorers>): void {\r\n    this.activeExplorer = (this.activeExplorer !== explorer) ? explorer : null;\r\n  }\r\n\r\n  createTemplate(params: CreateTemplateParams): void {\r\n    // This FileLocationDialogComponent dialog is currently never going to be opened because it has been replaced by mat-menu\r\n    // in the code-templates.component.html template. If you want to use the dialog instead of the menu, you need to remove the\r\n    // mat-menu and replace it with a button that opens the dialog with empty parameters.\r\n    // Dialog has been replaced by menu because from update to Angular 16 CreateFileDialogComponent wasn't opening anymore if\r\n    // FileLocationDialogComponent dialog was used.\r\n    // if (params.isShared == null) {\r\n    //   const fileLocationDialogRef = this.dialog.open(FileLocationDialogComponent, {\r\n    //     autoFocus: false,\r\n    //     viewContainerRef: this.viewContainerRef,\r\n    //     width: '650px',\r\n    //   });\r\n    //   fileLocationDialogRef.afterClosed().subscribe((isShared?: boolean) => {\r\n    //     if (isShared == null) return;\r\n    //     params.isShared = isShared;\r\n    //     this.createTemplate(params);\r\n    //   });\r\n    //   return;\r\n    // }\r\n\r\n    const createFileDialogData: CreateFileDialogData = {\r\n      folder: params.folder,\r\n      global: params.isShared,\r\n      purpose: params.folder === 'api' || params.folder?.startsWith('api/') ? 'Api' : undefined,\r\n    };\r\n    const createFileDialogRef = this.matDialog.open(CreateFileDialogComponent, {\r\n      autoFocus: false,\r\n      data: createFileDialogData,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n\r\n    createFileDialogRef.afterClosed().subscribe((result?: CreateFileDialogResult) => {\r\n      if (!result) return;\r\n\r\n      this.#sourceSvc.create(result.name, params.isShared, result.templateKey).subscribe(() => {\r\n        this.#sourceSvc.getAllPromise().then(files => {\r\n          this.templates.set(files);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  insertSnippet(snippet: string): void {\r\n    this.monacoEditorRef?.insertSnippet(snippet);\r\n  }\r\n\r\n  codeChanged(code: string, viewKey: ViewKey): void {\r\n    let viewInfos = this.#viewInfos();\r\n    const selectedIndex = viewInfos.findIndex(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n    const selectedViewInfo = viewInfos[selectedIndex];\r\n    const newViewInfo: ViewInfo = {\r\n      ...selectedViewInfo,\r\n      view: {\r\n        ...selectedViewInfo.view,\r\n        Code: code,\r\n      },\r\n    };\r\n    viewInfos = [...viewInfos.slice(0, selectedIndex), newViewInfo, ...viewInfos.slice(selectedIndex + 1)];\r\n    this.#viewInfos.set(viewInfos);\r\n  }\r\n\r\n  openView(viewKey: ViewKey): void {\r\n    // fix viewKey because it can be a templateId or a path, and file might already be open\r\n    viewKey = this.#viewInfos().find(\r\n      v => !RxHelpers.objectsEqual(v.viewKey, viewKey) && v.view?.FileName === viewKey.key && v.view?.IsShared === viewKey.shared\r\n    )?.viewKey ?? viewKey;\r\n\r\n    const oldActiveView = this.activeView();\r\n    if (!RxHelpers.objectsEqual(oldActiveView, viewKey)) {\r\n      this.activeView.set(viewKey);\r\n    }\r\n    const oldOpenViews = this.#openViews();\r\n    if (!oldOpenViews.some(v => RxHelpers.objectsEqual(v, viewKey))) {\r\n      const newOpenViews = [...oldOpenViews, viewKey];\r\n      this.#openViews.set(newOpenViews);\r\n    }\r\n  }\r\n\r\n  closeEditor(viewKey: ViewKey): void {\r\n    const oldOpenViews = this.#openViews();\r\n    const newOpenViews = oldOpenViews.filter(key => !RxHelpers.objectsEqual(key, viewKey));\r\n\r\n    const oldActiveView = this.activeView();\r\n    if (RxHelpers.objectsEqual(oldActiveView, viewKey)) {\r\n      const newActiveView = oldOpenViews[oldOpenViews.findIndex(v => RxHelpers.objectsEqual(v, oldActiveView)) - 1] ?? newOpenViews[0];\r\n      this.activeView.set(newActiveView);\r\n    }\r\n    this.#openViews.set(newOpenViews);\r\n  }\r\n\r\n  save(viewKey?: ViewKey): void {\r\n    viewKey ??= this.activeView();\r\n    const viewInfo = this.#viewInfos().find(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n    if (viewInfo?.view == null) return;\r\n\r\n    this.snackBar.open('Saving...');\r\n    const codeToSave = viewInfo.view.Code;\r\n    this.#sourceSvc.save(viewKey.key, viewKey.shared, viewInfo.view, this.#urlItems).subscribe({\r\n      next: res => {\r\n        if (!res) {\r\n          this.snackBar.open('Failed', null, { duration: 2000 });\r\n          return;\r\n        }\r\n\r\n        let newViewInfos = [...this.#viewInfos()];\r\n        const selectedIndex = newViewInfos.findIndex(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n        if (selectedIndex < 0) return;\r\n\r\n        const selectedViewInfo = newViewInfos[selectedIndex];\r\n        const newViewInfo: ViewInfo = {\r\n          ...selectedViewInfo,\r\n          savedCode: codeToSave,\r\n        };\r\n        newViewInfos = [...newViewInfos.slice(0, selectedIndex), newViewInfo, ...newViewInfos.slice(selectedIndex + 1)];\r\n        this.#viewInfos.set(newViewInfos);\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n      },\r\n      error: () => this.snackBar.open('Failed', null, { duration: 2000 }),\r\n    });\r\n  }\r\n\r\n  /** Show info about editions if other files with the same name exist */\r\n  #showCodeAndEditionWarnings(viewKey: ViewKey, view: SourceView, files: FileAsset[]): void {\r\n    const pathAndName = view.FileName;\r\n    const pathSeparator = pathAndName.indexOf('/') > -1 ? pathAndName.lastIndexOf('/') + 1 : 0;\r\n    const pathWithSlash = pathSeparator === 0 ? '' : pathAndName.substring(0, pathSeparator);\r\n    const fullName = pathAndName.substring(pathSeparator);\r\n    const name = fullName.substring(0, fullName.length - view.Extension.length);\r\n    const nameCode = name + '.code' + view.Extension;\r\n    // find out if we also have a code file\r\n    const codeFile = files.find(file => file.Path === pathWithSlash + nameCode && file.Shared === view.IsShared);\r\n    const otherEditions = files.filter(file => file.Path.endsWith(fullName) && file.Shared === view.IsShared).length - 1;\r\n\r\n    if (codeFile || otherEditions) {\r\n      const snackBarData: CodeAndEditionWarningsSnackBarData = {\r\n        fileName: fullName,\r\n        codeFile: codeFile?.Path,\r\n        edition: this.#urlItems\r\n          .find(i => i.EntityId?.toString() === viewKey.key && i.IsShared === view.IsShared && i.Path === view.FileName)?.Edition,\r\n        otherEditions,\r\n        openCodeBehind: false,\r\n      };\r\n      const snackBarRef = this.snackBar.openFromComponent(CodeAndEditionWarningsComponent, {\r\n        data: snackBarData,\r\n        duration: 10000,\r\n      });\r\n\r\n      snackBarRef.onAction().subscribe(() => {\r\n        if ((snackBarRef.containerInstance.snackBarConfig.data as CodeAndEditionWarningsSnackBarData).openCodeBehind) {\r\n          const openViewKey: ViewKey = { key: codeFile?.Path, shared: codeFile?.Shared };\r\n          this.openView(openViewKey);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  #attachListeners(): void {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<BeforeUnloadEvent>(window, 'beforeunload')\r\n          .subscribe(event => {\r\n            const allSaved = !this.#viewInfos().some(v => v.view != null && v.view.Code !== v.savedCode);\r\n            if (allSaved) return;\r\n            event.preventDefault();\r\n            event.returnValue = ''; // fix for Chrome\r\n          })\r\n      );\r\n      this.subscriptions.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown')\r\n          .subscribe(event => {\r\n            if (!isCtrlS(event)) return;\r\n            event.preventDefault();\r\n            this.zone.run(() => this.save());\r\n          })\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { GlobalConfigService } from '../services/global-config.service';\r\n\r\n@Directive({\r\n  selector: '[appToggleDebug]',\r\n})\r\nexport class ToggleDebugDirective {\r\n\r\n  constructor(private globalConfigService: GlobalConfigService) { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    const CTRL_SHIFT_ALT_CLICK = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.shiftKey && event.altKey;\r\n    if (CTRL_SHIFT_ALT_CLICK) {\r\n      this.globalConfigService.toggleDebugEnabled();\r\n      window.getSelection().removeAllRanges();\r\n    }\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}