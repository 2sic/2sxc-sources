{"version":3,"sources":["./projects/ng-dialogs/src/app/code-editor/services/source.service.ts","./node_modules/rxjs/_esm2015/internal/operators/throttle.js","./node_modules/rxjs/_esm2015/internal/operators/throttleTime.js","./projects/ng-dialogs/src/app/shared/directives/mat-input-autofocus.directive.ts","./projects/ng-dialogs/src/app/create-file-dialog/create-file-dialog.component.html","./projects/ng-dialogs/src/app/create-file-dialog/create-file-dialog.component.ts","./projects/ng-dialogs/src/app/create-file-dialog/create-file-dialog.module.ts"],"names":["http","context","dnnContext","isShared","sessionStorage","getItem","toString","get","viewKey","urlItems","this","$2sxc","apiUrl","params","appId","global","templateIdOrPath","pipe","view","Type","toLocaleLowerCase","Extension","save","post","getTemplates","withSubfolders","getPredefinedTemplates","purpose","type","getPreview","path","templateKey","createTemplate","test","find","i","EntityId","Path","templateId","SourceService","defaultThrottleConfig","leading","trailing","ThrottleTimeOperator","duration","scheduler","subscriber","source","subscribe","ThrottleTimeSubscriber","destination","_hasTrailingValue","_trailingValue","value","throttled","add","schedule","dispatchNext","next","complete","unsubscribe","remove","Subscriber","arg","clearThrottle","matInput","elementRef","autofocusSelectValue","ngOnInit","setTimeout","focus","toBoolean","nativeElement","setSelectionRange","length","valueLowerCase","MatInputAutofocusDirective","dialogData","dialogRef","sourceService","hostClass","all","subscription","Subscription","templates$","BehaviorSubject","loadingPreview$","buildForm","fetchTemplates","buildTemplateVars","ngOnDestroy","closeDialog","result","close","confirm","formValues","form","getRawValue","name","finalName","response","controls","Default","patchValue","Templates","platform","disabled","folder","combineLatest","valueChanges","startWith","distinctUntilChanged","template","t","Key","suggestedName","SuggestedFileName","trim","Prefix","Suffix","replace","platforms$","map","templates","platformsMap","forEach","Platforms","Object","keys","purposes$","purposesMap","Purpose","filter","includes","tap","some","newTemplateKey","preview$","config","lift","throttleTime","switchMap","forkJoin","timer","of","undefined","templateVars$","preview","platforms","purposes","loadingPreview","Preview","previewValid","IsValid","previewError","Error","CreateFileDialogComponent","CreateFileDialogModule"],"mappings":"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","file":"default-projects_ng-dialogs_src_app_create-file-dialog_index_ts.a2dd511f8ffb30a0130f.js","sourcesContent":["import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { webApiAppFile, webApiAppFileCreate, webApiAppFilesAll } from '../../../../../edit/shared/services';\r\nimport { keyIsShared } from '../../shared/constants/session.constants';\r\nimport { SourceItem } from '../../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { PredefinedTemplatesResponse } from '../models/predefined-template.model';\r\nimport { Preview } from '../models/preview.models';\r\nimport { SourceView } from '../models/source-view.model';\r\n\r\nexport const webApiAppFilesPredefinedTemplates = 'admin/appfiles/GetTemplates';\r\nexport const webApiAppFilesPreview = 'admin/appfiles/preview';\r\n\r\n@Injectable()\r\nexport class SourceService {\r\n  private isShared = sessionStorage.getItem(keyIsShared) ?? false.toString();\r\n\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /** ViewKey is templateId or path */\r\n  get(viewKey: string, urlItems: SourceItem[]): Observable<SourceView> {\r\n    return this.http.get<SourceView>(this.dnnContext.$2sxc.http.apiUrl(webApiAppFile), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        global: this.isShared,\r\n        ...this.templateIdOrPath(viewKey, urlItems),\r\n      }\r\n    }).pipe(\r\n      map(view => {\r\n        if (view.Type.toLocaleLowerCase() === 'auto') {\r\n          switch (view.Extension.toLocaleLowerCase()) {\r\n            case '.cs':\r\n            case '.cshtml':\r\n              view.Type = 'Razor';\r\n              break;\r\n            case '.html':\r\n            case '.css':\r\n            case '.js':\r\n              view.Type = 'Token';\r\n              break;\r\n          }\r\n        }\r\n        return view;\r\n      })\r\n    );\r\n  }\r\n\r\n  /** ViewKey is templateId or path */\r\n  save(viewKey: string, view: SourceView, urlItems: SourceItem[]): Observable<boolean> {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiAppFile), view, {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        global: this.isShared,\r\n        ...this.templateIdOrPath(viewKey, urlItems),\r\n      },\r\n    });\r\n  }\r\n\r\n  getTemplates(): Observable<string[]> {\r\n    return this.http.get<string[]>(this.dnnContext.$2sxc.http.apiUrl(webApiAppFilesAll), {\r\n      params: { appId: this.context.appId.toString(), global: this.isShared, withSubfolders: 'true' },\r\n    });\r\n  }\r\n\r\n  getPredefinedTemplates(purpose?: 'Template' | 'Search' | 'Api', type?: 'Token' | 'Razor'): Observable<PredefinedTemplatesResponse> {\r\n    return this.http.get<PredefinedTemplatesResponse>(this.dnnContext.$2sxc.http.apiUrl(webApiAppFilesPredefinedTemplates), {\r\n      params: {\r\n        ...(purpose && { purpose }),\r\n        ...(type && { type }),\r\n      },\r\n    });\r\n  }\r\n\r\n  getPreview(path: string, templateKey: string): Observable<Preview> {\r\n    return this.http.get<Preview>(this.dnnContext.$2sxc.http.apiUrl(webApiAppFilesPreview), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        path,\r\n        templateKey,\r\n        global: this.isShared,\r\n      },\r\n    });\r\n  }\r\n\r\n  createTemplate(path: string, templateKey: string): Observable<boolean> {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiAppFileCreate), {}, {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        global: this.isShared,\r\n        purpose: 'auto',\r\n        path,\r\n        templateKey,\r\n      },\r\n    });\r\n  }\r\n\r\n  private templateIdOrPath(viewKey: string, urlItems: SourceItem[]) {\r\n    if (/^[0-9]*$/g.test(viewKey)) {\r\n      const path = urlItems.find(i => i.EntityId?.toString() === viewKey)?.Path;\r\n      return {\r\n        templateId: viewKey,\r\n        ...(path != null && { path }),\r\n      };\r\n    } else {\r\n      return { path: viewKey };\r\n    }\r\n  }\r\n}\r\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n}\nclass ThrottleOperator {\n    constructor(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n}\nclass ThrottleSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, durationSelector, _leading, _trailing) {\n        super(destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasValue = false;\n    }\n    _next(value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    }\n    send() {\n        const { _hasValue, _sendValue } = this;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = undefined;\n    }\n    throttle(value) {\n        const duration = this.tryDurationSelector(value);\n        if (!!duration) {\n            this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n        }\n    }\n    tryDurationSelector(value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    }\n    throttlingDone() {\n        const { _throttled, _trailing } = this;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = undefined;\n        if (_trailing) {\n            this.send();\n        }\n    }\n    notifyNext() {\n        this.throttlingDone();\n    }\n    notifyComplete() {\n        this.throttlingDone();\n    }\n}\n//# sourceMappingURL=throttle.js.map","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nclass ThrottleTimeOperator {\n    constructor(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n}\nclass ThrottleTimeSubscriber extends Subscriber {\n    constructor(destination, duration, scheduler, leading, trailing) {\n        super(destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    _next(value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n            else if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n    }\n    _complete() {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    clearThrottle() {\n        const throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    }\n}\nfunction dispatchNext(arg) {\n    const { subscriber } = arg;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\r\nimport { MatInput } from '@angular/material/input';\r\n\r\n@Directive({ selector: '[appMatInputAutofocus]' })\r\nexport class MatInputAutofocusDirective implements OnInit {\r\n  @Input() autofocusSelectValue: string | boolean | null | undefined = false;\r\n\r\n  constructor(private matInput: MatInput, private elementRef: ElementRef<HTMLInputElement>) { }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.matInput.focus();\r\n\r\n      if (this.toBoolean(this.autofocusSelectValue)) {\r\n        this.elementRef.nativeElement.setSelectionRange(0, this.matInput.value.length);\r\n      }\r\n    });\r\n  }\r\n\r\n  private toBoolean(value: any): boolean | null | undefined {\r\n    if (typeof value === 'boolean') { return value; }\r\n    if (typeof value === 'string') {\r\n      const valueLowerCase = value.toLocaleLowerCase();\r\n      if (valueLowerCase === 'true') { return true; }\r\n      if (valueLowerCase === 'false') { return false; }\r\n      return;\r\n    }\r\n    if (value == null) { return value; }\r\n  }\r\n}\r\n","<ng-container *ngIf=\"templateVars$ | async as data\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box hide-scrollbar\">\r\n      <span>Create</span>\r\n      <span class=\"file-name\">{{\r\n        controls.finalName.value\r\n        || (controls.folder.value ? controls.folder.value.trim() + '/' : '')\r\n        }}</span>\r\n    </div>\r\n  </div>\r\n\r\n  <form [formGroup]=\"form\" class=\"dialog-form\">\r\n    <div class=\"dialog-form-content fancy-scrollbar-light\">\r\n\r\n      <div class=\"field-container multiple\">\r\n        <!-- Platform -->\r\n        <div class=\"multiple-field\">\r\n          <mat-form-field appearance=\"standard\" color=\"accent\">\r\n            <mat-label>Platform</mat-label>\r\n            <mat-select formControlName=\"platform\">\r\n              <mat-option *ngFor=\"let platform of data.platforms\" [value]=\"platform\">\r\n                {{ platform }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <!-- Purpose -->\r\n        <div class=\"multiple-field\">\r\n          <mat-form-field appearance=\"standard\" color=\"accent\">\r\n            <mat-label>Purpose</mat-label>\r\n            <mat-select formControlName=\"purpose\">\r\n              <mat-option *ngFor=\"let purpose of data.purposes\" [value]=\"purpose\">\r\n                {{ purpose }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Template -->\r\n      <div class=\"field-container\">\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Template</mat-label>\r\n          <mat-select formControlName=\"templateKey\">\r\n            <mat-option *ngFor=\"let template of data.templates\" [value]=\"template.Key\">\r\n              {{ template.Name }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <!-- Name -->\r\n      <div class=\"field-container\">\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"name\" required appMatInputAutofocus autofocusSelectValue=\"true\">\r\n        </mat-form-field>\r\n        <app-field-hint *ngIf=\"controls.name.touched && controls.name.errors?.required\" [isError]=\"true\">\r\n          This field is required\r\n        </app-field-hint>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"dialog-form-actions\">\r\n      <ng-container *ngIf=\"data.loadingPreview\">\r\n        <mat-spinner mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n        <div class=\"spacer\"></div>\r\n      </ng-container>\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\"\r\n        [disabled]=\"!form.valid || data.loadingPreview || !data.previewValid\" (click)=\"confirm()\">\r\n        Create\r\n      </button>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"data.preview\">\r\n      <div class=\"preview-label-box\">\r\n        <label class=\"preview-label\" [ngClass]=\"{ 'disabled': data.loadingPreview }\">Preview</label>\r\n      </div>\r\n      <pre class=\"fancy-scrollbar-light\" [ngClass]=\"{ 'disabled': data.loadingPreview }\">{{ data.preview }}</pre>\r\n    </ng-container>\r\n\r\n    <div class=\"preview-error\" *ngIf=\"!data.loadingPreview && data.previewError\">\r\n      {{ data.previewError }}\r\n    </div>\r\n  </form>\r\n</ng-container>\r\n","import { Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { asyncScheduler, BehaviorSubject, combineLatest, forkJoin, Observable, of, Subscription, timer } from 'rxjs';\r\nimport { delay, distinctUntilChanged, map, startWith, switchMap, tap, throttleTime } from 'rxjs/operators';\r\nimport { CreateFileDialogData, CreateFileDialogResult, CreateFileFormControls, CreateFileFormValues, CreateFileTemplateVars } from '.';\r\nimport { SanitizeHelper } from '../../../../edit/shared/helpers';\r\nimport { PredefinedTemplate } from '../code-editor/models/predefined-template.model';\r\nimport { SourceService } from '../code-editor/services/source.service';\r\n\r\n@Component({\r\n  selector: 'app-create-file-dialog',\r\n  templateUrl: './create-file-dialog.component.html',\r\n  styleUrls: ['./create-file-dialog.component.scss']\r\n})\r\nexport class CreateFileDialogComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: FormGroup;\r\n  controls: CreateFileFormControls;\r\n  templateVars$: Observable<CreateFileTemplateVars>;\r\n\r\n  private all = 'All' as const;\r\n  private templates$: BehaviorSubject<PredefinedTemplate[]>;\r\n  private loadingPreview$: BehaviorSubject<boolean>;\r\n  private subscription: Subscription;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: CreateFileDialogData,\r\n    private dialogRef: MatDialogRef<CreateFileDialogComponent>,\r\n    private sourceService: SourceService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = new Subscription();\r\n    this.templates$ = new BehaviorSubject<PredefinedTemplate[]>([]);\r\n    this.loadingPreview$ = new BehaviorSubject(false);\r\n\r\n    this.buildForm();\r\n    this.fetchTemplates();\r\n    this.buildTemplateVars();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.templates$.complete();\r\n    this.loadingPreview$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  closeDialog(result?: CreateFileDialogResult): void {\r\n    this.dialogRef.close(result);\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: CreateFileFormValues = this.form.getRawValue();\r\n\r\n    const result: CreateFileDialogResult = {\r\n      name: formValues.finalName,\r\n      templateKey: formValues.templateKey,\r\n    };\r\n    this.closeDialog(result);\r\n  }\r\n\r\n  private fetchTemplates(): void {\r\n    this.sourceService.getPredefinedTemplates(this.dialogData.purpose, this.dialogData.type).subscribe(response => {\r\n      if (this.controls.templateKey.value !== response.Default) {\r\n        this.controls.templateKey.patchValue(response.Default);\r\n      }\r\n      this.templates$.next(response.Templates);\r\n    });\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new FormGroup({\r\n      platform: new FormControl(this.all),\r\n      purpose: new FormControl({ value: this.dialogData.purpose ?? this.all, disabled: this.dialogData.purpose != null }),\r\n      templateKey: new FormControl(null, Validators.required),\r\n      name: new FormControl(null, Validators.required),\r\n      finalName: new FormControl({ value: null, disabled: true }),\r\n      folder: new FormControl({ value: this.dialogData.folder ?? '', disabled: true }),\r\n    });\r\n\r\n    this.controls = this.form.controls as any;\r\n\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.templates$,\r\n        this.controls.templateKey.valueChanges.pipe(\r\n          startWith<string, string>(this.controls.templateKey.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n      ]).subscribe(([templates, templateKey]) => {\r\n        const template = templates.find(t => t.Key === templateKey);\r\n        const suggestedName = template?.SuggestedFileName ?? null;\r\n\r\n        if (this.controls.name.value !== suggestedName) {\r\n          this.controls.name.patchValue(suggestedName);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.templates$,\r\n        this.controls.templateKey.valueChanges.pipe(\r\n          startWith<string, string>(this.controls.templateKey.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n        this.controls.name.valueChanges.pipe(\r\n          startWith<string, string>(this.controls.name.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n        this.controls.folder.valueChanges.pipe(\r\n          startWith<string, string>(this.controls.folder.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n      ]).subscribe(([templates, templateKey, name, folder]) => {\r\n        const template = templates.find(t => t.Key === templateKey);\r\n\r\n        let finalName: string = null;\r\n        if (name) {\r\n          folder = folder.trim();\r\n          name = SanitizeHelper.sanitizePath(name.trim());\r\n          name = `${template?.Prefix ?? ''}${name}${template?.Suffix ?? ''}${template?.Extension ?? ''}`;\r\n          finalName = `${folder ? `${folder}/` : ''}${name}`.replace(/\\/{2,}/g, '/');\r\n        }\r\n\r\n        if (this.controls.finalName.value !== finalName) {\r\n          this.controls.finalName.patchValue(finalName);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private buildTemplateVars(): void {\r\n    const platforms$ = this.templates$.pipe(\r\n      map(templates => {\r\n        const platformsMap: Record<string, string> = {\r\n          [this.all]: this.all,\r\n        };\r\n        templates.forEach(template => {\r\n          template.Platforms?.forEach(platform => {\r\n            platformsMap[platform] = platform;\r\n          });\r\n        });\r\n        return Object.keys(platformsMap);\r\n      }),\r\n    );\r\n    const purposes$ = this.templates$.pipe(\r\n      map(templates => {\r\n        const purposesMap: Record<string, string> = {\r\n          [this.all]: this.all,\r\n        };\r\n        templates.forEach(template => {\r\n          purposesMap[template.Purpose] = template.Purpose;\r\n        });\r\n        return Object.keys(purposesMap);\r\n      }),\r\n    );\r\n    const templates$ = combineLatest([\r\n      this.templates$,\r\n      this.controls.platform.valueChanges.pipe(\r\n        startWith<string, string>(this.controls.platform.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n      this.controls.purpose.valueChanges.pipe(\r\n        startWith<string, string>(this.controls.purpose.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n    ]).pipe(\r\n      map(([templates, platform, purpose]) => {\r\n        const filtered = templates.filter(template => {\r\n          const platformMatch = platform === this.all || (template.Platforms?.includes(platform) ?? false);\r\n          const purposeMatch = purpose === this.all || template.Purpose === purpose;\r\n          return platformMatch && purposeMatch;\r\n        });\r\n        return filtered;\r\n      }),\r\n      tap(templates => {\r\n        if (!templates.some(t => t.Key === this.controls.templateKey.value)) {\r\n          const newTemplateKey = templates[0]?.Key ?? null;\r\n          if (this.controls.templateKey.value !== newTemplateKey) {\r\n            this.controls.templateKey.patchValue(newTemplateKey);\r\n          }\r\n        }\r\n      }),\r\n    );\r\n    const preview$ = combineLatest([\r\n      this.controls.finalName.valueChanges.pipe(\r\n        startWith<string, string>(this.controls.finalName.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n      this.controls.templateKey.valueChanges.pipe(\r\n        startWith<string, string>(this.controls.templateKey.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n    ]).pipe(\r\n      throttleTime(100, asyncScheduler, { leading: true, trailing: true }),\r\n      tap(() => {\r\n        this.loadingPreview$.next(true);\r\n      }),\r\n      switchMap(([finalName, templateKey]) => {\r\n        return !finalName || !templateKey\r\n          ? of<undefined>(undefined)\r\n          : forkJoin([\r\n            this.sourceService.getPreview(finalName, templateKey),\r\n            timer(500),\r\n          ]).pipe(map(([preview]) => preview));\r\n      }),\r\n      tap(() => {\r\n        this.loadingPreview$.next(false);\r\n      }),\r\n    );\r\n    this.templateVars$ = combineLatest([platforms$, purposes$, templates$, preview$, this.loadingPreview$]).pipe(\r\n      map(([platforms, purposes, templates, preview, loadingPreview]) => {\r\n        const templateVars: CreateFileTemplateVars = {\r\n          platforms,\r\n          purposes,\r\n          templates,\r\n          loadingPreview,\r\n          preview: preview?.Preview,\r\n          previewValid: preview?.IsValid ?? false,\r\n          previewError: preview?.Error,\r\n        };\r\n        return templateVars;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { CreateFileDialogComponent } from '.';\r\nimport { SourceService } from '../code-editor/services/source.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CreateFileDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedComponentsModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  exports: [\r\n    CreateFileDialogComponent,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    SourceService,\r\n  ],\r\n})\r\nexport class CreateFileDialogModule { }\r\n"],"sourceRoot":"webpack:///"}