{"version":3,"file":"projects_eav-ui_src_app_edit_dialog_footer_edit-dialog-footer_component_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/edit/dialog/footer/data-dump/data-dump.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/data-dump/data-dump.component.html","./projects/eav-ui/src/app/edit/dialog/footer/edit-dialog-footer.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/edit-dialog-footer.component.html","./projects/eav-ui/src/app/edit/dialog/footer/edit-dialog-footer.models.ts","./projects/eav-ui/src/app/edit/dialog/footer/formula-designer/formula-designer.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/formula-designer/formula-designer.component.html","./projects/eav-ui/src/app/edit/dialog/footer/formula-designer/formula-designer.models.ts","./projects/eav-ui/src/app/edit/dialog/footer/formula-designer/snippet-label-size.pipe.ts","./projects/eav-ui/src/app/edit/dialog/footer/logs-config/config-editor-dialog/config-editor-dialog.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/logs-config/config-editor-dialog/config-editor-dialog.component.html","./projects/eav-ui/src/app/edit/dialog/footer/logs-config/logs-config.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/logs-config/logs-config.component.html","./projects/eav-ui/src/app/edit/dialog/footer/logs-config/specs-editor-dialog/specs-editor-dialog.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/logs-config/specs-editor-dialog/specs-editor-dialog.component.html","./projects/eav-ui/src/app/edit/dialog/footer/logs-dump/logs-dump.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/logs-dump/logs-dump.component.html","./projects/eav-ui/src/app/shared/services/entity-edit.service.ts","./node_modules/@angular/cdk/fesm2022/clipboard.mjs"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { JsonPipe } from '@angular/common';\r\nimport { FormConfigService } from '../../../form/form-config.service';\r\nimport { ItemService } from '../../../state/item.service';\r\n\r\n@Component({\r\n  selector: 'app-data-dump',\r\n  templateUrl: './data-dump.component.html',\r\n  styleUrls: ['./data-dump.component.scss'],\r\n  standalone: true,\r\n  imports: [JsonPipe],\r\n})\r\nexport class DataDumpComponent {\r\n  protected items = this.itemService.getManySignal(this.formConfig.config.itemGuids);\r\n  constructor(private itemService: ItemService, private formConfig: FormConfigService) { }\r\n}\r\n","  <textarea readonly class=\"fancy-scrollbar-light\">{{ items() | json }}</textarea>\r\n\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, inject } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { Of } from '../../../../../../core';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { EavWindow } from '../../../shared/models/eav-window.model';\r\nimport { UserPreferences } from '../../../shared/user/user-preferences.service';\r\nimport { DataDumpComponent } from './data-dump/data-dump.component';\r\nimport { DebugTypes } from './edit-dialog-footer.models';\r\nimport { footerPreferences } from './footer-preferences';\r\nimport { FormulaDesignerComponent } from './formula-designer/formula-designer.component';\r\nimport { LogsDumpComponent } from './logs-dump/logs-dump.component';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-edit-dialog-footer',\r\n  templateUrl: './edit-dialog-footer.component.html',\r\n  styleUrls: ['./edit-dialog-footer.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    NgClass,\r\n    DataDumpComponent,\r\n    FormulaDesignerComponent,\r\n    LogsDumpComponent,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class EditDialogFooterComponent {\r\n\r\n  log = classLog({EditDialogFooterComponent});\r\n\r\n  DebugTypes = DebugTypes;\r\n\r\n  sxcVer = window.sxcVersion.substring(0, window.sxcVersion.lastIndexOf('.'));\r\n  \r\n  prefManager = inject(UserPreferences).part(footerPreferences);\r\n  preferences = this.prefManager.data;\r\n\r\n  toggleDialog(type: Of<typeof DebugTypes>): void {\r\n    const s = this.preferences();\r\n    const hideTab = s.tab === type;\r\n    const tab = hideTab ? null :  type;\r\n    const expanded = hideTab ? false : s.expanded;\r\n    const size = hideTab ? 0 : expanded ? 2 : 1;\r\n    this.prefManager.setMany({ tab, expanded, size });\r\n  }\r\n\r\n  toggleSize(): void {\r\n    const expanded = !this.preferences().expanded;\r\n    const size = expanded ? 2 : 1;\r\n    this.prefManager.setMany({ expanded, size });\r\n  }\r\n\r\n  pinResource(part: string): string {\r\n    return pinResources[(`${part}-${this.preferences().pinned}`)];\r\n  }\r\n}\r\n\r\nconst pinResources: Record<string, string> = {\r\n  ['status-true']: 'pinned - will remain visible on reload',\r\n  ['status-false']: 'not pinned - will hide on reload',\r\n  ['icon-true']: 'keep_public',\r\n  ['icon-false']: 'keep_off',\r\n}\r\n","<mat-card appearance=\"raised\" class=\"mat-elevation-z4\" [ngClass]=\"{ 'debug-enabled': preferences().tab != null }\">\r\n  \r\n  <div class=\"debug-buttons-container\">\r\n    <button mat-button tippy=\"Show Data JSON\" (click)=\"toggleDialog(DebugTypes.Data)\">\r\n      <mat-icon>offline_bolt</mat-icon>\r\n      <span>Data</span>\r\n    </button>\r\n    <button mat-button tippy=\"Show Formula Designer\" (click)=\"toggleDialog(DebugTypes.Formulas)\">\r\n      <mat-icon>functions</mat-icon>\r\n      <span>Formulas</span>\r\n    </button>\r\n    <button mat-button tippy=\"Show Logs\" (click)=\"toggleDialog(DebugTypes.Logs)\">\r\n      <mat-icon>speed</mat-icon>\r\n      <span>Logs</span>\r\n    </button>\r\n    <div class=\"spacer\"></div>\r\n\r\n    <!-- Special expand button when working with formulas, to get more space -->\r\n    @if (preferences().tab != null)\r\n    {\r\n      <button mat-icon-button tippy=\"expand/shrink\" (click)=\"toggleSize()\">\r\n        <mat-icon>{{ preferences().expanded ? 'unfold_less' : 'expand' }}</mat-icon>\r\n      </button>\r\n    }\r\n    @else\r\n    {\r\n      <button mat-icon-button [tippy]=\"'Developer tools are only visible to developers. ' + pinResource('status')\" (click)=\"prefManager.toggle('pinned')\">\r\n        <mat-icon>{{ pinResource('icon') }}</mat-icon>\r\n      </button>\r\n    }\r\n\r\n    <div class=\"sxc-version\">\r\n      2sxc {{ sxcVer }}\r\n    </div>\r\n  </div>\r\n\r\n  @if (preferences().tab != null)\r\n  {\r\n    <div class=\"debug-info-container\" [ngClass]=\"'size' + (preferences().expanded ? '-xl' : '')\">\r\n      @switch (preferences().tab) {\r\n        @case (DebugTypes.Data) {\r\n          <app-data-dump></app-data-dump>\r\n        }\r\n        @case (DebugTypes.Formulas) {\r\n          <app-formula-designer></app-formula-designer>\r\n        }\r\n        @case (DebugTypes.Logs) {\r\n          <app-logs-dump></app-logs-dump>\r\n        }\r\n      }\r\n    </div>\r\n  }\r\n</mat-card>","export const DebugTypes = {\r\n  Data: 'data',\r\n  Formulas: 'formulas',\r\n  Logs: 'logs',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","import { JsonPipe, NgClass } from '@angular/common';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, computed, inject, OnDestroy, OnInit, signal } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport type * as Monaco from 'monaco-editor';\r\nimport { Of } from '../../../../../../../core';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { MonacoEditorComponent } from '../../../../monaco-editor/monaco-editor.component';\r\nimport { eavConstants } from '../../../../shared/constants/eav.constants';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { EditPrep } from '../../../../shared/models/edit-form.model';\r\nimport { ClipboardService } from '../../../../shared/services/clipboard.service';\r\nimport { EntityEditService } from '../../../../shared/services/entity-edit.service';\r\nimport { FormConfigService } from '../../../form/form-config.service';\r\nimport { DesignerState } from '../../../formulas/designer/designer-state.model';\r\nimport { FormulaDesignerService } from '../../../formulas/designer/formula-designer.service';\r\nimport { defaultFormula, defaultListItemFormula } from '../../../formulas/formula-definitions';\r\nimport { FormulaIdentifier } from '../../../formulas/results/formula-results.models';\r\nimport { FormulaNewPickerTargets, FormulaTargets } from '../../../formulas/targets/formula-targets';\r\nimport { ContentTypeService } from '../../../shared/content-types/content-type.service';\r\nimport { ItemService } from '../../../state/item.service';\r\nimport { SelectTargets } from './formula-designer.models';\r\nimport { SnippetLabelSizePipe } from './snippet-label-size.pipe';\r\n\r\n@Component({\r\n  selector: 'app-formula-designer',\r\n  templateUrl: './formula-designer.component.html',\r\n  styleUrls: ['./formula-designer.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    MatOptionModule,\r\n    NgClass,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MonacoEditorComponent,\r\n    MatMenuModule,\r\n    JsonPipe,\r\n    SnippetLabelSizePipe,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class FormulaDesignerComponent implements OnInit, OnDestroy {\r\n\r\n  log = classLog({FormulaDesignerComponent});\r\n\r\n  #designerSvc = inject(FormulaDesignerService);\r\n\r\n  #entitiesService = transient(EntityEditService);\r\n  \r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private formConfig: FormConfigService,\r\n    private itemService: ItemService,\r\n    private contentTypeService: ContentTypeService,\r\n    private translate: TranslateService,\r\n  ) { }\r\n\r\n  protected clipboard = transient(ClipboardService);\r\n\r\n  SelectTargets = SelectTargets;\r\n  loadError = false;\r\n  freeTextTarget = false;\r\n  allowSaveFormula = this.formConfig.config.enableFormulaSave;\r\n  isDeleted = signal(false);\r\n  saving = signal(false);\r\n  monacoOptions: Monaco.editor.IStandaloneEditorConstructionOptions = {\r\n    minimap: {\r\n      enabled: false,\r\n    },\r\n    lineHeight: 19,\r\n    lineNumbers: 'off',\r\n    lineDecorationsWidth: 0,\r\n    folding: false,\r\n    scrollBeyondLastLine: false,\r\n    tabSize: 2,\r\n    fixedOverflowWidgets: true,\r\n  };\r\n  filename = `formula${this.formConfig.config.formId}.js`;\r\n  focused = false;\r\n\r\n\r\n  protected state = this.#designerSvc.designerState;\r\n  protected result = this.#designerSvc.formulaResult;\r\n  protected targetOptions = this.#designerSvc.currentTargetOptions;\r\n  \r\n  protected entityOptions = this.#designerSvc.entityOptions;\r\n  protected fieldsOptions = this.#designerSvc.fieldsOptions;\r\n  protected currentFormula = this.#designerSvc.currentFormula;\r\n\r\n  protected v2JsTypings = this.#designerSvc.v2JsTypings;\r\n\r\n  protected v1ContextSnippets = this.#designerSvc.v1ContextSnippets;\r\n  protected v1DataSnippets = this.#designerSvc.v1DataSnippets;\r\n\r\n  protected template = computed(() => Object.values(FormulaNewPickerTargets).includes(this.state().target)\r\n    ? defaultListItemFormula\r\n    : defaultFormula\r\n  );\r\n\r\n\r\n  ngOnInit(): void {\r\n    // Make sure all necessary services have what they need, otherwise flag & exit\r\n    // 1. Make sure the designer has access to all itemSettingsServices\r\n    this.loadError = false;\r\n    if (Object.keys(this.#designerSvc.itemSettingsServices).length < 1) {\r\n      this.loadError = true;\r\n      return;\r\n    }\r\n    \r\n    this.#designerSvc.setDesignerOpen(true);\r\n    this.#designerSvc.initAfterItemSettingsAreReady();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.#designerSvc.setDesignerOpen(false);\r\n  }\r\n\r\n  selectedChanged(target: Of<typeof SelectTargets>, value: string | Of<typeof FormulaTargets>): void {\r\n    const newState: DesignerState = {\r\n      ...this.#designerSvc.designerState(),\r\n      editMode: false,\r\n    };\r\n    switch (target) {\r\n      case SelectTargets.Entity:\r\n        newState.entityGuid = value;\r\n        const selectedSettingsSvc = this.#designerSvc.itemSettingsServices[newState.entityGuid];\r\n        newState.fieldName = Object.keys(selectedSettingsSvc.allProps())[0];\r\n        break;\r\n      case SelectTargets.Field:\r\n        newState.fieldName = value;\r\n        break;\r\n      case SelectTargets.Target:\r\n        newState.target = value as Of<typeof FormulaTargets>;\r\n        break;\r\n    }\r\n\r\n    this.#designerSvc.designerState.set(newState);\r\n  }\r\n\r\n  toggleFreeText(): void {\r\n    this.freeTextTarget = !this.freeTextTarget;\r\n  }\r\n\r\n  formulaChanged(formula: string): void {\r\n    this.#designerSvc.cache.updateFormulaFromEditor(this.#designerIdentifier, formula, false);\r\n  }\r\n\r\n  onFocused(focused: boolean): void {\r\n    this.focused = focused;\r\n  }\r\n\r\n  toggleEdit(): void {\r\n    const oldState = this.#designerSvc.designerState();\r\n    const designer: DesignerState = {\r\n      ...oldState,\r\n      editMode: !oldState.editMode,\r\n    };\r\n    this.#designerSvc.designerState.set(designer);\r\n    if (designer.editMode && this.#designerSvc.currentFormula() == null)\r\n      this.#designerSvc.cache.updateFormulaFromEditor(this.#designerIdentifier, this.template(), false);\r\n  }\r\n\r\n  reset(): void {\r\n    const designer: DesignerState = {\r\n      ...this.#designerSvc.designerState(),\r\n      editMode: false,\r\n    };\r\n    const identifier = this.#designerIdentifier;\r\n    this.#designerSvc.designerState.set(designer);\r\n    this.#designerSvc.cache.resetFormula(identifier);\r\n    this.#designerSvc.itemSettingsServices[identifier.entityGuid].retriggerFormulas('designer-reset');\r\n  }\r\n\r\n  run(): void {\r\n    const identifier = this.#designerIdentifier;\r\n    const formula = this.#designerSvc.currentFormula();\r\n    this.#designerSvc.cache.updateFormulaFromEditor(identifier, formula.sourceCode, true);\r\n    this.#designerSvc.itemSettingsServices[identifier.entityGuid].retriggerFormulas('designer-run');\r\n    this.isDeleted.set(false);\r\n  }\r\n\r\n  get #designerIdentifier(): FormulaIdentifier {\r\n    const designer = this.#designerSvc.designerState();\r\n    const id: FormulaIdentifier = { entityGuid: designer.entityGuid, fieldName: designer.fieldName, target: designer.target };\r\n    return id;\r\n  }\r\n\r\n  //#region Save/Delete\r\n\r\n  save(): void {\r\n    this.saving.set(true);\r\n    const formula = this.#designerSvc.currentFormula();\r\n\r\n    if (formula.sourceCodeId == null) {\r\n      const item = this.itemService.get(formula.entityGuid);\r\n      const attributeDef = this.contentTypeService.getAttributeOfItem(item, formula.fieldName);\r\n      const atAllFieldSettings = attributeDef.Metadata.find(m => m.Type.Id === '@All');\r\n      if (!atAllFieldSettings) {\r\n        this.snackBar.open('Field configuration is missing. Please create formula in Administration', undefined, { duration: 3000 });\r\n        this.saving.set(false);\r\n        return;\r\n      }\r\n      this.#entitiesService.create(\r\n        eavConstants.contentTypes.formulas,\r\n        {\r\n          Title: formula.target,\r\n          Target: formula.target,\r\n          Formula: formula.sourceCode,\r\n          Enabled: true,\r\n          ParentRelationship: EditPrep.relationship(atAllFieldSettings.Guid, 'Formulas'),\r\n        },\r\n      ).subscribe(savedFormula => {\r\n        this.#designerSvc.cache.updateSaved(formula, savedFormula.Guid, savedFormula.Id);\r\n        this.snackBar.open('Formula saved', null, { duration: 2000 });\r\n        this.saving.set(false);\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.#entitiesService.update(eavConstants.contentTypes.formulas, formula.sourceCodeId, { Formula: formula.sourceCode }).subscribe(() => {\r\n      this.#designerSvc.cache.updateSaved(formula, formula.sourceCodeGuid, formula.sourceCodeId);\r\n      this.snackBar.open('Formula saved', null, { duration: 2000 });\r\n      this.saving.set(false);\r\n    });\r\n  }\r\n\r\n  deleteFormula(): void {\r\n    const designer = this.#designerSvc.designerState();\r\n    const formula = this.#designerSvc.currentFormula();\r\n\r\n    const id = formula.sourceCodeId;\r\n    const title = formula.fieldName + ' - ' + formula.target;\r\n\r\n    const confirmed = confirm(this.translate.instant('Data.Delete.Question', { title, id }));\r\n    if (!confirmed)\r\n      return;\r\n\r\n    this.#entitiesService.delete(eavConstants.contentTypes.formulas, formula.sourceCodeId, true)\r\n      .subscribe({\r\n        next: () => {\r\n          this.#designerSvc.cache.delete(formula);\r\n          this.snackBar.open(this.translate.instant('Message.Deleted'), null, { duration: 2000 });\r\n          this.isDeleted.set(true);\r\n          if (designer.editMode)\r\n            this.toggleEdit();\r\n        },\r\n        error: (_: HttpErrorResponse) => {\r\n          this.snackBar.open(this.translate.instant('Message.DeleteError'), null, { duration: 2000 });\r\n        }\r\n      });\r\n  }\r\n\r\n  //#endregion\r\n\r\n}\r\n","@if (!loadError) {\r\n  <div class=\"formula-context-box\">\r\n    <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n      <mat-label>Entity</mat-label>\r\n      <mat-select [ngModel]=\"state().entityGuid\" (ngModelChange)=\"selectedChanged(SelectTargets.Entity, $event)\">\r\n        @for (entityOption of entityOptions(); track entityOption.entityGuid)\r\n        {\r\n          <mat-option\r\n            [value]=\"entityOption.entityGuid\">\r\n            <span [ngClass]=\"{ 'has-formula': entityOption.hasFormula }\">\r\n              {{ entityOption.label }}\r\n            </span>\r\n          </mat-option>\r\n        }\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n      <mat-label>Attribute</mat-label>\r\n      <mat-select [ngModel]=\"state().fieldName\" (ngModelChange)=\"selectedChanged(SelectTargets.Field, $event)\"\r\n        [disabled]=\"state().entityGuid == null\">\r\n        @for (fieldOption of fieldsOptions(); track fieldOption.fieldName)\r\n        {\r\n          <mat-option\r\n            [value]=\"fieldOption.fieldName\">\r\n            <span [ngClass]=\"{ 'has-formula': fieldOption.hasFormula }\">\r\n              {{ fieldOption.fieldName }}\r\n            </span>\r\n          </mat-option>\r\n        }\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n      <mat-label>Target</mat-label>\r\n      @if (!freeTextTarget)\r\n      {\r\n        <mat-select [ngModel]=\"state().target\"\r\n          (ngModelChange)=\"selectedChanged(SelectTargets.Target, $event)\"\r\n          [disabled]=\"state().entityGuid == null || state().fieldName == null\">\r\n          @for (targetOption of targetOptions(); track targetOption) {\r\n            <mat-option [value]=\"targetOption.target\">\r\n              <span [ngClass]=\"{ 'has-formula': targetOption.hasFormula }\">\r\n                {{ targetOption.label }}\r\n              </span>\r\n            </mat-option>\r\n          }\r\n        </mat-select>\r\n      }\r\n      @else\r\n      {\r\n        <input matInput [ngModel]=\"state().target\"\r\n          (ngModelChange)=\"selectedChanged(SelectTargets.Target, $event)\"\r\n          [disabled]=\"state().entityGuid == null || state().fieldName == null\">\r\n      }\r\n    </mat-form-field>\r\n    <button mat-icon-button tippy=\"FreeText Target\" class=\"eav-formula-button\"\r\n      [disabled]=\"state().entityGuid == null || state().fieldName == null\" (click)=\"toggleFreeText()\">\r\n      <mat-icon>text_fields</mat-icon>\r\n    </button>\r\n    <div class=\"spacer\"></div>\r\n    <a mat-icon-button tippy=\"Help\" class=\"eav-formula-button\" href=\"https://go.2sxc.org/formulas\" target=\"_blank\">\r\n      <mat-icon>help</mat-icon>\r\n    </a>\r\n  </div>\r\n  <div class=\"formula-box\">\r\n    <div class=\"formula-field\" [ngClass]=\"{\r\n      'disabled': !state().editMode || state().entityGuid == null || state().fieldName == null || state().target == null,\r\n      'focused': focused\r\n      }\">\r\n      <mat-label class=\"label\">Function</mat-label>\r\n      <app-monaco-editor class=\"editor\" [filename]=\"filename\" [value]=\"currentFormula()?.sourceCode ?? template()\"\r\n        [jsTypings]=\"v2JsTypings()\" (valueChanged)=\"formulaChanged($event)\" [options]=\"monacoOptions\"\r\n        (focused)=\"onFocused(true)\" (blurred)=\"onFocused(false)\">\r\n      </app-monaco-editor>\r\n    </div>\r\n    <div class=\"formula-snippets fancy-scrollbar-light\" [ngClass]=\"{ 'disabled': !state().editMode }\">\r\n      @for (snippet of v1DataSnippets(); track snippet.code)\r\n      {\r\n        <div class=\"snippet\" [title]=\"snippet.code\"\r\n          (click)=\"clipboard.copyToClipboard(snippet.code)\">\r\n          {{ snippet.label | snippetLabelSize }}\r\n        </div>\r\n      }\r\n      @if (v1DataSnippets()?.length && v1ContextSnippets().length)\r\n      {\r\n        <div class=\"separator\"></div>\r\n      }\r\n      @for (snippet of v1ContextSnippets(); track snippet.code)\r\n      {\r\n        <div class=\"snippet\" [title]=\"snippet.code\"\r\n          (click)=\"clipboard.copyToClipboard(snippet.code)\">\r\n          {{ snippet.label | snippetLabelSize }}\r\n        </div>\r\n      }\r\n    </div>\r\n  </div>\r\n  <div class=\"formula-footer-box\">\r\n    <div class=\"formula-result-box hide-scrollbar\">\r\n      <span class=\"label\">Result:&nbsp;</span>\r\n      @if (result() != null && !isDeleted())\r\n      {\r\n        @if (!result().isError)\r\n        {\r\n          @if (result().value !== undefined) {\r\n            <span>{{ result().value | json }}</span>\r\n          }\r\n          @else if (!result().isOnlyPromise) {\r\n            <span class=\"result-undefined\">undefined</span>\r\n          }\r\n          @else {\r\n            <span>promise(🤞🏽)</span>\r\n          }\r\n        }\r\n        @else\r\n        {\r\n          <span class=\"result-error\">\r\n            Calculation failed. Please check console for more info\r\n          </span>\r\n        }\r\n      }\r\n    </div>\r\n    <div class=\"formula-actions-box\">\r\n      <button mat-icon-button tippy=\"Edit\" (click)=\"toggleEdit()\">\r\n        <mat-icon>edit</mat-icon>\r\n      </button>\r\n      <button mat-icon-button tippy=\"Menu\" [matMenuTriggerFor]=\"menu\">\r\n        <mat-icon>more_vert</mat-icon>\r\n      </button>\r\n      <mat-menu #menu=\"matMenu\">\r\n        <button mat-menu-item (click)=\"deleteFormula()\"\r\n          [disabled]=\"!currentFormula()?.sourceCodeId\">\r\n          <mat-icon>delete</mat-icon>\r\n          <span>Delete</span>\r\n        </button>\r\n        <button mat-menu-item (click)=\"reset()\">\r\n          <mat-icon>history</mat-icon>\r\n          <span>Reset</span>\r\n        </button>\r\n      </mat-menu>\r\n      @if (allowSaveFormula)\r\n      {\r\n        <button mat-icon-button tippy=\"Save\"\r\n          [tippyDisabled]=\"!state().editMode || !currentFormula()?.sourceCode\"\r\n          [disabled]=\"!state().editMode || !currentFormula()?.sourceCode || saving()\" (click)=\"save()\">\r\n          <mat-icon>save</mat-icon>\r\n        </button>\r\n      }\r\n      <button mat-icon-button tippy=\"Run\"\r\n        [disabled]=\"!state().editMode || !currentFormula()?.sourceCode\" (click)=\"run()\">\r\n        <mat-icon>play_arrow</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n}\r\n","import { Of } from '../../../../../../../core';\r\nimport { FormulaCacheItem } from '../../../formulas/cache/formula-cache.model';\r\nimport { FormulaTargets } from '../../../formulas/targets/formula-targets';\r\n\r\nexport interface EntityOption {\r\n  entityGuid: string;\r\n  formulas: FormulaCacheItem[];\r\n  hasFormula: boolean;\r\n  label: string;\r\n}\r\n\r\nexport interface FieldOption {\r\n  fieldName: string;\r\n  formulas: FormulaCacheItem[];\r\n  hasFormula: boolean;\r\n  inputType: string;\r\n  label: string;\r\n}\r\n\r\nexport interface TargetOption {\r\n  hasFormula: boolean;\r\n  label: string;\r\n  target: Of<typeof FormulaTargets>;\r\n}\r\n\r\nexport interface DesignerSnippet {\r\n  code: string;\r\n  label: string;\r\n}\r\n\r\nexport const SelectTargets = {\r\n  Entity: 'entityGuid',\r\n  Field: 'fieldValue',\r\n  Target: 'formulaTarget',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'snippetLabelSize',\r\n    standalone: true\r\n})\r\nexport class SnippetLabelSizePipe implements PipeTransform {\r\n\r\n  private maxLength = 24;\r\n\r\n  transform(label: string): string {\r\n    if (label.length <= this.maxLength) { return label; }\r\n    return `…${label.substring(label.length - this.maxLength)}`;\r\n  }\r\n}\r\n","import { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { Component, HostBinding, Inject } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogActions,\r\n  MatDialogClose,\r\n  MatDialogContent, MatDialogModule, MatDialogRef,\r\n  MatDialogTitle\r\n} from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { transient } from '../../../../../../../../core/transient';\r\nimport { ClipboardService } from '../../../../..//shared/services/clipboard.service';\r\nimport { MonacoEditorComponent } from '../../../../../monaco-editor/monaco-editor.component';\r\nimport { TippyDirective } from '../../../../../shared/directives/tippy.directive';\r\n@Component({\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogModule,\r\n    FormsModule,\r\n    MonacoEditorComponent,\r\n    MatButtonModule,\r\n    MatDialogActions,\r\n    MatDialogClose,\r\n    MatDialogContent,\r\n    MatDialogTitle,\r\n    ClipboardModule,\r\n    MatIconModule,\r\n    TippyDirective,\r\n  ],\r\n  selector: 'app-monaco-editor-dialog',\r\n  templateUrl: './config-editor-dialog.component.html',\r\n})\r\nexport class ConfigEditorDialogComponent {\r\n\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n  \r\n  selectedConfig: string;\r\n  focused = false;\r\n  editorOptions = {\r\n    theme: 'vs-light',\r\n    language: 'json',\r\n    readOnly: true,\r\n    automaticLayout: true,\r\n    minimap: { enabled: false },\r\n    scrollBeyondLastLine: false,\r\n  };\r\n  filename = 'exported-config.json';\r\n\r\n  constructor(\r\n    public dialog: MatDialogRef<ConfigEditorDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.selectedConfig = JSON.stringify(data.configData, null, 2);\r\n  }\r\n  \r\n  protected clipboard = transient(ClipboardService);\r\n\r\n  onFocused(focused: boolean): void {\r\n    this.focused = focused;\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Configs Exporter</div>\r\n    <button mat-icon-button mat-dialog-close tippy=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\" style=\"padding-bottom: 0;\">\r\n    <app-monaco-editor\r\n      [filename]=\"filename\"\r\n      [value]=\"selectedConfig\"\r\n      [options]=\"editorOptions\"\r\n      (focused)=\"onFocused(true)\"\r\n      (blurred)=\"onFocused(false)\"\r\n      style=\"height: 350px; width: 100%\"\r\n    />\r\n  </div>\r\n  <mat-dialog-actions>\r\n    <button mat-icon-button (click)=\"clipboard.copyToClipboard(selectedConfig)\" tippy=\"Copy Config To Clipboard\">\r\n      <mat-icon>content_copy</mat-icon>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { AsyncPipe, CommonModule, DatePipe, NgClass } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { LogManager } from '../../../../shared/logging/log-manager';\r\nimport { LoggingService, LogSeverities } from '../../../shared/services/logging.service';\r\nimport { ConfigEditorDialogComponent } from '../logs-config/config-editor-dialog/config-editor-dialog.component';\r\nimport { SpecsEditorDialogComponent } from '../logs-config/specs-editor-dialog/specs-editor-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-logs-config',\r\n  templateUrl: './logs-config.component.html',\r\n  styleUrls: ['./logs-config.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    AsyncPipe,\r\n    DatePipe,\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    TippyDirective,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n  ],\r\n})\r\nexport class LogsConfigComponent {\r\n  LogSeverities = LogSeverities;\r\n  logManager = LogManager.singleton();\r\n  allLogs = this.logManager.mergeAllSpecs;\r\n  configs: string[] = [];\r\n  selectedConfig: string | null = null;\r\n  sessionPrefix = 'logSpecs';\r\n\r\n  protected logs = this.loggingService.getLogsSignal();\r\n\r\n  constructor(\r\n    private loggingService: LoggingService,\r\n    private matDialog: MatDialog,\r\n    private snackBar: MatSnackBar\r\n  ) { this.loadConfigsFromStateManager(); }\r\n\r\n  /* Toggle Functions */\r\n  checkAll(): void {\r\n    const allChecked = Object.values(this.allLogs).every(\r\n      (specs) => specs.enabled\r\n    );\r\n\r\n    if (allChecked) {\r\n      // Reset all to unchecked\r\n      for (const spec of Object.keys(this.allLogs)) {\r\n        if (this.isChecked(spec)) {\r\n          this.toggleConfig(spec);\r\n        }\r\n      }\r\n    } else {\r\n      for (const spec of Object.keys(this.allLogs)) {\r\n        if (!this.isChecked(spec)) {\r\n          this.toggleConfig(spec);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.allLogs = this.logManager.mergeAllSpecs;\r\n  }\r\n\r\n  isChecked(name: string): boolean {\r\n    return this.allLogs[name]?.enabled ?? false;\r\n  }\r\n\r\n  toggleConfig(name: string): void {\r\n    this.logManager.toggle(name);\r\n    this.allLogs = this.logManager.mergeAllSpecs;\r\n  }\r\n\r\n  /* Config Functions */\r\n  loadConfigsFromStateManager(): void {\r\n    const savedConfigs = Object.keys(this.logManager.state.cache).filter(\r\n      (key) => key.startsWith(this.sessionPrefix)\r\n    );\r\n    this.configs = savedConfigs.map((key) =>\r\n      key.replace(`${this.sessionPrefix}.`, '')\r\n    );\r\n  }\r\n\r\n  onConfigSelected(configName: string | null): void {\r\n    if (configName) {\r\n      Object.keys(this.allLogs).forEach((logKey) => {\r\n        if (this.isChecked(logKey)) {\r\n          this.toggleConfig(logKey);\r\n        }\r\n      });\r\n\r\n      const fullConfigKey = `${this.sessionPrefix}.${configName}`;\r\n      const configData = this.logManager.state.cache[fullConfigKey];\r\n\r\n      if (configData) {\r\n        Object.keys(configData).forEach((logKey) => {\r\n          const shouldEnable = (configData as any)[logKey]?.enabled ?? false;\r\n          if (shouldEnable) {\r\n            if (!this.isChecked(logKey)) {\r\n              this.toggleConfig(logKey);\r\n            }\r\n          }\r\n        });\r\n        this.allLogs = this.logManager.mergeAllSpecs;\r\n      }\r\n    }\r\n  }\r\n\r\n  saveConfig(): void {\r\n    const configName = prompt('Enter the config name:');\r\n\r\n    if (configName) {\r\n      const enabledConfigs = Object.fromEntries(\r\n        Object.entries(this.allLogs).filter(\r\n          ([, config]) => config.enabled\r\n        )\r\n      );\r\n\r\n      const fullConfigKey = `${this.sessionPrefix}.${configName}`;\r\n      this.logManager.state.add(fullConfigKey, enabledConfigs);\r\n\r\n      this.snackBar.open(`Config \"${configName}\" has been saved.`, null, {\r\n        duration: 2000,\r\n      });\r\n      this.loadConfigsFromStateManager();\r\n    }\r\n  }\r\n\r\n  exportConfig(): void {\r\n    const fullConfigKey = `${this.sessionPrefix}.${this.selectedConfig}`;\r\n    const configData = this.logManager.state.cache[fullConfigKey];\r\n\r\n    if (configData) {\r\n      this.matDialog.open(ConfigEditorDialogComponent, {\r\n        width: '800px',\r\n        data: { configData },\r\n      });\r\n    } else {\r\n      this.snackBar.open(`Config \"${this.selectedConfig}\" not found.`, null, {\r\n        duration: 2000,\r\n      });\r\n    }\r\n  }\r\n\r\n  /* Specs Editor Dialog Functions */\r\n  hasLogSpecs(logKey: string): boolean {\r\n    const specs = this.allLogs[logKey]?.specs;\r\n    return !!specs && Object.keys(specs).length > 0;\r\n  }\r\n\r\n  openLogSpecs(logKey: string): void {\r\n    let logSpecs = this.allLogs[logKey].specs;\r\n    const dialogRef = this.matDialog.open(SpecsEditorDialogComponent, {\r\n      width: '800px',\r\n      data: { logSpecs: logSpecs },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        const updatedSpecs = JSON.parse(result);\r\n\r\n        this.allLogs[logKey].specs = updatedSpecs;\r\n\r\n        this.logManager.updateSpecs(this.allLogs);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"log-content fancy-scrollbar-light\">\r\n  <div class=\"menu\">\r\n    <button mat-button tippy=\"Toggles All Logs\" (click)=\"checkAll()\">\r\n      Toggle All\r\n    </button>\r\n\r\n    <div>\r\n      <button mat-icon-button (click)=\"saveConfig()\" tippy=\"Save Configuration\">\r\n        <mat-icon>save</mat-icon>\r\n      </button>\r\n      <button\r\n      mat-icon-button\r\n      [disabled]=\"selectedConfig === null\"\r\n      (click)=\"exportConfig()\"\r\n      tippy=\"Export configuration\"\r\n      >\r\n      <mat-icon>ios_share</mat-icon>\r\n    </button>\r\n    <mat-form-field color=\"accent\">\r\n      <mat-label>Configurations</mat-label>\r\n      <mat-select\r\n        [(value)]=\"selectedConfig\"\r\n        (selectionChange)=\"onConfigSelected($event.value)\"\r\n      >\r\n        <mat-option *ngFor=\"let config of configs\" [value]=\"config\">\r\n          {{ config }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    </div>\r\n  </div>\r\n  <div *ngFor=\"let log of allLogs | keyvalue\">\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        [id]=\"log.key\"\r\n        [name]=\"log.key\"\r\n        [checked]=\"isChecked(log.key)\"\r\n        (change)=\"toggleConfig(log.key)\"\r\n      />\r\n      {{ log.key }}\r\n      @if (hasLogSpecs(log.key)) {\r\n        <button (click)=\"openLogSpecs(log.key)\" tippy=\"Edit Log Specs\">\r\n          <mat-icon class=\"specs-icon\">data_object</mat-icon>\r\n        </button>\r\n      }\r\n    </label>\r\n  </div>\r\n</div>\r\n","import { Component, HostBinding, Inject } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogActions,\r\n  MatDialogClose,\r\n  MatDialogContent,\r\n  MatDialogModule,\r\n  MatDialogRef,\r\n  MatDialogTitle,\r\n} from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MonacoEditorComponent } from '../../../../../monaco-editor/monaco-editor.component';\r\nimport { TippyDirective } from '../../../../../shared/directives/tippy.directive';\r\n@Component({\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogModule,\r\n    FormsModule,\r\n    MonacoEditorComponent,\r\n    MatButtonModule,\r\n    MatDialogActions,                                                                                                                                                                                                                                \r\n    MatDialogClose,\r\n    MatDialogContent,\r\n    MatDialogTitle,\r\n    MatIconModule,\r\n    TippyDirective,\r\n  ],\r\n  selector: 'app-monaco-editor-dialog',\r\n  templateUrl: './specs-editor-dialog.component.html',\r\n})\r\nexport class SpecsEditorDialogComponent {\r\n\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  logSpecs: string;\r\n  focused = false;\r\n  editorOptions = {\r\n    theme: 'vs-light',\r\n    language: 'json',\r\n    readOnly: false,\r\n    automaticLayout: true,\r\n    minimap: { enabled: false },\r\n    scrollBeyondLastLine: false,\r\n  };\r\n  filename = 'log-specs.json';\r\n\r\n  constructor(\r\n    public dialog: MatDialogRef<SpecsEditorDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.logSpecs = JSON.stringify(data.logSpecs, null, 2);\r\n  }\r\n\r\n  onClose(): void {\r\n    this.dialog.close();\r\n  }\r\n\r\n  onSave(): void {\r\n    this.dialog.close(this.logSpecs);\r\n  }\r\n\r\n  onValueChanged(newValue: string): void {\r\n    this.logSpecs = newValue;\r\n  }\r\n\r\n  onFocused(focused: boolean): void {\r\n    this.focused = focused;\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Log Specs Editor</div>\r\n    <button mat-icon-button mat-dialog-close tippy=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\" style=\"padding-bottom: 0;\">\r\n    <app-monaco-editor\r\n      [filename]=\"filename\"\r\n      [value]=\"logSpecs\"\r\n      [options]=\"editorOptions\"\r\n      (valueChanged)=\"onValueChanged($event)\"\r\n      (focused)=\"onFocused(true)\"\r\n      (blurred)=\"onFocused(false)\"\r\n      style=\"height: 350px; width: 100%\"\r\n    />\r\n  </div>\r\n  <mat-dialog-actions>\r\n    <button mat-icon-button (click)=\"onSave()\" tippy=\"Save Specs\">\r\n      <mat-icon>save</mat-icon>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { AsyncPipe, DatePipe, NgClass } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { LogEntry, LoggingService, LogSeverities } from '../../../shared/services/logging.service';\r\nimport { LogsConfigComponent } from \"../logs-config/logs-config.component\";\r\n\r\n@Component({\r\n  selector: 'app-logs-dump',\r\n  templateUrl: './logs-dump.component.html',\r\n  styleUrls: ['./logs-dump.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    AsyncPipe,\r\n    DatePipe,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    LogsConfigComponent,\r\n    TippyDirective,\r\n],\r\n})\r\nexport class LogsDumpComponent {\r\n  LogSeverities = LogSeverities;\r\n  showSettings = false;\r\n\r\n  protected logs = this.loggingService.getLogsSignal();\r\n\r\n  constructor(private loggingService: LoggingService) { }\r\n\r\n  logToConsole(log: LogEntry): void {\r\n    switch (log.severity) {\r\n      case LogSeverities.Log:\r\n        console.log(log.label, log.error);\r\n        break;\r\n      case LogSeverities.Warn:\r\n        console.warn(log.label, log.error);\r\n        break;\r\n      case LogSeverities.Error:\r\n        console.error(log.label, log.error);\r\n        break;\r\n    }\r\n  }\r\n\r\n  toggleDialog(): void {\r\n    this.showSettings = !this.showSettings;\r\n  }\r\n}\r\n\r\n","<div class=\"logs-box fancy-scrollbar-light\">\r\n  <div class=\"logs-content\">\r\n    @if (!showSettings) {\r\n      @if (logs().length === 0) {\r\n        <div>Logs are empty</div>\r\n      } \r\n      @for (log of logs(); track log) {\r\n        <div\r\n          class=\"log-entry\"\r\n          [ngClass]=\"{\r\n            'log-error': log.severity === LogSeverities.Error,\r\n            'log-warn': log.severity === LogSeverities.Warn\r\n          }\"\r\n        >\r\n          <span class=\"log-entry-part log-entry-time\"\r\n            >{{ log.time | date : \"HH:mm:ss\" }}:</span\r\n          >\r\n          <span class=\"log-entry-part log-entry-label\">{{ log.label }}</span>\r\n          <span\r\n            class=\"log-entry-part log-entry-show\"\r\n            tippy=\"Log to console\"\r\n            (click)=\"logToConsole(log)\"\r\n          >\r\n            console\r\n          </span>\r\n        </div>\r\n      }\r\n    } @else {\r\n      <app-logs-config />\r\n    }\r\n  </div>\r\n\r\n  <div class=\"log-button\">\r\n    <button mat-icon-button tippy=\"Enable Logs UI\" (click)=\"toggleDialog()\">\r\n      <mat-icon>settings</mat-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../edit/shared/models/eav';\r\nimport { ItemInListIdentifier } from '../models/edit-form.model';\r\nimport { webApiEntityRoot } from './entity.service';\r\nimport { HttpServiceBase } from './http-service-base';\r\n\r\n@Injectable()\r\nexport class EntityEditService extends HttpServiceBase {\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.appId, force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n\r\ninterface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: ItemInListIdentifier;\r\n  [field: string]: any;\r\n}\r\n\r\ninterface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, EventEmitter, Directive, Optional, Input, Output, NgModule } from '@angular/core';\n\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a re-layout. This re-layout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * re-layout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nclass PendingCopy {\n    constructor(text, _document) {\n        this._document = _document;\n        const textarea = (this._textarea = this._document.createElement('textarea'));\n        const styles = textarea.style;\n        // Hide the element for display and accessibility. Set a fixed position so the page layout\n        // isn't affected. We use `fixed` with `top: 0`, because focus is moved into the textarea\n        // for a split second and if it's off-screen, some browsers will attempt to scroll it into view.\n        styles.position = 'fixed';\n        styles.top = styles.opacity = '0';\n        styles.left = '-999em';\n        textarea.setAttribute('aria-hidden', 'true');\n        textarea.value = text;\n        // Making the textarea `readonly` prevents the screen from jumping on iOS Safari (see #25169).\n        textarea.readOnly = true;\n        // The element needs to be inserted into the fullscreen container, if the page\n        // is in fullscreen mode, otherwise the browser won't execute the copy command.\n        (this._document.fullscreenElement || this._document.body).appendChild(textarea);\n    }\n    /** Finishes copying the text. */\n    copy() {\n        const textarea = this._textarea;\n        let successful = false;\n        try {\n            // Older browsers could throw if copy is not supported.\n            if (textarea) {\n                const currentFocus = this._document.activeElement;\n                textarea.select();\n                textarea.setSelectionRange(0, textarea.value.length);\n                successful = this._document.execCommand('copy');\n                if (currentFocus) {\n                    currentFocus.focus();\n                }\n            }\n        }\n        catch {\n            // Discard error.\n            // Initial setting of {@code successful} will represent failure here.\n        }\n        return successful;\n    }\n    /** Cleans up DOM changes used to perform the copy operation. */\n    destroy() {\n        const textarea = this._textarea;\n        if (textarea) {\n            textarea.remove();\n            this._textarea = undefined;\n        }\n    }\n}\n\n/**\n * A service for copying text to the clipboard.\n */\nclass Clipboard {\n    constructor(document) {\n        this._document = document;\n    }\n    /**\n     * Copies the provided text into the user's clipboard.\n     *\n     * @param text The string to copy.\n     * @returns Whether the operation was successful.\n     */\n    copy(text) {\n        const pendingCopy = this.beginCopy(text);\n        const successful = pendingCopy.copy();\n        pendingCopy.destroy();\n        return successful;\n    }\n    /**\n     * Prepares a string to be copied later. This is useful for large strings\n     * which take too long to successfully render and be copied in the same tick.\n     *\n     * The caller must call `destroy` on the returned `PendingCopy`.\n     *\n     * @param text The string to copy.\n     * @returns the pending copy operation.\n     */\n    beginCopy(text) {\n        return new PendingCopy(text, this._document);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: Clipboard, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: Clipboard, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: Clipboard, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/** Injection token that can be used to provide the default options to `CdkCopyToClipboard`. */\nconst CDK_COPY_TO_CLIPBOARD_CONFIG = new InjectionToken('CDK_COPY_TO_CLIPBOARD_CONFIG');\n/**\n * Provides behavior for a button that when clicked copies content into user's\n * clipboard.\n */\nclass CdkCopyToClipboard {\n    constructor(_clipboard, _ngZone, config) {\n        this._clipboard = _clipboard;\n        this._ngZone = _ngZone;\n        /** Content to be copied. */\n        this.text = '';\n        /**\n         * How many times to attempt to copy the text. This may be necessary for longer text, because\n         * the browser needs time to fill an intermediate textarea element and copy the content.\n         */\n        this.attempts = 1;\n        /**\n         * Emits when some text is copied to the clipboard. The\n         * emitted value indicates whether copying was successful.\n         */\n        this.copied = new EventEmitter();\n        /** Copies that are currently being attempted. */\n        this._pending = new Set();\n        if (config && config.attempts != null) {\n            this.attempts = config.attempts;\n        }\n    }\n    /** Copies the current text to the clipboard. */\n    copy(attempts = this.attempts) {\n        if (attempts > 1) {\n            let remainingAttempts = attempts;\n            const pending = this._clipboard.beginCopy(this.text);\n            this._pending.add(pending);\n            const attempt = () => {\n                const successful = pending.copy();\n                if (!successful && --remainingAttempts && !this._destroyed) {\n                    // We use 1 for the timeout since it's more predictable when flushing in unit tests.\n                    this._currentTimeout = this._ngZone.runOutsideAngular(() => setTimeout(attempt, 1));\n                }\n                else {\n                    this._currentTimeout = null;\n                    this._pending.delete(pending);\n                    pending.destroy();\n                    this.copied.emit(successful);\n                }\n            };\n            attempt();\n        }\n        else {\n            this.copied.emit(this._clipboard.copy(this.text));\n        }\n    }\n    ngOnDestroy() {\n        if (this._currentTimeout) {\n            clearTimeout(this._currentTimeout);\n        }\n        this._pending.forEach(copy => copy.destroy());\n        this._pending.clear();\n        this._destroyed = true;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkCopyToClipboard, deps: [{ token: Clipboard }, { token: i0.NgZone }, { token: CDK_COPY_TO_CLIPBOARD_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkCopyToClipboard, isStandalone: true, selector: \"[cdkCopyToClipboard]\", inputs: { text: [\"cdkCopyToClipboard\", \"text\"], attempts: [\"cdkCopyToClipboardAttempts\", \"attempts\"] }, outputs: { copied: \"cdkCopyToClipboardCopied\" }, host: { listeners: { \"click\": \"copy()\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkCopyToClipboard, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkCopyToClipboard]',\n                    host: {\n                        '(click)': 'copy()',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: Clipboard }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_COPY_TO_CLIPBOARD_CONFIG]\n                }] }], propDecorators: { text: [{\n                type: Input,\n                args: ['cdkCopyToClipboard']\n            }], attempts: [{\n                type: Input,\n                args: ['cdkCopyToClipboardAttempts']\n            }], copied: [{\n                type: Output,\n                args: ['cdkCopyToClipboardCopied']\n            }] } });\n\nclass ClipboardModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: ClipboardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: ClipboardModule, imports: [CdkCopyToClipboard], exports: [CdkCopyToClipboard] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: ClipboardModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: ClipboardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkCopyToClipboard],\n                    exports: [CdkCopyToClipboard],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_COPY_TO_CLIPBOARD_CONFIG, CdkCopyToClipboard, Clipboard, ClipboardModule, PendingCopy };\n"],"names":["JsonPipe","FormConfigService","ItemService","DataDumpComponent","constructor","itemService","formConfig","items","getManySignal","config","itemGuids","i0","ɵɵdirectiveInject","i1","i2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","DataDumpComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","styles","NgClass","inject","MatButtonModule","MatCardModule","MatIconModule","TippyDirective","classLog","UserPreferences","DebugTypes","footerPreferences","FormulaDesignerComponent","LogsDumpComponent","ɵɵlistener","EditDialogFooterComponent_Conditional_18_Template_button_click_0_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","toggleSize","preferences","expanded","EditDialogFooterComponent_Conditional_19_Template_button_click_0_listener","_r3","prefManager","toggle","ɵɵproperty","pinResource","ɵɵelement","ɵɵtemplate","EditDialogFooterComponent_Conditional_22_Case_1_Template","EditDialogFooterComponent_Conditional_22_Case_2_Template","EditDialogFooterComponent_Conditional_22_Case_3_Template","ɵɵconditional","tmp_2_0","tab","Data","Formulas","Logs","EditDialogFooterComponent","log","sxcVer","window","sxcVersion","substring","lastIndexOf","part","data","toggleDialog","type","s","hideTab","size","setMany","pinResources","pinned","EditDialogFooterComponent_Template","EditDialogFooterComponent_Template_button_click_2_listener","EditDialogFooterComponent_Template_button_click_7_listener","EditDialogFooterComponent_Template_button_click_12_listener","EditDialogFooterComponent_Conditional_18_Template","EditDialogFooterComponent_Conditional_19_Template","EditDialogFooterComponent_Conditional_22_Template","ɵɵpureFunction1","_c0","ɵɵtextInterpolate1","MatCard","MatButton","MatIconButton","i3","MatIcon","computed","signal","FormsModule","MatOptionModule","MatFormFieldModule","MatInputModule","MatMenuModule","MatSelectModule","MatSnackBar","TranslateService","transient","MonacoEditorComponent","eavConstants","EditPrep","ClipboardService","EntityEditService","FormulaDesignerService","defaultFormula","defaultListItemFormula","FormulaNewPickerTargets","ContentTypeService","SelectTargets","SnippetLabelSizePipe","entityOption_r3","entityGuid","_c2","hasFormula","label","fieldOption_r4","fieldName","targetOption_r6","target","FormulaDesignerComponent_Conditional_0_Conditional_16_Template_mat_select_ngModelChange_0_listener","$event","_r5","selectedChanged","Target","ɵɵrepeaterCreate","FormulaDesignerComponent_Conditional_0_Conditional_16_For_2_Template","ɵɵrepeaterTrackByIdentity","state","ɵɵrepeater","targetOptions","FormulaDesignerComponent_Conditional_0_Conditional_17_Template_input_ngModelChange_0_listener","_r7","FormulaDesignerComponent_Conditional_0_For_32_Template_div_click_0_listener","snippet_r9","_r8","$implicit","clipboard","copyToClipboard","code","FormulaDesignerComponent_Conditional_0_For_35_Template_div_click_0_listener","snippet_r11","_r10","result","value","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_0_Conditional_0_Template","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_0_Conditional_1_Template","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_0_Conditional_2_Template","undefined","isOnlyPromise","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_0_Template","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_1_Template","isError","FormulaDesignerComponent_Conditional_0_Conditional_60_Template_button_click_0_listener","_r12","save","editMode","tmp_3_0","currentFormula","sourceCode","tmp_4_0","saving","FormulaDesignerComponent_Conditional_0_Template_mat_select_ngModelChange_4_listener","Entity","FormulaDesignerComponent_Conditional_0_For_6_Template","_forTrack0","FormulaDesignerComponent_Conditional_0_Template_mat_select_ngModelChange_10_listener","Field","FormulaDesignerComponent_Conditional_0_For_12_Template","_forTrack1","FormulaDesignerComponent_Conditional_0_Conditional_16_Template","FormulaDesignerComponent_Conditional_0_Conditional_17_Template","FormulaDesignerComponent_Conditional_0_Template_button_click_18_listener","toggleFreeText","FormulaDesignerComponent_Conditional_0_Template_app_monaco_editor_valueChanged_29_listener","formulaChanged","FormulaDesignerComponent_Conditional_0_Template_app_monaco_editor_focused_29_listener","onFocused","FormulaDesignerComponent_Conditional_0_Template_app_monaco_editor_blurred_29_listener","FormulaDesignerComponent_Conditional_0_For_32_Template","_forTrack2","FormulaDesignerComponent_Conditional_0_Conditional_33_Template","FormulaDesignerComponent_Conditional_0_For_35_Template","FormulaDesignerComponent_Conditional_0_Conditional_40_Template","FormulaDesignerComponent_Conditional_0_Template_button_click_42_listener","toggleEdit","FormulaDesignerComponent_Conditional_0_Template_button_click_50_listener","deleteFormula","FormulaDesignerComponent_Conditional_0_Template_button_click_55_listener","reset","FormulaDesignerComponent_Conditional_0_Conditional_60_Template","FormulaDesignerComponent_Conditional_0_Template_button_click_61_listener","run","entityOptions","fieldsOptions","freeTextTarget","ɵɵpureFunction2","focused","filename","tmp_11_0","v2JsTypings","monacoOptions","_c1","v1DataSnippets","tmp_16_0","length","v1ContextSnippets","isDeleted","menu_r13","tmp_20_0","sourceCodeId","allowSaveFormula","tmp_22_0","designerSvc","entitiesService","snackBar","contentTypeService","translate","loadError","enableFormulaSave","minimap","enabled","lineHeight","lineNumbers","lineDecorationsWidth","folding","scrollBeyondLastLine","tabSize","fixedOverflowWidgets","formId","designerState","formulaResult","currentTargetOptions","Object","values","includes","ngOnInit","keys","itemSettingsServices","setDesignerOpen","initAfterItemSettingsAreReady","ngOnDestroy","newState","selectedSettingsSvc","allProps","set","formula","cache","updateFormulaFromEditor","designerIdentifier","oldState","designer","identifier","resetFormula","retriggerFormulas","#designerIdentifier","id","item","get","attributeDef","getAttributeOfItem","atAllFieldSettings","Metadata","find","m","Type","Id","open","duration","create","contentTypes","formulas","Title","Formula","Enabled","ParentRelationship","relationship","Guid","subscribe","savedFormula","updateSaved","update","sourceCodeGuid","title","confirmed","confirm","instant","delete","next","error","_","i4","i5","FormulaDesignerComponent_Template","FormulaDesignerComponent_Conditional_0_Template","i6","MatFormField","MatLabel","i7","MatSelect","i8","MatOption","i9","DefaultValueAccessor","NgControlStatus","NgModel","i10","MatInput","i11","MatIconAnchor","i12","i13","MatMenu","MatMenuItem","MatMenuTrigger","maxLength","transform","pure","ClipboardModule","MAT_DIALOG_DATA","MatDialogModule","MatDialogRef","ConfigEditorDialogComponent","dialog","hostClass","editorOptions","theme","language","readOnly","automaticLayout","selectedConfig","JSON","stringify","configData","hostVars","hostBindings","ConfigEditorDialogComponent_HostBindings","ɵɵhostProperty","ConfigEditorDialogComponent_Template_app_monaco_editor_focused_8_listener","ConfigEditorDialogComponent_Template_app_monaco_editor_blurred_8_listener","ConfigEditorDialogComponent_Template_button_click_10_listener","MatDialogClose","MatDialogActions","encapsulation","CommonModule","MatDialog","LogManager","LoggingService","LogSeverities","SpecsEditorDialogComponent","config_r1","LogsConfigComponent_div_16_Conditional_4_Template_button_click_0_listener","log_r3","ctx_r3","openLogSpecs","key","LogsConfigComponent_div_16_Template_input_change_2_listener","_r2","toggleConfig","LogsConfigComponent_div_16_Conditional_4_Template","isChecked","hasLogSpecs","LogsConfigComponent","loggingService","matDialog","logManager","singleton","allLogs","mergeAllSpecs","configs","sessionPrefix","logs","getLogsSignal","loadConfigsFromStateManager","checkAll","allChecked","every","specs","spec","name","savedConfigs","filter","startsWith","map","replace","onConfigSelected","configName","forEach","logKey","fullConfigKey","shouldEnable","saveConfig","prompt","enabledConfigs","fromEntries","entries","add","exportConfig","width","logSpecs","dialogRef","afterClosed","updatedSpecs","parse","updateSpecs","LogsConfigComponent_Template","LogsConfigComponent_Template_button_click_2_listener","LogsConfigComponent_Template_button_click_5_listener","LogsConfigComponent_Template_button_click_8_listener","ɵɵtwoWayListener","LogsConfigComponent_Template_mat_select_valueChange_14_listener","ɵɵtwoWayBindingSet","LogsConfigComponent_Template_mat_select_selectionChange_14_listener","LogsConfigComponent_mat_option_15_Template","LogsConfigComponent_div_16_Template","ɵɵtwoWayProperty","NgForOf","KeyValuePipe","onClose","close","onSave","onValueChanged","newValue","SpecsEditorDialogComponent_HostBindings","SpecsEditorDialogComponent_Template_app_monaco_editor_valueChanged_8_listener","SpecsEditorDialogComponent_Template_app_monaco_editor_focused_8_listener","SpecsEditorDialogComponent_Template_app_monaco_editor_blurred_8_listener","SpecsEditorDialogComponent_Template_button_click_10_listener","DatePipe","LogsDumpComponent_Conditional_2_For_2_Template_span_click_6_listener","log_r2","ctx_r2","logToConsole","severity","Error","Warn","ɵɵpipeBind2","time","LogsDumpComponent_Conditional_2_Conditional_0_Template","LogsDumpComponent_Conditional_2_For_2_Template","showSettings","Log","console","warn","LogsDumpComponent_Template","LogsDumpComponent_Conditional_2_Template","LogsDumpComponent_Conditional_3_Template","LogsDumpComponent_Template_button_click_5_listener","webApiEntityRoot","HttpServiceBase","contentType","entity","http","post","params","appId","zoneId","entityId","tryForce","apiUrl","toString","force","__ngFactoryType__","factory","ɵfac","DOCUMENT","Injectable","Inject","InjectionToken","EventEmitter","Directive","Optional","Input","Output","NgModule","PendingCopy","text","_document","textarea","_textarea","createElement","style","position","top","opacity","left","setAttribute","fullscreenElement","body","appendChild","copy","successful","currentFocus","activeElement","select","setSelectionRange","execCommand","focus","destroy","remove","Clipboard","document","pendingCopy","beginCopy","Clipboard_Factory","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","providedIn","ngDevMode","ɵsetClassMetadata","args","decorators","CDK_COPY_TO_CLIPBOARD_CONFIG","CdkCopyToClipboard","_clipboard","_ngZone","attempts","copied","_pending","Set","remainingAttempts","pending","attempt","_destroyed","_currentTimeout","runOutsideAngular","setTimeout","emit","clearTimeout","clear","CdkCopyToClipboard_Factory","NgZone","ɵdir","ɵɵdefineDirective","CdkCopyToClipboard_HostBindings","CdkCopyToClipboard_click_HostBindingHandler","inputs","outputs","selector","host","ClipboardModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[18]}