{"version":3,"file":"projects_eav-ui_src_app_code-editor_code-editor_component_ts-projects_eav-ui_src_app_shared_m-d39178.73bbd3186a5e5b70.js","mappings":"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","names":["ExtendedFabSpeedDialActionDirective","constructor","elementRef","this","disabled","input","ngOnChanges","changes","nativeElement","toggleAttribute","static","__ngFactoryType__","i0","_angular_core__WEBPACK_IMPORTED_MODULE_1__","FsC","selectors","inputs","features","SaveCloseButtonBase","label","icon","ngClass","action","output","isDisabled","onClick","event","emit","outputs","ExtendedFabSpeedDialTriggerContentDirective","templateRef","_angular_core__WEBPACK_IMPORTED_MODULE_0__","ExtendedFabSpeedDialActionsContentDirective","isEscape","key","isCtrlS","ctrlKey","metaKey","isCtrlEnter","ExtendedFabSpeedDialTriggerDirective","ctx_r0","snackBarData","fileName","codeFile","edition","CodeAndEditionWarningsComponent_Conditional_2_Conditional_1_Template","CodeAndEditionWarningsComponent_Conditional_2_Conditional_3_Template","otherEditions","_r2","openCodeBehind","CodeAndEditionWarningsComponent","snackRef","dismissWithAction","i1","MAT_SNACK_BAR_DATA","debug_node_JnOYh9kg","VBU","decls","vars","consts","template","rf","ctx","CodeAndEditionWarningsComponent_Conditional_1_Template","CodeAndEditionWarningsComponent_Conditional_2_Template","CodeAndEditionWarningsComponent_Conditional_4_Template","MatButtonModule","i2","styles","translateLoaderFactoryCode","http","TranslateLoaderWithErrorHandling","window","sxcVersion","CodeEditorHelper","updateSingleViewInfo","currentViewInfos","viewKey","updates","index","findIndex","v","RxHelpers","objectsEqual","updatedViewInfo","slice","processLoadedView","viewInfos","view","snippets","tooltips","showWarningsCallback","templates","updatedViewInfos","explorerSnipps","sets","editorSnipps","list","savedCode","Code","Explorers","Templates","Snippets","ObjectToArrayPipe","transform","obj","Array","isArray","Object","values","EJ8","pure","_r8","snippet_r7","$implicit","ctx_r2","toggleMore","toggledMores","includes","link_r9","url","name","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_7_For_4_Template","help","links","link_r12","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_8_For_1_Conditional_6_For_4_Template","more_r11","_r10","addSnippet","snip","toggleInfo","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_8_For_1_Conditional_6_Template","toggledInfos","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_8_For_1_Template","more","_r6","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_4_Template","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_7_Template","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_8_Template","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Template","folder_r5","value","_r4","toggleFolder","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_Template","section_r2","toggledFolders","CodeSnippetsComponent_For_2_Conditional_7_For_1_Template","_r1","toggleSection","CodeSnippetsComponent_For_2_Conditional_7_Template","toggledSections","CodeSnippetsComponent","insertSnippet","snippet","ArrayHelpers","toggleInArray","CodeSnippetsComponent_For_2_Template","MatIconModule","MatRippleModule","KeyValuePipe","TranslateModule","i3","ClickStopPropagationDirective","TippyDirective","SafeHtmlPipe","calculateTree","tree","parent","paths","Path","split","last","length","pathFromRoot","i","path","existing","find","item","children","depth","isShared","Shared","isFolder","push","DepthPaddingPipe","sanitizer","padding","bypassSecurityTrustStyle","SortItemsPipe","items","sort","item1","item2","CodeTemplatesComponent_For_3_ng_container_0_Template","fileOrFolder_r3","_c0","item_r2","item_r5","ctx_r5","openTemplate","_c1","isToggled","CodeTemplatesComponent_ng_template_5_Conditional_1_Conditional_11_For_1_ng_container_0_Template","item1_r8","CodeTemplatesComponent_ng_template_5_Conditional_1_Conditional_11_For_1_Template","_r7","toggleItem","addFile","CodeTemplatesComponent_ng_template_5_Conditional_1_Conditional_11_Template","_c2","CodeTemplatesComponent_ng_template_5_Conditional_0_Template","CodeTemplatesComponent_ng_template_5_Conditional_1_Template","CodeTemplatesComponent","openView","createTemplate","toggledItemsApp","toggledItemsShared","calculateTreeAppShared","filter","f","previousView","previousValue","FileName","IsShared","showFileInTree","shared","folder","file","toggledItems","CodeTemplatesComponent_For_3_Template","_forTrack0","CodeTemplatesComponent_ng_template_5_Template","menu_r9","NgTemplateOutlet","NgClass","MatMenuModule","SnippetsService","HttpServiceBase","translate","super","getTooltips","language","getHttpApiUrl","params","getSnippets","pipe","map","res","relevant","#filterAwayNotNeededSnippetsList","standardAndInputSnips","#extractInputTypeSnippets","#initSnippetsWithConfig","standardArray","inputTypeSnippets","keyPrefixes","keyPrefixIndex","Type","indexOf","newList","itm","setHasPrefix","set","substring","inputTypeArray","#catalogInputTypeSnippets","inputTypeList","undefined","subset","templateConfiguration","#makeTree","Content","assign","Fields","PresentationFields","TypeContent","#loadContentType","TypeContentPresentation","HasList","List","TypeList","TypeListPresentation","HasApp","App","Resources","Settings","o","reformatted","#label","content","#help","#linksList","#getHelpKey","result","instant","addition","linksString","llist","l","pair","link","trim","target","type","prefix","#getFields","AppId","then","fields","field","fieldname","StaticName","#valuePlaceholder","Metadata","merged","Notes","toLowerCase","snipDefaults","cloneDeep","#attachSnippets","InputType","std","val","replace","appId","staticName","fetchPromise","webApiFieldsAll","appid","toString","DataTypeCatalog","Empty","fld","md","All","inputType","genericSnippet","fieldType","typeSnips","concat","fieldSnips","g","#localizeGenericSnippet","collapse","objName","fieldName","root_effect_scheduler_DCy1y1b8","jDH","factory","ɵfac","tab_r2","CodeEditorComponent_Conditional_11_For_2_Conditional_2_Template","CodeEditorComponent_Conditional_11_For_2_Conditional_6_Template","CodeEditorComponent_Conditional_11_For_2_Conditional_7_Template","closeEditor","isActive","isModified","isLoading","CodeEditorComponent_Conditional_11_For_2_Template","tabs","$event","tmp_2_0","codeChanged","active","tmp_1_0","monacoOptions","tmp_4_0","tmp_5_0","_r5","save","CodeEditorComponent","BaseComponent","#sourceSvc","#snippetSvc","#titleSvc","#openViews","#viewInfos","#urlItems","#documentTitle","#notLoadedViews","#createViewObservables","view$","get","share","snippets$","switchMap","tooltips$","Extension","forkJoin","of","context","route","snackBar","zone","matDialog","viewContainerRef","activeExplorer","theme","tabSize","fixedOverflowWidgets","transient","SourceService","Title","signal","activeView","computed","openViews","viewInfo","activeViewKey","activeViewInfo","some","init","codeItems","JSON","parse","sessionStorage","getItem","keyItems","keyIsShared","forEach","codeItem","startsWith","effect","notLoaded","subscribe","results","#showCodeAndEditionWarnings","bind","newTitle","getTitle","setTitle","ngOnInit","initialViews","EntityId","#attachListeners","getAllPromise","ngOnDestroy","toggleExplorer","explorer","createFileDialogData","global","purpose","open","CreateFileDialogComponent","autoFocus","data","width","afterClosed","create","templateKey","files","monacoEditorRef","code","selectedIndex","selectedViewInfo","newViewInfo","oldActiveView","oldOpenViews","newOpenViews","newActiveView","codeToSave","next","duration","newViewInfos","error","pathAndName","pathSeparator","lastIndexOf","pathWithSlash","fullName","nameCode","endsWith","Edition","snackBarRef","openFromComponent","onAction","containerInstance","snackBarConfig","runOutsideAngular","subscriptions","add","fromEvent","preventDefault","returnValue","run","i4","viewQuery","MonacoEditorComponent","provide","TranslateLoader","useFactory","deps","HttpClient","TranslateService","CodeEditorComponent_Conditional_11_Template","CodeEditorComponent_Conditional_12_Template","CodeEditorComponent_Conditional_13_Template","tmp_7_0","tmp_9_0","i5","MatProgressSpinnerModule","i6","MonacoEditorComponent_1","i7","ToggleDebugDirective","ExtendedFabSpeedDialComponent","open$","BehaviorSubject","ngAfterContentInit","combineLatest","distinctUntilChanged","actionButtons","startWith","btn","all","max","Math","min","step","transitionDuration","style","complete","setOpen","pointerType","_angular_core__WEBPACK_IMPORTED_MODULE_6__","contentQueries","dirIndex","ElementRef","trigger","actions","encapsulation","globalConfigService","navigator","platform","match","shiftKey","altKey","toggleDebugEnabled","getSelection","removeAllRanges","hostBindings","ctx_r1","SaveCloseButtonFabComponent","SaveCloseButtonFabComponent_ng_template_1_Template"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial-action.directive.ts","./projects/eav-ui/src/app/shared/modules/save-close-button/save-close-button-base.directive.ts","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial-trigger-content.directive.ts","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial-actions-content.directive.ts","./projects/eav-ui/src/app/edit/dialog/main/keyboard-shortcuts.ts","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial-trigger.directive.ts","./projects/eav-ui/src/app/code-editor/code-and-edition-warnings/code-and-edition-warnings.component.html","./projects/eav-ui/src/app/code-editor/code-and-edition-warnings/code-and-edition-warnings.component.ts","./projects/eav-ui/src/app/code-editor/code-editor-translate-loader-factory.ts","./projects/eav-ui/src/app/code-editor/code-editor.helper.ts","./projects/eav-ui/src/app/code-editor/code-editor.models.ts","./projects/eav-ui/src/app/code-editor/code-snippets/object-to-array.pipe.ts","./projects/eav-ui/src/app/code-editor/code-snippets/code-snippets.component.html","./projects/eav-ui/src/app/code-editor/code-snippets/code-snippets.component.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.helpers.ts","./projects/eav-ui/src/app/code-editor/code-templates/depth-padding.pipe.ts","./projects/eav-ui/src/app/code-editor/code-templates/order-items.pipe.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.component.html","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.component.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.models.ts","./projects/eav-ui/src/app/code-editor/services/snippets.service.ts","./projects/eav-ui/src/app/code-editor/code-editor.component.html","./projects/eav-ui/src/app/code-editor/code-editor.component.ts","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial.component.ts","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial.component.html","./projects/eav-ui/src/app/shared/directives/toggle-debug.directive.ts","./projects/eav-ui/src/app/shared/modules/save-close-button-fab/save-close-button-fab.component.html","./projects/eav-ui/src/app/shared/modules/save-close-button-fab/save-close-button-fab.component.ts"],"sourcesContent":["import { Directive, ElementRef, input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n// tslint:disable-next-line:directive-selector\r\n@Directive({\r\n  selector: '[extended-fab-speed-dial-action]',\r\n})\r\nexport class ExtendedFabSpeedDialActionDirective implements OnChanges {\r\n  disabled = input<boolean>(false);\r\n\r\n  constructor(private elementRef: ElementRef<HTMLElement>) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.disabled != null) {\r\n      this.elementRef.nativeElement.toggleAttribute('disabled', this.disabled());\r\n    }\r\n  }\r\n}\r\n","import { Directive, input, output } from '@angular/core';\r\n\r\n// 2pp: needs to be a directive in order to make input, output functions work\r\n@Directive()\r\nexport abstract class SaveCloseButtonBase {\r\n  /** Button label, can be a translation key or plain text */\r\n  label = input<string>('Form.Buttons.SaveAndClose');\r\n\r\n  /** Material icon name to show */\r\n  icon = input<string>('done');\r\n\r\n  /** Classes to apply to the button */\r\n  ngClass = input<string>('');\r\n\r\n  /** If true, disables the button. Can also be a function returning boolean */\r\n  disabled = input<boolean | (() => boolean)>(false);\r\n\r\n  /** Emits when the button is clicked */\r\n  action = output<Event>();\r\n\r\n  /** Derived property for disabled state */\r\n  get isDisabled(): boolean {\r\n    return typeof this.disabled === 'function' ? !!this.disabled() : !!this.disabled;\r\n  }\r\n\r\n  onClick(event: Event) {\r\n    if (!this.isDisabled) {\r\n      this.action.emit(event);\r\n    }\r\n  }\r\n}","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n// tslint:disable-next-line:directive-selector\r\n@Directive({\r\n  selector: '[extendedFabSpeedDialTriggerContent]',\r\n})\r\nexport class ExtendedFabSpeedDialTriggerContentDirective {\r\n  constructor(public templateRef: TemplateRef<unknown>) { }\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n// tslint:disable-next-line:directive-selector\r\n@Directive({\r\n  selector: '[extendedFabSpeedDialActionsContent]',\r\n})\r\nexport class ExtendedFabSpeedDialActionsContentDirective {\r\n  constructor(public templateRef: TemplateRef<unknown>) { }\r\n}\r\n","/**\r\n * Checks if the keyboard event is triggered by the Escape key.\r\n * @param event KeyboardEvent\r\n * @returns boolean\r\n */\r\nexport function isEscape(event: KeyboardEvent): boolean {\r\n  return event.key === 'Escape';\r\n}\r\n\r\n/**\r\n * Checks if the keyboard event is triggered by Ctrl + S (or Cmd + S on Mac).\r\n * @param event KeyboardEvent\r\n * @returns boolean\r\n */\r\nexport function isCtrlS(event: KeyboardEvent): boolean {\r\n  return (event.key === 's' || event.key === 'S') && (event.ctrlKey || event.metaKey);\r\n}\r\n\r\n/**\r\n * Checks if the keyboard event is triggered by Ctrl + Enter (or Cmd + Enter on Mac).\r\n * @param event KeyboardEvent\r\n * @returns boolean\r\n */\r\nexport function isCtrlEnter(event: KeyboardEvent): boolean {\r\n  return event.key === 'Enter' && (event.ctrlKey || event.metaKey);\r\n}","import { Directive, ElementRef, input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n// tslint:disable-next-line:directive-selector\r\n@Directive({\r\n  selector: '[extended-fab-speed-dial-trigger]',\r\n})\r\nexport class ExtendedFabSpeedDialTriggerDirective implements OnChanges {\r\n  disabled = input<boolean>(false);\r\n\r\n  constructor(private elementRef: ElementRef<HTMLElement>) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.disabled != null) {\r\n      this.elementRef.nativeElement.toggleAttribute('disabled', this.disabled());\r\n    }\r\n  }\r\n}\r\n","<div class=\"messages\">\r\n  @if (snackBarData.codeFile) {\r\n  <div>\"{{ snackBarData.fileName }}\" also has a code-behind file \"{{ snackBarData.codeFile }}\".</div>\r\n  <br>\r\n  }\r\n\r\n  @if (snackBarData.otherEditions) {\r\n  <div>\r\n    @if (snackBarData.edition) {\r\n    You are editing \"{{ snackBarData.edition }}\" edition.\r\n    }\r\n    There are {{ snackBarData.otherEditions }} other editions of \"{{ snackBarData.fileName }}\".\r\n    @if (!snackBarData.edition) {\r\n    You may be editing an edition which is not the one you see.\r\n    }\r\n    See <a href=\"https://go.2sxc.org/polymorphism\" target=\"_blank\">docs</a>.\r\n  </div>\r\n  }\r\n</div>\r\n\r\n<div class=\"actions\">\r\n  @if (snackBarData.codeFile) {\r\n  <button mat-button color=\"primary\" (click)=\"openCodeBehind()\">\r\n    Open code-behind file\r\n  </button>\r\n  }\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\nimport { CodeAndEditionWarningsSnackBarData } from './code-and-edition-warnings.models';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@Component({\r\n    selector: 'app-code-and-edition-warnings',\r\n    templateUrl: './code-and-edition-warnings.component.html',\r\n    styleUrls: ['./code-and-edition-warnings.component.scss'],\r\n    imports: [MatButtonModule]\r\n})\r\nexport class CodeAndEditionWarningsComponent {\r\n  constructor(\r\n    private snackRef: MatSnackBarRef<CodeAndEditionWarningsComponent>,\r\n    @Inject(MAT_SNACK_BAR_DATA) public snackBarData: CodeAndEditionWarningsSnackBarData,\r\n  ) { }\r\n\r\n  openCodeBehind(): void {\r\n    this.snackBarData.openCodeBehind = true;\r\n    this.snackRef.dismissWithAction();\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { TranslateLoader } from \"@ngx-translate/core\";\r\nimport { EavWindow } from \"../shared/models/eav-window.model\";\r\nimport { TranslateLoaderWithErrorHandling } from \"../shared/translation\";\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport function translateLoaderFactoryCode(http: HttpClient): TranslateLoader {\r\n  return new TranslateLoaderWithErrorHandling(http, './i18n/code-editor.', `.js?${window.sxcVersion}`);\r\n}\r\n","import { RxHelpers } from \"../shared/rxJs/rx.helpers\";\r\nimport { ViewInfo, ViewKey } from \"./code-editor.models\";\r\nimport { FileAsset } from \"./models/file-asset.model\";\r\nimport { Snippet, SnippetsSets } from \"./models/snippet.model\";\r\nimport { SourceView } from \"./models/source-view.model\";\r\nimport { Tooltip } from \"./models/tooltip.model\";\r\n\r\n/**\r\n * Helper class providing utility methods for managing code editor views.\r\n * Contains stateless methods for updating and processing view information.\r\n */\r\nexport class CodeEditorHelper {\r\n    /**\r\n     * Updates a single ViewInfo in a list of ViewInfos.\r\n     * If the ViewInfo with the given viewKey exists, it updates it with the provided data.\r\n     * If it doesn't exist, it adds a new ViewInfo to the list.\r\n     * @returns A new array with the updated ViewInfo\r\n     */\r\n    static updateSingleViewInfo(currentViewInfos: ViewInfo[], viewKey: ViewKey, updates: Partial<ViewInfo> = {}): ViewInfo[] {\r\n        const index = currentViewInfos.findIndex(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n\r\n        // If the viewKey is not found, add a new ViewInfo\r\n        if (index < 0)\r\n            return [...currentViewInfos, { viewKey, ...updates }];\r\n\r\n        // Otherwise update the existing ViewInfo\r\n        const updatedViewInfo = { ...currentViewInfos[index], ...updates };\r\n        return [\r\n            ...currentViewInfos.slice(0, index),\r\n            updatedViewInfo,\r\n            ...currentViewInfos.slice(index + 1)\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Processes a loaded view and updates its ViewInfo with the loaded data.\r\n     * Also triggers warning callbacks for the processed view.\r\n     * @returns A new array with the updated ViewInfo\r\n     */\r\n    static processLoadedView(\r\n        viewInfos: ViewInfo[],\r\n        viewKey: ViewKey,\r\n        view: SourceView,\r\n        snippets: { list: Snippet[]; sets: SnippetsSets; },\r\n        tooltips: Tooltip[],\r\n        showWarningsCallback: (viewKey: ViewKey, view: SourceView, templates: FileAsset[]) => void,\r\n        templates: FileAsset[]\r\n    ): ViewInfo[] {\r\n        // Update ViewInfo with the loaded data\r\n        const updatedViewInfos = this.updateSingleViewInfo(viewInfos, viewKey, {\r\n            view,\r\n            explorerSnipps: snippets.sets,\r\n            editorSnipps: snippets.list,\r\n            tooltips,\r\n            savedCode: view.Code\r\n        });\r\n\r\n        // Show warnings based on the loaded view\r\n        showWarningsCallback(viewKey, view, templates);\r\n\r\n        return updatedViewInfos;\r\n    }\r\n}","import { Snippet, SnippetsSets } from './models/snippet.model';\r\nimport { SourceView } from './models/source-view.model';\r\nimport { Tooltip } from './models/tooltip.model';\r\n\r\nexport interface Tab {\r\n  viewKey: ViewKey;\r\n  label: string;\r\n  isActive: boolean;\r\n  isModified: boolean;\r\n  isLoading: boolean;\r\n}\r\n\r\nexport const Explorers = {\r\n  Templates: 'Templates',\r\n  Snippets: 'Snippets',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n\r\nexport interface ViewInfo {\r\n  viewKey: ViewKey;\r\n  view?: SourceView;\r\n  explorerSnipps?: SnippetsSets;\r\n  editorSnipps?: Snippet[];\r\n  tooltips?: Tooltip[];\r\n  savedCode?: string;\r\n}\r\n\r\nexport interface ViewKey {\r\n  /** ViewKey is templateId or path */\r\n  key: string;\r\n  shared: boolean;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'objectToArray',\r\n})\r\nexport class ObjectToArrayPipe implements PipeTransform {\r\n  transform(obj: Record<string, any> | Record<string, any>[]): Record<string, any>[] {\r\n    if (obj == null) return;\r\n\r\n    if (Array.isArray(obj)) { return obj; }\r\n\r\n    return Object.values(obj);\r\n  }\r\n}\r\n","<div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n  @for (section of snippets() | keyvalue; track section) {\r\n    <div>\r\n      <div\r\n        class=\"collapsible-header section\"\r\n        [tippyTranslate]=\"'SourceEditorSnippets.' + section.key + '.Help'\"\r\n        tippyShowDelay=\"750\"\r\n        (click)=\"toggleSection(section.key)\"\r\n      >\r\n        <mat-icon>\r\n          {{ toggledSections.includes(section.key) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n        </mat-icon>\r\n        <span>{{ 'SourceEditorSnippets.' + section.key + '.Title' | translate }}</span>\r\n      </div>\r\n      @if (toggledSections.includes(section.key)) {\r\n        @for (folder of section.value | keyvalue; track folder) {\r\n          <div>\r\n            <div\r\n              class=\"collapsible-header folder\"\r\n              [tippyTranslate]=\"'SourceEditorSnippets.' + section.key + '.' + folder.key + '.Help'\"\r\n              tippyShowDelay=\"750\"\r\n              (click)=\"toggleFolder(folder.key)\"\r\n            >\r\n              <mat-icon>\r\n                {{ toggledFolders.includes(folder.key) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n              </mat-icon>\r\n              <span>{{ 'SourceEditorSnippets.' + section.key + '.' + folder.key + '.Title' | translate }}</span>\r\n            </div>\r\n            @if (toggledFolders.includes(folder.key)) {\r\n              @for (snippet of folder.value | objectToArray; track snippet) {\r\n                <div class=\"snippet\">\r\n                  <div class=\"snippet-label\">\r\n                    <div matRipple class=\"text\" [tippy]=\"snippet.snip\" tippyShowDelay=\"750\" (click)=\"addSnippet(snippet.snip)\">\r\n                      {{ snippet.label }}\r\n                    </div>\r\n                    @if (snippet.more) {\r\n                      <mat-icon tippy=\"Show More\" tippyShowDelay=\"750\" (click)=\"toggleMore(snippet.key)\">\r\n                        {{ toggledMores.includes(snippet.key) ? 'more_vert' : 'more_horiz' }}\r\n                      </mat-icon>\r\n                    }\r\n                    <mat-icon tippy=\"Show Help\" tippyShowDelay=\"750\" appClickStopPropagation (click)=\"toggleInfo(snippet.key)\"\r\n                      >info</mat-icon\r\n                    >\r\n                  </div>\r\n                  @if (toggledInfos.includes(snippet.key)) {\r\n                    <div class=\"snippet-help\">\r\n                      <div class=\"text\" [innerHTML]=\"snippet.help | safeHtml\"></div>\r\n                      @for (link of snippet.links; track link) {\r\n                        <div>\r\n                          <a [href]=\"link.url\" target=\"_blank\">{{ link.name }}</a>\r\n                        </div>\r\n                      }\r\n                    </div>\r\n                  }\r\n                  @if (toggledMores.includes(snippet.key)) {\r\n                    @for (more of snippet.more | objectToArray; track more) {\r\n                      <div>\r\n                        <div class=\"snippet-label\">\r\n                          <div matRipple class=\"text text-more\" [tippy]=\"more.snip\" tippyShowDelay=\"750\" (click)=\"addSnippet(more.snip)\">\r\n                            {{ more.label }}\r\n                          </div>\r\n                          <mat-icon tippy=\"Show Help\" tippyShowDelay=\"750\" appClickStopPropagation (click)=\"toggleInfo(more.key)\"\r\n                            >info</mat-icon\r\n                          >\r\n                        </div>\r\n                        @if (toggledInfos.includes(more.key)) {\r\n                          <div class=\"snippet-help snippet-help-more\">\r\n                            <div class=\"text\" [innerHTML]=\"more.help | safeHtml\"></div>\r\n                            @for (link of more.links; track link) {\r\n                              <div>\r\n                                <a [href]=\"link.url\" target=\"_blank\">{{ link.name }}</a>\r\n                              </div>\r\n                            }\r\n                          </div>\r\n                        }\r\n                      </div>\r\n                    }\r\n                  }\r\n                </div>\r\n              }\r\n            }\r\n          </div>\r\n        }\r\n      }\r\n    </div>\r\n  }\r\n</div>\r\n","import { KeyValuePipe } from '@angular/common';\r\nimport { Component, input, output } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\nimport { SnippetsSets } from '../models/snippet.model';\r\nimport { ObjectToArrayPipe } from './object-to-array.pipe';\r\n\r\n@Component({\r\n    selector: 'app-code-snippets',\r\n    templateUrl: './code-snippets.component.html',\r\n    styleUrls: ['./code-snippets.component.scss'],\r\n    imports: [\r\n        MatIconModule,\r\n        MatRippleModule,\r\n        KeyValuePipe,\r\n        TranslateModule,\r\n        ObjectToArrayPipe,\r\n        ClickStopPropagationDirective,\r\n        TippyDirective,\r\n        SafeHtmlPipe,\r\n    ]\r\n})\r\nexport class CodeSnippetsComponent {\r\n  snippets = input<SnippetsSets>();\r\n  insertSnippet = output<string>();\r\n  toggledSections: string[] = [];\r\n  toggledFolders: string[] = [];\r\n  toggledInfos: string[] = [];\r\n  toggledMores: string[] = [];\r\n\r\n  constructor() { }\r\n\r\n  addSnippet(snippet: string): void {\r\n    this.insertSnippet.emit(snippet);\r\n  }\r\n\r\n  toggleSection(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledSections);\r\n  }\r\n\r\n  toggleFolder(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledFolders);\r\n  }\r\n\r\n  toggleInfo(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledInfos);\r\n  }\r\n\r\n  toggleMore(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledMores);\r\n  }\r\n}\r\n","import { FileAsset } from '../models/file-asset.model';\r\nimport { TreeItem } from '../models/tree-item.model';\r\nimport { appSharedRoot } from './code-templates.models';\r\n\r\nexport function calculateTreeAppShared(templates: FileAsset[]): TreeItem[] {\r\n  const tree: TreeItem[] = [\r\n    {\r\n      depth: -1,\r\n      name: 'App Files',\r\n      pathFromRoot: appSharedRoot,\r\n      isShared: false,\r\n      isFolder: true,\r\n      children: calculateTree(templates.filter(f => !f.Shared)),\r\n    },\r\n    {\r\n      depth: -1,\r\n      name: 'Shared App Files',\r\n      pathFromRoot: appSharedRoot,\r\n      isShared: true,\r\n      isFolder: true,\r\n      children: calculateTree(templates.filter(f => f.Shared)),\r\n    },\r\n  ];\r\n  return tree;\r\n}\r\n\r\nfunction calculateTree(templates: FileAsset[]): TreeItem[] {\r\n  if (!templates) { return []; }\r\n\r\n  const tree: TreeItem[] = [];\r\n  for (const template of templates) {\r\n    let parent: TreeItem[] = tree;\r\n    const paths = template.Path.split('/');\r\n    const last = paths[paths.length - 1];\r\n    let pathFromRoot = '';\r\n    for (let i = 0; i < paths.length; i++) {\r\n      const path = paths[i];\r\n      pathFromRoot += i ? `/${path}` : path;\r\n      const existing = parent.find(item => item.name === path);\r\n      if (existing) {\r\n        parent = existing.children;\r\n      } else {\r\n        const item: TreeItem = {\r\n          depth: i,\r\n          name: path,\r\n          pathFromRoot,\r\n          isShared: template.Shared,\r\n          isFolder: path !== last,\r\n          ...(path !== last && { children: [] }),\r\n        };\r\n        parent.push(item);\r\n        parent = item.children;\r\n      }\r\n    }\r\n  }\r\n\r\n  return tree;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'depthPadding',\r\n})\r\nexport class DepthPaddingPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(depth: number, isFolder: boolean): SafeStyle {\r\n    let padding: number;\r\n    if (isFolder) {\r\n      padding = depth * 8;\r\n    } else {\r\n      padding = (depth === 0) ? 8 : (depth * 8 + 16);\r\n    }\r\n    return this.sanitizer.bypassSecurityTrustStyle(`padding-left: ${padding}px;`);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TreeItem } from '../models/tree-item.model';\r\n\r\n/** Sorts folders before files */\r\n@Pipe({\r\n  name: 'sortItems',\r\n})\r\nexport class SortItemsPipe implements PipeTransform {\r\n\r\n  transform(items: TreeItem[]) {\r\n    if (items == null) { return items; }\r\n\r\n    items.sort((item1, item2) => {\r\n      if (item1.isFolder < item2.isFolder) {\r\n        return 1;\r\n      } else if (item1.isFolder > item2.isFolder) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    return items;\r\n  }\r\n}\r\n","<div class=\"editor-active-explorer fancy-scrollbar-dark explorer-wrapper\">\r\n\r\n  <div>\r\n    @for (item of (tree | sortItems); track item.name) {\r\n    <ng-container *ngTemplateOutlet=\"fileOrFolder; context: {item: item}\"></ng-container>\r\n    }\r\n\r\n    <ng-template #fileOrFolder let-item=\"item\">\r\n\r\n      @if (!item.isFolder) {\r\n      <div class=\"file\" [style]=\"item.depth | depthPadding: item.isFolder\"\r\n        [ngClass]=\"{'active': isToggled(item.pathFromRoot, item.isShared) }\" [tippy]=\"item.name\" tippyShowDelay=\"750\"\r\n        (click)=\"openTemplate(item.pathFromRoot, item.isShared)\">\r\n        {{ item.name }}\r\n      </div>\r\n      }\r\n\r\n      @if (item.isFolder) {\r\n      <div>\r\n        <div class=\"folder-name-wrapper\" [ngClass]=\"{'app-shared-root': item.depth < 0}\"\r\n          [style]=\"item.depth + 1 | depthPadding: item.isFolder\" (click)=\"toggleItem(item.pathFromRoot, item.isShared)\">\r\n          <div class=\"folder-name\" [tippy]=\"item.name\" tippyShowDelay=\"750\">\r\n            <mat-icon> {{ isToggled(item.pathFromRoot, item.isShared) ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\r\n              }}\r\n            </mat-icon>\r\n            <span>{{ item.name }}</span>\r\n          </div>\r\n          <div class=\"add-item\" tippy=\"Create file in this folder\" tippyShowDelay=\"750\" appClickStopPropagation\r\n            (click)=\"addFile(item.pathFromRoot, item.isShared)\">\r\n            <mat-icon>add</mat-icon>\r\n          </div>\r\n        </div>\r\n        @if (isToggled(item.pathFromRoot, item.isShared)) {\r\n        @for (item1 of (item.children | sortItems); track item1) {\r\n        <ng-container *ngTemplateOutlet=\"fileOrFolder; context: {item: item1}\"></ng-container>\r\n        }\r\n        }\r\n      </div>\r\n      }\r\n\r\n    </ng-template>\r\n  </div>\r\n\r\n  <div class=\"create-button-wrapper\">\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" tippy=\"Create file\" tippyPlacement=\"left\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button mat-menu-item (click)=\"addFile('', false)\">\r\n        <span>App</span>\r\n      </button>\r\n      <button mat-menu-item (click)=\"addFile('', true)\">\r\n        <span>Shared (global)</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, input, OnChanges, output, SimpleChanges } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { ViewKey } from '../code-editor.models';\r\nimport { FileAsset } from '../models/file-asset.model';\r\nimport { SourceView } from '../models/source-view.model';\r\nimport { TreeItem } from '../models/tree-item.model';\r\nimport { calculateTreeAppShared } from './code-templates.helpers';\r\nimport { appSharedRoot, CreateTemplateParams } from './code-templates.models';\r\nimport { DepthPaddingPipe } from './depth-padding.pipe';\r\nimport { SortItemsPipe } from './order-items.pipe';\r\n\r\n@Component({\r\n    selector: 'app-code-templates',\r\n    templateUrl: './code-templates.component.html',\r\n    styleUrls: ['./code-templates.component.scss'],\r\n    imports: [\r\n        NgTemplateOutlet,\r\n        NgClass,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        MatMenuModule,\r\n        DepthPaddingPipe,\r\n        SortItemsPipe,\r\n        ClickStopPropagationDirective,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class CodeTemplatesComponent implements OnChanges {\r\n  view? = input<SourceView>();\r\n  templates = input<FileAsset[]>();\r\n  openView = output<ViewKey>();\r\n  createTemplate = output<CreateTemplateParams>();\r\n  tree: TreeItem[];\r\n  toggledItemsApp: string[] = [];\r\n  toggledItemsShared: string[] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.templates != null) {\r\n      this.tree = calculateTreeAppShared(this.templates());\r\n    }\r\n    if (changes.view != null) {\r\n      const previousView: SourceView = changes.view?.previousValue;\r\n      if (previousView) {\r\n        this.toggleItem(previousView.FileName, previousView.IsShared);\r\n      }\r\n      if (this.view()) {\r\n        this.showFileInTree(this.view().FileName, this.view().IsShared);\r\n      }\r\n    }\r\n  }\r\n\r\n  isToggled(path: string, isShared: boolean): boolean {\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    return toggledItems.includes(path);\r\n  }\r\n\r\n  openTemplate(path: string, isShared: boolean): void {\r\n    const viewKey: ViewKey = { key: path, shared: isShared };\r\n    this.openView.emit(viewKey);\r\n  }\r\n\r\n  toggleItem(path: string, isShared: boolean): void {\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    ArrayHelpers.toggleInArray(path, toggledItems);\r\n  }\r\n\r\n  addFile(folder?: string, isShared?: boolean): void {\r\n    const params: CreateTemplateParams = { folder, isShared };\r\n    this.createTemplate.emit(params);\r\n  }\r\n\r\n  private showFileInTree(file: string, isShared: boolean): void {\r\n    if (file == null) return;\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    if (toggledItems.includes(file)) return;\r\n\r\n    const paths = [appSharedRoot, ...file.split('/')];\r\n    let pathFromRoot = '';\r\n    for (const path of paths) {\r\n      pathFromRoot = !pathFromRoot ? path : `${pathFromRoot}/${path}`;\r\n      if (toggledItems.includes(pathFromRoot)) continue;\r\n      this.toggleItem(pathFromRoot, isShared);\r\n    }\r\n  }\r\n}\r\n","export const appSharedRoot = '' as const;\r\n\r\nexport interface CreateTemplateParams {\r\n  folder?: string;\r\n  isShared?: boolean;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { map, Observable } from 'rxjs';\r\nimport { Of } from '../../../../../core';\r\nimport { webApiFieldsAll } from '../../shared/fields/content-types-fields.service';\r\nimport { DataTypeCatalog } from '../../shared/fields/data-type-catalog';\r\nimport { Field } from '../../shared/fields/field.model';\r\nimport { InputTypeCatalog } from '../../shared/fields/input-type-catalog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { MoreSnippet, SetSnippet, SetSnippetLink, Snippet, SnippetsSets, SnippetsSubSubSets } from '../models/snippet.model';\r\nimport { SourceView } from '../models/source-view.model';\r\nimport { Tooltip } from '../models/tooltip.model';\r\n\r\nexport const inlineHelp = 'admin/Code/InlineHelp';\r\n\r\n@Injectable()\r\nexport class SnippetsService extends HttpServiceBase {\r\n\r\n  constructor(private translate: TranslateService) {\r\n    super();\r\n  }\r\n\r\n  // TODO: @2dg, ask 2dm \r\n  getTooltips(language: string): Observable<Tooltip[]> {\r\n    return this.getHttpApiUrl<Tooltip[]>(inlineHelp, {\r\n      params: {\r\n        language,\r\n      },\r\n    });\r\n  }\r\n\r\n  getSnippets(view: SourceView): Observable<{ list: Snippet[]; sets: SnippetsSets; }> {\r\n    return this.getHttpApiUrl<{ snippets: Snippet[] }>('../ng-assets/snippets.json.js').pipe(\r\n      map(res => {\r\n        const relevant = this.#filterAwayNotNeededSnippetsList(res.snippets, view);\r\n        const standardAndInputSnips = this.#extractInputTypeSnippets(relevant);\r\n        const sets = this.#initSnippetsWithConfig(standardAndInputSnips.standardArray, view, standardAndInputSnips.inputTypeSnippets);\r\n        const sorted: { list: Snippet[]; sets: SnippetsSets; } = {\r\n          list: standardAndInputSnips.standardArray,\r\n          sets\r\n        };\r\n        return sorted;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** Scan the list for sets starting with @ or [ and filter if not needed right now */\r\n  #filterAwayNotNeededSnippetsList(list: Snippet[], view: SourceView): Snippet[] {\r\n    const keyPrefixes = ['@', '['];\r\n    const keyPrefixIndex = (v: SourceView) => (v.Type.indexOf('Razor') > -1) ? 0 : 1;\r\n\r\n    const newList: Snippet[] = [];\r\n    for (const itm of list) {\r\n      const setHasPrefix = keyPrefixes.indexOf(itm.set[0]);\r\n      if (setHasPrefix === -1 || (setHasPrefix === keyPrefixIndex(view))) {\r\n        // if necessary, remove first char\r\n        if (setHasPrefix === keyPrefixIndex(view)) {\r\n          itm.set = itm.set.substring(1);\r\n        }\r\n        newList.push(itm);\r\n      }\r\n    }\r\n    return newList;\r\n  }\r\n\r\n  #extractInputTypeSnippets(list: Snippet[]): { standardArray: Snippet[]; inputTypeSnippets: Record<string, Snippet[]>; } {\r\n    const standardArray: Snippet[] = [];\r\n    const inputTypeArray: Snippet[] = [];\r\n\r\n    for (const itm of list) {\r\n      const systemSnippet = itm.set[0] === '\\\\';\r\n      if (!systemSnippet) {\r\n        standardArray.push(itm);\r\n      } else {\r\n        itm.set = itm.set.substring(1);\r\n        inputTypeArray.push(itm);\r\n      }\r\n    }\r\n    const inputTypeSnippets = this.#catalogInputTypeSnippets(inputTypeArray);\r\n    const extracted: { standardArray: Snippet[]; inputTypeSnippets: Record<string, Snippet[]>; } = {\r\n      standardArray,\r\n      inputTypeSnippets,\r\n    };\r\n    return extracted;\r\n  }\r\n\r\n  #catalogInputTypeSnippets(list: Snippet[]): Record<string, Snippet[]> {\r\n    const inputTypeList: Record<string, Snippet[]> = {};\r\n    for (const itm of list) {\r\n      if (inputTypeList[itm.subset] === undefined) {\r\n        inputTypeList[itm.subset] = [];\r\n      }\r\n      inputTypeList[itm.subset].push(itm);\r\n    }\r\n    return inputTypeList;\r\n  }\r\n\r\n  #initSnippetsWithConfig(\r\n    standardArray: Snippet[],\r\n    templateConfiguration: SourceView,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): SnippetsSets {\r\n    const sets = this.#makeTree(standardArray);\r\n\r\n    // retrieve all relevant content-types and infos\r\n    sets.Content = Object.assign({}, sets.Content, { Fields: {}, PresentationFields: {} });\r\n    if (templateConfiguration.TypeContent) {\r\n      this.#loadContentType(\r\n        sets.Content.Fields as SnippetsSubSubSets,\r\n        templateConfiguration.TypeContent,\r\n        'Content',\r\n        templateConfiguration,\r\n        inputTypeSnippets,\r\n      );\r\n    }\r\n    if (templateConfiguration.TypeContentPresentation) {\r\n      this.#loadContentType(\r\n        sets.Content.PresentationFields as SnippetsSubSubSets,\r\n        templateConfiguration.TypeContentPresentation,\r\n        'Content.Presentation',\r\n        templateConfiguration,\r\n        inputTypeSnippets,\r\n      );\r\n    }\r\n\r\n    if (templateConfiguration.HasList) {\r\n      sets.List = Object.assign({}, sets.List, { Fields: {}, PresentationFields: {} });\r\n      if (templateConfiguration.TypeList) {\r\n        this.#loadContentType(\r\n          sets.List.Fields as SnippetsSubSubSets,\r\n          templateConfiguration.TypeList,\r\n          'Header',\r\n          templateConfiguration,\r\n          inputTypeSnippets,\r\n        );\r\n      }\r\n      if (templateConfiguration.TypeListPresentation) {\r\n        this.#loadContentType(\r\n          sets.List.PresentationFields as SnippetsSubSubSets,\r\n          templateConfiguration.TypeListPresentation,\r\n          'Header.Presentation',\r\n          templateConfiguration,\r\n          inputTypeSnippets,\r\n        );\r\n      }\r\n    } else {\r\n      delete sets.List;\r\n    }\r\n\r\n    // maybe App-infos\r\n    if (templateConfiguration.HasApp) {\r\n      sets.App.Resources = {};\r\n      sets.App.Settings = {};\r\n      this.#loadContentType(sets.App.Resources, 'App-Resources', 'App.Resources', templateConfiguration, inputTypeSnippets);\r\n      this.#loadContentType(sets.App.Settings, 'App-Settings', 'App.Settings', templateConfiguration, inputTypeSnippets);\r\n    }\r\n\r\n    return sets;\r\n  }\r\n\r\n  /** Convert the list into a tree with set/subset/item */\r\n  #makeTree(list: Snippet[]): SnippetsSets {\r\n    const tree: SnippetsSets = {};\r\n    for (const o of list) {\r\n      if (tree[o.set] === undefined) {\r\n        tree[o.set] = {};\r\n      }\r\n      if (tree[o.set][o.subset] === undefined) {\r\n        tree[o.set][o.subset] = [];\r\n      }\r\n      const reformatted: SetSnippet = {\r\n        key: o.name,\r\n        label: this.#label(o.set, o.subset, o.name),\r\n        snip: o.content,\r\n        help: o.help || this.#help(o.set, o.subset, o.name),\r\n        links: this.#linksList(o.links)\r\n      };\r\n\r\n      (tree[o.set][o.subset] as SetSnippet[]).push(reformatted);\r\n    }\r\n    return tree;\r\n  }\r\n\r\n  #label(set: string, subset: string, snip: string): string {\r\n    const key = this.#getHelpKey(set, subset, snip, '.Key');\r\n\r\n    let result: string = this.translate.instant(key);\r\n    if (result === key) {\r\n      result = snip;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  #getHelpKey(set: string, subset: string, snip: string, addition: string): string {\r\n    return 'SourceEditorSnippets' + '.' + set + '.' + subset + '.' + snip + addition;\r\n  }\r\n\r\n  #help(set: string, subset: string, snip: string): string {\r\n    const key = this.#getHelpKey(set, subset, snip, '.Help');\r\n\r\n    let result: string = this.translate.instant(key);\r\n    if (result === key) {\r\n      result = '';\r\n    }\r\n    return result;\r\n  }\r\n\r\n  #linksList(linksString: string): SetSnippetLink[] {\r\n    if (!linksString) { return null; }\r\n\r\n    const links: SetSnippetLink[] = [];\r\n    const llist = linksString.split('\\n');\r\n    for (const l of llist) {\r\n      const pair = l.split(':');\r\n      if (pair.length === 3) {\r\n        const link: SetSnippetLink = {\r\n          name: pair[0].trim(),\r\n          url: pair[1].trim() + ':' + pair[2].trim(),\r\n        };\r\n        links.push(link);\r\n      }\r\n    }\r\n    if (links.length === 0) { return null; }\r\n    return links;\r\n  }\r\n\r\n  /** spm TODO: this happens after snippets are calculated for the first time. Needs to be fixed */\r\n  #loadContentType(\r\n    target: SnippetsSubSubSets,\r\n    type: string,\r\n    prefix: string,\r\n    templateConfiguration: SourceView,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): void {\r\n    this.#getFields(templateConfiguration.AppId, type).then(fields => {\r\n      // first add common items if the content-type actually exists\r\n      for (const field of fields) {\r\n        const fieldname = field.StaticName;\r\n        target[fieldname] = {\r\n          key: fieldname,\r\n          label: fieldname,\r\n          snip: this.#valuePlaceholder(prefix, fieldname, templateConfiguration),\r\n          help: field.Metadata.merged.Notes || ' (' + field.Type.toLowerCase() + ') '\r\n        };\r\n        // try to add generic snippets specific to this input-type\r\n        const snipDefaults = cloneDeep(target[fieldname]); // must be a copy, because target[fieldname] will grow\r\n        this.#attachSnippets(target, prefix, fieldname, field.InputType, snipDefaults, inputTypeSnippets);\r\n      }\r\n\r\n      if (fields.length) {\r\n        const std = ['EntityId', 'EntityTitle', 'EntityGuid', 'EntityType', 'IsPublished', 'Modified'];\r\n        // tslint:disable-next-line:prefer-for-of\r\n        for (let i = 0; i < std.length; i++) {\r\n          target[std[i]] = {\r\n            key: std[i],\r\n            label: std[i],\r\n            snip: this.#valuePlaceholder(prefix, std[i], templateConfiguration),\r\n            help: this.translate.instant('SourceEditorSnippets.StandardFields.' + std[i] + '.Help'),\r\n          };\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  #valuePlaceholder(obj: string, val: string, templateConfiguration: SourceView): string {\r\n    return (templateConfiguration.Type.indexOf('Razor') > -1)\r\n      ? '@' + obj + '.' + val\r\n      : '[' + obj.replace('.', ':') + ':' + val + ']';\r\n  }\r\n\r\n\r\n#getFields(appId: number, staticName: string): Promise<Field[]> {\r\n  return this.fetchPromise<Field[]>(webApiFieldsAll, {\r\n    params: { appid: appId.toString(), staticName },\r\n  }).then(fields => {\r\n    // Filtere leere Datentypen raus\r\n    fields = fields.filter(field => field.Type !== DataTypeCatalog.Empty);\r\n    // Merged-Metadata erzeugen wie vorher\r\n    for (const fld of fields) {\r\n      if (!fld.Metadata) continue;\r\n      const md = fld.Metadata;\r\n      const allMd = md.All;\r\n      const typeMd = md[fld.Type];\r\n      const inputMd = md[fld.InputType];\r\n      md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n    }\r\n    return fields;\r\n  });\r\n}\r\n\r\n  #attachSnippets(\r\n    target: SnippetsSubSubSets,\r\n    prefix: string,\r\n    fieldname: string,\r\n    inputType: Of<typeof InputTypeCatalog>,\r\n    snipDefaults: SetSnippet,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): void {\r\n    let genericSnippet = inputTypeSnippets[inputType];\r\n    if (inputType.indexOf('-')) { // if it's a sub-type, let's also get the master-type\r\n      const fieldType = inputType.substring(0, inputType.indexOf('-'));\r\n      if (fieldType) {\r\n        const typeSnips = inputTypeSnippets[fieldType];\r\n        if (typeSnips) {\r\n          genericSnippet = genericSnippet ? genericSnippet.concat(typeSnips) : typeSnips;\r\n        }\r\n      }\r\n    }\r\n    if (!genericSnippet) return;\r\n\r\n    if (target[fieldname].more === undefined) {\r\n      target[fieldname].more = {};\r\n    }\r\n    const fieldSnips = target[fieldname].more;\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let g = 0; g < genericSnippet.length; g++) {\r\n      try {\r\n        fieldSnips[fieldname + '-' + genericSnippet[g].name] = Object.assign({}, snipDefaults, {\r\n          key: fieldname + ' - ' + genericSnippet[g].name,\r\n          label: genericSnippet[g].name,\r\n          snip: this.#localizeGenericSnippet(genericSnippet[g].content, prefix, fieldname),\r\n          collapse: true,\r\n        } as MoreSnippet);\r\n      } finally { }\r\n    }\r\n  }\r\n\r\n  #localizeGenericSnippet(snip: string, objName: string, fieldName: string): string {\r\n    snip = snip\r\n      .replace(/(\\$\\{[0-9]+\\:)var(\\})/gi, '$1' + objName + '$2')\r\n      .replace(/(\\$\\{[0-9]+\\:)prop(\\})/gi, '$1' + fieldName + '$2');\r\n    return snip;\r\n  }\r\n}\r\n","<div class=\"editor-root\" appToggleDebug [ngClass]=\"{ 'sxc-dark': monacoOptions.theme === '2sxc-dark' }\">\r\n  <div class=\"editor-side-toolbar\">\r\n    <div class=\"button\" [ngClass]=\"{ 'active': activeExplorer === Explorers.Templates }\" tippy=\"Templates\"\r\n      (click)=\"toggleExplorer(Explorers.Templates)\">\r\n      <mat-icon>file_copy</mat-icon>\r\n    </div>\r\n    <div class=\" button\" [ngClass]=\"{ 'active': activeExplorer === Explorers.Snippets }\" tippy=\"Snippets\"\r\n      (click)=\"toggleExplorer(Explorers.Snippets)\">\r\n      <mat-icon>code</mat-icon>\r\n    </div>\r\n  </div>\r\n  <app-code-templates [hidden]=\"activeExplorer !== Explorers.Templates\" [view]=\"active()?.view\"\r\n    [templates]=\"templates()\" (openView)=\"openView($event)\" (createTemplate)=\"createTemplate($event)\">\r\n  </app-code-templates>\r\n  <app-code-snippets [hidden]=\"activeExplorer !== Explorers.Snippets\" [snippets]=\"active()?.explorerSnipps\"\r\n    (insertSnippet)=\"insertSnippet($event)\">\r\n  </app-code-snippets>\r\n  <div class=\"editor-group\">\r\n    @if (tabs().length > 0) {\r\n      <div class=\"tabs-container fancy-scrollbar-dark\">\r\n        @for (tab of tabs(); track tab.viewKey) {\r\n          <div class=\"tab\" [ngClass]=\"{\r\n                  'active': tab.isActive,\r\n                  'modified': tab.isModified,\r\n                  'loading': tab.isLoading\r\n                  }\" (click)=\"openView(tab.viewKey)\">\r\n            <div class=\"tab-label-container\" [tippy]=\"tab.label\" tippyShowDelay=\"750\">\r\n              @if (tab.viewKey.shared) {\r\n                <mat-icon class=\"icon-shared\">share</mat-icon>\r\n              }\r\n              <span class=\"tab-label\">{{ tab.label }}</span>\r\n            </div>\r\n            <div class=\"tab-actions-container\">\r\n              @if (tab.isModified) {\r\n                <mat-icon class=\"tab-action icon-modified\">circle</mat-icon>\r\n              }\r\n              @if (tab.isLoading) {\r\n                <mat-spinner\r\n                  class=\"spinner\"\r\n                  mode=\"indeterminate\"\r\n                  diameter=\"14\"\r\n                  color=\"white\"\r\n                ></mat-spinner>\r\n              }\r\n              <mat-icon class=\"tab-action icon-close\" tippy=\"Close\" appClickStopPropagation\r\n                (click)=\"closeEditor(tab.viewKey)\">close</mat-icon>\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    }\r\n    @if (active()?.view) {\r\n      <app-monaco-editor [filename]=\"active()?.view.FileName\" [value]=\"active()?.view.Code\"\r\n        (valueChanged)=\"codeChanged($event, active()?.viewKey)\" [options]=\"monacoOptions\"\r\n        [snippets]=\"active()?.editorSnipps\" [tooltips]=\"active()?.tooltips\" [autoFocus]=\"true\">\r\n      </app-monaco-editor>\r\n    }\r\n  </div>\r\n  @if (activeView()) {\r\n    <button\r\n      class=\"eav-action-button\"\r\n      mat-fab\r\n      mat-elevation-z24\r\n      tippy=\"Click to save or CTRL + S\"\r\n      (click)=\"save()\"\r\n    >\r\n      <mat-icon>done</mat-icon>\r\n    </button>\r\n  }\r\n</div>\r\n","import { NgClass } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, computed, effect, NgZone, OnDestroy, OnInit, signal, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport type * as Monaco from 'monaco-editor';\r\nimport { forkJoin, fromEvent, of, share, switchMap } from 'rxjs';\r\nimport { Of, transient } from '../../../../core';\r\nimport { CreateFileDialogComponent, CreateFileDialogData, CreateFileDialogResult } from '../create-file-dialog';\r\nimport { isCtrlS } from '../edit/dialog/main/keyboard-shortcuts';\r\nimport { MonacoEditorComponent } from '../monaco-editor';\r\nimport { MonacoEditorComponent as MonacoEditorComponent_1 } from '../monaco-editor/monaco-editor.component';\r\nimport { BaseComponent } from '../shared/components/base.component';\r\nimport { keyIsShared, keyItems } from '../shared/constants/session.constants';\r\nimport { ClickStopPropagationDirective } from '../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../shared/directives/tippy.directive';\r\nimport { ToggleDebugDirective } from '../shared/directives/toggle-debug.directive';\r\nimport { ViewOrFileIdentifier } from '../shared/models/edit-form.model';\r\nimport { RxHelpers } from '../shared/rxJs/rx.helpers';\r\nimport { Context } from '../shared/services/context';\r\nimport { CodeAndEditionWarningsComponent } from './code-and-edition-warnings/code-and-edition-warnings.component';\r\nimport { CodeAndEditionWarningsSnackBarData } from './code-and-edition-warnings/code-and-edition-warnings.models';\r\nimport { translateLoaderFactoryCode } from './code-editor-translate-loader-factory';\r\nimport { CodeEditorHelper } from './code-editor.helper';\r\nimport { Explorers, Tab, ViewInfo, ViewKey } from './code-editor.models';\r\nimport { CodeSnippetsComponent } from './code-snippets/code-snippets.component';\r\nimport { CodeTemplatesComponent } from './code-templates/code-templates.component';\r\nimport { CreateTemplateParams } from './code-templates/code-templates.models';\r\nimport { FileAsset } from './models/file-asset.model';\r\nimport { SourceView } from './models/source-view.model';\r\nimport { SnippetsService } from './services/snippets.service';\r\nimport { SourceService } from './services/source.service';\r\n\r\n@Component({\r\n  selector: 'app-code-editor',\r\n  templateUrl: './code-editor.component.html',\r\n  styleUrls: ['./code-editor.component.scss'],\r\n  imports: [\r\n    NgClass,\r\n    MatIconModule,\r\n    CodeTemplatesComponent,\r\n    CodeSnippetsComponent,\r\n    MatProgressSpinnerModule,\r\n    MonacoEditorComponent_1,\r\n    MatButtonModule,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n    ToggleDebugDirective,\r\n    TranslateModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: TranslateLoader,\r\n      useFactory: translateLoaderFactoryCode,\r\n      deps: [HttpClient],\r\n    },\r\n    TranslateService,\r\n  ]\r\n})\r\nexport class CodeEditorComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @ViewChild(MonacoEditorComponent) private monacoEditorRef: MonacoEditorComponent;\r\n\r\n  Explorers = Explorers;\r\n  activeExplorer: Of<typeof Explorers> = Explorers.Templates;\r\n  monacoOptions: Monaco.editor.IStandaloneEditorConstructionOptions = {\r\n    theme: '2sxc-dark',\r\n    tabSize: 2,\r\n    fixedOverflowWidgets: true,\r\n  };\r\n\r\n  #sourceSvc = transient(SourceService);\r\n  #snippetSvc = transient(SnippetsService);\r\n  #titleSvc = transient(Title);\r\n\r\n  templates = signal<FileAsset[]>([]);\r\n  activeView = signal<ViewKey>(undefined);\r\n  #openViews = signal<ViewKey[]>([]);\r\n  #viewInfos = signal<ViewInfo[]>([]);\r\n\r\n  // Computed signal that finds the active view information from the list of viewInfos.\r\n  // It checks if the activeView signal matches any viewKey in the viewInfos list using objectsEqual.\r\n  active = computed(() => {\r\n    const activeView = this.activeView();\r\n    return this.#viewInfos().find(v => RxHelpers.objectsEqual(v.viewKey, activeView));\r\n  })\r\n\r\n  // Each tab object includes the viewKey, label (file name or key), active state,\r\n  // modified state (if the view's code differs from the saved code), and loading state.\r\n  // It checks for matching view information in viewInfos using objectsEqual.\r\n  tabs = computed(() => {\r\n    const openViews = this.#openViews();\r\n    const activeView = this.activeView();\r\n    const viewInfos = this.#viewInfos();\r\n    return openViews.map(viewKey => {\r\n      const viewInfo = viewInfos.find(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n      return {\r\n        viewKey,\r\n        label: viewInfo?.view?.FileName ?? viewKey.key,\r\n        isActive: RxHelpers.objectsEqual(viewKey, activeView),\r\n        isModified: viewInfo?.view?.Code !== viewInfo?.savedCode,\r\n        isLoading: viewInfo?.view == null,\r\n      } satisfies Tab;\r\n    })\r\n  });\r\n\r\n  #urlItems: ViewOrFileIdentifier[];\r\n\r\n  /**\r\n * Computed property for the current document title\r\n */\r\n  #documentTitle = computed(() => {\r\n    const activeViewKey = this.activeView();\r\n    const viewInfos = this.#viewInfos() || [];\r\n    const activeViewInfo = viewInfos.find(v => RxHelpers.objectsEqual(v.viewKey, activeViewKey));\r\n\r\n    return activeViewInfo?.view?.FileName\r\n      ? `${activeViewInfo.view.FileName} - Code Editor`\r\n      : 'Code Editor';\r\n  });\r\n\r\n  /**\r\n   * Computed property that identifies views that need to be loaded.\r\n   * Returns an array of ViewKey objects that exist in openViews but are not yet loaded in viewInfos.\r\n   */\r\n  #notLoadedViews = computed(() => {\r\n    const openViews = this.#openViews();\r\n    const viewInfos = this.#viewInfos();\r\n\r\n    // Filter open views to find those not yet loaded in viewInfos\r\n    return openViews.filter(viewKey =>\r\n      !viewInfos.some(v => RxHelpers.objectsEqual(v.viewKey, viewKey))\r\n    );\r\n  });\r\n\r\n  /**\r\n   * Creates a set of observables for loading a view and its related data.\r\n   * @returns A forkJoin observable that emits the viewKey, view, snippets, and tooltips when all are loaded\r\n   */\r\n  #createViewObservables(viewKey: ViewKey) {\r\n    // Get the view content and share the observable\r\n    const view$ = this.#sourceSvc.get(viewKey.key, viewKey.shared, this.#urlItems).pipe(share());\r\n    // Create dependent observables for snippets and tooltips\r\n    const snippets$ = view$.pipe(switchMap(view => this.#snippetSvc.getSnippets(view)));\r\n    const tooltips$ = view$.pipe(switchMap(view =>\r\n      this.#snippetSvc.getTooltips(view.Extension.substring(1))\r\n    ));\r\n\r\n    // Combine all observables to emit results together\r\n    return forkJoin([of(viewKey), view$, snippets$, tooltips$]);\r\n  }\r\n\r\n  constructor(\r\n    private context: Context,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n    private zone: NgZone,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) {\r\n    super();\r\n    this.context.init(this.route);\r\n    const codeItems: ViewOrFileIdentifier[] = JSON.parse(sessionStorage.getItem(keyItems));\r\n    const isShared = (sessionStorage.getItem(keyIsShared) ?? 'false') === 'true';\r\n    codeItems.forEach(codeItem => {\r\n      // remove leading \"/\" from path\r\n      if (codeItem.Path.startsWith('/')) {\r\n        codeItem.Path = codeItem.Path.substring(1);\r\n      }\r\n      codeItem.IsShared ??= isShared;\r\n    });\r\n    this.#urlItems = codeItems;\r\n\r\n    /**\r\n * Main effect responsible for loading views that are open but not yet loaded.\r\n */\r\n    effect(() => {\r\n      const templates = this.templates();\r\n      if (templates.length === 0) return; // Exit early if no templates are available\r\n      const notLoaded = this.#notLoadedViews();\r\n      if (notLoaded.length === 0) return; // Exit early if all views are already loaded\r\n\r\n      // Mark all not-yet-loaded views as \"loading\" in viewInfos\r\n      let viewInfos = this.#viewInfos();\r\n      notLoaded.forEach(viewKey => {\r\n        viewInfos = CodeEditorHelper.updateSingleViewInfo(viewInfos, viewKey);\r\n      });\r\n      this.#viewInfos.set(viewInfos);\r\n\r\n      // Start data requests for all not-yet-loaded views in parallel\r\n      forkJoin(\r\n        notLoaded.map(viewKey => this.#createViewObservables(viewKey))\r\n      ).subscribe(results => {\r\n        let updatedViewInfos = this.#viewInfos();\r\n\r\n        // Process each result and update the viewInfos incrementally\r\n        results.forEach(([viewKey, view, snippets, tooltips]) => {\r\n          updatedViewInfos = CodeEditorHelper.processLoadedView(\r\n            updatedViewInfos, viewKey, view, snippets, tooltips, this.#showCodeAndEditionWarnings.bind(this), templates\r\n          );\r\n        });\r\n\r\n        this.#viewInfos.set(updatedViewInfos); // Update the viewInfos signal with all processed results\r\n      });\r\n\r\n      this.#viewInfos.set(viewInfos);  // Set the initial viewInfos with loading indicators before actual data is loaded\r\n    }); \r\n\r\n\r\n    /**\r\n    * Effect that updates the document title when it changes\r\n    */\r\n    effect(() => {\r\n      const newTitle = this.#documentTitle();\r\n      if (this.#titleSvc.getTitle() !== newTitle) {\r\n        this.#titleSvc.setTitle(newTitle);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const initialViews = this.#urlItems.map(item => {\r\n      const viewKey: ViewKey = { key: item.EntityId?.toString() ?? item.Path, shared: item.IsShared };\r\n      return viewKey;\r\n    });\r\n\r\n    this.activeView.set(initialViews[0]);\r\n    this.#openViews.set(initialViews);\r\n\r\n    this.#attachListeners();\r\n\r\n    // Load templates\r\n    this.#sourceSvc.getAllPromise().then(templates => {\r\n      this.templates.set(templates);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  toggleExplorer(explorer: Of<typeof Explorers>): void {\r\n    this.activeExplorer = (this.activeExplorer !== explorer) ? explorer : null;\r\n  }\r\n\r\n  createTemplate(params: CreateTemplateParams): void {\r\n    // This FileLocationDialogComponent dialog is currently never going to be opened because it has been replaced by mat-menu\r\n    // in the code-templates.component.html template. If you want to use the dialog instead of the menu, you need to remove the\r\n    // mat-menu and replace it with a button that opens the dialog with empty parameters.\r\n    // Dialog has been replaced by menu because from update to Angular 16 CreateFileDialogComponent wasn't opening anymore if\r\n    // FileLocationDialogComponent dialog was used.\r\n    // if (params.isShared == null) {\r\n    //   const fileLocationDialogRef = this.dialog.open(FileLocationDialogComponent, {\r\n    //     autoFocus: false,\r\n    //     viewContainerRef: this.viewContainerRef,\r\n    //     width: '650px',\r\n    //   });\r\n    //   fileLocationDialogRef.afterClosed().subscribe((isShared?: boolean) => {\r\n    //     if (isShared == null) return;\r\n    //     params.isShared = isShared;\r\n    //     this.createTemplate(params);\r\n    //   });\r\n    //   return;\r\n    // }\r\n\r\n    const createFileDialogData: CreateFileDialogData = {\r\n      folder: params.folder,\r\n      global: params.isShared,\r\n      purpose: params.folder === 'api' || params.folder?.startsWith('api/') ? 'Api' : undefined,\r\n    };\r\n    const createFileDialogRef = this.matDialog.open(CreateFileDialogComponent, {\r\n      autoFocus: false,\r\n      data: createFileDialogData,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n\r\n    createFileDialogRef.afterClosed().subscribe((result?: CreateFileDialogResult) => {\r\n      if (!result) return;\r\n\r\n      this.#sourceSvc.create(result.name, params.isShared, result.templateKey).subscribe(() => {\r\n        this.#sourceSvc.getAllPromise().then(files => {\r\n          this.templates.set(files);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  insertSnippet(snippet: string): void {\r\n    this.monacoEditorRef?.insertSnippet(snippet);\r\n  }\r\n\r\n  codeChanged(code: string, viewKey: ViewKey): void {\r\n    let viewInfos = this.#viewInfos();\r\n    const selectedIndex = viewInfos.findIndex(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n    const selectedViewInfo = viewInfos[selectedIndex];\r\n    const newViewInfo: ViewInfo = {\r\n      ...selectedViewInfo,\r\n      view: {\r\n        ...selectedViewInfo.view,\r\n        Code: code,\r\n      },\r\n    };\r\n    viewInfos = [...viewInfos.slice(0, selectedIndex), newViewInfo, ...viewInfos.slice(selectedIndex + 1)];\r\n    this.#viewInfos.set(viewInfos);\r\n  }\r\n\r\n  openView(viewKey: ViewKey): void {\r\n    // fix viewKey because it can be a templateId or a path, and file might already be open\r\n    viewKey = this.#viewInfos().find(\r\n      v => !RxHelpers.objectsEqual(v.viewKey, viewKey) && v.view?.FileName === viewKey.key && v.view?.IsShared === viewKey.shared\r\n    )?.viewKey ?? viewKey;\r\n\r\n    const oldActiveView = this.activeView();\r\n    if (!RxHelpers.objectsEqual(oldActiveView, viewKey)) {\r\n      this.activeView.set(viewKey);\r\n    }\r\n    const oldOpenViews = this.#openViews();\r\n    if (!oldOpenViews.some(v => RxHelpers.objectsEqual(v, viewKey))) {\r\n      const newOpenViews = [...oldOpenViews, viewKey];\r\n      this.#openViews.set(newOpenViews);\r\n    }\r\n  }\r\n\r\n  closeEditor(viewKey: ViewKey): void {\r\n    const oldOpenViews = this.#openViews();\r\n    const newOpenViews = oldOpenViews.filter(key => !RxHelpers.objectsEqual(key, viewKey));\r\n\r\n    const oldActiveView = this.activeView();\r\n    if (RxHelpers.objectsEqual(oldActiveView, viewKey)) {\r\n      const newActiveView = oldOpenViews[oldOpenViews.findIndex(v => RxHelpers.objectsEqual(v, oldActiveView)) - 1] ?? newOpenViews[0];\r\n      this.activeView.set(newActiveView);\r\n    }\r\n    this.#openViews.set(newOpenViews);\r\n  }\r\n\r\n  save(viewKey?: ViewKey): void {\r\n    viewKey ??= this.activeView();\r\n    const viewInfo = this.#viewInfos().find(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n    if (viewInfo?.view == null) return;\r\n\r\n    this.snackBar.open('Saving...');\r\n    const codeToSave = viewInfo.view.Code;\r\n    this.#sourceSvc.save(viewKey.key, viewKey.shared, viewInfo.view, this.#urlItems).subscribe({\r\n      next: res => {\r\n        if (!res) {\r\n          this.snackBar.open('Failed', null, { duration: 2000 });\r\n          return;\r\n        }\r\n\r\n        let newViewInfos = [...this.#viewInfos()];\r\n        const selectedIndex = newViewInfos.findIndex(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n        if (selectedIndex < 0) return;\r\n\r\n        const selectedViewInfo = newViewInfos[selectedIndex];\r\n        const newViewInfo: ViewInfo = {\r\n          ...selectedViewInfo,\r\n          savedCode: codeToSave,\r\n        };\r\n        newViewInfos = [...newViewInfos.slice(0, selectedIndex), newViewInfo, ...newViewInfos.slice(selectedIndex + 1)];\r\n        this.#viewInfos.set(newViewInfos);\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n      },\r\n      error: () => this.snackBar.open('Failed', null, { duration: 2000 }),\r\n    });\r\n  }\r\n\r\n  /** Show info about editions if other files with the same name exist */\r\n  #showCodeAndEditionWarnings(viewKey: ViewKey, view: SourceView, files: FileAsset[]): void {\r\n    const pathAndName = view.FileName;\r\n    const pathSeparator = pathAndName.indexOf('/') > -1 ? pathAndName.lastIndexOf('/') + 1 : 0;\r\n    const pathWithSlash = pathSeparator === 0 ? '' : pathAndName.substring(0, pathSeparator);\r\n    const fullName = pathAndName.substring(pathSeparator);\r\n    const name = fullName.substring(0, fullName.length - view.Extension.length);\r\n    const nameCode = name + '.code' + view.Extension;\r\n    // find out if we also have a code file\r\n    const codeFile = files.find(file => file.Path === pathWithSlash + nameCode && file.Shared === view.IsShared);\r\n    const otherEditions = files.filter(file => file.Path.endsWith(fullName) && file.Shared === view.IsShared).length - 1;\r\n\r\n    if (codeFile || otherEditions) {\r\n      const snackBarData: CodeAndEditionWarningsSnackBarData = {\r\n        fileName: fullName,\r\n        codeFile: codeFile?.Path,\r\n        edition: this.#urlItems\r\n          .find(i => i.EntityId?.toString() === viewKey.key && i.IsShared === view.IsShared && i.Path === view.FileName)?.Edition,\r\n        otherEditions,\r\n        openCodeBehind: false,\r\n      };\r\n      const snackBarRef = this.snackBar.openFromComponent(CodeAndEditionWarningsComponent, {\r\n        data: snackBarData,\r\n        duration: 10000,\r\n      });\r\n\r\n      snackBarRef.onAction().subscribe(() => {\r\n        if ((snackBarRef.containerInstance.snackBarConfig.data as CodeAndEditionWarningsSnackBarData).openCodeBehind) {\r\n          const openViewKey: ViewKey = { key: codeFile?.Path, shared: codeFile?.Shared };\r\n          this.openView(openViewKey);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  #attachListeners(): void {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<BeforeUnloadEvent>(window, 'beforeunload')\r\n          .subscribe(event => {\r\n            const allSaved = !this.#viewInfos().some(v => v.view != null && v.view.Code !== v.savedCode);\r\n            if (allSaved) return;\r\n            event.preventDefault();\r\n            event.returnValue = ''; // fix for Chrome\r\n          })\r\n      );\r\n      this.subscriptions.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown')\r\n          .subscribe(event => {\r\n            if (!isCtrlS(event)) return;\r\n            event.preventDefault();\r\n            this.zone.run(() => this.save());\r\n          })\r\n      );\r\n    });\r\n  }\r\n}\r\n","// tslint:disable-next-line:max-line-length\r\nimport { NgTemplateOutlet } from '@angular/common';\r\nimport { AfterContentInit, Component, ContentChild, ContentChildren, ElementRef, input, OnDestroy, QueryList, ViewEncapsulation } from '@angular/core';\r\nimport { BehaviorSubject, combineLatest, distinctUntilChanged, startWith } from 'rxjs';\r\nimport { BaseComponent } from '../../components/base.component';\r\nimport { ExtendedFabSpeedDialActionDirective } from './extended-fab-speed-dial-action.directive';\r\nimport { ExtendedFabSpeedDialActionsContentDirective } from './extended-fab-speed-dial-actions-content.directive';\r\nimport { ExtendedFabSpeedDialTriggerContentDirective } from './extended-fab-speed-dial-trigger-content.directive';\r\n\r\n/**\r\n * Special Speed-Dial kind of FAB which opens more menu items on hover.\r\n *\r\n * IMPORTANT: to work it needs ca. 4 more directives.\r\n * So never import this component directly, but instead import the ExtendedFabSpeedDialImports.\r\n */\r\n@Component({\r\n    // tslint:disable-next-line:component-selector\r\n    selector: 'extended-fab-speed-dial',\r\n    templateUrl: './extended-fab-speed-dial.component.html',\r\n    styleUrls: ['./extended-fab-speed-dial.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    imports: [\r\n        NgTemplateOutlet\r\n    ]\r\n})\r\nexport class ExtendedFabSpeedDialComponent extends BaseComponent implements AfterContentInit, OnDestroy {\r\n  @ContentChild(ExtendedFabSpeedDialTriggerContentDirective) trigger: ExtendedFabSpeedDialTriggerContentDirective;\r\n  @ContentChild(ExtendedFabSpeedDialActionsContentDirective) actions: ExtendedFabSpeedDialActionsContentDirective;\r\n  @ContentChildren(ExtendedFabSpeedDialActionDirective, { read: ElementRef }) actionButtons: QueryList<ElementRef<HTMLButtonElement>>;\r\n\r\n  disabled = input<boolean>(false);\r\n\r\n  open$ = new BehaviorSubject(false);\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.subscriptions.add(\r\n      combineLatest([\r\n        this.open$.pipe(distinctUntilChanged()),\r\n        this.actionButtons.changes.pipe(startWith(undefined)),\r\n      ]).subscribe(([open]) => {\r\n        this.actionButtons.forEach((btn, i, all) => {\r\n          const min = 0.3;\r\n          const max = Math.min(min + (all.length - 1) * 0.05, 0.6);\r\n          const step = (max - min) / (all.length - 1);\r\n          const transitionDuration = `${open ? min + step * i : max - step * i}s`;\r\n          if (btn.nativeElement.style.transitionDuration !== transitionDuration) {\r\n            btn.nativeElement.style.transitionDuration = transitionDuration;\r\n          }\r\n        });\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.open$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  setOpen(event: PointerEvent, open: boolean): void {\r\n    if (event.pointerType === 'touch') return;\r\n    this.open$.next(open);\r\n  }\r\n}\r\n","<div class=\"extended-fab-speed-dial\" [attr.disabled]=\"disabled() || null\" (pointerenter)=\"setOpen($event, true)\"\r\n  (pointerleave)=\"setOpen($event, false)\">\r\n  <div class=\"extended-fab-speed-dial-trigger\">\r\n    <ng-container [ngTemplateOutlet]=\"trigger?.templateRef\"></ng-container>\r\n  </div>\r\n  <div class=\"extended-fab-speed-dial-actions\">\r\n    <ng-container [ngTemplateOutlet]=\"actions?.templateRef\"></ng-container>\r\n  </div>\r\n</div>\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { GlobalConfigService } from '../services/global-config.service';\r\n\r\n@Directive({\r\n  selector: '[appToggleDebug]',\r\n})\r\nexport class ToggleDebugDirective {\r\n\r\n  constructor(private globalConfigService: GlobalConfigService) { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    const CTRL_SHIFT_ALT_CLICK = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.shiftKey && event.altKey;\r\n    if (CTRL_SHIFT_ALT_CLICK) {\r\n      this.globalConfigService.toggleDebugEnabled();\r\n      window.getSelection().removeAllRanges();\r\n    }\r\n  }\r\n}\r\n","<extended-fab-speed-dial>\r\n  <ng-template extendedFabSpeedDialTriggerContent>\r\n    <button\r\n      type=\"button\"\r\n      [tippy]=\"(label() | translate) + ' (' + ('Form.Buttons.ActionAndCloseShortcut' | translate) + ')'\"\r\n      tippyShowDelay=\"500\"\r\n      [ngClass]=\"ngClass()\"\r\n      [disabled]=\"isDisabled\"\r\n      (click)=\"onClick($event)\"\r\n      extended-fab-speed-dial-trigger\r\n      matRipple\r\n    >\r\n      <span>{{ label() | translate }}</span>\r\n      <span class=\"keybinding-hint\">\r\n        <kbd>⌃</kbd><kbd>⏎</kbd>\r\n      </span>\r\n      <mat-icon>{{ icon() }}</mat-icon>\r\n    </button>\r\n  </ng-template>\r\n</extended-fab-speed-dial>\r\n","import { NgClass } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\nimport { ExtendedFabSpeedDialImports } from '../extended-fab-speed-dial/extended-fab-speed-dial.imports';\r\nimport { SaveCloseButtonBase } from '../save-close-button/save-close-button-base.directive';\r\n\r\n@Component({\r\n  selector: 'app-save-close-button-fab',\r\n  imports: [\r\n    NgClass,\r\n    MatIconModule,\r\n    ...ExtendedFabSpeedDialImports,\r\n    MatRippleModule,\r\n    TranslateModule,\r\n    TippyDirective,\r\n  ],\r\n  templateUrl: './save-close-button-fab.component.html',\r\n  styleUrls: ['../save-close-button/save-close-button.component.scss'],\r\n})\r\nexport class SaveCloseButtonFabComponent extends SaveCloseButtonBase {}"],"x_google_ignoreList":[]}