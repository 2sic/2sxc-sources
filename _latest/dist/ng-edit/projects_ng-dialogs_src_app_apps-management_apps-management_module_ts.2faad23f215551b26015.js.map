{"version":3,"sources":["./projects/ng-dialogs/src/app/apps-management/apps-management-nav/apps-management-dialog.config.ts","./projects/ng-dialogs/src/app/apps-management/apps-management-routing.module.ts","./projects/ng-dialogs/src/app/apps-management/apps-management.module.ts","./projects/ng-dialogs/src/app/apps-management/services/apps-list.service.ts","./projects/ng-dialogs/src/app/apps-management/services/enable-languages.service.ts","./projects/ng-dialogs/src/app/apps-management/services/features-config.service.ts","./projects/ng-dialogs/src/app/apps-management/services/sxc-insights.service.ts"],"names":["appsManagementDialog","name","initContext","panelSize","panelClass","getComponent","appsManagementRoutes","path","component","data","dialog","children","redirectTo","pathMatch","loadChildren","then","m","ImportAppModule","title","AppAdministrationModule","AppsManagementRoutingModule","AppsManagementModule","A","http","context","dnnContext","apiUrl","this","$2sxc","getAll","get","params","zoneId","toString","create","post","delete","appId","flushCache","AppsListService","webApiZoneRoot","toggle","code","enable","cultureCode","save","EnableLanguagesService","webApiFeatures","getManageFeaturesUrl","saveFeatures","featuresString","FeaturesConfigService","activatePageLog","duration","webApiLogRoot","SxcInsightsService"],"mappings":"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","file":"projects_ng-dialogs_src_app_apps-management_apps-management_module_ts.2faad23f215551b26015.js","sourcesContent":["import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const appsManagementDialog: DialogConfig = {\r\n  name: 'APPS_MANAGEMENT_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { AppsManagementNavComponent } = await import('./apps-management-nav.component');\r\n    return AppsManagementNavComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { EmptyRouteComponent } from '../shared/components/empty-route/empty-route.component';\r\nimport { appsManagementDialog } from './apps-management-nav/apps-management-dialog.config';\r\n\r\nconst appsManagementRoutes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: appsManagementDialog }, children: [\r\n      { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n      {\r\n        path: 'list', component: EmptyRouteComponent, children: [\r\n          {\r\n            path: 'import',\r\n            loadChildren: () => import('../import-app/import-app.module').then(m => m.ImportAppModule)\r\n          },\r\n        ],\r\n        data: { title: 'Apps in this Zone' },\r\n      },\r\n      { path: 'settings', component: EmptyRouteComponent, data: { title: 'System Settings' } },\r\n      { path: 'languages', component: EmptyRouteComponent, data: { title: 'Zone Languages' } },\r\n      { path: 'features', component: EmptyRouteComponent, data: { title: 'Zone Features' } },\r\n      { path: 'sxc-insights', component: EmptyRouteComponent, data: { title: 'Debug Insights' } },\r\n      {\r\n        path: ':appId',\r\n        loadChildren: () => import('../app-administration/app-administration.module').then(m => m.AppAdministrationModule)\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(appsManagementRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppsManagementRoutingModule { }\r\n","import { AgGridModule } from '@ag-grid-community/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { EcoFabSpeedDialModule } from '@ecodev/fab-speed-dial';\r\nimport { AppDialogConfigService } from '../app-administration/services';\r\nimport { Context } from '../shared/services/context';\r\nimport { DialogService } from '../shared/services/dialog.service';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { AppsListActionsComponent } from './ag-grid-components/apps-list-actions/apps-list-actions.component';\r\nimport { AppsListShowComponent } from './ag-grid-components/apps-list-show/apps-list-show.component';\r\nimport { EnableLanguagesStatusComponent } from './ag-grid-components/enable-languages-status/enable-languages-status.component';\r\nimport { FeaturesListEnabledComponent } from './ag-grid-components/features-list-enabled/features-list-enabled.component';\r\nimport { FeaturesListPublicComponent } from './ag-grid-components/features-list-public/features-list-public.component';\r\nimport { FeaturesListSecurityComponent } from './ag-grid-components/features-list-security/features-list-security.component';\r\nimport { FeaturesListUiComponent } from './ag-grid-components/features-list-ui/features-list-ui.component';\r\nimport { AppsListComponent } from './apps-list/apps-list.component';\r\nimport { AppsManagementNavComponent } from './apps-management-nav/apps-management-nav.component';\r\nimport { AppsManagementRoutingModule } from './apps-management-routing.module';\r\nimport { EnableLanguagesComponent } from './enable-languages/enable-languages.component';\r\nimport { ManageFeaturesComponent } from './manage-features/manage-features.component';\r\nimport { AppsListService } from './services/apps-list.service';\r\nimport { EnableLanguagesService } from './services/enable-languages.service';\r\nimport { FeaturesConfigService } from './services/features-config.service';\r\nimport { SxcInsightsService } from './services/sxc-insights.service';\r\nimport { SxcInsightsComponent } from './sxc-insights/sxc-insights.component';\r\nimport { SystemSettingsComponent } from './system-settings/system-settings.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppsManagementNavComponent,\r\n    AppsListComponent,\r\n    ManageFeaturesComponent,\r\n    SxcInsightsComponent,\r\n    AppsListShowComponent,\r\n    AppsListActionsComponent,\r\n    FeaturesListEnabledComponent,\r\n    FeaturesListUiComponent,\r\n    FeaturesListPublicComponent,\r\n    FeaturesListSecurityComponent,\r\n    EnableLanguagesComponent,\r\n    EnableLanguagesStatusComponent,\r\n    SystemSettingsComponent,\r\n  ],\r\n  imports: [\r\n    AppsManagementRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    CommonModule,\r\n    AgGridModule.withComponents([]),\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatSlideToggleModule,\r\n    MatTabsModule,\r\n    MatRippleModule,\r\n    EcoFabSpeedDialModule,\r\n    MatCardModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    AppsListService,\r\n    EnableLanguagesService,\r\n    FeaturesConfigService,\r\n    SxcInsightsService,\r\n    DialogService,\r\n    AppDialogConfigService,\r\n  ]\r\n})\r\nexport class AppsManagementModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { App } from '../models/app.model';\r\n\r\n@Injectable()\r\nexport class AppsListService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  getAll() {\r\n    return this.http.get<App[]>(this.apiUrl(webApiAppRoot + 'list'), {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  create(name: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRoot + 'app'), {}, {\r\n      params: { zoneId: this.context.zoneId.toString(), name }\r\n    });\r\n  }\r\n\r\n  delete(appId: number) {\r\n    return this.http.delete<null>(this.apiUrl(webApiAppRoot + 'app'), {\r\n      params: { zoneId: this.context.zoneId.toString(), appId: appId.toString() },\r\n    });\r\n  }\r\n\r\n  flushCache(appId: number) {\r\n    return this.http.get<null>(this.apiUrl(webApiAppRoot + 'flushcache'), {\r\n      params: { zoneId: this.context.zoneId.toString(), appId: appId.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { EnableLanguage } from '../models/enable-language.model';\r\n\r\nconst webApiZoneRoot = 'admin/zone/';\r\n\r\n@Injectable()\r\nexport class EnableLanguagesService {\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<EnableLanguage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiZoneRoot + 'getlanguages'));\r\n  }\r\n\r\n  toggle(code: string, enable: boolean) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiZoneRoot + 'switchlanguage'), {\r\n      params: { cultureCode: code, enable: enable.toString() },\r\n    });\r\n  }\r\n\r\n  // todo: this code is _identical_ to toggle above. one should be removed, but I don't know where they are used\r\n  save(code: string, enable: boolean) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiZoneRoot + 'switchlanguage'), {\r\n      params: { cultureCode: code, enable: enable.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Feature } from '../models/feature.model';\r\n\r\nconst webApiFeatures = 'admin/feature/';\r\n\r\n@Injectable()\r\nexport class FeaturesConfigService {\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<Feature[]>(this.dnnContext.$2sxc.http.apiUrl(webApiFeatures + 'List'));\r\n  }\r\n\r\n  getManageFeaturesUrl() {\r\n    return this.http.get<string>(this.dnnContext.$2sxc.http.apiUrl(webApiFeatures + 'RemoteManageUrl'));\r\n  }\r\n\r\n  saveFeatures(featuresString: string) {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiFeatures + 'Save'), featuresString);\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nconst webApiLogRoot = 'sys/log/';\r\n\r\n@Injectable()\r\nexport class SxcInsightsService {\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext) { }\r\n\r\n  activatePageLog(duration: number) {\r\n    return this.http.get<string>(this.dnnContext.$2sxc.http.apiUrl(webApiLogRoot + 'EnableDebug'), {\r\n      params: { duration: duration.toString() }\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}