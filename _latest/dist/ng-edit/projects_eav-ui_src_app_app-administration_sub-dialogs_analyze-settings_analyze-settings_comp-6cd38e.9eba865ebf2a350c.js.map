{"version":3,"mappings":"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","names":["AnalyzeSettingsKeyComponent","constructor","snackBar","agInit","params","this","key","value","refresh","copy","copyToClipboard","open","duration","i0","selectors","ctx","ctx_r2","AnalyzeSettingsTotalResultsComponent","totalResults","stackItem","data","openDetails","ctx_r4","ctx_r6","AnalyzeSettingsComponent","dialogRef","route","router","viewsService","analyzeSettingsService","buildGridOptions","part","snapshot","paramMap","get","ngOnInit","views$","BehaviorSubject","selectedView$","undefined","stack$","getViews","getStack","templateVars$","combineLatest","pipe","map","views","selectedView","stack","ngOnDestroy","complete","closeDialog","close","changeView","viewGuid","next","getAll","subscribe","Object","defaultGridOptions","columnDefs","field","flex","minWidth","cellClass","split","sortable","filter","valueGetter","Path","cellRenderer","_value","AnalyzeSettingsValueComponent","Source","width","headerClass","TotalResults","cellRendererParams","navigate","relativeTo"],"sources":["./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-key/analyze-settings-key.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-key/analyze-settings-key.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-total-results/analyze-settings-total-results.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-total-results/analyze-settings-total-results.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings.component.ts"],"sourcesContent":["import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../../../shared/helpers/copy-to-clipboard.helper';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings-key',\r\n  templateUrl: './analyze-settings-key.component.html',\r\n  styleUrls: ['./analyze-settings-key.component.scss'],\r\n})\r\nexport class AnalyzeSettingsKeyComponent implements ICellRendererAngularComp {\r\n  key: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.key = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy() {\r\n    copyToClipboard(this.key);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"key-box highlight\" [tippy]=\"key\" (click)=\"copy()\">\r\n  <span class=\"key\">{{ key }}</span>\r\n</div>\r\n","<div class=\"input-component no-click\" *ngIf=\"totalResults <= 1\">\r\n  <div>{{ totalResults }}</div>\r\n  <div class=\"like-button disabled\">\r\n    <mat-icon>search</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<div matRipple class=\"input-component highlight\" tippy=\"Open details\" *ngIf=\"totalResults > 1\" (click)=\"openDetails()\">\r\n  <div class=\"text\">{{ totalResults }}</div>\r\n  <div class=\"like-button\">\r\n    <mat-icon>search</mat-icon>\r\n  </div>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { SettingsStackItem } from '../analyze-settings.models';\r\nimport { AnalyzeSettingsTotalResultsParams } from './analyze-settings-total-results.models';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings-total-results',\r\n  templateUrl: './analyze-settings-total-results.component.html',\r\n  styleUrls: ['./analyze-settings-total-results.component.scss'],\r\n})\r\nexport class AnalyzeSettingsTotalResultsComponent implements ICellRendererAngularComp {\r\n  totalResults: number;\r\n\r\n  private stackItem: SettingsStackItem;\r\n  private params: ICellRendererParams & AnalyzeSettingsTotalResultsParams;\r\n\r\n  agInit(params: ICellRendererParams & AnalyzeSettingsTotalResultsParams): void {\r\n    this.totalResults = params.value;\r\n    this.params = params;\r\n    this.stackItem = this.params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  openDetails(): void {\r\n    this.params.openDetails(this.stackItem);\r\n  }\r\n}\r\n","<div class=\"nav-component-wrapper\" *ngIf=\"(templateVars$ | async) as data\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Analyze {{ part }}</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <p class=\"dialog-description\">\r\n    Settings and Resources are consolidated from many sources. Here you see what the resulting values would be.\r\n  </p>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <mat-form-field appearance=\"standard\" color=\"accent\" class=\"view-select-box\">\r\n    <mat-label>Merge settings / resources of a View</mat-label>\r\n    <mat-select [ngModel]=\"data.selectedView\" (ngModelChange)=\"changeView($event)\">\r\n      <mat-option [value]=\"undefined\">No view selected - this is how APIs see the data</mat-option>\r\n      <mat-option *ngFor=\"let view of data.views\" [value]=\"view.Guid\">{{ view.Name }}</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <div class=\"grid-wrapper\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"data.stack\" [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n\r\n    <div class=\"grid-more-actions-box\"></div>\r\n  </div>\r\n</div>","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { View } from '../../models';\r\nimport { ViewsService } from '../../services';\r\nimport { AnalyzeSettingsService } from '../../services/analyze-settings.service';\r\nimport { AnalyzeSettingsKeyComponent } from './analyze-settings-key/analyze-settings-key.component';\r\nimport { AnalyzeSettingsTotalResultsComponent } from './analyze-settings-total-results/analyze-settings-total-results.component';\r\nimport { AnalyzeSettingsTotalResultsParams } from './analyze-settings-total-results/analyze-settings-total-results.models';\r\nimport { AnalyzeSettingsValueComponent } from './analyze-settings-value/analyze-settings-value.component';\r\nimport { AnalyzePart, AnalyzeSettingsTemplateVars, SettingsStackItem } from './analyze-settings.models';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings',\r\n  templateUrl: './analyze-settings.component.html',\r\n  styleUrls: ['./analyze-settings.component.scss'],\r\n})\r\nexport class AnalyzeSettingsComponent implements OnInit, OnDestroy {\r\n  part: AnalyzePart;\r\n  templateVars$: Observable<AnalyzeSettingsTemplateVars>;\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private views$: BehaviorSubject<View[]>;\r\n  private selectedView$: BehaviorSubject<string>;\r\n  private stack$: BehaviorSubject<SettingsStackItem[]>;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AnalyzeSettingsComponent>,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private viewsService: ViewsService,\r\n    private analyzeSettingsService: AnalyzeSettingsService,\r\n  ) {\r\n    this.part = this.route.snapshot.paramMap.get('part') as AnalyzePart;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.views$ = new BehaviorSubject<View[]>([]);\r\n    this.selectedView$ = new BehaviorSubject<string>(undefined);\r\n    this.stack$ = new BehaviorSubject<SettingsStackItem[]>([]);\r\n\r\n    this.getViews();\r\n    this.getStack();\r\n\r\n    this.templateVars$ = combineLatest([this.views$, this.selectedView$, this.stack$]).pipe(\r\n      map(([views, selectedView, stack]) => {\r\n        const templateVars: AnalyzeSettingsTemplateVars = {\r\n          views,\r\n          selectedView,\r\n          stack,\r\n        };\r\n        return templateVars;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.views$.complete();\r\n    this.selectedView$.complete();\r\n    this.stack$.complete();\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeView(viewGuid: string): void {\r\n    this.selectedView$.next(viewGuid);\r\n    this.getStack();\r\n  }\r\n\r\n  private getViews(): void {\r\n    this.viewsService.getAll().subscribe(views => {\r\n      this.views$.next(views);\r\n    });\r\n  }\r\n\r\n  private getStack(): void {\r\n    this.analyzeSettingsService.getStack(this.part, undefined, this.selectedView$.value, true).subscribe(stack => {\r\n      this.stack$.next(stack);\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          field: 'Key',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'primary-action no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const item: SettingsStackItem = params.data;\r\n            return item.Path;\r\n          },\r\n          cellRenderer: AnalyzeSettingsKeyComponent,\r\n        },\r\n        {\r\n          field: 'Value',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'primary-action no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const item: SettingsStackItem = params.data;\r\n            return item._value;\r\n          },\r\n          cellRenderer: AnalyzeSettingsValueComponent,\r\n        },\r\n        {\r\n          field: 'Source',\r\n          flex: 1,\r\n          minWidth: 150,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const item: SettingsStackItem = params.data;\r\n            return item.Source;\r\n          },\r\n        },\r\n        {\r\n          field: 'Total',\r\n          width: 72,\r\n          headerClass: 'dense',\r\n          cellClass: 'secondary-action no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agNumberColumnFilter',\r\n          valueGetter: (params) => {\r\n            const item: SettingsStackItem = params.data;\r\n            return item.TotalResults;\r\n          },\r\n          cellRenderer: AnalyzeSettingsTotalResultsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: AnalyzeSettingsTotalResultsParams = {\r\n              openDetails: (stackItem) => {\r\n                this.router.navigate([`details/${this.selectedView$.value}/${stackItem.Path}`], { relativeTo: this.route });\r\n              },\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"projects_eav-ui_src_app_app-administration_sub-dialogs_analyze-settings_analyze-settings_comp-6cd38e.9eba865ebf2a350c.js"}