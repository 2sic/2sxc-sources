{"version":3,"sources":["./projects/ng-dialogs/src/app/permissions/permissions-routing.module.ts","./projects/ng-dialogs/src/app/permissions/services/permissions.service.ts","./projects/ng-dialogs/src/app/permissions/permissions-dialog.config.ts","./projects/ng-dialogs/src/app/permissions/services/metadata.service.ts","./projects/ng-dialogs/src/app/permissions/permissions.module.ts","./projects/ng-dialogs/src/app/content-items/services/entities.service.ts"],"names":["routes","path","component","data","dialog","children","matcher","loadChildren","then","m","EditModule","RefreshEditModule","PermissionsRoutingModule","forChild","metadataService","entitiesService","getAll","targetType","keyType","key","this","getMetadata","contentTypes","permissions","delete","id","PermissionsService","permissionsDialog","name","initContext","panelSize","panelClass","getComponent","http","context","dnnContext","typeId","contentTypeName","get","$2sxc","apiUrl","params","appId","toString","contentType","MetadataService","PermissionsModule","withComponents","type","tryForce","force","EntitiesService"],"mappings":"+FACA,gGAKMA,EAAiB,CACrB,CACEC,KAAM,GAAIC,UAAW,IAAsBC,KAAM,CAAEC,OAAQ,KAAqBC,SAAU,CACxF,CACEC,QAAS,IACTC,aAAc,WAAM,4GAAuCC,KAAK,SAAAC,GAAK,OAAAA,EAAEC,eAEzE,CACEJ,QAAS,IACTC,aAAc,WAAM,yCAA+CC,KAAK,SAAAC,GAAK,OAAAA,EAAEE,yBAMvF,2B,6CAIaC,I,uBAAAA,I,2BAHF,CAAC,IAAaC,SAASb,IACtB,O,EAFZ,I,kCCnBA,oFAIA,aAEE,WAAoBc,EAA0CC,GAA1C,KAAAD,kBAA0C,KAAAC,kB,OAE9D,YAAAC,OAAA,SAAOC,EAAoBC,EAAiBC,GAC1C,OAAOC,KAAKN,gBAAgBO,YAA0BJ,EAAYC,EAASC,EAAK,IAAaG,aAAaC,cAG5G,YAAAC,OAAA,SAAOC,GACL,OAAOL,KAAKL,gBAAgBS,OAAO,IAAaF,aAAaC,YAAaE,GAAI,I,sCARrEC,GAAkB,sB,yBAAlBA,EAAkB,QAAlBA,EAAkB,Y,EAD/B,I,kFCJaC,EAAkC,CAC7CC,KAAM,yBACNC,aAAa,EACbC,UAAW,QACXC,WAAY,KAENC,aAAY,W,4GACiB,SAAM,yD,OACvC,MAAO,CAAP,EADiC,SAAuC,8B,sHCF5E,aAEE,WAAoBC,EAA0BC,EAA0BC,GAApD,KAAAF,OAA0B,KAAAC,UAA0B,KAAAC,a,OASxE,YAAAd,YAAA,SAAee,EAAgBlB,EAAiBC,EAAakB,GAC3D,OAAOjB,KAAKa,KAAKK,IAAOlB,KAAKe,WAAWI,MAAMN,KAAKO,OAdpC,sBAcwD,CACrEC,OAAQ,CACNC,MAAOtB,KAAKc,QAAQQ,MAAMC,WAC1B1B,WAAYmB,EAAOO,WACnBzB,QAAO,EACPC,IAAG,EACHyB,YAAaP,M,sCAjBRQ,GAAe,gC,yBAAfA,EAAe,QAAfA,EAAe,Y,EAD5B,I,kCCPA,+OAkBA,2B,6CAwBaC,I,uBAAAA,I,4BAPA,CACT,IACA,IACA,IACA,KACD,SAjBQ,CACP,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IAAaC,eAAe,IAC5B,IACA,Q,EAfJ,I,kCCfA,gGAGA,aAEE,WAAoBd,EAA0BC,EAA0BC,GAApD,KAAAF,OAA0B,KAAAC,UAA0B,KAAAC,a,OAExE,YAAAX,OAAA,SAAOwB,EAAcvB,EAAYwB,GAC/B,OAAO7B,KAAKa,KAAKT,OAAaJ,KAAKe,WAAWI,MAAMN,KAAKO,OAAO,IAAmB,UAAW,CAC5FC,OAAQ,CAAEG,YAAaI,EAAMvB,GAAIA,EAAGkB,WAAYD,MAAOtB,KAAKc,QAAQQ,MAAMC,WAAYO,MAAOD,EAASN,e,sCAL/FQ,GAAe,gC,yBAAfA,EAAe,QAAfA,EAAe,Y,EAD5B","file":"permissions-permissions-module.a0b8066593a8c4a1ab55.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { edit, refreshEdit } from '../../../../edit/edit.matcher';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { permissionsDialog } from './permissions-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: permissionsDialog }, children: [\r\n      {\r\n        matcher: edit,\r\n        loadChildren: () => import('../../../../edit/edit.module').then(m => m.EditModule)\r\n      },\r\n      {\r\n        matcher: refreshEdit,\r\n        loadChildren: () => import('../../../../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PermissionsRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { EntitiesService } from '../../content-items/services/entities.service';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { Permission } from '../models/permission.model';\r\nimport { MetadataService } from './metadata.service';\r\n\r\n@Injectable()\r\nexport class PermissionsService {\r\n  constructor(private metadataService: MetadataService, private entitiesService: EntitiesService) { }\r\n\r\n  getAll(targetType: number, keyType: string, key: string) {\r\n    return this.metadataService.getMetadata<Permission[]>(targetType, keyType, key, eavConstants.contentTypes.permissions);\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.entitiesService.delete(eavConstants.contentTypes.permissions, id, false);\r\n  }\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const permissionsDialog: DialogConfig = {\r\n  name: 'SET_PERMISSIONS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { PermissionsComponent } = await import('./permissions.component');\r\n    return PermissionsComponent;\r\n  }\r\n};\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nconst webApiRoot = 'admin/metadata/get';\r\n\r\n@Injectable()\r\nexport class MetadataService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param typeId metadataOf something. For more info checkout out eavConstants file\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of content type for which we search for permissions. Key is connected with keyType\r\n   * @param contentTypeName name of content type where permissions are stored\r\n   */\r\n  getMetadata<T>(typeId: number, keyType: string, key: string, contentTypeName: string) {\r\n    return this.http.get<T>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        targetType: typeId.toString(),\r\n        keyType,\r\n        key,\r\n        contentType: contentTypeName,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { AgGridModule } from '@ag-grid-community/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { EntitiesService } from '../content-items/services/entities.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { PermissionsActionsComponent } from './ag-grid-components/permissions-actions/permissions-actions.component';\r\nimport { PermissionsRoutingModule } from './permissions-routing.module';\r\nimport { PermissionsComponent } from './permissions.component';\r\nimport { MetadataService } from './services/metadata.service';\r\nimport { PermissionsService } from './services/permissions.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PermissionsComponent,\r\n    PermissionsActionsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PermissionsRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    AgGridModule.withComponents([]),\r\n    MatRippleModule,\r\n    MatSnackBarModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    PermissionsService,\r\n    MetadataService,\r\n    EntitiesService,\r\n  ]\r\n})\r\nexport class PermissionsModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiEntityRoot } from '../../../../../edit/shared/services';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Injectable()\r\nexport class EntitiesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.context.appId.toString(), force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}