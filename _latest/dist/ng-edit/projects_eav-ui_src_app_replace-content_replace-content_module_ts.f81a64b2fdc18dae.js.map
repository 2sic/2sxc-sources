{"version":3,"mappings":"iYAEO,MAAMA,EAAqC,CAChDC,KAAM,yBACNC,aAAa,EACbC,UAAW,SACXC,WAAY,KAENC,6DACJ,MAAQC,iCAAkCC,iGAC1C,OAAOD,oBCJX,MAAME,EAAiB,CACrB,CACEC,KAAM,GAAIC,UAAWC,IAAsBC,KAAM,CAAEC,OAAQb,GAAwBc,SAAU,CAC3F,CACEC,QAASC,KACTC,aAAc,IAAMC,0rBAA8BC,KAAKC,GAAKA,EAAEC,YAC9DT,KAAM,CAAEU,SAAS,OAUlB,IAAMC,EAAb,MAAM,sDAAOA,4DAHF,CAACC,cAAsBhB,IACtBgB,QAECD,GAAb,GCoBaE,EAAb,MAAM,sDAAOA,6DALA,CACTC,IACAC,KACDC,SAlBQ,CACPC,KACAN,EACAO,IACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,IACAC,SAOSf,GAAb,0FC1BO,IAAMd,EAAb,MAAM,QAIJ8B,YACU5B,EACA6B,EACAC,EACAC,EACAC,EACAC,SALAC,cACAA,wBACAA,cACAA,aACAA,eACAA,yBAER,MAAMC,EAAaD,KAAKJ,OAAOM,uBAC/BF,KAAKG,YAA+B,QAAlBC,EAAU,MAAVC,OAAU,EAAVA,EAAYC,cAAMC,eAAEC,QAAS,GAGjDC,WACE,MAAMC,EAA6BV,KAAKH,MAAMc,SAAS9C,KAAKC,OAC5D,GAAoB,MAAhB4C,EACF,MAAM,IAAIE,MAAM,wFAElBC,OAAkB,eAAgBH,EAAaxD,KAAM,cAAe8C,KAAKF,QAAQgB,GAAI,WAAYd,KAAKF,SAEtGY,EAAapD,eAAec,KAAKT,IAG1BqC,KAAKlC,OAAeiD,sBAAyBf,KAAKlC,OAAekD,eAClEhB,KAAKlC,OAAekD,eAAqCC,cAAcC,UAAU,KACjFlB,KAAKmB,oBAAoBT,EAAc/C,KAGzCqC,KAAKmB,oBAAoBT,EAAc/C,KAK7CyD,cACEpB,KAAKqB,UAAUC,QAGTH,oBAAoBT,EAA4B/C,GAClD+C,EAAavD,aACf6C,KAAKF,QAAQyB,KAAKvB,KAAKH,OAGzBG,KAAKqB,UAAYrB,KAAKlC,OAAO0D,KAAK7D,EAAW,CAC3C8D,WAAW,EACXC,cAAe,kBACfC,mBAAmB,EACnB9D,KAAMmC,KAAKG,WACX9C,WAAY,CACV,eACA,gBAAgBqD,EAAatD,YAC7BsD,EAAakB,cAAgB,iBAAmB,kBAC5ClB,EAAarD,WAAaqD,EAAarD,WAAa,IAI1DwE,SAAU,CAAEC,IAAK,KACjBnC,iBAAkBK,KAAKL,mBAGzBK,KAAKqB,UAAUU,cAAcb,UAAWrD,KACtCgD,OAAkB,qBAAsBH,EAAaxD,KAAM,QAASW,GAEpE,MAAMmE,EAASnE,EACf,GAA2B,OAAjB,MAANoE,OAAM,EAANA,EAAQC,aAKZ,GAAIlC,KAAKH,MAAMsC,aAAaC,QAAU,EACpC,IACEC,OAAOC,OAAOC,MAAMC,WAAWlB,cACxBmB,SAKTzC,KAAKJ,OAAO8C,SAAS,CAAC,MADpB1C,KAAKH,MAAMc,SAASgC,IAAIP,OAAS,EACN,CAAEQ,WAAY5C,KAAKH,MAAMyC,OAAQ9B,MAAO3C,GAExC,CAAE+E,WAAY5C,KAAKH,MAAMyC,OAAOA,OAAQ9B,MAAO3C,SAd5EmC,KAAKJ,OAAO8C,SAAS,CAACV,EAAOE,gBAkBjClC,KAAKD,kBAAkB8C,6DArFdjF,GAAoBkF,mGAApBlF,EAAoBmF,uFAApBnF,GAAb","names":["replaceContentDialog","name","initContext","panelSize","panelClass","getComponent","ReplaceContentComponent","t","routes","path","component","DialogEntryComponent","data","dialog","children","matcher","edit","loadChildren","Promise","then","m","EditModule","history","ReplaceContentRoutingModule","RouterModule","ReplaceContentModule","Context","ContentGroupService","imports","CommonModule","SharedComponentsModule","MatDialogModule","MatButtonModule","MatIconModule","MatFormFieldModule","MatSelectModule","FormsModule","MatSnackBarModule","MatAutocompleteModule","MatInputModule","ScrollingModule","constructor","viewContainerRef","router","route","context","changeDetectorRef","this","navigation","getCurrentNavigation","dialogData","r","d","extras","_a","state","ngOnInit","dialogConfig","snapshot","Error","consoleLogAngular","id","_dialogAnimatingOpen","_lastDialogRef","afterOpened","subscribe","openDialogComponent","ngOnDestroy","dialogRef","close","init","open","autoFocus","backdropClass","closeOnNavigation","showScrollbar","position","top","afterClosed","navRes","l","navigateUrl","pathFromRoot","length","window","parent","$2sxc","totalPopup","error","navigate","url","relativeTo","markForCheck","i0","selectors"],"sources":["./projects/eav-ui/src/app/replace-content/replace-content-dialog.config.ts","./projects/eav-ui/src/app/replace-content/replace-content-routing.module.ts","./projects/eav-ui/src/app/replace-content/replace-content.module.ts","./projects/eav-ui/src/app/shared/components/dialog-entry/dialog-entry.component.ts"],"sourcesContent":["import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const replaceContentDialog: DialogConfig = {\r\n  name: 'REPLACE_CONTENT_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ReplaceContentComponent } = await import('./replace-content.component');\r\n    return ReplaceContentComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { edit } from '../edit/edit.matcher';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { replaceContentDialog } from './replace-content-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: replaceContentDialog }, children: [\r\n      {\r\n        matcher: edit,\r\n        loadChildren: () => import('../edit/edit.module').then(m => m.EditModule),\r\n        data: { history: false },\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ReplaceContentRoutingModule { }\r\n","import { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { ContentGroupService } from '../manage-content-list/services/content-group.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { ReplaceContentRoutingModule } from './replace-content-routing.module';\r\nimport { ReplaceContentComponent } from './replace-content.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ReplaceContentComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReplaceContentRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    MatSnackBarModule,\r\n    MatAutocompleteModule,\r\n    MatInputModule,\r\n    ScrollingModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    ContentGroupService,\r\n  ]\r\n})\r\nexport class ReplaceContentModule { }\r\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit, Type, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NavigateFormResult } from '../../../edit/shared/models';\r\nimport { consoleLogAngular } from '../../helpers/console-log-angular.helper';\r\nimport { DialogConfig } from '../../models/dialog-config.model';\r\nimport { EavWindow } from '../../models/eav-window.model';\r\nimport { Context } from '../../services/context';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-dialog-entry',\r\n  templateUrl: './dialog-entry.component.html',\r\n  styleUrls: ['./dialog-entry.component.scss'],\r\n})\r\nexport class DialogEntryComponent implements OnInit, OnDestroy {\r\n  private dialogData: Record<string, any>;\r\n  private dialogRef: MatDialogRef<any>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.dialogData = navigation?.extras?.state || {};\r\n  }\r\n\r\n  ngOnInit() {\r\n    const dialogConfig: DialogConfig = this.route.snapshot.data.dialog;\r\n    if (dialogConfig == null) {\r\n      throw new Error(`Could not find config for dialog. Did you forget to add DialogConfig to route data?`);\r\n    }\r\n    consoleLogAngular('Open dialog:', dialogConfig.name, 'Context id:', this.context.id, 'Context:', this.context);\r\n\r\n    dialogConfig.getComponent().then(component => {\r\n      // spm Workaround for \"feature\" where you can't open new dialog while last one is still opening\r\n      // https://github.com/angular/components/commit/728cf1c8ebd49e089f4bae945511bb0918972c26\r\n      if ((this.dialog as any)._dialogAnimatingOpen && (this.dialog as any)._lastDialogRef) {\r\n        ((this.dialog as any)._lastDialogRef as MatDialogRef<any>).afterOpened().subscribe(() => {\r\n          this.openDialogComponent(dialogConfig, component);\r\n        });\r\n      } else {\r\n        this.openDialogComponent(dialogConfig, component);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private openDialogComponent(dialogConfig: DialogConfig, component: Type<any>) {\r\n    if (dialogConfig.initContext) {\r\n      this.context.init(this.route);\r\n    }\r\n\r\n    this.dialogRef = this.dialog.open(component, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: this.dialogData,\r\n      panelClass: [\r\n        'dialog-panel',\r\n        `dialog-panel-${dialogConfig.panelSize}`,\r\n        dialogConfig.showScrollbar ? 'show-scrollbar' : 'no-scrollbar',\r\n        ...(dialogConfig.panelClass ? dialogConfig.panelClass : []),\r\n      ],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n\r\n    this.dialogRef.afterClosed().subscribe((data: any) => {\r\n      consoleLogAngular('Dialog was closed:', dialogConfig.name, 'Data:', data);\r\n\r\n      const navRes = data as NavigateFormResult;\r\n      if (navRes?.navigateUrl != null) {\r\n        this.router.navigate([navRes.navigateUrl]);\r\n        return;\r\n      }\r\n\r\n      if (this.route.pathFromRoot.length <= 3) {\r\n        try {\r\n          window.parent.$2sxc.totalPopup.close();\r\n        } catch (error) { }\r\n        return;\r\n      }\r\n\r\n      if (this.route.snapshot.url.length > 0) {\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent, state: data });\r\n      } else {\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent.parent, state: data });\r\n      }\r\n    });\r\n\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"projects_eav-ui_src_app_replace-content_replace-content_module_ts.f81a64b2fdc18dae.js"}