{"version":3,"sources":["./projects/ng-dialogs/src/app/app-administration/ag-grid-components/analyze-settings-key/analyze-settings-key.component.ts","./projects/ng-dialogs/src/app/app-administration/ag-grid-components/analyze-settings-key/analyze-settings-key.component.html","./projects/ng-dialogs/src/app/app-administration/ag-grid-components/analyze-settings-total-results/analyze-settings-total-results.component.html","./projects/ng-dialogs/src/app/app-administration/ag-grid-components/analyze-settings-total-results/analyze-settings-total-results.component.ts","./projects/ng-dialogs/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings.component.html","./projects/ng-dialogs/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings.component.ts"],"names":["snackBar","agInit","params","this","key","value","refresh","copy","open","duration","AnalyzeSettingsKeyComponent","totalResults","stackItem","data","openDetails","AnalyzeSettingsTotalResultsComponent","dialogRef","route","router","viewsService","analyzeSettingsService","modules","gridOptions","frameworkComponents","analyzeSettingsKeyComponent","analyzeSettingsValueComponent","analyzeSettingsTotalComponent","columnDefs","headerName","field","flex","minWidth","cellClass","cellRenderer","sortable","filter","width","headerClass","cellRendererParams","navigate","selectedView$","Path","relativeTo","part","snapshot","paramMap","get","ngOnInit","views$","BehaviorSubject","undefined","stack$","getViews","getStack","templateVars$","combineLatest","pipe","map","views","selectedView","stack","ngOnDestroy","complete","closeDialog","close","changeView","viewGuid","next","getAll","subscribe","AnalyzeSettingsComponent"],"mappings":"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","file":"projects_ng-dialogs_src_app_app-administration_sub-dialogs_analyze-settings_analyze-settings_-614257.46f32696686116b9d78f.js","sourcesContent":["import { ICellRendererParams } from '@ag-grid-community/all-modules';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../../shared/helpers/copy-to-clipboard.helper';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings-key',\r\n  templateUrl: './analyze-settings-key.component.html',\r\n  styleUrls: ['./analyze-settings-key.component.scss'],\r\n})\r\nexport class AnalyzeSettingsKeyComponent implements ICellRendererAngularComp {\r\n  key: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.key = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy() {\r\n    copyToClipboard(this.key);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"key-box highlight\" [tippy]=\"key\" (click)=\"copy()\">\r\n  <span class=\"key\">{{ key }}</span>\r\n</div>\r\n","<div class=\"input-component no-click\" *ngIf=\"totalResults <= 1\">\r\n  <div>{{ totalResults }}</div>\r\n  <div class=\"like-button disabled\">\r\n    <mat-icon>search</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<div matRipple class=\"input-component highlight\" tippy=\"Open details\" *ngIf=\"totalResults > 1\" (click)=\"openDetails()\">\r\n  <div class=\"text\">{{ totalResults }}</div>\r\n  <div class=\"like-button\">\r\n    <mat-icon>search</mat-icon>\r\n  </div>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { SettingsStackItem } from '../../sub-dialogs/analyze-settings/analyze-settings.models';\r\nimport { AnalyzeSettingsTotalResultsParams } from './analyze-settings-total-results.models';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings-total-results',\r\n  templateUrl: './analyze-settings-total-results.component.html',\r\n  styleUrls: ['./analyze-settings-total-results.component.scss'],\r\n})\r\nexport class AnalyzeSettingsTotalResultsComponent implements ICellRendererAngularComp {\r\n  totalResults: number;\r\n\r\n  private stackItem: SettingsStackItem;\r\n  private params: AnalyzeSettingsTotalResultsParams;\r\n\r\n  constructor() { }\r\n\r\n  agInit(params: AnalyzeSettingsTotalResultsParams) {\r\n    this.totalResults = params.value;\r\n    this.params = params;\r\n    this.stackItem = this.params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  openDetails() {\r\n    this.params.openDetails(this.stackItem);\r\n  }\r\n}\r\n","<div class=\"nav-component-wrapper\" *ngIf=\"(templateVars$ | async) as data\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Analyze {{ part }}</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <p class=\"dialog-description\">\r\n    Settings and Resources are consolidated from many sources. Here you see what the resulting values would be.\r\n  </p>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <mat-form-field appearance=\"standard\" color=\"accent\" class=\"view-select-box\">\r\n    <mat-label>Merge settings / resources of a View</mat-label>\r\n    <mat-select [ngModel]=\"data.selectedView\" (ngModelChange)=\"changeView($event)\">\r\n      <mat-option [value]=\"undefined\">No view selected - this is how APIs see the data</mat-option>\r\n      <mat-option *ngFor=\"let view of data.views\" [value]=\"view.Guid\">{{ view.Name }}</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <div class=\"grid-wrapper\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"data.stack\" [modules]=\"modules\" [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n\r\n    <div class=\"grid-more-actions-box\"></div>\r\n  </div>\r\n</div>\r\n","import { AllCommunityModules, GridOptions } from '@ag-grid-community/all-modules';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { AnalyzeSettingsKeyComponent } from '../../ag-grid-components/analyze-settings-key/analyze-settings-key.component';\r\nimport { AnalyzeSettingsTotalResultsComponent } from '../../ag-grid-components/analyze-settings-total-results/analyze-settings-total-results.component';\r\nimport { AnalyzeSettingsTotalResultsParams } from '../../ag-grid-components/analyze-settings-total-results/analyze-settings-total-results.models';\r\nimport { AnalyzeSettingsValueComponent } from '../../ag-grid-components/analyze-settings-value/analyze-settings-value.component';\r\nimport { View } from '../../models';\r\nimport { ViewsService } from '../../services';\r\nimport { AnalyzeSettingsService } from '../../services/analyze-settings.service';\r\nimport { AnalyzePart, AnalyzeSettingsTemplateVars, SettingsStackItem } from './analyze-settings.models';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings',\r\n  templateUrl: './analyze-settings.component.html',\r\n  styleUrls: ['./analyze-settings.component.scss'],\r\n})\r\nexport class AnalyzeSettingsComponent implements OnInit, OnDestroy {\r\n  part: AnalyzePart;\r\n  templateVars$: Observable<AnalyzeSettingsTemplateVars>;\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      analyzeSettingsKeyComponent: AnalyzeSettingsKeyComponent,\r\n      analyzeSettingsValueComponent: AnalyzeSettingsValueComponent,\r\n      analyzeSettingsTotalComponent: AnalyzeSettingsTotalResultsComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'Key', field: 'Path', flex: 2, minWidth: 250, cellClass: 'primary-action no-padding no-outline',\r\n        cellRenderer: 'analyzeSettingsKeyComponent', sortable: true, filter: 'agTextColumnFilter',\r\n      },\r\n      {\r\n        headerName: 'Value', field: '_value', flex: 2, minWidth: 250, cellClass: 'primary-action no-padding no-outline',\r\n        cellRenderer: 'analyzeSettingsValueComponent', sortable: true, filter: 'agTextColumnFilter',\r\n      },\r\n      {\r\n        headerName: 'Source', field: 'Source', flex: 1, minWidth: 150, cellClass: 'no-outline',\r\n        sortable: true, filter: 'agTextColumnFilter',\r\n      },\r\n      {\r\n        headerName: 'Total', field: 'TotalResults', width: 72, headerClass: 'dense', cellClass: 'secondary-action no-padding no-outline',\r\n        cellRenderer: 'analyzeSettingsTotalComponent', sortable: true, filter: 'agNumberColumnFilter', cellRendererParams: {\r\n          openDetails: (stackItem) => {\r\n            this.router.navigate([`details/${this.selectedView$.value}/${stackItem.Path}`], { relativeTo: this.route });\r\n          },\r\n        } as AnalyzeSettingsTotalResultsParams,\r\n      },\r\n    ],\r\n  };\r\n\r\n  private views$: BehaviorSubject<View[]>;\r\n  private selectedView$: BehaviorSubject<string>;\r\n  private stack$: BehaviorSubject<SettingsStackItem[]>;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AnalyzeSettingsComponent>,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private viewsService: ViewsService,\r\n    private analyzeSettingsService: AnalyzeSettingsService,\r\n  ) {\r\n    this.part = this.route.snapshot.paramMap.get('part') as AnalyzePart;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.views$ = new BehaviorSubject<View[]>([]);\r\n    this.selectedView$ = new BehaviorSubject<string>(undefined);\r\n    this.stack$ = new BehaviorSubject<SettingsStackItem[]>([]);\r\n\r\n    this.getViews();\r\n    this.getStack();\r\n\r\n    this.templateVars$ = combineLatest([this.views$, this.selectedView$, this.stack$]).pipe(\r\n      map(([views, selectedView, stack]) => {\r\n        const templateVars: AnalyzeSettingsTemplateVars = {\r\n          views,\r\n          selectedView,\r\n          stack,\r\n        };\r\n        return templateVars;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.views$.complete();\r\n    this.selectedView$.complete();\r\n    this.stack$.complete();\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeView(viewGuid: string): void {\r\n    this.selectedView$.next(viewGuid);\r\n    this.getStack();\r\n  }\r\n\r\n  private getViews(): void {\r\n    this.viewsService.getAll().subscribe(views => {\r\n      this.views$.next(views);\r\n    });\r\n  }\r\n\r\n  private getStack(): void {\r\n    this.analyzeSettingsService.getStack(this.part, undefined, this.selectedView$.value, true).subscribe(stack => {\r\n      this.stack$.next(stack);\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}