{"version":3,"file":"default-projects_eav-ui_src_app_shared_components_file-upload-dialog_index_ts.38c31dbadaf8444a.js","mappings":"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","names":["BaseDirective","constructor","this","subscriptions","Subscription","ngOnDestroy","unsubscribe","static","__ngFactoryType__","_angular_core__WEBPACK_IMPORTED_MODULE_1__","FsC","AppInstallSettingsService","http","installSettingsSubject","Subject","settings$","asObservable","pipe","map","startWith","subscribe","loadGettingStarted","isContentApp","get","json","next","i0","i1","_angular_core__WEBPACK_IMPORTED_MODULE_3__","jDH","factory","ɵfac","ImportModeValues","importOriginal","importAsTemplate","FileUploadMessageTypes","Warning","Success","Error","UploadTypes","App","AppPart","ContentType","ContentItem","Query","View","FileUploadDialogComponent_Conditional_11_Conditional_7_Template","FileUploadDialogComponent_Conditional_11_Conditional_8_Template","ctx_r1","importForm","importModeValues","tmp_5_0","value","file_r4","name","_r5","toggleShowAppCatalog","uploading","invalid","_r6","upload","files","length","result","_r7","closeDialog","_r8","_c1","message_r9","MessageType","Text","FileUploadDialogComponent_Conditional_21_Conditional_1_Template","FileUploadDialogComponent_Conditional_21_Conditional_2_Template","FileUploadDialogComponent_Conditional_21_For_4_Template","Messages","remoteInstallerUrl","currentPackage","displayName","FileUploadDialogComponent_Conditional_22_Conditional_0_Template","FileUploadDialogComponent_Conditional_22_Conditional_1_Template","ready","showProgress","FileUploadDialogComponent","BaseComponent","#installerService","#installSettingsService","#fb","dialogData","dialog","snackBar","sanitizer","context","changeDetectorRef","super","hostClass","uploadType","input","signal","showAppCatalog","undefined","urlChangeImportMode","transient","InstallerService","inject","FormBuilder","group","importMode","Validators","required","#alreadyProcessing","#messages$","fromEvent","window","filter","evt","origin","JSON","parse","data","e","console","error","Number","moduleId","add","settings","remoteUrl","bypassSecurityTrustResourceUrl","#setupConditionalValidation","ngOnInit","valueChanges","mode","isTemplate","url","includes","filesDropped","action","tap","winFrame","installerWindow","nativeElement","specsMsg","installedApps","rules","app","target","appGuid","guid","specsJson","stringify","contentWindow","postMessage","log","Object","values","packages","msg","reduce","t","c","confirm","switchMap","detectChanges","installPackages","p","alert","top","location","reload","catchError","Message","message","of","refresh","close","nameControl","setValidators","updateValueAndValidity","#setFiles","filesChanged","event","Array","from","set","upload$","take","open","duration","multiple","slice","MAT_DIALOG_DATA","i2","i3","i4","debug_node_JnOYh9kg","VBU","selectors","viewQuery","rf","ctx","$event","_r1","FileUploadDialogComponent_Conditional_8_Template","FileUploadDialogComponent_Conditional_11_Template","fileInput_r3","click","FileUploadDialogComponent_Conditional_14_Template","FileUploadDialogComponent_For_16_Template","FileUploadDialogComponent_Conditional_19_Template","FileUploadDialogComponent_Conditional_20_Template","FileUploadDialogComponent_Conditional_21_Template","FileUploadDialogComponent_Conditional_22_Template","allowedFileTypes","title","description","valid","NgClass","MatDialogModule","MatProgressSpinnerModule","i5","SafeHtmlPipe","DragAndDropDirective","MatButtonModule","i6","MatIconModule","i7","MatRadioModule","i8","MatInputModule","i9","i10","ReactiveFormsModule","i11","styles","step","post","_angular_core__WEBPACK_IMPORTED_MODULE_2__","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","eventName","options","resultSelector","isFunction","mapOneOrManyArgs","remove","isEventTarget","addEventListener","removeEventListener","methodName","handler","isNodeStyleEventEmitter","addListener","removeListener","toCommonHandlerRegistry","isJQueryStyleEventEmitter","on","off","isArrayLike","mergeMap","subTarget","innerFrom","TypeError","Observable","subscriber","args","elementRef","zone","markStyle","output","dropAreaClass","markStyleClass","dragClass","timeouts","element","classList","runOutsideAngular","preventDefault","stopPropagation","clearTimeouts","push","setTimeout","onDrop","dataTransfer","filterTypes","emit","timeout","clearTimeout","allowedTypes","split","type","toLocaleLowerCase","filtered","file","extIndex","lastIndexOf","ext","substring","allowedTypesString","replace","_angular_core__WEBPACK_IMPORTED_MODULE_4__","hostBindings","_c0","MatProgressSpinner_ng_template_0_Template","ctx_r0","_viewBox","_strokeCircumference","_circleStrokeWidth","_circleRadius","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","InjectionToken","providedIn","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","BASE_SIZE","MatProgressSpinner","_elementRef","ElementRef","_noopAnimations","color","_color","_defaultColor","_determinateCircle","defaults","_animationsDisabled","_forceAnimations","nodeName","toLowerCase","strokeWidth","_value","v","Math","max","min","_diameter","size","_strokeWidth","viewBox","PI","_strokeDashOffset","_t","first","hostAttrs","hostVars","inputs","numberAttribute","exportAs","decls","vars","consts","template","circle_r2","dependencies","NgTemplateOutlet","encapsulation","changeDetection","imports","MatCommonModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/directives/base.directive.ts","./projects/eav-ui/src/app/shared/services/getting-started.service.ts","./projects/eav-ui/src/app/shared/components/file-upload-dialog/file-upload-dialog.models.ts","./projects/eav-ui/src/app/shared/components/file-upload-dialog/file-upload-dialog.component.html","./projects/eav-ui/src/app/shared/components/file-upload-dialog/file-upload-dialog.component.ts","./projects/eav-ui/src/app/shared/services/installer.service.ts","./node_modules/rxjs/dist/esm/internal/observable/fromEvent.js","./projects/eav-ui/src/app/shared/directives/drag-and-drop.directive.ts","./node_modules/@angular/material/fesm2022/progress-spinner.mjs","./projects/eav-ui/src/app/shared/components/base.component.ts"],"sourcesContent":["import { Directive, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class BaseDirective implements OnDestroy {\r\n  /** Holds all subscriptions to be unsubscribed on destroy */\r\n  protected subscriptions = new Subscription();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","\r\nimport { startWith, map, tap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { InstallSettings } from '../models/installer-models';\r\n\r\n// copied from 2sxc-ui app/installer\r\n@Injectable()\r\nexport class AppInstallSettingsService {\r\n\r\n  private installSettingsSubject: Subject<InstallSettings> = new Subject<InstallSettings>();\r\n  settings$: Observable<InstallSettings> = this.installSettingsSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n    const ready$ = this.settings$.pipe(\r\n      map(() => true),\r\n      startWith(false));\r\n\r\n    ready$.subscribe();\r\n  }\r\n\r\n  public loadGettingStarted(isContentApp: boolean): void {\r\n    this.http.get<InstallSettings>(`sys/install/InstallSettings?isContentApp=${isContentApp}`)\r\n      .subscribe(json => this.installSettingsSubject.next(json));\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { Of } from '../../../../../../core';\r\n\r\nexport interface FileUploadDialogData {\r\n  title?: string;\r\n  description?: string;\r\n  allowedFileTypes?: string;\r\n  files?: File[];\r\n  multiple?: boolean;\r\n  // upload$?(files: File[]): Observable<FileUploadResult>;\r\n  upload$?(files: File[], name?: string): Observable<FileUploadResult>;\r\n}\r\n\r\nexport enum ImportModeValues {\r\n  importOriginal = 'importOriginal',\r\n  importAsTemplate = 'importAsTemplate',\r\n}\r\n\r\n\r\nexport interface FileUploadResult {\r\n  Messages: FileUploadResultMessage[];\r\n  Success: boolean;\r\n}\r\n\r\nexport interface FileUploadResultMessage {\r\n  MessageType: Of<typeof FileUploadMessageTypes>;\r\n  Text: string;\r\n}\r\n\r\nexport const FileUploadMessageTypes = {\r\n  Warning: 0,\r\n  Success: 1,\r\n  Error: 2,\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n\r\nexport const UploadTypes = {\r\n  App: 0,\r\n  AppPart: 1,\r\n  ContentType: 2,\r\n  ContentItem: 3,\r\n  Query: 4,\r\n  View: 5,\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","<div class=\"eav-dialog\" style=\"margin-bottom: 12px;\" appDragAndDrop [allowedFileTypes]=\"dialogData.allowedFileTypes\" (filesDropped)=\"filesDropped($event)\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\" [innerHtml]=\"dialogData.title | safeHtml\"></div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"eav-dialog-content\">\r\n    @if (uploading()) {\r\n      <mat-spinner mode=\"indeterminate\" diameter=\"20\"></mat-spinner>\r\n    }\r\n    <p [innerHtml]=\"dialogData.description | safeHtml\"></p>\r\n\r\n    @if (uploadType() == UploadTypes.App) {\r\n      <form [formGroup]=\"importForm\">\r\n        <mat-radio-group formControlName=\"importMode\" aria-label=\"Select import mode\">\r\n          <mat-radio-button [value]=\"importModeValues.importOriginal\">Import App(s)</mat-radio-button>\r\n          <mat-radio-button [value]=\"importModeValues.importAsTemplate\">Import and Rename / Reset</mat-radio-button>\r\n        </mat-radio-group>\r\n        <br />\r\n\r\n        @if (importForm.get('importMode')?.value === importModeValues.importOriginal) {\r\n          <span>The app will be imported as is, using the original name and folder.</span>\r\n          <span>If you already have the same app installed, it will prevent you from overwriting it.</span>\r\n        } @else if (importForm.get('importMode')?.value === importModeValues.importAsTemplate) {\r\n          <span>The app will be imported using a new name / folder.</span>\r\n          <span>\r\n            This allows you to create multiple isolated copies of the same app or to create something very different using this app as a\r\n            template.\r\n          </span>\r\n          <br />\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\" style=\"max-width: 300px\">\r\n            <mat-label>Name</mat-label>\r\n            <input matInput type=\"text\" formControlName=\"name\" />\r\n          </mat-form-field>\r\n        }\r\n      </form>\r\n      <br />\r\n    }\r\n\r\n    <div>\r\n      <button mat-raised-button tippy=\"Open file browser\" [disabled]=\"uploading() || importForm.invalid\" (click)=\"fileInput.click()\">\r\n        @if (!files().length) {\r\n          <div>Select or drop file</div>\r\n        }\r\n        @for (file of files(); track file) {\r\n          <div>{{ file.name }}</div>\r\n        }\r\n      </button>\r\n      <input #fileInput type=\"file\" multiple (change)=\"filesChanged($event)\" class=\"hide\" />\r\n      @if (uploadType() == UploadTypes.App && !files().length) {\r\n        <button\r\n          mat-raised-button\r\n          class=\"eav-app-catalog-button eav-action-button\"\r\n          [disabled]=\"uploading() || importForm.invalid\"\r\n          tippy=\"Open app catalog\"\r\n          (click)=\"toggleShowAppCatalog()\"\r\n        >\r\n          Get recommended Apps from Catalog\r\n        </button>\r\n      }\r\n\r\n      @if (files().length) {\r\n        <button\r\n          class=\"eav-action-button\"\r\n          style=\"margin-left: 12px\"\r\n          mat-raised-button\r\n          [disabled]=\"!files().length || uploading() || !!result() || importForm.invalid\"\r\n          (click)=\"upload()\"\r\n        >\r\n          Upload\r\n        </button>\r\n      }\r\n    </div>\r\n    @if (result()) {\r\n      <div class=\"eav-result-container\">\r\n        @if (result().Success) {\r\n          <div class=\"sxc-message sxc-message-info\">\r\n            Upload succeeded. See the messages below for more information.\r\n            <a href=\"javascript:void(0)\" (click)=\"closeDialog(true)\">Close</a>\r\n          </div>\r\n        }\r\n        @if (!result().Success) {\r\n          <div class=\"sxc-message sxc-message-error\">\r\n            Upload failed. See the messages below for more information.\r\n            <a href=\"javascript:void(0)\" (click)=\"closeDialog(true)\">Close</a>\r\n          </div>\r\n        }\r\n        @for (message of result().Messages; track message) {\r\n          <div\r\n            class=\"sxc-message\"\r\n            [ngClass]=\"{\r\n              'sxc-message-warning': message.MessageType === FileUploadMessageTypes.Warning,\r\n              'sxc-message-success': message.MessageType === FileUploadMessageTypes.Success,\r\n              'sxc-message-error': message.MessageType === FileUploadMessageTypes.Error,\r\n            }\"\r\n          >\r\n            {{ message.Text }}\r\n          </div>\r\n        }\r\n      </div>\r\n    }\r\n    @if (uploadType() == UploadTypes.App && showAppCatalog() && !files().length && importForm.valid) {\r\n      @if (ready) {\r\n        <iframe #installerWindow class=\"eav-app-catalog-iframe\" [src]=\"remoteInstallerUrl\"></iframe>\r\n      }\r\n      @if (showProgress) {\r\n        <div class=\"eav-progress\">\r\n          <mat-progress-spinner [mode]=\"'indeterminate'\"></mat-progress-spinner>\r\n          <span>Installing {{ currentPackage?.displayName }}..</span>\r\n        </div>\r\n      }\r\n    }\r\n  </div>\r\n</div>\r\n","import { NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, ElementRef, HostBinding, inject, Inject, input, OnDestroy, OnInit, signal, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { catchError, filter, fromEvent, map, of, switchMap, take, tap } from 'rxjs';\r\nimport { Of, transient } from '../../../../../../core';\r\nimport { DragAndDropDirective } from '../../directives/drag-and-drop.directive';\r\nimport { CrossWindowMessage, InstallPackage, InstallSettings, SpecsForInstaller } from '../../models/installer-models';\r\nimport { SafeHtmlPipe } from '../../pipes/safe-html.pipe';\r\nimport { Context } from '../../services/context';\r\nimport { AppInstallSettingsService } from '../../services/getting-started.service';\r\nimport { InstallerService } from '../../services/installer.service';\r\nimport { BaseComponent } from '../base.component';\r\nimport { FileUploadDialogData, FileUploadMessageTypes, FileUploadResult, ImportModeValues, UploadTypes } from './file-upload-dialog.models';\r\n\r\n\r\n@Component({\r\n  selector: 'app-file-upload-dialog',\r\n  templateUrl: './file-upload-dialog.component.html',\r\n  styleUrls: ['./file-upload-dialog.component.scss'],\r\n  imports: [\r\n    NgClass,\r\n    MatDialogModule,\r\n    MatProgressSpinnerModule,\r\n    SafeHtmlPipe,\r\n    DragAndDropDirective,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatRadioModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class FileUploadDialogComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  uploadType = input<Of<typeof UploadTypes>>();\r\n\r\n  @ViewChild('installerWindow') installerWindow: ElementRef;\r\n\r\n  uploading = signal(false);\r\n  showAppCatalog = signal(false);\r\n  result = signal<FileUploadResult>(undefined);\r\n  files = signal<File[]>([]);\r\n\r\n  FileUploadMessageTypes = FileUploadMessageTypes;\r\n  UploadTypes = UploadTypes;\r\n  importModeValues = ImportModeValues;\r\n\r\n  showProgress: boolean = false;\r\n  currentPackage: InstallPackage;\r\n  remoteInstallerUrl = '';\r\n  urlChangeImportMode = \"\"\r\n  ready = false;\r\n  settings: InstallSettings;\r\n\r\n  #installerService = transient(InstallerService);\r\n  #installSettingsService = transient(AppInstallSettingsService);\r\n  #fb = inject(FormBuilder);\r\n\r\n  importForm: FormGroup = this.#fb.group({\r\n    importMode: [this.importModeValues.importOriginal, Validators.required],\r\n    name: ['']\r\n  });\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: FileUploadDialogData,\r\n    private dialog: MatDialogRef<FileUploadDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private sanitizer: DomSanitizer,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n\r\n    // copied from 2sxc-ui app/installer\r\n    this.subscriptions.add(\r\n      this.#installSettingsService.settings$.subscribe(settings => {\r\n        this.settings = settings;\r\n        this.urlChangeImportMode = settings.remoteUrl\r\n        this.remoteInstallerUrl = <string>this.sanitizer.bypassSecurityTrustResourceUrl(settings.remoteUrl);\r\n        this.ready = true;\r\n      })\r\n    );\r\n\r\n    this.#setupConditionalValidation();\r\n  }\r\n\r\n  #alreadyProcessing = false;\r\n  // copied from 2sxc-ui app/installer\r\n  // Initial Observable to monitor messages\r\n  #messages$ = fromEvent(window, 'message').pipe(\r\n    // Ensure only one installation is processed.\r\n    filter(() => !this.#alreadyProcessing),\r\n    filter((evt: MessageEvent) => evt.origin === \"https://2sxc.org\"),\r\n    // Get data from event.\r\n    map((evt: MessageEvent) => {\r\n      try {\r\n        return JSON.parse(evt.data) as CrossWindowMessage;\r\n      } catch (e) {\r\n        console.error('error procesing message. Message was ' + evt.data, e);\r\n        return void 0;\r\n      }\r\n    }),\r\n    // Check if data is valid and the moduleID matches\r\n    filter(data => data && Number(data.moduleId) === this.context.moduleId),\r\n  );\r\n\r\n  ngOnInit(): void {\r\n\r\n    // Update the remote installer URL based on the import mode\r\n    // Show multiple select or single select based on import mode\r\n    this.importForm.get('importMode')?.valueChanges.subscribe((mode) => {\r\n      const isTemplate = mode === this.importModeValues.importAsTemplate;\r\n      const url = this.urlChangeImportMode + (this.urlChangeImportMode.includes('?') ? '&' : '?') + `selectOnlyMode=${isTemplate}`;\r\n      this.remoteInstallerUrl = <string>this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n    });\r\n\r\n\r\n    if (this.dialogData.files != null)\r\n      this.filesDropped(this.dialogData.files);\r\n\r\n    // copied from 2sxc-ui\r\n    this.#installSettingsService.loadGettingStarted(false); // Passed as input from 2sxc-ui\r\n\r\n    // copied from 2sxc-ui app/installer\r\n    this.subscriptions.add(this.#messages$.pipe(\r\n      // Verify it's for this action\r\n      filter(data => data.action === 'specs'),\r\n      // Send message to iframe\r\n      tap(() => {\r\n        const winFrame = this.installerWindow.nativeElement as HTMLIFrameElement;\r\n        const specsMsg: SpecsForInstaller = {\r\n          action: 'specs',\r\n          data: {\r\n            //currently not used\r\n            installedApps: this.settings.installedApps,//.map(app => ((app as InstalledApp).guid)),\r\n            //currently used to forbid already installed apps\r\n            rules: this.settings.installedApps.map(app => ({ target: 'guid', appGuid: app.guid, mode: 'f', url: '' })),//this.settings.rules,\r\n          },\r\n        };\r\n        const specsJson = JSON.stringify(specsMsg);\r\n        winFrame.contentWindow.postMessage(specsJson, '*');\r\n        console.log('debug: just sent specs message:' + specsJson, specsMsg, winFrame);\r\n      }),\r\n    ).subscribe());\r\n\r\n    // copied from 2sxc-ui app/installer\r\n    // Subscription to listen to 'install' messages\r\n    this.subscriptions.add(this.#messages$.pipe(\r\n      filter(data => data.action === 'install'),\r\n      // Get packages from data.\r\n      map(data => Object.values(data.packages)),\r\n      // Show confirm dialog.\r\n      filter(packages => {\r\n        const packagesDisplayNames = packages\r\n          .reduce((t, c) => `${t} - ${c.displayName}\\n`, '');\r\n\r\n        const msg = `Do you want to install these packages?\r\n\r\n${packagesDisplayNames}\r\nThis takes about 10 seconds per package. Don't reload the page while it's installing.`;\r\n        return confirm(msg);\r\n      }),\r\n      // Install the packages one at a time\r\n      switchMap(packages => {\r\n        this.#alreadyProcessing = true;\r\n        this.showProgress = true;\r\n        this.changeDetectorRef.detectChanges(); //without this spinner is not shown\r\n        return this.#installerService.installPackages(packages, p => this.currentPackage = p);\r\n      }),\r\n      tap(() => {\r\n        this.showProgress = false;\r\n        this.changeDetectorRef.detectChanges(); //without this spinner is not removed (though window reload will remove it anyway) so maybe unnecessary\r\n        alert('Installation complete 👍');\r\n        window.top.location.reload();\r\n        this.closeDialog(true);\r\n      }),\r\n      catchError(error => {\r\n        console.error('Error: ', error);\r\n        this.showProgress = false;\r\n        this.#alreadyProcessing = false;\r\n        this.changeDetectorRef.detectChanges(); //without this spinner is not removed\r\n        const errorMsg = `An error occurred: Package ${this.currentPackage.displayName}\r\n\r\n${error.error?.Message ?? error.error?.message ?? ''}\r\n\r\n${error.message}\r\n\r\nPlease try again later or check how to manually install content-templates: https://azing.org/2sxc/r/0O4OymoA`;\r\n        alert(errorMsg);\r\n        return of(error);\r\n      }),\r\n    ).subscribe());\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(refresh?: boolean): void {\r\n    this.dialog.close(refresh);\r\n  }\r\n\r\n  #setupConditionalValidation(): void {\r\n    const nameControl = this.importForm.get('name');\r\n    this.importForm.get('importMode')?.valueChanges.subscribe(mode => {\r\n      const isTemplate = mode === this.importModeValues.importAsTemplate;\r\n      nameControl?.setValidators(isTemplate ? [Validators.required] : null);\r\n      nameControl?.updateValueAndValidity();\r\n    });\r\n  }\r\n\r\n\r\n  filesDropped(files: File[]): void {\r\n    this.#setFiles(files);\r\n  }\r\n\r\n  filesChanged(event: Event): void {\r\n    const fileList = (event.target as HTMLInputElement).files;\r\n    const files = Array.from(fileList);\r\n    this.#setFiles(files);\r\n  }\r\n\r\n  upload(): void {\r\n    this.uploading.set(true);\r\n    const name = this.importForm.get('name')?.value as string;\r\n    this.subscriptions.add(\r\n      this.dialogData.upload$(this.files(), name).pipe(take(1)).subscribe({\r\n        next: (result) => {\r\n          this.uploading.set(false);\r\n          this.result.set(result);\r\n        },\r\n        error: () => {\r\n          this.uploading.set(false);\r\n          this.result.set(undefined);\r\n          this.snackBar.open('Upload failed. Please check console for more information', undefined, { duration: 3000 });\r\n        },\r\n      }),\r\n    );\r\n  }\r\n\r\n  toggleShowAppCatalog(): void {\r\n    this.showAppCatalog.set(!this.showAppCatalog());\r\n  }\r\n\r\n  #setFiles(files: File[]): void {\r\n    if (!this.dialogData.multiple)\r\n      files = files.slice(0, 1);\r\n\r\n    this.files.set(files);\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { InstallPackage } from '../models/installer-models';\r\n\r\n// copied from 2sxc-ui app/installer\r\n@Injectable()\r\nexport class InstallerService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  installPackages(packages: InstallPackage[], step: (p: InstallPackage) => void): Observable<any> {\r\n    return packages.reduce(\r\n      (t: Observable<Response>, c) => t.pipe(\r\n        switchMap(() => {\r\n          if (!c.url) return of(true);\r\n          step(c);\r\n          return <Observable<any>>this.http.post(`sys/install/RemotePackage?packageUrl=${c.url}`, {});\r\n        })),\r\n      of(true));\r\n  }\r\n}\r\n","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'];\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'];\nconst jqueryMethods = ['on', 'off'];\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));\n    }\n    const [add, remove] = isEventTarget(target)\n        ? eventTargetMethods.map((methodName) => (handler) => target[methodName](eventName, handler, options))\n        :\n            isNodeStyleEventEmitter(target)\n                ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n                : isJQueryStyleEventEmitter(target)\n                    ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n                    : [];\n    if (!add) {\n        if (isArrayLike(target)) {\n            return mergeMap((subTarget) => fromEvent(subTarget, eventName, options))(innerFrom(target));\n        }\n    }\n    if (!add) {\n        throw new TypeError('Invalid event target');\n    }\n    return new Observable((subscriber) => {\n        const handler = (...args) => subscriber.next(1 < args.length ? args : args[0]);\n        add(handler);\n        return () => remove(handler);\n    });\n}\nfunction toCommonHandlerRegistry(target, eventName) {\n    return (methodName) => (handler) => target[methodName](eventName, handler);\n}\nfunction isNodeStyleEventEmitter(target) {\n    return isFunction(target.addListener) && isFunction(target.removeListener);\n}\nfunction isJQueryStyleEventEmitter(target) {\n    return isFunction(target.on) && isFunction(target.off);\n}\nfunction isEventTarget(target) {\n    return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","import { Directive, ElementRef, HostListener, input, NgZone, OnDestroy, OnInit, output, signal } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { fromEvent } from 'rxjs';\r\nimport { BaseDirective } from './base.directive';\r\n\r\n@Directive({\r\n  selector: '[appDragAndDrop]',\r\n})\r\nexport class DragAndDropDirective extends BaseDirective implements OnInit, OnDestroy {\r\n  markStyle = input<'outline' | 'fill' | 'shadow'>('outline');\r\n  /** Comma separated file types, e.g. 'txt,doc,docx' */\r\n  allowedFileTypes = input<string>('');\r\n  protected filesDropped = output<File[]>();\r\n\r\n  private element: HTMLElement;\r\n  private dropAreaClass = 'eav-droparea';\r\n  private markStyleClass = signal<string>('');\r\n  private dragClass = 'eav-dragover';\r\n  private timeouts: number[] = [];\r\n\r\n  constructor(elementRef: ElementRef, private zone: NgZone, private snackBar: MatSnackBar) {\r\n    super();\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.markStyleClass.set(`eav-droparea-${this.markStyle()}`);\r\n    this.element.classList.add(this.dropAreaClass, this.markStyleClass());\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<DragEvent>(this.element, 'dragover').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.clearTimeouts();\r\n          this.element.classList.add(this.dragClass);\r\n        })\r\n      );\r\n      this.subscriptions.add(\r\n        fromEvent<DragEvent>(this.element, 'dragleave').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.timeouts.push(\r\n            window.setTimeout(() => { this.element.classList.remove(this.dragClass); }, 50)\r\n          );\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dropAreaClass, this.markStyleClass(), this.dragClass);\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(event: DragEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dragClass);\r\n    const fileList = event.dataTransfer.files;\r\n    let files = Array.from(fileList);\r\n    files = this.filterTypes(files, this.allowedFileTypes());\r\n    if (files.length > 0) {\r\n      this.filesDropped.emit(files);\r\n    }\r\n  }\r\n\r\n  private clearTimeouts() {\r\n    for (const timeout of this.timeouts) {\r\n      clearTimeout(timeout);\r\n    }\r\n    this.timeouts = [];\r\n  }\r\n\r\n  private filterTypes(files: File[], allowedFileTypes: string) {\r\n    if (allowedFileTypes === '') { return files; }\r\n\r\n    const allowedTypes = allowedFileTypes.split(',').map(type => type.toLocaleLowerCase());\r\n    const filtered = files.filter(file => {\r\n      const extIndex = file.name.lastIndexOf('.');\r\n      if (extIndex <= 0) { return false; }\r\n      const ext = file.name.substring(extIndex + 1).toLocaleLowerCase();\r\n      const allowed = allowedTypes.includes(ext);\r\n      return allowed;\r\n    });\r\n\r\n    if (files.length !== filtered.length) {\r\n      const allowedTypesString = this.allowedFileTypes().replace(/\\,/g, ', ');\r\n      const message = filtered.length\r\n        ? 'Some files were filtered out. This drop location only accepts file types: ' + allowedTypesString\r\n        : 'This drop location only accepts file types: ' + allowedTypesString;\r\n      this.snackBar.open(message, null, { duration: 5000 });\r\n    }\r\n    return filtered;\r\n  }\r\n}\r\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, numberAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ViewChild, NgModule } from '@angular/core';\nimport { NgTemplateOutlet } from '@angular/common';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\n\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n/**\n * Base reference size of the spinner.\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n */\nconst BASE_STROKE_WIDTH = 10;\nclass MatProgressSpinner {\n    _elementRef = inject(ElementRef);\n    /** Whether the _mat-animation-noopable class should be applied, disabling animations.  */\n    _noopAnimations;\n    // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n    /**\n     * Theme color of the progress spinner. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/progress-spinner/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    get color() {\n        return this._color || this._defaultColor;\n    }\n    set color(value) {\n        this._color = value;\n    }\n    _color;\n    _defaultColor = 'primary';\n    /** The element of the determinate spinner. */\n    _determinateCircle;\n    constructor() {\n        const defaults = inject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS);\n        this._noopAnimations = _animationsDisabled() && !!defaults && !defaults._forceAnimations;\n        this.mode =\n            this._elementRef.nativeElement.nodeName.toLowerCase() === 'mat-spinner'\n                ? 'indeterminate'\n                : 'determinate';\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this._defaultColor = defaults.color;\n            }\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /**\n     * Mode of the progress bar.\n     *\n     * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n     * 'determinate'.\n     * Mirrored to mode attribute.\n     */\n    mode;\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(v) {\n        this._value = Math.max(0, Math.min(100, v || 0));\n    }\n    _value = 0;\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() {\n        return this._diameter;\n    }\n    set diameter(size) {\n        this._diameter = size || 0;\n    }\n    _diameter = BASE_SIZE;\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth ?? this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = value || 0;\n    }\n    _strokeWidth;\n    /** The radius of the spinner, adjusted for stroke width. */\n    _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _viewBox() {\n        const viewBox = this._circleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return (this._strokeCircumference() * (100 - this._value)) / 100;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _circleStrokeWidth() {\n        return (this.strokeWidth / this.diameter) * 100;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressSpinner, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatProgressSpinner, isStandalone: true, selector: \"mat-progress-spinner, mat-spinner\", inputs: { color: \"color\", mode: \"mode\", value: [\"value\", \"value\", numberAttribute], diameter: [\"diameter\", \"diameter\", numberAttribute], strokeWidth: [\"strokeWidth\", \"strokeWidth\", numberAttribute] }, host: { attributes: { \"role\": \"progressbar\", \"tabindex\": \"-1\" }, properties: { \"class\": \"\\\"mat-\\\" + color\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"class.mdc-circular-progress--indeterminate\": \"mode === \\\"indeterminate\\\"\", \"style.width.px\": \"diameter\", \"style.height.px\": \"diameter\", \"style.--mat-progress-spinner-size\": \"diameter + \\\"px\\\"\", \"style.--mat-progress-spinner-active-indicator-width\": \"diameter + \\\"px\\\"\", \"attr.aria-valuemin\": \"0\", \"attr.aria-valuemax\": \"100\", \"attr.aria-valuenow\": \"mode === \\\"determinate\\\" ? value : null\", \"attr.mode\": \"mode\" }, classAttribute: \"mat-mdc-progress-spinner mdc-circular-progress\" }, viewQueries: [{ propertyName: \"_determinateCircle\", first: true, predicate: [\"determinateSpinner\"], descendants: true }], exportAs: [\"matProgressSpinner\"], ngImport: i0, template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0;position:relative;direction:ltr;transition:opacity 250ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-progress-spinner circle{stroke-width:var(--mat-progress-spinner-active-indicator-width, 4px)}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1;animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mat-progress-spinner-active-indicator-color, var(--mat-sys-primary))}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}\\n\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressSpinner, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-spinner, mat-spinner', exportAs: 'matProgressSpinner', host: {\n                        'role': 'progressbar',\n                        'class': 'mat-mdc-progress-spinner mdc-circular-progress',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[class]': '\"mat-\" + color',\n                        '[class._mat-animation-noopable]': `_noopAnimations`,\n                        '[class.mdc-circular-progress--indeterminate]': 'mode === \"indeterminate\"',\n                        '[style.width.px]': 'diameter',\n                        '[style.height.px]': 'diameter',\n                        '[style.--mat-progress-spinner-size]': 'diameter + \"px\"',\n                        '[style.--mat-progress-spinner-active-indicator-width]': 'diameter + \"px\"',\n                        '[attr.aria-valuemin]': '0',\n                        '[attr.aria-valuemax]': '100',\n                        '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                        '[attr.mode]': 'mode',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, imports: [NgTemplateOutlet], template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0;position:relative;direction:ltr;transition:opacity 250ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-progress-spinner circle{stroke-width:var(--mat-progress-spinner-active-indicator-width, 4px)}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1;animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mat-progress-spinner-active-indicator-color, var(--mat-sys-primary))}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { color: [{\n                type: Input\n            }], _determinateCircle: [{\n                type: ViewChild,\n                args: ['determinateSpinner']\n            }], mode: [{\n                type: Input\n            }], value: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], diameter: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], strokeWidth: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }] } });\n/**\n * @deprecated Import Progress Spinner instead. Note that the\n *    `mat-spinner` selector isn't deprecated.\n * @breaking-change 16.0.0\n */\n// tslint:disable-next-line:variable-name\nconst MatSpinner = MatProgressSpinner;\n\nclass MatProgressSpinnerModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressSpinnerModule, imports: [MatProgressSpinner, MatSpinner], exports: [MatProgressSpinner, MatSpinner, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressSpinnerModule, imports: [MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressSpinnerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatProgressSpinner, MatSpinner],\n                    exports: [MatProgressSpinner, MatSpinner, MatCommonModule],\n                }]\n        }] });\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * A newer base component, without Log being created / requested.\r\n * This is so it's easier to inherit than the BaseComponent,\r\n * which would make typed log with specs harder to implement.\r\n * \r\n * Note that as with time, we wish to get away from these, as we don't want to use many observables any more.\r\n */\r\n@Component({\r\n  selector: 'app-base-component',\r\n  template: '',\r\n})\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class BaseComponent implements OnDestroy {\r\n  \r\n  /** Holds all subscriptions to be unsubscribed on destroy */\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n}\r\n"],"x_google_ignoreList":[6,8]}