{"version":3,"file":"projects_eav-ui_src_app_apps-management_create-app_create-app_component_ts.db84903ddb0274c2.js","mappings":"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","names":["i0","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","FieldHintComponent","constructor","this","isError","input","isShort","toggleIsShort","selectors","inputs","ngContentSelectors","_c0","decls","vars","consts","template","rf","ctx","_r1","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c1","tmp_2_0","MatFormFieldModule","i1","NgClass","NgTemplateOutlet","styles","appNamePattern","ctx_r0","appNameError","CreateAppComponent_Conditional_13_Conditional_0_Template","CreateAppComponent_Conditional_13_Conditional_1_Template","form","controls","name","errors","required","pattern","CreateAppComponent","dialog","snackBar","hostClass","loading","signal","appTemplateId","appsListService","transient","AppsListService","buildForm","closeDialog","close","create","disable","set","value","trim","replace","Number","open","subscribe","error","enable","undefined","duration","next","UntypedFormGroup","UntypedFormControl","Validators","i2","hostVars","hostBindings","CreateAppComponent_Conditional_13_Template","$event","touched","valid","RouterOutlet","FormsModule","i3","ReactiveFormsModule","i4","MatInputModule","i5","MatSelectModule","i6","i7","MatOptionModule","MatDialogActions","MatButtonModule","i8","encapsulation"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/apps-management/constants/app.patterns.ts","./projects/eav-ui/src/app/apps-management/create-app/create-app.component.html","./projects/eav-ui/src/app/apps-management/create-app/create-app.component.ts"],"sourcesContent":["<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError()) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n    selector: 'app-field-hint',\r\n    templateUrl: './field-hint.component.html',\r\n    styleUrls: ['./field-hint.component.scss'],\r\n    imports: [\r\n        MatFormFieldModule,\r\n        NgClass,\r\n        NgTemplateOutlet\r\n    ]\r\n})\r\nexport class FieldHintComponent {\r\n  isError = input<boolean>(false);\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","export const appNamePattern = /^[A-Za-z](?:[A-Za-z0-9\\s\\(\\)-]+)*$/;\r\nexport const appNameError = 'Standard letters, numbers, spaces, hyphens and round brackets are allowed. Must start with a letter.';\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Create App</div>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <router-outlet></router-outlet>\r\n    <form [formGroup]=\"form\">\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput type=\"text\" formControlName=\"name\" />\r\n      </mat-form-field>\r\n      <app-field-hint> App name will also be used for the folder </app-field-hint>\r\n      @if (form.controls.name.touched) {\r\n        @if (form.controls.name.errors?.required) {\r\n          <app-field-hint [isError]=\"true\"> Required </app-field-hint>\r\n        }\r\n        @if (form.controls.name.errors?.pattern) {\r\n          <app-field-hint [isError]=\"true\">\r\n            {{ appNameError }}\r\n          </app-field-hint>\r\n        }\r\n      }\r\n      <br />\r\n\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Template</mat-label>\r\n        <mat-select required=\"true\" [(value)]=\"appTemplateId\">\r\n          <mat-option value=\"0\"> Completely Naked / Raw App </mat-option>\r\n          <mat-option value=\"1\"> App Template Empty with some instructions </mat-option>\r\n          <mat-option value=\"2\"> App Template Basic with instructions and some data </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </form>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button type=\"button\" mat-raised-button [disabled]=\"loading()\" (click)=\"closeDialog()\">Cancel</button>\r\n    <button type=\"button\" mat-raised-button color=\"accent\" [disabled]=\"loading() || !form.valid\" (click)=\"create()\">Create</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { Component, HostBinding, signal } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { transient } from '../../../../../core';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { appNameError, appNamePattern } from '../constants/app.patterns';\r\nimport { AppsListService } from '../services/apps-list.service';\r\n\r\n@Component({\r\n    selector: 'app-create-app',\r\n    templateUrl: './create-app.component.html',\r\n    imports: [\r\n        RouterOutlet,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        MatDialogActions,\r\n        MatButtonModule,\r\n        FieldHintComponent,\r\n    ]\r\n})\r\nexport class CreateAppComponent {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  loading = signal<boolean>(false);\r\n  appNameError = appNameError;\r\n  appTemplateId = '1';\r\n\r\n\r\n  private appsListService = transient(AppsListService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<CreateAppComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    this.form = this.buildForm();\r\n  }\r\n\r\n\r\n  closeDialog(): void {\r\n    this.dialog.close();\r\n  }\r\n\r\n  create(): void {\r\n    this.form.disable();\r\n    this.loading.set(true);\r\n    const name = this.form.controls.name.value?.trim().replace(/\\s\\s+/g, ' '); // remove multiple white spaces and tabs;\r\n    const appTemplateId = Number(this.appTemplateId);\r\n    // console.warn('2dm: name', name, this.appTemplateId);\r\n    // return;\r\n\r\n    this.snackBar.open('Creating app...');\r\n    this.appsListService.create(name, null, appTemplateId).subscribe({\r\n      error: () => {\r\n        this.form.enable();\r\n        this.loading.set(false);\r\n\r\n        this.snackBar.open('Failed to create app. Please check console for more information', undefined, { duration: 3000 });\r\n      },\r\n      next: () => {\r\n        this.form.enable();\r\n        this.snackBar.open('Created app', undefined, { duration: 2000 });\r\n        this.closeDialog();\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildForm(): UntypedFormGroup {\r\n    const form = new UntypedFormGroup({\r\n      name: new UntypedFormControl(null, [Validators.required, Validators.pattern(appNamePattern)]),\r\n    });\r\n    return form;\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}