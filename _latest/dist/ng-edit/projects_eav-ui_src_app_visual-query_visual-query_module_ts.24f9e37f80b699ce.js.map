{"version":3,"file":"projects_eav-ui_src_app_visual-query_visual-query_module_ts.24f9e37f80b699ce.js","mappings":"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","names":["QueryDefinitionService","_class","constructor","http","context","dnnContext","this","fetchPipeline","pipelineEntityId","dataSources","get","$2sxc","apiUrl","webApiQueryGet","params","appId","toString","id","pipe","map","pipelineModel","DataSources","length","buildDefaultModel","fixPipelineDataSources","templateDataSources","eavConstants","pipelineDesigner","defaultPipeline","templateDS","dataSource","find","ds","PartAssemblyAndType","push","Description","EntityGuid","EntityId","undefined","Name","VisualDesignerData","Pipeline","StreamWiring","streamWiring","pipelineDataSources","some","pipelineDS","outDataSource","outDs","pipelineDataSource","Top","Left","fetchDataSources","webApiQueryDataSources","appid","zoneId","ContentType","Difficulty","dataSourceDifficulties","default","DynamicIn","DynamicOut","EnableConfig","HelpLink","Icon","In","Out","PrimaryType","TypeNameForUi","UiHint","typeNameFilter","input","format","globalParts","split","classFullNameParts","savePipeline","pipeline","post","webApiQuerySave","Id","newPipelineModel","runPipeline","top","webApiQueryRun","debugStream","source","sourceOut","webApiQueryDebugStream","from","out","i0","i1","i2","i3","factory","ɵfac","ctx_r0","name","sourceName","ctx_r3","option_r10","_r15","$implicit","ctx_r14","show","QueryResultComponent_button_17_ng_container_2_Template","QueryResultComponent_button_17_ng_container_3_Template","param_r18","QueryResultComponent_mat_tab_21_div_1_Template","QueryResultComponent_mat_tab_21_li_4_Template","ctx_r5","parameters","source_r19","value","Definition","config_r23","key","QueryResultComponent_tr_35_div_2_Template","QueryResultComponent_tr_35_li_9_Template","Guid","Type","Configuration","Error","stream_r24","Source","SourceOut","Target","TargetIn","Count","QueryResultComponent","dialogData","dialogRef","visualQueryService","ngOnInit","pipelineModel$","Params","filter","el","testParams","TestParameters","concat","timeUsed","result","QueryTimer","Milliseconds","ticksUsed","Ticks","optionsForTop","Query","sources","Sources","streams","Streams","closeDialog","close","original","MAT_DIALOG_DATA","selectors","decls","vars","consts","template","rf","ctx","QueryResultComponent_ng_container_4_Template","QueryResultComponent_div_13_Template","QueryResultComponent_ng_container_15_Template","QueryResultComponent_ng_container_16_Template","QueryResultComponent_button_17_Template","QueryResultComponent_mat_tab_21_Template","QueryResultComponent_div_23_Template","QueryResultComponent_tr_35_Template","QueryResultComponent_div_38_Template","QueryResultComponent_tr_50_Template","StreamErrorResultComponent","errorData","openInsights","window","open","VisualQueryService","BaseComponent","router","route","queryDefinitionService","titleService","snackBar","dialog","viewContainerRef","zone","metadataService","contentTypesService","changeDetectorRef","super","BehaviorSubject","dataSources$","putEntityCountOnConnections$","Subject","dataSourceConfigs$","pipelineId","parseInt","snapshot","paramMap","refreshPipeline","refreshDataSourceConfigs","ngOnDestroy","complete","init","attachKeyboardSave","subscription","add","refreshOnChildClosedShallow","subscribe","editPipelineEntity","formUrl","convertFormToUrl","items","navigate","relativeTo","saveAndRun","save","run","showDataSourceDetails","showDetails","cloneDeep","visualDesignerData","GeneralHelpers","tryParse","ShowDataSourceDetails","JSON","stringify","next","addDataSource","removeDataSource","pipelineDataSourceGuid","connections","streamsOut","StreamsOut","renameDataSource","changeDataSourceDescription","description","changeConnections","changeDataSourcePosition","position","calculateDataSourceConfigs","dataSourceConfigs","forEach","Metadata","metadataItem","Object","entries","attributeName","attributeValue","includes","Array","isArray","Title","editDataSource","contentTypeName","getMetadata","metadata","entity","targetType","keyType","Items","retrieveContentType","contentType","duration","ContentTypeName","For","target","TargetType","error","callback","pipelineResult","showQueryResult","console","warn","setTimeout","stream","showStreamErrorResult","streamResult","showSnackBar","setTitle","autoFocus","backdropClass","closeOnNavigation","data","panelClass","markForCheck","ErrorData","runOutsideAngular","fromEvent","firstChild","event","navigator","platform","match","metaKey","ctrlKey","keyCode","preventDefault","i4","i5","i6","i7","guiTypes","App","Label","Cache","Filter","Logic","Lookup","Modify","Security","Sort","Unknown","Debug","System","calculateTypeInfos","typeInfos","typeInfo","RenameStreamComponent_ng_container_9_app_field_hint_5_Template","RenameStreamComponent_ng_container_9_app_field_hint_6_Template","isSource","pipelineResultExists","controls","label","touched","errors","required","scopeOption_r10","RenameStreamComponent_ng_container_10_ng_container_1_mat_option_5_Template","scopeOptions","labelOption_r12","RenameStreamComponent_ng_container_10_mat_select_5_mat_option_1_Template","ctx_r6","labelOptions","RenameStreamComponent_ng_container_10_ng_container_1_Template","RenameStreamComponent_ng_container_10_mat_select_5_Template","RenameStreamComponent_ng_container_10_input_6_Template","_r14","ctx_r13","toggleGuidedLabel","ctx_r15","RenameStreamComponent_ng_container_10_app_field_hint_14_Template","ctx_r1","advancedMode","guidedLabel","_c0","$event","_r17","ctx_r16","toggleAdvancedMode","ctx_r2","RenameStreamComponent","BaseSubsinkComponent","hostClass","buildForm","checked","rename","formValue","form","getRawValue","UntypedFormGroup","UntypedFormControl","Validators","scope","scopes","valueChanges","startWith","distinctUntilChanged","values","Scope","patchValue","getScopes","filtered","s","o","hostVars","hostBindings","RenameStreamComponent_ng_container_9_Template","RenameStreamComponent_ng_container_10_Template","RenameStreamComponent_ng_container_13_Template","valid","dataSrcIdPrefix","Plumber","jsPlumbRoot","onConnectionsChanged","onDragend","onDebugStream","lineCount","linePaintDefault","stroke","strokeWidth","outlineStroke","outlineWidth","lineColors","maxCols","uuidColorMap","bulkDelete","instance","jsPlumb","getInstance","getInstanceDefaults","batch","initDomDataSources","initWirings","bindEvents","repaintEverything","destroy","reset","unbindContainer","removeEndpointsOnDataSource","elementId","selectEndpoints","element","delete","getAllConnections","connection","From","sourceId","replace","endpoints","getOverlay","To","targetId","getStreamsOut","each","endpoint","join","putEntityCountOnConnections","sourceElementId","targetElementId","fromUuid","toUuid","getEndpoint","getUuid","setLabel","cssClass","events","click","overlay","AllowEdit","nextLinePaintStyle","uuid","assign","container","Container","Connector","curviness","PaintStyle","HoverPaintStyle","domDataSource","querySelector","draggable","grid","stop","finalPos","addEndpoint","targetEndpointUnlimited","buildTargetEndpoint","maxConnections","makeTarget","makeSource","buildSourceEndpoint","wire","guid","pipeDataSource","connect","uuids","paintStyle","message","to","endpointName","isIn","d","isDynamic","getEndpointInfo","endpointInfo","style","model","enabled","fill","radius","anchor","faces","overlays","getEndpointOverlays","endpointOrOverlay","onChangeLabel","isTarget","dropOptions","hoverClass","activeClass","location","width","afterClosed","newLabel","bind","info","targetEndpoint","deleteEndpoint","deleteConnection","fireEvent","endpointLabel","labelPrompt","getLabel","getEndpoints","canvas","classList","contains","Math","floor","random","trimmed","trim","endsWith","substring","dataSource_r5","configureDataSource","_r18","vm_r1","ngIf","openHelp","_r22","ctx_r20","remove","config_r24","PlumbEditorComponent_div_0_ng_container_2_div_1_ng_container_21_tr_3_Template","PlumbEditorComponent_div_0_ng_container_2_div_1_mat_icon_5_Template","PlumbEditorComponent_div_0_ng_container_2_div_1_mat_icon_6_Template","PlumbEditorComponent_div_0_ng_container_2_div_1_mat_icon_8_Template","_r29","ctx_r27","allowEdit","editName","ctx_r30","editDescription","PlumbEditorComponent_div_0_ng_container_2_div_1_ng_container_21_Template","PlumbEditorComponent_div_0_ng_container_2_div_1_div_24_Template","PlumbEditorComponent_div_0_ng_container_2_div_1_div_25_Template","ctx_r4","_c2","Width","_c3","isOutDataSource","getTypeName","PlumbEditorComponent_div_0_ng_container_2_div_1_Template","PlumbEditorComponent_div_0_ng_container_2_Template","hardReset","PlumbEditorComponent","scriptLoaded$","loadScripts","test","src","plumber","pipelineDesignerData$","objectsEqual","viewModel$","combineLatest","pipelineDesignerData","detectChanges","ngAfterViewInit","domDataSourcesLoaded$","domDataSourcesRef","changes","scriptLoaded","domDataSourcesLoaded","domRootRef","nativeElement","partAssemblyAndType","confirm","url","newName","prompt","newDescription","viewQuery","PlumbEditorComponent_div_0_Template","param_r8","RunExplorerComponent_div_0_ul_20_li_1_Template","pipelineModel_r1","param_r11","RunExplorerComponent_div_0_ul_24_li_1_Template","visualDesignerData_r13","RunExplorerComponent_div_0_ng_container_27_div_1_li_7_Template","warnings_r16","RunExplorerComponent_div_0_ng_container_27_div_1_Template","_r23","ctx_r22","saveAndRunQuery","ctx_r24","ctx_r25","ctx_r26","editPipeline","openParamsHelp","RunExplorerComponent_div_0_ul_20_Template","RunExplorerComponent_div_0_ul_24_Template","RunExplorerComponent_div_0_div_25_Template","RunExplorerComponent_div_0_ng_container_27_Template","RunExplorerComponent_div_0_div_29_Template","ctx_r28","openRestApi","visualDesignerData$","warnings$","RunExplorerComponent","asObservable","calculateWarnings","warnings","queryParams","param","midMatch","exec","testMid","urlMid","moduleId","GoToDevRest","getUrlQuery","RunExplorerComponent_div_0_Template","dataSource_r6","_r8","ctx_r7","AddExplorerComponent_div_0_ng_container_3_div_6_div_1_Template","group_r3","trackDataSources","_r11","ctx_r10","toggleItem","AddExplorerComponent_div_0_ng_container_3_div_6_Template","tmp_2_0","toggledItems","_r13","ctx_r12","toggleDifficulty","AddExplorerComponent_div_0_ng_container_3_Template","sorted","trackGroups","AddExplorerComponent","difficulties","difficulty$","difficulty","filterAndSortDataSources","maxDifficulty","sort","a","b","toLocaleLowerCase","localeCompare","type","advanced","item","toggleInArray","index","AddExplorerComponent_div_0_Template","routes","path","component","VisualQueryComponent","explorer","activeExplorer","toggleExplorer","children","matcher","edit","loadChildren","Promise","all","__webpack_require__","e","then","m","EditModule","history","VisualQueryRoutingModule","RouterModule","forChild","VisualQueryModule","Context","MetadataService","ContentTypesService","provide","MAT_FORM_FIELD_DEFAULT_OPTIONS","useValue","subscriptSizing","MAT_SELECT_CONFIG","hideSingleSelectionIndicator","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","hideIcon","imports","CommonModule","SharedComponentsModule","MatIconModule","MatButtonModule","MatSlideToggleModule","MatSnackBarModule","MatDialogModule","MatTabsModule","MatFormFieldModule","ReactiveFormsModule","MatSelectModule","MatInputModule"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/visual-query/services/query-definition.service.ts","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.html","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.html","./projects/eav-ui/src/app/visual-query/services/visual-query.service.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.helpers.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumber.helper.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.html","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.html","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/visual-query-routing.module.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.html","./projects/eav-ui/src/app/visual-query/visual-query.module.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { webApiQueryDataSources, webApiQueryDebugStream, webApiQueryGet, webApiQueryRun, webApiQuerySave } from '../../app-administration/services';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult } from '../models';\r\n\r\n@Injectable()\r\nexport class QueryDefinitionService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  fetchPipeline(pipelineEntityId: number, dataSources: DataSource[]) {\r\n    return this.http.get<PipelineModel>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryGet), {\r\n      params: { appId: this.context.appId.toString(), id: pipelineEntityId.toString() }\r\n    }).pipe(\r\n      map(pipelineModel => {\r\n        // if pipeline is new, populate it with default model\r\n        if (!pipelineModel.DataSources.length) {\r\n          this.buildDefaultModel(pipelineModel, dataSources);\r\n        }\r\n        this.fixPipelineDataSources(pipelineModel.DataSources);\r\n        return pipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  private buildDefaultModel(pipelineModel: PipelineModel, dataSources: DataSource[]) {\r\n    const templateDataSources = eavConstants.pipelineDesigner.defaultPipeline.dataSources;\r\n    for (const templateDS of templateDataSources) {\r\n      const dataSource = dataSources.find(ds => ds.PartAssemblyAndType === templateDS.PartAssemblyAndType);\r\n      const pipelineDataSource: PipelineDataSource = {\r\n        Description: '',\r\n        EntityGuid: templateDS.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: dataSource.Name,\r\n        PartAssemblyAndType: templateDS.PartAssemblyAndType,\r\n        VisualDesignerData: templateDS.VisualDesignerData,\r\n      };\r\n      pipelineModel.DataSources.push(pipelineDataSource);\r\n    }\r\n\r\n    pipelineModel.Pipeline.StreamWiring = eavConstants.pipelineDesigner.defaultPipeline.streamWiring;\r\n  }\r\n\r\n  private fixPipelineDataSources(pipelineDataSources: PipelineDataSource[]) {\r\n    const outDataSourceExists = pipelineDataSources.some(\r\n      pipelineDS => pipelineDS.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    );\r\n    if (!outDataSourceExists) {\r\n      const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n      const outDsConst: PipelineDataSource = {\r\n        Description: outDs.Description,\r\n        EntityGuid: outDs.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: outDs.Name,\r\n        PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n        VisualDesignerData: outDs.VisualDesignerData,\r\n      };\r\n      pipelineDataSources.push(outDsConst);\r\n    }\r\n\r\n    for (const pipelineDataSource of pipelineDataSources) {\r\n      pipelineDataSource.VisualDesignerData ??= { Top: 50, Left: 50 };\r\n    }\r\n  }\r\n\r\n  fetchDataSources() {\r\n    return this.http.get<DataSource[]>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDataSources), {\r\n      params: {\r\n        appid: this.context.appId,\r\n        zoneId: this.context.zoneId,\r\n      },\r\n    }).pipe(\r\n      map(dataSources => {\r\n        const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n        const outDsConst: DataSource = {\r\n          ContentType: undefined,\r\n          Difficulty: eavConstants.pipelineDesigner.dataSourceDifficulties.default,\r\n          DynamicIn: true,\r\n          DynamicOut: false,\r\n          EnableConfig: undefined,\r\n          HelpLink: undefined,\r\n          Icon: undefined,\r\n          In: outDs.In,\r\n          Name: outDs.Name,\r\n          Out: undefined,\r\n          PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n          PrimaryType: outDs.PrimaryType,\r\n          TypeNameForUi: undefined,\r\n          UiHint: undefined,\r\n        };\r\n        dataSources.push(outDsConst);\r\n        return dataSources;\r\n      }),\r\n    );\r\n  }\r\n\r\n  typeNameFilter(input: string, format: 'className' | 'classFullName') {\r\n    const globalParts = input.split(', ');\r\n\r\n    switch (format) {\r\n      case 'classFullName':\r\n        const classFullName = globalParts[0];\r\n        return classFullName;\r\n      case 'className':\r\n        const classFullNameParts = globalParts[0].split('.');\r\n        const className = classFullNameParts[classFullNameParts.length - 1];\r\n        return className;\r\n      default:\r\n        return input;\r\n    }\r\n  }\r\n\r\n  /** Save the current query and reload entire definition as returned from server */\r\n  savePipeline(pipelineModel: PipelineModel) {\r\n    const pipeline = pipelineModel.Pipeline;\r\n    const dataSources = pipelineModel.DataSources;\r\n\r\n    return this.http.post<PipelineModel>(\r\n      this.dnnContext.$2sxc.http.apiUrl(webApiQuerySave),\r\n      { pipeline, dataSources },\r\n      { params: { appId: this.context.appId.toString(), Id: pipeline.EntityId.toString() } }\r\n    ).pipe(\r\n      map(newPipelineModel => {\r\n        this.fixPipelineDataSources(newPipelineModel.DataSources);\r\n        return newPipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  runPipeline(id: number, top: number) {\r\n    return this.http.get<PipelineResult>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryRun), {\r\n      params: { appId: this.context.appId.toString(), id: id.toString(), top: top.toString() }\r\n    });\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  debugStream(id: number, source: string, sourceOut: string, top: number) {\r\n    return this.http.get<PipelineResult>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDebugStream), {\r\n      params: { appId: this.context.appId.toString(), id: id.toString(), from: source, out: sourceOut, top: top.toString() }\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      Query Results\r\n      <ng-container *ngIf=\"debugStream\">\r\n        for Stream: \"{{ debugStream.name }}\" on Source: \"{{ debugStream.sourceName }}\"\r\n      </ng-container>\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <p>\r\n      The Full result was logged to the Browser Console. Further down you'll find more debug-infos.\r\n      Executed in {{ timeUsed }}ms ({{ ticksUsed }} ticks)\r\n    </p>\r\n    <mat-tab-group dynamicHeight color=\"accent\" class=\"eav-tab-group\">\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Results\">\r\n          <span>Results</span>\r\n        </div>\r\n    \r\n        <p class=\"eav-tab-description\">\r\n          <ng-container *ngIf=\"top === 0\">Showing All results</ng-container>\r\n          <ng-container *ngIf=\"top !== 0\">Showing top {{ top }} results</ng-container>\r\n          <button mat-button *ngFor=\"let option of optionsForTop\" (click)=\"show(option)\">\r\n            Show\r\n            <ng-container *ngIf=\"option === 0\">All</ng-container>\r\n            <ng-container *ngIf=\"option !== 0\">{{ option }}</ng-container>\r\n          </button>\r\n        </p>\r\n        <pre>{{ result | json }}</pre>\r\n      </mat-tab>\r\n    \r\n      <mat-tab *ngIf=\"parameters?.length\">\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Parameters\">\r\n          <span>Parameters</span>\r\n        </div>\r\n    \r\n        <br />\r\n        <ul>\r\n          <li *ngFor=\"let param of parameters\">{{ param }}</li>\r\n        </ul>\r\n      </mat-tab>\r\n    \r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Sources\">\r\n          <span>Sources</span>\r\n        </div>\r\n    \r\n        <br />\r\n        <table>\r\n          <tr>\r\n            <th>Name and Guid</th>\r\n            <th>Type</th>\r\n            <th>Configuration</th>\r\n            <th>Error</th>\r\n          </tr>\r\n          <tr *ngFor=\"let source of sources | keyvalue\">\r\n            <td>\r\n              <div *ngIf=\"source.value.Definition?.Name\">{{ source.value.Definition?.Name }}</div>\r\n              <pre>{{ source.value.Guid }}</pre>\r\n            </td>\r\n            <td>{{ source.value.Type }}</td>\r\n            <td>\r\n              <ol>\r\n                <li *ngFor=\"let config of source.value.Configuration | keyvalue\">\r\n                  <b>{{ config.key }}</b>=<em>{{ config.value }}</em>\r\n                </li>\r\n              </ol>\r\n            </td>\r\n            <td>{{ source.value.Error }}</td>\r\n          </tr>\r\n        </table>\r\n      </mat-tab>\r\n    \r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Streams\">\r\n          <span>Streams</span>\r\n        </div>\r\n    \r\n        <br />\r\n        <table>\r\n          <tr>\r\n            <th>Source</th>\r\n            <th>Target</th>\r\n            <th>Items</th>\r\n            <th>Error</th>\r\n          </tr>\r\n          <tr *ngFor=\"let stream of streams\">\r\n            <td>\r\n              <pre>{{ stream.Source + \":\" + stream.SourceOut }}</pre>\r\n            </td>\r\n            <td>\r\n              <pre>{{ stream.Target + \":\" + stream.TargetIn }}</pre>\r\n            </td>\r\n            <td>{{ stream.Count }}</td>\r\n            <td>{{ stream.Error }}</td>\r\n          </tr>\r\n        </table>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DebugStreamInfo, PipelineResultQuery, PipelineResultSources, PipelineResultStream } from '../models';\r\nimport { VisualQueryService } from '../services/visual-query.service';\r\nimport { QueryResultDialogData } from './query-result.models';\r\n\r\n@Component({\r\n  selector: 'app-query-result',\r\n  templateUrl: './query-result.component.html',\r\n  styleUrls: ['./query-result.component.scss'],\r\n})\r\nexport class QueryResultComponent implements OnInit {\r\n  parameters: string[];\r\n  timeUsed: number;\r\n  ticksUsed: number;\r\n  top: number;\r\n  optionsForTop: number[];\r\n  result: PipelineResultQuery;\r\n  debugStream: DebugStreamInfo;\r\n  sources: PipelineResultSources;\r\n  streams: PipelineResultStream[];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: QueryResultDialogData,\r\n    private dialogRef: MatDialogRef<QueryResultComponent>,\r\n    private visualQueryService: VisualQueryService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const pipeline = this.visualQueryService.pipelineModel$.value.Pipeline;\r\n    const params = (pipeline.Params?.split('\\n') ?? []).filter(el => !!el);\r\n    const testParams = (pipeline.TestParameters?.split('\\n') ?? []).filter(el => !!el);\r\n    this.parameters = [].concat(params, testParams);\r\n    this.timeUsed = this.dialogData.result.QueryTimer.Milliseconds;\r\n    this.ticksUsed = this.dialogData.result.QueryTimer.Ticks;\r\n    this.top = this.dialogData.top;\r\n    this.optionsForTop = [25, 100, 1000, 0];\r\n    this.result = this.dialogData.result.Query;\r\n    this.debugStream = this.dialogData.debugStream;\r\n    this.sources = this.dialogData.result.Sources;\r\n    this.streams = this.dialogData.result.Streams;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  show(top: number) {\r\n    if (top === this.top) { return; }\r\n\r\n    if (this.debugStream) {\r\n      this.visualQueryService.debugStream(this.debugStream.original, top);\r\n    } else {\r\n      this.visualQueryService.runPipeline(top);\r\n    }\r\n\r\n    this.closeDialog();\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { StreamErrorData } from '../models';\r\nimport { StreamErrorResultDialogData } from './stream-error-result.models';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-stream-error-result',\r\n  templateUrl: './stream-error-result.component.html',\r\n  styleUrls: ['./stream-error-result.component.scss'],\r\n})\r\nexport class StreamErrorResultComponent implements OnInit {\r\n  errorData: StreamErrorData;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: StreamErrorResultDialogData,\r\n    private dialogRef: MatDialogRef<StreamErrorResultComponent>,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.errorData = this.dialogData.errorData;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/logs?key=web-api'), '_blank');\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Stream Error Results</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <pre>{{ errorData | json }}</pre>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button class=\"eav-button__with-icon\" tippy=\"Open 2sxc Insights\" (click)=\"openInsights()\">\r\n      <mat-icon class=\"eav-icon\">speed</mat-icon>\r\n      <span>Insights</span>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Injectable, NgZone, OnDestroy, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { BehaviorSubject, filter, fromEvent, Subject } from 'rxjs';\r\nimport { ContentTypesService } from '../../app-administration/services/content-types.service';\r\nimport { GeneralHelpers } from '../../edit/shared/helpers';\r\nimport { MetadataService } from '../../permissions/services/metadata.service';\r\nimport { BaseComponent } from '../../shared/components/base-component/base.component';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../../shared/models/edit-form.model';\r\n// tslint:disable-next-line:max-line-length\r\nimport { DataSource, DataSourceConfig, DataSourceConfigs, DebugStreamInfo, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { QueryResultComponent } from '../query-result/query-result.component';\r\nimport { QueryResultDialogData } from '../query-result/query-result.models';\r\nimport { StreamErrorResultComponent } from '../stream-error-result/stream-error-result.component';\r\nimport { StreamErrorResultDialogData } from '../stream-error-result/stream-error-result.models';\r\nimport { QueryDefinitionService } from './query-definition.service';\r\n\r\n@Injectable()\r\nexport class VisualQueryService extends BaseComponent implements OnDestroy {\r\n  pipelineModel$ = new BehaviorSubject<PipelineModel>(null);\r\n  dataSources$ = new BehaviorSubject<DataSource[]>(null);\r\n  putEntityCountOnConnections$ = new Subject<PipelineResult>();\r\n  dataSourceConfigs$ = new BehaviorSubject<DataSourceConfigs>({});\r\n  pipelineResult?: PipelineResult;\r\n\r\n  private pipelineId = parseInt(this.route.snapshot.paramMap.get('pipelineId'), 10);\r\n  private refreshPipeline = false;\r\n  private refreshDataSourceConfigs = false;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private queryDefinitionService: QueryDefinitionService,\r\n    private titleService: Title,\r\n    private snackBar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private zone: NgZone,\r\n    private metadataService: MetadataService,\r\n    private contentTypesService: ContentTypesService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) { \r\n    super(router, route);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.pipelineModel$.complete();\r\n    this.dataSources$.complete();\r\n    this.putEntityCountOnConnections$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  init() {\r\n    this.fetchDataSources(() => this.fetchPipeline(true, true, false));\r\n    this.attachKeyboardSave();\r\n    this.subscription.add(this.refreshOnChildClosedShallow().subscribe(() => { \r\n      if (this.refreshPipeline || this.refreshDataSourceConfigs) {\r\n        this.fetchPipeline(this.refreshPipeline, this.refreshDataSourceConfigs, this.refreshPipeline);\r\n      }\r\n      this.refreshPipeline = false;\r\n      this.refreshDataSourceConfigs = false;\r\n     }));\r\n  }\r\n\r\n  editPipelineEntity() {\r\n    // save Pipeline, then open Edit Dialog\r\n    this.savePipeline(() => {\r\n      const form: EditForm = {\r\n        items: [{ EntityId: this.pipelineModel$.value.Pipeline.EntityId }],\r\n      };\r\n      const formUrl = convertFormToUrl(form);\r\n      this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n      this.refreshPipeline = true;\r\n    });\r\n  }\r\n\r\n  saveAndRun(save: boolean, run: boolean) {\r\n    if (save && run) {\r\n      this.savePipeline(() => { this.runPipeline(); });\r\n    } else if (save) {\r\n      this.savePipeline();\r\n    } else if (run) {\r\n      this.runPipeline();\r\n    }\r\n  }\r\n\r\n  showDataSourceDetails(showDetails: boolean) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const visualDesignerData: Record<string, any> = GeneralHelpers.tryParse(pipelineModel.Pipeline.VisualDesignerData) ?? {};\r\n    visualDesignerData.ShowDataSourceDetails = showDetails;\r\n    pipelineModel.Pipeline.VisualDesignerData = JSON.stringify(visualDesignerData);\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const newPipelineDataSource: PipelineDataSource = {\r\n      Description: '',\r\n      EntityGuid: 'unsaved' + (pipelineModel.DataSources.length + 1),\r\n      EntityId: undefined,\r\n      Name: dataSource.Name,\r\n      PartAssemblyAndType: dataSource.PartAssemblyAndType,\r\n      VisualDesignerData: { Top: 100, Left: 100 },\r\n    };\r\n    pipelineModel.DataSources.push(newPipelineDataSource);\r\n    this.pipelineModel$.next(pipelineModel);\r\n    this.savePipeline();\r\n  }\r\n\r\n  removeDataSource(pipelineDataSourceGuid: string, connections: StreamWire[], streamsOut: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    pipelineModel.DataSources = pipelineModel.DataSources.filter(pipelineDS => pipelineDS.EntityGuid !== pipelineDataSourceGuid);\r\n    pipelineModel.Pipeline.StreamWiring = connections;\r\n    pipelineModel.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  renameDataSource(pipelineDataSourceGuid: string, name: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    pipelineDataSource.Name = name;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeDataSourceDescription(pipelineDataSourceGuid: string, description: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    pipelineDataSource.Description = description;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeConnections(connections: StreamWire[], streamsOut: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    pipelineModel.Pipeline.StreamWiring = connections;\r\n    pipelineModel.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeDataSourcePosition(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    if (!pipelineDataSource) {\r\n      // spm NOTE: fixes problem where dataSource position can't be updated if dataSource with guid unsavedXX gets saved while dragging.\r\n      // Can happen if dataSource is just added and user drags it and save happens.\r\n      return;\r\n    }\r\n    pipelineDataSource.VisualDesignerData = { ...pipelineDataSource.VisualDesignerData, ...position };\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  private calculateDataSourceConfigs(dataSources: PipelineDataSource[]) {\r\n    const dataSourceConfigs: DataSourceConfigs = {};\r\n    dataSources.forEach(dataSource => {\r\n      if (dataSource.EntityId == null) { return; }\r\n      dataSourceConfigs[dataSource.EntityId] = [];\r\n      dataSource.Metadata?.forEach(metadataItem => {\r\n        Object.entries(metadataItem).forEach(([attributeName, attributeValue]) => {\r\n          if (attributeValue == null || attributeValue === '') { return; }\r\n          if (['Created', 'Guid', 'Id', 'Modified', 'Title', '_Type'].includes(attributeName)) { return; }\r\n          if (Array.isArray(attributeValue) && attributeValue[0]?.Title != null && attributeValue[0]?.Id != null) {\r\n            attributeValue = `${attributeValue[0].Title} (${attributeValue[0].Id})`;\r\n          }\r\n          const dataSourceConfig: DataSourceConfig = {\r\n            name: attributeName,\r\n            value: attributeValue,\r\n          };\r\n          dataSourceConfigs[dataSource.EntityId].push(dataSourceConfig);\r\n        });\r\n      });\r\n    });\r\n    this.dataSourceConfigs$.next(dataSourceConfigs);\r\n  }\r\n\r\n  editDataSource(pipelineDataSource: PipelineDataSource) {\r\n    const dataSource = this.dataSources$.value.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    const contentTypeName = dataSource.ContentType;\r\n    const targetType = eavConstants.metadata.entity.targetType;\r\n    const keyType = eavConstants.metadata.entity.keyType;\r\n    const key = pipelineDataSource.EntityGuid;\r\n\r\n    // query for existing Entity\r\n    this.metadataService.getMetadata(targetType, keyType, key, contentTypeName).subscribe(metadata => {\r\n      // edit existing Entity\r\n      if (metadata.Items.length) {\r\n        const form: EditForm = {\r\n          items: [{ EntityId: metadata.Items[0].Id }],\r\n        };\r\n        const formUrl = convertFormToUrl(form);\r\n        this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n        this.refreshDataSourceConfigs = true;\r\n        return;\r\n      }\r\n\r\n      // Check if the type exists, and if yes, create new Entity\r\n      this.contentTypesService.retrieveContentType(contentTypeName).subscribe({\r\n        next: contentType => {\r\n          if (contentType == null) {\r\n            this.snackBar.open('DataSource doesn\\'t have any configuration', undefined, { duration: 3000 });\r\n            return;\r\n          }\r\n          const form: EditForm = {\r\n            items: [{\r\n              ContentTypeName: contentTypeName,\r\n              For: {\r\n                Target: eavConstants.metadata.entity.target,\r\n                TargetType: eavConstants.metadata.entity.targetType,\r\n                Guid: key,\r\n              },\r\n            }],\r\n          };\r\n          const formUrl = convertFormToUrl(form);\r\n          this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n          this.refreshDataSourceConfigs = true;\r\n        },\r\n        error: (error: HttpErrorResponse) => {\r\n          const message = 'Server reports error - this usually means that this DataSource doesn\\'t have any configuration';\r\n          this.snackBar.open(message, undefined, { duration: 3000 });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private savePipeline(callback?: () => void) {\r\n    this.snackBar.open('Saving...');\r\n    this.queryDefinitionService.savePipeline(this.pipelineModel$.value).subscribe({\r\n      next: pipelineModel => {\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n        this.pipelineModel$.next(pipelineModel);\r\n        if (callback != null) { callback(); }\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Save Pipeline failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  runPipeline(top = 25) {\r\n    this.snackBar.open('Running query...');\r\n    this.queryDefinitionService.runPipeline(this.pipelineModel$.value.Pipeline.EntityId, top).subscribe({\r\n      next: pipelineResult => {\r\n        this.snackBar.open('Query worked', null, { duration: 2000 });\r\n        this.pipelineResult = pipelineResult;\r\n        this.showQueryResult(pipelineResult, top);\r\n        console.warn(pipelineResult);\r\n        // push cloned pipelineModel to reset jsPlumb\r\n        this.pipelineModel$.next(cloneDeep(this.pipelineModel$.value));\r\n        setTimeout(() => { this.putEntityCountOnConnections$.next(pipelineResult); });\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Query failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  debugStream(stream: PipelineResultStream, top = 25) {\r\n    if (stream.Error) {\r\n      this.showStreamErrorResult(stream);\r\n      return;\r\n    }\r\n\r\n    if (stream.Count === 0) { return; }\r\n\r\n    this.snackBar.open('Running stream...');\r\n    const pipelineId = this.pipelineModel$.value.Pipeline.EntityId;\r\n    this.queryDefinitionService.debugStream(pipelineId, stream.Source, stream.SourceOut, top).subscribe({\r\n      next: streamResult => {\r\n        this.snackBar.open('Stream worked', null, { duration: 2000 });\r\n        const pipelineDataSource = this.pipelineModel$.value.DataSources.find(ds => ds.EntityGuid === stream.Source);\r\n        const debugStream: DebugStreamInfo = {\r\n          name: stream.SourceOut,\r\n          source: stream.Source,\r\n          sourceName: pipelineDataSource.Name,\r\n          original: stream,\r\n        };\r\n        this.showQueryResult(streamResult, top, debugStream);\r\n        console.warn(streamResult);\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Stream failed', null, { duration: 2000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  private fetchPipeline(refreshPipeline: boolean, refreshDataSourceConfigs: boolean, showSnackBar: boolean) {\r\n    if (showSnackBar) {\r\n      this.snackBar.open('Reloading query, please wait...');\r\n    }\r\n    this.queryDefinitionService.fetchPipeline(this.pipelineId, this.dataSources$.value).subscribe(pipelineModel => {\r\n      if (showSnackBar) {\r\n        this.snackBar.open('Query reloaded', null, { duration: 2000 });\r\n      }\r\n      this.titleService.setTitle(`${pipelineModel.Pipeline.Name} - Visual Query`);\r\n      if (refreshPipeline) {\r\n        this.pipelineModel$.next(pipelineModel);\r\n      }\r\n      if (refreshDataSourceConfigs) {\r\n        this.calculateDataSourceConfigs(pipelineModel.DataSources);\r\n      }\r\n    });\r\n  }\r\n\r\n  private showQueryResult(result: PipelineResult, top: number, debugStream?: DebugStreamInfo) {\r\n    const dialogData: QueryResultDialogData = {\r\n      result,\r\n      debugStream,\r\n      top,\r\n    };\r\n    this.dialog.open(QueryResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private showStreamErrorResult(stream: PipelineResultStream) {\r\n    const dialogData: StreamErrorResultDialogData = {\r\n      errorData: stream.ErrorData,\r\n    };\r\n    this.dialog.open(StreamErrorResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private fetchDataSources(callback?: () => void) {\r\n    this.queryDefinitionService.fetchDataSources().subscribe(dataSources => {\r\n      this.dataSources$.next(dataSources);\r\n      callback();\r\n    });\r\n  }\r\n\r\n  private attachKeyboardSave() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscription.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown').pipe(\r\n          filter(() => !this.route.snapshot.firstChild),\r\n          filter(event => {\r\n            const CTRL_S = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.keyCode === 83;\r\n            return CTRL_S;\r\n          }),\r\n        ).subscribe(event => {\r\n          event.preventDefault();\r\n          this.zone.run(() => { this.savePipeline(); });\r\n        })\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { DataSource, PipelineDataSource } from '../models';\r\nimport { GuiTypes, TypeInfo, TypeInfos } from './plumb-editor.models';\r\n\r\nexport const guiTypes: GuiTypes = {\r\n  App: { Name: 'App', Label: 'App DataSources', Icon: 'star', UiHint: 'DataSources from the current App' },\r\n  Cache: { Name: 'Cache', Icon: 'history', UiHint: 'Caching of data' },\r\n  Filter: { Name: 'Filter', Icon: 'filter_list', UiHint: 'Filter data - usually returning less items than came in' },\r\n  Logic: { Name: 'Logic', Icon: 'share', UiHint: 'Logic operations - usually choosing between different streams' },\r\n  Lookup: { Name: 'Lookup', Icon: 'search', UiHint: 'Lookup operation - usually looking for other data based on a criteria' },\r\n  Modify: { Name: 'Modify', Icon: 'edit_attributes', UiHint: 'Modify data - usually changing, adding or removing values' },\r\n  Security: { Name: 'Security', Icon: 'account_circle', UiHint: 'Security - usually limit what the user sees based on his identity' },\r\n  Sort: { Name: 'Sort', Icon: 'sort', UiHint: 'Sort the items' },\r\n  Source: { Name: 'Source', Icon: 'cloud_upload', UiHint: 'Source of new data - usually SQL, CSV or similar' },\r\n  Target: { Name: 'Target', Icon: 'adjust', UiHint: 'Target - usually just a destination of data' },\r\n  Unknown: { Name: 'Unknown', Icon: 'fiber_manual_record', UiHint: 'Unknown type' },\r\n  Debug: { Name: 'Debug', Icon: 'bug_report', UiHint: 'Debugging Tools'},\r\n  System: { Name: 'System', Icon: 'military_tech', UiHint: 'System Data' },\r\n};\r\n\r\nexport function calculateTypeInfos(pipelineDataSources: PipelineDataSource[], dataSources: DataSource[]) {\r\n  const typeInfos: TypeInfos = {};\r\n\r\n  for (const pipelineDataSource of pipelineDataSources) {\r\n    let typeInfo: TypeInfo;\r\n    const dataSource = dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    if (dataSource) {\r\n      typeInfo = { ...(dataSource.PrimaryType ? guiTypes[dataSource.PrimaryType] : guiTypes.Unknown) };\r\n      if (dataSource.Icon != null) { typeInfo.Icon = dataSource.Icon; }\r\n      if (dataSource.DynamicIn != null) { typeInfo.DynamicIn = dataSource.DynamicIn; }\r\n      if (dataSource.DynamicOut != null) { typeInfo.DynamicOut = dataSource.DynamicOut; }\r\n      if (dataSource.HelpLink != null) { typeInfo.HelpLink = dataSource.HelpLink; }\r\n      if (dataSource.EnableConfig != null) { typeInfo.EnableConfig = dataSource.EnableConfig; }\r\n      if (dataSource.UiHint != null) { typeInfo.UiHint = dataSource.UiHint; }\r\n    }\r\n    if (!typeInfo) { typeInfo = { ...guiTypes.Unknown }; }\r\n    typeInfos[pipelineDataSource.EntityGuid] = typeInfo;\r\n  }\r\n\r\n  return typeInfos;\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Rename stream</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <form [formGroup]=\"form\">\r\n      <!-- Simple form -->\r\n      <ng-container *ngIf=\"!isSource || !pipelineResultExists\">\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"label\" required>\r\n        </mat-form-field>\r\n        <app-field-hint *ngIf=\"isSource && !pipelineResultExists\">\r\n          You will get suggestions for out-streams after you run query\r\n        </app-field-hint>\r\n        <app-field-hint *ngIf=\"controls.label.touched && controls.label.errors?.required\" [isError]=\"true\">\r\n          This field is required\r\n        </app-field-hint>\r\n      </ng-container>\r\n\r\n      <!-- Rich form -->\r\n      <ng-container *ngIf=\"isSource && pipelineResultExists\">\r\n        <!-- Scope -->\r\n        <ng-container *ngIf=\"advancedMode && guidedLabel\">\r\n          <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n            <mat-label>Scope</mat-label>\r\n            <mat-select formControlName=\"scope\" [placeholder]=\"!scopeOptions.length ? 'No items found' : ''\">\r\n              <mat-option *ngFor=\"let scopeOption of scopeOptions\" [value]=\"scopeOption.value\">\r\n                {{ scopeOption.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <app-field-hint>\r\n            The scope should almost never be changed -\r\n            <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n          </app-field-hint>\r\n        </ng-container>\r\n\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          <mat-select *ngIf=\"guidedLabel\" formControlName=\"label\" required\r\n            [placeholder]=\"!labelOptions.length ? 'No items found' : ''\">\r\n            <mat-option *ngFor=\"let labelOption of labelOptions\" [value]=\"labelOption\">\r\n              {{ labelOption }}\r\n            </mat-option>\r\n          </mat-select>\r\n\r\n          <input matInput type=\"text\" *ngIf=\"!guidedLabel\" formControlName=\"label\" required>\r\n\r\n          <div matTextSuffix class=\"eav-selection-suffix\">\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': guidedLabel }\" tippy=\"Pick existing value\"\r\n              (click)=\"toggleGuidedLabel(true)\">\r\n              <mat-icon class=\"eav-icon\">search</mat-icon>\r\n            </button>\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': !guidedLabel }\" tippy=\"Manual entry\"\r\n              (click)=\"toggleGuidedLabel(false)\">\r\n              <mat-icon class=\"eav-icon\">text_fields</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-form-field>\r\n        <app-field-hint *ngIf=\"controls.label.touched && controls.label.errors?.required\" [isError]=\"true\">\r\n          This field is required\r\n        </app-field-hint>\r\n      </ng-container>\r\n    </form>\r\n  </div>\r\n  <mat-dialog-actions class=\"eav-dialog-actions\">\r\n    <!-- Extra button for rich form -->\r\n    <div>\r\n      <ng-container *ngIf=\"isSource && pipelineResultExists\">\r\n        <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n          {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n        </mat-slide-toggle>\r\n      </ng-container>\r\n    </div>\r\n    <div>\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\" [disabled]=\"!form.valid\" (click)=\"rename()\">\r\n        Rename\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n</div>","import { ChangeDetectorRef, Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { distinctUntilChanged, startWith, Subscription } from 'rxjs';\r\nimport { ContentTypesService } from '../../../app-administration/services';\r\nimport { BaseSubsinkComponent } from '../../../shared/components/base-subsink-component/base-subsink.component';\r\nimport { eavConstants, ScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { VisualQueryService } from '../../services/visual-query.service';\r\nimport { RenameStreamDialogControls, RenameStreamDialogData, RenameStreamDialogFormValue } from './rename-stream.models';\r\n\r\n@Component({\r\n  selector: 'app-rename-stream',\r\n  templateUrl: './rename-stream.component.html',\r\n  styleUrls: ['./rename-stream.component.scss']\r\n})\r\nexport class RenameStreamComponent extends BaseSubsinkComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  controls: RenameStreamDialogControls;\r\n  isSource = this.dialogData.isSource;\r\n  pipelineResultExists = this.visualQueryService.pipelineResult != null;\r\n  scopeOptions: ScopeOption[] = [];\r\n  labelOptions: string[] = [];\r\n  guidedLabel = true;\r\n  advancedMode = false;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: RenameStreamDialogData,\r\n    private dialogRef: MatDialogRef<RenameStreamComponent>,\r\n    private visualQueryService: VisualQueryService,\r\n    private contentTypesService: ContentTypesService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(label?: string): void {\r\n    this.dialogRef.close(label);\r\n  }\r\n\r\n  toggleGuidedLabel(guidedLabel: boolean): void {\r\n    this.guidedLabel = guidedLabel;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  rename(): void {\r\n    const formValue: RenameStreamDialogFormValue = this.form.getRawValue();\r\n    this.closeDialog(formValue.label);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({\r\n      label: new UntypedFormControl(this.dialogData.label, Validators.required),\r\n      scope: new UntypedFormControl(eavConstants.scopes.default.value),\r\n    });\r\n    this.controls = this.form.controls as any;\r\n\r\n    if (!this.isSource || !this.pipelineResultExists) { return; }\r\n\r\n    this.subscription.add(\r\n      this.controls.scope.valueChanges.pipe(\r\n        startWith<string>(this.controls.scope.value),\r\n        distinctUntilChanged(),\r\n      ).subscribe(scope => {\r\n        this.labelOptions = Object.values(this.visualQueryService.pipelineResult.Sources)\r\n          .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out\r\n          .filter(out => out.Scope === scope)\r\n          .map(out => out.Name);\r\n        if (!this.labelOptions.includes(this.controls.label.value) && this.controls.label.value != null) {\r\n          this.controls.label.patchValue(null);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.contentTypesService.getScopes().subscribe(scopes => {\r\n      const sourceOut = Object.values(this.visualQueryService.pipelineResult.Sources)\r\n        .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out;\r\n      const filtered = scopes.filter(s => sourceOut.some(o => o.Scope === s.value));\r\n      this.scopeOptions = filtered;\r\n      this.changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectorRef, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { EndpointInfo, PlumbType } from './plumb-editor.models';\r\nimport { RenameStreamComponent } from './rename-stream/rename-stream.component';\r\nimport { RenameStreamDialogData } from './rename-stream/rename-stream.models';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport const dataSrcIdPrefix = 'dataSource_';\r\n\r\nexport class Plumber {\r\n  private instance: PlumbType;\r\n  private lineCount = 0;\r\n  private linePaintDefault = {\r\n    stroke: '#61B7CF',\r\n    strokeWidth: 4,\r\n    outlineStroke: 'white',\r\n    outlineWidth: 2,\r\n  };\r\n  private lineColors = [\r\n    '#009688', '#00bcd4', '#3f51b5', '#9c27b0', '#e91e63',\r\n    '#db4437', '#ff9800', '#60a917', '#60a917', '#008a00',\r\n    '#00aba9', '#1ba1e2', '#0050ef', '#6a00ff', '#aa00ff',\r\n    '#f472d0', '#d80073', '#a20025', '#e51400', '#fa6800',\r\n    '#f0a30a', '#e3c800', '#825a2c', '#6d8764', '#647687',\r\n    '#76608a', '#a0522d',\r\n  ];\r\n  private maxCols = this.lineColors.length - 1;\r\n  private uuidColorMap: Record<string, any> = {};\r\n  private bulkDelete = false;\r\n  private dialogRef: MatDialogRef<RenameStreamComponent>;\r\n\r\n  constructor(\r\n    private jsPlumbRoot: HTMLElement,\r\n    private pipelineModel: PipelineModel,\r\n    private dataSources: DataSource[],\r\n    private onConnectionsChanged: () => void,\r\n    private onDragend: (pipelineDataSourceGuid: string, position: VisualDesignerData) => void,\r\n    private onDebugStream: (stream: PipelineResultStream) => void,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    this.instance = window.jsPlumb.getInstance(this.getInstanceDefaults(this.jsPlumbRoot));\r\n    this.instance.batch(() => {\r\n      this.initDomDataSources();\r\n      this.initWirings();\r\n      this.bindEvents();\r\n    });\r\n    // spm NOTE: repaint after initial paint fixes:\r\n    // Error: <svg> attribute width: Expected length, \"-Infinity\".\r\n    this.instance.repaintEverything();\r\n  }\r\n\r\n  destroy() {\r\n    this.dialogRef?.close();\r\n    this.instance.reset();\r\n    this.instance.unbindContainer();\r\n  }\r\n\r\n  removeEndpointsOnDataSource(pipelineDataSourceGuid: string) {\r\n    const elementId = dataSrcIdPrefix + pipelineDataSourceGuid;\r\n    this.bulkDelete = true;\r\n    this.instance.batch(() => {\r\n      this.instance.selectEndpoints({ element: elementId }).delete();\r\n    });\r\n    this.bulkDelete = false;\r\n  }\r\n\r\n  getAllConnections() {\r\n    const connectionInfos: StreamWire[] = this.instance.getAllConnections().map((connection: PlumbType) => {\r\n      const wire: StreamWire = {\r\n        From: connection.sourceId.replace(dataSrcIdPrefix, ''),\r\n        Out: connection.endpoints[0].getOverlay('endpointLabel').label,\r\n        To: connection.targetId.replace(dataSrcIdPrefix, ''),\r\n        In: connection.endpoints[1].getOverlay('endpointLabel').label,\r\n      };\r\n      return wire;\r\n    });\r\n    return connectionInfos;\r\n  }\r\n\r\n  getStreamsOut() {\r\n    const streamsOut: string[] = [];\r\n    this.instance.selectEndpoints({ target: dataSrcIdPrefix + 'Out' }).each((endpoint: PlumbType) => {\r\n      streamsOut.push(endpoint.getOverlay('endpointLabel').label);\r\n    });\r\n    const streamsOutStr = streamsOut.join(',');\r\n    return streamsOutStr;\r\n  }\r\n\r\n  putEntityCountOnConnections(result: PipelineResult) {\r\n    result.Streams?.forEach(stream => {\r\n      const sourceElementId = dataSrcIdPrefix + stream.Source;\r\n      const outTargets = ['00000000-0000-0000-0000-000000000000', this.pipelineModel.Pipeline.EntityGuid];\r\n      const targetElementId = outTargets.includes(stream.Target) ? dataSrcIdPrefix + 'Out' : dataSrcIdPrefix + stream.Target;\r\n\r\n      const fromUuid = sourceElementId + '_out_' + stream.SourceOut;\r\n      const toUuid = targetElementId + '_in_' + stream.TargetIn;\r\n\r\n      const sEndp: PlumbType = this.instance.getEndpoint(fromUuid);\r\n      sEndp?.connections\r\n        ?.filter((connection: PlumbType) => connection.endpoints[1].getUuid() === toUuid)\r\n        ?.forEach((connection: PlumbType) => {\r\n          const label = !stream.Error ? stream.Count.toString() : '';\r\n          const cssClass = 'streamEntitiesCount ' + (!stream.Error ? '' : 'streamEntitiesError');\r\n          connection.setLabel({\r\n            label,\r\n            cssClass,\r\n            events: {\r\n              click: (overlay: PlumbType) => {\r\n                if (!this.pipelineModel.Pipeline.AllowEdit) { return; }\r\n                this.onDebugStream(stream);\r\n              },\r\n            },\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  private nextLinePaintStyle(uuid: string) {\r\n    return (\r\n      this.uuidColorMap[uuid] ||\r\n      (this.uuidColorMap[uuid] = Object.assign({}, this.linePaintDefault, { stroke: this.lineColors[this.lineCount++ % this.maxCols] }))\r\n    );\r\n  }\r\n\r\n  private getInstanceDefaults(container: HTMLElement) {\r\n    const defaults = {\r\n      Container: container,\r\n      Connector: ['Bezier', { curviness: 70 }],\r\n      PaintStyle: this.nextLinePaintStyle('dummy'),\r\n      HoverPaintStyle: {\r\n        stroke: '#216477',\r\n        strokeWidth: 4,\r\n        outlineStroke: 'white',\r\n        outlineWidth: 2,\r\n      },\r\n    };\r\n    return defaults;\r\n  }\r\n\r\n  /** Create sources, targets and endpoints */\r\n  private initDomDataSources() {\r\n    for (const pipelineDataSource of this.pipelineModel.DataSources) {\r\n      const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + dataSrcIdPrefix + pipelineDataSource.EntityGuid);\r\n      if (!domDataSource) { continue; }\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      if (!dataSource) { continue; }\r\n\r\n      if (this.pipelineModel.Pipeline.AllowEdit) {\r\n        // WARNING! Must happen before instance.makeSource()\r\n        this.instance.draggable(domDataSource, {\r\n          grid: [20, 20], stop: (event: PlumbType) => {\r\n            const element: HTMLElement = event.el;\r\n            const pipelineDataSourceGuid: string = element.id.replace(dataSrcIdPrefix, '');\r\n            const position: VisualDesignerData = {\r\n              Top: event.finalPos[1],\r\n              Left: event.finalPos[0],\r\n            };\r\n            setTimeout(() => { this.onDragend(pipelineDataSourceGuid, position); });\r\n          }\r\n        });\r\n      }\r\n\r\n      // Add Out-Endpoints from Definition\r\n      dataSource.Out?.forEach(name => {\r\n        this.addEndpoint(domDataSource, name, false, pipelineDataSource);\r\n      });\r\n\r\n      // Add In-Endpoints from Definition\r\n      dataSource.In?.forEach(name => {\r\n        this.addEndpoint(domDataSource, name, true, pipelineDataSource);\r\n      });\r\n\r\n      // Make DataSource a Target for new Endpoints (if .In is an Array)\r\n      if (dataSource.In) {\r\n        const targetEndpointUnlimited = this.buildTargetEndpoint(pipelineDataSource.EntityGuid);\r\n        targetEndpointUnlimited.maxConnections = -1;\r\n        this.instance.makeTarget(domDataSource, targetEndpointUnlimited);\r\n      }\r\n\r\n      if (dataSource.DynamicOut) {\r\n        this.instance.makeSource(domDataSource, this.buildSourceEndpoint(pipelineDataSource.EntityGuid), { filter: '.add-endpoint' });\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Create wires */\r\n  private initWirings() {\r\n    this.pipelineModel.Pipeline.StreamWiring?.forEach(wire => {\r\n      // read connections from Pipeline\r\n      const sourceElementId = dataSrcIdPrefix + wire.From;\r\n      const fromUuid = sourceElementId + '_out_' + wire.Out;\r\n      const targetElementId = dataSrcIdPrefix + wire.To;\r\n      const toUuid = targetElementId + '_in_' + wire.In;\r\n\r\n      // Ensure In-Endpoint exist\r\n      if (!this.instance.getEndpoint(fromUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + sourceElementId);\r\n        if (!domDataSource) { return; }\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const pipelineDataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n        this.addEndpoint(domDataSource, wire.Out, false, pipelineDataSource);\r\n      }\r\n\r\n      // Ensure Out-Endpoint exist\r\n      if (!this.instance.getEndpoint(toUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + targetElementId);\r\n        if (!domDataSource) { return; }\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const pipelineDataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n        this.addEndpoint(domDataSource, wire.In, true, pipelineDataSource);\r\n      }\r\n\r\n      try {\r\n        this.instance.connect({\r\n          uuids: [fromUuid, toUuid],\r\n          paintStyle: this.nextLinePaintStyle(fromUuid),\r\n        });\r\n      } catch (e) {\r\n        console.error({ message: 'Connection failed', from: fromUuid, to: toUuid });\r\n      }\r\n    });\r\n  }\r\n\r\n  private addEndpoint(domDataSource: HTMLElement, endpointName: string, isIn: boolean, pipelineDataSource: PipelineDataSource) {\r\n    const dataSource = this.dataSources.find(d => d.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    const isDynamic = isIn\r\n      ? !dataSource.In?.some(name => this.getEndpointInfo(name, false))\r\n      : !dataSource.Out?.some(name => this.getEndpointInfo(name, false));\r\n    const endpointInfo = this.getEndpointInfo(endpointName, isDynamic);\r\n\r\n    let style: string;\r\n    if (isDynamic) {\r\n      style = 'dynamic';\r\n    } else if (!endpointInfo.required) {\r\n      style = '';\r\n    } else {\r\n      const wireExists = this.pipelineModel.Pipeline.StreamWiring?.some(wire => {\r\n        const targetElementId = dataSrcIdPrefix + wire.To;\r\n        const targetEndpointName = wire.In;\r\n\r\n        return targetElementId === domDataSource.id && targetEndpointName === endpointInfo.name;\r\n      });\r\n      style = wireExists ? '' : 'required';\r\n    }\r\n\r\n    const uuid = domDataSource.id + (isIn ? '_in_' : '_out_') + endpointInfo.name;\r\n    const model = isIn\r\n      ? this.buildTargetEndpoint(pipelineDataSource.EntityGuid, style)\r\n      : this.buildSourceEndpoint(pipelineDataSource.EntityGuid, style);\r\n    // Endpoints on Out-DataSource must be always enabled\r\n    const params = {\r\n      uuid,\r\n      enabled: this.pipelineModel.Pipeline.AllowEdit\r\n        || pipelineDataSource.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    };\r\n\r\n    const endpoint: PlumbType = this.instance.addEndpoint(domDataSource, model, params);\r\n    endpoint.getOverlay('endpointLabel').setLabel(endpointInfo.name);\r\n  }\r\n\r\n  private buildSourceEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const isSource = true;\r\n    const sourceEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'sourceEndpoint ' + style ?? '',\r\n      maxConnections: -1,\r\n      isSource,\r\n      anchor: ['Continuous', { faces: ['top'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => {\r\n          this.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid);\r\n        },\r\n      },\r\n    };\r\n    return sourceEndpoint;\r\n  }\r\n\r\n  private buildTargetEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const isSource = false;\r\n    const targetEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'targetEndpoint ' + style ?? '',\r\n      maxConnections: 1,\r\n      isTarget: !isSource,\r\n      anchor: ['Continuous', { faces: ['bottom'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      dropOptions: { hoverClass: 'hover', activeClass: 'active' },\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => {\r\n          this.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid);\r\n        },\r\n      },\r\n    };\r\n    return targetEndpoint;\r\n  }\r\n\r\n  private getEndpointOverlays(isSource: boolean) {\r\n    return [\r\n      [\r\n        'Label', {\r\n          id: 'endpointLabel',\r\n          location: [0.5, isSource ? 0 : 1],\r\n          label: 'Default',\r\n          cssClass: isSource ? 'endpointSourceLabel' : 'endpointTargetLabel',\r\n        },\r\n      ],\r\n    ];\r\n  }\r\n\r\n  private onChangeLabel(endpointOrOverlay: PlumbType, isSource: boolean, pipelineDataSourceGuid: string) {\r\n    if (!this.pipelineModel.Pipeline.AllowEdit) { return; }\r\n\r\n    const overlay: PlumbType = endpointOrOverlay.getOverlay ? endpointOrOverlay.getOverlay('endpointLabel') : endpointOrOverlay;\r\n    const data: RenameStreamDialogData = {\r\n      pipelineDataSourceGuid,\r\n      isSource,\r\n      label: overlay.label,\r\n    };\r\n    this.dialogRef = this.dialog.open(RenameStreamComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    this.dialogRef.afterClosed().subscribe(newLabel => {\r\n      if (!newLabel) { return; }\r\n      overlay.setLabel(newLabel);\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private bindEvents() {\r\n    this.instance.bind('connectionDetached', (info: PlumbType) => {\r\n      if (this.bulkDelete) { return; }\r\n      const domDataSource: HTMLElement = info.target;\r\n      const pipelineDataSource = this.pipelineModel.DataSources.find(\r\n        pipelineDS => pipelineDS.EntityGuid === domDataSource.id.replace(dataSrcIdPrefix, '')\r\n      );\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      const label: string = info.targetEndpoint.getOverlay('endpointLabel').label;\r\n      const isDynamic = !dataSource.In.some(name => this.getEndpointInfo(name, false).name === label);\r\n      if (isDynamic) {\r\n        this.instance.deleteEndpoint(info.targetEndpoint);\r\n        setTimeout(() => { this.onConnectionsChanged(); });\r\n      } else {\r\n        setTimeout(() => { this.onConnectionsChanged(); });\r\n      }\r\n    });\r\n\r\n    this.instance.bind('connection', (info: PlumbType) => {\r\n      if (info.sourceId === info.targetId) {\r\n        setTimeout(() => {\r\n          this.instance.deleteConnection(info.connection, { fireEvent: false });\r\n          setTimeout(() => { this.onConnectionsChanged(); });\r\n        });\r\n        return;\r\n      }\r\n      const endpointLabel: PlumbType = info.targetEndpoint.getOverlay('endpointLabel');\r\n      const labelPrompt: string = endpointLabel.getLabel();\r\n      const endpoints: PlumbType[] = this.instance.getEndpoints(info.target.id);\r\n      const targetEndpointHasSameLabel = endpoints.some(endpoint => {\r\n        const label: string = endpoint.getOverlay('endpointLabel').getLabel();\r\n        return label === labelPrompt &&\r\n          info.targetEndpoint.id !== endpoint.id &&\r\n          (endpoint.canvas as HTMLCanvasElement).classList.contains('targetEndpoint');\r\n      });\r\n      if (targetEndpointHasSameLabel) {\r\n        endpointLabel.setLabel(`PleaseRename${Math.floor(Math.random() * 99999)}`);\r\n      }\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n  }\r\n\r\n  private getEndpointInfo(endpointName: string, isDynamic: boolean): EndpointInfo {\r\n    let name: string;\r\n    let required: boolean;\r\n\r\n    if (isDynamic) {\r\n      name = endpointName;\r\n      required = false;\r\n    } else {\r\n      const trimmed = endpointName.trim();\r\n      required = trimmed.endsWith('*');\r\n      name = !required ? trimmed : trimmed.substring(0, trimmed.length - 1);\r\n    }\r\n\r\n    const endpointInfo: EndpointInfo = {\r\n      name,\r\n      required,\r\n    };\r\n    return endpointInfo;\r\n  }\r\n}\r\n","<div #domRoot id=\"pipeline-root\" *ngIf=\"(viewModel$ | async) as vm\">\r\n  <!-- do not use trackBy, jsPlumb drag stops working properly after delete -->\r\n  <ng-container *ngIf=\"!hardReset\">\r\n    <div #domDataSource *ngFor=\"let dataSource of vm.pipelineDataSources\"\r\n      [id]=\"dataSrcIdPrefix + dataSource.EntityGuid\" class=\"dataSource\" [ngStyle]=\"{\r\n        'top': dataSource.VisualDesignerData.Top + 'px',\r\n        'left': dataSource.VisualDesignerData.Left + 'px',\r\n        'min-width': dataSource.VisualDesignerData.Width ? dataSource.VisualDesignerData.Width + 'px' : null\r\n      }\" [ngClass]=\"{\r\n        'show-details': vm.showDataSourceDetails && vm.dataSourceConfigs[dataSource.EntityId]?.length\r\n      }\">\r\n\r\n      <div class=\"actions left\">\r\n        <mat-icon class=\"type-info\" [title]=\"vm.typeInfos[dataSource.EntityGuid].UiHint\">\r\n          {{ vm.typeInfos[dataSource.EntityGuid].Icon }}\r\n        </mat-icon>\r\n\r\n        <mat-icon class=\"configure\" title=\"Configure data source\" appMousedownStopPropagation\r\n          *ngIf=\"vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].EnableConfig\"\r\n          (click)=\"configureDataSource(dataSource)\">\r\n          settings\r\n        </mat-icon>\r\n\r\n        <mat-icon class=\"help\" title=\"Help for this data source\" appMousedownStopPropagation\r\n          *ngIf=\"vm.typeInfos[dataSource.EntityGuid].HelpLink\"\r\n          (click)=\"openHelp(vm.typeInfos[dataSource.EntityGuid].HelpLink)\">\r\n          help_outline\r\n        </mat-icon>\r\n      </div>\r\n\r\n      <div class=\"actions right\">\r\n        <mat-icon class=\"delete\" title=\"Delete\" appMousedownStopPropagation\r\n          *ngIf=\"vm.allowEdit && !isOutDataSource(dataSource)\" (click)=\"remove(dataSource)\">\r\n          delete\r\n        </mat-icon>\r\n      </div>\r\n\r\n      <div class=\"name\" title=\"Click to edit name\" appMousedownStopPropagation\r\n        (click)=\"vm.allowEdit && editName(dataSource)\">\r\n        <span>{{ dataSource.Name || '(no name)' }}</span>\r\n        <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n      </div>\r\n      <br>\r\n\r\n      <div class=\"description\" title=\"Click to edit description\" appMousedownStopPropagation\r\n        (click)=\"vm.allowEdit && editDescription(dataSource)\">\r\n        <span>{{ dataSource.Description }}</span>\r\n        <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n      </div>\r\n      <br>\r\n\r\n      <ng-container\r\n        *ngIf=\"vm.showDataSourceDetails && vm.dataSourceConfigs[dataSource.EntityId]?.length\">\r\n        <hr style=\"margin: 0\">\r\n        <table class=\"configs\">\r\n          <tr class=\"config\" *ngFor=\"let config of vm.dataSourceConfigs[dataSource.EntityId]\">\r\n            <td class=\"config-name\" [title]=\"config.name\">{{ config.name }}</td>\r\n            <td class=\"config-value\" [title]=\"config.value\">{{ config.value }}</td>\r\n          </tr>\r\n        </table>\r\n      </ng-container>\r\n\r\n      <div class=\"typename\" [title]=\"dataSource.PartAssemblyAndType\">\r\n        Type: {{ getTypeName(dataSource.PartAssemblyAndType) }}\r\n      </div>\r\n\r\n      <div class=\"add-endpoint sourceEndpoint dynamic\" title=\"Drag a new Out-Connection\"\r\n        *ngIf=\"vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].DynamicOut\">\r\n      </div>\r\n\r\n      <div class=\"many-in targetEndpoint dynamic\" title=\"This data source supports multiple In-Connections\"\r\n        *ngIf=\"vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].DynamicIn\">\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n","// tslint:disable-next-line:max-line-length\r\nimport { AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { BehaviorSubject, combineLatest, distinctUntilChanged, map, Observable, Subscription } from 'rxjs';\r\nimport { GeneralHelpers } from '../../edit/shared/helpers';\r\nimport { BaseSubsinkComponent } from '../../shared/components/base-subsink-component/base-subsink.component';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { loadScripts } from '../../shared/helpers/load-scripts.helper';\r\nimport { PipelineDataSource, PipelineResultStream, VisualDesignerData } from '../models';\r\nimport { QueryDefinitionService } from '../services/query-definition.service';\r\nimport { VisualQueryService } from '../services/visual-query.service';\r\nimport { calculateTypeInfos } from './plumb-editor.helpers';\r\nimport { PlumbEditorViewModel } from './plumb-editor.models';\r\nimport { dataSrcIdPrefix, Plumber } from './plumber.helper';\r\n\r\nconst jsPlumbUrl = 'https://cdnjs.cloudflare.com/ajax/libs/jsPlumb/2.14.5/js/jsplumb.min.js';\r\n\r\n@Component({\r\n  selector: 'app-plumb-editor',\r\n  templateUrl: './plumb-editor.component.html',\r\n  styles: [':host { display: block; width: 100%; height: 100%; }'],\r\n  styleUrls: ['./plumb-editor.component.scss'],\r\n})\r\nexport class PlumbEditorComponent extends BaseSubsinkComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('domRoot') private domRootRef: ElementRef<HTMLDivElement>;\r\n  @ViewChildren('domDataSource') private domDataSourcesRef: QueryList<ElementRef<HTMLDivElement>>;\r\n\r\n  dataSrcIdPrefix = dataSrcIdPrefix;\r\n  hardReset = false;\r\n\r\n  private plumber: Plumber;\r\n  private scriptLoaded$ = new BehaviorSubject(false);\r\n\r\n  viewModel$: Observable<PlumbEditorViewModel>;\r\n\r\n  constructor(\r\n    private visualQueryService: VisualQueryService,\r\n    private queryDefinitionService: QueryDefinitionService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    loadScripts([{ test: 'jsPlumb', src: jsPlumbUrl }], () => {\r\n      this.scriptLoaded$.next(true);\r\n    });\r\n\r\n    this.subscription.add(\r\n      this.visualQueryService.putEntityCountOnConnections$.subscribe(result => {\r\n        this.plumber.putEntityCountOnConnections(result);\r\n      })\r\n    );\r\n\r\n    const pipelineDesignerData$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => GeneralHelpers.tryParse(pipelineModel?.Pipeline.VisualDesignerData) ?? {}),\r\n      distinctUntilChanged(GeneralHelpers.objectsEqual),\r\n    );\r\n\r\n    this.viewModel$ = combineLatest([\r\n      this.visualQueryService.pipelineModel$,\r\n      this.visualQueryService.dataSources$,\r\n      pipelineDesignerData$,\r\n      this.visualQueryService.dataSourceConfigs$,\r\n    ]).pipe(\r\n      map(([pipelineModel, dataSources, pipelineDesignerData, dataSourceConfigs]) => {\r\n        if (pipelineModel == null || dataSources == null) { return; }\r\n\r\n        // workaround for jsPlumb not working with dom elements which it initialized on previously.\r\n        // This wipes dom entirely and gives us new elements\r\n        this.hardReset = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        this.hardReset = false;\r\n        const viewModel: PlumbEditorViewModel = {\r\n          pipelineDataSources: pipelineModel.DataSources,\r\n          typeInfos: calculateTypeInfos(pipelineModel.DataSources, dataSources),\r\n          allowEdit: pipelineModel.Pipeline.AllowEdit,\r\n          showDataSourceDetails: pipelineDesignerData.ShowDataSourceDetails ?? false,\r\n          dataSourceConfigs,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // https://stackoverflow.com/questions/37087864/execute-a-function-when-ngfor-finished-in-angular-2/37088348#37088348\r\n    const domDataSourcesLoaded$ = this.domDataSourcesRef.changes.pipe(map(() => true));\r\n\r\n    this.subscription.add(\r\n      combineLatest([this.scriptLoaded$, domDataSourcesLoaded$]).subscribe(([scriptLoaded, domDataSourcesLoaded]) => {\r\n        if (!scriptLoaded || !domDataSourcesLoaded) { return; }\r\n\r\n        this.plumber?.destroy();\r\n        this.plumber = new Plumber(\r\n          this.domRootRef.nativeElement,\r\n          this.visualQueryService.pipelineModel$.value,\r\n          this.visualQueryService.dataSources$.value,\r\n          this.onConnectionsChanged.bind(this),\r\n          this.onDragend.bind(this),\r\n          this.onDebugStream.bind(this),\r\n          this.dialog,\r\n          this.viewContainerRef,\r\n          this.changeDetectorRef,\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.plumber?.destroy();\r\n    this.scriptLoaded$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  onConnectionsChanged() {\r\n    const connections = this.plumber.getAllConnections();\r\n    const streamsOut = this.plumber.getStreamsOut();\r\n    this.visualQueryService.changeConnections(connections, streamsOut);\r\n  }\r\n\r\n  onDragend(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    this.visualQueryService.changeDataSourcePosition(pipelineDataSourceGuid, position);\r\n  }\r\n\r\n  onDebugStream(stream: PipelineResultStream) {\r\n    this.visualQueryService.debugStream(stream);\r\n  }\r\n\r\n  configureDataSource(dataSource: PipelineDataSource) {\r\n    // ensure dataSource entity is saved\r\n    if (dataSource.EntityGuid.includes('unsaved')) {\r\n      this.visualQueryService.saveAndRun(true, false);\r\n    } else {\r\n      this.visualQueryService.editDataSource(dataSource);\r\n    }\r\n  }\r\n\r\n  getTypeName(partAssemblyAndType: string) {\r\n    const dataSource = this.visualQueryService.dataSources$.value.find(ds => ds.PartAssemblyAndType === partAssemblyAndType);\r\n    return this.queryDefinitionService.typeNameFilter(dataSource?.TypeNameForUi || partAssemblyAndType, 'className');\r\n  }\r\n\r\n  isOutDataSource(pipelineDataSource: PipelineDataSource) {\r\n    return pipelineDataSource.PartAssemblyAndType === eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType;\r\n  }\r\n\r\n  remove(pipelineDataSource: PipelineDataSource) {\r\n    if (!confirm(`Delete ${pipelineDataSource.Name} data source?`)) { return; }\r\n\r\n    this.plumber.removeEndpointsOnDataSource(pipelineDataSource.EntityGuid);\r\n    const connections = this.plumber.getAllConnections();\r\n    const streamsOut = this.plumber.getStreamsOut();\r\n    this.visualQueryService.removeDataSource(pipelineDataSource.EntityGuid, connections, streamsOut);\r\n  }\r\n\r\n  openHelp(url: string) {\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  editName(dataSource: PipelineDataSource) {\r\n    const newName = prompt('Rename data source', dataSource.Name)?.trim();\r\n    if (newName == null || newName === '') { return; }\r\n\r\n    this.visualQueryService.renameDataSource(dataSource.EntityGuid, newName);\r\n  }\r\n\r\n  editDescription(dataSource: PipelineDataSource) {\r\n    const newDescription = prompt('Edit description', dataSource.Description)?.trim();\r\n    if (newDescription == null) { return; }\r\n\r\n    this.visualQueryService.changeDataSourceDescription(dataSource.EntityGuid, newDescription);\r\n  }\r\n\r\n}\r\n","<div class=\"editor-active-explorer fancy-scrollbar-dark\" *ngIf=\"(pipelineModel$ | async) as pipelineModel\">\r\n\r\n  <div class=\"wrapper\">\r\n    <div class=\"actions\">\r\n      <button mat-raised-button class=\"action\" color=\"accent\" (click)=\"saveAndRunQuery(true, true)\">\r\n        Save and run\r\n      </button>\r\n      <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(false, true)\">\r\n        Run\r\n      </button>\r\n      <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(true, false)\">\r\n        Save\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"parameters\">\r\n      <div class=\"title\">\r\n        <div>Query Parameters</div>\r\n        <div>\r\n          <button mat-icon-button tippy=\"Edit parameters\" (click)=\"editPipeline()\">\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button mat-icon-button tippy=\"Query Params Docs\" (click)=\"openParamsHelp()\">\r\n            <mat-icon>info</mat-icon>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <ul class=\"values\" *ngIf=\"pipelineModel.Pipeline.Params?.length\">\r\n        <li *ngFor=\"let param of pipelineModel.Pipeline.Params?.split('\\n')\">\r\n          {{ param }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div class=\"parameters\">\r\n      <div class=\"title\">Test Parameters</div>\r\n      <ul class=\"values\" *ngIf=\"pipelineModel.Pipeline.TestParameters?.length\">\r\n        <li *ngFor=\"let param of pipelineModel.Pipeline.TestParameters?.split('\\n')\">\r\n          {{ param }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div class=\"parameters\" *ngIf=\"visualDesignerData$ | async as visualDesignerData\">\r\n      <span class=\"eav-slide-toggle-label\">Show DataSource Params</span>\r\n      <mat-slide-toggle color=\"primary\" labelPosition=\"before\" [checked]=\"visualDesignerData.ShowDataSourceDetails\"\r\n        (change)=\"showDataSourceDetails($event)\"/>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"(warnings$ | async) as warnings\">\r\n      <div class=\"warnings\" *ngIf=\"warnings.length\">\r\n        <div class=\"title\">\r\n          <span>Warnings</span>\r\n          <mat-icon style=\"color: red\">warning</mat-icon>\r\n        </div>\r\n        <ol class=\"values\">\r\n          <li *ngFor=\"let warning of warnings\" [innerHTML]=\"warning\">\r\n          </li>\r\n        </ol>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <div class=\"description\" *ngIf=\"pipelineModel.Pipeline.Description\">\r\n      <div class=\"title\">Query Description</div>\r\n      <div>{{ pipelineModel.Pipeline.Description }}</div>\r\n    </div>\r\n\r\n    <div class=\"footer-actions\">\r\n      <button mat-raised-button class=\"action\" (click)=\"openRestApi()\">\r\n        <span>Use in JSON / REST API</span>\r\n        <mat-icon>code_curly</mat-icon>\r\n      </button>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { map, Observable } from 'rxjs';\r\nimport { GoToDevRest } from '../../dev-rest';\r\nimport { GeneralHelpers } from '../../edit/shared/helpers';\r\nimport { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\nimport { VisualQueryService } from '../services/visual-query.service';\r\nimport { calculateWarnings } from './run-explorer.helpers';\r\n\r\n@Component({\r\n  selector: 'app-run-explorer',\r\n  templateUrl: './run-explorer.component.html',\r\n  styleUrls: ['./run-explorer.component.scss'],\r\n})\r\nexport class RunExplorerComponent implements OnInit {\r\n  pipelineModel$: Observable<PipelineModel>;\r\n  warnings$: Observable<string[]>;\r\n  visualDesignerData$: Observable<Record<string, any>>;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private visualQueryService: VisualQueryService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.pipelineModel$ = this.visualQueryService.pipelineModel$.asObservable();\r\n    this.warnings$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => calculateWarnings(pipelineModel, this.context)),\r\n    );\r\n    this.visualDesignerData$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => GeneralHelpers.tryParse(pipelineModel.Pipeline.VisualDesignerData) ?? {}),\r\n    );\r\n  }\r\n\r\n  editPipeline() {\r\n    this.visualQueryService.editPipelineEntity();\r\n  }\r\n\r\n  openParamsHelp() {\r\n    window.open('https://go.2sxc.org/QueryParams', '_blank');\r\n  }\r\n\r\n  saveAndRunQuery(save: boolean, run: boolean) {\r\n    this.visualQueryService.saveAndRun(save, run);\r\n  }\r\n\r\n  showDataSourceDetails(event: MatSlideToggleChange): void {\r\n    this.visualQueryService.showDataSourceDetails(event.checked);\r\n  }\r\n\r\n  openRestApi() {\r\n    const queryGuid = this.visualQueryService.pipelineModel$.value.Pipeline.EntityGuid;\r\n    this.router.navigate([GoToDevRest.getUrlQuery(queryGuid)], { relativeTo: this.route });\r\n  }\r\n}\r\n","import { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\n\r\n/**\r\n * Check if there are special warnings the developer should know.\r\n * Typically when the test ModuleId is different from the one we're currently working on\r\n */\r\nexport function calculateWarnings(pipelineModel: PipelineModel, context: Context) {\r\n  const warnings: string[] = [];\r\n\r\n  try {\r\n    const queryParams = pipelineModel.Pipeline.Params?.split(/\\r?\\n/) || [];\r\n    const testParams = pipelineModel.Pipeline.TestParameters?.split(/\\r?\\n/) || [];\r\n\r\n    queryParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) { return; }\r\n\r\n      // Check if the syntax on Query Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const paramSyntax = /^[a-zA-Z0-9]+=(.*)$/gmi;\r\n      const matched = paramSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Query Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>key=value</code> <br>\r\n          or resolve to a token like: <br>\r\n          <code>key=[source:key]</code>\r\n        `);\r\n      }\r\n    });\r\n\r\n    testParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) { return; }\r\n\r\n      // Check if the syntax on Test Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const testParamSyntax = /^\\[[a-zA-Z]+:[a-zA-Z0-9]+\\]=(.*)$/gmi;\r\n      const matched = testParamSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Test Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>[source:key]=value</code>\r\n        `);\r\n      }\r\n\r\n      // Check if we should show the warning about the test ModuleId.\r\n      // This is because in the old days, the ModuleId wasn't auto-filled, so people had to add it as a test value.\r\n      // Now it's not necessary any more\r\n      const midRegex = /^\\[module:id\\]=([0-9]*)$/gmi;\r\n      const midMatch = midRegex.exec(param);\r\n      if (midMatch) {\r\n        const testMid = midMatch[1];\r\n        const urlMid = context.moduleId?.toString();\r\n        if (testMid !== urlMid) {\r\n          warnings.push(`\r\n            Your test ModuleId (${testMid}) is different from the current ModuleId (${urlMid}).<br>\r\n            Note that 2sxc automatically provides the ModuleId - so you usually do not need to set it\r\n          `);\r\n        }\r\n      }\r\n\r\n      const oldMidRegex = /^\\[module:moduleid\\]=([0-9]*)$/gmi;\r\n      const oldMidMatch = oldMidRegex.exec(param);\r\n      if (oldMidMatch) {\r\n        warnings.push(`\r\n          You are using deprecated [Module:ModuleId] test parameter.<br>\r\n          Please use [Module:Id]\r\n        `);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Something went wrong in calculateWarnings for params', error);\r\n  }\r\n\r\n  return warnings;\r\n}\r\n","<div class=\"editor-active-explorer fancy-scrollbar-dark\" *ngIf=\"viewModel$ | async as vm\">\r\n\r\n  <mat-slide-toggle labelPosition=\"before\" color=\"primary\" (change)=\"toggleDifficulty($event)\">\r\n    Show Advanced\r\n  </mat-slide-toggle>\r\n\r\n  <ng-container *ngFor=\"let group of vm.sorted | keyvalue; trackBy: trackGroups\">\r\n    <div class=\"collapsible\" [tippy]=\"guiTypes[group.key].UiHint || group.key\" tippyShowDelay=\"750\"\r\n      (click)=\"toggleItem(group.key)\">\r\n      <mat-icon>{{ guiTypes[group.key].Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n      <span>{{ guiTypes[group.key].Label ?? guiTypes[group.key].Name ?? group.key }}</span>\r\n    </div>\r\n\r\n    <div class=\"list\" *ngIf=\"toggledItems.includes(group.key)\">\r\n      <div class=\"list-item\" *ngFor=\"let dataSource of group.value; trackBy: trackDataSources\"\r\n        [tippy]=\"dataSource.UiHint || dataSource.Name\" tippyShowDelay=\"750\" (click)=\"addDataSource(dataSource)\">\r\n        <mat-icon>{{ dataSource.Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n        <span>{{ dataSource.Name }}</span>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n","import { KeyValue } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { GeneralHelpers } from '../../edit/shared/helpers';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\nimport { guiTypes } from '../plumb-editor/plumb-editor.helpers';\r\nimport { VisualQueryService } from '../services/visual-query.service';\r\nimport { filterAndSortDataSources } from './add-explorer.helpers';\r\n\r\n@Component({\r\n  selector: 'app-add-explorer',\r\n  templateUrl: './add-explorer.component.html',\r\n  styleUrls: ['./add-explorer.component.scss'],\r\n})\r\nexport class AddExplorerComponent implements OnInit, OnDestroy {\r\n  toggledItems: string[] = [];\r\n  guiTypes = guiTypes;\r\n\r\n  private difficulties = eavConstants.pipelineDesigner.dataSourceDifficulties;\r\n  private difficulty$ = new BehaviorSubject(this.difficulties.default);\r\n\r\n  viewModel$: Observable<AddExplorerViewModel>;\r\n\r\n  constructor(private visualQueryService: VisualQueryService) { }\r\n\r\n  ngOnInit() {\r\n    this.viewModel$ = combineLatest([\r\n      combineLatest([this.visualQueryService.dataSources$, this.difficulty$]).pipe(\r\n        map(([dataSources, difficulty]) => filterAndSortDataSources(dataSources, difficulty)),\r\n      )\r\n    ]).pipe(map(([sorted]) => ({ sorted })));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.difficulty$.complete();\r\n  }\r\n\r\n  toggleDifficulty(event: MatSlideToggleChange) {\r\n    const difficulty = event.checked ? this.difficulties.advanced : this.difficulties.default;\r\n    this.difficulty$.next(difficulty);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    this.visualQueryService.addDataSource(dataSource);\r\n  }\r\n\r\n  toggleItem(item: string) {\r\n    GeneralHelpers.toggleInArray(item, this.toggledItems);\r\n  }\r\n\r\n  trackGroups(index: number, type: KeyValue<string, DataSource[]>) {\r\n    return type.key;\r\n  }\r\n\r\n  trackDataSources(index: number, dataSource: DataSource) {\r\n    return dataSource.PartAssemblyAndType;\r\n  }\r\n}\r\n\r\ninterface AddExplorerViewModel {\r\n  sorted: SortedDataSources;\r\n}\r\n","import cloneDeep from 'lodash-es/cloneDeep';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\n\r\nexport function filterAndSortDataSources(dataSources: DataSource[], maxDifficulty: number) {\r\n  if (!dataSources) { return; }\r\n\r\n  const cloned = cloneDeep(dataSources);\r\n\r\n  const filtered = cloned.filter(dataSource =>\r\n    dataSource.Difficulty <= maxDifficulty\r\n    && dataSource.PartAssemblyAndType !== eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType\r\n  );\r\n\r\n  filtered.sort((a, b) => a.Name.toLocaleLowerCase().localeCompare(b.Name.toLocaleLowerCase()));\r\n\r\n  const sorted: SortedDataSources = {};\r\n  for (const dataSource of filtered) {\r\n    const type = dataSource.PrimaryType;\r\n    if (sorted[type]) {\r\n      sorted[type].push(dataSource);\r\n    } else {\r\n      sorted[type] = [dataSource];\r\n    }\r\n  }\r\n\r\n  return sorted;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { GoToDevRest } from '../dev-rest';\r\nimport { edit } from '../edit/edit.matcher';\r\nimport { VisualQueryComponent } from './visual-query.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: VisualQueryComponent, children: [\r\n      GoToDevRest.route,\r\n      {\r\n        matcher: edit,\r\n        loadChildren: () => import('../edit/edit.module').then(m => m.EditModule),\r\n        data: { history: false },\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class VisualQueryRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Context } from '../shared/services/context';\r\nimport { PlumbEditorComponent } from './plumb-editor/plumb-editor.component';\r\nimport { VisualQueryService } from './services/visual-query.service';\r\n\r\n@Component({\r\n  selector: 'app-visual-query',\r\n  templateUrl: './visual-query.component.html',\r\n  styleUrls: ['./visual-query.component.scss'],\r\n  providers: [VisualQueryService],\r\n})\r\nexport class VisualQueryComponent implements OnInit {\r\n  @ViewChild(PlumbEditorComponent) plumbEditor: PlumbEditorComponent;\r\n\r\n  explorer = {\r\n    run: 'run',\r\n    add: 'add'\r\n  };\r\n  activeExplorer = this.explorer.run;\r\n\r\n  constructor(private context: Context, private route: ActivatedRoute, private visualQueryService: VisualQueryService) {\r\n    this.context.init(this.route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.visualQueryService.init();\r\n  }\r\n\r\n  toggleExplorer(explorer: string) {\r\n    this.activeExplorer = (this.activeExplorer === explorer) ? null : explorer;\r\n  }\r\n\r\n  openHelp() {\r\n    window.open('https://go.2sxc.org/visual-query', '_blank');\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n<div class=\"editor-root\">\r\n  <div class=\"editor-side-toolbar\">\r\n    <div class=\"button\" tippy=\"Run\" [ngClass]=\"{ 'active': activeExplorer === explorer.run }\"\r\n      (click)=\"toggleExplorer(explorer.run)\">\r\n      <mat-icon>play_arrow</mat-icon>\r\n    </div>\r\n    <div class=\"button\" tippy=\"Add\" [ngClass]=\"{ 'active': activeExplorer === explorer.add }\"\r\n      (click)=\"toggleExplorer(explorer.add)\">\r\n      <mat-icon>add</mat-icon>\r\n    </div>\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"button\" tippy=\"Help\" (click)=\"openHelp()\">\r\n      <mat-icon>help_outline</mat-icon>\r\n    </div>\r\n  </div>\r\n\r\n  <app-run-explorer [hidden]=\"activeExplorer !== explorer.run\"></app-run-explorer>\r\n\r\n  <app-add-explorer [hidden]=\"activeExplorer !== explorer.add\"></app-add-explorer>\r\n\r\n  <app-plumb-editor></app-plumb-editor>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MAT_SELECT_CONFIG, MatSelectModule } from '@angular/material/select';\r\nimport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { MetadataService } from '../permissions/services/metadata.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { AddExplorerComponent } from './add-explorer/add-explorer.component';\r\nimport { PlumbEditorComponent } from './plumb-editor/plumb-editor.component';\r\nimport { RenameStreamComponent } from './plumb-editor/rename-stream/rename-stream.component';\r\nimport { QueryResultComponent } from './query-result/query-result.component';\r\nimport { RunExplorerComponent } from './run-explorer/run-explorer.component';\r\nimport { QueryDefinitionService } from './services/query-definition.service';\r\nimport { StreamErrorResultComponent } from './stream-error-result/stream-error-result.component';\r\nimport { VisualQueryRoutingModule } from './visual-query-routing.module';\r\nimport { VisualQueryComponent } from './visual-query.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    VisualQueryComponent,\r\n    RunExplorerComponent,\r\n    AddExplorerComponent,\r\n    PlumbEditorComponent,\r\n    QueryResultComponent,\r\n    StreamErrorResultComponent,\r\n    RenameStreamComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedComponentsModule,\r\n    VisualQueryRoutingModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    QueryDefinitionService,\r\n    MetadataService,\r\n    ContentTypesService,\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { subscriptSizing: 'dynamic' } },\r\n    { provide: MAT_SELECT_CONFIG, useValue: { hideSingleSelectionIndicator: true } },\r\n    { provide: MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, useValue: { hideIcon: true } }\r\n  ],\r\n})\r\nexport class VisualQueryModule { }\r\n"],"x_google_ignoreList":[]}