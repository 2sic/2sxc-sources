{"version":3,"sources":["./projects/ng-dialogs/src/app/app-administration/app-administration-nav/app-administration-dialog.config.ts","./projects/ng-dialogs/src/app/app-administration/sub-dialogs/edit-content-type/edit-content-type-dialog.config.ts","./projects/ng-dialogs/src/app/app-administration/sub-dialogs/export-app-parts/export-app-parts-dialog.config.ts","./projects/ng-dialogs/src/app/app-administration/sub-dialogs/export-app/export-app-dialog.config.ts","./projects/ng-dialogs/src/app/app-administration/sub-dialogs/import-app-parts/import-app-parts-dialog.config.ts","./projects/ng-dialogs/src/app/app-administration/sub-dialogs/import-content-type/import-content-type-dialog.config.ts","./projects/ng-dialogs/src/app/app-administration/sub-dialogs/import-query/import-query-dialog.config.ts","./projects/ng-dialogs/src/app/app-administration/sub-dialogs/import-view/import-view-dialog.config.ts","./projects/ng-dialogs/src/app/app-administration/sub-dialogs/views-usage/views-usage-dialog.config.ts","./projects/ng-dialogs/src/app/app-administration/app-administration-routing.module.ts","./projects/ng-dialogs/src/app/app-administration/app-administration.module.ts","./projects/ng-dialogs/src/app/app-administration/services/content-types.service.ts"],"names":["appAdministrationDialog","name","initContext","panelSize","panelClass","getComponent","editContentTypeDialog","exportAppPartsDialog","exportAppDialog","importAppPartsDialog","importContentTypeDialog","importQueryDialog","importViewDialog","viewsUsageDialog","appAdministrationRoutes","path","component","data","dialog","children","redirectTo","pathMatch","title","loadChildren","then","m","ContentItemsModule","matcher","EditModule","RefreshEditModule","route","ContentTypeFieldsModule","ContentExportModule","ContentImportModule","history","AppAdministrationRoutingModule","forChild","AppAdministrationModule","withComponents","webApiTypeRoot","http","context","dnnContext","apiUrl","this","$2sxc","retrieveContentType","staticName","get","params","appId","toString","contentTypeId","retrieveContentTypes","scope","getScopes","pipe","scopes","Object","keys","map","key","value","save","contentType","post","appid","delete","StaticName","import","files","formData","FormData","append","zoneId","createGhost","sourceStaticName","ContentTypesService"],"mappings":"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","file":"app-administration-app-administration-module.8626687ba57d7b51457c.js","sourcesContent":["import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const appAdministrationDialog: DialogConfig = {\r\n  name: 'APP_ADMINISTRATION_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { AppAdministrationNavComponent } = await import('./app-administration-nav.component');\r\n    return AppAdministrationNavComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const editContentTypeDialog: DialogConfig = {\r\n  name: 'EDIT_CONTENT_TYPE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'small',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { EditContentTypeComponent } = await import('./edit-content-type.component');\r\n    return EditContentTypeComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const exportAppPartsDialog: DialogConfig = {\r\n  name: 'EXPORT_APP_PARTS',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ExportAppPartsComponent } = await import('./export-app-parts.component');\r\n    return ExportAppPartsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const exportAppDialog: DialogConfig = {\r\n  name: 'EXPORT_APP',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ExportAppComponent } = await import('./export-app.component');\r\n    return ExportAppComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importAppPartsDialog: DialogConfig = {\r\n  name: 'IMPORT_APP_PARTS',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportAppPartsComponent } = await import('./import-app-parts.component');\r\n    return ImportAppPartsComponent;\r\n  }\r\n};\r\n\r\nexport interface ImportAppPartsDialogData {\r\n  files?: File[];\r\n}\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importContentTypeDialog: DialogConfig = {\r\n  name: 'IMPORT_CONTENT_TYPE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportContentTypeComponent } = await import('./import-content-type.component');\r\n    return ImportContentTypeComponent;\r\n  }\r\n};\r\n\r\nexport interface ImportContentTypeDialogData {\r\n  files?: File[];\r\n}\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importQueryDialog: DialogConfig = {\r\n  name: 'IMPORT_QUERY_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportQueryComponent } = await import('./import-query.component');\r\n    return ImportQueryComponent;\r\n  }\r\n};\r\n\r\nexport interface ImportQueryDialogData {\r\n  files?: File[];\r\n}\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importViewDialog: DialogConfig = {\r\n  name: 'IMPORT_VIEW_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportViewComponent } = await import('./import-view.component');\r\n    return ImportViewComponent;\r\n  }\r\n};\r\n\r\nexport interface ImportViewDialogData {\r\n  files?: File[];\r\n}\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const viewsUsageDialog: DialogConfig = {\r\n  name: 'VIEWS_USAGE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ViewsUsageComponent } = await import('./views-usage.component');\r\n    return ViewsUsageComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { edit, refreshEdit } from '../../../../edit/edit.matcher';\r\nimport { GoToDevRest } from '../dev-rest';\r\nimport { GoToPermissions } from '../permissions/go-to-permissions';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { EmptyRouteComponent } from '../shared/components/empty-route/empty-route.component';\r\nimport { appAdministrationDialog } from './app-administration-nav/app-administration-dialog.config';\r\nimport { editContentTypeDialog } from './sub-dialogs/edit-content-type/edit-content-type-dialog.config';\r\nimport { exportAppPartsDialog } from './sub-dialogs/export-app-parts/export-app-parts-dialog.config';\r\nimport { exportAppDialog } from './sub-dialogs/export-app/export-app-dialog.config';\r\nimport { importAppPartsDialog } from './sub-dialogs/import-app-parts/import-app-parts-dialog.config';\r\nimport { importContentTypeDialog } from './sub-dialogs/import-content-type/import-content-type-dialog.config';\r\nimport { importQueryDialog } from './sub-dialogs/import-query/import-query-dialog.config';\r\nimport { importViewDialog } from './sub-dialogs/import-view/import-view-dialog.config';\r\nimport { viewsUsageDialog } from './sub-dialogs/views-usage/views-usage-dialog.config';\r\n\r\nconst appAdministrationRoutes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: appAdministrationDialog }, children: [\r\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n      { path: 'home', component: EmptyRouteComponent, data: { title: 'App Home' } },\r\n      {\r\n        path: 'data', component: EmptyRouteComponent, children: [\r\n          {\r\n            path: 'import',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importContentTypeDialog, title: 'Import Content Type' },\r\n          },\r\n          {\r\n            path: 'items/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-items/content-items.module').then(m => m.ContentItemsModule)\r\n          },\r\n          {\r\n            matcher: edit,\r\n            loadChildren: () => import('../../../../edit/edit.module').then(m => m.EditModule)\r\n          },\r\n          {\r\n            matcher: refreshEdit,\r\n            loadChildren: () => import('../../../../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n          },\r\n          {\r\n            path: ':scope/add',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: editContentTypeDialog, title: 'Add Content Type' },\r\n          },\r\n          {\r\n            path: ':scope/:contentTypeStaticName/edit',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: editContentTypeDialog, title: 'Edit Content Type' },\r\n          },\r\n          GoToDevRest.route,\r\n          {\r\n            path: 'fields/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-type-fields/content-type-fields.module').then(m => m.ContentTypeFieldsModule),\r\n            data: { title: 'Content Type Fields' },\r\n          },\r\n          {\r\n            path: 'export/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-export/content-export.module').then(m => m.ContentExportModule),\r\n            data: { title: 'Export Items' },\r\n          },\r\n          {\r\n            path: ':contentTypeStaticName/import',\r\n            loadChildren: () => import('../content-import/content-import.module').then(m => m.ContentImportModule),\r\n            data: { title: 'Import Items' },\r\n          },\r\n          GoToPermissions.route,\r\n        ],\r\n        data: { title: 'App Data' },\r\n      },\r\n      {\r\n        path: 'queries', component: EmptyRouteComponent, children: [\r\n          {\r\n            path: 'import',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importQueryDialog, title: 'Import Query' }\r\n          },\r\n          {\r\n            matcher: edit,\r\n            loadChildren: () => import('../../../../edit/edit.module').then(m => m.EditModule),\r\n            data: { title: 'Edit Query Name and Description', history: false },\r\n          },\r\n          { ...GoToPermissions.route, data: { title: 'Query Permissions' }},\r\n          GoToDevRest.route,\r\n        ],\r\n        data: { title: 'App Queries' },\r\n      },\r\n      {\r\n        path: 'views', component: EmptyRouteComponent, children: [\r\n          {\r\n            path: 'import',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importViewDialog, title: 'Import View' },\r\n          },\r\n          { path: 'usage/:guid', component: DialogEntryComponent, data: { dialog: viewsUsageDialog } },\r\n          {\r\n            matcher: edit,\r\n            loadChildren: () => import('../../../../edit/edit.module').then(m => m.EditModule),\r\n            data: { title: 'Edit View' },\r\n          },\r\n          {\r\n            matcher: refreshEdit,\r\n            loadChildren: () => import('../../../../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n          },\r\n          { ...GoToPermissions.route, data: { title: 'View Permissions' }},\r\n        ],\r\n        data: { title: 'App Views' },\r\n      },\r\n      {\r\n        path: 'web-api', component: EmptyRouteComponent, data: { title: 'App WebApi' }, children: [\r\n          GoToDevRest.route,\r\n        ],\r\n      },\r\n      {\r\n        path: 'app', component: EmptyRouteComponent, children: [\r\n          {\r\n            matcher: edit,\r\n            loadChildren: () => import('../../../../edit/edit.module').then(m => m.EditModule),\r\n            data: { title: 'Edit App Properties' },\r\n          },\r\n          {\r\n            matcher: refreshEdit,\r\n            loadChildren: () => import('../../../../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n          },\r\n          {\r\n            path: 'fields/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-type-fields/content-type-fields.module').then(m => m.ContentTypeFieldsModule),\r\n            data: { title: 'Edit Fields of App Settings & Resources' },\r\n          },\r\n          { ...GoToPermissions.route, data: { title: 'App Permissions' }},\r\n          { path: 'export', component: DialogEntryComponent, data: { dialog: exportAppDialog, title: 'Export App' } },\r\n          { path: 'export/parts', component: DialogEntryComponent, data: { dialog: exportAppPartsDialog, title: 'Export App Parts' } },\r\n          { path: 'import/parts', component: DialogEntryComponent, data: { dialog: importAppPartsDialog, title: 'Import App Parts' } },\r\n        ],\r\n        data: { title: 'Manage App' },\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(appAdministrationRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppAdministrationRoutingModule { }\r\n","import { AgGridModule } from '@ag-grid-community/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { EcoFabSpeedDialModule } from '@ecodev/fab-speed-dial';\r\nimport { AppsListService } from '../apps-management/services/apps-list.service';\r\nimport { ContentExportService } from '../content-export/services/content-export.service';\r\nimport { ContentItemsService } from '../content-items/services/content-items.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { DialogService } from '../shared/services/dialog.service';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { DataActionsComponent } from './ag-grid-components/data-actions/data-actions.component';\r\nimport { DataFieldsComponent } from './ag-grid-components/data-fields/data-fields.component';\r\nimport { DataItemsComponent } from './ag-grid-components/data-items/data-items.component';\r\nimport { QueriesActionsComponent } from './ag-grid-components/queries-actions/queries-actions.component';\r\nimport { ViewsActionsComponent } from './ag-grid-components/views-actions/views-actions.component';\r\nimport { ViewsShowComponent } from './ag-grid-components/views-show/views-show.component';\r\nimport { ViewsTypeComponent } from './ag-grid-components/views-type/views-type.component';\r\nimport { ViewsUsageIdComponent } from './ag-grid-components/views-usage-id/views-usage-id.component';\r\nimport { ViewsUsageStatusFilterComponent } from './ag-grid-components/views-usage-status-filter/views-usage-status-filter.component';\r\nimport { WebApiActionsComponent } from './ag-grid-components/web-api-actions/web-api-actions.component';\r\nimport { AppAdministrationNavComponent } from './app-administration-nav/app-administration-nav.component';\r\nimport { AppAdministrationRoutingModule } from './app-administration-routing.module';\r\nimport { AppConfigurationComponent } from './app-configuration/app-configuration.component';\r\nimport { DataComponent } from './data/data.component';\r\nimport { GettingStartedComponent } from './getting-started/getting-started.component';\r\nimport { QueriesComponent } from './queries/queries.component';\r\nimport { AppDialogConfigService } from './services/app-dialog-config.service';\r\nimport { ContentTypesService } from './services/content-types.service';\r\nimport { ExportAppPartsService } from './services/export-app-parts.service';\r\nimport { ExportAppService } from './services/export-app.service';\r\nimport { ImportAppPartsService } from './services/import-app-parts.service';\r\nimport { PipelinesService } from './services/pipelines.service';\r\nimport { ViewsService } from './services/views.service';\r\nimport { WebApisService } from './services/web-apis.service';\r\nimport { EditContentTypeComponent } from './sub-dialogs/edit-content-type/edit-content-type.component';\r\nimport { ExportAppPartsComponent } from './sub-dialogs/export-app-parts/export-app-parts.component';\r\nimport { ExportAppComponent } from './sub-dialogs/export-app/export-app.component';\r\nimport { ImportAppPartsComponent } from './sub-dialogs/import-app-parts/import-app-parts.component';\r\nimport { ImportContentTypeComponent } from './sub-dialogs/import-content-type/import-content-type.component';\r\nimport { ImportQueryComponent } from './sub-dialogs/import-query/import-query.component';\r\nimport { ImportViewComponent } from './sub-dialogs/import-view/import-view.component';\r\nimport { ViewsUsageComponent } from './sub-dialogs/views-usage/views-usage.component';\r\nimport { ViewsComponent } from './views/views.component';\r\nimport { WebApiComponent } from './web-api/web-api.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GettingStartedComponent,\r\n    AppAdministrationNavComponent,\r\n    DataComponent,\r\n    QueriesComponent,\r\n    ViewsComponent,\r\n    WebApiComponent,\r\n    AppConfigurationComponent,\r\n    DataItemsComponent,\r\n    DataFieldsComponent,\r\n    DataActionsComponent,\r\n    QueriesActionsComponent,\r\n    ViewsTypeComponent,\r\n    ViewsShowComponent,\r\n    ViewsActionsComponent,\r\n    EditContentTypeComponent,\r\n    ImportQueryComponent,\r\n    ExportAppComponent,\r\n    ExportAppPartsComponent,\r\n    ImportAppPartsComponent,\r\n    WebApiActionsComponent,\r\n    ViewsUsageComponent,\r\n    ViewsUsageIdComponent,\r\n    ViewsUsageStatusFilterComponent,\r\n    ImportContentTypeComponent,\r\n    ImportViewComponent,\r\n  ],\r\n  entryComponents: [\r\n    AppAdministrationNavComponent,\r\n    DataItemsComponent,\r\n    DataFieldsComponent,\r\n    DataActionsComponent,\r\n    QueriesActionsComponent,\r\n    ViewsTypeComponent,\r\n    ViewsShowComponent,\r\n    ViewsActionsComponent,\r\n    EditContentTypeComponent,\r\n    ImportQueryComponent,\r\n    ExportAppComponent,\r\n    ExportAppPartsComponent,\r\n    ImportAppPartsComponent,\r\n    WebApiActionsComponent,\r\n    ViewsUsageComponent,\r\n    ViewsUsageIdComponent,\r\n    ViewsUsageStatusFilterComponent,\r\n    ImportContentTypeComponent,\r\n    ImportViewComponent,\r\n  ],\r\n  imports: [\r\n    AppAdministrationRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    AgGridModule.withComponents([]),\r\n    MatTabsModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatProgressSpinnerModule,\r\n    MatCheckboxModule,\r\n    MatExpansionModule,\r\n    MatCardModule,\r\n    MatRippleModule,\r\n    EcoFabSpeedDialModule,\r\n    MatSnackBarModule,\r\n    MatMenuModule,\r\n    MatBadgeModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    AppDialogConfigService,\r\n    ContentTypesService,\r\n    PipelinesService,\r\n    ViewsService,\r\n    ContentExportService,\r\n    WebApisService,\r\n    ContentItemsService,\r\n    ExportAppService,\r\n    ExportAppPartsService,\r\n    ImportAppPartsService,\r\n    DialogService,\r\n    AppsListService,\r\n  ]\r\n})\r\nexport class AppAdministrationModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { ImportAppResult } from '../../import-app/models/import-app-result.model';\r\nimport { EavScopeOption } from '../../shared/constants/eav.constants';\r\nimport { Dictionary } from '../../shared/models/dictionary.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\n\r\nexport const webApiTypeRoot = 'admin/type/';\r\n\r\n@Injectable()\r\nexport class ContentTypesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get<ContentType>(this.apiUrl(webApiTypeRoot + 'get'), {\r\n      params: { appId: this.context.appId.toString(), contentTypeId: staticName }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get<ContentType[]>(this.apiUrl(webApiTypeRoot + 'list'), {\r\n      params: { appId: this.context.appId.toString(), scope }\r\n    });\r\n  }\r\n\r\n  getScopes() {\r\n    return this.http.get<Dictionary<string>>(this.apiUrl(webApiTypeRoot + 'scopes'), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopes => {\r\n        const scopeOptions: EavScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeRoot + 'save'), contentType, {\r\n      params: { appid: this.context.appId.toString() },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeRoot + 'delete'), {\r\n      params: { appid: this.context.appId.toString(), staticName: contentType.StaticName },\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<ImportAppResult>(this.apiUrl(webApiTypeRoot + 'import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeRoot + 'addghost'), null, {\r\n      params: { appid: this.context.appId.toString(), sourceStaticName },\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}