{"version":3,"file":"projects_eav-ui_src_app_content-export_content-export_component_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/content-export/content-export.component.ts","./projects/eav-ui/src/app/content-export/content-export.component.html"],"sourcesContent":["import { computed, Injectable, Signal } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\n\r\n// We should list all the \"full\" paths here, so it's easier to find when searching for API calls\r\nexport const webApiTypeRoot = 'admin/type/';\r\nconst webApiTypeGet = 'admin/type/get';\r\nconst webApiTypes = 'admin/type/list';\r\nconst webApiTypeScopes = 'admin/type/scopes';\r\nconst webApiTypeSave = 'admin/type/save';\r\nconst webApiTypeDelete = 'admin/type/delete';\r\nconst webApiTypeImport = 'admin/type/import';\r\nconst webApiTypeAddGhost = 'admin/type/addghost';\r\n\r\n@Injectable()\r\nexport class ContentTypesService extends HttpServiceBase {\r\n\r\n  retrieveContentType(nameId: string) {\r\n    return this.getHttpApiUrl<ContentType>(webApiTypeGet, {\r\n      params: { appId: this.appId, contentTypeId: nameId }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypeSig(nameId: string, initial: undefined): Signal<ContentType> {\r\n    return this.getSignal<ContentType>(webApiTypeGet, {\r\n      params: { appId: this.appId, contentTypeId: nameId }\r\n    }, initial);\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.getHttpApiUrl<ContentType[]>(webApiTypes, {\r\n      params: { appId: this.appId, scope }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypesSig(scope: string, initial: undefined): Signal<ContentType[]> {\r\n    return this.getSignal<ContentType[]>(webApiTypes, {\r\n      params: { appId: this.appId, scope }\r\n    }, initial);\r\n  }\r\n\r\n  // TODO: remove this method after upgrade to V2\r\n  getScopes() {\r\n    return this.getHttpApiUrl<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(webApiTypeScopes, {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => {\r\n        // wip during upgrade:\r\n        const scopes = scopesData.old;\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getScopesSig(initial: undefined): Signal<ScopeOption[]> {\r\n    const scopesSignal = this.getSignal<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(\r\n      webApiTypeScopes,\r\n      { params: { appId: this.appId } }, initial,\r\n    );\r\n\r\n    const scopeOptionsSignal = computed(() => {\r\n      const scopesData = scopesSignal();\r\n\r\n      // Add null/undefined check here\r\n      if (!scopesData || !scopesData.old) {\r\n        return []; // Return an empty array or handle this case as appropriate\r\n      }\r\n\r\n      const scopes = scopesData.old;\r\n      return Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n    });\r\n\r\n    return scopeOptionsSignal;\r\n  }\r\n\r\n  getScopesV2() {\r\n    return this.getHttpApiUrl<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(webApiTypeScopes, {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => scopesData.scopes),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeSave), contentType, {\r\n      params: { appid: this.appId },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeDelete), {\r\n      params: { appid: this.appId, staticName: contentType.NameId }, // TODO: @2pp - replace staticName with NameId\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  createGhost(sourceNameId: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeAddGhost), null, {\r\n      params: { appid: this.appId, sourceNameId },\r\n    });\r\n  }\r\n}\r\n","import { AsyncPipe } from '@angular/common';\r\nimport { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject, forkJoin } from 'rxjs';\r\nimport { transient } from '../../../../core';\r\nimport { ContentType } from '../app-administration/models/content-type.model';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { DialogConfigAppService } from '../app-administration/services/dialog-config-app.service';\r\nimport { Language } from '../shared/models/language.model';\r\nimport { ContentExport } from './models/content-export.model';\r\nimport { ContentExportService } from './services/content-export.service';\r\n\r\n@Component({\r\n    selector: 'app-content-export',\r\n    templateUrl: './content-export.component.html',\r\n    styleUrls: ['./content-export.component.scss'],\r\n    imports: [\r\n        FormsModule,\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        MatRadioModule,\r\n        MatDialogActions,\r\n        MatButtonModule,\r\n        AsyncPipe,\r\n    ]\r\n})\r\nexport class ContentExportComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  private contentExportService = transient(ContentExportService);\r\n  private contentTypesService = transient(ContentTypesService);\r\n  private dialogConfigSvc = transient(DialogConfigAppService);\r\n\r\n  formValues: ContentExport;\r\n  languages: Language[];\r\n  itemIds: number[];\r\n  hasIdList = false;\r\n  loading$ = new BehaviorSubject(false);\r\n  contentType$ = new BehaviorSubject<ContentType>(null);\r\n\r\n  private contentTypeStaticName = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<ContentExportComponent>,\r\n    private route: ActivatedRoute,\r\n  ) {\r\n    const selectedIds = this.route.snapshot.paramMap.get('selectedIds');\r\n    this.hasIdList = !!selectedIds;\r\n    if (this.hasIdList) {\r\n      this.itemIds = selectedIds.split(',').map(id => parseInt(id, 10));\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loading$.next(true);\r\n    const contentType$ = this.contentTypesService.retrieveContentType(this.contentTypeStaticName);\r\n    const dialogSettings$ = this.dialogConfigSvc.getCurrent$();\r\n    forkJoin([contentType$, dialogSettings$]).subscribe(([contentType, dialogSettings]) => {\r\n      this.contentType$.next(contentType);\r\n      this.languages = dialogSettings.Context.Language.List;\r\n\r\n      this.formValues = {\r\n        defaultLanguage: dialogSettings.Context.Language.Primary,\r\n        contentTypeStaticName: this.contentTypeStaticName,\r\n        language: '',\r\n        recordExport: this.hasIdList ? 'Selection' : 'All',\r\n        languageReferences: 'Link',\r\n        resourcesReferences: 'Link',\r\n      };\r\n      this.loading$.next(false);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.contentType$.complete();\r\n    this.loading$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  exportContent() {\r\n    this.contentExportService.exportContent(this.formValues,\r\n      this.hasIdList && this.formValues.recordExport === 'Selection' ? this.itemIds : null);\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Export {{ (contentType$ | async)?.Name }}</div>\r\n  </div>\r\n  @if ((loading$ | async) === false) {\r\n    <form #ngForm=\"ngForm\">\r\n      <div class=\"eav-dialog-content\">\r\n        <p>\r\n          This will generate an XML file which you can edit in Excel. If you just want to import new data, use this to export the schema\r\n          that you can then fill in using Excel. Please visit\r\n          <a href=\"https://2sxc.org/help\" target=\"_blank\">https://2sxc.org/help</a> for more instructions.\r\n        </p>\r\n        <div class=\"dialog-form-content fancy-scrollbar-light\">\r\n          <div>\r\n            <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n              <mat-label>Languages</mat-label>\r\n              <mat-select [(ngModel)]=\"formValues.language\" name=\"Language\">\r\n                <mat-option value=\"\">All</mat-option>\r\n                @for (lang of languages; track lang) {\r\n                  <mat-option [value]=\"lang.NameId\">{{ lang.NameId }}</mat-option>\r\n                }\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div>\r\n            <p class=\"eav-radio-group-label\">Export data</p>\r\n            <mat-radio-group [(ngModel)]=\"formValues.recordExport\" name=\"RecordExport\" class=\"eav-radio-group\">\r\n              <mat-radio-button value=\"Blank\">No, just export blank data schema (for new data import) </mat-radio-button>\r\n              <mat-radio-button value=\"All\">Yes, export all content-items</mat-radio-button>\r\n              @if (hasIdList) {\r\n                <mat-radio-button value=\"Selection\"> Export selected {{ itemIds.length }} items </mat-radio-button>\r\n              }\r\n            </mat-radio-group>\r\n          </div>\r\n          <div>\r\n            <p class=\"eav-radio-group-label\">Value references to other languages</p>\r\n            <mat-radio-group\r\n              [(ngModel)]=\"formValues.languageReferences\"\r\n              name=\"LanguageReferences\"\r\n              [disabled]=\"formValues.recordExport === 'Blank'\"\r\n              class=\"eav-radio-group\"\r\n            >\r\n              <mat-radio-button value=\"Link\">Keep references to other languages (for re-import) </mat-radio-button>\r\n              <mat-radio-button value=\"Resolve\">Replace references with values</mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n          <div>\r\n            <p class=\"eav-radio-group-label\">File / page references</p>\r\n            <mat-radio-group\r\n              [(ngModel)]=\"formValues.resourcesReferences\"\r\n              name=\"ResourcesReferences\"\r\n              [disabled]=\"formValues.recordExport === 'Blank'\"\r\n              class=\"eav-radio-group\"\r\n            >\r\n              <mat-radio-button value=\"Link\">Keep references (for re-import, for example Page:4711) </mat-radio-button>\r\n              <mat-radio-button value=\"Resolve\">Replace references with real URLs (for example /Portals/0...) </mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <mat-dialog-actions align=\"end\">\r\n        <button mat-raised-button (click)=\"closeDialog()\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\" [disabled]=\"!ngForm.form.valid\" (click)=\"exportContent()\">Export Data</button>\r\n      </mat-dialog-actions>\r\n    </form>\r\n  }\r\n</div>\r\n"],"names":["computed","Signal","map","HttpServiceBase","webApiTypeRoot","webApiTypeGet","webApiTypes","webApiTypeScopes","webApiTypeSave","webApiTypeDelete","webApiTypeImport","webApiTypeAddGhost","ContentTypesService","retrieveContentType","nameId","getHttpApiUrl","params","appId","contentTypeId","retrieveContentTypeSig","initial","getSignal","retrieveContentTypes","scope","retrieveContentTypesSig","getScopes","pipe","scopesData","scopes","old","scopeOptions","Object","keys","key","name","value","getScopesSig","scopesSignal","scopeOptionsSignal","getScopesV2","save","contentType","http","post","apiUrl","appid","delete","staticName","NameId","import","files","formData","FormData","file","append","zoneId","createGhost","sourceNameId","__ngFactoryType__","factory","ɵfac","AsyncPipe","FormsModule","MatButtonModule","MatOptionModule","MatDialogActions","MatDialogRef","MatFormFieldModule","MatRadioModule","MatSelectModule","ActivatedRoute","BehaviorSubject","forkJoin","transient","DialogConfigAppService","ContentExportService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","lang_r3","ɵɵadvance","ɵɵtextInterpolate","ɵɵtextInterpolate1","ctx_r1","itemIds","length","ɵɵtwoWayListener","ContentExportComponent_Conditional_5_Template_mat_select_ngModelChange_13_listener","$event","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵtwoWayBindingSet","formValues","language","ɵɵresetView","ɵɵrepeaterCreate","ContentExportComponent_Conditional_5_For_17_Template","ɵɵrepeaterTrackByIdentity","ContentExportComponent_Conditional_5_Template_mat_radio_group_ngModelChange_21_listener","recordExport","ɵɵtemplate","ContentExportComponent_Conditional_5_Conditional_26_Template","ContentExportComponent_Conditional_5_Template_mat_radio_group_ngModelChange_30_listener","languageReferences","ContentExportComponent_Conditional_5_Template_mat_radio_group_ngModelChange_38_listener","resourcesReferences","ɵɵlistener","ContentExportComponent_Conditional_5_Template_button_click_44_listener","closeDialog","ContentExportComponent_Conditional_5_Template_button_click_46_listener","exportContent","ɵɵtwoWayProperty","ɵɵrepeater","languages","ɵɵconditional","hasIdList","ngForm_r4","form","valid","ContentExportComponent","constructor","dialog","route","hostClass","contentExportService","contentTypesService","dialogConfigSvc","loading$","contentType$","contentTypeStaticName","snapshot","paramMap","get","selectedIds","split","id","parseInt","ngOnInit","next","dialogSettings$","getCurrent$","subscribe","dialogSettings","Context","Language","List","defaultLanguage","Primary","ngOnDestroy","complete","close","ɵɵdirectiveInject","i1","i2","selectors","hostVars","hostBindings","ContentExportComponent_HostBindings","rf","ctx","ɵɵhostProperty","ContentExportComponent_Conditional_5_Template","tmp_0_0","ɵɵpipeBind1","Name","i3","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","NgModel","NgForm","i4","MatFormField","MatLabel","i5","MatSelect","i6","MatOption","i7","MatRadioGroup","MatRadioButton","i8","MatButton","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}