{"version":3,"file":"projects_eav-ui_src_app_apps-management_apps-list_apps-list_component_ts-projects_eav-ui_src_-5efbee.f52ade8fb2813f41.js","mappings":"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","names":["AppListShowIcons","states","true","tooltip","icon","false","AppListCodeErrorIcons","clickable","getUrl","data","window","$2sxc","http","apiUrl","Id","i0","_r1","ctx_r1","do","app","IsApp","AppsListActionsComponent","agInit","params","this","refresh","verb","selectors","standalone","features","decls","vars","consts","template","rf","ctx","AppsListActionsComponent_Conditional_2_Template","AppsListActionsComponent_Conditional_3_Template","AppsListActionsComponent_ng_template_10_Template","IsGlobal","IsInherited","lightSpeed","menu_r3","TippyDirective","MatIconModule","i1","MatBadgeModule","MatRippleModule","i2","MatMenuModule","i3","LightSpeedActionsComponent","encapsulation","AppsListComponent","#appsListSvc","#dialogRouter","constructor","snackBar","context","matDialog","viewContainerRef","changeDetectorRef","log","classLog","gridOptions","#buildGridOptions","inject","FeaturesScopedService","isAddFromFolderEnabled","isEnabled","FeatureNames","AppSyncWithSiteFiles","transient","AppsListService","DialogRoutingService","fabOpen","signal","#refresh","apps","computed","getAll","ModuleRegistry","registerModules","ClientSideRowModelModule","ngOnInit","doOnDialogClosed","#loadApps","openChange","open","set","browseCatalog","createApp","navRelative","createInheritedApp","addFromFolder","importApp","files","state","#deleteApp","result","prompt","Name","delete","subscribe","error","undefined","duration","next","alert","#flushApp","confirm","flushCache","#getLightSpeedLink","formUrl","convertFormToUrl","AppAdminHelpers","getLightSpeedEditParams","urlSubRoute","zoneId","openLightSpeedFeatInfo","openFeatureDialog","LightSpeed","defaultGridOptions","columnDefs","ColumnDefinitions","IdWithDefaultRenderer","cellRendererParams","idFieldParamsTooltipGetter","IconShow","cellRenderer","AgBoolIconRenderer","settings","TextWide","field","cellClass","split","sort","p","toString","Thumbnail","value","Character","width","Number","Boolean","headerName","filter","BooleanFilterComponent","ActionsPinnedRight3","lightSpeedLink","openLightspeedFeatureInfo","update","v","$event","_c0","SxcGridModule","i4","MatDialogActions","EcoFabSpeedDialComponent","NgClass","EcoFabSpeedDialTriggerComponent","MatButtonModule","i5","i6","EcoFabSpeedDialActionsComponent","i7","RouterOutlet","DragAndDropDirective","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","ContentSecurityPolicy","PermissionsByLanguage","ContentTypeFieldsReuseDefinitions","AppExportAssetsAdvanced","PickerUiCheckbox","PickerUiRadio","PickerSourceCsv","PickerSourceAppAssets","PickerFormulas","PickerUiMoreInfo","BaseDirective","subscriptions","Subscription","ngOnDestroy","unsubscribe","elementRef","zone","super","markStyle","input","allowedFileTypes","filesDropped","output","dropAreaClass","markStyleClass","dragClass","timeouts","element","nativeElement","classList","add","runOutsideAngular","fromEvent","event","preventDefault","stopPropagation","clearTimeouts","push","setTimeout","remove","onDrop","Array","from","dataTransfer","filterTypes","length","emit","timeout","clearTimeout","allowedTypes","map","type","toLocaleLowerCase","filtered","file","extIndex","name","lastIndexOf","ext","substring","includes","allowedTypesString","replace","hostBindings","SafeHtmlPipe","sanitizer","transform","html","bypassSecurityTrustHtml","pure","logSpecs","ServiceBase","router","route","snapshot","url","getParam","key","paramMap","get","getParams","keys","reduce","acc","getQueryParam","queryParamMap","getQueryParams","getCurrentNavigation","extras","callback","l","fnIf","childDialogClosed$","end","tree","createUrlTree","relativeTo","serializeUrl","navPath","navigate","commands","events","pipe","NavigationEnd","startWith","firstChild","pairwise","hadChildBefore","hasChildNow","factory","ɵfac"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/apps-management/apps-list/app-list-grid-config.ts","./projects/eav-ui/src/app/apps-management/apps-list/apps-list-actions/apps-list-actions.component.html","./projects/eav-ui/src/app/apps-management/apps-list/apps-list-actions/apps-list-actions.component.ts","./projects/eav-ui/src/app/apps-management/apps-list/apps-list.component.ts","./projects/eav-ui/src/app/apps-management/apps-list/apps-list.component.html","./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/shared/directives/base.directive.ts","./projects/eav-ui/src/app/shared/directives/drag-and-drop.directive.ts","./projects/eav-ui/src/app/shared/pipes/safe-html.pipe.ts","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts"],"sourcesContent":["import { AgBoolCellIconSettings } from '../../shared/ag-grid/apps-list-show/ag-bool-icon-params';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { App } from '../models/app.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport const AppListShowIcons: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      tooltip: 'Show this app to users',\r\n      icon: 'visibility',\r\n    },\r\n    false: {\r\n      tooltip: 'Hide this app from users',\r\n      icon: 'visibility_off',\r\n    }\r\n  }\r\n};\r\n\r\nexport const AppListCodeErrorIcons: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      clickable: true,\r\n      tooltip: 'This App uses obsolete code which will cause problems on future upgrades. Click to see details.',\r\n      icon: 'bug_report',\r\n      getUrl: (data: App) => window.$2sxc.http.apiUrl('sys/insights/logs?key=warnings-obsolete&filter=AppId=' + data.Id),\r\n    },\r\n    false: {\r\n      tooltip: 'Hide this app from users',\r\n      icon: '',\r\n    }\r\n  }\r\n};\r\n","<div class=\"actions-component\">\r\n  <!-- Global/Inherited button for shared apps (if enabled) -->\r\n  <div class=\"eav-grid-action-button icon\"\r\n    [tippy]=\"app.IsGlobal ? 'This app is global' : app.IsInherited ? 'This app is inherited' : ''\"\r\n    [tippyDisabled]=\"!app.IsGlobal && !app.IsInherited\">\r\n    @if (app.IsGlobal) {\r\n      <mat-icon>foundation</mat-icon>\r\n    }\r\n    @if (app.IsInherited) {\r\n      <mat-icon>holiday_village</mat-icon>\r\n    }\r\n  </div>\r\n\r\n  <!-- Lightspeed button -->\r\n  <app-lightspeed-action [lightSpeedOwner]=\"app\" [params]=\"params\" [lightSpeed]=\"app.lightSpeed\"></app-lightspeed-action>\r\n\r\n  <!-- More button -->\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"More\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<!-- The menu which appears on more -->\r\n<mat-menu #menu=\"matMenu\" class=\"grid-more-menu\">\r\n  <ng-template matMenuContent>\r\n    <button mat-menu-item (click)=\"do('flushCache')\">\r\n      <mat-icon>cached</mat-icon>\r\n      <span>Flush cache</span>\r\n    </button>\r\n    <button mat-menu-item [disabled]=\"!app.IsApp\" (click)=\"do('deleteApp')\">\r\n      <mat-icon>delete</mat-icon>\r\n      <span>Delete</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { App } from '../../models/app.model';\r\nimport { AppsListActionsParams, AppsListActionsType } from './apps-list-actions.models';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { LightSpeedActionsComponent } from '../../../admin-shared/lightspeed-action/lightspeed-action.component';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-apps-list-actions',\r\n  templateUrl: './apps-list-actions.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    TippyDirective,\r\n    MatIconModule,\r\n    MatBadgeModule,\r\n    MatRippleModule,\r\n    MatMenuModule,\r\n    LightSpeedActionsComponent,\r\n  ],\r\n})\r\nexport class AppsListActionsComponent implements ICellRendererAngularComp {\r\n  app: App;\r\n\r\n  public params: ICellRendererParams & AppsListActionsParams;\r\n  agInit(params: ICellRendererParams & AppsListActionsParams): void {\r\n    this.params = params;\r\n    this.app = this.params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  do(verb: AppsListActionsType): void {\r\n    this.params.do(verb, this.app);\r\n  }\r\n}\r\n","import { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\r\nimport { GridOptions, ICellRendererParams, ModuleRegistry } from '@ag-grid-community/core';\r\nimport { NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, computed, inject, OnInit, signal, ViewContainerRef } from '@angular/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent } from '@ecodev/fab-speed-dial';\r\nimport { transient } from '../../../../../core';\r\nimport { AppAdminHelpers } from '../../app-administration/app-admin-helpers';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { FeaturesScopedService } from '../../features/features-scoped.service';\r\nimport { openFeatureDialog } from '../../features/shared/base-feature.component';\r\nimport { AgBoolCellIconsParams } from '../../shared/ag-grid/apps-list-show/ag-bool-icon-params';\r\nimport { AgBoolIconRenderer } from '../../shared/ag-grid/apps-list-show/ag-bool-icon-renderer.component';\r\nimport { ColumnDefinitions } from '../../shared/ag-grid/column-definitions';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { FileUploadDialogData } from '../../shared/components/file-upload-dialog';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { DragAndDropDirective } from '../../shared/directives/drag-and-drop.directive';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { classLog } from '../../shared/logging';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { App } from '../models/app.model';\r\nimport { AppsListService } from '../services/apps-list.service';\r\nimport { AppListCodeErrorIcons, AppListShowIcons } from './app-list-grid-config';\r\nimport { AppsListActionsComponent } from './apps-list-actions/apps-list-actions.component';\r\nimport { AppsListActionsParams } from './apps-list-actions/apps-list-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-apps-list',\r\n  templateUrl: './apps-list.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    SxcGridModule,\r\n    MatDialogActions,\r\n    EcoFabSpeedDialComponent,\r\n    NgClass,\r\n    EcoFabSpeedDialTriggerComponent,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    EcoFabSpeedDialActionsComponent,\r\n    MatBadgeModule,\r\n    RouterOutlet,\r\n    DragAndDropDirective,\r\n  ],\r\n})\r\nexport class AppsListComponent implements OnInit {\r\n\r\n  log = classLog({ AppsListComponent });\r\n\r\n  gridOptions = this.#buildGridOptions();\r\n\r\n  public features = inject(FeaturesScopedService);\r\n  protected isAddFromFolderEnabled = this.features.isEnabled[FeatureNames.AppSyncWithSiteFiles];\r\n\r\n  #appsListSvc = transient(AppsListService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private context: Context,\r\n    // Services for showing features in the menu\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    ModuleRegistry.registerModules([ClientSideRowModelModule]);\r\n  }\r\n\r\n  fabOpen = signal(false);\r\n\r\n  #refresh = signal(0);\r\n\r\n  apps = computed(() => {\r\n    const refresh = this.#refresh();\r\n    return this.#appsListSvc.getAll();\r\n  });\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.#dialogRouter.doOnDialogClosed(() => this.#loadApps());\r\n  }\r\n\r\n  openChange(open: boolean): void {\r\n    this.fabOpen.set(open);\r\n  }\r\n\r\n  // TODO: @2dg - try to fix this so the link is directly in the HTML without a function call\r\n  browseCatalog(): void {\r\n    window.open('https://2sxc.org/apps', '_blank');\r\n  }\r\n\r\n  createApp(): void {\r\n    this.#dialogRouter.navRelative(['create']);\r\n  }\r\n\r\n  createInheritedApp(): void {\r\n    this.#dialogRouter.navRelative(['create-inherited']);\r\n  }\r\n\r\n  addFromFolder(): void {\r\n    this.#dialogRouter.navRelative(['add-app-from-folder']);\r\n  }\r\n\r\n  importApp(files?: File[]): void {\r\n    const dialogData: FileUploadDialogData = { files };\r\n    this.#dialogRouter.navRelative(['import'], { state: dialogData });\r\n  }\r\n\r\n  #deleteApp(app: App): void {\r\n    const result = prompt(`This cannot be undone. To really delete this app, type 'yes!' or type/paste the app-name here. Are you sure want to delete '${app.Name}' (${app.Id})?`);\r\n    if (result === null) return;\r\n    if (result === app.Name || result === 'yes!') {\r\n      this.snackBar.open('Deleting...');\r\n      this.#appsListSvc.delete(app.Id).subscribe({\r\n        error: () => {\r\n          this.snackBar.open('Delete failed. Please check console for more information', undefined, { duration: 3000 });\r\n          this.#loadApps();\r\n        },\r\n        next: () => {\r\n          this.snackBar.open('Deleted', undefined, { duration: 2000 });\r\n          this.#loadApps();\r\n        },\r\n      });\r\n    } else {\r\n      alert('Input did not match - will not delete');\r\n    }\r\n  }\r\n\r\n  #flushApp(app: App): void {\r\n    if (!confirm(`Flush the App Cache for ${app.Name} (${app.Id})?`))\r\n      return;\r\n    this.snackBar.open('Flushing cache...');\r\n    this.#appsListSvc.flushCache(app.Id).subscribe({\r\n      error: () => this.snackBar.open('Cache flush failed. Please check console.', undefined, { duration: 3000 }),\r\n      next: () => this.snackBar.open('Cache flushed', undefined, { duration: 2000 }),\r\n    });\r\n  }\r\n\r\n  #getLightSpeedLink(app?: App): string {\r\n    const formUrl = convertFormToUrl(AppAdminHelpers.getLightSpeedEditParams(app.Id));\r\n    const urlString = `${this.context.zoneId}/${app.Id}/edit/${formUrl}`;\r\n    return this.#dialogRouter.urlSubRoute(urlString);\r\n  }\r\n\r\n  openLightSpeedFeatInfo() {\r\n    openFeatureDialog(this.matDialog, FeatureNames.LightSpeed, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n\r\n  #buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.IdWithDefaultRenderer,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<App>(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.IconShow,\r\n          cellRenderer: AgBoolIconRenderer,\r\n          cellRendererParams: { settings: () => AppListShowIcons },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Name',\r\n          cellClass: 'apps-list-primary-action highlight'.split(' '),\r\n          sort: 'asc',\r\n          cellRenderer: (p: ICellRendererParams) => {\r\n            const app: App = p.data;\r\n            const url = this.#dialogRouter.urlSubRoute(app.Id.toString());\r\n            return `\r\n              <a class=\"default-link fill-cell\" href=\"#${url}\">\r\n                <div class=\"container\">\r\n                  ${app.Thumbnail\r\n                    ? `<img class=\"image logo\" src=\"${app.Thumbnail}?w=40&h=40&mode=crop\"></img>`\r\n                    : `<div class=\"image logo\"><span class=\"material-symbols-outlined\">star</span></div>`\r\n                  }\r\n                  ${p.value}\r\n                </div>\r\n              </a>\r\n            `;\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Folder',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Character,\r\n          field: 'Version',\r\n          width: 78,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Number,\r\n          field: 'Items',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Boolean,\r\n          field: 'HasCodeWarnings',\r\n          headerName: 'Code',\r\n          filter: BooleanFilterComponent,\r\n          cellRenderer: AgBoolIconRenderer,\r\n          cellRendererParams: (() => ({ settings: () => AppListCodeErrorIcons } as AgBoolCellIconsParams<App>))(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight3,\r\n          cellRenderer: AppsListActionsComponent,\r\n          cellRendererParams: {\r\n            lightSpeedLink: (app: App) => this.#getLightSpeedLink(app),\r\n            openLightspeedFeatureInfo: () => this.openLightSpeedFeatInfo(),\r\n            do: (verb, app) => {\r\n              switch (verb) {\r\n                case 'deleteApp': this.#deleteApp(app); break;\r\n                case 'flushCache': this.#flushApp(app); break;\r\n              }\r\n            }\r\n          } satisfies AppsListActionsParams,\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n\r\n  #loadApps(): void {\r\n    this.#refresh.update(v => v + 1);\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"apps()()\" [gridOptions]=\"gridOptions\" appDragAndDrop\r\n    [allowedFileTypes]=\"'zip'\" (filesDropped)=\"importApp($event)\">\r\n  </ag-grid-angular>\r\n  <mat-dialog-actions align=\"end\">\r\n    <eco-fab-speed-dial class=\"eav-eco-fab-speed-dial\" [ngClass]=\"{ 'fab-opened': fabOpen() }\"\r\n      (openChange)=\"openChange($event)\">\r\n      <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n        <button mat-fab>\r\n          <mat-icon class=\"spin180\">{{ fabOpen() ? 'close' : 'add' }}</mat-icon>\r\n        </button>\r\n      </eco-fab-speed-dial-trigger>\r\n      <eco-fab-speed-dial-actions class=\"eav-eco-fab-speed-dial-actions\">\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Find more apps\"\r\n          (click)=\"browseCatalog()\">\r\n          <mat-icon>search</mat-icon>\r\n        </button>\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Create inherited app\"\r\n          (click)=\"createInheritedApp()\">\r\n          <mat-icon>holiday_village</mat-icon>\r\n        </button>\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Add from folder\"\r\n          (click)=\"addFromFolder()\">\r\n          <mat-icon [matBadgeHidden]=\"isAddFromFolderEnabled()\" matBadgeColor=\"accent\" matBadgeSize=\"small\"\r\n            matBadge=\"💎\" matBadgePosition=\"below after\" aria-hidden=\"false\">\r\n            add\r\n          </mat-icon>\r\n        </button>\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Import app\" (click)=\"importApp()\">\r\n          <mat-icon>cloud_upload</mat-icon>\r\n        </button>\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Create app\" (click)=\"createApp()\">\r\n          <mat-icon>add</mat-icon>\r\n        </button>\r\n      </eco-fab-speed-dial-actions>\r\n    </eco-fab-speed-dial>\r\n  </mat-dialog-actions>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  ContentTypeFieldsReuseDefinitions: 'ContentTypeFieldsReuseDefinitions',\r\n  AppExportAssetsAdvanced: 'AppExportAssetsAdvanced',\r\n\r\n  // Picker features\r\n  PickerUiCheckbox: 'PickerUiCheckbox',\r\n  PickerUiRadio: 'PickerUiRadio',\r\n  PickerSourceCsv: 'PickerSourceCsv',\r\n  PickerSourceAppAssets: 'PickerSourceAppAssets',\r\n  PickerFormulas: 'PickerFormulas',\r\n  PickerUiMoreInfo: 'PickerUiMoreInfo',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","import { Directive, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class BaseDirective implements OnDestroy {\r\n  /** Holds all subscriptions to be unsubscribed on destroy */\r\n  protected subscriptions = new Subscription();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener, input, NgZone, OnDestroy, OnInit, output, signal } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { fromEvent } from 'rxjs';\r\nimport { BaseDirective } from './base.directive';\r\n\r\n@Directive({ selector: '[appDragAndDrop]', standalone: true })\r\nexport class DragAndDropDirective extends BaseDirective implements OnInit, OnDestroy {\r\n  markStyle = input<'outline' | 'fill' | 'shadow'>('outline');\r\n  /** Comma separated file types, e.g. 'txt,doc,docx' */\r\n  allowedFileTypes = input<string>('');\r\n  protected filesDropped = output<File[]>();\r\n\r\n  private element: HTMLElement;\r\n  private dropAreaClass = 'eav-droparea';\r\n  private markStyleClass = signal<string>('');\r\n  private dragClass = 'eav-dragover';\r\n  private timeouts: number[] = [];\r\n\r\n  constructor(elementRef: ElementRef, private zone: NgZone, private snackBar: MatSnackBar) {\r\n    super();\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.markStyleClass.set(`eav-droparea-${this.markStyle()}`);\r\n    this.element.classList.add(this.dropAreaClass, this.markStyleClass());\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<DragEvent>(this.element, 'dragover').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.clearTimeouts();\r\n          this.element.classList.add(this.dragClass);\r\n        })\r\n      );\r\n      this.subscriptions.add(\r\n        fromEvent<DragEvent>(this.element, 'dragleave').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.timeouts.push(\r\n            window.setTimeout(() => { this.element.classList.remove(this.dragClass); }, 50)\r\n          );\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dropAreaClass, this.markStyleClass(), this.dragClass);\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(event: DragEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dragClass);\r\n    const fileList = event.dataTransfer.files;\r\n    let files = Array.from(fileList);\r\n    files = this.filterTypes(files, this.allowedFileTypes());\r\n    if (files.length > 0) {\r\n      this.filesDropped.emit(files);\r\n    }\r\n  }\r\n\r\n  private clearTimeouts() {\r\n    for (const timeout of this.timeouts) {\r\n      clearTimeout(timeout);\r\n    }\r\n    this.timeouts = [];\r\n  }\r\n\r\n  private filterTypes(files: File[], allowedFileTypes: string) {\r\n    if (allowedFileTypes === '') { return files; }\r\n\r\n    const allowedTypes = allowedFileTypes.split(',').map(type => type.toLocaleLowerCase());\r\n    const filtered = files.filter(file => {\r\n      const extIndex = file.name.lastIndexOf('.');\r\n      if (extIndex <= 0) { return false; }\r\n      const ext = file.name.substring(extIndex + 1).toLocaleLowerCase();\r\n      const allowed = allowedTypes.includes(ext);\r\n      return allowed;\r\n    });\r\n\r\n    if (files.length !== filtered.length) {\r\n      const allowedTypesString = this.allowedFileTypes().replace(/\\,/g, ', ');\r\n      const message = filtered.length\r\n        ? 'Some files were filtered out. This drop location only accepts file types: ' + allowedTypesString\r\n        : 'This drop location only accepts file types: ' + allowedTypesString;\r\n      this.snackBar.open(message, null, { duration: 5000 });\r\n    }\r\n    return filtered;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeHtml', standalone: true })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { classLog } from '../logging';\r\nimport { ServiceBase } from '../services/service-base';\r\n\r\nconst logSpecs = {\r\n  doOnDialogClosed: true,\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase {\r\n\r\n  log = classLog({ DialogRoutingService }, logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) { super(); }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  getParam(key: string): string {\r\n    return this.route.snapshot.paramMap.get(key);\r\n  }\r\n\r\n  getParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const paramMap = this.route.snapshot.paramMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = paramMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  getQueryParam(key: string): string {\r\n    return this.route.snapshot.queryParamMap.get(key);\r\n  }\r\n\r\n  getQueryParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const queryParamMap = this.route.snapshot.queryParamMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = queryParamMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe(() => callback())\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Get the URL for a sub-route of the current route.\r\n   */\r\n  public urlSubRoute(params: string) {\r\n    const tree = this.router.createUrlTree([params], { relativeTo: this.route });\r\n    const routeUrl = this.router.serializeUrl(tree);\r\n    return routeUrl;\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}