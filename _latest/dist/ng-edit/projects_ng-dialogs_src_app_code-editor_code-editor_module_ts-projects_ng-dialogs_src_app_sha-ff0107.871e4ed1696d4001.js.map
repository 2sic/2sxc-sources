{"version":3,"mappings":"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","names":["webApiTypeRoot","ContentTypesService","http","context","dnnContext","this","name","$2sxc","apiUrl","staticName","get","params","appId","toString","contentTypeId","scope","pipe","map","Object","keys","scopes","key","value","contentType","post","appid","delete","StaticName","files","T","formData","FormData","f","append","file","L","zoneId","sourceStaticName","N","i0","factory","ctx_r5","CodeAndEditionWarningsComponent","snackRef","snackBarData","k","openCodeBehind","dismissWithAction","p","MAT_SNACK_BAR_DATA","selectors","Explorers","Templates","Snippets","SnippetsService","translate","view","relevant","n","filterAwayNotNeededSnippetsList","res","snippets","standardAndInputSnips","extractInputTypeSnippets","sets","initSnippetsWithConfig","standardArray","inputTypeSnippets","list","c","keyPrefixes","keyPrefixIndex","v","Type","indexOf","newList","l","itm","setHasPrefix","set","substr","push","_","s","inputTypeArray","r","catalogInputTypeSnippets","inputTypeList","a","undefined","subset","templateConfiguration","makeTree","Content","assign","Fields","PresentationFields","TypeContent","loadContentType","TypeContentPresentation","HasList","List","TypeList","TypeListPresentation","HasApp","App","Resources","Settings","tree","o","reformatted","label","snip","content","help","links","linksList","getHelpKey","result","instant","addition","linksString","llist","split","pair","length","link","trim","url","target","type","prefix","getFields","AppId","subscribe","fields","field","fieldname","valuePlaceholder","Metadata","merged","Notes","toLowerCase","snipDefaults","cloneDeep","attachSnippets","InputType","U","std","i","obj","val","replace","webApiFieldsAll","filter","DataTypeConstants","fld","md","typeMd","inputMd","All","m","inputType","genericSnippet","fieldType","typeSnips","concat","more","fieldSnips","g","localizeGenericSnippet","collapse","objName","fieldName","appSharedRoot","templates","t","template","parent","paths","Path","last","pathFromRoot","path","existing","find","item","children","depth","isShared","Shared","isFolder","SortItemsPipe","items","sort","item1","item2","pure","DepthPaddingPipe","sanitizer","bypassSecurityTrustStyle","ctx_r8","ctx_r17","ctx_r20","CodeTemplatesComponent","EventEmitter","changes","calculateTree","calculateTreeAppShared","previousView","_a","previousValue","toggleItem","FileName","IsShared","showFileInTree","toggledItemsShared","toggledItemsApp","includes","openView","emit","shared","GeneralHelpers","folder","createTemplate","toggledItems","ctx","ObjectToArrayPipe","Array","isArray","values","ctx_r11","ctx_r24","ctx_r26","ctx_r28","ctx_r30","ctx_r32","ctx_r36","CodeSnippetsComponent","snippet","insertSnippet","toggledSections","toggledFolders","toggledInfos","toggledMores","ctx_r10","ctx_r12","ctx_r14","ctx_r18","ctx_r22","ctx_r23","ctx_r25","routes","component","CodeEditorComponent","route","snackBar","sourceService","snippetsService","zone","titleService","dialog","viewContainerRef","theme","tabSize","init","codeItems","JSON","parse","sessionStorage","getItem","keyItems","keyIsShared","forEach","codeItem","startsWith","substring","O","y","urlItems","subscription","Subscription","templates$","BehaviorSubject","initialViews","EntityId","_b","activeView$","openViews$","viewInfos$","attachListeners","getAll","next","add","combineLatest","viewInfos","notLoaded","some","viewKey","forkJoin","newViewInfo","view$","share","snippets$","mergeMap","getSnippets","of","viewInfos1","results","selectedIndex","findIndex","explorerSnipps","editorSnipps","savedCode","Code","slice","x","showCodeAndEditionWarnings","activeView","active","defaultTitle","newTitle","getTitle","setTitle","templateVars$","tabs","viewInfo","b","S","isActive","isModified","_c","isLoading","activeViewInfo","complete","unsubscribe","explorer","activeExplorer","createFileDialogData","global","purpose","open","CreateFileDialogComponent","autoFocus","data","width","afterClosed","create","templateKey","FileLocationDialogComponent","monacoEditorRef","code","selectedViewInfo","oldOpenViews","newOpenViews","oldActiveView","newActiveView","codeToSave","save","newViewInfos","duration","error","pathAndName","pathSeparator","lastIndexOf","pathWithSlash","fullName","nameCode","Extension","codeFile","otherEditions","endsWith","fileName","edition","B","Edition","snackBarRef","openFromComponent","onAction","containerInstance","snackBarConfig","runOutsideAngular","fromEvent","window","event","preventDefault","returnValue","keyCode","navigator","platform","match","metaKey","ctrlKey","run","MonacoEditorComponent","CodeEditorRoutingModule","Z","RouterModule","TranslateLoaderWithErrorHandling","sxcVersion","CodeEditorModule","Context","SourceService","TranslateService","imports","SharedComponentsModule","CommonModule","MatDialogModule","MatButtonModule","MatIconModule","MatSnackBarModule","MatRippleModule","TranslateModule","buildTranslateConfiguration","translateLoaderFactoryCode","MonacoEditorModule","MatProgressSpinnerModule","CreateFileDialogModule","webApiFieldsRoot","ContentTypesFieldsService","inputConfigs","dataType","config","Label","description","Description","isDefault","IsDefault","isObsolete","IsObsolete","isRecommended","IsRecommended","obsoleteMessage","ObsoleteMessage","icon","contentTypeStaticName","W","idArray","Id","order","stringify","attributeId","fieldId","newName","IsTitle","Error","newField","ContentTypeId","Index","SortOrder","id","h","FieldHintComponent","isShort","C"],"sources":["./projects/ng-dialogs/src/app/app-administration/services/content-types.service.ts","./projects/ng-dialogs/src/app/code-editor/code-and-edition-warnings/code-and-edition-warnings.component.html","./projects/ng-dialogs/src/app/code-editor/code-and-edition-warnings/code-and-edition-warnings.component.ts","./projects/ng-dialogs/src/app/code-editor/code-editor.models.ts","./projects/ng-dialogs/src/app/code-editor/services/snippets.service.ts","./projects/ng-dialogs/src/app/code-editor/code-templates/code-templates.models.ts","./projects/ng-dialogs/src/app/code-editor/code-templates/code-templates.helpers.ts","./projects/ng-dialogs/src/app/code-editor/code-templates/order-items.pipe.ts","./projects/ng-dialogs/src/app/code-editor/code-templates/depth-padding.pipe.ts","./projects/ng-dialogs/src/app/code-editor/code-templates/code-templates.component.html","./projects/ng-dialogs/src/app/code-editor/code-templates/code-templates.component.ts","./projects/ng-dialogs/src/app/code-editor/code-snippets/object-to-array.pipe.ts","./projects/ng-dialogs/src/app/code-editor/code-snippets/code-snippets.component.html","./projects/ng-dialogs/src/app/code-editor/code-snippets/code-snippets.component.ts","./projects/ng-dialogs/src/app/code-editor/code-editor.component.html","./projects/ng-dialogs/src/app/code-editor/code-editor.component.ts","./projects/ng-dialogs/src/app/code-editor/code-editor-routing.module.ts","./projects/ng-dialogs/src/app/code-editor/code-editor.module.ts","./projects/ng-dialogs/src/app/content-type-fields/services/content-types-fields.service.ts","./projects/ng-dialogs/src/app/shared/components/field-hint/field-hint.component.html","./projects/ng-dialogs/src/app/shared/components/field-hint/field-hint.component.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { ImportAppResult } from '../../import-app/models/import-app-result.model';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\n\r\nexport const webApiTypeRoot = 'admin/type/';\r\n\r\n@Injectable()\r\nexport class ContentTypesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get<ContentType>(this.apiUrl(webApiTypeRoot + 'get'), {\r\n      params: { appId: this.context.appId.toString(), contentTypeId: staticName }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get<ContentType[]>(this.apiUrl(webApiTypeRoot + 'list'), {\r\n      params: { appId: this.context.appId.toString(), scope }\r\n    });\r\n  }\r\n\r\n  getScopes() {\r\n    return this.http.get<Record<string, string>>(this.apiUrl(webApiTypeRoot + 'scopes'), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopes => {\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeRoot + 'save'), contentType, {\r\n      params: { appid: this.context.appId.toString() },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeRoot + 'delete'), {\r\n      params: { appid: this.context.appId.toString(), staticName: contentType.StaticName },\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<ImportAppResult>(this.apiUrl(webApiTypeRoot + 'import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeRoot + 'addghost'), null, {\r\n      params: { appid: this.context.appId.toString(), sourceStaticName },\r\n    });\r\n  }\r\n}\r\n","<div class=\"messages\">\r\n  <ng-container *ngIf=\"snackBarData.codeFile\">\r\n    <div>\"{{ snackBarData.fileName }}\" also has a code-behind file \"{{ snackBarData.codeFile }}\".</div>\r\n    <br>\r\n  </ng-container>\r\n\r\n  <div *ngIf=\"snackBarData.otherEditions\">\r\n    <ng-container *ngIf=\"snackBarData.edition\">\r\n      You are editing \"{{ snackBarData.edition }}\" edition.\r\n    </ng-container>\r\n    There are {{ snackBarData.otherEditions }} other editions of \"{{ snackBarData.fileName }}\".\r\n    <ng-container *ngIf=\"!snackBarData.edition\">\r\n      You may be editing an edition which is not the one you see.\r\n    </ng-container>\r\n    See <a href=\"http://r.2sxc.org/polymorphism\" target=\"_blank\">docs</a>.\r\n  </div>\r\n</div>\r\n\r\n<div class=\"actions\">\r\n  <button mat-button color=\"primary\" *ngIf=\"snackBarData.codeFile\" (click)=\"openCodeBehind()\">\r\n    Open code-behind file\r\n  </button>\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\nimport { CodeAndEditionWarningsSnackBarData } from './code-and-edition-warnings.models';\r\n\r\n@Component({\r\n  selector: 'app-code-and-edition-warnings',\r\n  templateUrl: './code-and-edition-warnings.component.html',\r\n  styleUrls: ['./code-and-edition-warnings.component.scss'],\r\n})\r\nexport class CodeAndEditionWarningsComponent {\r\n  constructor(\r\n    private snackRef: MatSnackBarRef<CodeAndEditionWarningsComponent>,\r\n    @Inject(MAT_SNACK_BAR_DATA) public snackBarData: CodeAndEditionWarningsSnackBarData,\r\n  ) { }\r\n\r\n  openCodeBehind(): void {\r\n    this.snackBarData.openCodeBehind = true;\r\n    this.snackRef.dismissWithAction();\r\n  }\r\n}\r\n","import { FileAsset } from './models/file-asset.model';\r\nimport { Snippet, SnippetsSets } from './models/snippet.model';\r\nimport { SourceView } from './models/source-view.model';\r\n\r\nexport interface Tab {\r\n  viewKey: ViewKey;\r\n  label: string;\r\n  isActive: boolean;\r\n  isModified: boolean;\r\n  isLoading: boolean;\r\n}\r\n\r\nexport interface CodeEditorTemplateVars {\r\n  activeView: ViewKey;\r\n  tabs: Tab[];\r\n  viewKey: ViewKey;\r\n  view?: SourceView;\r\n  templates: FileAsset[];\r\n  explorerSnipps: SnippetsSets;\r\n  editorSnipps: Snippet[];\r\n}\r\n\r\nexport const Explorers = {\r\n  Templates: 'Templates',\r\n  Snippets: 'Snippets',\r\n} as const;\r\n\r\nexport type ExplorerOption = typeof Explorers[keyof typeof Explorers];\r\n\r\nexport interface ViewInfo {\r\n  viewKey: ViewKey;\r\n  view?: SourceView;\r\n  explorerSnipps?: SnippetsSets;\r\n  editorSnipps?: Snippet[];\r\n  savedCode?: string;\r\n}\r\n\r\nexport interface ViewKey {\r\n  /** ViewKey is templateId or path */\r\n  key: string;\r\n  shared: boolean;\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { DataTypeConstants } from '../../content-type-fields/constants/data-type.constants';\r\nimport { Field } from '../../content-type-fields/models/field.model';\r\nimport { webApiFieldsAll } from '../../content-type-fields/services/content-types-fields.service';\r\nimport { MoreSnippet, SetSnippet, SetSnippetLink, Snippet, SnippetsSets, SnippetsSubSubSets } from '../models/snippet.model';\r\nimport { SourceView } from '../models/source-view.model';\r\n\r\n@Injectable()\r\nexport class SnippetsService {\r\n\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext, private translate: TranslateService) { }\r\n\r\n  getSnippets(view: SourceView): Observable<{ list: Snippet[]; sets: SnippetsSets; }> {\r\n    return this.http.get<{ snippets: Snippet[] }>('../ng-assets/snippets.json.js').pipe(\r\n      map(res => {\r\n        const relevant = this.filterAwayNotNeededSnippetsList(res.snippets, view);\r\n        const standardAndInputSnips = this.extractInputTypeSnippets(relevant);\r\n        const sets = this.initSnippetsWithConfig(standardAndInputSnips.standardArray, view, standardAndInputSnips.inputTypeSnippets);\r\n        const sorted: { list: Snippet[]; sets: SnippetsSets; } = {\r\n          list: standardAndInputSnips.standardArray,\r\n          sets\r\n        };\r\n        return sorted;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** Scan the list for sets starting with @ or [ and filter if not needed right now */\r\n  private filterAwayNotNeededSnippetsList(list: Snippet[], view: SourceView): Snippet[] {\r\n    const keyPrefixes = ['@', '['];\r\n    const keyPrefixIndex = (v: SourceView) => (v.Type.indexOf('Razor') > -1) ? 0 : 1;\r\n\r\n    const newList: Snippet[] = [];\r\n    for (const itm of list) {\r\n      const setHasPrefix = keyPrefixes.indexOf(itm.set[0]);\r\n      if (setHasPrefix === -1 || (setHasPrefix === keyPrefixIndex(view))) {\r\n        // if necessary, remove first char\r\n        if (setHasPrefix === keyPrefixIndex(view)) {\r\n          itm.set = itm.set.substr(1);\r\n        }\r\n        newList.push(itm);\r\n      }\r\n    }\r\n    return newList;\r\n  }\r\n\r\n  private extractInputTypeSnippets(list: Snippet[]): { standardArray: Snippet[]; inputTypeSnippets: Record<string, Snippet[]>; } {\r\n    const standardArray: Snippet[] = [];\r\n    const inputTypeArray: Snippet[] = [];\r\n\r\n    for (const itm of list) {\r\n      const systemSnippet = itm.set[0] === '\\\\';\r\n      if (!systemSnippet) {\r\n        standardArray.push(itm);\r\n      } else {\r\n        itm.set = itm.set.substr(1);\r\n        inputTypeArray.push(itm);\r\n      }\r\n    }\r\n    const inputTypeSnippets = this.catalogInputTypeSnippets(inputTypeArray);\r\n    const extracted: { standardArray: Snippet[]; inputTypeSnippets: Record<string, Snippet[]>; } = {\r\n      standardArray,\r\n      inputTypeSnippets,\r\n    };\r\n    return extracted;\r\n  }\r\n\r\n  private catalogInputTypeSnippets(list: Snippet[]): Record<string, Snippet[]> {\r\n    const inputTypeList: Record<string, Snippet[]> = {};\r\n    for (const itm of list) {\r\n      if (inputTypeList[itm.subset] === undefined) {\r\n        inputTypeList[itm.subset] = [];\r\n      }\r\n      inputTypeList[itm.subset].push(itm);\r\n    }\r\n    return inputTypeList;\r\n  }\r\n\r\n  private initSnippetsWithConfig(\r\n    standardArray: Snippet[],\r\n    templateConfiguration: SourceView,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): SnippetsSets {\r\n    const sets = this.makeTree(standardArray);\r\n\r\n    // retrieve all relevant content-types and infos\r\n    sets.Content = Object.assign({}, sets.Content, { Fields: {}, PresentationFields: {} });\r\n    if (templateConfiguration.TypeContent) {\r\n      this.loadContentType(\r\n        sets.Content.Fields as SnippetsSubSubSets,\r\n        templateConfiguration.TypeContent,\r\n        'Content',\r\n        templateConfiguration,\r\n        inputTypeSnippets,\r\n      );\r\n    }\r\n    if (templateConfiguration.TypeContentPresentation) {\r\n      this.loadContentType(\r\n        sets.Content.PresentationFields as SnippetsSubSubSets,\r\n        templateConfiguration.TypeContentPresentation,\r\n        'Content.Presentation',\r\n        templateConfiguration,\r\n        inputTypeSnippets,\r\n      );\r\n    }\r\n\r\n    if (templateConfiguration.HasList) {\r\n      sets.List = Object.assign({}, sets.List, { Fields: {}, PresentationFields: {} });\r\n      if (templateConfiguration.TypeList) {\r\n        this.loadContentType(\r\n          sets.List.Fields as SnippetsSubSubSets,\r\n          templateConfiguration.TypeList,\r\n          'Header',\r\n          templateConfiguration,\r\n          inputTypeSnippets,\r\n        );\r\n      }\r\n      if (templateConfiguration.TypeListPresentation) {\r\n        this.loadContentType(\r\n          sets.List.PresentationFields as SnippetsSubSubSets,\r\n          templateConfiguration.TypeListPresentation,\r\n          'Header.Presentation',\r\n          templateConfiguration,\r\n          inputTypeSnippets,\r\n        );\r\n      }\r\n    } else {\r\n      delete sets.List;\r\n    }\r\n\r\n    // maybe App-infos\r\n    if (templateConfiguration.HasApp) {\r\n      sets.App.Resources = {};\r\n      sets.App.Settings = {};\r\n      this.loadContentType(sets.App.Resources, 'App-Resources', 'App.Resources', templateConfiguration, inputTypeSnippets);\r\n      this.loadContentType(sets.App.Settings, 'App-Settings', 'App.Settings', templateConfiguration, inputTypeSnippets);\r\n    }\r\n\r\n    return sets;\r\n  }\r\n\r\n  /** Convert the list into a tree with set/subset/item */\r\n  private makeTree(list: Snippet[]): SnippetsSets {\r\n    const tree: SnippetsSets = {};\r\n    for (const o of list) {\r\n      if (tree[o.set] === undefined) {\r\n        tree[o.set] = {};\r\n      }\r\n      if (tree[o.set][o.subset] === undefined) {\r\n        tree[o.set][o.subset] = [];\r\n      }\r\n      const reformatted: SetSnippet = {\r\n        key: o.name,\r\n        label: this.label(o.set, o.subset, o.name),\r\n        snip: o.content,\r\n        help: o.help || this.help(o.set, o.subset, o.name),\r\n        links: this.linksList(o.links)\r\n      };\r\n\r\n      (tree[o.set][o.subset] as SetSnippet[]).push(reformatted);\r\n    }\r\n    return tree;\r\n  }\r\n\r\n  private label(set: string, subset: string, snip: string): string {\r\n    const key = this.getHelpKey(set, subset, snip, '.Key');\r\n\r\n    let result: string = this.translate.instant(key);\r\n    if (result === key) {\r\n      result = snip;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private getHelpKey(set: string, subset: string, snip: string, addition: string): string {\r\n    return 'SourceEditorSnippets' + '.' + set + '.' + subset + '.' + snip + addition;\r\n  }\r\n\r\n  private help(set: string, subset: string, snip: string): string {\r\n    const key = this.getHelpKey(set, subset, snip, '.Help');\r\n\r\n    let result: string = this.translate.instant(key);\r\n    if (result === key) {\r\n      result = '';\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private linksList(linksString: string): SetSnippetLink[] {\r\n    if (!linksString) { return null; }\r\n\r\n    const links: SetSnippetLink[] = [];\r\n    const llist = linksString.split('\\n');\r\n    for (const l of llist) {\r\n      const pair = l.split(':');\r\n      if (pair.length === 3) {\r\n        const link: SetSnippetLink = {\r\n          name: pair[0].trim(),\r\n          url: pair[1].trim() + ':' + pair[2].trim(),\r\n        };\r\n        links.push(link);\r\n      }\r\n    }\r\n    if (links.length === 0) { return null; }\r\n    return links;\r\n  }\r\n\r\n  /** spm TODO: this happens after snippets are calculated for the first time. Needs to be fixed */\r\n  private loadContentType(\r\n    target: SnippetsSubSubSets,\r\n    type: string,\r\n    prefix: string,\r\n    templateConfiguration: SourceView,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): void {\r\n    this.getFields(templateConfiguration.AppId, type).subscribe(fields => {\r\n      // first add common items if the content-type actually exists\r\n      for (const field of fields) {\r\n        const fieldname = field.StaticName;\r\n        target[fieldname] = {\r\n          key: fieldname,\r\n          label: fieldname,\r\n          snip: this.valuePlaceholder(prefix, fieldname, templateConfiguration),\r\n          help: field.Metadata.merged.Notes || ' (' + field.Type.toLowerCase() + ') '\r\n        };\r\n        // try to add generic snippets specific to this input-type\r\n        const snipDefaults = cloneDeep(target[fieldname]); // must be a copy, because target[fieldname] will grow\r\n        this.attachSnippets(target, prefix, fieldname, field.InputType, snipDefaults, inputTypeSnippets);\r\n      }\r\n\r\n      if (fields.length) {\r\n        const std = ['EntityId', 'EntityTitle', 'EntityGuid', 'EntityType', 'IsPublished', 'Modified'];\r\n        // tslint:disable-next-line:prefer-for-of\r\n        for (let i = 0; i < std.length; i++) {\r\n          target[std[i]] = {\r\n            key: std[i],\r\n            label: std[i],\r\n            snip: this.valuePlaceholder(prefix, std[i], templateConfiguration),\r\n            help: this.translate.instant('SourceEditorSnippets.StandardFields.' + std[i] + '.Help'),\r\n          };\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private valuePlaceholder(obj: string, val: string, templateConfiguration: SourceView): string {\r\n    return (templateConfiguration.Type.indexOf('Razor') > -1)\r\n      ? '@' + obj + '.' + val\r\n      : '[' + obj.replace('.', ':') + ':' + val + ']';\r\n  }\r\n\r\n  private getFields(appId: number, staticName: string): Observable<Field[]> {\r\n    return this.http.get<Field[]>(this.dnnContext.$2sxc.http.apiUrl(webApiFieldsAll), {\r\n      params: { appid: appId.toString(), staticName },\r\n    }).pipe(\r\n      map(fields => {\r\n        fields = fields.filter(field => field.Type !== DataTypeConstants.Empty);\r\n        for (const fld of fields) {\r\n          if (!fld.Metadata) { continue; }\r\n          const md = fld.Metadata;\r\n          const allMd = md.All;\r\n          const typeMd = md[fld.Type];\r\n          const inputMd = md[fld.InputType];\r\n          md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n        }\r\n        return fields;\r\n      }),\r\n    );\r\n  }\r\n\r\n  private attachSnippets(\r\n    target: SnippetsSubSubSets,\r\n    prefix: string,\r\n    fieldname: string,\r\n    inputType: string,\r\n    snipDefaults: SetSnippet,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): void {\r\n    let genericSnippet = inputTypeSnippets[inputType];\r\n    if (inputType.indexOf('-')) { // if it's a sub-type, let's also get the master-type\r\n      const fieldType = inputType.substr(0, inputType.indexOf('-'));\r\n      if (fieldType) {\r\n        const typeSnips = inputTypeSnippets[fieldType];\r\n        if (typeSnips) {\r\n          genericSnippet = genericSnippet ? genericSnippet.concat(typeSnips) : typeSnips;\r\n        }\r\n      }\r\n    }\r\n    if (!genericSnippet) { return; }\r\n\r\n    if (target[fieldname].more === undefined) {\r\n      target[fieldname].more = {};\r\n    }\r\n    const fieldSnips = target[fieldname].more;\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let g = 0; g < genericSnippet.length; g++) {\r\n      try {\r\n        fieldSnips[fieldname + '-' + genericSnippet[g].name] = Object.assign({}, snipDefaults, {\r\n          key: fieldname + ' - ' + genericSnippet[g].name,\r\n          label: genericSnippet[g].name,\r\n          snip: this.localizeGenericSnippet(genericSnippet[g].content, prefix, fieldname),\r\n          collapse: true,\r\n        } as MoreSnippet);\r\n      } finally { }\r\n    }\r\n  }\r\n\r\n  private localizeGenericSnippet(snip: string, objName: string, fieldName: string): string {\r\n    snip = snip\r\n      .replace(/(\\$\\{[0-9]+\\:)var(\\})/gi, '$1' + objName + '$2')\r\n      .replace(/(\\$\\{[0-9]+\\:)prop(\\})/gi, '$1' + fieldName + '$2');\r\n    return snip;\r\n  }\r\n}\r\n","export const appSharedRoot = '' as const;\r\n\r\nexport interface CreateTemplateParams {\r\n  folder?: string;\r\n  isShared?: boolean;\r\n}\r\n","import { FileAsset } from '../models/file-asset.model';\r\nimport { TreeItem } from '../models/tree-item.model';\r\nimport { appSharedRoot } from './code-templates.models';\r\n\r\nexport function calculateTreeAppShared(templates: FileAsset[]): TreeItem[] {\r\n  const tree: TreeItem[] = [\r\n    {\r\n      depth: -1,\r\n      name: 'App Files',\r\n      pathFromRoot: appSharedRoot,\r\n      isShared: false,\r\n      isFolder: true,\r\n      children: calculateTree(templates.filter(f => !f.Shared)),\r\n    },\r\n    {\r\n      depth: -1,\r\n      name: 'Shared App Files',\r\n      pathFromRoot: appSharedRoot,\r\n      isShared: true,\r\n      isFolder: true,\r\n      children: calculateTree(templates.filter(f => f.Shared)),\r\n    },\r\n  ];\r\n  return tree;\r\n}\r\n\r\nfunction calculateTree(templates: FileAsset[]): TreeItem[] {\r\n  if (!templates) { return []; }\r\n\r\n  const tree: TreeItem[] = [];\r\n  for (const template of templates) {\r\n    let parent: TreeItem[] = tree;\r\n    const paths = template.Path.split('/');\r\n    const last = paths[paths.length - 1];\r\n    let pathFromRoot = '';\r\n    for (let i = 0; i < paths.length; i++) {\r\n      const path = paths[i];\r\n      pathFromRoot += i ? `/${path}` : path;\r\n      const existing = parent.find(item => item.name === path);\r\n      if (existing) {\r\n        parent = existing.children;\r\n      } else {\r\n        const item: TreeItem = {\r\n          depth: i,\r\n          name: path,\r\n          pathFromRoot,\r\n          isShared: template.Shared,\r\n          isFolder: path !== last,\r\n          ...(path !== last && { children: [] }),\r\n        };\r\n        parent.push(item);\r\n        parent = item.children;\r\n      }\r\n    }\r\n  }\r\n\r\n  return tree;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TreeItem } from '../models/tree-item.model';\r\n\r\n/** Sorts folders before files */\r\n@Pipe({ name: 'sortItems' })\r\nexport class SortItemsPipe implements PipeTransform {\r\n\r\n  transform(items: TreeItem[]) {\r\n    if (items == null) { return items; }\r\n\r\n    items.sort((item1, item2) => {\r\n      if (item1.isFolder < item2.isFolder) {\r\n        return 1;\r\n      } else if (item1.isFolder > item2.isFolder) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    return items;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'depthPadding' })\r\nexport class DepthPaddingPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(depth: number, isFolder: boolean): SafeStyle {\r\n    let padding: number;\r\n    if (isFolder) {\r\n      padding = depth * 8;\r\n    } else {\r\n      padding = (depth === 0) ? 8 : (depth * 8 + 16);\r\n    }\r\n    return this.sanitizer.bypassSecurityTrustStyle(`padding-left: ${padding}px;`);\r\n  }\r\n}\r\n","<div class=\"editor-active-explorer fancy-scrollbar-dark explorer-wrapper\">\r\n\r\n  <div>\r\n    <ng-container *ngFor=\"let item of (tree | sortItems)\">\r\n      <ng-container *ngTemplateOutlet=\"fileOrFolder; context: {item: item}\"></ng-container>\r\n    </ng-container>\r\n\r\n    <ng-template #fileOrFolder let-item=\"item\">\r\n\r\n      <div class=\"file\" *ngIf=\"!item.isFolder\" [style]=\"item.depth | depthPadding: item.isFolder\"\r\n        [ngClass]=\"{'active': isToggled(item.pathFromRoot, item.isShared) }\" [tippy]=\"item.name\" tippyShowDelay=\"750\"\r\n        (click)=\"openTemplate(item.pathFromRoot, item.isShared)\">\r\n        {{ item.name }}\r\n      </div>\r\n\r\n      <div *ngIf=\"item.isFolder\">\r\n        <div class=\"folder-name-wrapper\" [ngClass]=\"{'app-shared-root': item.depth < 0}\"\r\n          [style]=\"item.depth + 1 | depthPadding: item.isFolder\" (click)=\"toggleItem(item.pathFromRoot, item.isShared)\">\r\n          <div class=\"folder-name\" [tippy]=\"item.name\" tippyShowDelay=\"750\">\r\n            <mat-icon>\r\n              {{ isToggled(item.pathFromRoot, item.isShared) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n            </mat-icon>\r\n            <span>{{ item.name }}</span>\r\n          </div>\r\n          <div class=\"add-item\" tippy=\"Create file in this folder\" tippyShowDelay=\"750\" appClickStopPropagation\r\n            (click)=\"addFile(item.pathFromRoot, item.isShared)\">\r\n            <mat-icon>add</mat-icon>\r\n          </div>\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"isToggled(item.pathFromRoot, item.isShared)\">\r\n          <ng-container *ngFor=\"let item1 of (item.children | sortItems)\">\r\n            <ng-container *ngTemplateOutlet=\"fileOrFolder; context: {item: item1}\"></ng-container>\r\n          </ng-container>\r\n        </ng-container>\r\n      </div>\r\n\r\n    </ng-template>\r\n  </div>\r\n\r\n  <div class=\"create-button-wrapper\">\r\n    <button mat-icon-button tippy=\"Create file\" (click)=\"addFile()\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\r\nimport { GeneralHelpers } from '../../../../../edit/shared/helpers';\r\nimport { ViewKey } from '../code-editor.models';\r\nimport { FileAsset } from '../models/file-asset.model';\r\nimport { SourceView } from '../models/source-view.model';\r\nimport { TreeItem } from '../models/tree-item.model';\r\nimport { calculateTreeAppShared } from './code-templates.helpers';\r\nimport { appSharedRoot, CreateTemplateParams } from './code-templates.models';\r\n\r\n@Component({\r\n  selector: 'app-code-templates',\r\n  templateUrl: './code-templates.component.html',\r\n  styleUrls: ['./code-templates.component.scss'],\r\n})\r\nexport class CodeTemplatesComponent implements OnChanges {\r\n  @Input() view?: SourceView;\r\n  @Input() templates: FileAsset[];\r\n  @Output() openView: EventEmitter<ViewKey> = new EventEmitter();\r\n  @Output() createTemplate: EventEmitter<CreateTemplateParams> = new EventEmitter();\r\n  tree: TreeItem[];\r\n  toggledItemsApp: string[] = [];\r\n  toggledItemsShared: string[] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.templates != null) {\r\n      this.tree = calculateTreeAppShared(this.templates);\r\n    }\r\n    if (changes.view != null) {\r\n      const previousView: SourceView = changes.view?.previousValue;\r\n      if (previousView) {\r\n        this.toggleItem(previousView.FileName, previousView.IsShared);\r\n      }\r\n      if (this.view) {\r\n        this.showFileInTree(this.view.FileName, this.view.IsShared);\r\n      }\r\n    }\r\n  }\r\n\r\n  isToggled(path: string, isShared: boolean): boolean {\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    return toggledItems.includes(path);\r\n  }\r\n\r\n  openTemplate(path: string, isShared: boolean): void {\r\n    const viewKey: ViewKey = { key: path, shared: isShared };\r\n    this.openView.emit(viewKey);\r\n  }\r\n\r\n  toggleItem(path: string, isShared: boolean): void {\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    GeneralHelpers.toggleInArray(path, toggledItems);\r\n  }\r\n\r\n  addFile(folder?: string, isShared?: boolean): void {\r\n    const params: CreateTemplateParams = { folder, isShared };\r\n    this.createTemplate.emit(params);\r\n  }\r\n\r\n  private showFileInTree(file: string, isShared: boolean): void {\r\n    if (file == null) { return; }\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    if (toggledItems.includes(file)) { return; }\r\n\r\n    const paths = [appSharedRoot, ...file.split('/')];\r\n    let pathFromRoot = '';\r\n    for (const path of paths) {\r\n      pathFromRoot = !pathFromRoot ? path : `${pathFromRoot}/${path}`;\r\n      if (toggledItems.includes(pathFromRoot)) { continue; }\r\n      this.toggleItem(pathFromRoot, isShared);\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'objectToArray' })\r\nexport class ObjectToArrayPipe implements PipeTransform {\r\n  transform(obj: Record<string, any> | Record<string, any>[]): Record<string, any>[] {\r\n    if (obj == null) { return; }\r\n\r\n    if (Array.isArray(obj)) { return obj; }\r\n\r\n    return Object.values(obj);\r\n  }\r\n}\r\n","<div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n  <div *ngFor=\"let section of snippets | keyvalue\">\r\n\r\n    <div class=\"collapsible-header section\" [tippy]=\"'SourceEditorSnippets.' + section.key + '.Help' | translate\"\r\n      tippyShowDelay=\"750\" (click)=\"toggleSection(section.key)\">\r\n      <mat-icon>\r\n        {{ toggledSections.includes(section.key) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n      </mat-icon>\r\n      <span>{{ 'SourceEditorSnippets.' + section.key + '.Title' | translate }}</span>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"toggledSections.includes(section.key)\">\r\n      <div *ngFor=\"let folder of section.value | keyvalue\">\r\n\r\n        <div class=\"collapsible-header folder\"\r\n          [tippy]=\"'SourceEditorSnippets.' + section.key + '.' + folder.key + '.Help' | translate\" tippyShowDelay=\"750\"\r\n          (click)=\"toggleFolder(folder.key)\">\r\n          <mat-icon>\r\n            {{ toggledFolders.includes(folder.key) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n          </mat-icon>\r\n          <span>{{ 'SourceEditorSnippets.' + section.key + '.' + folder.key + '.Title' | translate }}</span>\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"toggledFolders.includes(folder.key)\">\r\n          <div class=\"snippet\" *ngFor=\"let snippet of (folder.value | objectToArray)\">\r\n\r\n            <div class=\"snippet-label\">\r\n              <div matRipple class=\"text\" [tippy]=\"snippet.snip\" tippyShowDelay=\"750\"\r\n                (click)=\"addSnippet(snippet.snip)\">\r\n                {{ snippet.label }}\r\n              </div>\r\n              <mat-icon *ngIf=\"snippet.more\" tippy=\"Show More\" tippyShowDelay=\"750\" (click)=\"toggleMore(snippet.key)\">\r\n                {{ toggledMores.includes(snippet.key) ? 'more_vert' : 'more_horiz' }}\r\n              </mat-icon>\r\n              <mat-icon tippy=\"Show Help\" tippyShowDelay=\"750\" appClickStopPropagation\r\n                (click)=\"toggleInfo(snippet.key)\">\r\n                info\r\n              </mat-icon>\r\n            </div>\r\n\r\n            <div class=\"snippet-help\" *ngIf=\"toggledInfos.includes(snippet.key)\">\r\n              <div class=\"text\" [innerHTML]=\"snippet.help | safeHtml\"></div>\r\n              <div *ngFor=\"let link of snippet.links\">\r\n                <a [href]=\"link.url\" target=\"_blank\">{{ link.name }}</a>\r\n              </div>\r\n            </div>\r\n\r\n            <ng-container *ngIf=\"toggledMores.includes(snippet.key)\">\r\n              <div *ngFor=\"let more of (snippet.more | objectToArray)\">\r\n\r\n                <div class=\"snippet-label\">\r\n                  <div matRipple class=\"text text-more\" [tippy]=\"more.snip\" tippyShowDelay=\"750\"\r\n                    (click)=\"addSnippet(more.snip)\">\r\n                    {{ more.label }}\r\n                  </div>\r\n                  <mat-icon tippy=\"Show Help\" tippyShowDelay=\"750\" appClickStopPropagation\r\n                    (click)=\"toggleInfo(more.key)\">\r\n                    info\r\n                  </mat-icon>\r\n                </div>\r\n\r\n                <div class=\"snippet-help snippet-help-more\" *ngIf=\"toggledInfos.includes(more.key)\">\r\n                  <div class=\"text\" [innerHTML]=\"more.help | safeHtml\"></div>\r\n                  <div *ngFor=\"let link of more.links\">\r\n                    <a [href]=\"link.url\" target=\"_blank\">{{ link.name }}</a>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </ng-container>\r\n\r\n          </div>\r\n        </ng-container>\r\n\r\n      </div>\r\n    </ng-container>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { GeneralHelpers } from '../../../../../edit/shared/helpers';\r\nimport { SnippetsSets } from '../models/snippet.model';\r\n\r\n@Component({\r\n  selector: 'app-code-snippets',\r\n  templateUrl: './code-snippets.component.html',\r\n  styleUrls: ['./code-snippets.component.scss'],\r\n})\r\nexport class CodeSnippetsComponent {\r\n  @Input() snippets: SnippetsSets;\r\n  @Output() insertSnippet: EventEmitter<string> = new EventEmitter();\r\n  toggledSections: string[] = [];\r\n  toggledFolders: string[] = [];\r\n  toggledInfos: string[] = [];\r\n  toggledMores: string[] = [];\r\n\r\n  constructor() { }\r\n\r\n  addSnippet(snippet: string): void {\r\n    this.insertSnippet.emit(snippet);\r\n  }\r\n\r\n  toggleSection(key: string): void {\r\n    GeneralHelpers.toggleInArray(key, this.toggledSections);\r\n  }\r\n\r\n  toggleFolder(key: string): void {\r\n    GeneralHelpers.toggleInArray(key, this.toggledFolders);\r\n  }\r\n\r\n  toggleInfo(key: string): void {\r\n    GeneralHelpers.toggleInArray(key, this.toggledInfos);\r\n  }\r\n\r\n  toggleMore(key: string): void {\r\n    GeneralHelpers.toggleInArray(key, this.toggledMores);\r\n  }\r\n}\r\n","<div class=\"editor-root\" appToggleDebug [ngClass]=\"{ 'sxc-dark': monacoOptions.theme === '2sxc-dark' }\"\r\n  *ngIf=\"templateVars$ | async as data\">\r\n  <div class=\"editor-side-toolbar\">\r\n    <div class=\"button\" [ngClass]=\"{ 'active': activeExplorer === Explorers.Templates }\" tippy=\"Templates\"\r\n      (click)=\"toggleExplorer(Explorers.Templates)\">\r\n      <mat-icon>file_copy</mat-icon>\r\n    </div>\r\n    <div class=\"button\" [ngClass]=\"{ 'active': activeExplorer === Explorers.Snippets }\" tippy=\"Snippets\"\r\n      (click)=\"toggleExplorer(Explorers.Snippets)\">\r\n      <mat-icon>code</mat-icon>\r\n    </div>\r\n  </div>\r\n\r\n  <app-code-templates [hidden]=\"activeExplorer !== Explorers.Templates\" [view]=\"data.view\" [templates]=\"data.templates\"\r\n    (openView)=\"openView($event)\" (createTemplate)=\"createTemplate($event)\">\r\n  </app-code-templates>\r\n  <app-code-snippets [hidden]=\"activeExplorer !== Explorers.Snippets\" [snippets]=\"data.explorerSnipps\"\r\n    (insertSnippet)=\"insertSnippet($event)\">\r\n  </app-code-snippets>\r\n\r\n  <div class=\"editor-group\">\r\n    <div class=\"tabs-container fancy-scrollbar-dark\" *ngIf=\"data.tabs.length > 0\">\r\n      <div class=\"tab\" *ngFor=\"let tab of data.tabs\" [ngClass]=\"{\r\n        'active': tab.isActive,\r\n        'modified': tab.isModified,\r\n        'loading': tab.isLoading\r\n      }\" (click)=\"openView(tab.viewKey)\">\r\n        <div class=\"tab-label-container\" [tippy]=\"tab.label\" tippyShowDelay=\"750\">\r\n          <mat-icon class=\"icon-shared\" *ngIf=\"tab.viewKey.shared\">share</mat-icon>\r\n          <span class=\"tab-label\">{{ tab.label }}</span>\r\n        </div>\r\n        <div class=\"tab-actions-container\">\r\n          <mat-icon *ngIf=\"tab.isModified\" class=\"tab-action icon-modified\" svgIcon=\"circle\"></mat-icon>\r\n          <mat-spinner *ngIf=\"tab.isLoading\" class=\"spinner\" mode=\"indeterminate\" diameter=\"14\" color=\"white\">\r\n          </mat-spinner>\r\n          <mat-icon class=\"tab-action icon-close\" tippy=\"Close\" appClickStopPropagation\r\n            (click)=\"closeEditor(tab.viewKey)\">\r\n            close\r\n          </mat-icon>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <app-monaco-editor *ngIf=\"data.view\" [filename]=\"data.view.FileName\" [value]=\"data.view.Code\"\r\n      (valueChanged)=\"codeChanged($event, data.viewKey)\" [options]=\"monacoOptions\" [snippets]=\"data.editorSnipps\"\r\n      [autoFocus]=\"true\">\r\n    </app-monaco-editor>\r\n  </div>\r\n\r\n  <button mat-fab mat-elevation-z24 tippy=\"Click to save or CTRL + S\" *ngIf=\"data.activeView\" (click)=\"save()\">\r\n    <mat-icon>done</mat-icon>\r\n  </button>\r\n</div>\r\n","import { Component, NgZone, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, forkJoin, fromEvent, Observable, of, Subscription } from 'rxjs';\r\nimport { map, mergeMap, share } from 'rxjs/operators';\r\nimport { GeneralHelpers } from '../../../../edit/shared/helpers';\r\n// tslint:disable-next-line:max-line-length\r\nimport { CreateFileDialogComponent, CreateFileDialogData, CreateFileDialogResult, FileLocationDialogComponent } from '../create-file-dialog';\r\nimport { MonacoEditorComponent } from '../monaco-editor';\r\nimport { keyIsShared, keyItems } from '../shared/constants/session.constants';\r\nimport { SourceItem } from '../shared/models/edit-form.model';\r\nimport { Context } from '../shared/services/context';\r\nimport { CodeAndEditionWarningsComponent } from './code-and-edition-warnings/code-and-edition-warnings.component';\r\nimport { CodeAndEditionWarningsSnackBarData } from './code-and-edition-warnings/code-and-edition-warnings.models';\r\nimport { CodeEditorTemplateVars, ExplorerOption, Explorers, Tab, ViewInfo, ViewKey } from './code-editor.models';\r\nimport { CreateTemplateParams } from './code-templates/code-templates.models';\r\nimport { FileAsset } from './models/file-asset.model';\r\nimport { SourceView } from './models/source-view.model';\r\nimport { SnippetsService } from './services/snippets.service';\r\nimport { SourceService } from './services/source.service';\r\n\r\n@Component({\r\n  selector: 'app-code-editor',\r\n  templateUrl: './code-editor.component.html',\r\n  styleUrls: ['./code-editor.component.scss'],\r\n})\r\nexport class CodeEditorComponent implements OnInit, OnDestroy {\r\n  @ViewChild(MonacoEditorComponent) private monacoEditorRef: MonacoEditorComponent;\r\n\r\n  Explorers = Explorers;\r\n  activeExplorer: ExplorerOption = Explorers.Templates;\r\n  monacoOptions = {\r\n    theme: '2sxc-dark',\r\n    tabSize: 2,\r\n  };\r\n  templateVars$: Observable<CodeEditorTemplateVars>;\r\n\r\n  private templates$: BehaviorSubject<FileAsset[]>;\r\n  private activeView$: BehaviorSubject<ViewKey>;\r\n  private openViews$: BehaviorSubject<ViewKey[]>;\r\n  private viewInfos$: BehaviorSubject<ViewInfo[]>;\r\n  private subscription: Subscription;\r\n  private urlItems: SourceItem[];\r\n\r\n  constructor(\r\n    private context: Context,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n    private sourceService: SourceService,\r\n    private snippetsService: SnippetsService,\r\n    private zone: NgZone,\r\n    private titleService: Title,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) {\r\n    this.context.init(this.route);\r\n    const codeItems: SourceItem[] = JSON.parse(sessionStorage.getItem(keyItems));\r\n    const isShared = sessionStorage.getItem(keyIsShared) === 'true' ?? false;\r\n    codeItems.forEach(codeItem => {\r\n      // remove leading \"/\" from path\r\n      if (codeItem.Path.startsWith('/')) {\r\n        codeItem.Path = codeItem.Path.substring(1);\r\n      }\r\n      codeItem.IsShared ??= isShared;\r\n    });\r\n    this.urlItems = codeItems;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = new Subscription();\r\n    this.templates$ = new BehaviorSubject<FileAsset[]>([]);\r\n    const initialViews = this.urlItems.map(item => {\r\n      const viewKey: ViewKey = { key: item.EntityId?.toString() ?? item.Path, shared: item.IsShared };\r\n      return viewKey;\r\n    });\r\n    this.activeView$ = new BehaviorSubject<ViewKey>(initialViews[0]);\r\n    this.openViews$ = new BehaviorSubject<ViewKey[]>(initialViews);\r\n    this.viewInfos$ = new BehaviorSubject<ViewInfo[]>([]);\r\n\r\n    this.attachListeners();\r\n\r\n    this.sourceService.getAll().subscribe(templates => {\r\n      this.templates$.next(templates);\r\n    });\r\n\r\n    this.subscription.add(\r\n      combineLatest([this.templates$, this.openViews$]).subscribe(([templates, openViews]) => {\r\n        if (templates.length === 0) { return; }\r\n\r\n        let viewInfos = this.viewInfos$.value;\r\n        const notLoaded = openViews.filter(viewKey => !viewInfos.some(v => GeneralHelpers.objectsEqual(v.viewKey, viewKey)));\r\n        if (notLoaded.length === 0) { return; }\r\n\r\n        forkJoin(\r\n          notLoaded.map(viewKey => {\r\n            // set viewKey in viewInfos to mark that view is being fetched\r\n            const newViewInfo: ViewInfo = {\r\n              viewKey,\r\n            };\r\n            viewInfos = [...viewInfos, newViewInfo];\r\n\r\n            const view$ = this.sourceService.get(viewKey.key, viewKey.shared, this.urlItems).pipe(share());\r\n            const snippets$ = view$.pipe(mergeMap(view => this.snippetsService.getSnippets(view)));\r\n            return forkJoin([of(viewKey), view$, snippets$]);\r\n          })\r\n        ).subscribe(results => {\r\n          let viewInfos1 = this.viewInfos$.value;\r\n\r\n          results.forEach(([viewKey, view, snippets]) => {\r\n            const selectedIndex = viewInfos1.findIndex(v => GeneralHelpers.objectsEqual(v.viewKey, viewKey));\r\n            if (selectedIndex < 0) { return; }\r\n\r\n            const newViewInfo: ViewInfo = {\r\n              viewKey,\r\n              view,\r\n              explorerSnipps: snippets.sets,\r\n              editorSnipps: snippets.list,\r\n              savedCode: view.Code,\r\n            };\r\n            viewInfos1 = [...viewInfos1.slice(0, selectedIndex), newViewInfo, ...viewInfos1.slice(selectedIndex + 1)];\r\n            this.showCodeAndEditionWarnings(viewKey, view, templates);\r\n          });\r\n\r\n          this.viewInfos$.next(viewInfos1);\r\n        });\r\n\r\n        this.viewInfos$.next(viewInfos);\r\n      })\r\n    );\r\n\r\n    this.subscription.add(\r\n      combineLatest([this.activeView$, this.viewInfos$]).subscribe(([activeView, viewInfos]) => {\r\n        const active = viewInfos.find(v => GeneralHelpers.objectsEqual(v.viewKey, activeView));\r\n        const defaultTitle = 'Code Editor';\r\n        const newTitle = active == null ? defaultTitle : `${active.view?.FileName} - ${defaultTitle}`;\r\n        const oldTitle = this.titleService.getTitle();\r\n        if (newTitle !== oldTitle) {\r\n          this.titleService.setTitle(newTitle);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.templateVars$ = combineLatest([this.templates$, this.activeView$, this.openViews$, this.viewInfos$]).pipe(\r\n      map(([templates, activeView, openViews, viewInfos]) => {\r\n        const tabs = openViews.map(viewKey => {\r\n          const viewInfo = viewInfos.find(v => GeneralHelpers.objectsEqual(v.viewKey, viewKey));\r\n          const label: Tab = {\r\n            viewKey,\r\n            label: viewInfo?.view?.FileName ?? viewKey.key,\r\n            isActive: GeneralHelpers.objectsEqual(viewKey, activeView),\r\n            isModified: viewInfo?.view?.Code !== viewInfo?.savedCode,\r\n            isLoading: viewInfo?.view == null,\r\n          };\r\n          return label;\r\n        });\r\n        const activeViewInfo = viewInfos.find(v => GeneralHelpers.objectsEqual(v.viewKey, activeView));\r\n\r\n        const templateVars: CodeEditorTemplateVars = {\r\n          activeView,\r\n          tabs,\r\n          viewKey: activeViewInfo?.viewKey,\r\n          view: activeViewInfo?.view,\r\n          templates,\r\n          explorerSnipps: activeViewInfo?.explorerSnipps,\r\n          editorSnipps: activeViewInfo?.editorSnipps,\r\n        };\r\n        return templateVars;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.templates$.complete();\r\n    this.activeView$.complete();\r\n    this.openViews$.complete();\r\n    this.viewInfos$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  toggleExplorer(explorer: ExplorerOption): void {\r\n    this.activeExplorer = (this.activeExplorer !== explorer) ? explorer : null;\r\n  }\r\n\r\n  createTemplate(params: CreateTemplateParams): void {\r\n    if (params.isShared == null) {\r\n      const fileLocationDialogRef = this.dialog.open(FileLocationDialogComponent, {\r\n        autoFocus: false,\r\n        viewContainerRef: this.viewContainerRef,\r\n        width: '650px',\r\n      });\r\n      fileLocationDialogRef.afterClosed().subscribe((isShared?: boolean) => {\r\n        if (isShared == null) { return; }\r\n        params.isShared = isShared;\r\n        this.createTemplate(params);\r\n      });\r\n      return;\r\n    }\r\n\r\n    const createFileDialogData: CreateFileDialogData = {\r\n      folder: params.folder,\r\n      global: params.isShared,\r\n      purpose: params.folder === 'api' || params.folder?.startsWith('api/') ? 'Api' : undefined,\r\n    };\r\n    const createFileDialogRef = this.dialog.open(CreateFileDialogComponent, {\r\n      autoFocus: false,\r\n      data: createFileDialogData,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n\r\n    createFileDialogRef.afterClosed().subscribe((result?: CreateFileDialogResult) => {\r\n      if (!result) { return; }\r\n\r\n      this.sourceService.create(result.name, params.isShared, result.templateKey).subscribe(() => {\r\n        this.sourceService.getAll().subscribe(files => {\r\n          this.templates$.next(files);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  insertSnippet(snippet: string): void {\r\n    this.monacoEditorRef?.insertSnippet(snippet);\r\n  }\r\n\r\n  codeChanged(code: string, viewKey: ViewKey): void {\r\n    let viewInfos = this.viewInfos$.value;\r\n    const selectedIndex = viewInfos.findIndex(v => GeneralHelpers.objectsEqual(v.viewKey, viewKey));\r\n    const selectedViewInfo = viewInfos[selectedIndex];\r\n    const newViewInfo: ViewInfo = {\r\n      ...selectedViewInfo,\r\n      view: {\r\n        ...selectedViewInfo.view,\r\n        Code: code,\r\n      },\r\n    };\r\n    viewInfos = [...viewInfos.slice(0, selectedIndex), newViewInfo, ...viewInfos.slice(selectedIndex + 1)];\r\n    this.viewInfos$.next(viewInfos);\r\n  }\r\n\r\n  openView(viewKey: ViewKey): void {\r\n    // fix viewKey because it can be a templateId or a path, and file might already be open\r\n    viewKey = this.viewInfos$.value.find(\r\n      v => !GeneralHelpers.objectsEqual(v.viewKey, viewKey) && v.view?.FileName === viewKey.key && v.view?.IsShared === viewKey.shared\r\n    )?.viewKey ?? viewKey;\r\n\r\n    const oldActiveView = this.activeView$.value;\r\n    if (!GeneralHelpers.objectsEqual(oldActiveView, viewKey)) {\r\n      this.activeView$.next(viewKey);\r\n    }\r\n    const oldOpenViews = this.openViews$.value;\r\n    if (!oldOpenViews.some(v => GeneralHelpers.objectsEqual(v, viewKey))) {\r\n      const newOpenViews = [...oldOpenViews, viewKey];\r\n      this.openViews$.next(newOpenViews);\r\n    }\r\n  }\r\n\r\n  closeEditor(viewKey: ViewKey): void {\r\n    const oldOpenViews = this.openViews$.value;\r\n    const newOpenViews = oldOpenViews.filter(key => !GeneralHelpers.objectsEqual(key, viewKey));\r\n\r\n    const oldActiveView = this.activeView$.value;\r\n    if (GeneralHelpers.objectsEqual(oldActiveView, viewKey)) {\r\n      const newActiveView = oldOpenViews[oldOpenViews.findIndex(v => GeneralHelpers.objectsEqual(v, oldActiveView)) - 1] ?? newOpenViews[0];\r\n      this.activeView$.next(newActiveView);\r\n    }\r\n\r\n    this.openViews$.next(newOpenViews);\r\n  }\r\n\r\n  save(viewKey?: ViewKey): void {\r\n    viewKey ??= this.activeView$.value;\r\n    const viewInfo = this.viewInfos$.value.find(v => GeneralHelpers.objectsEqual(v.viewKey, viewKey));\r\n    if (viewInfo?.view == null) { return; }\r\n\r\n    this.snackBar.open('Saving...');\r\n    const codeToSave = viewInfo.view.Code;\r\n    this.sourceService.save(viewKey.key, viewKey.shared, viewInfo.view, this.urlItems).subscribe({\r\n      next: res => {\r\n        if (!res) {\r\n          this.snackBar.open('Failed', null, { duration: 2000 });\r\n          return;\r\n        }\r\n\r\n        let newViewInfos = [...this.viewInfos$.value];\r\n        const selectedIndex = newViewInfos.findIndex(v => GeneralHelpers.objectsEqual(v.viewKey, viewKey));\r\n        if (selectedIndex < 0) { return; }\r\n\r\n        const selectedViewInfo = newViewInfos[selectedIndex];\r\n        const newViewInfo: ViewInfo = {\r\n          ...selectedViewInfo,\r\n          savedCode: codeToSave,\r\n        };\r\n        newViewInfos = [...newViewInfos.slice(0, selectedIndex), newViewInfo, ...newViewInfos.slice(selectedIndex + 1)];\r\n        this.viewInfos$.next(newViewInfos);\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n      },\r\n      error: () => {\r\n        this.snackBar.open('Failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Show info about editions if other files with the same name exist */\r\n  private showCodeAndEditionWarnings(viewKey: ViewKey, view: SourceView, files: FileAsset[]): void {\r\n    const pathAndName = view.FileName;\r\n    const pathSeparator = pathAndName.indexOf('/') > -1 ? pathAndName.lastIndexOf('/') + 1 : 0;\r\n    const pathWithSlash = pathSeparator === 0 ? '' : pathAndName.substring(0, pathSeparator);\r\n    const fullName = pathAndName.substring(pathSeparator);\r\n    const name = fullName.substring(0, fullName.length - view.Extension.length);\r\n    const nameCode = name + '.code' + view.Extension;\r\n    // find out if we also have a code file\r\n    const codeFile = files.find(file => file.Path === pathWithSlash + nameCode && file.Shared === view.IsShared);\r\n    const otherEditions = files.filter(file => file.Path.endsWith(fullName) && file.Shared === view.IsShared).length - 1;\r\n\r\n    if (codeFile || otherEditions) {\r\n      const snackBarData: CodeAndEditionWarningsSnackBarData = {\r\n        fileName: fullName,\r\n        codeFile: codeFile?.Path,\r\n        edition: this.urlItems\r\n          .find(i => i.EntityId?.toString() === viewKey.key && i.IsShared === view.IsShared && i.Path === view.FileName)?.Edition,\r\n        otherEditions,\r\n        openCodeBehind: false,\r\n      };\r\n      const snackBarRef = this.snackBar.openFromComponent(CodeAndEditionWarningsComponent, {\r\n        data: snackBarData,\r\n        duration: 10000,\r\n      });\r\n\r\n      snackBarRef.onAction().subscribe(() => {\r\n        if ((snackBarRef.containerInstance.snackBarConfig.data as CodeAndEditionWarningsSnackBarData).openCodeBehind) {\r\n          const openViewKey: ViewKey = { key: codeFile?.Path, shared: codeFile?.Shared };\r\n          this.openView(openViewKey);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private attachListeners(): void {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscription.add(\r\n        fromEvent<BeforeUnloadEvent>(window, 'beforeunload').subscribe(event => {\r\n          const allSaved = !this.viewInfos$.value.some(v => v.view != null && v.view.Code !== v.savedCode);\r\n          if (allSaved) { return; }\r\n          event.preventDefault();\r\n          event.returnValue = ''; // fix for Chrome\r\n        })\r\n      );\r\n      this.subscription.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown').subscribe(event => {\r\n          const CTRL_S = event.keyCode === 83 && (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey);\r\n          if (!CTRL_S) { return; }\r\n          event.preventDefault();\r\n          this.zone.run(() => { this.save(); });\r\n        })\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CodeEditorComponent } from './code-editor.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CodeEditorComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CodeEditorRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { CreateFileDialogModule } from '../create-file-dialog';\r\nimport { MonacoEditorModule } from '../monaco-editor';\r\nimport { EavWindow } from '../shared/models/eav-window.model';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { buildTranslateConfiguration, TranslateLoaderWithErrorHandling } from '../shared/translation';\r\nimport { CodeAndEditionWarningsComponent } from './code-and-edition-warnings/code-and-edition-warnings.component';\r\nimport { CodeEditorRoutingModule } from './code-editor-routing.module';\r\nimport { CodeEditorComponent } from './code-editor.component';\r\nimport { CodeSnippetsComponent } from './code-snippets/code-snippets.component';\r\nimport { ObjectToArrayPipe } from './code-snippets/object-to-array.pipe';\r\nimport { CodeTemplatesComponent } from './code-templates/code-templates.component';\r\nimport { DepthPaddingPipe } from './code-templates/depth-padding.pipe';\r\nimport { SortItemsPipe } from './code-templates/order-items.pipe';\r\nimport { SnippetsService } from './services/snippets.service';\r\nimport { SourceService } from './services/source.service';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n// AoT requires an exported function for factories\r\n// at least according to https://github.com/ngx-translate/http-loader\r\nexport function translateLoaderFactoryCode(http: HttpClient) {\r\n  return new TranslateLoaderWithErrorHandling(http, './i18n/code-editor.', `.js?${window.sxcVersion}`);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CodeEditorComponent,\r\n    CodeSnippetsComponent,\r\n    ObjectToArrayPipe,\r\n    CodeTemplatesComponent,\r\n    DepthPaddingPipe,\r\n    SortItemsPipe,\r\n    CodeAndEditionWarningsComponent,\r\n  ],\r\n  imports: [\r\n    CodeEditorRoutingModule,\r\n    SharedComponentsModule,\r\n    CommonModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n    MatRippleModule,\r\n    TranslateModule.forChild(buildTranslateConfiguration(translateLoaderFactoryCode)),\r\n    MonacoEditorModule,\r\n    MatProgressSpinnerModule,\r\n    CreateFileDialogModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    SourceService,\r\n    SnippetsService,\r\n    TranslateService,\r\n  ],\r\n})\r\nexport class CodeEditorModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { ContentType } from '../../app-administration/models/content-type.model';\r\nimport { webApiTypeRoot } from '../../app-administration/services/content-types.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Field, FieldInputTypeOption } from '../models/field.model';\r\nimport { InputType } from '../models/input-type.model';\r\nimport { ReservedNames } from '../models/reserved-names.model';\r\n\r\nexport const webApiFieldsRoot = 'admin/field/';\r\nexport const webApiFieldsAll = webApiFieldsRoot + 'all';\r\n\r\n@Injectable()\r\nexport class ContentTypesFieldsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  typeListRetrieve() {\r\n    return this.http.get<string[]>(this.apiUrl(webApiFieldsRoot + 'DataTypes'), {\r\n      params: { appid: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getInputTypesList() {\r\n    return this.http\r\n      .get<InputType[]>(this.apiUrl(webApiFieldsRoot + 'InputTypes'), { params: { appid: this.context.appId.toString() } })\r\n      .pipe(\r\n        map(inputConfigs => {\r\n          const inputTypeOptions = inputConfigs.map(config => {\r\n            const option: FieldInputTypeOption = {\r\n              dataType: config.Type.substring(0, config.Type.indexOf('-')),\r\n              inputType: config.Type,\r\n              label: config.Label,\r\n              description: config.Description,\r\n              isDefault: config.IsDefault,\r\n              isObsolete: config.IsObsolete,\r\n              isRecommended: config.IsRecommended,\r\n              obsoleteMessage: config.ObsoleteMessage,\r\n              icon: config.IsDefault ? 'star' : config.IsRecommended ? 'star_outlined' : null,\r\n            };\r\n            return option;\r\n          });\r\n          return inputTypeOptions;\r\n        }),\r\n      );\r\n  }\r\n\r\n  getReservedNames() {\r\n    return this.http.get<ReservedNames>(this.apiUrl(webApiFieldsRoot + 'ReservedNames'));\r\n  }\r\n\r\n  getFields(contentTypeStaticName: string) {\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsAll), {\r\n        params: { appid: this.context.appId.toString(), staticName: contentTypeStaticName },\r\n      })\r\n      .pipe(\r\n        map(fields => {\r\n          if (fields) {\r\n            for (const fld of fields) {\r\n              if (!fld.Metadata) { continue; }\r\n              const md = fld.Metadata;\r\n              const allMd = md.All;\r\n              const typeMd = md[fld.Type];\r\n              const inputMd = md[fld.InputType];\r\n              md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n            }\r\n          }\r\n          return fields;\r\n        }),\r\n      );\r\n  }\r\n\r\n  reOrder(idArray: number[], contentType: ContentType) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'Sort'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        order: JSON.stringify(idArray),\r\n      },\r\n    });\r\n  }\r\n\r\n  setTitle(item: Field, contentType: ContentType) {\r\n    return this.http.post<null>(this.apiUrl(webApiTypeRoot + 'SetTitle'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  rename(fieldId: number, contentTypeId: number, newName: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Rename'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentTypeId.toString(),\r\n        attributeId: fieldId.toString(),\r\n        newName,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(item: Field, contentType: ContentType) {\r\n    if (item.IsTitle) {\r\n      throw new Error('Can\\'t delete Title');\r\n    }\r\n\r\n    return this.http.delete<boolean>(this.apiUrl(webApiFieldsRoot + 'Delete'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  add(newField: Partial<Field>, contentTypeId: number) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'Add'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: contentTypeId.toString(),\r\n        Id: newField.Id.toString(),\r\n        Type: newField.Type,\r\n        InputType: newField.InputType,\r\n        StaticName: newField.StaticName,\r\n        IsTitle: newField.IsTitle.toString(),\r\n        Index: newField.SortOrder.toString(),\r\n      }\r\n    });\r\n  }\r\n\r\n  updateInputType(id: number, staticName: string, inputType: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'InputType'), null, {\r\n      params: { appId: this.context.appId.toString(), attributeId: id.toString(), field: staticName, inputType }\r\n    });\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\" [ngSwitch]=\"isError\">\r\n  <mat-hint *ngSwitchCase=\"false\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-hint>\r\n\r\n  <mat-error *ngSwitchCase=\"true\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-error>\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"projects_ng-dialogs_src_app_code-editor_code-editor_module_ts-projects_ng-dialogs_src_app_sha-ff0107.871e4ed1696d4001.js"}