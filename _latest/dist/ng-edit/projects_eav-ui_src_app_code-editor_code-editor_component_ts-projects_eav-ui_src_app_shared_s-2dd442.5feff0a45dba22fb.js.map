{"version":3,"file":"projects_eav-ui_src_app_code-editor_code-editor_component_ts-projects_eav-ui_src_app_shared_s-2dd442.5feff0a45dba22fb.js","mappings":"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","names":["i0","ctx_r0","snackBarData","fileName","codeFile","edition","CodeAndEditionWarningsComponent_Conditional_2_Conditional_1_Template","CodeAndEditionWarningsComponent_Conditional_2_Conditional_3_Template","otherEditions","_r2","openCodeBehind","CodeAndEditionWarningsComponent","constructor","snackRef","this","dismissWithAction","static","t","i1","MAT_SNACK_BAR_DATA","core","VBU","selectors","standalone","features","decls","vars","consts","template","rf","ctx","CodeAndEditionWarningsComponent_Conditional_1_Template","CodeAndEditionWarningsComponent_Conditional_2_Template","CodeAndEditionWarningsComponent_Conditional_4_Template","MatButtonModule","i2","styles","Explorers","Templates","Snippets","SnippetsService","HttpServiceBase","translate","super","getTooltips","language","http","get","apiUrl","params","getSnippets","view","pipe","map","res","relevant","filterAwayNotNeededSnippetsList","snippets","standardAndInputSnips","extractInputTypeSnippets","sets","initSnippetsWithConfig","standardArray","inputTypeSnippets","list","keyPrefixes","keyPrefixIndex","v","Type","indexOf","newList","itm","setHasPrefix","set","substring","push","inputTypeArray","catalogInputTypeSnippets","inputTypeList","undefined","subset","templateConfiguration","makeTree","Content","Object","assign","Fields","PresentationFields","TypeContent","loadContentType","TypeContentPresentation","HasList","List","TypeList","TypeListPresentation","HasApp","App","Resources","Settings","tree","o","reformatted","key","name","label","snip","content","help","links","linksList","getHelpKey","result","instant","addition","linksString","llist","split","l","pair","length","link","trim","url","target","type","prefix","getFields","AppId","subscribe","fields","field","fieldname","StaticName","valuePlaceholder","Metadata","merged","Notes","toLowerCase","snipDefaults","cloneDeep","attachSnippets","InputType","std","i","obj","val","replace","appId","staticName","webApiFieldsAll","appid","toString","filter","DataTypeCatalog","Empty","fld","md","All","inputType","genericSnippet","fieldType","typeSnips","concat","more","fieldSnips","g","localizeGenericSnippet","collapse","objName","fieldName","jDH","factory","ɵfac","ObjectToArrayPipe","transform","Array","isArray","values","EJ8","pure","_r8","snippet_r7","$implicit","ctx_r2","toggleMore","toggledMores","includes","link_r9","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Conditional_7_For_4_Template","link_r12","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Conditional_8_For_1_Conditional_6_For_4_Template","more_r11","_r10","addSnippet","toggleInfo","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Conditional_8_For_1_Conditional_6_Template","toggledInfos","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Conditional_8_For_1_Template","_r6","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Conditional_4_Template","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Conditional_7_Template","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Conditional_8_Template","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Template","folder_r5","value","_r4","toggleFolder","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_Template","section_r2","toggledFolders","CodeSnippetsComponent_For_2_Conditional_8_For_1_Template","_r1","toggleSection","CodeSnippetsComponent_For_2_Conditional_8_Template","toggledSections","CodeSnippetsComponent","insertSnippet","EventEmitter","snippet","emit","ArrayHelpers","toggleInArray","inputs","outputs","CodeSnippetsComponent_For_2_Template","MatIconModule","MatRippleModule","KeyValuePipe","TranslateModule","i3","ClickStopPropagationDirective","TippyDirective","SafeHtmlPipe","calculateTree","templates","parent","paths","Path","last","pathFromRoot","path","existing","find","item","children","depth","isShared","Shared","isFolder","SortItemsPipe","items","sort","item1","item2","DepthPaddingPipe","sanitizer","padding","bypassSecurityTrustStyle","CodeTemplatesComponent_For_3_ng_container_0_Template","fileOrFolder_r3","_c0","item_r2","item_r5","ctx_r5","openTemplate","_c1","isToggled","CodeTemplatesComponent_ng_template_5_Conditional_1_Conditional_11_For_1_ng_container_0_Template","item1_r8","CodeTemplatesComponent_ng_template_5_Conditional_1_Conditional_11_For_1_Template","_r7","toggleItem","addFile","CodeTemplatesComponent_ng_template_5_Conditional_1_Conditional_11_Template","_c2","CodeTemplatesComponent_ng_template_5_Conditional_0_Template","CodeTemplatesComponent_ng_template_5_Conditional_1_Template","CodeTemplatesComponent","openView","createTemplate","toggledItemsApp","toggledItemsShared","ngOnChanges","changes","calculateTreeAppShared","f","previousView","previousValue","FileName","IsShared","showFileInTree","shared","folder","file","toggledItems","CodeTemplatesComponent_For_3_Template","CodeTemplatesComponent_ng_template_5_Template","menu_r9","NgTemplateOutlet","NgClass","MatMenuModule","tab_r2","viewKey","CodeEditorComponent_Conditional_11_For_2_Conditional_2_Template","CodeEditorComponent_Conditional_11_For_2_Conditional_6_Template","CodeEditorComponent_Conditional_11_For_2_Conditional_7_Template","closeEditor","isActive","isModified","isLoading","CodeEditorComponent_Conditional_11_For_2_Template","tabs","$event","tmp_2_0","codeChanged","active","tmp_1_0","Code","monacoOptions","tmp_4_0","editorSnipps","tmp_5_0","tooltips","_r5","save","CodeEditorComponent","BaseComponent","#sourceSvc","#snippetSvc","#titleSvc","#openViews","#viewInfos","#urlItems","context","route","snackBar","zone","dialog","viewContainerRef","activeExplorer","theme","tabSize","fixedOverflowWidgets","transient","SourceService","Title","signal","activeView","computed","RxHelpers","objectsEqual","openViews","viewInfos","viewInfo","savedCode","init","codeItems","JSON","parse","sessionStorage","getItem","keyItems","keyIsShared","forEach","codeItem","startsWith","effect","notLoaded","some","forkJoin","newViewInfo","view$","share","snippets$","switchMap","tooltips$","Extension","of","results","viewInfos1","selectedIndex","findIndex","explorerSnipps","slice","#showCodeAndEditionWarnings","allowSignalWrites","defaultTitle","newTitle","getTitle","console","log","setTitle","ngOnInit","initialViews","EntityId","#attachListeners","getAll","ngOnDestroy","toggleExplorer","explorer","createFileDialogData","global","purpose","open","CreateFileDialogComponent","autoFocus","data","width","afterClosed","create","templateKey","files","monacoEditorRef","code","selectedViewInfo","oldActiveView","oldOpenViews","newOpenViews","newActiveView","codeToSave","next","duration","newViewInfos","error","pathAndName","pathSeparator","lastIndexOf","pathWithSlash","fullName","nameCode","endsWith","Edition","snackBarRef","openFromComponent","onAction","containerInstance","snackBarConfig","runOutsideAngular","subscriptions","add","fromEvent","window","event","preventDefault","returnValue","isCtrlS","run","i4","viewQuery","MonacoEditorComponent","CodeEditorComponent_Conditional_11_Template","CodeEditorComponent_Conditional_12_Template","CodeEditorComponent_Conditional_13_Template","tmp_7_0","tmp_9_0","i5","MatProgressSpinnerModule","i6","MonacoEditorComponent_1","i7","ToggleDebugDirective","webApiFieldsRoot","webApiFieldsGetShared","ContentTypesFieldsService","typeListRetrieve","getInputTypesList","inputConfigs","config","dataType","Label","description","Description","isDefault","IsDefault","isObsolete","IsObsolete","isRecommended","IsRecommended","obsoleteMessage","ObsoleteMessage","icon","getReservedNames","contentTypeStaticName","getShareableFields","getShareableFieldsFor","attributeId","addInheritedField","targetContentTypeId","sourceContentTypeStaticName","sourceFieldGuid","newName","post","ContentTypeId","SourceType","SourceField","inherit","inheritMetadataOf","reOrder","idArray","contentType","contentTypeId","Id","order","stringify","webApiTypeRoot","rename","fieldId","delete","IsTitle","Error","newField","Index","SortOrder","updateInputType","id","_angular_core__WEBPACK_IMPORTED_MODULE_3__","ServiceBase","Subscription","destroy","unsubscribe","_angular_core__WEBPACK_IMPORTED_MODULE_1__"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/code-editor/code-and-edition-warnings/code-and-edition-warnings.component.html","./projects/eav-ui/src/app/code-editor/code-and-edition-warnings/code-and-edition-warnings.component.ts","./projects/eav-ui/src/app/code-editor/code-editor.models.ts","./projects/eav-ui/src/app/code-editor/services/snippets.service.ts","./projects/eav-ui/src/app/code-editor/code-snippets/object-to-array.pipe.ts","./projects/eav-ui/src/app/code-editor/code-snippets/code-snippets.component.html","./projects/eav-ui/src/app/code-editor/code-snippets/code-snippets.component.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.helpers.ts","./projects/eav-ui/src/app/code-editor/code-templates/order-items.pipe.ts","./projects/eav-ui/src/app/code-editor/code-templates/depth-padding.pipe.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.component.html","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.component.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.models.ts","./projects/eav-ui/src/app/code-editor/code-editor.component.html","./projects/eav-ui/src/app/code-editor/code-editor.component.ts","./projects/eav-ui/src/app/shared/fields/content-types-fields.service.ts","./projects/eav-ui/src/app/shared/services/service-base.ts"],"sourcesContent":["<div class=\"messages\">\r\n  @if (snackBarData.codeFile) {\r\n  <div>\"{{ snackBarData.fileName }}\" also has a code-behind file \"{{ snackBarData.codeFile }}\".</div>\r\n  <br>\r\n  }\r\n\r\n  @if (snackBarData.otherEditions) {\r\n  <div>\r\n    @if (snackBarData.edition) {\r\n    You are editing \"{{ snackBarData.edition }}\" edition.\r\n    }\r\n    There are {{ snackBarData.otherEditions }} other editions of \"{{ snackBarData.fileName }}\".\r\n    @if (!snackBarData.edition) {\r\n    You may be editing an edition which is not the one you see.\r\n    }\r\n    See <a href=\"https://go.2sxc.org/polymorphism\" target=\"_blank\">docs</a>.\r\n  </div>\r\n  }\r\n</div>\r\n\r\n<div class=\"actions\">\r\n  @if (snackBarData.codeFile) {\r\n  <button mat-button color=\"primary\" (click)=\"openCodeBehind()\">\r\n    Open code-behind file\r\n  </button>\r\n  }\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\nimport { CodeAndEditionWarningsSnackBarData } from './code-and-edition-warnings.models';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@Component({\r\n  selector: 'app-code-and-edition-warnings',\r\n  templateUrl: './code-and-edition-warnings.component.html',\r\n  styleUrls: ['./code-and-edition-warnings.component.scss'],\r\n  standalone: true,\r\n  imports: [MatButtonModule],\r\n})\r\nexport class CodeAndEditionWarningsComponent {\r\n  constructor(\r\n    private snackRef: MatSnackBarRef<CodeAndEditionWarningsComponent>,\r\n    @Inject(MAT_SNACK_BAR_DATA) public snackBarData: CodeAndEditionWarningsSnackBarData,\r\n  ) { }\r\n\r\n  openCodeBehind(): void {\r\n    this.snackBarData.openCodeBehind = true;\r\n    this.snackRef.dismissWithAction();\r\n  }\r\n}\r\n","import { Snippet, SnippetsSets } from './models/snippet.model';\r\nimport { SourceView } from './models/source-view.model';\r\nimport { Tooltip } from './models/tooltip.model';\r\n\r\nexport interface Tab {\r\n  viewKey: ViewKey;\r\n  label: string;\r\n  isActive: boolean;\r\n  isModified: boolean;\r\n  isLoading: boolean;\r\n}\r\n\r\nexport const Explorers = {\r\n  Templates: 'Templates',\r\n  Snippets: 'Snippets',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n\r\nexport type ExplorerOption = typeof Explorers[keyof typeof Explorers];\r\n\r\nexport interface ViewInfo {\r\n  viewKey: ViewKey;\r\n  view?: SourceView;\r\n  explorerSnipps?: SnippetsSets;\r\n  editorSnipps?: Snippet[];\r\n  tooltips?: Tooltip[];\r\n  savedCode?: string;\r\n}\r\n\r\nexport interface ViewKey {\r\n  /** ViewKey is templateId or path */\r\n  key: string;\r\n  shared: boolean;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { map, Observable } from 'rxjs';\r\nimport { DataTypeCatalog } from '../../shared/fields/data-type-catalog';\r\nimport { Field } from '../../shared/fields/field.model';\r\nimport { webApiFieldsAll } from '../../shared/fields/content-types-fields.service';\r\nimport { MoreSnippet, SetSnippet, SetSnippetLink, Snippet, SnippetsSets, SnippetsSubSubSets } from '../models/snippet.model';\r\nimport { SourceView } from '../models/source-view.model';\r\nimport { Tooltip } from '../models/tooltip.model';\r\nimport { InputTypeStrict } from '../../shared/fields/input-type-catalog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const inlineHelp = 'admin/Code/InlineHelp';\r\n\r\n@Injectable()\r\nexport class SnippetsService extends HttpServiceBase {\r\n\r\n  constructor( private translate: TranslateService) {\r\n    super();\r\n  }\r\n\r\n  getTooltips(language: string): Observable<Tooltip[]> {\r\n    return this.http.get<Tooltip[]>(this.apiUrl(inlineHelp), {\r\n      params: {\r\n        language,\r\n      },\r\n    });\r\n  }\r\n\r\n  getSnippets(view: SourceView): Observable<{ list: Snippet[]; sets: SnippetsSets; }> {\r\n    return this.http.get<{ snippets: Snippet[] }>('../ng-assets/snippets.json.js').pipe(\r\n      map(res => {\r\n        const relevant = this.filterAwayNotNeededSnippetsList(res.snippets, view);\r\n        const standardAndInputSnips = this.extractInputTypeSnippets(relevant);\r\n        const sets = this.initSnippetsWithConfig(standardAndInputSnips.standardArray, view, standardAndInputSnips.inputTypeSnippets);\r\n        const sorted: { list: Snippet[]; sets: SnippetsSets; } = {\r\n          list: standardAndInputSnips.standardArray,\r\n          sets\r\n        };\r\n        return sorted;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** Scan the list for sets starting with @ or [ and filter if not needed right now */\r\n  private filterAwayNotNeededSnippetsList(list: Snippet[], view: SourceView): Snippet[] {\r\n    const keyPrefixes = ['@', '['];\r\n    const keyPrefixIndex = (v: SourceView) => (v.Type.indexOf('Razor') > -1) ? 0 : 1;\r\n\r\n    const newList: Snippet[] = [];\r\n    for (const itm of list) {\r\n      const setHasPrefix = keyPrefixes.indexOf(itm.set[0]);\r\n      if (setHasPrefix === -1 || (setHasPrefix === keyPrefixIndex(view))) {\r\n        // if necessary, remove first char\r\n        if (setHasPrefix === keyPrefixIndex(view)) {\r\n          itm.set = itm.set.substring(1);\r\n        }\r\n        newList.push(itm);\r\n      }\r\n    }\r\n    return newList;\r\n  }\r\n\r\n  private extractInputTypeSnippets(list: Snippet[]): { standardArray: Snippet[]; inputTypeSnippets: Record<string, Snippet[]>; } {\r\n    const standardArray: Snippet[] = [];\r\n    const inputTypeArray: Snippet[] = [];\r\n\r\n    for (const itm of list) {\r\n      const systemSnippet = itm.set[0] === '\\\\';\r\n      if (!systemSnippet) {\r\n        standardArray.push(itm);\r\n      } else {\r\n        itm.set = itm.set.substring(1);\r\n        inputTypeArray.push(itm);\r\n      }\r\n    }\r\n    const inputTypeSnippets = this.catalogInputTypeSnippets(inputTypeArray);\r\n    const extracted: { standardArray: Snippet[]; inputTypeSnippets: Record<string, Snippet[]>; } = {\r\n      standardArray,\r\n      inputTypeSnippets,\r\n    };\r\n    return extracted;\r\n  }\r\n\r\n  private catalogInputTypeSnippets(list: Snippet[]): Record<string, Snippet[]> {\r\n    const inputTypeList: Record<string, Snippet[]> = {};\r\n    for (const itm of list) {\r\n      if (inputTypeList[itm.subset] === undefined) {\r\n        inputTypeList[itm.subset] = [];\r\n      }\r\n      inputTypeList[itm.subset].push(itm);\r\n    }\r\n    return inputTypeList;\r\n  }\r\n\r\n  private initSnippetsWithConfig(\r\n    standardArray: Snippet[],\r\n    templateConfiguration: SourceView,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): SnippetsSets {\r\n    const sets = this.makeTree(standardArray);\r\n\r\n    // retrieve all relevant content-types and infos\r\n    sets.Content = Object.assign({}, sets.Content, { Fields: {}, PresentationFields: {} });\r\n    if (templateConfiguration.TypeContent) {\r\n      this.loadContentType(\r\n        sets.Content.Fields as SnippetsSubSubSets,\r\n        templateConfiguration.TypeContent,\r\n        'Content',\r\n        templateConfiguration,\r\n        inputTypeSnippets,\r\n      );\r\n    }\r\n    if (templateConfiguration.TypeContentPresentation) {\r\n      this.loadContentType(\r\n        sets.Content.PresentationFields as SnippetsSubSubSets,\r\n        templateConfiguration.TypeContentPresentation,\r\n        'Content.Presentation',\r\n        templateConfiguration,\r\n        inputTypeSnippets,\r\n      );\r\n    }\r\n\r\n    if (templateConfiguration.HasList) {\r\n      sets.List = Object.assign({}, sets.List, { Fields: {}, PresentationFields: {} });\r\n      if (templateConfiguration.TypeList) {\r\n        this.loadContentType(\r\n          sets.List.Fields as SnippetsSubSubSets,\r\n          templateConfiguration.TypeList,\r\n          'Header',\r\n          templateConfiguration,\r\n          inputTypeSnippets,\r\n        );\r\n      }\r\n      if (templateConfiguration.TypeListPresentation) {\r\n        this.loadContentType(\r\n          sets.List.PresentationFields as SnippetsSubSubSets,\r\n          templateConfiguration.TypeListPresentation,\r\n          'Header.Presentation',\r\n          templateConfiguration,\r\n          inputTypeSnippets,\r\n        );\r\n      }\r\n    } else {\r\n      delete sets.List;\r\n    }\r\n\r\n    // maybe App-infos\r\n    if (templateConfiguration.HasApp) {\r\n      sets.App.Resources = {};\r\n      sets.App.Settings = {};\r\n      this.loadContentType(sets.App.Resources, 'App-Resources', 'App.Resources', templateConfiguration, inputTypeSnippets);\r\n      this.loadContentType(sets.App.Settings, 'App-Settings', 'App.Settings', templateConfiguration, inputTypeSnippets);\r\n    }\r\n\r\n    return sets;\r\n  }\r\n\r\n  /** Convert the list into a tree with set/subset/item */\r\n  private makeTree(list: Snippet[]): SnippetsSets {\r\n    const tree: SnippetsSets = {};\r\n    for (const o of list) {\r\n      if (tree[o.set] === undefined) {\r\n        tree[o.set] = {};\r\n      }\r\n      if (tree[o.set][o.subset] === undefined) {\r\n        tree[o.set][o.subset] = [];\r\n      }\r\n      const reformatted: SetSnippet = {\r\n        key: o.name,\r\n        label: this.label(o.set, o.subset, o.name),\r\n        snip: o.content,\r\n        help: o.help || this.help(o.set, o.subset, o.name),\r\n        links: this.linksList(o.links)\r\n      };\r\n\r\n      (tree[o.set][o.subset] as SetSnippet[]).push(reformatted);\r\n    }\r\n    return tree;\r\n  }\r\n\r\n  private label(set: string, subset: string, snip: string): string {\r\n    const key = this.getHelpKey(set, subset, snip, '.Key');\r\n\r\n    let result: string = this.translate.instant(key);\r\n    if (result === key) {\r\n      result = snip;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private getHelpKey(set: string, subset: string, snip: string, addition: string): string {\r\n    return 'SourceEditorSnippets' + '.' + set + '.' + subset + '.' + snip + addition;\r\n  }\r\n\r\n  private help(set: string, subset: string, snip: string): string {\r\n    const key = this.getHelpKey(set, subset, snip, '.Help');\r\n\r\n    let result: string = this.translate.instant(key);\r\n    if (result === key) {\r\n      result = '';\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private linksList(linksString: string): SetSnippetLink[] {\r\n    if (!linksString) { return null; }\r\n\r\n    const links: SetSnippetLink[] = [];\r\n    const llist = linksString.split('\\n');\r\n    for (const l of llist) {\r\n      const pair = l.split(':');\r\n      if (pair.length === 3) {\r\n        const link: SetSnippetLink = {\r\n          name: pair[0].trim(),\r\n          url: pair[1].trim() + ':' + pair[2].trim(),\r\n        };\r\n        links.push(link);\r\n      }\r\n    }\r\n    if (links.length === 0) { return null; }\r\n    return links;\r\n  }\r\n\r\n  /** spm TODO: this happens after snippets are calculated for the first time. Needs to be fixed */\r\n  private loadContentType(\r\n    target: SnippetsSubSubSets,\r\n    type: string,\r\n    prefix: string,\r\n    templateConfiguration: SourceView,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): void {\r\n    this.getFields(templateConfiguration.AppId, type).subscribe(fields => {\r\n      // first add common items if the content-type actually exists\r\n      for (const field of fields) {\r\n        const fieldname = field.StaticName;\r\n        target[fieldname] = {\r\n          key: fieldname,\r\n          label: fieldname,\r\n          snip: this.valuePlaceholder(prefix, fieldname, templateConfiguration),\r\n          help: field.Metadata.merged.Notes || ' (' + field.Type.toLowerCase() + ') '\r\n        };\r\n        // try to add generic snippets specific to this input-type\r\n        const snipDefaults = cloneDeep(target[fieldname]); // must be a copy, because target[fieldname] will grow\r\n        this.attachSnippets(target, prefix, fieldname, field.InputType, snipDefaults, inputTypeSnippets);\r\n      }\r\n\r\n      if (fields.length) {\r\n        const std = ['EntityId', 'EntityTitle', 'EntityGuid', 'EntityType', 'IsPublished', 'Modified'];\r\n        // tslint:disable-next-line:prefer-for-of\r\n        for (let i = 0; i < std.length; i++) {\r\n          target[std[i]] = {\r\n            key: std[i],\r\n            label: std[i],\r\n            snip: this.valuePlaceholder(prefix, std[i], templateConfiguration),\r\n            help: this.translate.instant('SourceEditorSnippets.StandardFields.' + std[i] + '.Help'),\r\n          };\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private valuePlaceholder(obj: string, val: string, templateConfiguration: SourceView): string {\r\n    return (templateConfiguration.Type.indexOf('Razor') > -1)\r\n      ? '@' + obj + '.' + val\r\n      : '[' + obj.replace('.', ':') + ':' + val + ']';\r\n  }\r\n\r\n  private getFields(appId: number, staticName: string): Observable<Field[]> {\r\n    return this.http.get<Field[]>(this.apiUrl(webApiFieldsAll), {\r\n      params: { appid: appId.toString(), staticName },\r\n    }).pipe(\r\n      map(fields => {\r\n        fields = fields.filter(field => field.Type !== DataTypeCatalog.Empty);\r\n        for (const fld of fields) {\r\n          if (!fld.Metadata) continue;\r\n          const md = fld.Metadata;\r\n          const allMd = md.All;\r\n          const typeMd = md[fld.Type];\r\n          const inputMd = md[fld.InputType];\r\n          md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n        }\r\n        return fields;\r\n      }),\r\n    );\r\n  }\r\n\r\n  private attachSnippets(\r\n    target: SnippetsSubSubSets,\r\n    prefix: string,\r\n    fieldname: string,\r\n    inputType: InputTypeStrict,\r\n    snipDefaults: SetSnippet,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): void {\r\n    let genericSnippet = inputTypeSnippets[inputType];\r\n    if (inputType.indexOf('-')) { // if it's a sub-type, let's also get the master-type\r\n      const fieldType = inputType.substring(0, inputType.indexOf('-'));\r\n      if (fieldType) {\r\n        const typeSnips = inputTypeSnippets[fieldType];\r\n        if (typeSnips) {\r\n          genericSnippet = genericSnippet ? genericSnippet.concat(typeSnips) : typeSnips;\r\n        }\r\n      }\r\n    }\r\n    if (!genericSnippet) return;\r\n\r\n    if (target[fieldname].more === undefined) {\r\n      target[fieldname].more = {};\r\n    }\r\n    const fieldSnips = target[fieldname].more;\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let g = 0; g < genericSnippet.length; g++) {\r\n      try {\r\n        fieldSnips[fieldname + '-' + genericSnippet[g].name] = Object.assign({}, snipDefaults, {\r\n          key: fieldname + ' - ' + genericSnippet[g].name,\r\n          label: genericSnippet[g].name,\r\n          snip: this.localizeGenericSnippet(genericSnippet[g].content, prefix, fieldname),\r\n          collapse: true,\r\n        } as MoreSnippet);\r\n      } finally { }\r\n    }\r\n  }\r\n\r\n  private localizeGenericSnippet(snip: string, objName: string, fieldName: string): string {\r\n    snip = snip\r\n      .replace(/(\\$\\{[0-9]+\\:)var(\\})/gi, '$1' + objName + '$2')\r\n      .replace(/(\\$\\{[0-9]+\\:)prop(\\})/gi, '$1' + fieldName + '$2');\r\n    return snip;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'objectToArray',\r\n    standalone: true\r\n})\r\nexport class ObjectToArrayPipe implements PipeTransform {\r\n  transform(obj: Record<string, any> | Record<string, any>[]): Record<string, any>[] {\r\n    if (obj == null) return;\r\n\r\n    if (Array.isArray(obj)) { return obj; }\r\n\r\n    return Object.values(obj);\r\n  }\r\n}\r\n","<div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n  @for (section of snippets | keyvalue; track section) {\r\n  <div>\r\n    <div class=\"collapsible-header section\" [tippy]=\"'SourceEditorSnippets.' + section.key + '.Help' | translate\"\r\n      tippyShowDelay=\"750\" (click)=\"toggleSection(section.key)\">\r\n      <mat-icon>\r\n        {{ toggledSections.includes(section.key) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n      </mat-icon>\r\n      <span>{{ 'SourceEditorSnippets.' + section.key + '.Title' | translate }}</span>\r\n    </div>\r\n    @if (toggledSections.includes(section.key)) {\r\n    @for (folder of section.value | keyvalue; track folder) {\r\n    <div>\r\n      <div class=\"collapsible-header folder\"\r\n        [tippy]=\"'SourceEditorSnippets.' + section.key + '.' + folder.key + '.Help' | translate\" tippyShowDelay=\"750\"\r\n        (click)=\"toggleFolder(folder.key)\">\r\n        <mat-icon>\r\n          {{ toggledFolders.includes(folder.key) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n        </mat-icon>\r\n        <span>{{ 'SourceEditorSnippets.' + section.key + '.' + folder.key + '.Title' | translate }}</span>\r\n      </div>\r\n      @if (toggledFolders.includes(folder.key)) {\r\n      @for (snippet of (folder.value | objectToArray); track snippet) {\r\n      <div class=\"snippet\">\r\n        <div class=\"snippet-label\">\r\n          <div matRipple class=\"text\" [tippy]=\"snippet.snip\" tippyShowDelay=\"750\" (click)=\"addSnippet(snippet.snip)\">\r\n            {{ snippet.label }}\r\n          </div>\r\n          @if (snippet.more) {\r\n          <mat-icon tippy=\"Show More\" tippyShowDelay=\"750\" (click)=\"toggleMore(snippet.key)\">\r\n            {{ toggledMores.includes(snippet.key) ? 'more_vert' : 'more_horiz' }}\r\n          </mat-icon>\r\n          }\r\n          <mat-icon tippy=\"Show Help\" tippyShowDelay=\"750\" appClickStopPropagation\r\n            (click)=\"toggleInfo(snippet.key)\">info</mat-icon>\r\n        </div>\r\n        @if (toggledInfos.includes(snippet.key)) {\r\n        <div class=\"snippet-help\">\r\n          <div class=\"text\" [innerHTML]=\"snippet.help | safeHtml\"></div>\r\n          @for (link of snippet.links; track link) {\r\n          <div>\r\n            <a [href]=\"link.url\" target=\"_blank\">{{ link.name }}</a>\r\n          </div>\r\n          }\r\n        </div>\r\n        }\r\n        @if (toggledMores.includes(snippet.key)) {\r\n        @for (more of (snippet.more | objectToArray); track more) {\r\n        <div>\r\n          <div class=\"snippet-label\">\r\n            <div matRipple class=\"text text-more\" [tippy]=\"more.snip\" tippyShowDelay=\"750\"\r\n              (click)=\"addSnippet(more.snip)\">\r\n              {{ more.label }}\r\n            </div>\r\n            <mat-icon tippy=\"Show Help\" tippyShowDelay=\"750\" appClickStopPropagation\r\n              (click)=\"toggleInfo(more.key)\">info</mat-icon>\r\n          </div>\r\n          @if (toggledInfos.includes(more.key)) {\r\n          <div class=\"snippet-help snippet-help-more\">\r\n            <div class=\"text\" [innerHTML]=\"more.help | safeHtml\"></div>\r\n            @for (link of more.links; track link) {\r\n            <div>\r\n              <a [href]=\"link.url\" target=\"_blank\">{{ link.name }}</a>\r\n            </div>\r\n            }\r\n          </div>\r\n          }\r\n        </div>\r\n        }\r\n        }\r\n      </div>\r\n      }\r\n      }\r\n    </div>\r\n    }\r\n    }\r\n  </div>\r\n  }\r\n</div>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { SnippetsSets } from '../models/snippet.model';\r\nimport { ObjectToArrayPipe } from './object-to-array.pipe';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { KeyValuePipe } from '@angular/common';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\n\r\n@Component({\r\n  selector: 'app-code-snippets',\r\n  templateUrl: './code-snippets.component.html',\r\n  styleUrls: ['./code-snippets.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    MatRippleModule,\r\n    KeyValuePipe,\r\n    TranslateModule,\r\n    ObjectToArrayPipe,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n    SafeHtmlPipe,\r\n  ],\r\n})\r\nexport class CodeSnippetsComponent {\r\n  @Input() snippets: SnippetsSets;\r\n  @Output() insertSnippet: EventEmitter<string> = new EventEmitter();\r\n  toggledSections: string[] = [];\r\n  toggledFolders: string[] = [];\r\n  toggledInfos: string[] = [];\r\n  toggledMores: string[] = [];\r\n\r\n  constructor() { }\r\n\r\n  addSnippet(snippet: string): void {\r\n    this.insertSnippet.emit(snippet);\r\n  }\r\n\r\n  toggleSection(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledSections);\r\n  }\r\n\r\n  toggleFolder(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledFolders);\r\n  }\r\n\r\n  toggleInfo(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledInfos);\r\n  }\r\n\r\n  toggleMore(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledMores);\r\n  }\r\n}\r\n","import { FileAsset } from '../models/file-asset.model';\r\nimport { TreeItem } from '../models/tree-item.model';\r\nimport { appSharedRoot } from './code-templates.models';\r\n\r\nexport function calculateTreeAppShared(templates: FileAsset[]): TreeItem[] {\r\n  const tree: TreeItem[] = [\r\n    {\r\n      depth: -1,\r\n      name: 'App Files',\r\n      pathFromRoot: appSharedRoot,\r\n      isShared: false,\r\n      isFolder: true,\r\n      children: calculateTree(templates.filter(f => !f.Shared)),\r\n    },\r\n    {\r\n      depth: -1,\r\n      name: 'Shared App Files',\r\n      pathFromRoot: appSharedRoot,\r\n      isShared: true,\r\n      isFolder: true,\r\n      children: calculateTree(templates.filter(f => f.Shared)),\r\n    },\r\n  ];\r\n  return tree;\r\n}\r\n\r\nfunction calculateTree(templates: FileAsset[]): TreeItem[] {\r\n  if (!templates) { return []; }\r\n\r\n  const tree: TreeItem[] = [];\r\n  for (const template of templates) {\r\n    let parent: TreeItem[] = tree;\r\n    const paths = template.Path.split('/');\r\n    const last = paths[paths.length - 1];\r\n    let pathFromRoot = '';\r\n    for (let i = 0; i < paths.length; i++) {\r\n      const path = paths[i];\r\n      pathFromRoot += i ? `/${path}` : path;\r\n      const existing = parent.find(item => item.name === path);\r\n      if (existing) {\r\n        parent = existing.children;\r\n      } else {\r\n        const item: TreeItem = {\r\n          depth: i,\r\n          name: path,\r\n          pathFromRoot,\r\n          isShared: template.Shared,\r\n          isFolder: path !== last,\r\n          ...(path !== last && { children: [] }),\r\n        };\r\n        parent.push(item);\r\n        parent = item.children;\r\n      }\r\n    }\r\n  }\r\n\r\n  return tree;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TreeItem } from '../models/tree-item.model';\r\n\r\n/** Sorts folders before files */\r\n@Pipe({\r\n  name: 'sortItems',\r\n  standalone: true\r\n})\r\nexport class SortItemsPipe implements PipeTransform {\r\n\r\n  transform(items: TreeItem[]) {\r\n    if (items == null) { return items; }\r\n\r\n    items.sort((item1, item2) => {\r\n      if (item1.isFolder < item2.isFolder) {\r\n        return 1;\r\n      } else if (item1.isFolder > item2.isFolder) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    return items;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'depthPadding',\r\n  standalone: true\r\n})\r\nexport class DepthPaddingPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(depth: number, isFolder: boolean): SafeStyle {\r\n    let padding: number;\r\n    if (isFolder) {\r\n      padding = depth * 8;\r\n    } else {\r\n      padding = (depth === 0) ? 8 : (depth * 8 + 16);\r\n    }\r\n    return this.sanitizer.bypassSecurityTrustStyle(`padding-left: ${padding}px;`);\r\n  }\r\n}\r\n","<div class=\"editor-active-explorer fancy-scrollbar-dark explorer-wrapper\">\r\n\r\n  <div>\r\n    @for (item of (tree | sortItems); track item) {\r\n    <ng-container *ngTemplateOutlet=\"fileOrFolder; context: {item: item}\"></ng-container>\r\n    }\r\n\r\n    <ng-template #fileOrFolder let-item=\"item\">\r\n\r\n      @if (!item.isFolder) {\r\n      <div class=\"file\" [style]=\"item.depth | depthPadding: item.isFolder\"\r\n        [ngClass]=\"{'active': isToggled(item.pathFromRoot, item.isShared) }\" [tippy]=\"item.name\" tippyShowDelay=\"750\"\r\n        (click)=\"openTemplate(item.pathFromRoot, item.isShared)\">\r\n        {{ item.name }}\r\n      </div>\r\n      }\r\n\r\n      @if (item.isFolder) {\r\n      <div>\r\n        <div class=\"folder-name-wrapper\" [ngClass]=\"{'app-shared-root': item.depth < 0}\"\r\n          [style]=\"item.depth + 1 | depthPadding: item.isFolder\" (click)=\"toggleItem(item.pathFromRoot, item.isShared)\">\r\n          <div class=\"folder-name\" [tippy]=\"item.name\" tippyShowDelay=\"750\">\r\n            <mat-icon> {{ isToggled(item.pathFromRoot, item.isShared) ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\r\n              }}\r\n            </mat-icon>\r\n            <span>{{ item.name }}</span>\r\n          </div>\r\n          <div class=\"add-item\" tippy=\"Create file in this folder\" tippyShowDelay=\"750\" appClickStopPropagation\r\n            (click)=\"addFile(item.pathFromRoot, item.isShared)\">\r\n            <mat-icon>add</mat-icon>\r\n          </div>\r\n        </div>\r\n        @if (isToggled(item.pathFromRoot, item.isShared)) {\r\n        @for (item1 of (item.children | sortItems); track item1) {\r\n        <ng-container *ngTemplateOutlet=\"fileOrFolder; context: {item: item1}\"></ng-container>\r\n        }\r\n        }\r\n      </div>\r\n      }\r\n\r\n    </ng-template>\r\n  </div>\r\n\r\n  <div class=\"create-button-wrapper\">\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" tippy=\"Create file\" tippyPlacement=\"left\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button mat-menu-item (click)=\"addFile('', false)\">\r\n        <span>App</span>\r\n      </button>\r\n      <button mat-menu-item (click)=\"addFile('', true)\">\r\n        <span>Shared (global)</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\r\nimport { ViewKey } from '../code-editor.models';\r\nimport { FileAsset } from '../models/file-asset.model';\r\nimport { SourceView } from '../models/source-view.model';\r\nimport { TreeItem } from '../models/tree-item.model';\r\nimport { calculateTreeAppShared } from './code-templates.helpers';\r\nimport { appSharedRoot, CreateTemplateParams } from './code-templates.models';\r\nimport { SortItemsPipe } from './order-items.pipe';\r\nimport { DepthPaddingPipe } from './depth-padding.pipe';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgTemplateOutlet, NgClass } from '@angular/common';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-code-templates',\r\n  templateUrl: './code-templates.component.html',\r\n  styleUrls: ['./code-templates.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgTemplateOutlet,\r\n    NgClass,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    DepthPaddingPipe,\r\n    SortItemsPipe,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class CodeTemplatesComponent implements OnChanges {\r\n  @Input() view?: SourceView;\r\n  @Input() templates: FileAsset[];\r\n  @Output() openView: EventEmitter<ViewKey> = new EventEmitter();\r\n  @Output() createTemplate: EventEmitter<CreateTemplateParams> = new EventEmitter();\r\n  tree: TreeItem[];\r\n  toggledItemsApp: string[] = [];\r\n  toggledItemsShared: string[] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.templates != null) {\r\n      this.tree = calculateTreeAppShared(this.templates);\r\n    }\r\n    if (changes.view != null) {\r\n      const previousView: SourceView = changes.view?.previousValue;\r\n      if (previousView) {\r\n        this.toggleItem(previousView.FileName, previousView.IsShared);\r\n      }\r\n      if (this.view) {\r\n        this.showFileInTree(this.view.FileName, this.view.IsShared);\r\n      }\r\n    }\r\n  }\r\n\r\n  isToggled(path: string, isShared: boolean): boolean {\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    return toggledItems.includes(path);\r\n  }\r\n\r\n  openTemplate(path: string, isShared: boolean): void {\r\n    const viewKey: ViewKey = { key: path, shared: isShared };\r\n    this.openView.emit(viewKey);\r\n  }\r\n\r\n  toggleItem(path: string, isShared: boolean): void {\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    ArrayHelpers.toggleInArray(path, toggledItems);\r\n  }\r\n\r\n  addFile(folder?: string, isShared?: boolean): void {\r\n    const params: CreateTemplateParams = { folder, isShared };\r\n    this.createTemplate.emit(params);\r\n  }\r\n\r\n  private showFileInTree(file: string, isShared: boolean): void {\r\n    if (file == null) return;\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    if (toggledItems.includes(file)) return;\r\n\r\n    const paths = [appSharedRoot, ...file.split('/')];\r\n    let pathFromRoot = '';\r\n    for (const path of paths) {\r\n      pathFromRoot = !pathFromRoot ? path : `${pathFromRoot}/${path}`;\r\n      if (toggledItems.includes(pathFromRoot)) continue;\r\n      this.toggleItem(pathFromRoot, isShared);\r\n    }\r\n  }\r\n}\r\n","export const appSharedRoot = '' as const;\r\n\r\nexport interface CreateTemplateParams {\r\n  folder?: string;\r\n  isShared?: boolean;\r\n}\r\n","<div class=\"editor-root\" appToggleDebug [ngClass]=\"{ 'sxc-dark': monacoOptions.theme === '2sxc-dark' }\">\r\n  <div class=\"editor-side-toolbar\">\r\n    <div class=\"button\" [ngClass]=\"{ 'active': activeExplorer === Explorers.Templates }\" tippy=\"Templates\"\r\n      (click)=\"toggleExplorer(Explorers.Templates)\">\r\n      <mat-icon>file_copy</mat-icon>\r\n    </div>\r\n    <div class=\" button\" [ngClass]=\"{ 'active': activeExplorer === Explorers.Snippets }\" tippy=\"Snippets\"\r\n      (click)=\"toggleExplorer(Explorers.Snippets)\">\r\n      <mat-icon>code</mat-icon>\r\n    </div>\r\n  </div>\r\n  <app-code-templates [hidden]=\"activeExplorer !== Explorers.Templates\" [view]=\"active()?.view\"\r\n    [templates]=\"templates()\" (openView)=\"openView($event)\" (createTemplate)=\"createTemplate($event)\">\r\n  </app-code-templates>\r\n  <app-code-snippets [hidden]=\"activeExplorer !== Explorers.Snippets\" [snippets]=\"active()?.explorerSnipps\"\r\n    (insertSnippet)=\"insertSnippet($event)\">\r\n  </app-code-snippets>\r\n  <div class=\"editor-group\">\r\n    @if (tabs().length > 0) {\r\n    <div class=\"tabs-container fancy-scrollbar-dark\">\r\n      @for (tab of tabs(); track tab) {\r\n      <div class=\"tab\" [ngClass]=\"{\r\n              'active': tab.isActive,\r\n              'modified': tab.isModified,\r\n              'loading': tab.isLoading\r\n              }\" (click)=\"openView(tab.viewKey)\">\r\n        <div class=\"tab-label-container\" [tippy]=\"tab.label\" tippyShowDelay=\"750\">\r\n          @if (tab.viewKey.shared) {\r\n          <mat-icon class=\"icon-shared\">share</mat-icon>\r\n          }\r\n          <span class=\"tab-label\">{{ tab.label }}</span>\r\n        </div>\r\n        <div class=\"tab-actions-container\">\r\n          @if (tab.isModified) {\r\n          <mat-icon class=\"tab-action icon-modified\" fontSet=\"material-icons\">circle</mat-icon>\r\n          }\r\n          @if (tab.isLoading) {\r\n          <mat-spinner class=\"spinner\" mode=\"indeterminate\" diameter=\"14\" color=\"white\">\r\n          </mat-spinner>\r\n          }\r\n          <mat-icon class=\"tab-action icon-close\" tippy=\"Close\" appClickStopPropagation\r\n            (click)=\"closeEditor(tab.viewKey)\">close</mat-icon>\r\n        </div>\r\n      </div>\r\n      }\r\n    </div>\r\n    }\r\n    @if (active()?.view) {\r\n    <app-monaco-editor [filename]=\"active()?.view.FileName\" [value]=\"active()?.view.Code\"\r\n      (valueChanged)=\"codeChanged($event, active()?.viewKey)\" [options]=\"monacoOptions\"\r\n      [snippets]=\"active()?.editorSnipps\" [tooltips]=\"active()?.tooltips\" [autoFocus]=\"true\">\r\n    </app-monaco-editor>\r\n    }\r\n  </div>\r\n  @if (activeView()) {\r\n  <button mat-fab mat-elevation-z24 tippy=\"Click to save or CTRL + S\" (click)=\"save()\">\r\n    <mat-icon>done</mat-icon>\r\n  </button>\r\n  }\r\n</div>\r\n","import { Component, computed, effect, NgZone, OnDestroy, OnInit, signal, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport type * as Monaco from 'monaco-editor';\r\nimport { forkJoin, fromEvent, of, share, switchMap } from 'rxjs';\r\nimport { CreateFileDialogComponent, CreateFileDialogData, CreateFileDialogResult } from '../create-file-dialog';\r\nimport { MonacoEditorComponent } from '../monaco-editor';\r\nimport { BaseComponent } from '../shared/components/base.component';\r\nimport { keyIsShared, keyItems } from '../shared/constants/session.constants';\r\nimport { ViewOrFileIdentifier } from '../shared/models/edit-form.model';\r\nimport { Context } from '../shared/services/context';\r\nimport { CodeAndEditionWarningsComponent } from './code-and-edition-warnings/code-and-edition-warnings.component';\r\nimport { CodeAndEditionWarningsSnackBarData } from './code-and-edition-warnings/code-and-edition-warnings.models';\r\nimport { ExplorerOption, Explorers, Tab, ViewInfo, ViewKey } from './code-editor.models';\r\nimport { CreateTemplateParams } from './code-templates/code-templates.models';\r\nimport { FileAsset } from './models/file-asset.model';\r\nimport { SourceView } from './models/source-view.model';\r\nimport { SnippetsService } from './services/snippets.service';\r\nimport { SourceService } from './services/source.service';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MonacoEditorComponent as MonacoEditorComponent_1 } from '../monaco-editor/monaco-editor.component';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { CodeSnippetsComponent } from './code-snippets/code-snippets.component';\r\nimport { CodeTemplatesComponent } from './code-templates/code-templates.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgClass } from '@angular/common';\r\nimport { ClickStopPropagationDirective } from '../shared/directives/click-stop-propagation.directive';\r\nimport { RxHelpers } from '../shared/rxJs/rx.helpers';\r\nimport { TippyDirective } from '../shared/directives/tippy.directive';\r\nimport { ToggleDebugDirective } from '../shared/directives/toggle-debug.directive';\r\nimport { transient } from '../core';\r\nimport { isCtrlS } from '../edit/dialog/main/keyboard-shortcuts';\r\n\r\n@Component({\r\n  selector: 'app-code-editor',\r\n  templateUrl: './code-editor.component.html',\r\n  styleUrls: ['./code-editor.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    MatIconModule,\r\n    CodeTemplatesComponent,\r\n    CodeSnippetsComponent,\r\n    MatProgressSpinnerModule,\r\n    MonacoEditorComponent_1,\r\n    MatButtonModule,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n    ToggleDebugDirective,\r\n  ],\r\n})\r\nexport class CodeEditorComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @ViewChild(MonacoEditorComponent) private monacoEditorRef: MonacoEditorComponent;\r\n\r\n  Explorers = Explorers;\r\n  activeExplorer: ExplorerOption = Explorers.Templates;\r\n  monacoOptions: Monaco.editor.IStandaloneEditorConstructionOptions = {\r\n    theme: '2sxc-dark',\r\n    tabSize: 2,\r\n    fixedOverflowWidgets: true,\r\n  };\r\n\r\n  #sourceSvc = transient(SourceService);\r\n  #snippetSvc = transient(SnippetsService);\r\n  #titleSvc = transient(Title);\r\n\r\n  templates = signal<FileAsset[]>([]);\r\n  activeView = signal<ViewKey>(undefined);\r\n  #openViews = signal<ViewKey[]>([]);\r\n  #viewInfos = signal<ViewInfo[]>([]);\r\n\r\n  // Computed signal that finds the active view information from the list of viewInfos.\r\n  // It checks if the activeView signal matches any viewKey in the viewInfos list using objectsEqual.\r\n  active = computed(() => {\r\n    const activeView = this.activeView();\r\n    return this.#viewInfos().find(v => RxHelpers.objectsEqual(v.viewKey, activeView));\r\n  })\r\n\r\n  // Each tab object includes the viewKey, label (file name or key), active state,\r\n  // modified state (if the view's code differs from the saved code), and loading state.\r\n  // It checks for matching view information in viewInfos using objectsEqual.\r\n  tabs = computed(() => {\r\n    const openViews = this.#openViews();\r\n    const activeView = this.activeView();\r\n    const viewInfos = this.#viewInfos();\r\n    return openViews.map(viewKey => {\r\n      const viewInfo = viewInfos.find(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n      return {\r\n        viewKey,\r\n        label: viewInfo?.view?.FileName ?? viewKey.key,\r\n        isActive: RxHelpers.objectsEqual(viewKey, activeView),\r\n        isModified: viewInfo?.view?.Code !== viewInfo?.savedCode,\r\n        isLoading: viewInfo?.view == null,\r\n      } satisfies Tab;\r\n    })\r\n  });\r\n\r\n  #urlItems: ViewOrFileIdentifier[];\r\n\r\n  constructor(\r\n    private context: Context,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n    private zone: NgZone,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) {\r\n    super();\r\n    this.context.init(this.route);\r\n    const codeItems: ViewOrFileIdentifier[] = JSON.parse(sessionStorage.getItem(keyItems));\r\n    const isShared = sessionStorage.getItem(keyIsShared) === 'true' ?? false;\r\n    codeItems.forEach(codeItem => {\r\n      // remove leading \"/\" from path\r\n      if (codeItem.Path.startsWith('/')) {\r\n        codeItem.Path = codeItem.Path.substring(1);\r\n      }\r\n      codeItem.IsShared ??= isShared;\r\n    });\r\n    this.#urlItems = codeItems;\r\n\r\n    // Update ViewInfo$ ongoing\r\n    effect(() => {\r\n      const templates = this.templates();\r\n      const openViews = this.#openViews();\r\n\r\n      // If there are no templates, exit early\r\n      if (templates.length === 0) return;\r\n\r\n      let viewInfos = this.#viewInfos();   // Retrieve the current viewInfos signal\r\n\r\n      // Find the `openViews` that are not yet loaded in `viewInfos`\r\n      const notLoaded = openViews.filter(viewKey => !viewInfos.some(v => RxHelpers.objectsEqual(v.viewKey, viewKey)));\r\n      // If all openViews are loaded, exit early\r\n      if (notLoaded.length === 0) return;\r\n\r\n      // Start data requests for the not yet loaded `openViews`\r\n      forkJoin(\r\n        notLoaded.map(viewKey => {\r\n          // Mark the `viewKey` in `viewInfos` to indicate that it is being loaded\r\n          const newViewInfo: ViewInfo = {\r\n            viewKey,\r\n          };\r\n          viewInfos = [...viewInfos, newViewInfo];\r\n\r\n          // Create observables for the view, snippets, and tooltips based on the viewKey\r\n          const view$ = this.#sourceSvc.get(viewKey.key, viewKey.shared, this.#urlItems).pipe(share());\r\n          const snippets$ = view$.pipe(switchMap(view => this.#snippetSvc.getSnippets(view)));\r\n          const tooltips$ = view$.pipe(switchMap(view => this.#snippetSvc.getTooltips(view.Extension.substring(1))));\r\n          return forkJoin([of(viewKey), view$, snippets$, tooltips$]);\r\n        })\r\n      ).subscribe(results => {\r\n        let viewInfos1 = this.#viewInfos();   // Retrieve the current viewInfos signal again\r\n\r\n        results.forEach(([viewKey, view, snippets, tooltips]) => {\r\n          // Find the index of the corresponding viewKey in the current viewInfos\r\n          const selectedIndex = viewInfos1.findIndex(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n          // If the viewKey is not found, exit early\r\n          if (selectedIndex < 0) return;\r\n\r\n          // Update `viewInfos` with new data for the corresponding `viewKey`\r\n          const newViewInfo: ViewInfo = {\r\n            viewKey,\r\n            view,\r\n            explorerSnipps: snippets.sets,\r\n            editorSnipps: snippets.list,\r\n            tooltips,\r\n            savedCode: view.Code,\r\n          };\r\n          viewInfos1 = [...viewInfos1.slice(0, selectedIndex), newViewInfo, ...viewInfos1.slice(selectedIndex + 1)];\r\n\r\n          // Show warnings or other logic based on the loaded views\r\n          this.#showCodeAndEditionWarnings(viewKey, view, templates);\r\n        });\r\n\r\n        this.#viewInfos.set(viewInfos1);  // Set the new `viewInfos` in the signal\r\n      });\r\n\r\n      this.#viewInfos.set(viewInfos);   // Set the initial `viewInfos` before loading the data\r\n    },\r\n      { allowSignalWrites: true }\r\n    );\r\n\r\n    // Update title ongoing\r\n    effect(() => {\r\n      const activeView = this.activeView();\r\n      const viewInfos = this.#viewInfos();\r\n\r\n      // Check if viewInfos exist; exit early if not\r\n      if (!viewInfos) return;\r\n\r\n      // Find the active view information from viewInfos based on activeView\r\n      const active = viewInfos.find(v => RxHelpers.objectsEqual(v.viewKey, activeView));\r\n      const defaultTitle = 'Code Editor'; // Default title to use if no active view is found\r\n      // Construct the new title based on the active view or use the default title\r\n      const newTitle = active == null ? defaultTitle : `${active.view?.FileName} - ${defaultTitle}`;\r\n      const oldTitle = this.#titleSvc.getTitle(); // Get the current title from the title service\r\n\r\n      // If the new title is different from the old title, update it\r\n      if (newTitle !== oldTitle) {\r\n        console.log('newTitle', newTitle); // Log the new title\r\n        this.#titleSvc.setTitle(newTitle);  // Set the new title in the title service\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const initialViews = this.#urlItems.map(item => {\r\n      const viewKey: ViewKey = { key: item.EntityId?.toString() ?? item.Path, shared: item.IsShared };\r\n      return viewKey;\r\n    });\r\n\r\n    this.activeView.set(initialViews[0]);\r\n    this.#openViews.set(initialViews);\r\n\r\n    this.#attachListeners();\r\n\r\n    // Load templates\r\n    this.#sourceSvc.getAll().subscribe(templates => {\r\n      this.templates.set(templates);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  toggleExplorer(explorer: ExplorerOption): void {\r\n    this.activeExplorer = (this.activeExplorer !== explorer) ? explorer : null;\r\n  }\r\n\r\n  createTemplate(params: CreateTemplateParams): void {\r\n    // This FileLocationDialogComponent dialog is currently never going to be opened because it has been replaced by mat-menu\r\n    // in the code-templates.component.html template. If you want to use the dialog instead of the menu, you need to remove the\r\n    // mat-menu and replace it with a button that opens the dialog with empty parameters.\r\n    // Dialog has been replaced by menu because from update to Angular 16 CreateFileDialogComponent wasn't opening anymore if\r\n    // FileLocationDialogComponent dialog was used.\r\n    // if (params.isShared == null) {\r\n    //   const fileLocationDialogRef = this.dialog.open(FileLocationDialogComponent, {\r\n    //     autoFocus: false,\r\n    //     viewContainerRef: this.viewContainerRef,\r\n    //     width: '650px',\r\n    //   });\r\n    //   fileLocationDialogRef.afterClosed().subscribe((isShared?: boolean) => {\r\n    //     if (isShared == null) return;\r\n    //     params.isShared = isShared;\r\n    //     this.createTemplate(params);\r\n    //   });\r\n    //   return;\r\n    // }\r\n\r\n    const createFileDialogData: CreateFileDialogData = {\r\n      folder: params.folder,\r\n      global: params.isShared,\r\n      purpose: params.folder === 'api' || params.folder?.startsWith('api/') ? 'Api' : undefined,\r\n    };\r\n    const createFileDialogRef = this.dialog.open(CreateFileDialogComponent, {\r\n      autoFocus: false,\r\n      data: createFileDialogData,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n\r\n    createFileDialogRef.afterClosed().subscribe((result?: CreateFileDialogResult) => {\r\n      if (!result) return;\r\n\r\n      this.#sourceSvc.create(result.name, params.isShared, result.templateKey).subscribe(() => {\r\n        this.#sourceSvc.getAll().subscribe(files => {\r\n          this.templates.set(files);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  insertSnippet(snippet: string): void {\r\n    this.monacoEditorRef?.insertSnippet(snippet);\r\n  }\r\n\r\n  codeChanged(code: string, viewKey: ViewKey): void {\r\n    let viewInfos = this.#viewInfos();\r\n    const selectedIndex = viewInfos.findIndex(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n    const selectedViewInfo = viewInfos[selectedIndex];\r\n    const newViewInfo: ViewInfo = {\r\n      ...selectedViewInfo,\r\n      view: {\r\n        ...selectedViewInfo.view,\r\n        Code: code,\r\n      },\r\n    };\r\n    viewInfos = [...viewInfos.slice(0, selectedIndex), newViewInfo, ...viewInfos.slice(selectedIndex + 1)];\r\n    this.#viewInfos.set(viewInfos);\r\n  }\r\n\r\n  openView(viewKey: ViewKey): void {\r\n    // fix viewKey because it can be a templateId or a path, and file might already be open\r\n    viewKey = this.#viewInfos().find(\r\n      v => !RxHelpers.objectsEqual(v.viewKey, viewKey) && v.view?.FileName === viewKey.key && v.view?.IsShared === viewKey.shared\r\n    )?.viewKey ?? viewKey;\r\n\r\n    const oldActiveView = this.activeView();\r\n    if (!RxHelpers.objectsEqual(oldActiveView, viewKey)) {\r\n      this.activeView.set(viewKey);\r\n    }\r\n    const oldOpenViews = this.#openViews();\r\n    if (!oldOpenViews.some(v => RxHelpers.objectsEqual(v, viewKey))) {\r\n      const newOpenViews = [...oldOpenViews, viewKey];\r\n      this.#openViews.set(newOpenViews);\r\n    }\r\n  }\r\n\r\n  closeEditor(viewKey: ViewKey): void {\r\n    const oldOpenViews = this.#openViews();\r\n    const newOpenViews = oldOpenViews.filter(key => !RxHelpers.objectsEqual(key, viewKey));\r\n\r\n    const oldActiveView = this.activeView();\r\n    if (RxHelpers.objectsEqual(oldActiveView, viewKey)) {\r\n      const newActiveView = oldOpenViews[oldOpenViews.findIndex(v => RxHelpers.objectsEqual(v, oldActiveView)) - 1] ?? newOpenViews[0];\r\n      this.activeView.set(newActiveView);\r\n    }\r\n    this.#openViews.set(newOpenViews);\r\n  }\r\n\r\n  save(viewKey?: ViewKey): void {\r\n    viewKey ??= this.activeView();\r\n    const viewInfo = this.#viewInfos().find(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n    if (viewInfo?.view == null) return;\r\n\r\n    this.snackBar.open('Saving...');\r\n    const codeToSave = viewInfo.view.Code;\r\n    this.#sourceSvc.save(viewKey.key, viewKey.shared, viewInfo.view, this.#urlItems).subscribe({\r\n      next: res => {\r\n        if (!res) {\r\n          this.snackBar.open('Failed', null, { duration: 2000 });\r\n          return;\r\n        }\r\n\r\n        let newViewInfos = [...this.#viewInfos()];\r\n        const selectedIndex = newViewInfos.findIndex(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n        if (selectedIndex < 0) return;\r\n\r\n        const selectedViewInfo = newViewInfos[selectedIndex];\r\n        const newViewInfo: ViewInfo = {\r\n          ...selectedViewInfo,\r\n          savedCode: codeToSave,\r\n        };\r\n        newViewInfos = [...newViewInfos.slice(0, selectedIndex), newViewInfo, ...newViewInfos.slice(selectedIndex + 1)];\r\n        this.#viewInfos.set(newViewInfos);\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n      },\r\n      error: () => this.snackBar.open('Failed', null, { duration: 2000 }),\r\n    });\r\n  }\r\n\r\n  /** Show info about editions if other files with the same name exist */\r\n  #showCodeAndEditionWarnings(viewKey: ViewKey, view: SourceView, files: FileAsset[]): void {\r\n    const pathAndName = view.FileName;\r\n    const pathSeparator = pathAndName.indexOf('/') > -1 ? pathAndName.lastIndexOf('/') + 1 : 0;\r\n    const pathWithSlash = pathSeparator === 0 ? '' : pathAndName.substring(0, pathSeparator);\r\n    const fullName = pathAndName.substring(pathSeparator);\r\n    const name = fullName.substring(0, fullName.length - view.Extension.length);\r\n    const nameCode = name + '.code' + view.Extension;\r\n    // find out if we also have a code file\r\n    const codeFile = files.find(file => file.Path === pathWithSlash + nameCode && file.Shared === view.IsShared);\r\n    const otherEditions = files.filter(file => file.Path.endsWith(fullName) && file.Shared === view.IsShared).length - 1;\r\n\r\n    if (codeFile || otherEditions) {\r\n      const snackBarData: CodeAndEditionWarningsSnackBarData = {\r\n        fileName: fullName,\r\n        codeFile: codeFile?.Path,\r\n        edition: this.#urlItems\r\n          .find(i => i.EntityId?.toString() === viewKey.key && i.IsShared === view.IsShared && i.Path === view.FileName)?.Edition,\r\n        otherEditions,\r\n        openCodeBehind: false,\r\n      };\r\n      const snackBarRef = this.snackBar.openFromComponent(CodeAndEditionWarningsComponent, {\r\n        data: snackBarData,\r\n        duration: 10000,\r\n      });\r\n\r\n      snackBarRef.onAction().subscribe(() => {\r\n        if ((snackBarRef.containerInstance.snackBarConfig.data as CodeAndEditionWarningsSnackBarData).openCodeBehind) {\r\n          const openViewKey: ViewKey = { key: codeFile?.Path, shared: codeFile?.Shared };\r\n          this.openView(openViewKey);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  #attachListeners(): void {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<BeforeUnloadEvent>(window, 'beforeunload')\r\n          .subscribe(event => {\r\n            const allSaved = !this.#viewInfos().some(v => v.view != null && v.view.Code !== v.savedCode);\r\n            if (allSaved) return;\r\n            event.preventDefault();\r\n            event.returnValue = ''; // fix for Chrome\r\n          })\r\n      );\r\n      this.subscriptions.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown')\r\n          .subscribe(event => {\r\n            if (!isCtrlS(event)) return;\r\n            event.preventDefault();\r\n            this.zone.run(() => this.save());\r\n          })\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { ContentType } from '../../app-administration/models/content-type.model';\r\nimport { webApiTypeRoot } from '../../app-administration/services/content-types.service';\r\nimport { Field, FieldInputTypeOption } from './field.model';\r\nimport { InputTypeMetadata } from './input-type-metadata.model';\r\nimport { InputTypeStrict } from './input-type-catalog';\r\nimport { HttpServiceBase } from '../services/http-service-base';\r\n\r\nexport const webApiFieldsRoot = 'admin/field/';\r\nexport const webApiFieldsAll = 'admin/field/all';\r\nexport const webApiFieldsGetShared = 'admin/field/GetSharedFields';\r\n\r\n@Injectable()\r\nexport class ContentTypesFieldsService extends HttpServiceBase {\r\n\r\n  typeListRetrieve() {\r\n    return this.http.get<string[]>(this.apiUrl(webApiFieldsRoot + 'DataTypes'), {\r\n      params: { appid: this.appId }\r\n    });\r\n  }\r\n\r\n  getInputTypesList() {\r\n    return this.http\r\n      .get<InputTypeMetadata[]>(this.apiUrl(webApiFieldsRoot + 'InputTypes'), { params: { appid: this.appId } })\r\n      .pipe(\r\n        map(inputConfigs => {\r\n          const inputTypeOptions = inputConfigs.map(config => {\r\n            const option: FieldInputTypeOption = {\r\n              dataType: config.Type.substring(0, config.Type.indexOf('-')),\r\n              inputType: config.Type,\r\n              label: config.Label,\r\n              description: config.Description,\r\n              isDefault: config.IsDefault,\r\n              isObsolete: config.IsObsolete,\r\n              isRecommended: config.IsRecommended,\r\n              obsoleteMessage: config.ObsoleteMessage,\r\n              icon: config.IsDefault ? 'star' : config.IsRecommended ? 'star_outline' : null,\r\n            };\r\n            return option;\r\n          });\r\n          return inputTypeOptions;\r\n        }),\r\n      );\r\n  }\r\n\r\n  getReservedNames() {\r\n    return this.http.get<Record<string, string>>(this.apiUrl(webApiFieldsRoot + 'ReservedNames'));\r\n  }\r\n\r\n  /** Get all fields for some content type */\r\n  getFields(contentTypeStaticName: string) {\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsAll), {\r\n        params: { appid: this.appId, staticName: contentTypeStaticName },\r\n      })\r\n      .pipe(\r\n        map(fields => {\r\n          if (fields) {\r\n            for (const fld of fields) {\r\n              if (!fld.Metadata) continue;\r\n              const md = fld.Metadata;\r\n              const allMd = md.All;\r\n              const typeMd = md[fld.Type];\r\n              const inputMd = md[fld.InputType];\r\n              md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n            }\r\n          }\r\n          return fields;\r\n        }),\r\n      );\r\n  }\r\n\r\n  /** Get all possible sharable fields for a new sharing */\r\n  getShareableFields() {\r\n    return this.http.get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n      params: { appid: this.appId },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get sharable fields which are possible for this attribute.\r\n   * \r\n   * Reason is that eg. a bool-attribute can only receive metadata from a bool attribute, etc.\r\n   * \r\n   * @param attributeId the existing attributeId which will receive the new metadata\r\n   */\r\n  getShareableFieldsFor(attributeId: number) {\r\n    // TODO: @SDV - do the same as in getShareableFields()\r\n    // but add parameter attributeId to the webapi call\r\n    // I'll create the backend afterwards\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.appId, attributeId: attributeId.toString() },\r\n      });\r\n  }\r\n\r\n  addInheritedField(targetContentTypeId: number, sourceContentTypeStaticName: string, sourceFieldGuid: string, newName: string) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'AddInheritedField'), null, {\r\n      params: {\r\n        AppId: this.appId,\r\n        ContentTypeId: targetContentTypeId.toString(),\r\n        SourceType: sourceContentTypeStaticName,\r\n        SourceField: sourceFieldGuid,\r\n        name: newName,\r\n      }\r\n    });\r\n  }\r\n\r\n  share(attributeId: number, share: boolean = true) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Share'), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        attributeId: attributeId.toString(),\r\n        share,\r\n      },\r\n    });\r\n  }\r\n\r\n  inherit(attributeId: number, sourceFieldGuid: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Inherit'), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        attributeId: attributeId.toString(),\r\n        inheritMetadataOf: sourceFieldGuid,\r\n      },\r\n    });\r\n  }\r\n\r\n  reOrder(idArray: number[], contentType: ContentType) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'Sort'), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentType.Id.toString(),\r\n        order: JSON.stringify(idArray),\r\n      },\r\n    });\r\n  }\r\n\r\n  setTitle(item: Field, contentType: ContentType) {\r\n    return this.http.post<null>(this.apiUrl(webApiTypeRoot + 'SetTitle'), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  rename(fieldId: number, contentTypeId: number, newName: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Rename'), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentTypeId.toString(),\r\n        attributeId: fieldId.toString(),\r\n        newName,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(item: Field, contentType: ContentType) {\r\n    if (item.IsTitle) {\r\n      throw new Error('Can\\'t delete Title');\r\n    }\r\n\r\n    return this.http.delete<boolean>(this.apiUrl(webApiFieldsRoot + 'Delete'), {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  add(newField: Partial<Field>, contentTypeId: number) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'Add'), null, {\r\n      params: {\r\n        AppId: this.appId,\r\n        ContentTypeId: contentTypeId.toString(),\r\n        Id: newField.Id.toString(),\r\n        Type: newField.Type,\r\n        InputType: newField.InputType,\r\n        StaticName: newField.StaticName,\r\n        IsTitle: newField.IsTitle.toString(),\r\n        Index: newField.SortOrder.toString(),\r\n      }\r\n    });\r\n  }\r\n\r\n  updateInputType(id: number, staticName: string, inputType: InputTypeStrict) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'InputType'), null, {\r\n      params: { appId: this.appId, attributeId: id.toString(), field: staticName, inputType }\r\n    });\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}