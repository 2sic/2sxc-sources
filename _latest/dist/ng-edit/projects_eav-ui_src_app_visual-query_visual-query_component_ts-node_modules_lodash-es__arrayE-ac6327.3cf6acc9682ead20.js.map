{"version":3,"file":"projects_eav-ui_src_app_visual-query_visual-query_component_ts-node_modules_lodash-es__arrayE-ac6327.3cf6acc9682ead20.js","mappings":"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","names":["ExportAppService","HttpServiceBase","getAppInfo","initial","this","getSignal","params","appid","appId","zoneId","exportAppUrl","apiUrl","webApiAppRoot","exportForVersionControl","includeContentGroups","resetAppGuid","withFiles","getHttpApiUrl","toString","withPortalFiles","__ngFactoryType__","factory","ɵfac","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","split","onerror","error","readAsText","MousedownStopPropagationDirective","onMousedown","event","stopPropagation","selectors","hostBindings","rf","ctx","i0","$event","ExportAppPartsService","getContentInfo","scope","exportParts","contentTypeIds","entityIds","templateIds","url","webApiAppPartsRoot","join","window","open","ImportAppService","importApp","changedName","retryOnDuplicate","formData","FormData","append","http","post","pipe","switchMap","Messages","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","of","__WEBPACK_DEFAULT_EXPORT__","getPrototype","overArg","Object","getPrototypeOf","ViewsService","getAll","delete","id","Id","import","export","getPolymorphism","getUsage","guid","isEscape","key","isCtrlS","ctrlKey","metaKey","guiTypes","App","Name","Label","Icon","UiHint","Cache","Filter","Logic","Lookup","Modify","Security","Sort","Source","Target","Unknown","Debug","System","QueryDefinitionService","fetchPipeline","pipelineEntityId","dataSources","getHttp","webApiQueryGet","map","pipelineModel","DataSources","length","buildDefaultModel","fixPipelineDataSources","templateDataSources","eavConstants","pipelineDesigner","defaultPipeline","templateDS","dataSource","find","ds","PartAssemblyAndType","push","Description","EntityGuid","EntityId","undefined","VisualDesignerData","Pipeline","StreamWiring","streamWiring","pipelineDataSources","some","pipelineDS","outDataSource","outDs","pipelineDataSource","Top","Left","fetchDataSources","webApiQueryDataSources","ContentType","Difficulty","dataSourceDifficulties","default","DynamicIn","DynamicOut","EnableConfig","HelpLink","In","Out","PrimaryType","TypeNameForUi","typeNameFilter","input","format","globalParts","classFullNameParts","savePipeline","pipeline","webApiQuerySave","newPipelineModel","runPipeline","top","webApiQueryRun","debugStream","source","sourceOut","webApiQueryDebugStream","from","out","ctx_r0","name","sourceName","option_r3","_r2","$implicit","show","QueryResultComponent_For_20_Conditional_2_Template","QueryResultComponent_For_20_Conditional_3_Template","param_r4","QueryResultComponent_Conditional_24_div_1_Template","QueryResultComponent_Conditional_24_For_5_Template","parameters","source_r5","value","Definition","config_r6","QueryResultComponent_For_39_Conditional_2_Template","QueryResultComponent_For_39_For_10_Template","Guid","Type","Configuration","Error","stream_r7","SourceOut","TargetIn","Count","QueryResultComponent","constructor","dialogData","dialog","visualQueryService","ngOnInit","Params","filter","el","testParams","TestParameters","concat","timeUsed","QueryTimer","Milliseconds","ticksUsed","Ticks","optionsForTop","Query","sources","Sources","streams","Streams","closeDialog","close","original","MAT_DIALOG_DATA","i1","i2","decls","vars","consts","template","QueryResultComponent_Conditional_4_Template","QueryResultComponent_div_13_Template","QueryResultComponent_Conditional_16_Template","QueryResultComponent_Conditional_17_Template","QueryResultComponent_For_20_Template","QueryResultComponent_Conditional_24_Template","QueryResultComponent_div_26_Template","QueryResultComponent_For_39_Template","QueryResultComponent_div_42_Template","QueryResultComponent_For_55_Template","MatButtonModule","i3","MatIconModule","i4","MatTabsModule","i5","JsonPipe","KeyValuePipe","styles","StreamErrorResultComponent","errorData","openInsights","$2sxc","MatDialogActions","VisualQueryStateService","ServiceBase","#contentTypesSvc","#metadataSvc","#queryDefSvc","#dialogRoute","#titleSvc","#pipelineId","#refreshPipeline","#refreshDataSourceConfigs","snackBar","matDialog","viewContainerRef","zone","changeDetectorRef","super","transient","ContentTypesService","MetadataService","DialogRoutingService","Title","signal","dataSourceConfigs","putEntityCountOnConnections$","Subject","parseInt","getParam","ngOnDestroy","complete","init","#fetchDataSources","#fetchPipeline","#attachKeyboardSave","doOnDialogClosed","editPipelineEntity","#savePipeline","form","items","EditPrep","editId","formUrl","convertFormToUrl","navRelative","saveAndRun","save","run","showDataSourceDetails","showDetails","query","cloneDeep","designerData","JsonHelpers","tryParse","ShowDataSourceDetails","JSON","stringify","set","addDataSource","removeDataSource","pipelineDataSourceGuid","connections","streamsOut","StreamsOut","renameDataSource","changeDataSourceDescription","description","changeConnections","changeDataSourcePosition","position","#calculateDataSourceConfigs","forEach","Metadata","metadataItem","entries","attributeName","attributeValue","includes","Array","isArray","editDataSource","contentTypeName","targetType","keyType","metadata","entity","getMetadata","subscribe","Items","retrieveContentType","next","contentType","duration","newMetadata","callback","pipelineResult","queryResult","#showQueryResult","console","warn","setTimeout","stream","#showStreamErrorResult","pipelineId","streamResult","_","refreshPipeline","refreshDataSourceConfigs","showSnackBar","setTitle","autoFocus","backdropClass","closeOnNavigation","data","panelClass","markForCheck","ErrorData","runOutsideAngular","subscriptions","add","fromEvent","snapshot","firstChild","preventDefault","dataSource_r6","_r5","ctx_r1","AddExplorerComponent_Conditional_0_For_6_Conditional_5_For_2_Template","trackDataSources","group_r4","_r3","toggleItem","AddExplorerComponent_Conditional_0_For_6_Conditional_5_Template","tmp_13_0","toggledItems","_r1","toggleDifficulty","AddExplorerComponent_Conditional_0_For_6_Template","trackGroups","sorted","AddExplorerComponent","#difficulties","#difficulty","computed","filterAndSortDataSources","maxDifficulty","filtered","sort","a","b","toLocaleLowerCase","localeCompare","type","difficulty","checked","advanced","item","ArrayHelpers","toggleInArray","index","AddExplorerComponent_Conditional_0_Template","MatSlideToggleModule","TippyDirective","logSpecs","all","getEndpointOverlays","getEndpointInfo","buildSourceEndpoint","buildTargetEndpoint","EndpointsHelper","plumb","log","classLog","isSource","fnIf","r","location","label","cssClass","endpointName","isDynamic","l","required","trimmed","trim","endsWith","substring","style","sourceEndpoint","paintStyle","fill","radius","maxConnections","anchor","faces","overlays","events","click","endpointOrOverlay","onChangeLabel","targetEndpoint","isTarget","dropOptions","hoverClass","activeClass","RenameStreamComponent_Conditional_9_Conditional_4_Template","RenameStreamComponent_Conditional_9_Conditional_5_Template","pipelineResultExists","controls","touched","errors","scopeOption_r3","RenameStreamComponent_Conditional_10_Conditional_0_For_5_Template","scopeOptions","labelOption_r4","RenameStreamComponent_Conditional_10_Conditional_4_For_2_Template","labelOptions","RenameStreamComponent_Conditional_10_Conditional_0_Template","RenameStreamComponent_Conditional_10_Conditional_4_Template","RenameStreamComponent_Conditional_10_Conditional_5_Template","toggleGuidedLabel","RenameStreamComponent_Conditional_10_Conditional_13_Template","advancedMode","guidedLabel","_c0","toggleAdvancedMode","RenameStreamComponent","BaseComponent","hostClass","#buildForm","rename","formValue","getRawValue","UntypedFormGroup","UntypedFormControl","Validators","scopes","valueChanges","startWith","distinctUntilChanged","values","Scope","patchValue","getScopes","s","o","hostVars","RenameStreamComponent_Conditional_9_Template","RenameStreamComponent_Conditional_10_Template","RenameStreamComponent_Conditional_13_Template","valid","FormsModule","ReactiveFormsModule","MatFormFieldModule","i6","MatInputModule","i7","MatSelectModule","i8","i9","MatOptionModule","NgClass","i10","FieldHintComponent","ClickStopPropagationDirective","encapsulation","addEndpoint","dataSrcIdPrefix","Plumber","#instance","#lineCount","#linePaintDefault","#lineColors","#maxCols","#uuidColorMap","#bulkDelete","#dialog","#endpoints","jsPlumbRoot","onConnectionsChanged","onDragend","onDebugStream","stroke","strokeWidth","outlineStroke","outlineWidth","jsPlumb","getInstance","#getInstanceDefaults","batch","#initDomDataSources","#initWirings","#bindEvents","repaintEverything","destroy","reset","unbindContainer","removeEndpointsOnDataSource","elementId","selectEndpoints","element","getAllConnections","connection","From","sourceId","replace","endpoints","getOverlay","To","targetId","getStreamsOut","target","each","endpoint","putEntityCountOnConnections","sourceElementId","targetElementId","fromUuid","toUuid","getEndpoint","getUuid","setLabel","overlay","AllowEdit","#nextLinePaintStyle","uuid","assign","container","Container","Connector","curviness","PaintStyle","HoverPaintStyle","fnCond","domDataSource","querySelector","draggable","grid","stop","finalPos","outCount","#addEndpoint","inCount","in","targetEndpointUnlimited","makeTarget","makeSource","end","fn","wirings","inGroups","groupBy","wire","outGroups","pipeDataSource","connect","uuids","message","to","isIn","queryDs","count","d","connectionList","hasDynamic","endpointInfo","angled","model","enabled","addClass","width","afterClosed","newLabel","bind","info","deleteEndpoint","deleteConnection","fireEvent","endpointLabel","labelPrompt","getLabel","getEndpoints","canvas","classList","contains","Math","floor","random","arr","reduce","groups","dataSource_r3","ctx_r3","configureDataSource","openHelp","typeInfos","_r6","remove","config_r7","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_For_3_Template","vsSvc","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_5_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_6_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_8_Template","editName","editDescription","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_24_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_25_Template","_c2","Width","_c3","tmp_16_0","isOutDataSource","tmp_24_0","getTypeName","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Template","PlumbEditorComponent_Conditional_0_Conditional_2_Template","hardReset","ngAfterViewInit","PlumbEditorComponent","#plumber","#scriptLoaded$","#queryDefinitionSvc","BehaviorSubject","calculateTypeInfos","typeInfo","loadScripts","test","src","domDataSourcesLoaded$","domDataSourcesRef","changes","combineLatest","scriptLoaded","domDataSourcesLoaded","domRootRef","nativeElement","partAssemblyAndType","confirm","newName","newDescription","viewQuery","PlumbEditorComponent_Conditional_0_Template","NgStyle","param_r3","RunExplorerComponent_Conditional_0_Conditional_20_For_2_Template","tmp_2_0","RunExplorerComponent_Conditional_0_Conditional_24_For_2_Template","visualDesignerDataSig","RunExplorerComponent_Conditional_0_Conditional_26_Conditional_0_For_8_Template","warningSig","RunExplorerComponent_Conditional_0_Conditional_26_Conditional_0_Template","saveAndRunQuery","editPipeline","openParamsHelp","RunExplorerComponent_Conditional_0_Conditional_20_Template","RunExplorerComponent_Conditional_0_Conditional_24_Template","RunExplorerComponent_Conditional_0_Conditional_25_Template","RunExplorerComponent_Conditional_0_Conditional_26_Template","RunExplorerComponent_Conditional_0_Conditional_27_Template","openRestApi","tmp_1_0","RunExplorerComponent","#dialogRouter","context","calculateWarnings","warnings","queryParams","param","midMatch","exec","testMid","urlMid","moduleId","queryGuid","GoToDevRest","getUrlQueryDialog","RunExplorerComponent_Conditional_0_Template","VisualQueryComponent","route","explorer","activeExplorer","toggleExplorer","RouterOutlet","array","indexOf","splice","arrayEach","iteratee","getAllSig","getAllRes","importQuery","clonePipeline","update","PipelinesService","webApiEntityList","sig","res","httpResource","defaultValue","obs","fileBase64","AppId","ContentBase64","success","Success","webApiTypeRoot","webApiTypeGet","webApiTypes","webApiTypeScopes","nameId","contentTypeId","getTypeSig","retrieveContentTypes","getTypesSig","scopesData","old","keys","getScopesSig","scopesSignal","getScopesV2","staticName","NameId","files","createGhost","sourceNameId","ImportAppPartsService","importAppParts","resetApp","objectCreate","create","object","proto","isObject","prototype"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts","./projects/eav-ui/src/app/shared/directives/mousedown-stop-propagation.directive.ts","./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./node_modules/lodash-es/_getPrototype.js","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/edit/dialog/main/keyboard-shortcuts.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.helpers.ts","./projects/eav-ui/src/app/visual-query/services/query-definition.service.ts","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.html","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.html","./projects/eav-ui/src/app/visual-query/services/visual-query.service.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.html","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/endpoints.helper.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumber.helper.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.html","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.html","./projects/eav-ui/src/app/shared/helpers/array.helpers.ts","./node_modules/lodash-es/_arrayEach.js","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./node_modules/lodash-es/_baseCreate.js"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { AppInfo } from '../models/app-info.model';\r\n\r\n const webApiAppRootStatistics = 'admin/app/Statistics';\r\n const webApiAppRootSaveData = 'admin/app/SaveData';\r\n\r\n\r\n@Injectable()\r\nexport class ExportAppService extends HttpServiceBase {\r\n\r\n  getAppInfo(initial: AppInfo) {\r\n    return this.getSignal<AppInfo>(webApiAppRootStatistics, {\r\n      params: { appid: this.appId, zoneId: this.zoneId },\r\n    }, initial);\r\n  }\r\n\r\n  /** Generate the export app path. It can be extended with additional parameters */\r\n  exportAppUrl() {\r\n    return `${this.apiUrl(`${webApiAppRoot}Export`)}?appId=${this.appId}&zoneId=${this.zoneId}`;\r\n  }\r\n\r\n  exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }) {\r\n    // return this.get<boolean>(webApiAppRoot + 'SaveData', {\r\n    return this.getHttpApiUrl<boolean>(webApiAppRootSaveData, {\r\n      params: {\r\n        appid: this.appId,\r\n        zoneId: this.zoneId,\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appMousedownStopPropagation]',\r\n})\r\nexport class MousedownStopPropagationDirective {\r\n  @HostListener('mousedown', ['$event'])\r\n  onMousedown(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\n\r\nconst webApiAppPartsGet = 'admin/appParts/get';\r\n@Injectable()\r\nexport class ExportAppPartsService extends HttpServiceBase {\r\n\r\n  getContentInfo(scope: string, initial: ContentInfo) {\r\n    return this.getSignal<ContentInfo>(webApiAppPartsGet, {\r\n      params: { appid: this.appId, zoneId: this.zoneId, scope }\r\n    }, initial);\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.appId\r\n      + '&zoneId=' + this.zoneId\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService extends HttpServiceBase {\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.zoneId }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","import { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViews = 'admin/view/all';\r\nconst webApiViewDelete = 'admin/view/delete';\r\nconst webApiViewImport = 'admin/view/import';\r\nconst webApiViewPolymorph = 'admin/view/polymorphism';\r\nconst webApiViewUsage = 'admin/view/usage';\r\nconst webApiJson = 'admin/view/json';\r\n\r\n\r\n@Injectable()\r\nexport class ViewsService extends HttpServiceBase {\r\n\r\n  getAll() {\r\n    return this.getSignal<View[]>(webApiViews, {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.getHttpApiUrl<boolean>(webApiViewDelete, {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.apiUrl(webApiJson)\r\n      + '?appId=' + this.appId\r\n      + '&viewId=' + id;\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.getSignal<Polymorphism>(webApiViewPolymorph, {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.getSignal<ViewUsage[]>(webApiViewUsage, {\r\n      params: { appId: this.appId, guid }\r\n    });\r\n  }\r\n\r\n}\r\n","\r\nexport function isEscape(event: KeyboardEvent): boolean {\r\n  return event.key === 'Escape';\r\n}\r\n\r\nexport function isCtrlS(event: KeyboardEvent): boolean {\r\n  return (event.key === 's' || event.key === 'S') && (event.ctrlKey || event.metaKey);\r\n}\r\n","import { DataSource, PipelineDataSource } from '../models';\r\nimport { GuiTypes, TypeInfo, TypeInfos } from './plumb-editor.models';\r\n\r\nexport const guiTypes: GuiTypes = {\r\n  App: { Name: 'App', Label: 'App DataSources', Icon: 'star', UiHint: 'DataSources from the current App' },\r\n  Cache: { Name: 'Cache', Icon: 'history', UiHint: 'Caching of data' },\r\n  Filter: { Name: 'Filter', Icon: 'filter_list', UiHint: 'Filter data - usually returning less items than came in' },\r\n  Logic: { Name: 'Logic', Icon: 'share', UiHint: 'Logic operations - usually choosing between different streams' },\r\n  Lookup: { Name: 'Lookup', Icon: 'search', UiHint: 'Lookup operation - usually looking for other data based on a criteria' },\r\n  Modify: { Name: 'Modify', Icon: 'edit_attributes', UiHint: 'Modify data - usually changing, adding or removing values' },\r\n  Security: { Name: 'Security', Icon: 'account_circle', UiHint: 'Security - usually limit what the user sees based on his identity' },\r\n  Sort: { Name: 'Sort', Icon: 'sort', UiHint: 'Sort the items' },\r\n  Source: { Name: 'Source', Icon: 'cloud_upload', UiHint: 'Source of new data - usually SQL, CSV or similar' },\r\n  Target: { Name: 'Target', Icon: 'adjust', UiHint: 'Target - usually just a destination of data' },\r\n  Unknown: { Name: 'Unknown', Icon: 'fiber_manual_record', UiHint: 'Unknown type' },\r\n  Debug: { Name: 'Debug', Icon: 'bug_report', UiHint: 'Debugging Tools'},\r\n  System: { Name: 'System', Icon: 'military_tech', UiHint: 'System Data' },\r\n};\r\n\r\nexport function calculateTypeInfos(pipelineDataSources: PipelineDataSource[], dataSources: DataSource[]) {\r\n  const typeInfos: TypeInfos = {};\r\n\r\n  for (const pipelineDataSource of pipelineDataSources) {\r\n    let typeInfo: TypeInfo;\r\n    const ds = dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    if (ds) {\r\n      typeInfo = { ...(ds.PrimaryType ? guiTypes[ds.PrimaryType] : guiTypes.Unknown) };\r\n      if (ds.Icon != null) { typeInfo.Icon = ds.Icon; }\r\n      if (ds.DynamicIn != null) { typeInfo.DynamicIn = ds.DynamicIn; }\r\n      if (ds.DynamicOut != null) { typeInfo.DynamicOut = ds.DynamicOut; }\r\n      if (ds.HelpLink != null) { typeInfo.HelpLink = ds.HelpLink; }\r\n      if (ds.EnableConfig != null) { typeInfo.EnableConfig = ds.EnableConfig; }\r\n      if (ds.UiHint != null) { typeInfo.UiHint = ds.UiHint; }\r\n    }\r\n    if (!typeInfo)\r\n      typeInfo = { ...guiTypes.Unknown };\r\n    typeInfos[pipelineDataSource.EntityGuid] = typeInfo;\r\n  }\r\n\r\n  return typeInfos;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { webApiQueryDataSources, webApiQueryDebugStream, webApiQueryGet, webApiQueryRun, webApiQuerySave } from '../../app-administration/services';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult } from '../models';\r\n\r\n@Injectable()\r\nexport class QueryDefinitionService extends HttpServiceBase {\r\n\r\n  fetchPipeline(pipelineEntityId: number, dataSources: DataSource[]) {\r\n    return this.getHttp<PipelineModel>(webApiQueryGet, {\r\n      params: { appId: this.appId, id: pipelineEntityId.toString() }\r\n    }).pipe(\r\n      map(pipelineModel => {\r\n        // if pipeline is new, populate it with default model\r\n        if (!pipelineModel.DataSources.length) {\r\n          this.buildDefaultModel(pipelineModel, dataSources);\r\n        }\r\n        this.fixPipelineDataSources(pipelineModel.DataSources);\r\n        return pipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  private buildDefaultModel(pipelineModel: PipelineModel, dataSources: DataSource[]) {\r\n    const templateDataSources = eavConstants.pipelineDesigner.defaultPipeline.dataSources;\r\n    for (const templateDS of templateDataSources) {\r\n      const dataSource = dataSources.find(ds => ds.PartAssemblyAndType === templateDS.PartAssemblyAndType);\r\n      const pipelineDataSource: PipelineDataSource = {\r\n        Description: '',\r\n        EntityGuid: templateDS.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: dataSource.Name,\r\n        PartAssemblyAndType: templateDS.PartAssemblyAndType,\r\n        VisualDesignerData: templateDS.VisualDesignerData,\r\n      };\r\n      pipelineModel.DataSources.push(pipelineDataSource);\r\n    }\r\n\r\n    pipelineModel.Pipeline.StreamWiring = eavConstants.pipelineDesigner.defaultPipeline.streamWiring;\r\n  }\r\n\r\n  private fixPipelineDataSources(pipelineDataSources: PipelineDataSource[]) {\r\n    const outDataSourceExists = pipelineDataSources.some(\r\n      pipelineDS => pipelineDS.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    );\r\n    if (!outDataSourceExists) {\r\n      const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n      const outDsConst: PipelineDataSource = {\r\n        Description: outDs.Description,\r\n        EntityGuid: outDs.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: outDs.Name,\r\n        PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n        VisualDesignerData: outDs.VisualDesignerData,\r\n      };\r\n      pipelineDataSources.push(outDsConst);\r\n    }\r\n\r\n    for (const pipelineDataSource of pipelineDataSources) {\r\n      pipelineDataSource.VisualDesignerData ??= { Top: 50, Left: 50 };\r\n    }\r\n  }\r\n\r\n  fetchDataSources() {\r\n    return this.getHttp<DataSource[]>(webApiQueryDataSources, {\r\n      params: {\r\n        appid: this.appId,\r\n        zoneId: this.zoneId,\r\n      },\r\n    }).pipe(\r\n      map(dataSources => {\r\n        const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n        const outDsConst: DataSource = {\r\n          ContentType: undefined,\r\n          Difficulty: eavConstants.pipelineDesigner.dataSourceDifficulties.default,\r\n          DynamicIn: true,\r\n          DynamicOut: false,\r\n          EnableConfig: undefined,\r\n          HelpLink: undefined,\r\n          Icon: undefined,\r\n          In: outDs.In,\r\n          Name: outDs.Name,\r\n          Out: undefined,\r\n          PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n          PrimaryType: outDs.PrimaryType,\r\n          TypeNameForUi: undefined,\r\n          UiHint: undefined,\r\n        };\r\n        dataSources.push(outDsConst);\r\n        return dataSources;\r\n      }),\r\n    );\r\n  }\r\n\r\n  typeNameFilter(input: string, format: 'className' | 'classFullName') {\r\n    const globalParts = input.split(', ');\r\n\r\n    switch (format) {\r\n      case 'classFullName':\r\n        const classFullName = globalParts[0];\r\n        return classFullName;\r\n      case 'className':\r\n        const classFullNameParts = globalParts[0].split('.');\r\n        const className = classFullNameParts[classFullNameParts.length - 1];\r\n        return className;\r\n      default:\r\n        return input;\r\n    }\r\n  }\r\n\r\n  /** Save the current query and reload entire definition as returned from server */\r\n  savePipeline(pipelineModel: PipelineModel) {\r\n    const pipeline = pipelineModel.Pipeline;\r\n    const dataSources = pipelineModel.DataSources;\r\n\r\n    return this.http.post<PipelineModel>(\r\n      webApiQuerySave,\r\n      { pipeline, dataSources },\r\n      { params: { appId: this.appId, Id: pipeline.EntityId.toString() } }\r\n    ).pipe(\r\n      map(newPipelineModel => {\r\n        this.fixPipelineDataSources(newPipelineModel.DataSources);\r\n        return newPipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  runPipeline(id: number, top: number) {\r\n    return this.getHttp<PipelineResult>(webApiQueryRun, {\r\n      params: { appId: this.appId, id: id.toString(), top: top.toString() }\r\n    });\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  debugStream(id: number, source: string, sourceOut: string, top: number) {\r\n    return this.getHttp<PipelineResult>(webApiQueryDebugStream, {\r\n      params: { appId: this.appId, id: id.toString(), from: source, out: sourceOut, top: top.toString() }\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      Query Results\r\n      @if (debugStream) {\r\n        for Stream: \"{{ debugStream.name }}\" on Source: \"{{ debugStream.sourceName }}\"\r\n      }\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"eav-dialog-content\">\r\n    <p>\r\n      The Full result was logged to the Browser Console. Further down you'll find more debug-infos. Executed in {{ timeUsed }}ms ({{\r\n        ticksUsed\r\n      }}\r\n      ticks)\r\n    </p>\r\n\r\n    <mat-tab-group dynamicHeight color=\"accent\" class=\"eav-tab-group\">\r\n      <!-- Results -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Results\">\r\n          <span>Results</span>\r\n        </div>\r\n        <div class=\"eav-tab-description\">\r\n          <div>\r\n            @if (top === 0) {\r\n              Showing All results\r\n            }\r\n            @if (top !== 0) {\r\n              Showing top {{ top }} results\r\n            }\r\n          </div>\r\n          <div>\r\n            @for (option of optionsForTop; track option) {\r\n              <button mat-button (click)=\"show(option)\">\r\n                Show\r\n                @if (option === 0) {\r\n                  All\r\n                }\r\n                @if (option !== 0) {\r\n                  {{ option }}\r\n                }\r\n              </button>\r\n            }\r\n          </div>\r\n        </div>\r\n        <pre class=\"eav-pre-scroll\">{{ result | json }}</pre>\r\n      </mat-tab>\r\n\r\n      @if (parameters?.length) {\r\n        <!-- Parameters -->\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Parameters\">\r\n            <span>Parameters</span>\r\n          </div>\r\n\r\n          <div class=\"eav-tab-content\">\r\n            <ul>\r\n              @for (param of parameters; track param) {\r\n                <li>{{ param }}</li>\r\n              }\r\n            </ul>\r\n          </div>\r\n        </mat-tab>\r\n      }\r\n\r\n      <!-- Sources -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Sources\">\r\n          <span>Sources</span>\r\n        </div>\r\n\r\n        <div class=\"eav-tab-content\">\r\n          <table>\r\n            <tr>\r\n              <th>Name and Guid</th>\r\n              <th>Type</th>\r\n              <th>Configuration</th>\r\n              <th>Error</th>\r\n            </tr>\r\n            @for (source of sources | keyvalue; track source) {\r\n              <tr>\r\n                <td>\r\n                  @if (source.value.Definition?.Name) {\r\n                    <div>{{ source.value.Definition?.Name }}</div>\r\n                  }\r\n                  <pre>{{ source.value.Guid }}</pre>\r\n                </td>\r\n                <td>{{ source.value.Type }}</td>\r\n                <td>\r\n                  <ol>\r\n                    @for (config of source.value.Configuration | keyvalue; track config) {\r\n                      <li>\r\n                        <b>{{ config.key }}</b\r\n                        >=<em>{{ config.value }}</em>\r\n                      </li>\r\n                    }\r\n                  </ol>\r\n                </td>\r\n                <td>{{ source.value.Error }}</td>\r\n              </tr>\r\n            }\r\n          </table>\r\n        </div>\r\n      </mat-tab>\r\n\r\n      <!-- Streams -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Streams\">\r\n          <span>Streams</span>\r\n        </div>\r\n\r\n        <div class=\"eav-tab-content\">\r\n          <table>\r\n            <tr>\r\n              <th>Source</th>\r\n              <th>Target</th>\r\n              <th>Items</th>\r\n              <th>Error</th>\r\n            </tr>\r\n            @for (stream of streams; track stream) {\r\n              <tr>\r\n                <td>\r\n                  <pre>{{ stream.Source + ':' + stream.SourceOut }}</pre>\r\n                </td>\r\n                <td>\r\n                  <pre>{{ stream.Target + ':' + stream.TargetIn }}</pre>\r\n                </td>\r\n                <td>{{ stream.Count }}</td>\r\n                <td>{{ stream.Error }}</td>\r\n              </tr>\r\n            }\r\n          </table>\r\n        </div>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n","import { JsonPipe, KeyValuePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { DebugStreamInfo, PipelineResultQuery, PipelineResultSources, PipelineResultStream } from '../models';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { QueryResultDialogData } from './query-result.models';\r\n\r\n@Component({\r\n    selector: 'app-query-result',\r\n    templateUrl: './query-result.component.html',\r\n    styleUrls: ['./query-result.component.scss'],\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatTabsModule,\r\n        JsonPipe,\r\n        KeyValuePipe,\r\n    ]\r\n})\r\nexport class QueryResultComponent implements OnInit {\r\n  parameters: string[];\r\n  timeUsed: number;\r\n  ticksUsed: number;\r\n  top: number;\r\n  optionsForTop: number[];\r\n  result: PipelineResultQuery;\r\n  debugStream: DebugStreamInfo;\r\n  sources: PipelineResultSources;\r\n  streams: PipelineResultStream[];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: QueryResultDialogData,\r\n    private dialog: MatDialogRef<QueryResultComponent>,\r\n    private visualQueryService: VisualQueryStateService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const pipeline = this.visualQueryService.pipelineModel().Pipeline;\r\n    const params = (pipeline.Params?.split('\\n') ?? []).filter(el => !!el);\r\n    const testParams = (pipeline.TestParameters?.split('\\n') ?? []).filter(el => !!el);\r\n    this.parameters = [].concat(params, testParams);\r\n    this.timeUsed = this.dialogData.result.QueryTimer.Milliseconds;\r\n    this.ticksUsed = this.dialogData.result.QueryTimer.Ticks;\r\n    this.top = this.dialogData.top;\r\n    this.optionsForTop = [25, 100, 1000, 0];\r\n    this.result = this.dialogData.result.Query;\r\n    this.debugStream = this.dialogData.debugStream;\r\n    this.sources = this.dialogData.result.Sources;\r\n    this.streams = this.dialogData.result.Streams;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  show(top: number) {\r\n    if (top === this.top) return;\r\n\r\n    if (this.debugStream) {\r\n      this.visualQueryService.debugStream(this.debugStream.original, top);\r\n    } else {\r\n      this.visualQueryService.runPipeline(top);\r\n    }\r\n\r\n    this.closeDialog();\r\n  }\r\n}\r\n","import { JsonPipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MAT_DIALOG_DATA, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { StreamErrorData } from '../models';\r\nimport { StreamErrorResultDialogData } from './stream-error-result.models';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n    selector: 'app-stream-error-result',\r\n    templateUrl: './stream-error-result.component.html',\r\n    styleUrls: ['./stream-error-result.component.scss'],\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatDialogActions,\r\n        JsonPipe,\r\n    ]\r\n})\r\nexport class StreamErrorResultComponent implements OnInit {\r\n  errorData: StreamErrorData;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: StreamErrorResultDialogData,\r\n    private dialog: MatDialogRef<StreamErrorResultComponent>,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.errorData = this.dialogData.errorData;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/logs?key=web-api-query'), '_blank');\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Stream Error Results</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <pre>{{ errorData | json }}</pre>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button class=\"eav-button__with-icon\" tippy=\"Open 2sxc Insights\" (click)=\"openInsights()\">\r\n      <mat-icon class=\"eav-icon\">speed</mat-icon>\r\n      <span>Insights</span>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Injectable, NgZone, OnDestroy, signal, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { filter, fromEvent, Subject } from 'rxjs';\r\nimport { ContentTypesService } from '../../app-administration/services/content-types.service';\r\nimport { MetadataService } from '../../permissions/services/metadata.service';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep } from '../../shared/models/edit-form.model';\r\nimport { QueryDefinitionService } from './query-definition.service';\r\n// tslint:disable-next-line:max-line-length\r\nimport { transient } from '../../../../../core';\r\nimport { isCtrlS } from '../../edit/dialog/main/keyboard-shortcuts';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { ServiceBase } from '../../shared/services/service-base';\r\nimport { DataSource, DataSourceConfig, DataSourceConfigs, DebugStreamInfo, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { QueryResultComponent } from '../query-result/query-result.component';\r\nimport { QueryResultDialogData } from '../query-result/query-result.models';\r\nimport { StreamErrorResultComponent } from '../stream-error-result/stream-error-result.component';\r\nimport { StreamErrorResultDialogData } from '../stream-error-result/stream-error-result.models';\r\n\r\n/**\r\n * Service containing the state for the visual query.\r\n * It's shared, so should not be used with transient(...);\r\n */\r\n@Injectable()\r\nexport class VisualQueryStateService extends ServiceBase implements OnDestroy {\r\n\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n  #metadataSvc = transient(MetadataService);\r\n  #queryDefSvc = transient(QueryDefinitionService);\r\n  #dialogRoute = transient(DialogRoutingService);\r\n  #titleSvc = transient(Title);\r\n\r\n  pipelineModel = signal<PipelineModel>(null);\r\n  dataSources = signal<DataSource[]>(null);\r\n  dataSourceConfigs = signal<DataSourceConfigs>({});\r\n\r\n  putEntityCountOnConnections$ = new Subject<PipelineResult>();\r\n\r\n  queryResult?: PipelineResult;\r\n\r\n  #pipelineId = parseInt(this.#dialogRoute.getParam('pipelineId'), 10);\r\n  #refreshPipeline = false;\r\n  #refreshDataSourceConfigs = false;\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private zone: NgZone,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.putEntityCountOnConnections$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  init() {\r\n    this.#fetchDataSources(() => this.#fetchPipeline(true, true, false));\r\n    this.#attachKeyboardSave();\r\n    this.#dialogRoute.doOnDialogClosed(() => {\r\n      if (this.#refreshPipeline || this.#refreshDataSourceConfigs)\r\n        this.#fetchPipeline(this.#refreshPipeline, this.#refreshDataSourceConfigs, this.#refreshPipeline);\r\n      this.#refreshPipeline = false;\r\n      this.#refreshDataSourceConfigs = false;\r\n    });\r\n  }\r\n\r\n  public editPipelineEntity() {\r\n    // save Pipeline, then open Edit Dialog\r\n    this.#savePipeline(() => {\r\n      const form: EditForm = {\r\n        items: [EditPrep.editId(this.pipelineModel().Pipeline.EntityId)],\r\n      };\r\n      const formUrl = convertFormToUrl(form);\r\n      this.#dialogRoute.navRelative([`edit/${formUrl}`]);\r\n      this.#refreshPipeline = true;\r\n    });\r\n  }\r\n\r\n  public saveAndRun(save: boolean, run: boolean): void {\r\n    if (save && run)\r\n      return this.#savePipeline(() => this.runPipeline());\r\n\r\n    if (save)\r\n      return this.#savePipeline();\r\n\r\n    if (run)\r\n      return this.runPipeline();\r\n  }\r\n\r\n  showDataSourceDetails(showDetails: boolean) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    const designerData: Record<string, any> = JsonHelpers.tryParse(query.Pipeline.VisualDesignerData) ?? {};\r\n    designerData.ShowDataSourceDetails = showDetails;\r\n    query.Pipeline.VisualDesignerData = JSON.stringify(designerData);\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    const newSource: PipelineDataSource = {\r\n      Description: '',\r\n      EntityGuid: 'unsaved' + (query.DataSources.length + 1),\r\n      EntityId: undefined,\r\n      Name: dataSource.Name,\r\n      PartAssemblyAndType: dataSource.PartAssemblyAndType,\r\n      VisualDesignerData: { Top: 100, Left: 100 },\r\n    };\r\n    query.DataSources.push(newSource);\r\n    this.pipelineModel.set(query);\r\n    this.#savePipeline();\r\n  }\r\n\r\n  removeDataSource(pipelineDataSourceGuid: string, connections: StreamWire[], streamsOut: string) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    query.DataSources = query.DataSources.filter(pipelineDS => pipelineDS.EntityGuid !== pipelineDataSourceGuid);\r\n    query.Pipeline.StreamWiring = connections;\r\n    query.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  renameDataSource(pipelineDataSourceGuid: string, name: string) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    const dataSource = query.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    dataSource.Name = name;\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  changeDataSourceDescription(pipelineDataSourceGuid: string, description: string) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    const dataSource = query.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    dataSource.Description = description;\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  changeConnections(connections: StreamWire[], streamsOut: string) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    query.Pipeline.StreamWiring = connections;\r\n    query.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  changeDataSourcePosition(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    const dataSource = query.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    if (!dataSource) {\r\n      // spm NOTE: fixes problem where dataSource position can't be updated if dataSource with guid unsavedXX gets saved while dragging.\r\n      // Can happen if dataSource is just added and user drags it and save happens.\r\n      return;\r\n    }\r\n    dataSource.VisualDesignerData = { ...dataSource.VisualDesignerData, ...position };\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  #calculateDataSourceConfigs(dataSources: PipelineDataSource[]) {\r\n    const dataSourceConfigs: DataSourceConfigs = {};\r\n    dataSources.forEach(dataSource => {\r\n      if (dataSource.EntityId == null) return;\r\n      dataSourceConfigs[dataSource.EntityId] = [];\r\n      dataSource.Metadata?.forEach(metadataItem => {\r\n        Object.entries(metadataItem).forEach(([attributeName, attributeValue]) => {\r\n          if (attributeValue == null || attributeValue === '') return;\r\n          if (['Created', 'Guid', 'Id', 'Modified', 'Title', '_Type'].includes(attributeName)) return;\r\n          if (Array.isArray(attributeValue) && attributeValue[0]?.Title !== null && attributeValue[0]?.Id !== null) {\r\n            attributeValue = `${attributeValue[0].Title} (${attributeValue[0].Id})`;\r\n          }\r\n          const dataSourceConfig: DataSourceConfig = {\r\n            name: attributeName,\r\n            value: attributeValue,\r\n          };\r\n          dataSourceConfigs[dataSource.EntityId].push(dataSourceConfig);\r\n        });\r\n      });\r\n    });\r\n    this.dataSourceConfigs.set(dataSourceConfigs);\r\n  }\r\n\r\n  editDataSource(pipelineDataSource: PipelineDataSource) {\r\n    const dataSource = this.dataSources().find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    const contentTypeName = dataSource.ContentType;\r\n    const { targetType, keyType } = eavConstants.metadata.entity;\r\n    const key = pipelineDataSource.EntityGuid;\r\n\r\n    // query for existing Entity\r\n    this.#metadataSvc.getMetadata(targetType, keyType, key, contentTypeName).subscribe(metadata => {\r\n      // edit existing Entity\r\n      if (metadata.Items.length) {\r\n        const form: EditForm = {\r\n          items: [EditPrep.editId(metadata.Items[0].Id)],\r\n        };\r\n        const formUrl = convertFormToUrl(form);\r\n        this.#dialogRoute.navRelative([`edit/${formUrl}`]);\r\n        this.#refreshDataSourceConfigs = true;\r\n        return;\r\n      }\r\n\r\n      // Check if the type exists, and if yes, create new Entity\r\n      this.#contentTypesSvc.retrieveContentType(contentTypeName).subscribe({\r\n        next: contentType => {\r\n          if (contentType == null) {\r\n            this.snackBar.open('DataSource doesn\\'t have any configuration', undefined, { duration: 3000 });\r\n            return;\r\n          }\r\n          const form: EditForm = {\r\n            items: [ EditPrep.newMetadata(key, contentTypeName, eavConstants.metadata.entity) ],\r\n          };\r\n          const formUrl = convertFormToUrl(form);\r\n          this.#dialogRoute.navRelative([`edit/${formUrl}`]);\r\n          this.#refreshDataSourceConfigs = true;\r\n        },\r\n        error: (error: HttpErrorResponse) => {\r\n          const message = 'Server reports error - this usually means that this DataSource doesn\\'t have any configuration';\r\n          this.snackBar.open(message, undefined, { duration: 3000 });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  #savePipeline(callback?: () => void) {\r\n    this.snackBar.open('Saving...');\r\n    this.#queryDefSvc.savePipeline(this.pipelineModel()).subscribe({\r\n      next: pipelineModel => {\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n        this.pipelineModel.set(pipelineModel);\r\n        if (callback != null) { callback(); }\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Save Pipeline failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  runPipeline(top = 25) {\r\n    this.snackBar.open('Running query...');\r\n    this.#queryDefSvc.runPipeline(this.pipelineModel().Pipeline.EntityId, top).subscribe({\r\n      next: pipelineResult => {\r\n        this.snackBar.open('Query worked', null, { duration: 2000 });\r\n        this.queryResult = pipelineResult;\r\n        this.#showQueryResult(pipelineResult, top);\r\n        console.warn(pipelineResult);\r\n        // push cloned pipelineModel to reset jsPlumb\r\n        this.pipelineModel.set(cloneDeep(this.pipelineModel()));\r\n\r\n        setTimeout(() => { this.putEntityCountOnConnections$.next(pipelineResult); });\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Query failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  debugStream(stream: PipelineResultStream, top = 25): void {\r\n    if (stream.Error)\r\n      return this.#showStreamErrorResult(stream);\r\n\r\n    if (stream.Count === 0)\r\n      return;\r\n\r\n    this.snackBar.open('Running stream...');\r\n    const pipelineId = this.pipelineModel().Pipeline.EntityId;\r\n    this.#queryDefSvc.debugStream(pipelineId, stream.Source, stream.SourceOut, top).subscribe({\r\n      next: streamResult => {\r\n        this.snackBar.open('Stream worked', null, { duration: 2000 });\r\n        const pipelineDataSource = this.pipelineModel().DataSources.find(ds => ds.EntityGuid === stream.Source);\r\n        const debugStream: DebugStreamInfo = {\r\n          name: stream.SourceOut,\r\n          source: stream.Source,\r\n          sourceName: pipelineDataSource.Name,\r\n          original: stream,\r\n        };\r\n        this.#showQueryResult(streamResult, top, debugStream);\r\n        console.warn(streamResult);\r\n      },\r\n      error: (_: HttpErrorResponse) => {\r\n        this.snackBar.open('Stream failed', null, { duration: 2000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  #fetchPipeline(refreshPipeline: boolean, refreshDataSourceConfigs: boolean, showSnackBar: boolean) {\r\n    if (showSnackBar)\r\n      this.snackBar.open('Reloading query, please wait...');\r\n\r\n    this.#queryDefSvc.fetchPipeline(this.#pipelineId, this.dataSources()).subscribe(pipelineModel => {\r\n      if (showSnackBar)\r\n        this.snackBar.open('Query reloaded', null, { duration: 2000 });\r\n\r\n      this.#titleSvc.setTitle(`${pipelineModel.Pipeline.Name} - Visual Query`);\r\n      if (refreshPipeline)\r\n      this.pipelineModel.set(pipelineModel);\r\n\r\n\r\n      if (refreshDataSourceConfigs)\r\n        this.#calculateDataSourceConfigs(pipelineModel.DataSources);\r\n    });\r\n  }\r\n\r\n  #showQueryResult(result: PipelineResult, top: number, debugStream?: DebugStreamInfo) {\r\n    const dialogData: QueryResultDialogData = {\r\n      result,\r\n      debugStream,\r\n      top,\r\n    };\r\n    this.matDialog.open(QueryResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  #showStreamErrorResult(stream: PipelineResultStream) {\r\n    const dialogData: StreamErrorResultDialogData = {\r\n      errorData: stream.ErrorData,\r\n    };\r\n    this.matDialog.open(StreamErrorResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  #fetchDataSources(callback?: () => void) {\r\n    this.#queryDefSvc.fetchDataSources().subscribe(dataSources => {\r\n      this.dataSources.set(dataSources);\r\n      callback();\r\n    });\r\n  }\r\n\r\n  #attachKeyboardSave() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown').pipe(\r\n          filter(() => !this.#dialogRoute.snapshot.firstChild),\r\n          filter(event => isCtrlS(event)),\r\n        ).subscribe(event => {\r\n          event.preventDefault();\r\n          this.zone.run(() => { this.#savePipeline(); });\r\n        })\r\n      );\r\n    });\r\n  }\r\n}\r\n","@if (sorted()) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"eav-show-advanced\">\r\n      <span class=\"eav-slide-toggle-label\">Show Advanced</span>\r\n      <mat-slide-toggle color=\"primary\" (change)=\"toggleDifficulty($event)\" />\r\n    </div>\r\n    @for (group of sorted() | keyvalue; track trackGroups($index, group)) {\r\n      <div class=\"collapsible\" [tippy]=\"guiTypes[group.key].UiHint || group.key\" tippyShowDelay=\"750\"\r\n        (click)=\"toggleItem(group.key)\">\r\n        <mat-icon>{{ guiTypes[group.key].Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n        <span>{{ guiTypes[group.key].Label ?? guiTypes[group.key].Name ?? group.key }}</span>\r\n      </div>\r\n      @if (toggledItems.includes(group.key)) {\r\n        <div class=\"list\">\r\n          @for (dataSource of group.value; track trackDataSources($index, dataSource)) {\r\n            <div class=\"list-item\"\r\n              [tippy]=\"dataSource.UiHint || dataSource.Name\" tippyShowDelay=\"750\" (click)=\"addDataSource(dataSource)\">\r\n              <mat-icon>{{ dataSource.Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n              <span>{{ dataSource.Name }}</span>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n  </div>\r\n}\r\n","import { KeyValue, KeyValuePipe } from '@angular/common';\r\nimport { Component, computed, signal } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { DataSource } from '../models';\r\nimport { guiTypes } from '../plumb-editor/plumb-editor.helpers';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { filterAndSortDataSources } from './add-explorer.helpers';\r\n\r\n@Component({\r\n    selector: 'app-add-explorer',\r\n    templateUrl: './add-explorer.component.html',\r\n    styleUrls: ['./add-explorer.component.scss'],\r\n    imports: [\r\n        MatSlideToggleModule,\r\n        MatIconModule,\r\n        KeyValuePipe,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class AddExplorerComponent {\r\n  toggledItems: string[] = [];\r\n  guiTypes = guiTypes;\r\n\r\n  #difficulties = eavConstants.pipelineDesigner.dataSourceDifficulties;\r\n\r\n  #difficulty = signal(this.#difficulties.default);\r\n\r\n  sorted = computed(() => filterAndSortDataSources(this.visualQueryService.dataSources(), this.#difficulty()));\r\n\r\n  constructor(private visualQueryService: VisualQueryStateService) { }\r\n\r\n  toggleDifficulty(event: MatSlideToggleChange) {\r\n    const difficulty = event.checked ? this.#difficulties.advanced : this.#difficulties.default;\r\n    this.#difficulty.set(difficulty);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    this.visualQueryService.addDataSource(dataSource);\r\n  }\r\n\r\n  toggleItem(item: string) {\r\n    ArrayHelpers.toggleInArray(item, this.toggledItems);\r\n  }\r\n\r\n  trackGroups(index: number, type: KeyValue<string, DataSource[]>) {\r\n    return type.key;\r\n  }\r\n\r\n  trackDataSources(index: number, dataSource: DataSource) {\r\n    return dataSource.PartAssemblyAndType;\r\n  }\r\n}\r\n","import cloneDeep from 'lodash-es/cloneDeep';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\n\r\nexport function filterAndSortDataSources(dataSources: DataSource[], maxDifficulty: number) {\r\n  if (!dataSources) return;\r\n\r\n  const cloned = cloneDeep(dataSources);\r\n\r\n  const filtered = cloned.filter(dataSource =>\r\n    dataSource.Difficulty <= maxDifficulty\r\n    && dataSource.PartAssemblyAndType !== eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType\r\n  );\r\n\r\n  filtered.sort((a, b) => a.Name.toLocaleLowerCase().localeCompare(b.Name.toLocaleLowerCase()));\r\n\r\n  const sorted: SortedDataSources = {};\r\n  for (const dataSource of filtered) {\r\n    const type = dataSource.PrimaryType;\r\n    if (sorted[type]) {\r\n      sorted[type].push(dataSource);\r\n    } else {\r\n      sorted[type] = [dataSource];\r\n    }\r\n  }\r\n\r\n  return sorted;\r\n}\r\n","import { classLog } from '../../shared/logging';\r\nimport { EndpointInfo, PlumbType } from './plumb-editor.models';\r\nimport { Plumber } from './plumber.helper';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  getEndpointOverlays: true,\r\n  getEndpointInfo: true,\r\n  buildSourceEndpoint: true,\r\n  buildTargetEndpoint: true,\r\n}\r\n\r\nexport class EndpointsHelper {\r\n\r\n  log = classLog({EndpointsHelper}, logSpecs);\r\n\r\n  constructor(private plumb: Plumber) { }\r\n\r\n  private getEndpointOverlays(isSource: boolean) {\r\n    const l = this.log.fnIf('getEndpointOverlays', {isSource});\r\n    const result = [\r\n      [\r\n        'Label', {\r\n          id: 'endpointLabel',\r\n          location: [0.5, isSource ? 0 : 1],\r\n          label: 'Default',\r\n          cssClass: isSource ? 'endpointSourceLabel' : 'endpointTargetLabel',\r\n        },\r\n      ],\r\n    ];\r\n    return l.r(result);\r\n  }\r\n\r\n  getEndpointInfo(endpointName: string, isDynamic: boolean): EndpointInfo {\r\n    const l = this.log.fnIf('getEndpointInfo', {endpointName, isDynamic});\r\n    let name: string;\r\n    let required: boolean;\r\n\r\n    const trimmed = endpointName.trim();\r\n    required = trimmed.endsWith('*');\r\n    name = !required ? trimmed : trimmed.substring(0, trimmed.length - 1);\r\n\r\n    if (isDynamic)\r\n      return l.r({\r\n        name,\r\n        required: false\r\n      } satisfies EndpointInfo, 'isDynamic');\r\n\r\n    return l.r({ name, required } satisfies EndpointInfo, 'notDynamic');\r\n  }\r\n\r\n  buildSourceEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const l = this.log.fnIf('buildSourceEndpoint', {pipelineDataSourceGuid, style});\r\n    const isSource = true;\r\n    const sourceEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'sourceEndpoint ' + (style ?? ''),\r\n      maxConnections: -1,\r\n      isSource,\r\n      anchor: ['Continuous', { faces: ['top'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => this.plumb.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid),\r\n      },\r\n    };\r\n    return l.r(sourceEndpoint);\r\n  }\r\n\r\n  buildTargetEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const l = this.log.fnIf('buildTargetEndpoint', {pipelineDataSourceGuid, style});\r\n    const isSource = false;\r\n    const targetEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'targetEndpoint ' + (style ?? ' '), // + (angled ? 'angled' : ''),\r\n      maxConnections: 1,\r\n      isTarget: !isSource,\r\n      anchor: ['Continuous', { faces: ['bottom'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      dropOptions: { hoverClass: 'hover', activeClass: 'active' },\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => this.plumb.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid),\r\n      },\r\n    };\r\n    return l.r(targetEndpoint);\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Rename stream</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <form [formGroup]=\"form\">\r\n      <!-- Simple form -->\r\n      @if (!isSource || !pipelineResultExists) {\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"label\" required>\r\n        </mat-form-field>\r\n        @if (isSource && !pipelineResultExists) {\r\n          <app-field-hint>\r\n            You will get suggestions for out-streams after you run query\r\n          </app-field-hint>\r\n        }\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n\r\n      <!-- Rich form -->\r\n      @if (isSource && pipelineResultExists) {\r\n        <!-- Scope -->\r\n        @if (advancedMode && guidedLabel) {\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Scope</mat-label>\r\n            <mat-select formControlName=\"scope\" [placeholder]=\"!scopeOptions.length ? 'No items found' : ''\">\r\n              @for (scopeOption of scopeOptions; track scopeOption) {\r\n                <mat-option [value]=\"scopeOption.value\">\r\n                  {{ scopeOption.name }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <app-field-hint>\r\n            The scope should almost never be changed -\r\n            <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n          </app-field-hint>\r\n        }\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          @if (guidedLabel) {\r\n            <mat-select formControlName=\"label\" required\r\n              [placeholder]=\"!labelOptions.length ? 'No items found' : ''\">\r\n              @for (labelOption of labelOptions; track labelOption) {\r\n                <mat-option [value]=\"labelOption\">\r\n                  {{ labelOption }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          }\r\n          @if (!guidedLabel) {\r\n            <input matInput type=\"text\" formControlName=\"label\" required>\r\n          }\r\n          <div matTextSuffix class=\"eav-selection-suffix\">\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': guidedLabel }\" tippy=\"Pick existing value\"\r\n              (click)=\"toggleGuidedLabel(true)\">\r\n              <mat-icon class=\"eav-icon\">search</mat-icon>\r\n            </button>\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': !guidedLabel }\" tippy=\"Manual entry\"\r\n              (click)=\"toggleGuidedLabel(false)\">\r\n              <mat-icon class=\"eav-icon\">text_fields</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-form-field>\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n    </form>\r\n  </div>\r\n  <mat-dialog-actions class=\"eav-dialog-actions\">\r\n    <!-- Extra button for rich form -->\r\n    <div>\r\n      @if (isSource && pipelineResultExists) {\r\n        <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n          {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n        </mat-slide-toggle>\r\n      }\r\n    </div>\r\n    <div>\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\" [disabled]=\"!form.valid\" (click)=\"rename()\">\r\n        Rename\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, HostBinding, Inject, OnInit } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MAT_DIALOG_DATA, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { distinctUntilChanged, startWith } from 'rxjs';\r\nimport { transient } from '../../../../../../core';\r\nimport { ContentTypesService } from '../../../app-administration/services';\r\nimport { BaseComponent } from '../../../shared/components/base.component';\r\nimport { FieldHintComponent } from '../../../shared/components/field-hint/field-hint.component';\r\nimport { eavConstants, ScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { ClickStopPropagationDirective } from '../../../shared/directives/click-stop-propagation.directive';\r\nimport { VisualQueryStateService } from '../../services/visual-query.service';\r\nimport { RenameStreamDialogControls, RenameStreamDialogData, RenameStreamDialogFormValue } from './rename-stream.models';\r\n\r\n@Component({\r\n    selector: 'app-rename-stream',\r\n    templateUrl: './rename-stream.component.html',\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        NgClass,\r\n        MatDialogActions,\r\n        MatSlideToggleModule,\r\n        FieldHintComponent,\r\n        ClickStopPropagationDirective,\r\n    ]\r\n})\r\nexport class RenameStreamComponent extends BaseComponent implements OnInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  controls: RenameStreamDialogControls;\r\n  isSource = this.dialogData.isSource;\r\n  pipelineResultExists = this.visualQueryService.queryResult != null;\r\n  scopeOptions: ScopeOption[] = [];\r\n  labelOptions: string[] = [];\r\n  guidedLabel = true;\r\n  advancedMode = false;\r\n\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n  \r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: RenameStreamDialogData,\r\n    private dialog: MatDialogRef<RenameStreamComponent>,\r\n    private visualQueryService: VisualQueryStateService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.#buildForm();\r\n  }\r\n\r\n  closeDialog(label?: string): void {\r\n    this.dialog.close(label);\r\n  }\r\n\r\n  toggleGuidedLabel(guidedLabel: boolean): void {\r\n    this.guidedLabel = guidedLabel;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  rename(): void {\r\n    const formValue: RenameStreamDialogFormValue = this.form.getRawValue();\r\n    this.closeDialog(formValue.label);\r\n  }\r\n\r\n  #buildForm(): void {\r\n    this.form = new UntypedFormGroup({\r\n      label: new UntypedFormControl(this.dialogData.label, Validators.required),\r\n      scope: new UntypedFormControl(eavConstants.scopes.default.value),\r\n    });\r\n    this.controls = this.form.controls as any;\r\n\r\n    if (!this.isSource || !this.pipelineResultExists)\r\n      return;\r\n\r\n    this.subscriptions.add(\r\n      this.controls.scope.valueChanges.pipe(\r\n        startWith<string>(this.controls.scope.value),\r\n        distinctUntilChanged(),\r\n      ).subscribe(scope => {\r\n        this.labelOptions = Object.values(this.visualQueryService.queryResult.Sources)\r\n          .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out\r\n          .filter(out => out.Scope === scope)\r\n          .map(out => out.Name);\r\n\r\n        if (!this.labelOptions.includes(this.controls.label.value) && this.controls.label.value != null)\r\n          this.controls.label.patchValue(null);\r\n      })\r\n    );\r\n\r\n    this.#contentTypesSvc.getScopes().subscribe(scopes => {\r\n      const sourceOut = Object.values(this.visualQueryService.queryResult.Sources)\r\n        .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out;\r\n      const filtered = scopes.filter(s => sourceOut.some(o => o.Scope === s.value));\r\n      this.scopeOptions = filtered;\r\n      this.changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectorRef, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { classLog } from '../../shared/logging';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { WindowWithJsPlumb } from '../window';\r\nimport { EndpointsHelper } from './endpoints.helper';\r\nimport { PlumbType } from './plumb-editor.models';\r\nimport { RenameStreamComponent } from './rename-stream/rename-stream.component';\r\nimport { RenameStreamDialogData } from './rename-stream/rename-stream.models';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  addEndpoint: true,\r\n}\r\n\r\ndeclare const window: WindowWithJsPlumb;\r\n\r\nexport const dataSrcIdPrefix = 'dataSource_';\r\n\r\nconst endPointsWhereWeRotate = 3;\r\n\r\nexport class Plumber {\r\n\r\n  log = classLog({Plumber}, logSpecs);\r\n\r\n  #instance: PlumbType;\r\n  #lineCount = 0;\r\n  #linePaintDefault = {\r\n    stroke: '#61B7CF',\r\n    strokeWidth: 4,\r\n    outlineStroke: 'white',\r\n    outlineWidth: 2,\r\n  };\r\n  #lineColors = [\r\n    '#009688', '#00bcd4', '#3f51b5', '#9c27b0', '#e91e63',\r\n    '#db4437', '#ff9800', '#60a917', '#60a917', '#008a00',\r\n    '#00aba9', '#1ba1e2', '#0050ef', '#6a00ff', '#aa00ff',\r\n    '#f472d0', '#d80073', '#a20025', '#e51400', '#fa6800',\r\n    '#f0a30a', '#e3c800', '#825a2c', '#6d8764', '#647687',\r\n    '#76608a', '#a0522d',\r\n  ];\r\n  #maxCols = this.#lineColors.length - 1;\r\n  #uuidColorMap: Record<string, any> = {};\r\n  #bulkDelete = false;\r\n  #dialog: MatDialogRef<RenameStreamComponent>;\r\n\r\n  #endpoints: EndpointsHelper;\r\n\r\n  constructor(\r\n    private jsPlumbRoot: HTMLElement,\r\n    private pipelineModel: PipelineModel,\r\n    private dataSources: DataSource[],\r\n    private onConnectionsChanged: () => void,\r\n    private onDragend: (pipelineDataSourceGuid: string, position: VisualDesignerData) => void,\r\n    private onDebugStream: (stream: PipelineResultStream) => void,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    this.#endpoints = new EndpointsHelper(this);\r\n    this.#instance = window.jsPlumb.getInstance(this.#getInstanceDefaults(this.jsPlumbRoot));\r\n    this.#instance.batch(() => {\r\n      this.#initDomDataSources();\r\n      this.#initWirings();\r\n      this.#bindEvents();\r\n    });\r\n    // spm NOTE: repaint after initial paint fixes:\r\n    // Error: <svg> attribute width: Expected length, \"-Infinity\".\r\n    this.#instance.repaintEverything();\r\n  }\r\n\r\n  destroy() {\r\n    this.#dialog?.close();\r\n    this.#instance.reset();\r\n    this.#instance.unbindContainer();\r\n  }\r\n\r\n  removeEndpointsOnDataSource(pipelineDataSourceGuid: string) {\r\n    const elementId = dataSrcIdPrefix + pipelineDataSourceGuid;\r\n    this.#bulkDelete = true;\r\n    this.#instance.batch(() => {\r\n      this.#instance.selectEndpoints({ element: elementId }).delete();\r\n    });\r\n    this.#bulkDelete = false;\r\n  }\r\n\r\n  getAllConnections() {\r\n    const connectionInfos: StreamWire[] = this.#instance.getAllConnections().map((connection: PlumbType) => {\r\n      const wire: StreamWire = {\r\n        From: connection.sourceId.replace(dataSrcIdPrefix, ''),\r\n        Out: connection.endpoints[0].getOverlay('endpointLabel').label,\r\n        To: connection.targetId.replace(dataSrcIdPrefix, ''),\r\n        In: connection.endpoints[1].getOverlay('endpointLabel').label,\r\n      };\r\n      return wire;\r\n    });\r\n    return connectionInfos;\r\n  }\r\n\r\n  getStreamsOut() {\r\n    const streamsOut: string[] = [];\r\n    this.#instance.selectEndpoints({ target: dataSrcIdPrefix + 'Out' }).each((endpoint: PlumbType) => {\r\n      streamsOut.push(endpoint.getOverlay('endpointLabel').label);\r\n    });\r\n    const streamsOutStr = streamsOut.join(',');\r\n    return streamsOutStr;\r\n  }\r\n\r\n  putEntityCountOnConnections(result: PipelineResult) {\r\n    result.Streams?.forEach(stream => {\r\n      const sourceElementId = dataSrcIdPrefix + stream.Source;\r\n      const outTargets = ['00000000-0000-0000-0000-000000000000', this.pipelineModel.Pipeline.EntityGuid];\r\n      const targetElementId = outTargets.includes(stream.Target) ? dataSrcIdPrefix + 'Out' : dataSrcIdPrefix + stream.Target;\r\n\r\n      const fromUuid = sourceElementId + '_out_' + stream.SourceOut;\r\n      const toUuid = targetElementId + '_in_' + stream.TargetIn;\r\n\r\n      const sEndp: PlumbType = this.#instance.getEndpoint(fromUuid);\r\n      sEndp?.connections\r\n        ?.filter((connection: PlumbType) => connection.endpoints[1].getUuid() === toUuid)\r\n        ?.forEach((connection: PlumbType) => {\r\n          const label = !stream.Error ? stream.Count.toString() : '';\r\n          const cssClass = 'streamEntitiesCount ' + (!stream.Error ? '' : 'streamEntitiesError');\r\n          connection.setLabel({\r\n            label,\r\n            cssClass,\r\n            events: {\r\n              click: (overlay: PlumbType) => {\r\n                if (!this.pipelineModel.Pipeline.AllowEdit) return;\r\n                this.onDebugStream(stream);\r\n              },\r\n            },\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  #nextLinePaintStyle(uuid: string) {\r\n    return (\r\n      this.#uuidColorMap[uuid] ||\r\n      (this.#uuidColorMap[uuid] = Object.assign({}, this.#linePaintDefault, { stroke: this.#lineColors[this.#lineCount++ % this.#maxCols] }))\r\n    );\r\n  }\r\n\r\n  #getInstanceDefaults(container: HTMLElement) {\r\n    const defaults = {\r\n      Container: container,\r\n      Connector: ['Bezier', { curviness: 70 }],\r\n      PaintStyle: this.#nextLinePaintStyle('dummy'),\r\n      HoverPaintStyle: {\r\n        stroke: '#216477',\r\n        strokeWidth: 4,\r\n        outlineStroke: 'white',\r\n        outlineWidth: 2,\r\n      },\r\n    };\r\n    return defaults;\r\n  }\r\n\r\n  /** Create sources, targets and endpoints */\r\n  #initDomDataSources() {\r\n    const l = this.log.fnCond(false, 'initDomDataSources');\r\n    for (const pipelineDataSource of this.pipelineModel.DataSources) {\r\n      const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + dataSrcIdPrefix + pipelineDataSource.EntityGuid);\r\n      if (!domDataSource) continue;\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      if (!dataSource) continue;\r\n\r\n      if (this.pipelineModel.Pipeline.AllowEdit) {\r\n        // WARNING! Must happen before instance.makeSource()\r\n        this.#instance.draggable(domDataSource, {\r\n          grid: [20, 20], stop: (event: PlumbType) => {\r\n            const element: HTMLElement = event.el;\r\n            const pipelineDataSourceGuid: string = element.id.replace(dataSrcIdPrefix, '');\r\n            const position: VisualDesignerData = {\r\n              Top: event.finalPos[1],\r\n              Left: event.finalPos[0],\r\n            };\r\n            setTimeout(() => { this.onDragend(pipelineDataSourceGuid, position); });\r\n          }\r\n        });\r\n      }\r\n\r\n      // Add Out-Endpoints from Definition\r\n      const outCount = dataSource.Out?.length ?? 0;\r\n      l.a('dataSource.Out', { outCount, out: dataSource.Out });\r\n      dataSource.Out?.forEach(name => {\r\n        this.#addEndpoint(domDataSource, name, false, pipelineDataSource, outCount);\r\n      });\r\n\r\n      // Add In-Endpoints from Definition\r\n      const inCount = dataSource.In?.length ?? 0;\r\n      l.a('dataSource.In', { inCount, in: dataSource.In });\r\n      dataSource.In?.forEach(name => {\r\n        this.#addEndpoint(domDataSource, name, true, pipelineDataSource, inCount);\r\n      });\r\n\r\n      // Make DataSource a Target for new Endpoints (if .In is an Array)\r\n      if (dataSource.In) {\r\n        const targetEndpointUnlimited = this.#endpoints.buildTargetEndpoint(pipelineDataSource.EntityGuid);\r\n        targetEndpointUnlimited.maxConnections = -1;\r\n        this.#instance.makeTarget(domDataSource, targetEndpointUnlimited);\r\n      }\r\n\r\n      if (dataSource.DynamicOut)\r\n        this.#instance.makeSource(domDataSource, this.#endpoints.buildSourceEndpoint(pipelineDataSource.EntityGuid), { filter: '.add-endpoint' });\r\n    }\r\n    l.end();\r\n  }\r\n\r\n  /** Create wires */\r\n  #initWirings() {\r\n    const l = this.log.fn('initWirings');\r\n    const wirings = this.pipelineModel.Pipeline.StreamWiring;\r\n    if (!wirings) return l.end('no wirings');\r\n\r\n    const inGroups = groupBy(wirings, wire => wire.To);\r\n    const outGroups = groupBy(wirings, wire => wire.From);\r\n\r\n    l.values({ inGroups, outGroups });\r\n\r\n    wirings.forEach(wire => {\r\n      // read connections from Pipeline\r\n      const sourceElementId = dataSrcIdPrefix + wire.From;\r\n      const fromUuid = sourceElementId + '_out_' + wire.Out;\r\n      const targetElementId = dataSrcIdPrefix + wire.To;\r\n      const toUuid = targetElementId + '_in_' + wire.In;\r\n\r\n      // Ensure In-Endpoint exist\r\n      if (!this.#instance.getEndpoint(fromUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + sourceElementId);\r\n        if (!domDataSource) return;\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const dataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n        this.#addEndpoint(domDataSource, wire.Out, false, dataSource, outGroups[wire.From].length);\r\n      }\r\n\r\n      // Ensure Out-Endpoint exist\r\n      if (!this.#instance.getEndpoint(toUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + targetElementId);\r\n        if (!domDataSource) return;\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const dataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n\r\n        // if (wire.In === \"DEBUG\") debugger;\r\n\r\n        this.#addEndpoint(domDataSource, wire.In, true, dataSource, inGroups[wire.To].length);\r\n      }\r\n\r\n      try {\r\n        this.#instance.connect({\r\n          uuids: [fromUuid, toUuid],\r\n          paintStyle: this.#nextLinePaintStyle(fromUuid),\r\n        });\r\n      } catch (e) {\r\n        console.error({ message: 'Connection failed', from: fromUuid, to: toUuid });\r\n      }\r\n    });\r\n    l.end();\r\n  }\r\n\r\n  #addEndpoint(domDataSource: HTMLElement, endpointName: string, isIn: boolean, queryDs: PipelineDataSource, count: number = 0) {\r\n    const l = this.log.fnIf('addEndpoint', { endpointName, isIn, queryDs });\r\n    const dataSource = this.dataSources.find(d => d.PartAssemblyAndType === queryDs.PartAssemblyAndType);\r\n    const connectionList = isIn ? dataSource.In : dataSource.Out;\r\n    const hasDynamic = connectionList?.some(name => this.#endpoints.getEndpointInfo(name, false));\r\n    // const count = connectionList?.length ?? -1;\r\n    const endpointInfo = this.#endpoints.getEndpointInfo(endpointName, hasDynamic);\r\n\r\n    l.a(`endpointInfo ${count}`, { dataSource, connectionList, isDynamic: hasDynamic, count, endpointInfo });\r\n\r\n    // if (endpointName === \"DEBUG\") debugger;\r\n\r\n    let style: string;\r\n    if (hasDynamic)\r\n      style = 'dynamic';\r\n    else if (!endpointInfo.required)\r\n      style = '';\r\n    else {\r\n      const wireExists = this.pipelineModel.Pipeline.StreamWiring?.some(wire => {\r\n        const targetElementId = dataSrcIdPrefix + wire.To;\r\n        const targetEndpointName = wire.In;\r\n\r\n        return targetElementId === domDataSource.id && targetEndpointName === endpointInfo.name;\r\n      });\r\n      style = wireExists ? '' : 'required';\r\n    }\r\n\r\n    const uuid = domDataSource.id + (isIn ? '_in_' : '_out_') + endpointInfo.name;\r\n    const angled = count > endPointsWhereWeRotate;\r\n    const model = isIn\r\n      ? this.#endpoints.buildTargetEndpoint(queryDs.EntityGuid, style)\r\n      : this.#endpoints.buildSourceEndpoint(queryDs.EntityGuid, style);\r\n    // Endpoints on Out-DataSource must be always enabled\r\n    const params = {\r\n      uuid,\r\n      enabled: this.pipelineModel.Pipeline.AllowEdit\r\n        || queryDs.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    };\r\n\r\n    const endpoint: PlumbType = this.#instance.addEndpoint(domDataSource, model, params);\r\n    const overlay = endpoint.getOverlay('endpointLabel');\r\n    overlay.setLabel(endpointInfo.name);\r\n    if (angled)\r\n      overlay.addClass('angled');\r\n    l.end(\"end\", {count, angled, overlay});\r\n  }\r\n\r\n  public onChangeLabel(endpointOrOverlay: PlumbType, isSource: boolean, pipelineDataSourceGuid: string) {\r\n    if (!this.pipelineModel.Pipeline.AllowEdit)\r\n      return;\r\n\r\n    const overlay: PlumbType = endpointOrOverlay.getOverlay ? endpointOrOverlay.getOverlay('endpointLabel') : endpointOrOverlay;\r\n    const data: RenameStreamDialogData = {\r\n      pipelineDataSourceGuid,\r\n      isSource,\r\n      label: overlay.label,\r\n    };\r\n    this.#dialog = this.matDialog.open(RenameStreamComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    this.#dialog.afterClosed().subscribe(newLabel => {\r\n      if (!newLabel) return;\r\n      overlay.setLabel(newLabel);\r\n      setTimeout(() => this.onConnectionsChanged());\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  #bindEvents() {\r\n    this.#instance.bind('connectionDetached', (info: PlumbType) => {\r\n      if (this.#bulkDelete) return;\r\n      const domDataSource: HTMLElement = info.target;\r\n      const pipelineDataSource = this.pipelineModel.DataSources.find(\r\n        pipelineDS => pipelineDS.EntityGuid === domDataSource.id.replace(dataSrcIdPrefix, '')\r\n      );\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      const label: string = info.targetEndpoint.getOverlay('endpointLabel').label;\r\n      const isDynamic = !dataSource.In.some(name => this.#endpoints.getEndpointInfo(name, false).name === label);\r\n      if (isDynamic)\r\n        this.#instance.deleteEndpoint(info.targetEndpoint);\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n\r\n    this.#instance.bind('connection', (info: PlumbType) => {\r\n      if (info.sourceId === info.targetId) {\r\n        setTimeout(() => {\r\n          this.#instance.deleteConnection(info.connection, { fireEvent: false });\r\n          setTimeout(() => this.onConnectionsChanged());\r\n        });\r\n        return;\r\n      }\r\n      const endpointLabel: PlumbType = info.targetEndpoint.getOverlay('endpointLabel');\r\n      const labelPrompt: string = endpointLabel.getLabel();\r\n      const endpoints: PlumbType[] = this.#instance.getEndpoints(info.target.id);\r\n      const targetEndpointHasSameLabel = endpoints.some(endpoint => {\r\n        const label: string = endpoint.getOverlay('endpointLabel').getLabel();\r\n        return label === labelPrompt &&\r\n          info.targetEndpoint.id !== endpoint.id &&\r\n          (endpoint.canvas as HTMLCanvasElement).classList.contains('targetEndpoint');\r\n      });\r\n      if (targetEndpointHasSameLabel)\r\n        endpointLabel.setLabel(`PleaseRename${Math.floor(Math.random() * 99999)}`);\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n  }\r\n\r\n}\r\n\r\n// https://stackoverflow.com/questions/14446511/most-efficient-method-to-groupby-on-an-array-of-objects\r\nconst groupBy = <T, K extends keyof any>(arr: T[], key: (i: T) => K) =>\r\n  arr.reduce((groups, item) => {\r\n    (groups[key(item)] ||= []).push(item);\r\n    return groups;\r\n  }, {} as Record<K, T[]>);\r\n","@if (vsSvc.pipelineModel()) {\r\n  <div #domRoot id=\"pipeline-root\">\r\n    <!-- do not use trackBy, jsPlumb drag stops working properly after delete -->\r\n    @if (!hardReset) {\r\n      @for (dataSource of vsSvc.pipelineModel().DataSources; track dataSource) {\r\n        <div\r\n          #domDataSource\r\n          [id]=\"dataSrcIdPrefix + dataSource.EntityGuid\"\r\n          class=\"dataSource\"\r\n          [ngStyle]=\"{\r\n            top: dataSource.VisualDesignerData.Top + 'px',\r\n            left: dataSource.VisualDesignerData.Left + 'px',\r\n            'min-width': dataSource.VisualDesignerData.Width ? dataSource.VisualDesignerData.Width + 'px' : null,\r\n          }\"\r\n          [ngClass]=\"{\r\n            'show-details': showDataSourceDetails() && vsSvc.dataSourceConfigs()[dataSource.EntityId]?.length,\r\n          }\"\r\n        >\r\n          <div class=\"actions left\">\r\n            <mat-icon class=\"type-info\" [title]=\"typeInfos()[dataSource.EntityGuid].UiHint\">\r\n              {{ typeInfos()[dataSource.EntityGuid].Icon }}\r\n            </mat-icon>\r\n            @if (vsSvc.pipelineModel().Pipeline.AllowEdit && typeInfos()[dataSource.EntityGuid].EnableConfig) {\r\n              <mat-icon\r\n                class=\"configure\"\r\n                title=\"Configure data source\"\r\n                appMousedownStopPropagation\r\n                (click)=\"configureDataSource(dataSource)\"\r\n              >\r\n                settings\r\n              </mat-icon>\r\n            }\r\n            @if (typeInfos()[dataSource.EntityGuid].HelpLink) {\r\n              <mat-icon\r\n                class=\"help\"\r\n                title=\"Help for this data source\"\r\n                appMousedownStopPropagation\r\n                (click)=\"openHelp(typeInfos()[dataSource.EntityGuid].HelpLink)\"\r\n              >\r\n                help_outline\r\n              </mat-icon>\r\n            }\r\n          </div>\r\n          <div class=\"actions right\">\r\n            @if (vsSvc.pipelineModel().Pipeline.AllowEdit && !isOutDataSource(dataSource)) {\r\n              <mat-icon class=\"delete\" title=\"Delete\" appMousedownStopPropagation (click)=\"remove(dataSource)\"> delete </mat-icon>\r\n            }\r\n          </div>\r\n          <div\r\n            class=\"name\"\r\n            title=\"Click to edit name\"\r\n            appMousedownStopPropagation\r\n            (click)=\"vsSvc.pipelineModel().Pipeline.AllowEdit && editName(dataSource)\"\r\n          >\r\n            <span>{{ dataSource.Name || '(no name)' }}</span>\r\n            <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n          </div>\r\n          <br />\r\n          <div\r\n            class=\"description\"\r\n            title=\"Click to edit description\"\r\n            appMousedownStopPropagation\r\n            (click)=\"vsSvc.pipelineModel().Pipeline.AllowEdit && editDescription(dataSource)\"\r\n          >\r\n            <span>{{ dataSource.Description }}</span>\r\n            <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n          </div>\r\n          <br />\r\n          @if (showDataSourceDetails() && vsSvc.dataSourceConfigs()[dataSource.EntityId]?.length) {\r\n            <hr style=\"margin: 0\" />\r\n            <table class=\"configs\">\r\n              @for (config of vsSvc.dataSourceConfigs()[dataSource.EntityId]; track config) {\r\n                <tr class=\"config\">\r\n                  <td class=\"config-name\" [title]=\"config.name\">{{ config.name }}</td>\r\n                  <td class=\"config-value\" [title]=\"config.value\">{{ config.value }}</td>\r\n                </tr>\r\n              }\r\n            </table>\r\n          }\r\n          <div class=\"typename\" [title]=\"dataSource.PartAssemblyAndType\">Type: {{ getTypeName(dataSource.PartAssemblyAndType) }}</div>\r\n          @if (vsSvc.pipelineModel().Pipeline.AllowEdit && typeInfos()[dataSource.EntityGuid].DynamicOut) {\r\n            <div class=\"add-endpoint sourceEndpoint dynamic\" title=\"Drag a new Out-Connection\"></div>\r\n          }\r\n          @if (vsSvc.pipelineModel().Pipeline.AllowEdit && typeInfos()[dataSource.EntityGuid].DynamicIn) {\r\n            <div class=\"many-in targetEndpoint dynamic\" title=\"This data source supports multiple In-Connections\"></div>\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n  </div>\r\n}\r\n","// tslint:disable-next-line:max-line-length\r\nimport { NgClass, NgStyle } from '@angular/common';\r\nimport { AfterViewInit, ChangeDetectorRef, Component, computed, ElementRef, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { BehaviorSubject, combineLatest, map } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { BaseComponent } from '../../shared/components/base.component';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { MousedownStopPropagationDirective } from '../../shared/directives/mousedown-stop-propagation.directive';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { loadScripts } from '../../shared/helpers/load-scripts.helper';\r\nimport { classLog } from '../../shared/logging';\r\nimport { PipelineDataSource, PipelineResultStream, VisualDesignerData } from '../models';\r\nimport { QueryDefinitionService } from '../services/query-definition.service';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { calculateTypeInfos } from './plumb-editor.helpers';\r\nimport { dataSrcIdPrefix, Plumber } from './plumber.helper';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  ngAfterViewInit: false,\r\n}\r\n\r\nconst jsPlumbUrl = 'https://cdnjs.cloudflare.com/ajax/libs/jsPlumb/2.14.5/js/jsplumb.min.js';\r\n\r\n@Component({\r\n    selector: 'app-plumb-editor',\r\n    templateUrl: './plumb-editor.component.html',\r\n    styles: [':host { display: block; width: 100%; height: 100%; }'],\r\n    imports: [\r\n        NgStyle,\r\n        NgClass,\r\n        MatIconModule,\r\n        MousedownStopPropagationDirective,\r\n    ]\r\n})\r\nexport class PlumbEditorComponent extends BaseComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  log = classLog({ PlumbEditorComponent }, logSpecs);\r\n\r\n  @ViewChild('domRoot') private domRootRef: ElementRef<HTMLDivElement>;\r\n  @ViewChildren('domDataSource') private domDataSourcesRef: QueryList<ElementRef<HTMLDivElement>>;\r\n\r\n  dataSrcIdPrefix = dataSrcIdPrefix;\r\n  hardReset = false;\r\n\r\n  #plumber: Plumber;\r\n  #scriptLoaded$ = new BehaviorSubject(false);\r\n\r\n\r\n  #queryDefinitionSvc = transient(QueryDefinitionService);\r\n\r\n  showDataSourceDetails = computed(() => {\r\n    const result = JsonHelpers.tryParse(this.vsSvc.pipelineModel()?.Pipeline.VisualDesignerData) ?? {};\r\n    return result.ShowDataSourceDetails ?? false;\r\n  });\r\n\r\n  typeInfos = computed(() =>\r\n    calculateTypeInfos(this.vsSvc.pipelineModel()?.DataSources ?? [], this.vsSvc.dataSources()\r\n    ));\r\n\r\n  constructor(\r\n    public vsSvc: VisualQueryStateService, // Check if this not with transient better\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) { super(); }\r\n\r\n  ngOnInit() {\r\n    loadScripts([{ test: 'jsPlumb', src: jsPlumbUrl }], () => {\r\n      this.#scriptLoaded$.next(true);\r\n    });\r\n\r\n    this.subscriptions.add(\r\n      this.vsSvc.putEntityCountOnConnections$.subscribe(result => {\r\n        this.#plumber.putEntityCountOnConnections(result);\r\n      })\r\n    );\r\n\r\n    // October 2024 2dg\r\n    // Unclear whether this workaround is still needed, when switching to signal it was commented out October 2024\r\n    // Leave comment in until Q2 2025\r\n\r\n    // this.viewModel$ = combineLatest([\r\n    //   this.vsSvc.pipelineModel$,\r\n    // ]).pipe(\r\n    //   map(([pipelineModel]) => {\r\n    //     if (pipelineModel == null) return;\r\n    //     // workaround for jsPlumb not working with dom elements which it initialized on previously.\r\n    //     // This wipes dom entirely and gives us new elements\r\n    //     this.hardReset = true;\r\n    //     this.changeDetectorRef.detectChanges(); // Forces the view to re-render\r\n    //     this.hardReset = false;\r\n    //     const viewModel: PlumbEditorViewModel = {\r\n    //       removed: \"removeLater\",\r\n    //     };\r\n    //     return viewModel;\r\n    //   }),\r\n    // );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const l = this.log.fnIf('ngAfterViewInit');\r\n    // https://stackoverflow.com/questions/37087864/execute-a-function-when-ngfor-finished-in-angular-2/37088348#37088348\r\n    const domDataSourcesLoaded$ = this.domDataSourcesRef.changes.pipe(map(() => true));\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([this.#scriptLoaded$, domDataSourcesLoaded$]).subscribe(([scriptLoaded, domDataSourcesLoaded]) => {\r\n        if (!scriptLoaded || !domDataSourcesLoaded)\r\n          return;\r\n\r\n        l.a('scriptLoaded and domDataSourcesLoaded', { scriptLoaded, domDataSourcesLoaded });\r\n\r\n        this.#plumber?.destroy();\r\n        this.#plumber = new Plumber(\r\n          this.domRootRef.nativeElement,\r\n          this.vsSvc.pipelineModel(),\r\n          this.vsSvc.dataSources(),\r\n          this.onConnectionsChanged.bind(this),\r\n          this.onDragend.bind(this),\r\n          this.onDebugStream.bind(this),\r\n          this.matDialog,\r\n          this.viewContainerRef,\r\n          this.changeDetectorRef,\r\n        );\r\n      })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.#plumber?.destroy();\r\n    this.#scriptLoaded$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  onConnectionsChanged() {\r\n    const connections = this.#plumber.getAllConnections();\r\n    const streamsOut = this.#plumber.getStreamsOut();\r\n    this.vsSvc.changeConnections(connections, streamsOut);\r\n  }\r\n\r\n  onDragend(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    this.vsSvc.changeDataSourcePosition(pipelineDataSourceGuid, position);\r\n  }\r\n\r\n  onDebugStream(stream: PipelineResultStream) {\r\n    this.vsSvc.debugStream(stream);\r\n  }\r\n\r\n  configureDataSource(dataSource: PipelineDataSource): void {\r\n    // ensure dataSource entity is saved\r\n    if (dataSource.EntityGuid.includes('unsaved'))\r\n      return this.vsSvc.saveAndRun(true, false);\r\n\r\n    this.vsSvc.editDataSource(dataSource);\r\n  }\r\n\r\n  getTypeName(partAssemblyAndType: string) {\r\n    const dataSource = this.vsSvc.dataSources().find(ds => ds.PartAssemblyAndType === partAssemblyAndType);\r\n    return this.#queryDefinitionSvc.typeNameFilter(dataSource?.TypeNameForUi || partAssemblyAndType, 'className');\r\n  }\r\n\r\n  isOutDataSource(pipelineDataSource: PipelineDataSource) {\r\n    return pipelineDataSource.PartAssemblyAndType === eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType;\r\n  }\r\n\r\n  remove(pipelineDataSource: PipelineDataSource) {\r\n    if (!confirm(`Delete ${pipelineDataSource.Name} data source?`)) return;\r\n\r\n    this.#plumber.removeEndpointsOnDataSource(pipelineDataSource.EntityGuid);\r\n    const connections = this.#plumber.getAllConnections();\r\n    const streamsOut = this.#plumber.getStreamsOut();\r\n    this.vsSvc.removeDataSource(pipelineDataSource.EntityGuid, connections, streamsOut);\r\n  }\r\n\r\n  openHelp(url: string) {\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  editName(dataSource: PipelineDataSource) {\r\n    const newName = prompt('Rename data source', dataSource.Name)?.trim();\r\n    if (newName == null || newName === '') return;\r\n\r\n    this.vsSvc.renameDataSource(dataSource.EntityGuid, newName);\r\n  }\r\n\r\n  editDescription(dataSource: PipelineDataSource) {\r\n    const newDescription = prompt('Edit description', dataSource.Description)?.trim();\r\n    if (newDescription == null) return;\r\n\r\n    this.vsSvc.changeDataSourceDescription(dataSource.EntityGuid, newDescription);\r\n  }\r\n\r\n}\r\n","@if (vsSvc.pipelineModel()) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"wrapper\">\r\n      <div class=\"actions\">\r\n        <button mat-raised-button class=\"action\" color=\"accent\" (click)=\"saveAndRunQuery(true, true)\">Save and run</button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(false, true)\">Run</button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(true, false)\">Save</button>\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">\r\n          <div>Query Parameters</div>\r\n          <div>\r\n            <button mat-icon-button tippy=\"Edit parameters\" (click)=\"editPipeline()\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button mat-icon-button tippy=\"Query Params Docs\" (click)=\"openParamsHelp()\">\r\n              <mat-icon>info</mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        @if (vsSvc.pipelineModel().Pipeline.Params?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of vsSvc.pipelineModel().Pipeline.Params?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">Test Parameters</div>\r\n        @if (vsSvc.pipelineModel().Pipeline.TestParameters?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of vsSvc.pipelineModel().Pipeline.TestParameters?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      @if (visualDesignerDataSig()) {\r\n        <div class=\"parameters\">\r\n          <span class=\"eav-slide-toggle-label\">Show DataSource Params</span>\r\n          <mat-slide-toggle\r\n            color=\"primary\"\r\n            [checked]=\"visualDesignerDataSig().ShowDataSourceDetails\"\r\n            (change)=\"showDataSourceDetails($event)\"\r\n          />\r\n        </div>\r\n      }\r\n      @if (warningSig()) {\r\n        @if (warningSig().length) {\r\n          <div class=\"warnings\">\r\n            <div class=\"title\">\r\n              <span>Warnings</span>\r\n              <mat-icon style=\"color: red\">warning</mat-icon>\r\n            </div>\r\n            <ol class=\"values\">\r\n              @for (warning of warningSig(); track warning) {\r\n                <li [innerHTML]=\"warning\"></li>\r\n              }\r\n            </ol>\r\n          </div>\r\n        }\r\n      }\r\n      @if (vsSvc.pipelineModel().Pipeline.Description) {\r\n        <div class=\"description\">\r\n          <div class=\"title\">Query Description</div>\r\n          <div>{{ vsSvc.pipelineModel().Pipeline.Description }}</div>\r\n        </div>\r\n      }\r\n      <div class=\"footer-actions\">\r\n        <button mat-raised-button class=\"action\" (click)=\"openRestApi()\">\r\n          <span>Use in JSON / REST API</span>\r\n          <mat-icon>code_curly</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n","import { Component, signal } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { transient } from '../../../../../core';\r\nimport { GoToDevRest } from '../../dev-rest';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { calculateWarnings } from './run-explorer.helpers';\r\n\r\n@Component({\r\n    selector: 'app-run-explorer',\r\n    templateUrl: './run-explorer.component.html',\r\n    styleUrls: ['./run-explorer.component.scss'],\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatSlideToggleModule,\r\n    ]\r\n})\r\nexport class RunExplorerComponent {\r\n\r\n  warningSig = signal<string[]>(\r\n    calculateWarnings(this.vsSvc?.pipelineModel() ?? null, this.context)\r\n  );\r\n\r\n  visualDesignerDataSig = signal<Record<string, any>>(\r\n    JsonHelpers.tryParse(this.vsSvc?.pipelineModel()?.Pipeline.VisualDesignerData) ?? {}\r\n  );\r\n\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private context: Context,\r\n    public vsSvc: VisualQueryStateService,\r\n  ) { }\r\n\r\n  editPipeline() {\r\n    this.vsSvc.editPipelineEntity();\r\n  }\r\n\r\n  openParamsHelp() {\r\n    window.open('https://go.2sxc.org/QueryParams', '_blank');\r\n  }\r\n\r\n  saveAndRunQuery(save: boolean, run: boolean) {\r\n    this.vsSvc.saveAndRun(save, run);\r\n  }\r\n\r\n  showDataSourceDetails(event: MatSlideToggleChange): void {\r\n    this.vsSvc.showDataSourceDetails(event.checked);\r\n  }\r\n\r\n  openRestApi() {\r\n    const queryGuid = this.vsSvc.pipelineModel().Pipeline.EntityGuid;\r\n    this.#dialogRouter.navRelative([GoToDevRest.getUrlQueryDialog(queryGuid)]);\r\n  }\r\n}\r\n","import { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\n\r\n/**\r\n * Check if there are special warnings the developer should know.\r\n * Typically when the test ModuleId is different from the one we're currently working on\r\n */\r\nexport function calculateWarnings(pipelineModel: PipelineModel, context: Context) {\r\n  if(!pipelineModel) return [];\r\n  const warnings: string[] = [];\r\n\r\n  try {\r\n    const queryParams = pipelineModel.Pipeline.Params?.split(/\\r?\\n/) || [];\r\n    const testParams = pipelineModel.Pipeline.TestParameters?.split(/\\r?\\n/) || [];\r\n\r\n    queryParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) return;\r\n\r\n      // Check if the syntax on Query Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const paramSyntax = /^[a-zA-Z0-9]+=(.*)$/gmi;\r\n      const matched = paramSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Query Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>key=value</code> <br>\r\n          or resolve to a token like: <br>\r\n          <code>key=[source:key]</code>\r\n        `);\r\n      }\r\n    });\r\n\r\n    testParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) return;\r\n\r\n      // Check if the syntax on Test Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const testParamSyntax = /^\\[[a-zA-Z]+:[a-zA-Z0-9]+\\]=(.*)$/gmi;\r\n      const matched = testParamSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Test Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>[source:key]=value</code>\r\n        `);\r\n      }\r\n\r\n      // Check if we should show the warning about the test ModuleId.\r\n      // This is because in the old days, the ModuleId wasn't auto-filled, so people had to add it as a test value.\r\n      // Now it's not necessary any more\r\n      const midRegex = /^\\[module:id\\]=([0-9]*)$/gmi;\r\n      const midMatch = midRegex.exec(param);\r\n      if (midMatch) {\r\n        const testMid = midMatch[1];\r\n        const urlMid = context.moduleId?.toString();\r\n        if (testMid !== urlMid) {\r\n          warnings.push(`\r\n            Your test ModuleId (${testMid}) is different from the current ModuleId (${urlMid}).<br>\r\n            Note that 2sxc automatically provides the ModuleId - so you usually do not need to set it\r\n          `);\r\n        }\r\n      }\r\n\r\n      const oldMidRegex = /^\\[module:moduleid\\]=([0-9]*)$/gmi;\r\n      const oldMidMatch = oldMidRegex.exec(param);\r\n      if (oldMidMatch) {\r\n        warnings.push(`\r\n          You are using deprecated [Module:ModuleId] test parameter.<br>\r\n          Please use [Module:Id]\r\n        `);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Something went wrong in calculateWarnings for params', error);\r\n  }\r\n\r\n  return warnings;\r\n}\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ActivatedRoute, RouterOutlet } from '@angular/router';\r\nimport { Context } from '../shared/services/context';\r\nimport { AddExplorerComponent } from './add-explorer/add-explorer.component';\r\nimport { PlumbEditorComponent } from './plumb-editor/plumb-editor.component';\r\nimport { RunExplorerComponent } from './run-explorer/run-explorer.component';\r\nimport { VisualQueryStateService } from './services/visual-query.service';\r\n\r\n@Component({\r\n    selector: 'app-visual-query',\r\n    templateUrl: './visual-query.component.html',\r\n    styleUrls: ['./visual-query.component.scss'],\r\n    imports: [\r\n        RouterOutlet,\r\n        NgClass,\r\n        MatIconModule,\r\n        RunExplorerComponent,\r\n        AddExplorerComponent,\r\n        PlumbEditorComponent,\r\n    ],\r\n    providers: [\r\n        VisualQueryStateService, // Shared State for the entire Visual Query, - init run here\r\n    ]\r\n})\r\nexport class VisualQueryComponent implements OnInit {\r\n  @ViewChild(PlumbEditorComponent) plumbEditor: PlumbEditorComponent;\r\n\r\n  explorer = {\r\n    run: 'run',\r\n    add: 'add'\r\n  };\r\n  activeExplorer = this.explorer.run;\r\n\r\n  constructor(\r\n    private context: Context,\r\n    private route: ActivatedRoute,\r\n    private visualQueryService: VisualQueryStateService\r\n  ) {\r\n    this.context.init(this.route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.visualQueryService.init();\r\n  }\r\n\r\n  toggleExplorer(explorer: string) {\r\n    this.activeExplorer = (this.activeExplorer === explorer) ? null : explorer;\r\n  }\r\n\r\n  openHelp() {\r\n    window.open('https://go.2sxc.org/visual-query', '_blank');\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n<div class=\"editor-root\">\r\n  <div class=\"editor-side-toolbar\">\r\n    <div class=\"button\" tippy=\"Run\" [ngClass]=\"{ 'active': activeExplorer === explorer.run }\"\r\n      (click)=\"toggleExplorer(explorer.run)\">\r\n      <mat-icon>play_arrow</mat-icon>\r\n    </div>\r\n    <div class=\"button\" tippy=\"Add\" [ngClass]=\"{ 'active': activeExplorer === explorer.add }\"\r\n      (click)=\"toggleExplorer(explorer.add)\">\r\n      <mat-icon>add</mat-icon>\r\n    </div>\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"button\" tippy=\"Help\" (click)=\"openHelp()\">\r\n      <mat-icon>help_outline</mat-icon>\r\n    </div>\r\n  </div>\r\n\r\n  <app-run-explorer [hidden]=\"activeExplorer !== explorer.run\"></app-run-explorer>\r\n\r\n  <app-add-explorer [hidden]=\"activeExplorer !== explorer.add\"></app-add-explorer>\r\n\r\n  <app-plumb-editor></app-plumb-editor>\r\n</div>\r\n","export class ArrayHelpers {\r\n  /**\r\n   * Toggles an item in an array. If the item is not in the array, it is added. If it is in the array, it is removed.\r\n   * @param item The item to toggle\r\n   * @param array The array to toggle the item in\r\n   */\r\n  static toggleInArray<T>(item: T, array: T[]): void {\r\n    const index = array.indexOf(item);\r\n    if (index === -1) {\r\n      array.push(item);\r\n    } else {\r\n      array.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  // probably better: Array.from(new Set(merged));\r\n  // static distinct<T extends unknown>(array: T[]): T[] {\r\n  //   return array.filter(onlyUnique);\r\n  // }\r\n\r\n}\r\n\r\n\r\n// function onlyUnique<T extends unknown>(value: T, index: number, array: T[]): boolean {\r\n//   return array.indexOf(value) === index;\r\n// }","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import { httpResource } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { classLog } from '../../shared/logging';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Query } from '../models/query.model';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  getAll: false,\r\n  getAllSig: true,\r\n  getAllRes: true,\r\n  importQuery: false,\r\n  clonePipeline: false,\r\n  delete: false,  \r\n  update: false,\r\n};\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService extends HttpServiceBase {\r\n\r\n  log = classLog({ PipelinesService }, logSpecs);\r\n\r\n  getAll(contentType: string) {\r\n    const l = this.log.fnIf('getAll');\r\n    return l.r(this.getHttpApiUrl<Query[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType }\r\n    }));\r\n  }\r\n\r\n  getAllSig(contentType: string, initial?: Query[]) {\r\n    const l = this.log.fnIf('getAllSig');\r\n    const sig =  this.getSignal<Query[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType }\r\n    }, initial);\r\n    return l.r(sig);\r\n  }\r\n\r\n  /** Experimental httpResource use! */\r\n  getAllRes(contentType: string, initial?: Query[]) {\r\n    const l = this.log.fnIf('getAllRes');\r\n    const res = httpResource<Query[]>(() => ({\r\n      url: webApiEntityList,\r\n      params: { appId: this.appId, contentType },\r\n    }), { defaultValue: initial });\r\n    return l.r(res);\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    const l = this.log.fnIf('importQuery');\r\n    const obs = from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiQueryImport), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n    return l.r(obs);\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    const l = this.log.fnIf('clonePipeline');\r\n    const obs = this.getHttpApiUrl<null>(webApiQueryClone, {\r\n      params: { Id: id.toString(), appId: this.appId }\r\n    });\r\n    return l.r(obs);\r\n  }\r\n\r\n  delete(id: number) {\r\n    const l = this.log.fnIf('delete');\r\n    const obs = this.http.delete<boolean>(this.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n    return l.r(obs);\r\n  }\r\n}\r\n","import { computed, Injectable, Signal } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\n\r\n// We should list all the \"full\" paths here, so it's easier to find when searching for API calls\r\nexport const webApiTypeRoot = 'admin/type/';\r\nconst webApiTypeGet = 'admin/type/get';\r\nconst webApiTypes = 'admin/type/list';\r\nconst webApiTypeScopes = 'admin/type/scopes';\r\nconst webApiTypeSave = 'admin/type/save';\r\nconst webApiTypeDelete = 'admin/type/delete';\r\nconst webApiTypeImport = 'admin/type/import';\r\nconst webApiTypeAddGhost = 'admin/type/addghost';\r\n\r\n@Injectable()\r\nexport class ContentTypesService extends HttpServiceBase {\r\n\r\n  retrieveContentType(nameId: string) {\r\n    return this.getHttpApiUrl<ContentType>(webApiTypeGet, {\r\n      params: { appId: this.appId, contentTypeId: nameId }\r\n    });\r\n  }\r\n\r\n  getTypeSig(nameId: string, initial: ContentType): Signal<ContentType> {\r\n    return this.getSignal<ContentType>(webApiTypeGet, {\r\n      params: { appId: this.appId, contentTypeId: nameId }\r\n    }, initial);\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.getHttpApiUrl<ContentType[]>(webApiTypes, {\r\n      params: { appId: this.appId, scope }\r\n    });\r\n  }\r\n\r\n  getTypesSig(scope: string, initial: ContentType[]): Signal<ContentType[]> {\r\n    return this.getSignal<ContentType[]>(webApiTypes, {\r\n      params: { appId: this.appId, scope }\r\n    }, initial);\r\n  }\r\n\r\n  // TODO: remove this method after upgrade to V2\r\n  getScopes() {\r\n    return this.getHttpApiUrl<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(webApiTypeScopes, {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => {\r\n        // wip during upgrade:\r\n        const scopes = scopesData.old;\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  // todo: switch to using the GetSignal with `map` parameter similar to the initial version above\r\n  getScopesSig(initial: undefined): Signal<ScopeOption[]> {\r\n    const scopesSignal = this.getSignal<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(\r\n      webApiTypeScopes,\r\n      { params: { appId: this.appId } }, initial,\r\n    );\r\n\r\n    const scopeOptionsSignal = computed(() => {\r\n      const scopesData = scopesSignal();\r\n\r\n      // Add null/undefined check here\r\n      if (!scopesData || !scopesData.old) {\r\n        return []; // Return an empty array or handle this case as appropriate\r\n      }\r\n\r\n      const scopes = scopesData.old;\r\n      return Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n    });\r\n\r\n    return scopeOptionsSignal;\r\n  }\r\n\r\n  getScopesV2() {\r\n    return this.getHttpApiUrl<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(webApiTypeScopes, {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => scopesData.scopes),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeSave), contentType, {\r\n      params: { appid: this.appId },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeDelete), {\r\n      params: { appid: this.appId, staticName: contentType.NameId }, // TODO: @2pp - replace staticName with NameId\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  createGhost(sourceNameId: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeAddGhost), null, {\r\n      params: { appid: this.appId, sourceNameId },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService extends HttpServiceBase {\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.appId,\r\n        zoneId: this.zoneId,\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n"],"x_google_ignoreList":[5,30,34]}