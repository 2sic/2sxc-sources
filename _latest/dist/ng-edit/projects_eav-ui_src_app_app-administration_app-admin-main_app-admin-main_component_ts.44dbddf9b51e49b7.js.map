{"version":3,"file":"projects_eav-ui_src_app_app-administration_app-admin-main_app-admin-main_component_ts.44dbddf9b51e49b7.js","mappings":"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","names":["AppAdminMenu","name","path","icon","svgIcon","tippy","eavConstants","scopes","default","value","child","GoToCopilot","routeDefinition","GoToDevRest","routeDataDefinition","routeQueryDefinition","CopilotSpecs","webApi","teaser","routeWebApiDefinition","i0","_r2","sidenav_r3","opened","vm_r4","dialogSettings","Context","App","Icon","_r5","Name","breadcrumb_r6","AppAdminMainComponent_Conditional_0_ng_container_13_Conditional_1_Template","last_r7","AppAdminMainComponent_Conditional_0_Conditional_2_Template","AppAdminMainComponent_Conditional_0_Conditional_3_Template","AppAdminMainComponent_Conditional_0_Conditional_5_Template","AppAdminMainComponent_Conditional_0_Conditional_6_Template","AppAdminMainComponent_Conditional_0_ng_container_13_Template","AppAdminMainComponent_Conditional_0_ng_template_14_Template","_r1","ctx_r7","closeDialog","AppAdminMainComponent_Conditional_0_For_24_Template","_forTrack0","SettingsScope","AppScopes","Global","emptyTemplate_r10","smallScreen","matches","sideNavOpened","navItems","AppAdminMainComponent","BaseWithChildDialogComponent","constructor","router","route","dialogRef","appDialogConfigService","media","super","EavLogger","this","dialogSettings$","BehaviorSubject","undefined","pathsArray$","currentPath$","combineLatest","events","pipe","filter","event","NavigationEnd","map","snapshot","firstChild","url","startWith","paths","currentPath","viewModel$","matchMedia","log","a","ngOnInit","fetchDialogSettings","subscriptions","add","childDialogClosed$","subscribe","addEventListener","c","sidenav","mode","ngOnDestroy","complete","close","getCurrent$","UpdateEnvVarsFromDialogSettings","next","Enable","Query","item","static","t","i1","i2","i3","i4","core","VBU","selectors","viewQuery","rf","ctx","AppDialogConfigService","decls","vars","consts","template","AppAdminMainComponent_Conditional_0_Template","tmp_0_0","MatToolbarModule","i5","MatIconModule","i6","BreadcrumbModule","i7","MatButtonModule","i8","MatSidenavModule","i9","RouterOutlet","AsyncPipe","NavItemListComponent","ToggleDebugDirective","styles"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/app-admin-main/app-admin-menu.ts","./projects/eav-ui/src/app/app-administration/app-admin-main/app-admin-main.component.html","./projects/eav-ui/src/app/app-administration/app-admin-main/app-admin-main.component.ts"],"sourcesContent":["import { NavItem } from \"../../shared/models/nav-item.model\";\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { GoToCopilot } from '../copilot/go-to-copilot';\r\nimport { GoToDevRest } from '../../dev-rest/go-to-dev-rest';\r\nimport { CopilotSpecs } from '../copilot/copilot-specs';\r\n\r\nexport const AppAdminMenu: NavItem[] = [\r\n\r\n  { name: 'App Info', path: 'home', icon: 'info', svgIcon: false, tippy: 'App Info' },\r\n  {\r\n    name: 'Data', path: `data/${eavConstants.scopes.default.value}`, icon: 'menu', svgIcon: false, tippy: 'Data / Content',\r\n    child: [\r\n      { ...GoToCopilot.routeDefinition('data'), tippy: 'Autogenerate content types ' },\r\n      { ...GoToDevRest.routeDataDefinition, tippy: 'Rest-Api Data ' },\r\n    ]\r\n  },\r\n  {\r\n    name: 'Queries',\r\n    path: 'queries',\r\n    icon: 'filter_list',\r\n    svgIcon: false,\r\n    tippy: 'Queries / Visual Query Designer',\r\n    child: [\r\n      { ...GoToDevRest.routeQueryDefinition, tippy: 'Rest-Api Queries' },\r\n    ]\r\n  },\r\n  {\r\n    name: 'Views',\r\n    path: 'views',\r\n    icon: 'layers',\r\n    svgIcon: false,\r\n    tippy: 'Views / Templates',\r\n    child: [\r\n      {\r\n        ...GoToCopilot.routeDefinition('views'),\r\n        tippy: 'Autogenerate Razor Views'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    name: 'Web API', path: 'web-api', icon: 'offline_bolt', svgIcon: false, tippy: 'WebApi',\r\n    child: [\r\n      {\r\n        ...GoToCopilot.routeDefinition('web-api'),\r\n        tippy: CopilotSpecs.webApi.teaser,\r\n      },\r\n      {\r\n        ...GoToDevRest.routeWebApiDefinition,\r\n        tippy: 'Rest-Api Queries'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    name: 'App',\r\n    path: 'app',\r\n    icon: 'settings_applications',\r\n    svgIcon: false,\r\n    tippy: 'App Settings',\r\n    child: [\r\n      {\r\n        name: 'Export App',\r\n        path: 'export-app',\r\n        // icon: 'browser_updated',\r\n        // 2dm: note that I would prefer this icon, but we would first have to switch to Material Symbols\r\n        icon: 'deployed_code_update',\r\n        svgIcon: false,\r\n        tippy: 'Export this entire App'\r\n      },\r\n      {\r\n        name: 'Export Parts',\r\n        path: 'export-parts',\r\n        icon: 'cloud_download',\r\n        svgIcon: false,\r\n        tippy: 'Export parts of this App'\r\n      },\r\n      {\r\n        name: 'Imports Parts',\r\n        path: 'import-parts',\r\n        icon: 'cloud_upload',\r\n        svgIcon: false,\r\n        tippy: 'Import parts of this App'\r\n      },\r\n      {\r\n        name: 'App-State Git Sync',\r\n        path: 'app-state',\r\n        icon: 'sync',\r\n        svgIcon: false,\r\n        tippy: 'App-State Versioning'\r\n      },\r\n    ]\r\n  },\r\n];\r\n","@if (viewModel$ | async; as vm) {\r\n<mat-toolbar appToggleDebug>\r\n  <div class=\"toolbar-container\">\r\n    <!-- App Logo -->\r\n    @if (vm.dialogSettings?.Context.App.Icon) {\r\n    <img (click)=\"sidenav.opened = !sidenav.opened\"\r\n      [src]=\"vm.dialogSettings?.Context.App.Icon + '?w=40&h=40&mode=crop'\" />\r\n    } @else {\r\n    <mat-icon class=\"menu-container\" (click)=\"sidenav.opened = !sidenav.opened\">menu</mat-icon>\r\n    }\r\n    <!-- App Name -->\r\n    <div class=\"d-flex\">\r\n      @if (vm.dialogSettings?.Context.App.SettingsScope === AppScopes.Global) {\r\n      Global\r\n      }\r\n      @if (vm.dialogSettings?.Context.App.SettingsScope !== AppScopes.Global) {\r\n      {{ vm.dialogSettings?.Context.App.Name }}\r\n      }\r\n      <span>\r\n        <span class=\"mat-icon-admin\">\r\n          <mat-icon>settings</mat-icon>\r\n        </span>\r\n        Admin\r\n      </span>\r\n    </div>\r\n    <!-- Breadcrumb in the Toolbar after show Img and Aoo Name -->\r\n    <xng-breadcrumb [separator]=\"emptyTemplate\">\r\n      <ng-container *xngBreadcrumbItem=\"let breadcrumb; let info = info; let last = last\">\r\n        @if (last) {\r\n        <mat-icon class=\"breadcrumb-icon\">chevron_right</mat-icon>\r\n        {{ breadcrumb }}\r\n        }\r\n      </ng-container>\r\n    </xng-breadcrumb>\r\n    <ng-template #emptyTemplate></ng-template>\r\n  </div>\r\n  <span class=\"toolbar-spacer\"></span>\r\n  <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n    <mat-icon>close</mat-icon>\r\n  </button>\r\n</mat-toolbar>\r\n<mat-sidenav-container appToggleDebug>\r\n\r\n  <mat-sidenav #sidenav [mode]=\"smallScreen.matches ? 'over' : 'side'\" [opened]=\"sideNavOpened\">\r\n    @for (navItem of navItems; track navItem.path) {\r\n    <app-nav-item-list [navItem]=\"navItem\"></app-nav-item-list>\r\n    }\r\n    <div class=\"sideNav-bottom-info\">\r\n      <p>use App logo to show/hide menu</p>\r\n    </div>\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content>\r\n    <router-outlet></router-outlet>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, NavigationEnd, Router, RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, filter, map, startWith, tap } from 'rxjs';\r\nimport { BaseWithChildDialogComponent } from '../../shared/components/base-with-child-dialog.component';\r\nimport { UpdateEnvVarsFromDialogSettings } from '../../shared/helpers/update-env-vars-from-dialog-settings.helper';\r\nimport { AppScopes } from '../../shared/models/dialog-context.models';\r\nimport { DialogSettings } from '../../shared/models/dialog-settings.model';\r\nimport { AppDialogConfigService } from '../services/app-dialog-config.service';\r\nimport { MatSidenav, MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { AppAdminMenu } from './app-admin-menu';\r\nimport { EavLogger } from '../../shared/logging/eav-logger';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { BreadcrumbModule } from 'xng-breadcrumb';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { NavItemListComponent } from '../../shared/components/nav-item-list/nav-item-list.component';\r\nimport { transient } from '../../core';\r\nimport { ToggleDebugDirective } from '../../shared/directives/toggle-debug.directive';\r\n\r\nconst logThis = false;\r\n\r\n@Component({\r\n  selector: 'app-app-admin-main',\r\n  templateUrl: './app-admin-main.component.html',\r\n  styleUrls: ['./app-admin-main.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    BreadcrumbModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    RouterOutlet,\r\n    AsyncPipe,\r\n    NavItemListComponent,\r\n    ToggleDebugDirective,\r\n  ],\r\n  providers: [\r\n    // Must have a new config service here, to restart with new settings\r\n    // which are injected into it from the context\r\n    // Because of standalone-components, it's not enough to have it in the module-definition\r\n    AppDialogConfigService, // must be by Providers\r\n  ],\r\n})\r\nexport class AppAdminMainComponent extends BaseWithChildDialogComponent implements OnInit, OnDestroy {\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<AppAdminMainComponent>,\r\n    private appDialogConfigService: AppDialogConfigService,\r\n    private media: MediaMatcher\r\n  ) {\r\n    super(router, route, new EavLogger('AppAdminMainComponent', logThis));\r\n    this.log.a('constructor', { appDialogConfigService });\r\n  }\r\n\r\n  AppScopes = AppScopes;\r\n\r\n  private dialogSettings$ = new BehaviorSubject<DialogSettings>(undefined);\r\n  private pathsArray$ = new BehaviorSubject<string[]>(undefined);\r\n  private currentPath$ = combineLatest([\r\n    this.pathsArray$,\r\n    this.router.events.pipe(\r\n      filter((event) => event instanceof NavigationEnd),\r\n      map(() => this.route.snapshot.firstChild.url[0].path),\r\n      startWith(this.route.snapshot.firstChild.url[0].path)\r\n    ),\r\n  ]).pipe(\r\n    map(([paths, currentPath]) => {\r\n      if (paths == null) return;\r\n      return currentPath;\r\n    })\r\n  );\r\n\r\n  // Generate View Model\r\n  viewModel$ = combineLatest([this.dialogSettings$, this.currentPath$]).pipe(\r\n    map(([dialogSettings, currentPath]) => {\r\n      return {\r\n        dialogSettings,\r\n        currentPath,\r\n      };\r\n    })\r\n  );\r\n\r\n  smallScreen: MediaQueryList = this.media.matchMedia('(max-width: 1000px)');\r\n  @ViewChild('sidenav') sidenav!: MatSidenav;\r\n  sideNavOpened = !this.smallScreen.matches;\r\n\r\n  /** Navigation menu buttons - prefilled; may be modified after settings are loaded */\r\n  navItems = AppAdminMenu;\r\n\r\n  matcher!: MediaQueryList;\r\n\r\n\r\n  ngOnInit() {\r\n    this.fetchDialogSettings();\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe(() => {\r\n        this.fetchDialogSettings();\r\n      })\r\n    );\r\n\r\n    this.smallScreen.addEventListener(\r\n      'change',\r\n      (c) => (\r\n        this.sidenav.opened = !c.matches,\r\n        this.sidenav.mode = c.matches ? 'over' : 'side'\r\n      )\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dialogSettings$.complete();\r\n    this.pathsArray$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private fetchDialogSettings() {\r\n    this.appDialogConfigService.getCurrent$().subscribe((dialogSettings) => {\r\n      UpdateEnvVarsFromDialogSettings(dialogSettings.Context.App);\r\n      this.dialogSettings$.next(dialogSettings);\r\n\r\n      if (!dialogSettings.Context.Enable.Query)\r\n        this.navItems = this.navItems.filter(\r\n          (item) => item.name !== 'Queries' && item.name !== 'Web API'\r\n        );\r\n\r\n      this.pathsArray$.next(this.navItems.map((item) => item.path));\r\n    });\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}