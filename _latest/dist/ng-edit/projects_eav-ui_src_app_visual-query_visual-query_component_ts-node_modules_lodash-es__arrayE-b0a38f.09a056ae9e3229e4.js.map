{"version":3,"file":"projects_eav-ui_src_app_visual-query_visual-query_component_ts-node_modules_lodash-es__arrayE-b0a38f.09a056ae9e3229e4.js","mappings":"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","names":["ExportAppPartsService","HttpServiceBase","getContentInfo","scope","this","http","get","apiUrl","webApiAppPartsRoot","params","appid","appId","zoneId","exportParts","contentTypeIds","entityIds","templateIds","url","join","window","open","static","t","_angular_core__WEBPACK_IMPORTED_MODULE_2__","jDH","factory","ɵfac","ExportAppService","getAppInfo","webApiAppRoot","exportAppUrl","exportForVersionControl","includeContentGroups","resetAppGuid","withFiles","toString","withPortalFiles","ImportAppPartsService","importAppParts","file","formData","FormData","append","post","resetApp","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","contentType","webApiEntityList","importQuery","from","toBase64","pipe","switchMap","fileBase64","AppId","ContentBase64","map","success","Success","Messages","clonePipeline","id","Id","delete","_angular_core__WEBPACK_IMPORTED_MODULE_6__","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","import","export","getPolymorphism","getUsage","guid","_angular_core__WEBPACK_IMPORTED_MODULE_1__","isEscape","event","key","isCtrlS","ctrlKey","metaKey","ImportAppService","importApp","changedName","retryOnDuplicate","result","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","of","_angular_core__WEBPACK_IMPORTED_MODULE_4__","MousedownStopPropagationDirective","onMousedown","stopPropagation","_angular_core__WEBPACK_IMPORTED_MODULE_0__","FsC","selectors","hostBindings","rf","ctx","i0","$event","ArrayHelpers","toggleInArray","item","array","index","indexOf","push","splice","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","split","onerror","error","readAsText","mapUntilChanged","fn","distinctUntilChanged","mapUntilObjChanged","isEqual","QueryDefinitionService","fetchPipeline","pipelineEntityId","dataSources","pipelineModel","DataSources","length","buildDefaultModel","fixPipelineDataSources","templateDataSources","eavConstants","pipelineDesigner","defaultPipeline","templateDS","dataSource","find","ds","PartAssemblyAndType","Description","EntityGuid","EntityId","undefined","Name","VisualDesignerData","Pipeline","StreamWiring","streamWiring","pipelineDataSources","some","pipelineDS","outDataSource","outDs","pipelineDataSource","Top","Left","fetchDataSources","ContentType","Difficulty","dataSourceDifficulties","default","DynamicIn","DynamicOut","EnableConfig","HelpLink","Icon","In","Out","PrimaryType","TypeNameForUi","UiHint","typeNameFilter","input","format","globalParts","classFullNameParts","savePipeline","pipeline","newPipelineModel","runPipeline","top","debugStream","source","sourceOut","out","core","ctx_r0","name","sourceName","option_r3","_r2","$implicit","show","QueryResultComponent_For_18_Conditional_2_Template","QueryResultComponent_For_18_Conditional_3_Template","param_r4","QueryResultComponent_Conditional_22_div_1_Template","QueryResultComponent_Conditional_22_For_5_Template","parameters","source_r5","value","Definition","config_r6","QueryResultComponent_For_37_Conditional_2_Template","QueryResultComponent_For_37_For_10_Template","Guid","Type","Configuration","Error","stream_r7","Source","SourceOut","Target","TargetIn","Count","QueryResultComponent","constructor","dialogData","dialogRef","visualQueryService","ngOnInit","pipelineModel$","Params","filter","el","testParams","TestParameters","concat","timeUsed","QueryTimer","Milliseconds","ticksUsed","Ticks","optionsForTop","Query","sources","Sources","streams","Streams","closeDialog","close","original","MAT_DIALOG_DATA","i1","i2","VBU","standalone","features","decls","vars","consts","template","QueryResultComponent_Conditional_4_Template","QueryResultComponent_div_13_Template","QueryResultComponent_Conditional_15_Template","QueryResultComponent_Conditional_16_Template","QueryResultComponent_For_18_Template","QueryResultComponent_Conditional_22_Template","QueryResultComponent_div_24_Template","QueryResultComponent_For_37_Template","QueryResultComponent_div_40_Template","QueryResultComponent_For_53_Template","MatButtonModule","i3","MatIconModule","i4","MatTabsModule","i5","JsonPipe","KeyValuePipe","styles","StreamErrorResultComponent","errorData","openInsights","$2sxc","MatDialogActions","VisualQueryStateService","ServiceBase","#contentTypesSvc","#metadataSvc","#queryDefSvc","#dialogRoute","#titleSvc","#pipelineId","#refreshPipeline","#refreshDataSourceConfigs","snackBar","dialog","viewContainerRef","zone","changeDetectorRef","super","transient","ContentTypesService","MetadataService","DialogRoutingService","Title","BehaviorSubject","dataSources$","putEntityCountOnConnections$","Subject","dataSourceConfigs$","parseInt","getParam","ngOnDestroy","complete","init","attachKeyboardSave","doOnDialogClosed","editPipelineEntity","form","items","EditPrep","editId","formUrl","convertFormToUrl","navRelative","saveAndRun","save","run","showDataSourceDetails","showDetails","cloneDeep","visualDesignerData","JsonHelpers","tryParse","ShowDataSourceDetails","JSON","stringify","next","addDataSource","removeDataSource","pipelineDataSourceGuid","connections","streamsOut","StreamsOut","renameDataSource","changeDataSourceDescription","description","changeConnections","changeDataSourcePosition","position","calculateDataSourceConfigs","dataSourceConfigs","forEach","Metadata","metadataItem","Object","entries","attributeName","attributeValue","includes","Array","isArray","editDataSource","contentTypeName","getMetadata","metadata","entity","targetType","keyType","subscribe","Items","retrieveContentType","duration","newMetadata","callback","pipelineResult","showQueryResult","console","warn","setTimeout","stream","showStreamErrorResult","streamResult","refreshPipeline","refreshDataSourceConfigs","showSnackBar","setTitle","autoFocus","backdropClass","closeOnNavigation","data","panelClass","markForCheck","ErrorData","runOutsideAngular","subscriptions","add","fromEvent","snapshot","firstChild","preventDefault","guiTypes","App","Label","Cache","Filter","Logic","Lookup","Modify","Security","Sort","Unknown","Debug","System","calculateTypeInfos","typeInfos","typeInfo","RenameStreamComponent_Conditional_9_Conditional_4_Template","RenameStreamComponent_Conditional_9_Conditional_5_Template","isSource","pipelineResultExists","controls","label","touched","errors","required","scopeOption_r3","RenameStreamComponent_Conditional_10_Conditional_0_For_5_Template","scopeOptions","labelOption_r4","RenameStreamComponent_Conditional_10_Conditional_4_For_2_Template","labelOptions","RenameStreamComponent_Conditional_10_Conditional_0_Template","RenameStreamComponent_Conditional_10_Conditional_4_Template","RenameStreamComponent_Conditional_10_Conditional_5_Template","toggleGuidedLabel","RenameStreamComponent_Conditional_10_Conditional_13_Template","advancedMode","guidedLabel","_c0","_r5","toggleAdvancedMode","RenameStreamComponent","BaseComponent","hostClass","contentTypesService","buildForm","checked","rename","formValue","getRawValue","UntypedFormGroup","UntypedFormControl","Validators","scopes","valueChanges","startWith","values","Scope","patchValue","getScopes","filtered","s","o","hostVars","RenameStreamComponent_Conditional_9_Template","RenameStreamComponent_Conditional_10_Template","RenameStreamComponent_Conditional_13_Template","valid","FormsModule","ReactiveFormsModule","MatFormFieldModule","i6","MatInputModule","i7","MatSelectModule","i8","i9","MatOptionModule","NgClass","MatSlideToggleModule","i10","FieldHintComponent","ClickStopPropagationDirective","dataSrcIdPrefix","Plumber","jsPlumbRoot","onConnectionsChanged","onDragend","onDebugStream","log","classLog","lineCount","linePaintDefault","stroke","strokeWidth","outlineStroke","outlineWidth","lineColors","maxCols","uuidColorMap","bulkDelete","instance","jsPlumb","getInstance","getInstanceDefaults","batch","initDomDataSources","initWirings","bindEvents","repaintEverything","destroy","reset","unbindContainer","removeEndpointsOnDataSource","elementId","selectEndpoints","element","getAllConnections","connection","From","sourceId","replace","endpoints","getOverlay","To","targetId","getStreamsOut","target","each","endpoint","putEntityCountOnConnections","sourceElementId","targetElementId","fromUuid","toUuid","getEndpoint","getUuid","setLabel","cssClass","events","click","overlay","AllowEdit","nextLinePaintStyle","uuid","assign","container","Container","Connector","curviness","PaintStyle","HoverPaintStyle","l","fnCond","domDataSource","querySelector","draggable","grid","stop","finalPos","outCount","a","addEndpoint","inCount","in","targetEndpointUnlimited","buildTargetEndpoint","maxConnections","makeTarget","makeSource","buildSourceEndpoint","end","wirings","inGroups","groupBy","wire","outGroups","pipeDataSource","connect","uuids","paintStyle","message","to","endpointName","isIn","count","d","connectionList","isDynamic","getEndpointInfo","endpointInfo","style","angled","model","enabled","addClass","fill","radius","anchor","faces","overlays","getEndpointOverlays","endpointOrOverlay","onChangeLabel","isTarget","dropOptions","hoverClass","activeClass","location","width","afterClosed","newLabel","bind","info","targetEndpoint","deleteEndpoint","deleteConnection","fireEvent","endpointLabel","labelPrompt","getLabel","getEndpoints","canvas","classList","contains","Math","floor","random","trimmed","trim","endsWith","substring","arr","reduce","groups","dataSource_r3","ctx_r3","configureDataSource","vm_r6","openHelp","_r7","remove","config_r8","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_For_3_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_5_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_6_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_8_Template","_r1","allowEdit","editName","editDescription","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_24_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_25_Template","_c2","Width","_c3","isOutDataSource","getTypeName","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Template","PlumbEditorComponent_Conditional_0_Conditional_2_Template","hardReset","PlumbEditorComponent","scriptLoaded$","queryDefinitionService","loadScripts","test","src","plumber","pipelineDesignerData$","m","viewModel$","combineLatest","pipelineDesignerData","detectChanges","ngAfterViewInit","domDataSourcesLoaded$","domDataSourcesRef","changes","scriptLoaded","domDataSourcesLoaded","domRootRef","nativeElement","partAssemblyAndType","confirm","newName","newDescription","viewQuery","PlumbEditorComponent_Conditional_0_Template","tmp_0_0","NgStyle","AsyncPipe","dataSource_r6","ctx_r1","AddExplorerComponent_Conditional_0_For_6_Conditional_5_For_2_Template","trackDataSources","group_r4","_r3","toggleItem","AddExplorerComponent_Conditional_0_For_6_Conditional_5_Template","tmp_14_0","toggledItems","toggleDifficulty","AddExplorerComponent_Conditional_0_For_6_Template","trackGroups","sorted","AddExplorerComponent","difficulties","difficulty$","difficulty","filterAndSortDataSources","maxDifficulty","sort","b","toLocaleLowerCase","localeCompare","type","advanced","AddExplorerComponent_Conditional_0_Template","TippyDirective","param_r3","RunExplorerComponent_Conditional_0_Conditional_20_For_2_Template","pipelineModel_r4","param_r5","RunExplorerComponent_Conditional_0_Conditional_24_For_2_Template","_r6","RunExplorerComponent_Conditional_0_Conditional_27_Conditional_0_For_8_Template","warnings_r8","RunExplorerComponent_Conditional_0_Conditional_27_Conditional_0_Template","saveAndRunQuery","editPipeline","openParamsHelp","RunExplorerComponent_Conditional_0_Conditional_20_Template","RunExplorerComponent_Conditional_0_Conditional_24_Template","RunExplorerComponent_Conditional_0_Conditional_25_Template","RunExplorerComponent_Conditional_0_Conditional_27_Template","RunExplorerComponent_Conditional_0_Conditional_29_Template","openRestApi","tmp_4_0","visualDesignerData$","tmp_5_0","warnings$","RunExplorerComponent","#dialogRouter","context","asObservable","calculateWarnings","warnings","queryParams","param","midMatch","exec","testMid","urlMid","moduleId","GoToDevRest","getUrlQueryDialog","RunExplorerComponent_Conditional_0_Template","VisualQueryComponent","route","explorer","activeExplorer","toggleExplorer","RouterOutlet","__WEBPACK_DEFAULT_EXPORT__","arrayEach","iteratee","_defineProperty","func","getNative","_baseAssignValue","baseAssignValue","object","defineProperty","configurable","enumerable","writable","objectCreate","create","proto","isObject","prototype","getPrototype","overArg","getPrototypeOf"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/edit/dialog/main/keyboard-shortcuts.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/shared/directives/mousedown-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/helpers/array.helpers.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts","./projects/eav-ui/src/app/shared/rxJs/mapUntilChanged.ts","./projects/eav-ui/src/app/visual-query/services/query-definition.service.ts","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.html","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.html","./projects/eav-ui/src/app/visual-query/services/visual-query.service.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.helpers.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumber.helper.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.html","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.html","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.html","./node_modules/lodash-es/_arrayEach.js","./node_modules/lodash-es/_defineProperty.js","./node_modules/lodash-es/_baseAssignValue.js","./node_modules/lodash-es/_baseCreate.js","./node_modules/lodash-es/_getPrototype.js"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\n@Injectable()\r\nexport class ExportAppPartsService extends HttpServiceBase {\r\n\r\n  getContentInfo(scope: string) {\r\n    return this.http.get<ContentInfo>(this.apiUrl(webApiAppPartsRoot + 'Get'), {\r\n      params: { appid: this.appId, zoneId: this.zoneId, scope },\r\n    });\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.appId\r\n      + '&zoneId=' + this.zoneId\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { AppInfo } from '../models/app-info.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\n@Injectable()\r\nexport class ExportAppService extends HttpServiceBase {\r\n\r\n  getAppInfo() {\r\n    return this.http.get<AppInfo>(this.apiUrl(webApiAppRoot + 'Statistics'), {\r\n      params: { appid: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  /** Generate the export app path. It can be extended with additional parameters */\r\n  exportAppUrl() {\r\n    return `${this.apiUrl(`${webApiAppRoot}Export`)}?appId=${this.appId}&zoneId=${this.zoneId}`;\r\n  }\r\n\r\n  exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }) {\r\n    return this.http.get<boolean>(this.apiUrl(webApiAppRoot + 'SaveData'), {\r\n      params: {\r\n        appid: this.appId,\r\n        zoneId: this.zoneId,\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService extends HttpServiceBase {\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.appId,\r\n        zoneId: this.zoneId,\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Query } from '../models/query.model';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService extends HttpServiceBase {\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get<Query[]>(this.apiUrl(webApiEntityList), {\r\n      params: { appId: this.appId, contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiQueryImport), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get<null>(this.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService extends HttpServiceBase {\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.apiUrl(webApiViews), {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.appId, guid }\r\n    });\r\n  }\r\n}\r\n","\r\nexport function isEscape(event: KeyboardEvent): boolean {\r\n  return event.key === 'Escape';\r\n}\r\n\r\nexport function isCtrlS(event: KeyboardEvent): boolean {\r\n  return event.key === 's' && (event.ctrlKey || event.metaKey);\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService extends HttpServiceBase {\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.zoneId }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appMousedownStopPropagation]',\r\n  standalone: true\r\n})\r\nexport class MousedownStopPropagationDirective {\r\n  @HostListener('mousedown', ['$event'])\r\n  onMousedown(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","export class ArrayHelpers {\r\n  /**\r\n   * Toggles an item in an array. If the item is not in the array, it is added. If it is in the array, it is removed.\r\n   * @param item The item to toggle\r\n   * @param array The array to toggle the item in\r\n   */\r\n  static toggleInArray<T>(item: T, array: T[]): void {\r\n    const index = array.indexOf(item);\r\n    if (index === -1) {\r\n      array.push(item);\r\n    } else {\r\n      array.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  // probably better: Array.from(new Set(merged));\r\n  // static distinct<T extends unknown>(array: T[]): T[] {\r\n  //   return array.filter(onlyUnique);\r\n  // }\r\n\r\n}\r\n\r\n\r\n// function onlyUnique<T extends unknown>(value: T, index: number, array: T[]): boolean {\r\n//   return array.indexOf(value) === index;\r\n// }","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","import { Observable, pipe, UnaryFunction } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport isEqual from 'lodash-es/isEqual';\r\n\r\n/**\r\n * Combine map and distinctUntilChanged, as this is a very common pattern.\r\n * @param fn the mapping function\r\n * @returns\r\n */\r\nexport function mapUntilChanged<T, R>(\r\n  fn: (state: T) => R\r\n): UnaryFunction<Observable<T>, Observable<R>> {\r\n  return pipe(\r\n    distinctUntilChanged(),\r\n    map(fn),\r\n    distinctUntilChanged(),\r\n  );\r\n}\r\n\r\nexport function mapUntilObjChanged<T, R>(\r\n  fn: (state: T) => R\r\n): UnaryFunction<Observable<T>, Observable<R>> {\r\n  return pipe(\r\n    distinctUntilChanged(isEqual),\r\n    map(fn),\r\n    distinctUntilChanged(isEqual),\r\n  );\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { webApiQueryDataSources, webApiQueryDebugStream, webApiQueryGet, webApiQueryRun, webApiQuerySave } from '../../app-administration/services';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult } from '../models';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\n@Injectable()\r\nexport class QueryDefinitionService extends HttpServiceBase {\r\n\r\n  fetchPipeline(pipelineEntityId: number, dataSources: DataSource[]) {\r\n    return this.http.get<PipelineModel>(webApiQueryGet, {\r\n      params: { appId: this.appId, id: pipelineEntityId.toString() }\r\n    }).pipe(\r\n      map(pipelineModel => {\r\n        // if pipeline is new, populate it with default model\r\n        if (!pipelineModel.DataSources.length) {\r\n          this.buildDefaultModel(pipelineModel, dataSources);\r\n        }\r\n        this.fixPipelineDataSources(pipelineModel.DataSources);\r\n        return pipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  private buildDefaultModel(pipelineModel: PipelineModel, dataSources: DataSource[]) {\r\n    const templateDataSources = eavConstants.pipelineDesigner.defaultPipeline.dataSources;\r\n    for (const templateDS of templateDataSources) {\r\n      const dataSource = dataSources.find(ds => ds.PartAssemblyAndType === templateDS.PartAssemblyAndType);\r\n      const pipelineDataSource: PipelineDataSource = {\r\n        Description: '',\r\n        EntityGuid: templateDS.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: dataSource.Name,\r\n        PartAssemblyAndType: templateDS.PartAssemblyAndType,\r\n        VisualDesignerData: templateDS.VisualDesignerData,\r\n      };\r\n      pipelineModel.DataSources.push(pipelineDataSource);\r\n    }\r\n\r\n    pipelineModel.Pipeline.StreamWiring = eavConstants.pipelineDesigner.defaultPipeline.streamWiring;\r\n  }\r\n\r\n  private fixPipelineDataSources(pipelineDataSources: PipelineDataSource[]) {\r\n    const outDataSourceExists = pipelineDataSources.some(\r\n      pipelineDS => pipelineDS.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    );\r\n    if (!outDataSourceExists) {\r\n      const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n      const outDsConst: PipelineDataSource = {\r\n        Description: outDs.Description,\r\n        EntityGuid: outDs.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: outDs.Name,\r\n        PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n        VisualDesignerData: outDs.VisualDesignerData,\r\n      };\r\n      pipelineDataSources.push(outDsConst);\r\n    }\r\n\r\n    for (const pipelineDataSource of pipelineDataSources) {\r\n      pipelineDataSource.VisualDesignerData ??= { Top: 50, Left: 50 };\r\n    }\r\n  }\r\n\r\n  fetchDataSources() {\r\n    return this.http.get<DataSource[]>(webApiQueryDataSources, {\r\n      params: {\r\n        appid: this.appId,\r\n        zoneId: this.zoneId,\r\n      },\r\n    }).pipe(\r\n      map(dataSources => {\r\n        const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n        const outDsConst: DataSource = {\r\n          ContentType: undefined,\r\n          Difficulty: eavConstants.pipelineDesigner.dataSourceDifficulties.default,\r\n          DynamicIn: true,\r\n          DynamicOut: false,\r\n          EnableConfig: undefined,\r\n          HelpLink: undefined,\r\n          Icon: undefined,\r\n          In: outDs.In,\r\n          Name: outDs.Name,\r\n          Out: undefined,\r\n          PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n          PrimaryType: outDs.PrimaryType,\r\n          TypeNameForUi: undefined,\r\n          UiHint: undefined,\r\n        };\r\n        dataSources.push(outDsConst);\r\n        return dataSources;\r\n      }),\r\n    );\r\n  }\r\n\r\n  typeNameFilter(input: string, format: 'className' | 'classFullName') {\r\n    const globalParts = input.split(', ');\r\n\r\n    switch (format) {\r\n      case 'classFullName':\r\n        const classFullName = globalParts[0];\r\n        return classFullName;\r\n      case 'className':\r\n        const classFullNameParts = globalParts[0].split('.');\r\n        const className = classFullNameParts[classFullNameParts.length - 1];\r\n        return className;\r\n      default:\r\n        return input;\r\n    }\r\n  }\r\n\r\n  /** Save the current query and reload entire definition as returned from server */\r\n  savePipeline(pipelineModel: PipelineModel) {\r\n    const pipeline = pipelineModel.Pipeline;\r\n    const dataSources = pipelineModel.DataSources;\r\n\r\n    return this.http.post<PipelineModel>(\r\n      webApiQuerySave,\r\n      { pipeline, dataSources },\r\n      { params: { appId: this.appId, Id: pipeline.EntityId.toString() } }\r\n    ).pipe(\r\n      map(newPipelineModel => {\r\n        this.fixPipelineDataSources(newPipelineModel.DataSources);\r\n        return newPipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  runPipeline(id: number, top: number) {\r\n    return this.http.get<PipelineResult>(webApiQueryRun, {\r\n      params: { appId: this.appId, id: id.toString(), top: top.toString() }\r\n    });\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  debugStream(id: number, source: string, sourceOut: string, top: number) {\r\n    return this.http.get<PipelineResult>(webApiQueryDebugStream, {\r\n      params: { appId: this.appId, id: id.toString(), from: source, out: sourceOut, top: top.toString() }\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      Query Results\r\n      @if (debugStream) {\r\n        for Stream: \"{{ debugStream.name }}\" on Source: \"{{ debugStream.sourceName }}\"\r\n      }\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <p>\r\n      The Full result was logged to the Browser Console. Further down you'll find more debug-infos.\r\n      Executed in {{ timeUsed }}ms ({{ ticksUsed }} ticks)\r\n    </p>\r\n    <mat-tab-group dynamicHeight color=\"accent\" class=\"eav-tab-group\">\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Results\">\r\n          <span>Results</span>\r\n        </div>\r\n\r\n        <p class=\"eav-tab-description\">\r\n          @if (top === 0) {\r\n            Showing All results\r\n          }\r\n          @if (top !== 0) {\r\n            Showing top {{ top }} results\r\n          }\r\n          @for (option of optionsForTop; track option) {\r\n            <button mat-button (click)=\"show(option)\">\r\n              Show\r\n              @if (option === 0) {\r\n                All\r\n              }\r\n              @if (option !== 0) {\r\n                {{ option }}\r\n              }\r\n            </button>\r\n          }\r\n        </p>\r\n        <pre>{{ result | json }}</pre>\r\n      </mat-tab>\r\n\r\n      @if (parameters?.length) {\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Parameters\">\r\n            <span>Parameters</span>\r\n          </div>\r\n          <br />\r\n          <ul>\r\n            @for (param of parameters; track param) {\r\n              <li>{{ param }}</li>\r\n            }\r\n          </ul>\r\n        </mat-tab>\r\n      }\r\n\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Sources\">\r\n          <span>Sources</span>\r\n        </div>\r\n\r\n        <br />\r\n        <table>\r\n          <tr>\r\n            <th>Name and Guid</th>\r\n            <th>Type</th>\r\n            <th>Configuration</th>\r\n            <th>Error</th>\r\n          </tr>\r\n          @for (source of sources | keyvalue; track source) {\r\n            <tr>\r\n              <td>\r\n                @if (source.value.Definition?.Name) {\r\n                  <div>{{ source.value.Definition?.Name }}</div>\r\n                }\r\n                <pre>{{ source.value.Guid }}</pre>\r\n              </td>\r\n              <td>{{ source.value.Type }}</td>\r\n              <td>\r\n                <ol>\r\n                  @for (config of source.value.Configuration | keyvalue; track config) {\r\n                    <li>\r\n                      <b>{{ config.key }}</b>=<em>{{ config.value }}</em>\r\n                    </li>\r\n                  }\r\n                </ol>\r\n              </td>\r\n              <td>{{ source.value.Error }}</td>\r\n            </tr>\r\n          }\r\n        </table>\r\n      </mat-tab>\r\n\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Streams\">\r\n          <span>Streams</span>\r\n        </div>\r\n\r\n        <br />\r\n        <table>\r\n          <tr>\r\n            <th>Source</th>\r\n            <th>Target</th>\r\n            <th>Items</th>\r\n            <th>Error</th>\r\n          </tr>\r\n          @for (stream of streams; track stream) {\r\n            <tr>\r\n              <td>\r\n                <pre>{{ stream.Source + \":\" + stream.SourceOut }}</pre>\r\n              </td>\r\n              <td>\r\n                <pre>{{ stream.Target + \":\" + stream.TargetIn }}</pre>\r\n              </td>\r\n              <td>{{ stream.Count }}</td>\r\n              <td>{{ stream.Error }}</td>\r\n            </tr>\r\n          }\r\n        </table>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DebugStreamInfo, PipelineResultQuery, PipelineResultSources, PipelineResultStream } from '../models';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { QueryResultDialogData } from './query-result.models';\r\nimport { JsonPipe, KeyValuePipe } from '@angular/common';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@Component({\r\n  selector: 'app-query-result',\r\n  templateUrl: './query-result.component.html',\r\n  styleUrls: ['./query-result.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTabsModule,\r\n    JsonPipe,\r\n    KeyValuePipe,\r\n  ],\r\n})\r\nexport class QueryResultComponent implements OnInit {\r\n  parameters: string[];\r\n  timeUsed: number;\r\n  ticksUsed: number;\r\n  top: number;\r\n  optionsForTop: number[];\r\n  result: PipelineResultQuery;\r\n  debugStream: DebugStreamInfo;\r\n  sources: PipelineResultSources;\r\n  streams: PipelineResultStream[];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: QueryResultDialogData,\r\n    private dialogRef: MatDialogRef<QueryResultComponent>,\r\n    private visualQueryService: VisualQueryStateService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const pipeline = this.visualQueryService.pipelineModel$.value.Pipeline;\r\n    const params = (pipeline.Params?.split('\\n') ?? []).filter(el => !!el);\r\n    const testParams = (pipeline.TestParameters?.split('\\n') ?? []).filter(el => !!el);\r\n    this.parameters = [].concat(params, testParams);\r\n    this.timeUsed = this.dialogData.result.QueryTimer.Milliseconds;\r\n    this.ticksUsed = this.dialogData.result.QueryTimer.Ticks;\r\n    this.top = this.dialogData.top;\r\n    this.optionsForTop = [25, 100, 1000, 0];\r\n    this.result = this.dialogData.result.Query;\r\n    this.debugStream = this.dialogData.debugStream;\r\n    this.sources = this.dialogData.result.Sources;\r\n    this.streams = this.dialogData.result.Streams;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  show(top: number) {\r\n    if (top === this.top) return;\r\n\r\n    if (this.debugStream) {\r\n      this.visualQueryService.debugStream(this.debugStream.original, top);\r\n    } else {\r\n      this.visualQueryService.runPipeline(top);\r\n    }\r\n\r\n    this.closeDialog();\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogActions } from '@angular/material/dialog';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { StreamErrorData } from '../models';\r\nimport { StreamErrorResultDialogData } from './stream-error-result.models';\r\nimport { JsonPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-stream-error-result',\r\n  templateUrl: './stream-error-result.component.html',\r\n  styleUrls: ['./stream-error-result.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogActions,\r\n    JsonPipe,\r\n  ],\r\n})\r\nexport class StreamErrorResultComponent implements OnInit {\r\n  errorData: StreamErrorData;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: StreamErrorResultDialogData,\r\n    private dialogRef: MatDialogRef<StreamErrorResultComponent>,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.errorData = this.dialogData.errorData;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/logs?key=web-api-query'), '_blank');\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Stream Error Results</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <pre>{{ errorData | json }}</pre>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button class=\"eav-button__with-icon\" tippy=\"Open 2sxc Insights\" (click)=\"openInsights()\">\r\n      <mat-icon class=\"eav-icon\">speed</mat-icon>\r\n      <span>Insights</span>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Injectable, NgZone, OnDestroy, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { BehaviorSubject, filter, fromEvent, Subject } from 'rxjs';\r\nimport { ContentTypesService } from '../../app-administration/services/content-types.service';\r\nimport { MetadataService } from '../../permissions/services/metadata.service';\r\nimport { QueryDefinitionService } from './query-definition.service';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep } from '../../shared/models/edit-form.model';\r\n// tslint:disable-next-line:max-line-length\r\nimport { DataSource, DataSourceConfig, DataSourceConfigs, DebugStreamInfo, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { QueryResultComponent } from '../query-result/query-result.component';\r\nimport { QueryResultDialogData } from '../query-result/query-result.models';\r\nimport { StreamErrorResultComponent } from '../stream-error-result/stream-error-result.component';\r\nimport { StreamErrorResultDialogData } from '../stream-error-result/stream-error-result.models';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { transient } from '../../core';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { ServiceBase } from '../../shared/services/service-base';\r\nimport { isCtrlS } from '../../edit/dialog/main/keyboard-shortcuts';\r\n\r\n/**\r\n * Service containing the state for the visual query.\r\n * It's shared, so should not be used with transient(...);\r\n */\r\n@Injectable()\r\nexport class VisualQueryStateService extends ServiceBase implements OnDestroy {\r\n\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n  #metadataSvc = transient(MetadataService);\r\n  #queryDefSvc = transient(QueryDefinitionService);\r\n  #dialogRoute = transient(DialogRoutingService);\r\n  #titleSvc = transient(Title);\r\n\r\n\r\n  pipelineModel$ = new BehaviorSubject<PipelineModel>(null);\r\n  dataSources$ = new BehaviorSubject<DataSource[]>(null);\r\n  putEntityCountOnConnections$ = new Subject<PipelineResult>();\r\n  dataSourceConfigs$ = new BehaviorSubject<DataSourceConfigs>({});\r\n  pipelineResult?: PipelineResult;\r\n\r\n  #pipelineId = parseInt(this.#dialogRoute.getParam('pipelineId'), 10);\r\n  #refreshPipeline = false;\r\n  #refreshDataSourceConfigs = false;\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private zone: NgZone,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.pipelineModel$.complete();\r\n    this.dataSources$.complete();\r\n    this.putEntityCountOnConnections$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  init() {\r\n    this.fetchDataSources(() => this.fetchPipeline(true, true, false));\r\n    this.attachKeyboardSave();\r\n    this.#dialogRoute.doOnDialogClosed(() => {\r\n      if (this.#refreshPipeline || this.#refreshDataSourceConfigs)\r\n        this.fetchPipeline(this.#refreshPipeline, this.#refreshDataSourceConfigs, this.#refreshPipeline);\r\n      this.#refreshPipeline = false;\r\n      this.#refreshDataSourceConfigs = false;\r\n    });\r\n  }\r\n\r\n  editPipelineEntity() {\r\n    // save Pipeline, then open Edit Dialog\r\n    this.savePipeline(() => {\r\n      const form: EditForm = {\r\n        items: [EditPrep.editId(this.pipelineModel$.value.Pipeline.EntityId)],\r\n      };\r\n      const formUrl = convertFormToUrl(form);\r\n      this.#dialogRoute.navRelative([`edit/${formUrl}`]);\r\n      this.#refreshPipeline = true;\r\n    });\r\n  }\r\n\r\n  saveAndRun(save: boolean, run: boolean) {\r\n    if (save && run) {\r\n      this.savePipeline(() => { this.runPipeline(); });\r\n    } else if (save) {\r\n      this.savePipeline();\r\n    } else if (run) {\r\n      this.runPipeline();\r\n    }\r\n  }\r\n\r\n  showDataSourceDetails(showDetails: boolean) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const visualDesignerData: Record<string, any> = JsonHelpers.tryParse(pipelineModel.Pipeline.VisualDesignerData) ?? {};\r\n    visualDesignerData.ShowDataSourceDetails = showDetails;\r\n    pipelineModel.Pipeline.VisualDesignerData = JSON.stringify(visualDesignerData);\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const newPipelineDataSource: PipelineDataSource = {\r\n      Description: '',\r\n      EntityGuid: 'unsaved' + (pipelineModel.DataSources.length + 1),\r\n      EntityId: undefined,\r\n      Name: dataSource.Name,\r\n      PartAssemblyAndType: dataSource.PartAssemblyAndType,\r\n      VisualDesignerData: { Top: 100, Left: 100 },\r\n    };\r\n    pipelineModel.DataSources.push(newPipelineDataSource);\r\n    this.pipelineModel$.next(pipelineModel);\r\n    this.savePipeline();\r\n  }\r\n\r\n  removeDataSource(pipelineDataSourceGuid: string, connections: StreamWire[], streamsOut: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    pipelineModel.DataSources = pipelineModel.DataSources.filter(pipelineDS => pipelineDS.EntityGuid !== pipelineDataSourceGuid);\r\n    pipelineModel.Pipeline.StreamWiring = connections;\r\n    pipelineModel.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  renameDataSource(pipelineDataSourceGuid: string, name: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    pipelineDataSource.Name = name;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeDataSourceDescription(pipelineDataSourceGuid: string, description: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    pipelineDataSource.Description = description;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeConnections(connections: StreamWire[], streamsOut: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    pipelineModel.Pipeline.StreamWiring = connections;\r\n    pipelineModel.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeDataSourcePosition(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    if (!pipelineDataSource) {\r\n      // spm NOTE: fixes problem where dataSource position can't be updated if dataSource with guid unsavedXX gets saved while dragging.\r\n      // Can happen if dataSource is just added and user drags it and save happens.\r\n      return;\r\n    }\r\n    pipelineDataSource.VisualDesignerData = { ...pipelineDataSource.VisualDesignerData, ...position };\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  private calculateDataSourceConfigs(dataSources: PipelineDataSource[]) {\r\n    const dataSourceConfigs: DataSourceConfigs = {};\r\n    dataSources.forEach(dataSource => {\r\n      if (dataSource.EntityId == null) return;\r\n      dataSourceConfigs[dataSource.EntityId] = [];\r\n      dataSource.Metadata?.forEach(metadataItem => {\r\n        Object.entries(metadataItem).forEach(([attributeName, attributeValue]) => {\r\n          if (attributeValue == null || attributeValue === '') return;\r\n          if (['Created', 'Guid', 'Id', 'Modified', 'Title', '_Type'].includes(attributeName)) return;\r\n          if (Array.isArray(attributeValue) && attributeValue[0]?.Title != null && attributeValue[0]?.Id != null) {\r\n            attributeValue = `${attributeValue[0].Title} (${attributeValue[0].Id})`;\r\n          }\r\n          const dataSourceConfig: DataSourceConfig = {\r\n            name: attributeName,\r\n            value: attributeValue,\r\n          };\r\n          dataSourceConfigs[dataSource.EntityId].push(dataSourceConfig);\r\n        });\r\n      });\r\n    });\r\n    this.dataSourceConfigs$.next(dataSourceConfigs);\r\n  }\r\n\r\n  editDataSource(pipelineDataSource: PipelineDataSource) {\r\n    const dataSource = this.dataSources$.value.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    const contentTypeName = dataSource.ContentType;\r\n    const targetType = eavConstants.metadata.entity.targetType;\r\n    const keyType = eavConstants.metadata.entity.keyType;\r\n    const key = pipelineDataSource.EntityGuid;\r\n\r\n    // query for existing Entity\r\n    this.#metadataSvc.getMetadata(targetType, keyType, key, contentTypeName).subscribe(metadata => {\r\n      // edit existing Entity\r\n      if (metadata.Items.length) {\r\n        const form: EditForm = {\r\n          items: [EditPrep.editId(metadata.Items[0].Id)],\r\n        };\r\n        const formUrl = convertFormToUrl(form);\r\n        this.#dialogRoute.navRelative([`edit/${formUrl}`]);\r\n        this.#refreshDataSourceConfigs = true;\r\n        return;\r\n      }\r\n\r\n      // Check if the type exists, and if yes, create new Entity\r\n      this.#contentTypesSvc.retrieveContentType(contentTypeName).subscribe({\r\n        next: contentType => {\r\n          if (contentType == null) {\r\n            this.snackBar.open('DataSource doesn\\'t have any configuration', undefined, { duration: 3000 });\r\n            return;\r\n          }\r\n          const form: EditForm = {\r\n            items: [ EditPrep.newMetadata(key, contentTypeName, eavConstants.metadata.entity) ],\r\n          };\r\n          const formUrl = convertFormToUrl(form);\r\n          this.#dialogRoute.navRelative([`edit/${formUrl}`]);\r\n          this.#refreshDataSourceConfigs = true;\r\n        },\r\n        error: (error: HttpErrorResponse) => {\r\n          const message = 'Server reports error - this usually means that this DataSource doesn\\'t have any configuration';\r\n          this.snackBar.open(message, undefined, { duration: 3000 });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private savePipeline(callback?: () => void) {\r\n    this.snackBar.open('Saving...');\r\n    this.#queryDefSvc.savePipeline(this.pipelineModel$.value).subscribe({\r\n      next: pipelineModel => {\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n        this.pipelineModel$.next(pipelineModel);\r\n        if (callback != null) { callback(); }\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Save Pipeline failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  runPipeline(top = 25) {\r\n    this.snackBar.open('Running query...');\r\n    this.#queryDefSvc.runPipeline(this.pipelineModel$.value.Pipeline.EntityId, top).subscribe({\r\n      next: pipelineResult => {\r\n        this.snackBar.open('Query worked', null, { duration: 2000 });\r\n        this.pipelineResult = pipelineResult;\r\n        this.showQueryResult(pipelineResult, top);\r\n        console.warn(pipelineResult);\r\n        // push cloned pipelineModel to reset jsPlumb\r\n        this.pipelineModel$.next(cloneDeep(this.pipelineModel$.value));\r\n        setTimeout(() => { this.putEntityCountOnConnections$.next(pipelineResult); });\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Query failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  debugStream(stream: PipelineResultStream, top = 25) {\r\n    if (stream.Error) {\r\n      this.showStreamErrorResult(stream);\r\n      return;\r\n    }\r\n\r\n    if (stream.Count === 0) return;\r\n\r\n    this.snackBar.open('Running stream...');\r\n    const pipelineId = this.pipelineModel$.value.Pipeline.EntityId;\r\n    this.#queryDefSvc.debugStream(pipelineId, stream.Source, stream.SourceOut, top).subscribe({\r\n      next: streamResult => {\r\n        this.snackBar.open('Stream worked', null, { duration: 2000 });\r\n        const pipelineDataSource = this.pipelineModel$.value.DataSources.find(ds => ds.EntityGuid === stream.Source);\r\n        const debugStream: DebugStreamInfo = {\r\n          name: stream.SourceOut,\r\n          source: stream.Source,\r\n          sourceName: pipelineDataSource.Name,\r\n          original: stream,\r\n        };\r\n        this.showQueryResult(streamResult, top, debugStream);\r\n        console.warn(streamResult);\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Stream failed', null, { duration: 2000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  private fetchPipeline(refreshPipeline: boolean, refreshDataSourceConfigs: boolean, showSnackBar: boolean) {\r\n    if (showSnackBar) {\r\n      this.snackBar.open('Reloading query, please wait...');\r\n    }\r\n    this.#queryDefSvc.fetchPipeline(this.#pipelineId, this.dataSources$.value).subscribe(pipelineModel => {\r\n      if (showSnackBar) {\r\n        this.snackBar.open('Query reloaded', null, { duration: 2000 });\r\n      }\r\n      this.#titleSvc.setTitle(`${pipelineModel.Pipeline.Name} - Visual Query`);\r\n      if (refreshPipeline) {\r\n        this.pipelineModel$.next(pipelineModel);\r\n      }\r\n      if (refreshDataSourceConfigs) {\r\n        this.calculateDataSourceConfigs(pipelineModel.DataSources);\r\n      }\r\n    });\r\n  }\r\n\r\n  private showQueryResult(result: PipelineResult, top: number, debugStream?: DebugStreamInfo) {\r\n    const dialogData: QueryResultDialogData = {\r\n      result,\r\n      debugStream,\r\n      top,\r\n    };\r\n    this.dialog.open(QueryResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private showStreamErrorResult(stream: PipelineResultStream) {\r\n    const dialogData: StreamErrorResultDialogData = {\r\n      errorData: stream.ErrorData,\r\n    };\r\n    this.dialog.open(StreamErrorResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private fetchDataSources(callback?: () => void) {\r\n    this.#queryDefSvc.fetchDataSources().subscribe(dataSources => {\r\n      this.dataSources$.next(dataSources);\r\n      callback();\r\n    });\r\n  }\r\n\r\n  private attachKeyboardSave() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown').pipe(\r\n          filter(() => !this.#dialogRoute.snapshot.firstChild),\r\n          filter(event => isCtrlS(event)),\r\n        ).subscribe(event => {\r\n          event.preventDefault();\r\n          this.zone.run(() => { this.savePipeline(); });\r\n        })\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { DataSource, PipelineDataSource } from '../models';\r\nimport { GuiTypes, TypeInfo, TypeInfos } from './plumb-editor.models';\r\n\r\nexport const guiTypes: GuiTypes = {\r\n  App: { Name: 'App', Label: 'App DataSources', Icon: 'star', UiHint: 'DataSources from the current App' },\r\n  Cache: { Name: 'Cache', Icon: 'history', UiHint: 'Caching of data' },\r\n  Filter: { Name: 'Filter', Icon: 'filter_list', UiHint: 'Filter data - usually returning less items than came in' },\r\n  Logic: { Name: 'Logic', Icon: 'share', UiHint: 'Logic operations - usually choosing between different streams' },\r\n  Lookup: { Name: 'Lookup', Icon: 'search', UiHint: 'Lookup operation - usually looking for other data based on a criteria' },\r\n  Modify: { Name: 'Modify', Icon: 'edit_attributes', UiHint: 'Modify data - usually changing, adding or removing values' },\r\n  Security: { Name: 'Security', Icon: 'account_circle', UiHint: 'Security - usually limit what the user sees based on his identity' },\r\n  Sort: { Name: 'Sort', Icon: 'sort', UiHint: 'Sort the items' },\r\n  Source: { Name: 'Source', Icon: 'cloud_upload', UiHint: 'Source of new data - usually SQL, CSV or similar' },\r\n  Target: { Name: 'Target', Icon: 'adjust', UiHint: 'Target - usually just a destination of data' },\r\n  Unknown: { Name: 'Unknown', Icon: 'fiber_manual_record', UiHint: 'Unknown type' },\r\n  Debug: { Name: 'Debug', Icon: 'bug_report', UiHint: 'Debugging Tools'},\r\n  System: { Name: 'System', Icon: 'military_tech', UiHint: 'System Data' },\r\n};\r\n\r\nexport function calculateTypeInfos(pipelineDataSources: PipelineDataSource[], dataSources: DataSource[]) {\r\n  const typeInfos: TypeInfos = {};\r\n\r\n  for (const pipelineDataSource of pipelineDataSources) {\r\n    let typeInfo: TypeInfo;\r\n    const dataSource = dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    if (dataSource) {\r\n      typeInfo = { ...(dataSource.PrimaryType ? guiTypes[dataSource.PrimaryType] : guiTypes.Unknown) };\r\n      if (dataSource.Icon != null) { typeInfo.Icon = dataSource.Icon; }\r\n      if (dataSource.DynamicIn != null) { typeInfo.DynamicIn = dataSource.DynamicIn; }\r\n      if (dataSource.DynamicOut != null) { typeInfo.DynamicOut = dataSource.DynamicOut; }\r\n      if (dataSource.HelpLink != null) { typeInfo.HelpLink = dataSource.HelpLink; }\r\n      if (dataSource.EnableConfig != null) { typeInfo.EnableConfig = dataSource.EnableConfig; }\r\n      if (dataSource.UiHint != null) { typeInfo.UiHint = dataSource.UiHint; }\r\n    }\r\n    if (!typeInfo) { typeInfo = { ...guiTypes.Unknown }; }\r\n    typeInfos[pipelineDataSource.EntityGuid] = typeInfo;\r\n  }\r\n\r\n  return typeInfos;\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Rename stream</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <form [formGroup]=\"form\">\r\n      <!-- Simple form -->\r\n      @if (!isSource || !pipelineResultExists) {\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"label\" required>\r\n        </mat-form-field>\r\n        @if (isSource && !pipelineResultExists) {\r\n          <app-field-hint>\r\n            You will get suggestions for out-streams after you run query\r\n          </app-field-hint>\r\n        }\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n\r\n      <!-- Rich form -->\r\n      @if (isSource && pipelineResultExists) {\r\n        <!-- Scope -->\r\n        @if (advancedMode && guidedLabel) {\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Scope</mat-label>\r\n            <mat-select formControlName=\"scope\" [placeholder]=\"!scopeOptions.length ? 'No items found' : ''\">\r\n              @for (scopeOption of scopeOptions; track scopeOption) {\r\n                <mat-option [value]=\"scopeOption.value\">\r\n                  {{ scopeOption.name }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <app-field-hint>\r\n            The scope should almost never be changed -\r\n            <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n          </app-field-hint>\r\n        }\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          @if (guidedLabel) {\r\n            <mat-select formControlName=\"label\" required\r\n              [placeholder]=\"!labelOptions.length ? 'No items found' : ''\">\r\n              @for (labelOption of labelOptions; track labelOption) {\r\n                <mat-option [value]=\"labelOption\">\r\n                  {{ labelOption }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          }\r\n          @if (!guidedLabel) {\r\n            <input matInput type=\"text\" formControlName=\"label\" required>\r\n          }\r\n          <div matTextSuffix class=\"eav-selection-suffix\">\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': guidedLabel }\" tippy=\"Pick existing value\"\r\n              (click)=\"toggleGuidedLabel(true)\">\r\n              <mat-icon class=\"eav-icon\">search</mat-icon>\r\n            </button>\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': !guidedLabel }\" tippy=\"Manual entry\"\r\n              (click)=\"toggleGuidedLabel(false)\">\r\n              <mat-icon class=\"eav-icon\">text_fields</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-form-field>\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n    </form>\r\n  </div>\r\n  <mat-dialog-actions class=\"eav-dialog-actions\">\r\n    <!-- Extra button for rich form -->\r\n    <div>\r\n      @if (isSource && pipelineResultExists) {\r\n        <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n          {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n        </mat-slide-toggle>\r\n      }\r\n    </div>\r\n    <div>\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\" [disabled]=\"!form.valid\" (click)=\"rename()\">\r\n        Rename\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { ChangeDetectorRef, Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { distinctUntilChanged, startWith } from 'rxjs';\r\nimport { ContentTypesService } from '../../../app-administration/services';\r\nimport { BaseComponent } from '../../../shared/components/base.component';\r\nimport { eavConstants, ScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { VisualQueryStateService } from '../../services/visual-query.service';\r\nimport { RenameStreamDialogControls, RenameStreamDialogData, RenameStreamDialogFormValue } from './rename-stream.models';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FieldHintComponent } from '../../../shared/components/field-hint/field-hint.component';\r\nimport { ClickStopPropagationDirective } from '../../../shared/directives/click-stop-propagation.directive';\r\nimport { transient } from '../../../core';\r\n\r\n@Component({\r\n  selector: 'app-rename-stream',\r\n  templateUrl: './rename-stream.component.html',\r\n  styleUrls: ['./rename-stream.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    NgClass,\r\n    MatDialogActions,\r\n    MatSlideToggleModule,\r\n    FieldHintComponent,\r\n    ClickStopPropagationDirective,\r\n  ],\r\n})\r\nexport class RenameStreamComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  controls: RenameStreamDialogControls;\r\n  isSource = this.dialogData.isSource;\r\n  pipelineResultExists = this.visualQueryService.pipelineResult != null;\r\n  scopeOptions: ScopeOption[] = [];\r\n  labelOptions: string[] = [];\r\n  guidedLabel = true;\r\n  advancedMode = false;\r\n\r\n  private contentTypesService = transient(ContentTypesService);\r\n  \r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: RenameStreamDialogData,\r\n    private dialogRef: MatDialogRef<RenameStreamComponent>,\r\n    private visualQueryService: VisualQueryStateService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(label?: string): void {\r\n    this.dialogRef.close(label);\r\n  }\r\n\r\n  toggleGuidedLabel(guidedLabel: boolean): void {\r\n    this.guidedLabel = guidedLabel;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  rename(): void {\r\n    const formValue: RenameStreamDialogFormValue = this.form.getRawValue();\r\n    this.closeDialog(formValue.label);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({\r\n      label: new UntypedFormControl(this.dialogData.label, Validators.required),\r\n      scope: new UntypedFormControl(eavConstants.scopes.default.value),\r\n    });\r\n    this.controls = this.form.controls as any;\r\n\r\n    if (!this.isSource || !this.pipelineResultExists) return;\r\n\r\n    this.subscriptions.add(\r\n      this.controls.scope.valueChanges.pipe(\r\n        startWith<string>(this.controls.scope.value),\r\n        distinctUntilChanged(),\r\n      ).subscribe(scope => {\r\n        this.labelOptions = Object.values(this.visualQueryService.pipelineResult.Sources)\r\n          .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out\r\n          .filter(out => out.Scope === scope)\r\n          .map(out => out.Name);\r\n        if (!this.labelOptions.includes(this.controls.label.value) && this.controls.label.value != null) {\r\n          this.controls.label.patchValue(null);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.contentTypesService.getScopes().subscribe(scopes => {\r\n      const sourceOut = Object.values(this.visualQueryService.pipelineResult.Sources)\r\n        .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out;\r\n      const filtered = scopes.filter(s => sourceOut.some(o => o.Scope === s.value));\r\n      this.scopeOptions = filtered;\r\n      this.changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectorRef, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { EndpointInfo, PlumbType } from './plumb-editor.models';\r\nimport { RenameStreamComponent } from './rename-stream/rename-stream.component';\r\nimport { RenameStreamDialogData } from './rename-stream/rename-stream.models';\r\nimport { classLog } from '../../shared/logging';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport const dataSrcIdPrefix = 'dataSource_';\r\n\r\nconst endPointsWhereWeRotate = 3;\r\n\r\nexport class Plumber {\r\n\r\n  log = classLog({Plumber});\r\n\r\n  private instance: PlumbType;\r\n  private lineCount = 0;\r\n  private linePaintDefault = {\r\n    stroke: '#61B7CF',\r\n    strokeWidth: 4,\r\n    outlineStroke: 'white',\r\n    outlineWidth: 2,\r\n  };\r\n  private lineColors = [\r\n    '#009688', '#00bcd4', '#3f51b5', '#9c27b0', '#e91e63',\r\n    '#db4437', '#ff9800', '#60a917', '#60a917', '#008a00',\r\n    '#00aba9', '#1ba1e2', '#0050ef', '#6a00ff', '#aa00ff',\r\n    '#f472d0', '#d80073', '#a20025', '#e51400', '#fa6800',\r\n    '#f0a30a', '#e3c800', '#825a2c', '#6d8764', '#647687',\r\n    '#76608a', '#a0522d',\r\n  ];\r\n  private maxCols = this.lineColors.length - 1;\r\n  private uuidColorMap: Record<string, any> = {};\r\n  private bulkDelete = false;\r\n  private dialogRef: MatDialogRef<RenameStreamComponent>;\r\n\r\n  constructor(\r\n    private jsPlumbRoot: HTMLElement,\r\n    private pipelineModel: PipelineModel,\r\n    private dataSources: DataSource[],\r\n    private onConnectionsChanged: () => void,\r\n    private onDragend: (pipelineDataSourceGuid: string, position: VisualDesignerData) => void,\r\n    private onDebugStream: (stream: PipelineResultStream) => void,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    this.instance = window.jsPlumb.getInstance(this.getInstanceDefaults(this.jsPlumbRoot));\r\n    this.instance.batch(() => {\r\n      this.initDomDataSources();\r\n      this.initWirings();\r\n      this.bindEvents();\r\n    });\r\n    // spm NOTE: repaint after initial paint fixes:\r\n    // Error: <svg> attribute width: Expected length, \"-Infinity\".\r\n    this.instance.repaintEverything();\r\n  }\r\n\r\n  destroy() {\r\n    this.dialogRef?.close();\r\n    this.instance.reset();\r\n    this.instance.unbindContainer();\r\n  }\r\n\r\n  removeEndpointsOnDataSource(pipelineDataSourceGuid: string) {\r\n    const elementId = dataSrcIdPrefix + pipelineDataSourceGuid;\r\n    this.bulkDelete = true;\r\n    this.instance.batch(() => {\r\n      this.instance.selectEndpoints({ element: elementId }).delete();\r\n    });\r\n    this.bulkDelete = false;\r\n  }\r\n\r\n  getAllConnections() {\r\n    const connectionInfos: StreamWire[] = this.instance.getAllConnections().map((connection: PlumbType) => {\r\n      const wire: StreamWire = {\r\n        From: connection.sourceId.replace(dataSrcIdPrefix, ''),\r\n        Out: connection.endpoints[0].getOverlay('endpointLabel').label,\r\n        To: connection.targetId.replace(dataSrcIdPrefix, ''),\r\n        In: connection.endpoints[1].getOverlay('endpointLabel').label,\r\n      };\r\n      return wire;\r\n    });\r\n    return connectionInfos;\r\n  }\r\n\r\n  getStreamsOut() {\r\n    const streamsOut: string[] = [];\r\n    this.instance.selectEndpoints({ target: dataSrcIdPrefix + 'Out' }).each((endpoint: PlumbType) => {\r\n      streamsOut.push(endpoint.getOverlay('endpointLabel').label);\r\n    });\r\n    const streamsOutStr = streamsOut.join(',');\r\n    return streamsOutStr;\r\n  }\r\n\r\n  putEntityCountOnConnections(result: PipelineResult) {\r\n    result.Streams?.forEach(stream => {\r\n      const sourceElementId = dataSrcIdPrefix + stream.Source;\r\n      const outTargets = ['00000000-0000-0000-0000-000000000000', this.pipelineModel.Pipeline.EntityGuid];\r\n      const targetElementId = outTargets.includes(stream.Target) ? dataSrcIdPrefix + 'Out' : dataSrcIdPrefix + stream.Target;\r\n\r\n      const fromUuid = sourceElementId + '_out_' + stream.SourceOut;\r\n      const toUuid = targetElementId + '_in_' + stream.TargetIn;\r\n\r\n      const sEndp: PlumbType = this.instance.getEndpoint(fromUuid);\r\n      sEndp?.connections\r\n        ?.filter((connection: PlumbType) => connection.endpoints[1].getUuid() === toUuid)\r\n        ?.forEach((connection: PlumbType) => {\r\n          const label = !stream.Error ? stream.Count.toString() : '';\r\n          const cssClass = 'streamEntitiesCount ' + (!stream.Error ? '' : 'streamEntitiesError');\r\n          connection.setLabel({\r\n            label,\r\n            cssClass,\r\n            events: {\r\n              click: (overlay: PlumbType) => {\r\n                if (!this.pipelineModel.Pipeline.AllowEdit) return;\r\n                this.onDebugStream(stream);\r\n              },\r\n            },\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  private nextLinePaintStyle(uuid: string) {\r\n    return (\r\n      this.uuidColorMap[uuid] ||\r\n      (this.uuidColorMap[uuid] = Object.assign({}, this.linePaintDefault, { stroke: this.lineColors[this.lineCount++ % this.maxCols] }))\r\n    );\r\n  }\r\n\r\n  private getInstanceDefaults(container: HTMLElement) {\r\n    const defaults = {\r\n      Container: container,\r\n      Connector: ['Bezier', { curviness: 70 }],\r\n      PaintStyle: this.nextLinePaintStyle('dummy'),\r\n      HoverPaintStyle: {\r\n        stroke: '#216477',\r\n        strokeWidth: 4,\r\n        outlineStroke: 'white',\r\n        outlineWidth: 2,\r\n      },\r\n    };\r\n    return defaults;\r\n  }\r\n\r\n  /** Create sources, targets and endpoints */\r\n  private initDomDataSources() {\r\n    const l = this.log.fnCond(false, 'initDomDataSources');\r\n    for (const pipelineDataSource of this.pipelineModel.DataSources) {\r\n      const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + dataSrcIdPrefix + pipelineDataSource.EntityGuid);\r\n      if (!domDataSource) continue;\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      if (!dataSource) continue;\r\n\r\n      if (this.pipelineModel.Pipeline.AllowEdit) {\r\n        // WARNING! Must happen before instance.makeSource()\r\n        this.instance.draggable(domDataSource, {\r\n          grid: [20, 20], stop: (event: PlumbType) => {\r\n            const element: HTMLElement = event.el;\r\n            const pipelineDataSourceGuid: string = element.id.replace(dataSrcIdPrefix, '');\r\n            const position: VisualDesignerData = {\r\n              Top: event.finalPos[1],\r\n              Left: event.finalPos[0],\r\n            };\r\n            setTimeout(() => { this.onDragend(pipelineDataSourceGuid, position); });\r\n          }\r\n        });\r\n      }\r\n\r\n      // Add Out-Endpoints from Definition\r\n      const outCount = dataSource.Out?.length ?? 0;\r\n      l.a('dataSource.Out', { outCount, out: dataSource.Out });\r\n      dataSource.Out?.forEach(name => {\r\n        this.addEndpoint(domDataSource, name, false, pipelineDataSource, outCount);\r\n      });\r\n\r\n      // Add In-Endpoints from Definition\r\n      const inCount = dataSource.In?.length ?? 0;\r\n      l.a('dataSource.In', { inCount, in: dataSource.In });\r\n      dataSource.In?.forEach(name => {\r\n        this.addEndpoint(domDataSource, name, true, pipelineDataSource, inCount);\r\n      });\r\n\r\n      // Make DataSource a Target for new Endpoints (if .In is an Array)\r\n      if (dataSource.In) {\r\n        const targetEndpointUnlimited = this.buildTargetEndpoint(pipelineDataSource.EntityGuid);\r\n        targetEndpointUnlimited.maxConnections = -1;\r\n        this.instance.makeTarget(domDataSource, targetEndpointUnlimited);\r\n      }\r\n\r\n      if (dataSource.DynamicOut)\r\n        this.instance.makeSource(domDataSource, this.buildSourceEndpoint(pipelineDataSource.EntityGuid), { filter: '.add-endpoint' });\r\n    }\r\n    l.end();\r\n  }\r\n\r\n  /** Create wires */\r\n  private initWirings() {\r\n    const l = this.log.fn('initWirings');\r\n    const wirings = this.pipelineModel.Pipeline.StreamWiring;\r\n    if (!wirings) return l.end('no wirings');\r\n\r\n    const inGroups = groupBy(wirings, wire => wire.To);\r\n    const outGroups = groupBy(wirings, wire => wire.From);\r\n\r\n    l.values({ inGroups, outGroups });\r\n\r\n    wirings.forEach(wire => {\r\n      // read connections from Pipeline\r\n      const sourceElementId = dataSrcIdPrefix + wire.From;\r\n      const fromUuid = sourceElementId + '_out_' + wire.Out;\r\n      const targetElementId = dataSrcIdPrefix + wire.To;\r\n      const toUuid = targetElementId + '_in_' + wire.In;\r\n\r\n      // Ensure In-Endpoint exist\r\n      if (!this.instance.getEndpoint(fromUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + sourceElementId);\r\n        if (!domDataSource) return;\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const dataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n        this.addEndpoint(domDataSource, wire.Out, false, dataSource, outGroups[wire.From].length);\r\n      }\r\n\r\n      // Ensure Out-Endpoint exist\r\n      if (!this.instance.getEndpoint(toUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + targetElementId);\r\n        if (!domDataSource) return;\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const dataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n        \r\n        // if (wire.In === \"DEBUG\") debugger;\r\n\r\n        this.addEndpoint(domDataSource, wire.In, true, dataSource, inGroups[wire.To].length);\r\n      }\r\n\r\n      try {\r\n        this.instance.connect({\r\n          uuids: [fromUuid, toUuid],\r\n          paintStyle: this.nextLinePaintStyle(fromUuid),\r\n        });\r\n      } catch (e) {\r\n        console.error({ message: 'Connection failed', from: fromUuid, to: toUuid });\r\n      }\r\n    });\r\n    l.end();\r\n  }\r\n\r\n  private addEndpoint(domDataSource: HTMLElement, endpointName: string, isIn: boolean, pipelineDataSource: PipelineDataSource, count: number = 0) {\r\n    const l = this.log.fnCond(false, 'addEndpoint', { endpointName, isIn, pipelineDataSource });\r\n    const dataSource = this.dataSources.find(d => d.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    const connectionList = isIn ? dataSource.In : dataSource.Out;\r\n    const isDynamic = connectionList?.some(name => this.getEndpointInfo(name, false));\r\n    // const count = connectionList?.length ?? -1;\r\n    const endpointInfo = this.getEndpointInfo(endpointName, isDynamic);\r\n    \r\n    l.a(`endpointInfo ${count}`, { dataSource, connectionList, isDynamic, count, endpointInfo });\r\n\r\n    // if (endpointName === \"DEBUG\") debugger;\r\n\r\n    let style: string;\r\n    if (isDynamic)\r\n      style = 'dynamic';\r\n    else if (!endpointInfo.required)\r\n      style = '';\r\n    else {\r\n      const wireExists = this.pipelineModel.Pipeline.StreamWiring?.some(wire => {\r\n        const targetElementId = dataSrcIdPrefix + wire.To;\r\n        const targetEndpointName = wire.In;\r\n\r\n        return targetElementId === domDataSource.id && targetEndpointName === endpointInfo.name;\r\n      });\r\n      style = wireExists ? '' : 'required';\r\n    }\r\n\r\n    const uuid = domDataSource.id + (isIn ? '_in_' : '_out_') + endpointInfo.name;\r\n    const angled = count > endPointsWhereWeRotate;\r\n    const model = isIn\r\n      ? this.buildTargetEndpoint(pipelineDataSource.EntityGuid, style)\r\n      : this.buildSourceEndpoint(pipelineDataSource.EntityGuid, style);\r\n    // Endpoints on Out-DataSource must be always enabled\r\n    const params = {\r\n      uuid,\r\n      enabled: this.pipelineModel.Pipeline.AllowEdit\r\n        || pipelineDataSource.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    };\r\n\r\n    const endpoint: PlumbType = this.instance.addEndpoint(domDataSource, model, params);\r\n    const overlay = endpoint.getOverlay('endpointLabel');\r\n    overlay.setLabel(endpointInfo.name);\r\n    if (angled)\r\n      overlay.addClass('angled');\r\n    l.end(\"end\", {count, angled, overlay});\r\n  }\r\n\r\n  private buildSourceEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const isSource = true;\r\n    const sourceEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'sourceEndpoint ' + style ?? '',\r\n      maxConnections: -1,\r\n      isSource,\r\n      anchor: ['Continuous', { faces: ['top'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => {\r\n          this.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid);\r\n        },\r\n      },\r\n    };\r\n    return sourceEndpoint;\r\n  }\r\n\r\n  private buildTargetEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const isSource = false;\r\n    const targetEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'targetEndpoint ' + (style ?? ' '), // + (angled ? 'angled' : ''),\r\n      maxConnections: 1,\r\n      isTarget: !isSource,\r\n      anchor: ['Continuous', { faces: ['bottom'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      dropOptions: { hoverClass: 'hover', activeClass: 'active' },\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => {\r\n          this.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid);\r\n        },\r\n      },\r\n    };\r\n    return targetEndpoint;\r\n  }\r\n\r\n  private getEndpointOverlays(isSource: boolean) {\r\n    return [\r\n      [\r\n        'Label', {\r\n          id: 'endpointLabel',\r\n          location: [0.5, isSource ? 0 : 1],\r\n          label: 'Default',\r\n          cssClass: isSource ? 'endpointSourceLabel' : 'endpointTargetLabel',\r\n        },\r\n      ],\r\n    ];\r\n  }\r\n\r\n  private onChangeLabel(endpointOrOverlay: PlumbType, isSource: boolean, pipelineDataSourceGuid: string) {\r\n    if (!this.pipelineModel.Pipeline.AllowEdit) return;\r\n\r\n    const overlay: PlumbType = endpointOrOverlay.getOverlay ? endpointOrOverlay.getOverlay('endpointLabel') : endpointOrOverlay;\r\n    const data: RenameStreamDialogData = {\r\n      pipelineDataSourceGuid,\r\n      isSource,\r\n      label: overlay.label,\r\n    };\r\n    this.dialogRef = this.dialog.open(RenameStreamComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    this.dialogRef.afterClosed().subscribe(newLabel => {\r\n      if (!newLabel) return;\r\n      overlay.setLabel(newLabel);\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private bindEvents() {\r\n    this.instance.bind('connectionDetached', (info: PlumbType) => {\r\n      if (this.bulkDelete) return;\r\n      const domDataSource: HTMLElement = info.target;\r\n      const pipelineDataSource = this.pipelineModel.DataSources.find(\r\n        pipelineDS => pipelineDS.EntityGuid === domDataSource.id.replace(dataSrcIdPrefix, '')\r\n      );\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      const label: string = info.targetEndpoint.getOverlay('endpointLabel').label;\r\n      const isDynamic = !dataSource.In.some(name => this.getEndpointInfo(name, false).name === label);\r\n      if (isDynamic) {\r\n        this.instance.deleteEndpoint(info.targetEndpoint);\r\n        setTimeout(() => { this.onConnectionsChanged(); });\r\n      } else {\r\n        setTimeout(() => { this.onConnectionsChanged(); });\r\n      }\r\n    });\r\n\r\n    this.instance.bind('connection', (info: PlumbType) => {\r\n      if (info.sourceId === info.targetId) {\r\n        setTimeout(() => {\r\n          this.instance.deleteConnection(info.connection, { fireEvent: false });\r\n          setTimeout(() => { this.onConnectionsChanged(); });\r\n        });\r\n        return;\r\n      }\r\n      const endpointLabel: PlumbType = info.targetEndpoint.getOverlay('endpointLabel');\r\n      const labelPrompt: string = endpointLabel.getLabel();\r\n      const endpoints: PlumbType[] = this.instance.getEndpoints(info.target.id);\r\n      const targetEndpointHasSameLabel = endpoints.some(endpoint => {\r\n        const label: string = endpoint.getOverlay('endpointLabel').getLabel();\r\n        return label === labelPrompt &&\r\n          info.targetEndpoint.id !== endpoint.id &&\r\n          (endpoint.canvas as HTMLCanvasElement).classList.contains('targetEndpoint');\r\n      });\r\n      if (targetEndpointHasSameLabel) {\r\n        endpointLabel.setLabel(`PleaseRename${Math.floor(Math.random() * 99999)}`);\r\n      }\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n  }\r\n\r\n  private getEndpointInfo(endpointName: string, isDynamic: boolean): EndpointInfo {\r\n    let name: string;\r\n    let required: boolean;\r\n\r\n    if (isDynamic) {\r\n      name = endpointName;\r\n      required = false;\r\n    } else {\r\n      const trimmed = endpointName.trim();\r\n      required = trimmed.endsWith('*');\r\n      name = !required ? trimmed : trimmed.substring(0, trimmed.length - 1);\r\n    }\r\n\r\n    const endpointInfo: EndpointInfo = {\r\n      name,\r\n      required,\r\n    };\r\n    return endpointInfo;\r\n  }\r\n}\r\n\r\n// https://stackoverflow.com/questions/14446511/most-efficient-method-to-groupby-on-an-array-of-objects\r\nconst groupBy = <T, K extends keyof any>(arr: T[], key: (i: T) => K) =>\r\n  arr.reduce((groups, item) => {\r\n    (groups[key(item)] ||= []).push(item);\r\n    return groups;\r\n  }, {} as Record<K, T[]>);","@if ((viewModel$ | async); as vm) {\r\n<div #domRoot id=\"pipeline-root\">\r\n  <!-- do not use trackBy, jsPlumb drag stops working properly after delete -->\r\n  @if (!hardReset) {\r\n  @for (dataSource of vm.pipelineDataSources; track dataSource) {\r\n  <div #domDataSource [id]=\"dataSrcIdPrefix + dataSource.EntityGuid\" class=\"dataSource\" [ngStyle]=\"{\r\n          'top': dataSource.VisualDesignerData.Top + 'px',\r\n          'left': dataSource.VisualDesignerData.Left + 'px',\r\n          'min-width': dataSource.VisualDesignerData.Width ? dataSource.VisualDesignerData.Width + 'px' : null\r\n          }\" [ngClass]=\"{\r\n          'show-details': vm.showDataSourceDetails && vm.dataSourceConfigs[dataSource.EntityId]?.length\r\n          }\">\r\n    <div class=\"actions left\">\r\n      <mat-icon class=\"type-info\" [title]=\"vm.typeInfos[dataSource.EntityGuid].UiHint\">\r\n        {{ vm.typeInfos[dataSource.EntityGuid].Icon }}\r\n      </mat-icon>\r\n      @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].EnableConfig) {\r\n      <mat-icon class=\"configure\" title=\"Configure data source\" appMousedownStopPropagation\r\n        (click)=\"configureDataSource(dataSource)\">\r\n        settings\r\n      </mat-icon>\r\n      }\r\n      @if (vm.typeInfos[dataSource.EntityGuid].HelpLink) {\r\n      <mat-icon class=\"help\" title=\"Help for this data source\" appMousedownStopPropagation\r\n        (click)=\"openHelp(vm.typeInfos[dataSource.EntityGuid].HelpLink)\">\r\n        help_outline\r\n      </mat-icon>\r\n      }\r\n    </div>\r\n    <div class=\"actions right\">\r\n      @if (vm.allowEdit && !isOutDataSource(dataSource)) {\r\n      <mat-icon class=\"delete\" title=\"Delete\" appMousedownStopPropagation (click)=\"remove(dataSource)\">\r\n        delete\r\n      </mat-icon>\r\n      }\r\n    </div>\r\n    <div class=\"name\" title=\"Click to edit name\" appMousedownStopPropagation\r\n      (click)=\"vm.allowEdit && editName(dataSource)\">\r\n      <span>{{ dataSource.Name || '(no name)' }}</span>\r\n      <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n    </div>\r\n    <br>\r\n    <div class=\"description\" title=\"Click to edit description\" appMousedownStopPropagation\r\n      (click)=\"vm.allowEdit && editDescription(dataSource)\">\r\n      <span>{{ dataSource.Description }}</span>\r\n      <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n    </div>\r\n    <br>\r\n    @if (vm.showDataSourceDetails && vm.dataSourceConfigs[dataSource.EntityId]?.length) {\r\n    <hr style=\"margin: 0\">\r\n    <table class=\"configs\">\r\n      @for (config of vm.dataSourceConfigs[dataSource.EntityId]; track config) {\r\n      <tr class=\"config\">\r\n        <td class=\"config-name\" [title]=\"config.name\">{{ config.name }}</td>\r\n        <td class=\"config-value\" [title]=\"config.value\">{{ config.value }}</td>\r\n      </tr>\r\n      }\r\n    </table>\r\n    }\r\n    <div class=\"typename\" [title]=\"dataSource.PartAssemblyAndType\">\r\n      Type: {{ getTypeName(dataSource.PartAssemblyAndType) }}\r\n    </div>\r\n    @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].DynamicOut) {\r\n    <div class=\"add-endpoint sourceEndpoint dynamic\" title=\"Drag a new Out-Connection\">\r\n    </div>\r\n    }\r\n    @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].DynamicIn) {\r\n    <div class=\"many-in targetEndpoint dynamic\" title=\"This data source supports multiple In-Connections\">\r\n    </div>\r\n    }\r\n  </div>\r\n  }\r\n  }\r\n</div>\r\n}","// tslint:disable-next-line:max-line-length\r\nimport { AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { BaseComponent } from '../../shared/components/base.component';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { loadScripts } from '../../shared/helpers/load-scripts.helper';\r\nimport { PipelineDataSource, PipelineResultStream, VisualDesignerData } from '../models';\r\nimport { QueryDefinitionService } from '../services/query-definition.service';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { calculateTypeInfos } from './plumb-editor.helpers';\r\nimport { PlumbEditorViewModel } from './plumb-editor.models';\r\nimport { dataSrcIdPrefix, Plumber } from './plumber.helper';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgStyle, NgClass, AsyncPipe } from '@angular/common';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { MousedownStopPropagationDirective } from '../../shared/directives/mousedown-stop-propagation.directive';\r\nimport { classLog } from '../../shared/logging';\r\nimport { mapUntilObjChanged } from '../../shared/rxJs/mapUntilChanged';\r\nimport { transient } from '../../core';\r\n\r\nconst jsPlumbUrl = 'https://cdnjs.cloudflare.com/ajax/libs/jsPlumb/2.14.5/js/jsplumb.min.js';\r\n\r\n@Component({\r\n  selector: 'app-plumb-editor',\r\n  templateUrl: './plumb-editor.component.html',\r\n  styles: [':host { display: block; width: 100%; height: 100%; }'],\r\n  styleUrls: ['./plumb-editor.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgStyle,\r\n    NgClass,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    MousedownStopPropagationDirective,\r\n  ],\r\n})\r\nexport class PlumbEditorComponent extends BaseComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  \r\n  log = classLog({PlumbEditorComponent});\r\n\r\n  @ViewChild('domRoot') private domRootRef: ElementRef<HTMLDivElement>;\r\n  @ViewChildren('domDataSource') private domDataSourcesRef: QueryList<ElementRef<HTMLDivElement>>;\r\n\r\n  dataSrcIdPrefix = dataSrcIdPrefix;\r\n  hardReset = false;\r\n\r\n  private plumber: Plumber;\r\n  private scriptLoaded$ = new BehaviorSubject(false);\r\n\r\n  viewModel$: Observable<PlumbEditorViewModel>;\r\n  \r\n  private queryDefinitionService = transient(QueryDefinitionService);\r\n\r\n  constructor(\r\n    private visualQueryService: VisualQueryStateService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) { super();}\r\n\r\n  ngOnInit() {\r\n    loadScripts([{ test: 'jsPlumb', src: jsPlumbUrl }], () => {\r\n      this.scriptLoaded$.next(true);\r\n    });\r\n\r\n    this.subscriptions.add(\r\n      this.visualQueryService.putEntityCountOnConnections$.subscribe(result => {\r\n        this.plumber.putEntityCountOnConnections(result);\r\n      })\r\n    );\r\n\r\n    const pipelineDesignerData$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => JsonHelpers.tryParse(pipelineModel?.Pipeline.VisualDesignerData) ?? {}),\r\n      mapUntilObjChanged(m => m),\r\n      // distinctUntilChanged(RxHelpers.objectsEqual),\r\n    );\r\n\r\n    this.viewModel$ = combineLatest([\r\n      this.visualQueryService.pipelineModel$,\r\n      this.visualQueryService.dataSources$,\r\n      pipelineDesignerData$,\r\n      this.visualQueryService.dataSourceConfigs$,\r\n    ]).pipe(\r\n      map(([pipelineModel, dataSources, pipelineDesignerData, dataSourceConfigs]) => {\r\n        if (pipelineModel == null || dataSources == null) return;\r\n\r\n        // workaround for jsPlumb not working with dom elements which it initialized on previously.\r\n        // This wipes dom entirely and gives us new elements\r\n        this.hardReset = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        this.hardReset = false;\r\n        const viewModel: PlumbEditorViewModel = {\r\n          pipelineDataSources: pipelineModel.DataSources,\r\n          typeInfos: calculateTypeInfos(pipelineModel.DataSources, dataSources),\r\n          allowEdit: pipelineModel.Pipeline.AllowEdit,\r\n          showDataSourceDetails: pipelineDesignerData.ShowDataSourceDetails ?? false,\r\n          dataSourceConfigs,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const l = this.log.fn('ngAfterViewInit');\r\n    // https://stackoverflow.com/questions/37087864/execute-a-function-when-ngfor-finished-in-angular-2/37088348#37088348\r\n    const domDataSourcesLoaded$ = this.domDataSourcesRef.changes.pipe(map(() => true));\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([this.scriptLoaded$, domDataSourcesLoaded$]).subscribe(([scriptLoaded, domDataSourcesLoaded]) => {\r\n        if (!scriptLoaded || !domDataSourcesLoaded)\r\n          return;\r\n\r\n        this.log.a('scriptLoaded and domDataSourcesLoaded', { scriptLoaded, domDataSourcesLoaded });\r\n\r\n        this.plumber?.destroy();\r\n        this.plumber = new Plumber(\r\n          this.domRootRef.nativeElement,\r\n          this.visualQueryService.pipelineModel$.value,\r\n          this.visualQueryService.dataSources$.value,\r\n          this.onConnectionsChanged.bind(this),\r\n          this.onDragend.bind(this),\r\n          this.onDebugStream.bind(this),\r\n          this.dialog,\r\n          this.viewContainerRef,\r\n          this.changeDetectorRef,\r\n        );\r\n      })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.plumber?.destroy();\r\n    this.scriptLoaded$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  onConnectionsChanged() {\r\n    const connections = this.plumber.getAllConnections();\r\n    const streamsOut = this.plumber.getStreamsOut();\r\n    this.visualQueryService.changeConnections(connections, streamsOut);\r\n  }\r\n\r\n  onDragend(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    this.visualQueryService.changeDataSourcePosition(pipelineDataSourceGuid, position);\r\n  }\r\n\r\n  onDebugStream(stream: PipelineResultStream) {\r\n    this.visualQueryService.debugStream(stream);\r\n  }\r\n\r\n  configureDataSource(dataSource: PipelineDataSource) {\r\n    // ensure dataSource entity is saved\r\n    if (dataSource.EntityGuid.includes('unsaved')) {\r\n      this.visualQueryService.saveAndRun(true, false);\r\n    } else {\r\n      this.visualQueryService.editDataSource(dataSource);\r\n    }\r\n  }\r\n\r\n  getTypeName(partAssemblyAndType: string) {\r\n    const dataSource = this.visualQueryService.dataSources$.value.find(ds => ds.PartAssemblyAndType === partAssemblyAndType);\r\n    return this.queryDefinitionService.typeNameFilter(dataSource?.TypeNameForUi || partAssemblyAndType, 'className');\r\n  }\r\n\r\n  isOutDataSource(pipelineDataSource: PipelineDataSource) {\r\n    return pipelineDataSource.PartAssemblyAndType === eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType;\r\n  }\r\n\r\n  remove(pipelineDataSource: PipelineDataSource) {\r\n    if (!confirm(`Delete ${pipelineDataSource.Name} data source?`)) return;\r\n\r\n    this.plumber.removeEndpointsOnDataSource(pipelineDataSource.EntityGuid);\r\n    const connections = this.plumber.getAllConnections();\r\n    const streamsOut = this.plumber.getStreamsOut();\r\n    this.visualQueryService.removeDataSource(pipelineDataSource.EntityGuid, connections, streamsOut);\r\n  }\r\n\r\n  openHelp(url: string) {\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  editName(dataSource: PipelineDataSource) {\r\n    const newName = prompt('Rename data source', dataSource.Name)?.trim();\r\n    if (newName == null || newName === '') return;\r\n\r\n    this.visualQueryService.renameDataSource(dataSource.EntityGuid, newName);\r\n  }\r\n\r\n  editDescription(dataSource: PipelineDataSource) {\r\n    const newDescription = prompt('Edit description', dataSource.Description)?.trim();\r\n    if (newDescription == null) return;\r\n\r\n    this.visualQueryService.changeDataSourceDescription(dataSource.EntityGuid, newDescription);\r\n  }\r\n\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"eav-show-advanced\">\r\n      <span class=\"eav-slide-toggle-label\">Show Advanced</span>\r\n      <mat-slide-toggle color=\"primary\" (change)=\"toggleDifficulty($event)\" />\r\n    </div>\r\n    @for (group of vm.sorted | keyvalue; track trackGroups($index, group)) {\r\n      <div class=\"collapsible\" [tippy]=\"guiTypes[group.key].UiHint || group.key\" tippyShowDelay=\"750\"\r\n        (click)=\"toggleItem(group.key)\">\r\n        <mat-icon>{{ guiTypes[group.key].Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n        <span>{{ guiTypes[group.key].Label ?? guiTypes[group.key].Name ?? group.key }}</span>\r\n      </div>\r\n      @if (toggledItems.includes(group.key)) {\r\n        <div class=\"list\">\r\n          @for (dataSource of group.value; track trackDataSources($index, dataSource)) {\r\n            <div class=\"list-item\"\r\n              [tippy]=\"dataSource.UiHint || dataSource.Name\" tippyShowDelay=\"750\" (click)=\"addDataSource(dataSource)\">\r\n              <mat-icon>{{ dataSource.Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n              <span>{{ dataSource.Name }}</span>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n  </div>\r\n}\r\n","import { KeyValue, AsyncPipe, KeyValuePipe } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\nimport { guiTypes } from '../plumb-editor/plumb-editor.helpers';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { filterAndSortDataSources } from './add-explorer.helpers';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-add-explorer',\r\n  templateUrl: './add-explorer.component.html',\r\n  styleUrls: ['./add-explorer.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatSlideToggleModule,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    KeyValuePipe,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class AddExplorerComponent implements OnInit, OnDestroy {\r\n  toggledItems: string[] = [];\r\n  guiTypes = guiTypes;\r\n\r\n  private difficulties = eavConstants.pipelineDesigner.dataSourceDifficulties;\r\n  private difficulty$ = new BehaviorSubject(this.difficulties.default);\r\n\r\n  viewModel$: Observable<AddExplorerViewModel>;\r\n\r\n  constructor(private visualQueryService: VisualQueryStateService) { }\r\n\r\n  ngOnInit() {\r\n    this.viewModel$ = combineLatest([\r\n      combineLatest([this.visualQueryService.dataSources$, this.difficulty$]).pipe(\r\n        map(([dataSources, difficulty]) => filterAndSortDataSources(dataSources, difficulty)),\r\n      )\r\n    ]).pipe(map(([sorted]) => ({ sorted })));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.difficulty$.complete();\r\n  }\r\n\r\n  toggleDifficulty(event: MatSlideToggleChange) {\r\n    const difficulty = event.checked ? this.difficulties.advanced : this.difficulties.default;\r\n    this.difficulty$.next(difficulty);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    this.visualQueryService.addDataSource(dataSource);\r\n  }\r\n\r\n  toggleItem(item: string) {\r\n    ArrayHelpers.toggleInArray(item, this.toggledItems);\r\n  }\r\n\r\n  trackGroups(index: number, type: KeyValue<string, DataSource[]>) {\r\n    return type.key;\r\n  }\r\n\r\n  trackDataSources(index: number, dataSource: DataSource) {\r\n    return dataSource.PartAssemblyAndType;\r\n  }\r\n}\r\n\r\ninterface AddExplorerViewModel {\r\n  sorted: SortedDataSources;\r\n}\r\n","import cloneDeep from 'lodash-es/cloneDeep';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\n\r\nexport function filterAndSortDataSources(dataSources: DataSource[], maxDifficulty: number) {\r\n  if (!dataSources) return;\r\n\r\n  const cloned = cloneDeep(dataSources);\r\n\r\n  const filtered = cloned.filter(dataSource =>\r\n    dataSource.Difficulty <= maxDifficulty\r\n    && dataSource.PartAssemblyAndType !== eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType\r\n  );\r\n\r\n  filtered.sort((a, b) => a.Name.toLocaleLowerCase().localeCompare(b.Name.toLocaleLowerCase()));\r\n\r\n  const sorted: SortedDataSources = {};\r\n  for (const dataSource of filtered) {\r\n    const type = dataSource.PrimaryType;\r\n    if (sorted[type]) {\r\n      sorted[type].push(dataSource);\r\n    } else {\r\n      sorted[type] = [dataSource];\r\n    }\r\n  }\r\n\r\n  return sorted;\r\n}\r\n","@if ((pipelineModel$ | async); as pipelineModel) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"wrapper\">\r\n      <div class=\"actions\">\r\n        <button mat-raised-button class=\"action\" color=\"accent\" (click)=\"saveAndRunQuery(true, true)\">\r\n          Save and run\r\n        </button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(false, true)\">\r\n          Run\r\n        </button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(true, false)\">\r\n          Save\r\n        </button>\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">\r\n          <div>Query Parameters</div>\r\n          <div>\r\n            <button mat-icon-button tippy=\"Edit parameters\" (click)=\"editPipeline()\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button mat-icon-button tippy=\"Query Params Docs\" (click)=\"openParamsHelp()\">\r\n              <mat-icon>info</mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        @if (pipelineModel.Pipeline.Params?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of pipelineModel.Pipeline.Params?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">Test Parameters</div>\r\n        @if (pipelineModel.Pipeline.TestParameters?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of pipelineModel.Pipeline.TestParameters?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      @if (visualDesignerData$ | async; as visualDesignerData) {\r\n        <div class=\"parameters\">\r\n          <span class=\"eav-slide-toggle-label\">Show DataSource Params</span>\r\n          <mat-slide-toggle color=\"primary\" [checked]=\"visualDesignerData.ShowDataSourceDetails\"\r\n            (change)=\"showDataSourceDetails($event)\"/>\r\n          </div>\r\n        }\r\n      @if ((warnings$ | async); as warnings) {\r\n        @if (warnings.length) {\r\n          <div class=\"warnings\">\r\n            <div class=\"title\">\r\n              <span>Warnings</span>\r\n              <mat-icon style=\"color: red\">warning</mat-icon>\r\n            </div>\r\n            <ol class=\"values\">\r\n              @for (warning of warnings; track warning) {\r\n                <li [innerHTML]=\"warning\">\r\n                </li>\r\n              }\r\n            </ol>\r\n          </div>\r\n        }\r\n      }\r\n      @if (pipelineModel.Pipeline.Description) {\r\n        <div class=\"description\">\r\n          <div class=\"title\">Query Description</div>\r\n          <div>{{ pipelineModel.Pipeline.Description }}</div>\r\n        </div>\r\n      }\r\n      <div class=\"footer-actions\">\r\n        <button mat-raised-button class=\"action\" (click)=\"openRestApi()\">\r\n          <span>Use in JSON / REST API</span>\r\n          <mat-icon>code_curly</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { map, Observable } from 'rxjs';\r\nimport { GoToDevRest } from '../../dev-rest';\r\nimport { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { calculateWarnings } from './run-explorer.helpers';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { transient } from '../../core';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\n\r\n@Component({\r\n  selector: 'app-run-explorer',\r\n  templateUrl: './run-explorer.component.html',\r\n  styleUrls: ['./run-explorer.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSlideToggleModule,\r\n    AsyncPipe,\r\n  ],\r\n})\r\nexport class RunExplorerComponent implements OnInit {\r\n  pipelineModel$: Observable<PipelineModel>;\r\n  warnings$: Observable<string[]>;\r\n  visualDesignerData$: Observable<Record<string, any>>;\r\n\r\n  #dialogRouter = transient(DialogRoutingService);\r\n  \r\n  constructor(\r\n    private context: Context,\r\n    private visualQueryService: VisualQueryStateService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.pipelineModel$ = this.visualQueryService.pipelineModel$.asObservable();\r\n    this.warnings$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => calculateWarnings(pipelineModel, this.context)),\r\n    );\r\n    this.visualDesignerData$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => JsonHelpers.tryParse(pipelineModel.Pipeline.VisualDesignerData) ?? {}),\r\n    );\r\n  }\r\n\r\n  editPipeline() {\r\n    this.visualQueryService.editPipelineEntity();\r\n  }\r\n\r\n  openParamsHelp() {\r\n    window.open('https://go.2sxc.org/QueryParams', '_blank');\r\n  }\r\n\r\n  saveAndRunQuery(save: boolean, run: boolean) {\r\n    this.visualQueryService.saveAndRun(save, run);\r\n  }\r\n\r\n  showDataSourceDetails(event: MatSlideToggleChange): void {\r\n    this.visualQueryService.showDataSourceDetails(event.checked);\r\n  }\r\n\r\n  openRestApi() {\r\n    const queryGuid = this.visualQueryService.pipelineModel$.value.Pipeline.EntityGuid;\r\n    this.#dialogRouter.navRelative([GoToDevRest.getUrlQueryDialog(queryGuid)]);\r\n  }\r\n}\r\n","import { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\n\r\n/**\r\n * Check if there are special warnings the developer should know.\r\n * Typically when the test ModuleId is different from the one we're currently working on\r\n */\r\nexport function calculateWarnings(pipelineModel: PipelineModel, context: Context) {\r\n  const warnings: string[] = [];\r\n\r\n  try {\r\n    const queryParams = pipelineModel.Pipeline.Params?.split(/\\r?\\n/) || [];\r\n    const testParams = pipelineModel.Pipeline.TestParameters?.split(/\\r?\\n/) || [];\r\n\r\n    queryParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) return;\r\n\r\n      // Check if the syntax on Query Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const paramSyntax = /^[a-zA-Z0-9]+=(.*)$/gmi;\r\n      const matched = paramSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Query Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>key=value</code> <br>\r\n          or resolve to a token like: <br>\r\n          <code>key=[source:key]</code>\r\n        `);\r\n      }\r\n    });\r\n\r\n    testParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) return;\r\n\r\n      // Check if the syntax on Test Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const testParamSyntax = /^\\[[a-zA-Z]+:[a-zA-Z0-9]+\\]=(.*)$/gmi;\r\n      const matched = testParamSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Test Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>[source:key]=value</code>\r\n        `);\r\n      }\r\n\r\n      // Check if we should show the warning about the test ModuleId.\r\n      // This is because in the old days, the ModuleId wasn't auto-filled, so people had to add it as a test value.\r\n      // Now it's not necessary any more\r\n      const midRegex = /^\\[module:id\\]=([0-9]*)$/gmi;\r\n      const midMatch = midRegex.exec(param);\r\n      if (midMatch) {\r\n        const testMid = midMatch[1];\r\n        const urlMid = context.moduleId?.toString();\r\n        if (testMid !== urlMid) {\r\n          warnings.push(`\r\n            Your test ModuleId (${testMid}) is different from the current ModuleId (${urlMid}).<br>\r\n            Note that 2sxc automatically provides the ModuleId - so you usually do not need to set it\r\n          `);\r\n        }\r\n      }\r\n\r\n      const oldMidRegex = /^\\[module:moduleid\\]=([0-9]*)$/gmi;\r\n      const oldMidMatch = oldMidRegex.exec(param);\r\n      if (oldMidMatch) {\r\n        warnings.push(`\r\n          You are using deprecated [Module:ModuleId] test parameter.<br>\r\n          Please use [Module:Id]\r\n        `);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Something went wrong in calculateWarnings for params', error);\r\n  }\r\n\r\n  return warnings;\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, RouterOutlet } from '@angular/router';\r\nimport { Context } from '../shared/services/context';\r\nimport { PlumbEditorComponent } from './plumb-editor/plumb-editor.component';\r\nimport { VisualQueryStateService } from './services/visual-query.service';\r\nimport { AddExplorerComponent } from './add-explorer/add-explorer.component';\r\nimport { RunExplorerComponent } from './run-explorer/run-explorer.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgClass } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-visual-query',\r\n  templateUrl: './visual-query.component.html',\r\n  styleUrls: ['./visual-query.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    RouterOutlet,\r\n    NgClass,\r\n    MatIconModule,\r\n    RunExplorerComponent,\r\n    AddExplorerComponent,\r\n    PlumbEditorComponent,\r\n  ],\r\n  providers: [\r\n    VisualQueryStateService,  // Shared State for the entire Visual Query, - init run here\r\n  ],\r\n})\r\nexport class VisualQueryComponent implements OnInit {\r\n  @ViewChild(PlumbEditorComponent) plumbEditor: PlumbEditorComponent;\r\n\r\n  explorer = {\r\n    run: 'run',\r\n    add: 'add'\r\n  };\r\n  activeExplorer = this.explorer.run;\r\n\r\n  constructor(\r\n    private context: Context,\r\n    private route: ActivatedRoute,\r\n    private visualQueryService: VisualQueryStateService\r\n  ) {\r\n    this.context.init(this.route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.visualQueryService.init();\r\n  }\r\n\r\n  toggleExplorer(explorer: string) {\r\n    this.activeExplorer = (this.activeExplorer === explorer) ? null : explorer;\r\n  }\r\n\r\n  openHelp() {\r\n    window.open('https://go.2sxc.org/visual-query', '_blank');\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n<div class=\"editor-root\">\r\n  <div class=\"editor-side-toolbar\">\r\n    <div class=\"button\" tippy=\"Run\" [ngClass]=\"{ 'active': activeExplorer === explorer.run }\"\r\n      (click)=\"toggleExplorer(explorer.run)\">\r\n      <mat-icon>play_arrow</mat-icon>\r\n    </div>\r\n    <div class=\"button\" tippy=\"Add\" [ngClass]=\"{ 'active': activeExplorer === explorer.add }\"\r\n      (click)=\"toggleExplorer(explorer.add)\">\r\n      <mat-icon>add</mat-icon>\r\n    </div>\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"button\" tippy=\"Help\" (click)=\"openHelp()\">\r\n      <mat-icon>help_outline</mat-icon>\r\n    </div>\r\n  </div>\r\n\r\n  <app-run-explorer [hidden]=\"activeExplorer !== explorer.run\"></app-run-explorer>\r\n\r\n  <app-add-explorer [hidden]=\"activeExplorer !== explorer.add\"></app-add-explorer>\r\n\r\n  <app-plumb-editor></app-plumb-editor>\r\n</div>\r\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n"],"x_google_ignoreList":[31,32,33,34,35]}