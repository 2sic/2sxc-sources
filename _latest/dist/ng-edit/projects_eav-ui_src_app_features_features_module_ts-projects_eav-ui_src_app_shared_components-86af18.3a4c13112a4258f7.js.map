{"version":3,"file":"projects_eav-ui_src_app_features_features_module_ts-projects_eav-ui_src_app_shared_components-86af18.3a4c13112a4258f7.js","mappings":"yYA2CO,IAAMA,EAAc,UAAAC,EAArB,MAAOD,qDAAc,0BAAdA,iCAJA,CACTE,KACDC,QAAA,CAhBCC,KACAC,KACAC,KACAC,KACAC,IACAC,KAAgBC,YAASC,KAA4BC,SAa5CZ,CAAc,wEClCpB,IAAME,EAAoB,UAAAD,EAA3B,MAAOC,EACXW,YACUC,EACAC,GADAC,KAAAF,OACAE,KAAAD,YACN,CAEJE,kBAAkBC,GAChB,OAAOF,KAAKF,KAAKK,IAAaH,KAAKD,WAAWK,MAAMN,KAAKO,OAAOC,yBAAyB,CACvFC,OAAQ,CAAEC,OAAQN,IAEtB,WAVWhB,0CAAoBuB,MAAAC,MAAAD,MAAAE,MAAA,4BAApBzB,EAAoB0B,QAApB1B,EAAoB2B,YAApB3B,CAAoB,6FCP7BuB,MAAA,4BADFA,MAAA,cACEA,MAAA,EAAAK,EAAA,sBACFL,uCADiBA,MAAA,GAAAA,MAAA,mBAAAM,yBAIfN,MAAA,4BADFA,MAAA,eACEA,MAAA,EAAAO,EAAA,sBACFP,uCADiBA,MAAA,GAAAA,MAAA,mBAAAM,yBAKjBN,MAAA,4DCJK,IAAMQ,EAAkB,UAAAhC,EAAzB,MAAOgC,EAIXpB,cAHSG,KAAAkB,SAAU,EACnBlB,KAAAmB,SAAU,CAEM,CAEhBC,gBACEpB,KAAKmB,SAAWnB,KAAKmB,OACvB,WARWF,yCAAkB,0BAAlBA,EAAkBI,UAAA,qBAAAC,OAAA,CAAAJ,QAAA,WAAAK,mBAAAC,EAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,yGAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,YDP/BpB,MAAA,WAAsBA,MAAA,0BAASqB,EAAAV,eAAe,GAC5CX,MAAA,EAAAsB,EAAA,kBAIAtB,MAAA,EAAAuB,EAAA,mBAGFvB,QAEAA,MAAA,EAAAwB,EAAA,yBAAAxB,cAVgDA,MAAA,UAAAA,MAAA,EAAAyB,EAAAJ,EAAAX,SAAAV,CAA0C,WAAAqB,EAAAZ,SAC7ET,MAAA,GAAAA,MAAA,mBAICA,MAAA,GAAAA,MAAA,ihBCEDQ,CAAkB,mDCJxB,IAAMkB,EAA6B,UAAAlD,EAApC,MAAOkD,EAEXC,QAAQC,GACNA,EAAMC,iBACR,WAJWH,yCAA6B,0BAA7BA,EAA6Bd,UAAA,oCAAAkB,aAAA,SAAAV,EAAAC,GAAA,EAAAD,oCAA7BC,EAAAM,QAAAI,EAAe,MAAfL,CAA6B,8DCCnC,IAAMM,EAAY,UAAAxD,EAAnB,MAAOwD,EAEX5C,YAAoB6C,GAAA1C,KAAA0C,WAA2B,CAE/CC,UAAUC,GACR,OAAO5C,KAAK0C,UAAUG,wBAAwBD,EAChD,WANWH,0CAAYhC,MAAAC,KAAA,+CAAZ+B,EAAYK,MAAA,IAAZL,CAAY,8DCDnB,SAAU9C,EAA4BiB,GAU1C,MATsC,CACpCmC,OAAQ,CACNC,QAASC,KACTC,WAAYtC,EACZuC,KAAM,CAACC,OAETC,gBAAiB,KACjBC,SAAS,EAGb,iDCLM,SAAU1D,EAAuBE,GACnC,OAAO,IAAIyD,IAAiCzD,EAAM,UAAW,OAAO0D,OAAOC,aAC/E,2DCHM,MAAOF,EACX1D,YAAoBC,EAA0B4D,EAAwBC,GAAlD3D,KAAAF,OAA0BE,KAAA0D,SAAwB1D,KAAA2D,QAAkB,CAExFC,eAAeC,GACb,OAAO7D,KAAKF,KAAKK,IAAyB,GAAGH,KAAK0D,SAASG,IAAO7D,KAAK2D,UAAUG,QAC/EC,KAAWC,IACTC,QAAQC,KAAK,wCAAwCL,WAAc7D,KAAK0D,SAAUM,IAAK,EAChFG,MAAG,MAGhB","names":["FeaturesModule","_class","FeatureDetailService","imports","CommonModule","MatButtonModule","MatIconModule","MatCardModule","SharedComponentsModule","TranslateModule","forChild","buildTranslateConfiguration","translateLoaderFactory","constructor","http","dnnContext","this","getFeatureDetails","featureNameId","get","$2sxc","apiUrl","webApiRoot","params","nameId","i0","i1","i2","factory","Éµfac","FieldHintComponent_mat_hint_1_ng_container_1_Template","_r2","FieldHintComponent_mat_error_2_ng_container_1_Template","FieldHintComponent","isError","isShort","toggleIsShort","selectors","inputs","ngContentSelectors","_c1","decls","vars","consts","template","rf","ctx","FieldHintComponent_mat_hint_1_Template","FieldHintComponent_mat_error_2_Template","FieldHintComponent_ng_template_3_Template","_c0","ClickStopPropagationDirective","onClick","event","stopPropagation","hostBindings","$event","SafeHtmlPipe","sanitizer","transform","html","bypassSecurityTrustHtml","pure","loader","provide","TranslateLoader","useFactory","deps","HttpClient","defaultLanguage","isolate","TranslateLoaderWithErrorHandling","window","sxcVersion","prefix","suffix","getTranslation","lang","pipe","catchError","error","console","warn","of"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/features/features.module.ts","./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/pipes/safe-html.pipe.ts","./projects/eav-ui/src/app/shared/translation/translate-configuration.ts","./projects/eav-ui/src/app/shared/translation/translate-loader-factory.ts","./projects/eav-ui/src/app/shared/translation/translate-loader-with-error-handling.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FeatureIconTextComponent } from './feature-icon-text/feature-icon-text.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { buildTranslateConfiguration } from '../shared/translation';\r\nimport { translateLoaderFactory } from '../shared/translation/translate-loader-factory';\r\nimport { FeatureInfoDialogComponent } from './feature-info-dialog/feature-info-dialog.component';\r\nimport { FeatureIconComponent } from './feature-icon/feature-icon.component';\r\nimport { FeatureTextInfoComponent } from './feature-text-info/feature-text-info.component';\r\nimport { FeatureIconIndicatorComponent } from './feature-icon-indicator/feature-icon-indicator.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { FeatureDetailService } from './services/feature-detail.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FeatureIconComponent,\r\n    FeatureIconTextComponent,\r\n    FeatureInfoDialogComponent,\r\n    FeatureTextInfoComponent,\r\n    FeatureIconIndicatorComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    SharedComponentsModule,\r\n    TranslateModule.forChild(buildTranslateConfiguration(translateLoaderFactory)),\r\n  ],\r\n  exports: [\r\n    FeatureIconComponent,\r\n    FeatureIconTextComponent,\r\n    FeatureInfoDialogComponent,\r\n    FeatureTextInfoComponent,\r\n    FeatureIconIndicatorComponent,\r\n  ],\r\n  providers: [\r\n    FeatureDetailService\r\n  ]\r\n})\r\nexport class FeaturesModule { }\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Feature } from '../models';\r\n\r\nexport const webApiRoot = \"admin/feature/\";\r\n\r\n@Injectable()\r\nexport class FeatureDetailService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private dnnContext: DnnContext\r\n  ) { }\r\n\r\n  getFeatureDetails(featureNameId: string): Observable<Feature> {\r\n    return this.http.get<Feature>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot + 'details'), {\r\n      params: { nameId: featureNameId }\r\n    });\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\" [ngSwitch]=\"isError\">\r\n  <mat-hint *ngSwitchCase=\"false\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-hint>\r\n\r\n  <mat-error *ngSwitchCase=\"true\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-error>\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({ selector: '[appClickStopPropagation]' })\r\nexport class ClickStopPropagationDirective {\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeHtml' })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader, TranslateModuleConfig } from '@ngx-translate/core';\r\n\r\nexport function buildTranslateConfiguration(factory: (http: HttpClient) => TranslateLoader): TranslateModuleConfig {\r\n  const config: TranslateModuleConfig = {\r\n    loader: {\r\n      provide: TranslateLoader,\r\n      useFactory: factory,\r\n      deps: [HttpClient],\r\n    },\r\n    defaultLanguage: 'en',\r\n    isolate: true,\r\n  };\r\n  return config;\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { TranslateLoader } from \"@ngx-translate/core\";\r\nimport { EavWindow } from \"../models/eav-window.model\";\r\nimport { TranslateLoaderWithErrorHandling } from \"./translate-loader-with-error-handling\";\r\n\r\ndeclare const window: EavWindow;\r\n\r\n// AoT requires an exported function for factories\r\n// at least according to https://github.com/ngx-translate/http-loader\r\nexport function translateLoaderFactory(http: HttpClient): TranslateLoader {\r\n    return new TranslateLoaderWithErrorHandling(http, './i18n/', `.js?${window.sxcVersion}`);\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader } from '@ngx-translate/core';\r\nimport { catchError, Observable, of } from 'rxjs';\r\n\r\n/**\r\n * This loader should catch a 404 if the file doesn't exist and not result in errors.\r\n * https://stackoverflow.com/questions/47391613/how-to-set-a-fallback-assets-i18n-en-json-when-url-is-not-available-ngx-trans\r\n */\r\nexport class TranslateLoaderWithErrorHandling implements TranslateLoader {\r\n  constructor(private http: HttpClient, private prefix: string, private suffix: string) { }\r\n\r\n  getTranslation(lang: string): Observable<Record<string, any>> {\r\n    return this.http.get<Record<string, any>>(`${this.prefix}${lang}${this.suffix}`).pipe(\r\n      catchError(error => {\r\n        console.warn(`Translation: Failed to get language '${lang}' from ${this.prefix}`, error);\r\n        return of({});\r\n      }),\r\n    );\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}