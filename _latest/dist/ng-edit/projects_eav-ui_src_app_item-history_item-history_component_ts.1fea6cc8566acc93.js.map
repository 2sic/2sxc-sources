{"version":3,"file":"projects_eav-ui_src_app_item-history_item-history_component_ts.1fea6cc8566acc93.js","mappings":"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","names":["_c0","MAT_TOOLTIP_SCROLL_STRATEGY","InjectionToken","providedIn","factory","overlay","inject","Overlay","scrollStrategies","reposition","scrollThrottle","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","useFactory","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","MAT_TOOLTIP_DEFAULT_OPTIONS","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","PANEL_CLASS","passiveListenerOptions","normalizePassiveListenerOptions","passive","MatTooltip","position","this","_position","value","_overlayRef","_updatePosition","_tooltipInstance","show","updatePosition","positionAtOrigin","_positionAtOrigin","coerceBooleanProperty","_detach","disabled","_disabled","isDisabled","hide","_setupPointerEnterEventsIfNeeded","_syncAriaDescription","message","_showDelay","coerceNumberProperty","_hideDelay","_mouseLeaveHideDelay","_message","oldMessage","String","trim","_isTooltipVisible","_updateTooltipMessage","tooltipClass","_tooltipClass","_setTooltipClass","constructor","_overlay","_elementRef","_scrollDispatcher","_viewContainerRef","_ngZone","_platform","_ariaDescriber","_focusMonitor","scrollStrategy","_dir","_defaultOptions","_document","_viewInitialized","_pointerExitEventsInitialized","_tooltipComponent","TooltipComponent","_viewportMargin","_cssClassPrefix","touchGestures","_passiveListeners","_touchstartTimeout","_destroyed","Subject","_injector","Injector","_scrollStrategy","change","pipe","takeUntil","subscribe","ngAfterViewInit","monitor","origin","run","ngOnDestroy","nativeElement","clearTimeout","dispose","forEach","event","listener","removeEventListener","length","next","complete","removeDescription","stopMonitoring","delay","_cancelPendingAnimations","overlayRef","_createOverlay","_portal","ComponentPortal","instance","attach","_triggerElement","afterHidden","isVisible","toggle","undefined","existingStrategy","getConfig","positionStrategy","_origin","ElementRef","scrollableAncestors","getAncestorScrollContainers","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","_updateCurrentPositionClass","connectionPair","scrollableViewProperties","isOverlayClipped","create","direction","panelClass","detachments","outsidePointerEvents","_handleBodyInteraction","keydownEvents","keyCode","ESCAPE","hasModifierKey","preventDefault","stopPropagation","disableTooltipInteractivity","addPanelClass","hasAttached","detach","_getOrigin","_getOverlayPosition","withPositions","_addOffset","main","fallback","isLtr","originY","offsetY","originX","offsetX","originPosition","x","y","_invertPosition","overlayPosition","overlayX","overlayY","_markForCheck","afterNextRender","injector","newPosition","_currentPosition","classPrefix","removePanelClass","_platformSupportsMouseEvents","push","point","_setupPointerExitEventsIfNeeded","_disableNativeGesturesIfNecessary","touch","targetTouches","clientX","clientY","setTimeout","touchLongPressShowDelay","_addListeners","exitListeners","newTarget","relatedTarget","overlayElement","contains","_wheelListener","touchendListener","listeners","addEventListener","IOS","ANDROID","elementUnderPointer","elementFromPoint","element","gestures","style","nodeName","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","_ariaDescriptionPending","runOutsideAngular","Promise","resolve","then","describe","ɵfac","__ngFactoryType__","i0","i1","i2","i3","i4","DOCUMENT","ɵdir","type","selectors","hostAttrs","hostVars","hostBindings","rf","ctx","inputs","exportAs","standalone","_changeDetectorRef","animationMode","_isMultiline","_closeOnInteraction","_isVisible","_onHide","_showAnimation","_hideAnimation","_animationsDisabled","_hideTimeoutId","_showTimeoutId","_toggleVisibility","markForCheck","_handleMouseLeave","_finalizeAnimation","_onShow","_isTooltipMultiline","rect","getBoundingClientRect","height","width","_handleAnimationEnd","animationName","toVisible","tooltip","_tooltip","showClass","hideClass","classList","remove","add","getComputedStyle","styles","getPropertyValue","ANIMATION_MODULE_TYPE","ɵcmp","viewQuery","_t","first","$event","features","decls","vars","consts","template","_r1","dependencies","NgClass","encapsulation","changeDetection","MatTooltipModule","ɵmod","ɵinj","providers","imports","A11yModule","CommonModule","OverlayModule","MatCommonModule","CdkScrollableModule","MatPaginator_Conditional_2_Conditional_3_For_4_Template","pageSizeOption_r3","$implicit","MatPaginator_Conditional_2_Conditional_3_Template","ctx_r1","_changePageSize","selectRef_r4","open","_formFieldAppearance","color","pageSize","_pageSizeLabelId","selectConfig","disableOptionCentering","_displayedPageSizeOptions","MatPaginator_Conditional_2_Conditional_4_Template","MatPaginator_Conditional_2_Template","_intl","itemsPerPageLabel","MatPaginator_Conditional_6_Template","_r5","firstPage","firstPageLabel","_previousButtonsDisabled","MatPaginator_Conditional_13_Template","_r6","lastPage","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","changes","nextPageLabel","previousPageLabel","getRangeLabel","page","startIndex","Math","max","min","ɵprov","token","MAT_PAGINATOR_INTL_PROVIDER","Optional","SkipSelf","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_DEFAULT_OPTIONS","nextUniqueId","MatPaginator","pageIndex","_pageIndex","_length","_pageSize","_updateDisplayedPageSizeOptions","pageSizeOptions","_pageSizeOptions","map","p","numberAttribute","defaults","_isInitialized","_initializedStream","ReplaySubject","hidePageSize","showFirstLastButtons","EventEmitter","initialized","_intlChanges","formFieldAppearance","ngOnInit","unsubscribe","nextPage","hasNextPage","previousPageIndex","_emitPageEvent","previousPage","hasPreviousPage","getNumberOfPages","maxPageIndex","ceil","floor","slice","indexOf","sort","a","b","emit","booleanAttribute","outputs","MatFormField","MatSelect","MatOption","MatIconButton","MatPaginatorModule","MatButtonModule","MatSelectModule","calcHistoryAttributes","version","versions","compareWith","currentDataTypes","JSON","parse","Json","Entity","Attributes","previousItem","findLive","liveVersion","VersionNumber","find","v","previousDataTypes","allAttributes","Object","entries","dataType","attributes","keys","attributeName","name","attribute","currentValues","previousValues","calcChangeType","values","calcHistoryValues","allLangKeys","lang","includes","langKey","currentValue","previousValue","oldValue","sortObjectKeys","sortKeysAlphabetically","stringify","obj","reduce","acc","key","e","VersionsService","HttpServiceBase","fetchVersions","entityId","initial","postSignal","params","appId","restore","changeId","http","post","apiUrl","toString","compareChange","attribute_r6","value_r7","ItemHistoryComponent_Conditional_14_For_2_Conditional_8_For_1_Conditional_9_For_2_Conditional_4_Template","ItemHistoryComponent_Conditional_14_For_2_Conditional_8_For_1_Conditional_9_For_2_Conditional_5_Template","ItemHistoryComponent_Conditional_14_For_2_Conditional_8_For_1_Conditional_9_For_2_Template","historyItem_r4","attributeExpandedToggle","versionNumber","ItemHistoryComponent_Conditional_14_For_2_Conditional_8_For_1_Conditional_5_Template","ItemHistoryComponent_Conditional_14_For_2_Conditional_8_For_1_Conditional_9_Template","expandedAttributes","_r8","changeSetId","ItemHistoryComponent_Conditional_14_For_2_Conditional_8_For_1_Template","ItemHistoryComponent_Conditional_14_For_2_Conditional_8_Conditional_3_Template","isLastVersion","_r3","panelExpandedChange","ItemHistoryComponent_Conditional_14_For_2_Conditional_8_Template","expandedPanels","timeStamp","getLocalDate","ItemHistoryComponent_Conditional_14_For_2_Template","historyItems","_r9","pageChange","ItemHistoryComponent","#versionsService","dialog","route","snackBar","hostClass","transient","#itemId","parseInt","snapshot","paramMap","get","#page","signal","signalObj","computedObj","getHistoryItems","calcHistoryItems","filteredVersions","ChangeSetId","historyId","HistoryId","TimeStamp","user","User","some","newCompareWith","set","expand","date","Date","newPage","_","duration","close","refreshEdit","ItemHistoryComponent_Conditional_10_Template","ItemHistoryComponent_Conditional_12_Template","ItemHistoryComponent_Conditional_13_Template","ItemHistoryComponent_Conditional_14_Template","ItemHistoryComponent_Conditional_15_Template","tmp_0_0","tmp_2_0","tmp_3_0","tmp_4_0","MatIconModule","i5","MatFormFieldModule","i6","i7","i8","MatOptionModule","MatExpansionModule","i9","i10","DatePipe","TippyDirective"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@angular/material/fesm2022/tooltip.mjs","./node_modules/@angular/material/fesm2022/paginator.mjs","./projects/eav-ui/src/app/item-history/item-history.helpers.ts","./projects/eav-ui/src/app/item-history/services/versions.service.ts","./projects/eav-ui/src/app/item-history/item-history.component.html","./projects/eav-ui/src/app/item-history/item-history.component.ts"],"sourcesContent":["import { takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, Injector, ElementRef, afterNextRender, Directive, Inject, Optional, Input, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { DOCUMENT, NgClass, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\nimport * as i1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n    },\n});\n/** @docs-private */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/** @docs-private */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/** @docs-private */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-mdc-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// These constants were taken from MDC's `numbers` object. We can't import them from MDC,\n// because they have some top-level references to `window` which break during SSR.\nconst MIN_VIEWPORT_TOOLTIP_THRESHOLD = 8;\nconst UNBOUNDED_ANCHOR_GAP = 8;\nconst MIN_HEIGHT = 24;\nconst MAX_WIDTH = 200;\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n                this._tooltipInstance?.show(0);\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /**\n     * Whether tooltip should be relative to the click or touch origin\n     * instead of outside the element bounding box.\n     */\n    get positionAtOrigin() {\n        return this._positionAtOrigin;\n    }\n    set positionAtOrigin(value) {\n        this._positionAtOrigin = coerceBooleanProperty(value);\n        this._detach();\n        this._overlayRef = null;\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        const isDisabled = coerceBooleanProperty(value);\n        if (this._disabled !== isDisabled) {\n            this._disabled = isDisabled;\n            // If tooltip is disabled, hide immediately.\n            if (isDisabled) {\n                this.hide(0);\n            }\n            else {\n                this._setupPointerEnterEventsIfNeeded();\n            }\n            this._syncAriaDescription(this.message);\n        }\n    }\n    /** The default delay in ms before showing the tooltip after show is called */\n    get showDelay() {\n        return this._showDelay;\n    }\n    set showDelay(value) {\n        this._showDelay = coerceNumberProperty(value);\n    }\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    get hideDelay() {\n        return this._hideDelay;\n    }\n    set hideDelay(value) {\n        this._hideDelay = coerceNumberProperty(value);\n        if (this._tooltipInstance) {\n            this._tooltipInstance._mouseLeaveHideDelay = this._hideDelay;\n        }\n    }\n    /** The message to be displayed in the tooltip */\n    get message() {\n        return this._message;\n    }\n    set message(value) {\n        const oldMessage = this._message;\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n        // away the string-conversion: https://github.com/angular/components/issues/20684\n        this._message = value != null ? String(value).trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n            this._updateTooltipMessage();\n        }\n        this._syncAriaDescription(oldMessage);\n    }\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() {\n        return this._tooltipClass;\n    }\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, _document) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._positionAtOrigin = false;\n        this._disabled = false;\n        this._viewInitialized = false;\n        this._pointerExitEventsInitialized = false;\n        this._tooltipComponent = TooltipComponent;\n        this._viewportMargin = 8;\n        this._cssClassPrefix = 'mat-mdc';\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /** Manually-bound passive event listeners. */\n        this._passiveListeners = [];\n        /** Timer started at the last `touchstart` event. */\n        this._touchstartTimeout = null;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        this._injector = inject(Injector);\n        this._scrollStrategy = scrollStrategy;\n        this._document = _document;\n        if (_defaultOptions) {\n            this._showDelay = _defaultOptions.showDelay;\n            this._hideDelay = _defaultOptions.hideDelay;\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.positionAtOrigin) {\n                this.positionAtOrigin = _defaultOptions.positionAtOrigin;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n            if (_defaultOptions.tooltipClass) {\n                this.tooltipClass = _defaultOptions.tooltipClass;\n            }\n        }\n        _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n            }\n        });\n        this._viewportMargin = MIN_VIEWPORT_TOOLTIP_THRESHOLD;\n    }\n    ngAfterViewInit() {\n        // This needs to happen after view init so the initial values for all inputs have been set.\n        this._viewInitialized = true;\n        this._setupPointerEnterEventsIfNeeded();\n        this._focusMonitor\n            .monitor(this._elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                this._ngZone.run(() => this.hide(0));\n            }\n            else if (origin === 'keyboard') {\n                this._ngZone.run(() => this.show());\n            }\n        });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        const nativeElement = this._elementRef.nativeElement;\n        // Optimization: Do not call clearTimeout unless there is an active timer.\n        if (this._touchstartTimeout) {\n            clearTimeout(this._touchstartTimeout);\n        }\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        this._passiveListeners.forEach(([event, listener]) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        });\n        this._passiveListeners.length = 0;\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay, origin) {\n        if (this.disabled || !this.message || this._isTooltipVisible()) {\n            this._tooltipInstance?._cancelPendingAnimations();\n            return;\n        }\n        const overlayRef = this._createOverlay(origin);\n        this._detach();\n        this._portal =\n            this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n        const instance = (this._tooltipInstance = overlayRef.attach(this._portal).instance);\n        instance._triggerElement = this._elementRef.nativeElement;\n        instance._mouseLeaveHideDelay = this._hideDelay;\n        instance\n            .afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        instance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n        const instance = this._tooltipInstance;\n        if (instance) {\n            if (instance.isVisible()) {\n                instance.hide(delay);\n            }\n            else {\n                instance._cancelPendingAnimations();\n                this._detach();\n            }\n        }\n    }\n    /** Shows/hides the tooltip */\n    toggle(origin) {\n        this._isTooltipVisible() ? this.hide() : this.show(undefined, origin);\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay(origin) {\n        if (this._overlayRef) {\n            const existingStrategy = this._overlayRef.getConfig()\n                .positionStrategy;\n            if ((!this.positionAtOrigin || !origin) && existingStrategy._origin instanceof ElementRef) {\n                return this._overlayRef;\n            }\n            this._detach();\n        }\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this.positionAtOrigin ? origin || this._elementRef : this._elementRef)\n            .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)\n            .withFlexibleDimensions(false)\n            .withViewportMargin(this._viewportMargin)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            this._updateCurrentPositionClass(change.connectionPair);\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n            scrollStrategy: this._scrollStrategy(),\n        });\n        this._updatePosition(this._overlayRef);\n        this._overlayRef\n            .detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._overlayRef\n            .outsidePointerEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._tooltipInstance?._handleBodyInteraction());\n        this._overlayRef\n            .keydownEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run(() => this.hide(0));\n            }\n        });\n        if (this._defaultOptions?.disableTooltipInteractivity) {\n            this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`);\n        }\n        return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n        const position = overlayRef.getConfig().positionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            this._addOffset({ ...origin.main, ...overlay.main }),\n            this._addOffset({ ...origin.fallback, ...overlay.fallback }),\n        ]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n        const offset = UNBOUNDED_ANCHOR_GAP;\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        if (position.originY === 'top') {\n            position.offsetY = -offset;\n        }\n        else if (position.originY === 'bottom') {\n            position.offsetY = offset;\n        }\n        else if (position.originX === 'start') {\n            position.offsetX = isLtr ? -offset : offset;\n        }\n        else if (position.originX === 'end') {\n            position.offsetX = isLtr ? offset : -offset;\n        }\n        return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y },\n        };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y },\n        };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            afterNextRender(() => {\n                if (this._tooltipInstance) {\n                    this._overlayRef.updatePosition();\n                }\n            }, {\n                injector: this._injector,\n            });\n        }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n        const { overlayY, originX, originY } = connectionPair;\n        let newPosition;\n        // If the overlay is in the middle along the Y axis,\n        // it means that it's either before or after.\n        if (overlayY === 'center') {\n            // Note that since this information is used for styling, we want to\n            // resolve `start` and `end` to their real values, otherwise consumers\n            // would have to remember to do it themselves on each consumption.\n            if (this._dir && this._dir.value === 'rtl') {\n                newPosition = originX === 'end' ? 'left' : 'right';\n            }\n            else {\n                newPosition = originX === 'start' ? 'left' : 'right';\n            }\n        }\n        else {\n            newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n        }\n        if (newPosition !== this._currentPosition) {\n            const overlayRef = this._overlayRef;\n            if (overlayRef) {\n                const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n                overlayRef.removePanelClass(classPrefix + this._currentPosition);\n                overlayRef.addPanelClass(classPrefix + newPosition);\n            }\n            this._currentPosition = newPosition;\n        }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n        // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n        if (this._disabled ||\n            !this.message ||\n            !this._viewInitialized ||\n            this._passiveListeners.length) {\n            return;\n        }\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (this._platformSupportsMouseEvents()) {\n            this._passiveListeners.push([\n                'mouseenter',\n                event => {\n                    this._setupPointerExitEventsIfNeeded();\n                    let point = undefined;\n                    if (event.x !== undefined && event.y !== undefined) {\n                        point = event;\n                    }\n                    this.show(undefined, point);\n                },\n            ]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            this._passiveListeners.push([\n                'touchstart',\n                event => {\n                    const touch = event.targetTouches?.[0];\n                    const origin = touch ? { x: touch.clientX, y: touch.clientY } : undefined;\n                    // Note that it's important that we don't `preventDefault` here,\n                    // because it can prevent click events from firing on the element.\n                    this._setupPointerExitEventsIfNeeded();\n                    if (this._touchstartTimeout) {\n                        clearTimeout(this._touchstartTimeout);\n                    }\n                    const DEFAULT_LONGPRESS_DELAY = 500;\n                    this._touchstartTimeout = setTimeout(() => {\n                        this._touchstartTimeout = null;\n                        this.show(undefined, origin);\n                    }, this._defaultOptions.touchLongPressShowDelay ?? DEFAULT_LONGPRESS_DELAY);\n                },\n            ]);\n        }\n        this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n        if (this._pointerExitEventsInitialized) {\n            return;\n        }\n        this._pointerExitEventsInitialized = true;\n        const exitListeners = [];\n        if (this._platformSupportsMouseEvents()) {\n            exitListeners.push([\n                'mouseleave',\n                event => {\n                    const newTarget = event.relatedTarget;\n                    if (!newTarget || !this._overlayRef?.overlayElement.contains(newTarget)) {\n                        this.hide();\n                    }\n                },\n            ], ['wheel', event => this._wheelListener(event)]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            const touchendListener = () => {\n                if (this._touchstartTimeout) {\n                    clearTimeout(this._touchstartTimeout);\n                }\n                this.hide(this._defaultOptions.touchendHideDelay);\n            };\n            exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n        }\n        this._addListeners(exitListeners);\n        this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n        listeners.forEach(([event, listener]) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        });\n    }\n    _platformSupportsMouseEvents() {\n        return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n        if (this._isTooltipVisible()) {\n            const elementUnderPointer = this._document.elementFromPoint(event.clientX, event.clientY);\n            const element = this._elementRef.nativeElement;\n            // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n            // won't fire if the user scrolls away using the wheel without moving their cursor. We\n            // work around it by finding the element under the user's cursor and closing the tooltip\n            // if it's not the trigger.\n            if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n                this.hide();\n            }\n        }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            const element = this._elementRef.nativeElement;\n            const style = element.style;\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect =\n                    style.msUserSelect =\n                        style.webkitUserSelect =\n                            style.MozUserSelect =\n                                'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                style.webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n    /** Updates the tooltip's ARIA description based on it current state. */\n    _syncAriaDescription(oldMessage) {\n        if (this._ariaDescriptionPending) {\n            return;\n        }\n        this._ariaDescriptionPending = true;\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, oldMessage, 'tooltip');\n        this._ngZone.runOutsideAngular(() => {\n            // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n            // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n            // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n            // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n            Promise.resolve().then(() => {\n                this._ariaDescriptionPending = false;\n                if (this.message && !this.disabled) {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n                }\n            });\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTooltip, deps: [{ token: i1.Overlay }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.ViewContainerRef }, { token: i0.NgZone }, { token: i2.Platform }, { token: i3.AriaDescriber }, { token: i3.FocusMonitor }, { token: MAT_TOOLTIP_SCROLL_STRATEGY }, { token: i4.Directionality }, { token: MAT_TOOLTIP_DEFAULT_OPTIONS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatTooltip, isStandalone: true, selector: \"[matTooltip]\", inputs: { position: [\"matTooltipPosition\", \"position\"], positionAtOrigin: [\"matTooltipPositionAtOrigin\", \"positionAtOrigin\"], disabled: [\"matTooltipDisabled\", \"disabled\"], showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, host: { properties: { \"class.mat-mdc-tooltip-disabled\": \"disabled\" }, classAttribute: \"mat-mdc-tooltip-trigger\" }, exportAs: [\"matTooltip\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTooltip, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTooltip]',\n                    exportAs: 'matTooltip',\n                    host: {\n                        'class': 'mat-mdc-tooltip-trigger',\n                        '[class.mat-mdc-tooltip-disabled]': 'disabled',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i2.Platform }, { type: i3.AriaDescriber }, { type: i3.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n                }] }, { type: i4.Directionality }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }], propDecorators: { position: [{\n                type: Input,\n                args: ['matTooltipPosition']\n            }], positionAtOrigin: [{\n                type: Input,\n                args: ['matTooltipPositionAtOrigin']\n            }], disabled: [{\n                type: Input,\n                args: ['matTooltipDisabled']\n            }], showDelay: [{\n                type: Input,\n                args: ['matTooltipShowDelay']\n            }], hideDelay: [{\n                type: Input,\n                args: ['matTooltipHideDelay']\n            }], touchGestures: [{\n                type: Input,\n                args: ['matTooltipTouchGestures']\n            }], message: [{\n                type: Input,\n                args: ['matTooltip']\n            }], tooltipClass: [{\n                type: Input,\n                args: ['matTooltipClass']\n            }] } });\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent {\n    constructor(_changeDetectorRef, _elementRef, animationMode) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /* Whether the tooltip text overflows to multiple lines */\n        this._isMultiline = false;\n        /** Whether interactions on the page should close the tooltip */\n        this._closeOnInteraction = false;\n        /** Whether the tooltip is currently visible. */\n        this._isVisible = false;\n        /** Subject for notifying that the tooltip has been hidden from the view */\n        this._onHide = new Subject();\n        /** Name of the show animation and the class that toggles it. */\n        this._showAnimation = 'mat-mdc-tooltip-show';\n        /** Name of the hide animation and the class that toggles it. */\n        this._hideAnimation = 'mat-mdc-tooltip-hide';\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = setTimeout(() => {\n            this._toggleVisibility(true);\n            this._showTimeoutId = undefined;\n        }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        this._hideTimeoutId = setTimeout(() => {\n            this._toggleVisibility(false);\n            this._hideTimeoutId = undefined;\n        }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n        return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n        return this._isVisible;\n    }\n    ngOnDestroy() {\n        this._cancelPendingAnimations();\n        this._onHide.complete();\n        this._triggerElement = null;\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    _handleMouseLeave({ relatedTarget }) {\n        if (!relatedTarget || !this._triggerElement.contains(relatedTarget)) {\n            if (this.isVisible()) {\n                this.hide(this._mouseLeaveHideDelay);\n            }\n            else {\n                this._finalizeAnimation(false);\n            }\n        }\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() {\n        this._isMultiline = this._isTooltipMultiline();\n        this._markForCheck();\n    }\n    /** Whether the tooltip text has overflown to the next line */\n    _isTooltipMultiline() {\n        const rect = this._elementRef.nativeElement.getBoundingClientRect();\n        return rect.height > MIN_HEIGHT && rect.width >= MAX_WIDTH;\n    }\n    /** Event listener dispatched when an animation on the tooltip finishes. */\n    _handleAnimationEnd({ animationName }) {\n        if (animationName === this._showAnimation || animationName === this._hideAnimation) {\n            this._finalizeAnimation(animationName === this._showAnimation);\n        }\n    }\n    /** Cancels any pending animation sequences. */\n    _cancelPendingAnimations() {\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = this._hideTimeoutId = undefined;\n    }\n    /** Handles the cleanup after an animation has finished. */\n    _finalizeAnimation(toVisible) {\n        if (toVisible) {\n            this._closeOnInteraction = true;\n        }\n        else if (!this.isVisible()) {\n            this._onHide.next();\n        }\n    }\n    /** Toggles the visibility of the tooltip element. */\n    _toggleVisibility(isVisible) {\n        // We set the classes directly here ourselves so that toggling the tooltip state\n        // isn't bound by change detection. This allows us to hide it even if the\n        // view ref has been detached from the CD tree.\n        const tooltip = this._tooltip.nativeElement;\n        const showClass = this._showAnimation;\n        const hideClass = this._hideAnimation;\n        tooltip.classList.remove(isVisible ? hideClass : showClass);\n        tooltip.classList.add(isVisible ? showClass : hideClass);\n        if (this._isVisible !== isVisible) {\n            this._isVisible = isVisible;\n            this._changeDetectorRef.markForCheck();\n        }\n        // It's common for internal apps to disable animations using `* { animation: none !important }`\n        // which can break the opening sequence. Try to detect such cases and work around them.\n        if (isVisible && !this._animationsDisabled && typeof getComputedStyle === 'function') {\n            const styles = getComputedStyle(tooltip);\n            // Use `getPropertyValue` to avoid issues with property renaming.\n            if (styles.getPropertyValue('animation-duration') === '0s' ||\n                styles.getPropertyValue('animation-name') === 'none') {\n                this._animationsDisabled = true;\n            }\n        }\n        if (isVisible) {\n            this._onShow();\n        }\n        if (this._animationsDisabled) {\n            tooltip.classList.add('_mat-animation-noopable');\n            this._finalizeAnimation(isVisible);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: TooltipComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: TooltipComponent, isStandalone: true, selector: \"mat-tooltip-component\", host: { attributes: { \"aria-hidden\": \"true\" }, listeners: { \"mouseleave\": \"_handleMouseLeave($event)\" } }, viewQueries: [{ propertyName: \"_tooltip\", first: true, predicate: [\"tooltip\"], descendants: true, static: true }], ngImport: i0, template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mat-mdc-tooltip-surface mdc-tooltip__surface\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mat-mdc-tooltip{position:relative;transform:scale(0);display:inline-flex}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-surface{word-break:normal;overflow-wrap:anywhere;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center;will-change:transform,opacity;background-color:var(--mdc-plain-tooltip-container-color, var(--mat-app-inverse-surface));color:var(--mdc-plain-tooltip-supporting-text-color, var(--mat-app-inverse-on-surface));border-radius:var(--mdc-plain-tooltip-container-shape, var(--mat-app-corner-extra-small));font-family:var(--mdc-plain-tooltip-supporting-text-font, var(--mat-app-body-small-font));font-size:var(--mdc-plain-tooltip-supporting-text-size, var(--mat-app-body-small-size));font-weight:var(--mdc-plain-tooltip-supporting-text-weight, var(--mat-app-body-small-weight));line-height:var(--mdc-plain-tooltip-supporting-text-line-height, var(--mat-app-body-small-line-height));letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking, var(--mat-app-body-small-tracking))}.mat-mdc-tooltip-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:right}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"], dependencies: [{ kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: TooltipComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tooltip-component', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        '(mouseleave)': '_handleMouseLeave($event)',\n                        'aria-hidden': 'true',\n                    }, standalone: true, imports: [NgClass], template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mat-mdc-tooltip-surface mdc-tooltip__surface\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mat-mdc-tooltip{position:relative;transform:scale(0);display:inline-flex}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-surface{word-break:normal;overflow-wrap:anywhere;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center;will-change:transform,opacity;background-color:var(--mdc-plain-tooltip-container-color, var(--mat-app-inverse-surface));color:var(--mdc-plain-tooltip-supporting-text-color, var(--mat-app-inverse-on-surface));border-radius:var(--mdc-plain-tooltip-container-shape, var(--mat-app-corner-extra-small));font-family:var(--mdc-plain-tooltip-supporting-text-font, var(--mat-app-body-small-font));font-size:var(--mdc-plain-tooltip-supporting-text-size, var(--mat-app-body-small-size));font-weight:var(--mdc-plain-tooltip-supporting-text-weight, var(--mat-app-body-small-weight));line-height:var(--mdc-plain-tooltip-supporting-text-line-height, var(--mat-app-body-small-line-height));letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking, var(--mat-app-body-small-tracking))}.mat-mdc-tooltip-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:right}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { _tooltip: [{\n                type: ViewChild,\n                args: ['tooltip', {\n                        // Use a static query here since we interact directly with\n                        // the DOM which can happen before `ngAfterViewInit`.\n                        static: true,\n                    }]\n            }] } });\n\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nconst matTooltipAnimations = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        // TODO(crisbeto): these values are based on MDC's CSS.\n        // We should be able to use their styles directly once we land #19432.\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0.8)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => hidden', animate('75ms cubic-bezier(0.4, 0, 1, 1)')),\n    ]),\n};\n\nclass MatTooltipModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTooltipModule, imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule, MatTooltip, TooltipComponent], exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTooltipModule, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule, MatCommonModule, CdkScrollableModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule, MatTooltip, TooltipComponent],\n                    exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                    providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, getMatTooltipInvalidPositionError, matTooltipAnimations };\n","import * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, numberAttribute, EventEmitter, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, NgModule } from '@angular/core';\nimport { Subject, ReplaySubject } from 'rxjs';\nimport { MatIconButton, MatButtonModule } from '@angular/material/button';\nimport { MatSelect, MatSelectModule } from '@angular/material/select';\nimport { MatTooltip, MatTooltipModule } from '@angular/material/tooltip';\nimport { MatOption } from '@angular/material/core';\nimport { MatFormField } from '@angular/material/form-field';\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatPaginatorIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatPaginatorIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatPaginatorIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY,\n};\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\nlet nextUniqueId = 0;\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator {\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() {\n        return this._pageIndex;\n    }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(value || 0, 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() {\n        return this._length;\n    }\n    set length(value) {\n        this._length = value || 0;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() {\n        return this._pageSize;\n    }\n    set pageSize(value) {\n        this._pageSize = Math.max(value || 0, 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() {\n        return this._pageSizeOptions;\n    }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => numberAttribute(p, 0));\n        this._updateDisplayedPageSizeOptions();\n    }\n    constructor(_intl, _changeDetectorRef, defaults) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** ID for the DOM node containing the paginator's items per page label. */\n        this._pageSizeLabelId = `mat-paginator-page-size-label-${nextUniqueId++}`;\n        this._isInitialized = false;\n        this._initializedStream = new ReplaySubject(1);\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        /** Whether to hide the page size selection UI from the user. */\n        this.hidePageSize = false;\n        /** Whether to show the first/last buttons UI to the user. */\n        this.showFirstLastButtons = false;\n        /** Used to configure the underlying `MatSelect` inside the paginator. */\n        this.selectConfig = {};\n        /** Whether the paginator is disabled. */\n        this.disabled = false;\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        /** Emits when the paginator is initialized. */\n        this.initialized = this._initializedStream;\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this.hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this.showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n        this._formFieldAppearance = defaults?.formFieldAppearance || 'outline';\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._initializedStream.next();\n    }\n    ngOnDestroy() {\n        this._initializedStream.complete();\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex + 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._isInitialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize =\n                this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length,\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatPaginator, deps: [{ token: MatPaginatorIntl }, { token: i0.ChangeDetectorRef }, { token: MAT_PAGINATOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: MatPaginator, isStandalone: true, selector: \"mat-paginator\", inputs: { color: \"color\", pageIndex: [\"pageIndex\", \"pageIndex\", numberAttribute], length: [\"length\", \"length\", numberAttribute], pageSize: [\"pageSize\", \"pageSize\", numberAttribute], pageSizeOptions: \"pageSizeOptions\", hidePageSize: [\"hidePageSize\", \"hidePageSize\", booleanAttribute], showFirstLastButtons: [\"showFirstLastButtons\", \"showFirstLastButtons\", booleanAttribute], selectConfig: \"selectConfig\", disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { page: \"page\" }, host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-mdc-paginator\" }, exportAs: [\"matPaginator\"], ngImport: i0, template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              #selectRef\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          <div class=\\\"mat-mdc-paginator-touch-target\\\" (click)=\\\"selectRef.open()\\\"></div>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"firstPage()\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"lastPage()\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color, var(--mat-app-on-surface));background-color:var(--mat-paginator-container-background-color, var(--mat-app-surface));font-family:var(--mat-paginator-container-text-font, var(--mat-app-body-small-font));line-height:var(--mat-paginator-container-text-line-height, var(--mat-app-body-small-line-height));font-size:var(--mat-paginator-container-text-size, var(--mat-app-body-small-size));font-weight:var(--mat-paginator-container-text-weight, var(--mat-app-body-small-weight));letter-spacing:var(--mat-paginator-container-text-tracking, var(--mat-app-body-small-tracking));--mat-form-field-container-height:var(--mat-paginator-form-field-container-height);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size, var(--mat-app-body-small-size))}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}.mat-mdc-paginator-touch-target{display:var(--mat-paginator-touch-target-display);position:absolute;top:50%;left:50%;width:84px;height:48px;background-color:rgba(0,0,0,0);transform:translate(-50%, -50%);cursor:pointer}\"], dependencies: [{ kind: \"component\", type: MatFormField, selector: \"mat-form-field\", inputs: [\"hideRequiredMarker\", \"color\", \"floatLabel\", \"appearance\", \"subscriptSizing\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { kind: \"component\", type: MatSelect, selector: \"mat-select\", inputs: [\"aria-describedby\", \"panelClass\", \"disabled\", \"disableRipple\", \"tabIndex\", \"hideSingleSelectionIndicator\", \"placeholder\", \"required\", \"multiple\", \"disableOptionCentering\", \"compareWith\", \"value\", \"aria-label\", \"aria-labelledby\", \"errorStateMatcher\", \"typeaheadDebounceInterval\", \"sortComparator\", \"id\", \"panelWidth\"], outputs: [\"openedChange\", \"opened\", \"closed\", \"selectionChange\", \"valueChange\"], exportAs: [\"matSelect\"] }, { kind: \"component\", type: MatOption, selector: \"mat-option\", inputs: [\"value\", \"id\", \"disabled\"], outputs: [\"onSelectionChange\"], exportAs: [\"matOption\"] }, { kind: \"component\", type: MatIconButton, selector: \"button[mat-icon-button]\", exportAs: [\"matButton\"] }, { kind: \"directive\", type: MatTooltip, selector: \"[matTooltip]\", inputs: [\"matTooltipPosition\", \"matTooltipPositionAtOrigin\", \"matTooltipDisabled\", \"matTooltipShowDelay\", \"matTooltipHideDelay\", \"matTooltipTouchGestures\", \"matTooltip\", \"matTooltipClass\"], exportAs: [\"matTooltip\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatPaginator, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-paginator', exportAs: 'matPaginator', host: {\n                        'class': 'mat-mdc-paginator',\n                        'role': 'group',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, standalone: true, imports: [MatFormField, MatSelect, MatOption, MatIconButton, MatTooltip], template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              #selectRef\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          <div class=\\\"mat-mdc-paginator-touch-target\\\" (click)=\\\"selectRef.open()\\\"></div>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"firstPage()\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"lastPage()\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color, var(--mat-app-on-surface));background-color:var(--mat-paginator-container-background-color, var(--mat-app-surface));font-family:var(--mat-paginator-container-text-font, var(--mat-app-body-small-font));line-height:var(--mat-paginator-container-text-line-height, var(--mat-app-body-small-line-height));font-size:var(--mat-paginator-container-text-size, var(--mat-app-body-small-size));font-weight:var(--mat-paginator-container-text-weight, var(--mat-app-body-small-weight));letter-spacing:var(--mat-paginator-container-text-tracking, var(--mat-app-body-small-tracking));--mat-form-field-container-height:var(--mat-paginator-form-field-container-height);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size, var(--mat-app-body-small-size))}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}.mat-mdc-paginator-touch-target{display:var(--mat-paginator-touch-target-display);position:absolute;top:50%;left:50%;width:84px;height:48px;background-color:rgba(0,0,0,0);transform:translate(-50%, -50%);cursor:pointer}\"] }]\n        }], ctorParameters: () => [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n                }] }], propDecorators: { color: [{\n                type: Input\n            }], pageIndex: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], length: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], pageSize: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], pageSizeOptions: [{\n                type: Input\n            }], hidePageSize: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], showFirstLastButtons: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selectConfig: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], page: [{\n                type: Output\n            }] } });\n\nclass MatPaginatorModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatPaginatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatPaginatorModule, imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator], exports: [MatPaginator] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatPaginatorModule, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatPaginatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator],\n                    exports: [MatPaginator],\n                    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n","import { CompareWith } from './models/compare-with.model';\r\nimport { HistoryAttribute, HistoryAttributeValue, HistoryItem } from './models/history-item.model';\r\nimport { Version, VersionEntityAttributeValues, VersionJsonParsed } from './models/version.model';\r\n\r\nexport function getHistoryItems(versions: Version[], page: number, pageSize: number, compareWith: CompareWith) {\r\n  if (versions == null || page == null || pageSize == null || compareWith == null)\r\n    return null;\r\n  const filtered = versions.slice((page - 1) * pageSize, page * pageSize);\r\n\r\n  const historyItems = calcHistoryItems(filtered, versions, compareWith);\r\n  return historyItems;\r\n}\r\n\r\nfunction calcHistoryItems(filteredVersions: Version[], versions: Version[], compareWith: CompareWith) {\r\n  return filteredVersions.map(version => ({\r\n    changeSetId: version.ChangeSetId,\r\n    attributes: calcHistoryAttributes(version, versions, compareWith),\r\n    historyId: version.HistoryId,\r\n    timeStamp: version.TimeStamp,\r\n    user: version.User,\r\n    versionNumber: version.VersionNumber,\r\n    isLastVersion: !versions.some(v => v.VersionNumber === version.VersionNumber + 1),\r\n  } satisfies HistoryItem));\r\n}\r\n\r\nfunction calcHistoryAttributes(version: Version, versions: Version[], compareWith: CompareWith) {\r\n  const currentDataTypes = (JSON.parse(version.Json) as VersionJsonParsed).Entity.Attributes;\r\n  const previousItem = compareWith === 'live' ? findLive(versions) : versions.find(v => v.VersionNumber === version.VersionNumber - 1);\r\n  const previousDataTypes = previousItem ? (JSON.parse(previousItem.Json) as VersionJsonParsed).Entity.Attributes : null;\r\n\r\n  const allAttributes: { name: string, dataType: string }[] = [];\r\n  if (currentDataTypes != null) {\r\n    Object.entries(currentDataTypes).forEach(([dataType, attributes]) => {\r\n      Object.keys(attributes).forEach(attributeName => {\r\n        if (allAttributes.find(a => a.name === attributeName && a.dataType === dataType) != null)\r\n          return;\r\n        allAttributes.push({ name: attributeName, dataType });\r\n      });\r\n    });\r\n  }\r\n  if (previousDataTypes != null) {\r\n    Object.entries(previousDataTypes).forEach(([dataType, attributes]) => {\r\n      Object.keys(attributes).forEach(attributeName => {\r\n        if (allAttributes.find(a => a.name === attributeName && a.dataType === dataType) != null)\r\n          return;\r\n        allAttributes.push({ name: attributeName, dataType });\r\n      });\r\n    });\r\n  }\r\n\r\n  const historyAttributes = allAttributes.map(attribute => {\r\n    const currentValues = currentDataTypes?.[attribute.dataType]?.[attribute.name];\r\n    const previousValues = previousDataTypes?.[attribute.dataType]?.[attribute.name];\r\n    return {\r\n      name: attribute.name,\r\n      dataType: attribute.dataType,\r\n      change: calcChangeType(currentValues, previousValues, true),\r\n      values: calcHistoryValues(currentValues, previousValues),\r\n    } satisfies HistoryAttribute;\r\n  });\r\n\r\n  return historyAttributes;\r\n}\r\n\r\nfunction findLive(versions: Version[]) {\r\n  let liveVersion = versions[0];\r\n  for (const version of versions) {\r\n    if (version.VersionNumber <= liveVersion.VersionNumber)\r\n      continue;\r\n    liveVersion = version;\r\n  }\r\n  return liveVersion;\r\n}\r\n\r\nfunction calcHistoryValues(values: VersionEntityAttributeValues, previousValues: VersionEntityAttributeValues) {\r\n  const allLangKeys: string[] = [];\r\n  if (values != null) {\r\n    Object.keys(values).forEach(lang => {\r\n      if (allLangKeys.includes(lang)) return;\r\n      allLangKeys.push(lang);\r\n    });\r\n  }\r\n  if (previousValues != null) {\r\n    Object.keys(previousValues).forEach(lang => {\r\n      if (allLangKeys.includes(lang)) return;\r\n      allLangKeys.push(lang);\r\n    });\r\n  }\r\n\r\n  const historyValues = allLangKeys.map(langKey => {\r\n    const currentValue = values?.[langKey];\r\n    const previousValue = previousValues?.[langKey];\r\n    return {\r\n      langKey,\r\n      value: currentValue,\r\n      oldValue: previousValue,\r\n      change: calcChangeType(currentValue, previousValue),\r\n    } satisfies HistoryAttributeValue;\r\n  });\r\n\r\n  return historyValues;\r\n}\r\n\r\nfunction calcChangeType(currentValue: any, previousValue: any, sortObjectKeys = false) {\r\n  let change: 'new' | 'deleted' | 'changed' | 'none';\r\n\r\n  if (sortObjectKeys) {\r\n    if (typeof currentValue === 'object') {\r\n      currentValue = sortKeysAlphabetically(currentValue);\r\n    }\r\n    if (typeof previousValue === 'object') {\r\n      previousValue = sortKeysAlphabetically(previousValue);\r\n    }\r\n  }\r\n\r\n  change = (currentValue != null && previousValue != null)\r\n    ? (JSON.stringify(currentValue) !== JSON.stringify(previousValue)) ?  'changed' : 'none'\r\n    : (currentValue != null) ? 'new' : 'deleted';\r\n\r\n  return change;\r\n}\r\n\r\nfunction sortKeysAlphabetically(obj: Record<string, any>): Record<string, any> {\r\n  if (typeof obj !== 'object') return obj;\r\n\r\n  return Object.keys(obj)\r\n    .sort()\r\n    .reduce((acc, key) => ({ ...acc, [key]: obj[key] }), {});\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Version } from '../models/version.model';\r\n\r\nconst webApiVersionsGet = 'cms/history/get';\r\nconst webApiVersionsRestore = 'cms/history/restore';\r\n\r\n@Injectable()\r\nexport class VersionsService extends HttpServiceBase {\r\n\r\n  fetchVersions(entityId: number, initial: Version[] = null) {\r\n    return this.postSignal<Version[]>(\r\n      webApiVersionsGet,\r\n      { entityId },\r\n      {\r\n        params: { appId: this.appId },\r\n      },\r\n      initial,\r\n    );\r\n  }\r\n\r\n  restore(entityId: number, changeId: number) {\r\n    return this.http.post<boolean>(\r\n      this.apiUrl(webApiVersionsRestore),\r\n      { entityId },\r\n      {\r\n        params: { appId: this.appId, changeId: changeId.toString() },\r\n      },\r\n    );\r\n  }\r\n}\r\n","<div class=\"eav-dialog eav-no-scrollbar\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Item History</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"dialog.close()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <p>Check version history for this item and restore the version you need.</p>\r\n    @if (historyItems()?.length > 0) {\r\n      <div class=\"eav-compare-box\">\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field eav-compare-box__dropdown\">\r\n          <mat-select [value]=\"compareWith()\" name=\"Scope\" (selectionChange)=\"compareChange($event.value)\">\r\n            <mat-option value=\"previous\">Compare with: Previous</mat-option>\r\n            <mat-option value=\"live\">Compare with: Live</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    }\r\n    <div>\r\n      @if (historyItems() === null) {\r\n        <div>Loading...</div>\r\n      }\r\n      @if (historyItems()?.length === 0) {\r\n        <div>No previous versions of this item found</div>\r\n      }\r\n      @if (historyItems()?.length > 0) {\r\n        <mat-accordion multi class=\"eav-history-tables\">\r\n          @for (historyItem of historyItems(); track historyItem) {\r\n            <mat-expansion-panel [expanded]=\"expandedPanels[historyItem.versionNumber]\"\r\n              (expandedChange)=\"panelExpandedChange($event, historyItem.versionNumber)\">\r\n              <mat-expansion-panel-header>\r\n                <mat-panel-title>Version {{ historyItem.versionNumber }}</mat-panel-title>\r\n                \r\n                <mat-panel-description [tippy]=\"historyItem.timeStamp | date:'yyyy-MM-dd hh:mm UTC':'UTC'\">\r\n                  {{ getLocalDate(historyItem.timeStamp) | date:'yyyy-MM-dd hh:mm' }}\r\n                </mat-panel-description>\r\n              </mat-expansion-panel-header>\r\n              @if (expandedPanels[historyItem.versionNumber]) {\r\n                @for (attribute of historyItem.attributes; track attribute) {\r\n                  <div class=\"eav-table-row\">\r\n                    <div class=\"eav-table-row__main eav-row-main\"\r\n                      (click)=\"attributeExpandedToggle(historyItem.versionNumber, attribute.name)\">\r\n                      <div class=\"eav-row-main__label eav-history-{{ attribute.change }}\">\r\n                        {{ attribute.name }}\r\n                      </div>\r\n                      <div class=\"eav-row-main__value eav-history-{{ attribute.change }}\">\r\n                        @if (!expandedAttributes[historyItem.versionNumber + attribute.name]) {\r\n                          {{ attribute.values[0]?.value }}\r\n                        }\r\n                      </div>\r\n                      <div class=\"eav-row-main__type\">\r\n                        <i>[{{ attribute.dataType }}]</i>\r\n                      </div>\r\n                    </div>\r\n                    @if (expandedAttributes[historyItem.versionNumber + attribute.name]) {\r\n                      <div class=\"eav-table-row__details\">\r\n                        @for (value of attribute.values; track value) {\r\n                          <div class=\"eav-detail-row\">\r\n                            <div class=\"eav-detail-row__label eav-history-{{ value.change }}\">{{ value.langKey }}:</div>\r\n                            <div class=\"eav-detail-row__value\">\r\n                              @if (value.change !== 'changed') {\r\n                                <div class=\"eav-history-{{ value.change }}\">\r\n                                  {{ value.change === 'deleted' ? value.oldValue : value.value }}\r\n                                </div>\r\n                              }\r\n                              @if (value.change === 'changed') {\r\n                                <div class=\"eav-history-new\">{{ value.value }}</div>\r\n                                <div class=\"eav-history-deleted eav-history-deleted__value\">{{ value.oldValue }}</div>\r\n                              }\r\n                            </div>\r\n                          </div>\r\n                        }\r\n                      </div>\r\n                    }\r\n                  </div>\r\n                }\r\n                <div class=\"eav-row-actions\">\r\n                  @if (!historyItem.isLastVersion) {\r\n                    <button mat-raised-button color=\"accent\" (click)=\"restore(historyItem.changeSetId)\">\r\n                      Restore\r\n                    </button>\r\n                  }\r\n                </div>\r\n              }\r\n            </mat-expansion-panel>\r\n          }\r\n        </mat-accordion>\r\n      }\r\n    </div>\r\n    @if (historyItems()?.length > 0) {\r\n      <mat-paginator color=\"accent\" showFirstLastButtons=\"true\" [length]=\"version().length\" [pageSize]=\"pageSize()\"\r\n        [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\">\r\n      </mat-paginator>\r\n    }\r\n  </div>\r\n</div>\r\n","import { DatePipe } from '@angular/common';\r\nimport { Component, HostBinding, signal } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatPaginatorModule, PageEvent } from '@angular/material/paginator';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { transient } from '../../../../core';\r\nimport { TippyDirective } from '../shared/directives/tippy.directive';\r\nimport { computedObj, signalObj } from '../shared/signals/signal.utilities';\r\nimport { getHistoryItems } from './item-history.helpers';\r\nimport { CompareWith } from './models/compare-with.model';\r\nimport { ItemHistoryResult } from './models/item-history-result.model';\r\nimport { VersionsService } from './services/versions.service';\r\n\r\n@Component({\r\n  selector: 'app-item-history',\r\n  templateUrl: './item-history.component.html',\r\n  styleUrls: ['./item-history.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatExpansionModule,\r\n    MatPaginatorModule,\r\n    DatePipe,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class ItemHistoryComponent {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  #versionsService = transient(VersionsService);\r\n\r\n  constructor(\r\n    protected dialog: MatDialogRef<ItemHistoryComponent>,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n  }\r\n  \r\n  #itemId = parseInt(this.route.snapshot.paramMap.get('itemId'), 10);\r\n  version = this.#versionsService.fetchVersions(this.#itemId);\r\n\r\n  pageSizeOptions = [10, 20, 50];\r\n  expandedPanels: Record<string, boolean> = {};\r\n  expandedAttributes: Record<string, boolean> = {};\r\n\r\n\r\n  #page = signal<number>(1);\r\n  pageSize = signalObj<number>('pageSize', this.pageSizeOptions[0]);\r\n  compareWith = signal<CompareWith>('live');\r\n  historyItems = computedObj('historyItems', () => getHistoryItems(this.version(), this.#page(), this.pageSize(), this.compareWith()));\r\n\r\n  compareChange(newCompareWith: CompareWith) {\r\n    this.compareWith.set(newCompareWith);\r\n  }\r\n\r\n  panelExpandedChange(expand: boolean, versionNumber: number) {\r\n    this.expandedPanels[versionNumber] = expand;\r\n  }\r\n\r\n  attributeExpandedToggle(versionNumber: number, name: string) {\r\n    this.expandedAttributes[versionNumber + name] = !this.expandedAttributes[versionNumber + name];\r\n  }\r\n\r\n  getLocalDate(date: string) {\r\n    return new Date(date);\r\n  }\r\n\r\n  pageChange(event: PageEvent) {\r\n    const newPage = event.pageIndex + 1;\r\n    if (newPage !== this.#page()) {\r\n      this.expandedPanels = {};\r\n      this.expandedAttributes = {};\r\n      this.#page.set(newPage);\r\n    }\r\n    this.pageSize.set(event.pageSize);\r\n  }\r\n\r\n  restore(changeId: number) {\r\n    this.snackBar.open('Restoring previous version...');\r\n    this.#versionsService.restore(this.#itemId, changeId).subscribe(_ => {\r\n      this.snackBar.open('Previous version restored. Will reload edit dialog', null, { duration: 3000 });\r\n      this.dialog.close({\r\n        refreshEdit: true,\r\n      } satisfies ItemHistoryResult);\r\n    });\r\n  }\r\n}\r\n"],"x_google_ignoreList":[0,1]}