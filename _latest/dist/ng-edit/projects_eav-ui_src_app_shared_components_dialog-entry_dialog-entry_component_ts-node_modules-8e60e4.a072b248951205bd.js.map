{"version":3,"mappings":"yQAgBO,IAAMA,EAAb,MAAM,QAIJC,YACUC,EACAC,EACAC,EACAC,EACAC,EACAC,SALAC,cACAA,wBACAA,cACAA,aACAA,eACAA,yBAER,MAAMC,EAAaD,KAAKJ,OAAOM,uBAC/BF,KAAKG,YAA+B,QAAlBC,EAAU,MAAVC,OAAU,EAAVA,EAAYC,cAAMC,eAAEC,QAAS,GAGjDC,WACE,MAAMC,EAA6BV,KAAKH,MAAMc,SAASC,KAAKlB,OAC5D,GAAoB,MAAhBgB,EACF,MAAM,IAAIG,MAAM,wFAElBC,OAAkB,eAAgBJ,EAAaK,KAAM,cAAef,KAAKF,QAAQkB,GAAI,WAAYhB,KAAKF,SAEtGY,EAAaO,eAAeC,KAAKC,IAG1BnB,KAAKN,OAAe0B,sBAAyBpB,KAAKN,OAAe2B,eAClErB,KAAKN,OAAe2B,eAAqCC,cAAcC,UAAU,KACjFvB,KAAKwB,oBAAoBd,EAAcS,KAGzCnB,KAAKwB,oBAAoBd,EAAcS,KAK7CM,cACEzB,KAAK0B,UAAUC,QAGTH,oBAAoBd,EAA4BS,GAClDT,EAAakB,aACf5B,KAAKF,QAAQ+B,KAAK7B,KAAKH,OAGzBG,KAAK0B,UAAY1B,KAAKN,OAAOoC,KAAKX,EAAW,CAC3CY,WAAW,EACXC,cAAe,kBACfC,mBAAmB,EACnBrB,KAAMZ,KAAKG,WACX+B,WAAY,CACV,eACA,gBAAgBxB,EAAayB,YAC7BzB,EAAa0B,cAAgB,iBAAmB,kBAC5C1B,EAAawB,WAAaxB,EAAawB,WAAa,IAI1DG,SAAU,CAAEC,IAAK,KACjB3C,iBAAkBK,KAAKL,mBAGzBK,KAAK0B,UAAUa,cAAchB,UAAWX,KACtCE,OAAkB,qBAAsBJ,EAAaK,KAAM,QAASH,GAEpE,MAAM4B,EAAS5B,EACf,GAA2B,OAAjB,MAAN6B,OAAM,EAANA,EAAQC,aAKZ,GAAI1C,KAAKH,MAAM8C,aAAaC,QAAU,EACpC,IACEC,OAAOC,OAAOC,MAAMC,WAAWrB,cACxBsB,SAKTjD,KAAKJ,OAAOsD,SAAS,CAAC,MADpBlD,KAAKH,MAAMc,SAASwC,IAAIP,OAAS,EACN,CAAEQ,WAAYpD,KAAKH,MAAMiD,OAAQtC,MAAOI,GAExC,CAAEwC,WAAYpD,KAAKH,MAAMiD,OAAOA,OAAQtC,MAAOI,SAd5EZ,KAAKJ,OAAOsD,SAAS,CAACV,EAAOE,gBAkBjC1C,KAAKD,kBAAkBsD,6DArFd7D,GAAoB8D,mGAApB9D,EAAoB+D,uFAApB/D,GAAb,kFCJMgE,QAAN,QACI/D,cACIO,KAAKyD,WAAY,EACjBzD,KAAK0D,QAAS,EAGdC,eACA,OAAO3D,KAAKyD,UAEZE,aAASC,GACT5D,KAAKyD,aAAYI,MAAsBD,GAGvCE,YACA,OAAO9D,KAAK0D,OAEZI,UAAMF,GACN5D,KAAK0D,UAASG,MAAsBD,IAG5CJ,SAAWO,UAAX,0BAAuGP,IACvGA,EAAWQ,UADkFV,MAC7F,MAA2FE,EAA3FD,8CAAgN,YAAhN,6DAD6FD,MAC7F,uDAD6FA,MAC7F,kCAD6FA,CAC7F,qCAD6FA,CAC7F,+cArBME,MA6CAS,QAAN,SAEAA,SAAiBF,UAAjB,0BAA6GE,IAC7GA,EAAiBC,UA5B4EZ,MA4B7F,MAA8GW,IAC9GA,EAAiBE,UA7B4Eb,MA6B7F,UAA0I,CAACc,MAAkBA,QAJvJH","names":["DialogEntryComponent","constructor","dialog","viewContainerRef","router","route","context","changeDetectorRef","this","navigation","getCurrentNavigation","dialogData","u","h","extras","_a","state","ngOnInit","dialogConfig","snapshot","data","Error","consoleLogAngular","name","id","getComponent","then","component","_dialogAnimatingOpen","_lastDialogRef","afterOpened","subscribe","openDialogComponent","ngOnDestroy","dialogRef","close","initContext","init","open","autoFocus","backdropClass","closeOnNavigation","panelClass","panelSize","showScrollbar","position","top","afterClosed","navRes","d","navigateUrl","pathFromRoot","length","window","parent","$2sxc","totalPopup","error","navigate","url","relativeTo","markForCheck","i0","selectors","MatDivider","_vertical","_inset","vertical","value","coerceBooleanProperty","inset","ɵfac","ɵcmp","MatDividerModule","ɵmod","ɵinj","MatCommonModule"],"sources":["./projects/eav-ui/src/app/shared/components/dialog-entry/dialog-entry.component.ts","./node_modules/@angular/material/fesm2015/divider.mjs"],"sourcesContent":["import { ChangeDetectorRef, Component, OnDestroy, OnInit, Type, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NavigateFormResult } from '../../../edit/shared/models';\r\nimport { consoleLogAngular } from '../../helpers/console-log-angular.helper';\r\nimport { DialogConfig } from '../../models/dialog-config.model';\r\nimport { EavWindow } from '../../models/eav-window.model';\r\nimport { Context } from '../../services/context';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-dialog-entry',\r\n  templateUrl: './dialog-entry.component.html',\r\n  styleUrls: ['./dialog-entry.component.scss'],\r\n})\r\nexport class DialogEntryComponent implements OnInit, OnDestroy {\r\n  private dialogData: Record<string, any>;\r\n  private dialogRef: MatDialogRef<any>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.dialogData = navigation?.extras?.state || {};\r\n  }\r\n\r\n  ngOnInit() {\r\n    const dialogConfig: DialogConfig = this.route.snapshot.data.dialog;\r\n    if (dialogConfig == null) {\r\n      throw new Error(`Could not find config for dialog. Did you forget to add DialogConfig to route data?`);\r\n    }\r\n    consoleLogAngular('Open dialog:', dialogConfig.name, 'Context id:', this.context.id, 'Context:', this.context);\r\n\r\n    dialogConfig.getComponent().then(component => {\r\n      // spm Workaround for \"feature\" where you can't open new dialog while last one is still opening\r\n      // https://github.com/angular/components/commit/728cf1c8ebd49e089f4bae945511bb0918972c26\r\n      if ((this.dialog as any)._dialogAnimatingOpen && (this.dialog as any)._lastDialogRef) {\r\n        ((this.dialog as any)._lastDialogRef as MatDialogRef<any>).afterOpened().subscribe(() => {\r\n          this.openDialogComponent(dialogConfig, component);\r\n        });\r\n      } else {\r\n        this.openDialogComponent(dialogConfig, component);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private openDialogComponent(dialogConfig: DialogConfig, component: Type<any>) {\r\n    if (dialogConfig.initContext) {\r\n      this.context.init(this.route);\r\n    }\r\n\r\n    this.dialogRef = this.dialog.open(component, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: this.dialogData,\r\n      panelClass: [\r\n        'dialog-panel',\r\n        `dialog-panel-${dialogConfig.panelSize}`,\r\n        dialogConfig.showScrollbar ? 'show-scrollbar' : 'no-scrollbar',\r\n        ...(dialogConfig.panelClass ? dialogConfig.panelClass : []),\r\n      ],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n\r\n    this.dialogRef.afterClosed().subscribe((data: any) => {\r\n      consoleLogAngular('Dialog was closed:', dialogConfig.name, 'Data:', data);\r\n\r\n      const navRes = data as NavigateFormResult;\r\n      if (navRes?.navigateUrl != null) {\r\n        this.router.navigate([navRes.navigateUrl]);\r\n        return;\r\n      }\r\n\r\n      if (this.route.pathFromRoot.length <= 3) {\r\n        try {\r\n          window.parent.$2sxc.totalPopup.close();\r\n        } catch (error) { }\r\n        return;\r\n      }\r\n\r\n      if (this.route.snapshot.url.length > 0) {\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent, state: data });\r\n      } else {\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent.parent, state: data });\r\n      }\r\n    });\r\n\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /** Whether the divider is vertically aligned. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Whether the divider is an inset divider. */\n    get inset() {\n        return this._inset;\n    }\n    set inset(value) {\n        this._inset = coerceBooleanProperty(value);\n    }\n}\nMatDivider.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDivider, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatDivider.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatDivider, selector: \"mat-divider\", inputs: { vertical: \"vertical\", inset: \"inset\" }, host: { attributes: { \"role\": \"separator\" }, properties: { \"attr.aria-orientation\": \"vertical ? \\\"vertical\\\" : \\\"horizontal\\\"\", \"class.mat-divider-vertical\": \"vertical\", \"class.mat-divider-horizontal\": \"!vertical\", \"class.mat-divider-inset\": \"inset\" }, classAttribute: \"mat-divider\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDivider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-divider', host: {\n                        'role': 'separator',\n                        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                        '[class.mat-divider-vertical]': 'vertical',\n                        '[class.mat-divider-horizontal]': '!vertical',\n                        '[class.mat-divider-inset]': 'inset',\n                        'class': 'mat-divider',\n                    }, template: '', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"] }]\n        }], propDecorators: { vertical: [{\n                type: Input\n            }], inset: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDividerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatDividerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDividerModule, declarations: [MatDivider], imports: [MatCommonModule], exports: [MatDivider, MatCommonModule] });\nMatDividerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDividerModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDividerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatDivider, MatCommonModule],\n                    declarations: [MatDivider],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n"],"sourceRoot":"webpack:///","file":"projects_eav-ui_src_app_shared_components_dialog-entry_dialog-entry_component_ts-node_modules-8e60e4.a072b248951205bd.js"}