{"version":3,"file":"default-projects_eav-ui_src_app_shared_components_file-upload-dialog_index_ts.2f023f63a4f4ff83.js","mappings":"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","names":["i0","file_r11","name","_r17","ctx_r16","showAppCatalog","vm_r1","uploading","_c1","message_r22","MessageType","ctx_r21","FileUploadMessageTypes","Warning","Success","Error","Text","FileUploadDialogComponent_Conditional_0_Conditional_16_Conditional_1_Template","FileUploadDialogComponent_Conditional_0_Conditional_16_Conditional_2_Template","FileUploadDialogComponent_Conditional_0_Conditional_16_For_4_Template","result","Messages","ctx_r28","remoteInstallerUrl","ctx_r29","currentPackage","displayName","FileUploadDialogComponent_Conditional_0_Conditional_17_Conditional_0_Template","FileUploadDialogComponent_Conditional_0_Conditional_17_Conditional_1_Template","ctx_r8","ready","showProgress","_r32","ctx_r31","closeDialog","ctx_r33","upload","files","length","_r36","ctx_r35","$event","_r38","ctx_r37","filesDropped","FileUploadDialogComponent_Conditional_0_Conditional_5_Template","_r5","click","FileUploadDialogComponent_Conditional_0_Conditional_10_Template","FileUploadDialogComponent_Conditional_0_For_12_Template","ctx_r40","filesChanged","FileUploadDialogComponent_Conditional_0_Conditional_15_Template","FileUploadDialogComponent_Conditional_0_Conditional_16_Template","FileUploadDialogComponent_Conditional_0_Conditional_17_Template","FileUploadDialogComponent_Conditional_0_Conditional_19_Template","FileUploadDialogComponent_Conditional_0_Conditional_20_Template","ctx_r0","dialogData","allowedFileTypes","title","ctx","description","uploadType","UploadTypes","App","FileUploadDialogComponent","BaseSubsinkComponent","constructor","dialogRef","snackBar","installSettingsService","installerService","sanitizer","context","changeDetectorRef","super","this","hostClass","uploading$","BehaviorSubject","files$","result$","undefined","showAppCatalog$","alreadyProcessing","messages$","fromEvent","window","pipe","filter","evt","origin","map","JSON","parse","data","e","console","error","Number","moduleId","subscription","add","settings$","subscribe","settings","bypassSecurityTrustResourceUrl","remoteUrl","ngOnInit","value","next","viewModel$","combineLatest","loadGettingStarted","action","tap","winFrame","installerWindow","nativeElement","specsMsg","installedApps","rules","app","target","appGuid","guid","mode","url","specsJson","stringify","contentWindow","postMessage","log","Object","values","packages","msg","reduce","t","c","confirm","switchMap","detectChanges","installPackages","p","alert","top","location","reload","catchError","Message","message","of","ngOnDestroy","complete","refresh","close","setFiles","event","Array","from","upload$","take","open","duration","multiple","slice","static","MAT_DIALOG_DATA","i1","i2","i3","i4","i5","i6","_angular_core__WEBPACK_IMPORTED_MODULE_2__","In1","selectors","viewQuery","rf","FileUploadDialogComponent_Conditional_0_Template","FileUploadDialogComponent_contFlowTmp","AppPart","ContentType","ContentItem","Query","View","DragAndDropDirective","elementRef","zone","markStyle","EventEmitter","dropAreaClass","dragClass","timeouts","element","markStyleClass","classList","runOutsideAngular","preventDefault","stopPropagation","clearTimeouts","push","setTimeout","remove","onDrop","dataTransfer","filterTypes","emit","timeout","clearTimeout","allowedTypes","split","type","toLocaleLowerCase","filtered","file","extIndex","lastIndexOf","ext","substring","includes","allowedTypesString","replace","_angular_core__WEBPACK_IMPORTED_MODULE_1__","Sc5","hostBindings","SafeHtmlPipe","transform","html","bypassSecurityTrustHtml","_angular_core__WEBPACK_IMPORTED_MODULE_0__","UTH","pure"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/components/file-upload-dialog/file-upload-dialog.component.html","./projects/eav-ui/src/app/shared/components/file-upload-dialog/file-upload-dialog.component.ts","./projects/eav-ui/src/app/shared/components/file-upload-dialog/file-upload-dialog.models.ts","./projects/eav-ui/src/app/shared/directives/drag-and-drop.directive.ts","./projects/eav-ui/src/app/shared/pipes/safe-html.pipe.ts"],"sourcesContent":["@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog\" appDragAndDrop\r\n    [allowedFileTypes]=\"dialogData.allowedFileTypes\" (filesDropped)=\"filesDropped($event)\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\" [innerHtml]=\"dialogData.title | safeHtml\"></div>\r\n    </div>\r\n    <div class=\"eav-dialog-content\">\r\n      @if (vm.uploading) {\r\n        <mat-spinner mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n      }\r\n      <p [innerHtml]=\"dialogData.description | safeHtml\"></p>\r\n      <div>\r\n        <button mat-raised-button tippy=\"Open file browser\" [disabled]=\"vm.uploading\" (click)=\"fileInput.click()\">\r\n          @if (!vm.files.length) {\r\n            <div>Select or drop file</div>\r\n          }\r\n          @for (file of vm.files; track file) {\r\n            <div>{{ file.name }}</div>\r\n          }\r\n        </button>\r\n        <input #fileInput type=\"file\" multiple (change)=\"filesChanged($event)\" class=\"hide\" />\r\n        @if (uploadType == UploadTypes.App) {\r\n          <button mat-raised-button class=\"eav-app-catalog-button\" [disabled]=\"vm.uploading\"\r\n            tippy=\"Open app catalog\" (click)=\"showAppCatalog()\">\r\n            Get recommended Apps from Catalog\r\n          </button>\r\n        }\r\n      </div>\r\n      @if (vm.result) {\r\n        <div class=\"eav-result-container\">\r\n          @if (vm.result.Success) {\r\n            <div class=\"sxc-message sxc-message-info\">\r\n              Upload succeeded. See the messages below for more information.\r\n            </div>\r\n          }\r\n          @if (!vm.result.Success) {\r\n            <div class=\"sxc-message sxc-message-error\">\r\n              Upload failed. See the messages below for more information.\r\n            </div>\r\n          }\r\n          @for (message of vm.result.Messages; track message) {\r\n            <div class=\"sxc-message\" [ngClass]=\"{\r\n              'sxc-message-warning': message.MessageType === FileUploadMessageTypes.Warning,\r\n              'sxc-message-success': message.MessageType === FileUploadMessageTypes.Success,\r\n              'sxc-message-error': message.MessageType === FileUploadMessageTypes.Error\r\n              }\">\r\n              {{ message.Text }}\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n      @if (uploadType == UploadTypes.App && vm.showAppCatalog) {\r\n        @if (ready) {\r\n          <iframe #installerWindow class=\"eav-app-catalog-iframe\" [src]=\"remoteInstallerUrl\"></iframe>\r\n        }\r\n        @if (showProgress) {\r\n          <div class=\"eav-progress\">\r\n            <mat-progress-spinner [mode]=\"'indeterminate'\"></mat-progress-spinner>\r\n            <span>Installing {{ currentPackage?.displayName }}..</span>\r\n          </div>\r\n        }\r\n      }\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      @if (!vm.result?.Success) {\r\n        <button mat-raised-button (click)=\"closeDialog()\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\" [disabled]=\"!vm.files.length || vm.uploading || !!vm.result\"\r\n          (click)=\"upload()\">\r\n          Upload\r\n        </button>\r\n      }\r\n      @if (vm.result?.Success) {\r\n        <button mat-raised-button color=\"accent\" (click)=\"closeDialog(true)\">Close</button>\r\n      }\r\n    </mat-dialog-actions>\r\n  </div>\r\n}","import { ChangeDetectorRef, Component, ElementRef, HostBinding, Inject, Input, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, Observable, catchError, combineLatest, filter, fromEvent, map, of, switchMap, take, tap } from 'rxjs';\r\nimport { BaseSubsinkComponent } from '../base-subsink-component/base-subsink.component';\r\nimport { FileUploadDialogData, FileUploadMessageTypes, FileUploadResult, UploadTypes } from './file-upload-dialog.models';\r\nimport { AppInstallSettingsService } from '../../services/getting-started.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Context } from '../../services/context';\r\nimport { CrossWindowMessage, InstallPackage, InstallSettings, SpecsForInstaller } from '../../models/installer-models';\r\nimport { InstallerService } from '../../services/installer.service';\r\n\r\n@Component({\r\n  selector: 'app-file-upload-dialog',\r\n  templateUrl: './file-upload-dialog.component.html',\r\n  styleUrls: ['./file-upload-dialog.component.scss'],\r\n})\r\nexport class FileUploadDialogComponent extends BaseSubsinkComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  @Input() uploadType: UploadTypes;\r\n\r\n  @ViewChild('installerWindow') installerWindow: ElementRef;\r\n\r\n  uploading$ = new BehaviorSubject<boolean>(false);\r\n  files$ = new BehaviorSubject<File[]>([]);\r\n  result$ = new BehaviorSubject<FileUploadResult>(undefined);\r\n  FileUploadMessageTypes = FileUploadMessageTypes;\r\n  UploadTypes = UploadTypes;\r\n  showAppCatalog$ = new BehaviorSubject<boolean>(false);\r\n\r\n  viewModel$: Observable<FileUploadDialogViewModel>;\r\n\r\n  showProgress: boolean = false;\r\n  currentPackage: InstallPackage;\r\n  remoteInstallerUrl = '';\r\n  ready = false;\r\n  settings: InstallSettings;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: FileUploadDialogData,\r\n    private dialogRef: MatDialogRef<FileUploadDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private installSettingsService: AppInstallSettingsService,\r\n    private installerService: InstallerService,\r\n    private sanitizer: DomSanitizer,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) { \r\n    super();\r\n\r\n    // copied from 2sxc-ui app/installer\r\n    this.subscription.add(\r\n      this.installSettingsService.settings$.subscribe(settings => {\r\n        this.settings = settings;\r\n        this.remoteInstallerUrl = <string>this.sanitizer.bypassSecurityTrustResourceUrl(settings.remoteUrl);\r\n        this.ready = true;\r\n      })\r\n    );\r\n  }\r\n\r\n  private alreadyProcessing = false;\r\n  // copied from 2sxc-ui app/installer\r\n  // Initial Observable to monitor messages\r\n  private messages$ = fromEvent(window, 'message').pipe(\r\n    // Ensure only one installation is processed.\r\n    filter(() => !this.alreadyProcessing),\r\n    filter((evt: MessageEvent) => evt.origin === \"https://2sxc.org\"),\r\n    // Get data from event.\r\n    map((evt: MessageEvent) => {\r\n      try {\r\n        return JSON.parse(evt.data) as CrossWindowMessage;\r\n      } catch (e) {\r\n        console.error('error procesing message. Message was ' + evt.data, e);\r\n        return void 0;\r\n      }\r\n    }),\r\n    // Check if data is valid and the moduleID matches\r\n    filter(data => data && Number(data.moduleId) === this.context.moduleId),\r\n  );\r\n\r\n  ngOnInit(): void {\r\n    this.subscription.add(\r\n      this.files$.subscribe(() => {\r\n        if (this.result$.value !== undefined) {\r\n          this.result$.next(undefined);\r\n        }\r\n      }),\r\n    );\r\n\r\n    if (this.dialogData.files != null) {\r\n      this.filesDropped(this.dialogData.files);\r\n    }\r\n\r\n    this.viewModel$ = combineLatest([\r\n      this.uploading$, this.files$, this.result$, this.showAppCatalog$,\r\n    ]).pipe(map(([uploading, files, result, showAppCatalog]) => ({ uploading, files, result, showAppCatalog })));\r\n\r\n    // copied from 2sxc-ui\r\n    this.installSettingsService.loadGettingStarted(false);//this.isContentApp -> from @Input on 2sxc-ui\r\n\r\n    // copied from 2sxc-ui app/installer\r\n    this.subscription.add(this.messages$.pipe(\r\n      // Verify it's for this action\r\n      filter(data => data.action === 'specs'),\r\n      // Send message to iframe\r\n      tap(() => {\r\n        const winFrame = this.installerWindow.nativeElement as HTMLIFrameElement;\r\n        const specsMsg: SpecsForInstaller = {\r\n          action: 'specs',\r\n          data: {\r\n            //currently not used\r\n            installedApps: this.settings.installedApps,//.map(app => ((app as InstalledApp).guid)),\r\n            //currently used to forbid already installed apps\r\n            rules: this.settings.installedApps.map(app => ({ target: 'guid', appGuid: app.guid, mode: 'f', url: '' })),//this.settings.rules,\r\n          },\r\n        };\r\n        const specsJson = JSON.stringify(specsMsg);\r\n        winFrame.contentWindow.postMessage(specsJson, '*');\r\n        console.log('debug: just sent specs message:' + specsJson, specsMsg, winFrame);\r\n      }),\r\n    ).subscribe());\r\n\r\n    // copied from 2sxc-ui app/installer\r\n    // Subscription to listen to 'install' messages\r\n    this.subscription.add(this.messages$.pipe(\r\n      filter(data => data.action === 'install'),\r\n      // Get packages from data.\r\n      map(data => Object.values(data.packages)),\r\n      // Show confirm dialog.\r\n      filter(packages => {\r\n        const packagesDisplayNames = packages\r\n          .reduce((t, c) => `${t} - ${c.displayName}\\n`, '');\r\n\r\n        const msg = `Do you want to install these packages?\r\n\r\n${packagesDisplayNames}\r\nThis takes about 10 seconds per package. Don't reload the page while it's installing.`;\r\n        return confirm(msg);\r\n      }),\r\n      // Install the packages one at a time\r\n      switchMap(packages => {\r\n        this.alreadyProcessing = true;\r\n        this.showProgress = true;\r\n        this.changeDetectorRef.detectChanges(); //without this spinner is not shown\r\n        return this.installerService.installPackages(packages, p => this.currentPackage = p);\r\n      }),\r\n      tap(() => {\r\n        this.showProgress = false;\r\n        this.changeDetectorRef.detectChanges(); //without this spinner is not removed (though window reload will remove it anyway) so maybe unnecessary\r\n        alert('Installation complete 👍');\r\n        window.top.location.reload();\r\n      }),\r\n      catchError(error => {\r\n        console.error('Error: ', error);\r\n        this.showProgress = false;\r\n        this.alreadyProcessing = false;\r\n        this.changeDetectorRef.detectChanges(); //without this spinner is not removed\r\n        const errorMsg = `An error occurred: Package ${this.currentPackage.displayName}\r\n\r\n${error.error?.Message ?? error.error?.message ?? ''}\r\n\r\n${error.message}\r\n\r\nPlease try again later or check how to manually install content-templates: https://azing.org/2sxc/r/0O4OymoA`;\r\n        alert(errorMsg);\r\n        return of(error);\r\n      }),\r\n    ).subscribe());\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.uploading$.complete();\r\n    this.files$.complete();\r\n    this.result$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(refresh?: boolean): void {\r\n    this.dialogRef.close(refresh);\r\n  }\r\n\r\n  filesDropped(files: File[]): void {\r\n    this.setFiles(files);\r\n    this.upload();\r\n  }\r\n\r\n  filesChanged(event: Event): void {\r\n    const fileList = (event.target as HTMLInputElement).files;\r\n    const files = Array.from(fileList);\r\n    this.setFiles(files);\r\n  }\r\n\r\n  upload(): void {\r\n    this.uploading$.next(true);\r\n    this.subscription.add(\r\n      this.dialogData.upload$(this.files$.value).pipe(take(1)).subscribe({\r\n        next: (result) => {\r\n          this.uploading$.next(false);\r\n          this.result$.next(result);\r\n        },\r\n        error: () => {\r\n          this.uploading$.next(false);\r\n          this.result$.next(undefined);\r\n          this.snackBar.open('Upload failed. Please check console for more information', undefined, { duration: 3000 });\r\n        },\r\n      }),\r\n    );\r\n  }\r\n\r\n  showAppCatalog(): void { \r\n    this.showAppCatalog$.next(!this.showAppCatalog$.value);\r\n  }\r\n\r\n  private setFiles(files: File[]): void {\r\n    if (!this.dialogData.multiple) {\r\n      files = files.slice(0, 1);\r\n    }\r\n    this.files$.next(files);\r\n  }\r\n}\r\n\r\ninterface FileUploadDialogViewModel {\r\n  uploading: boolean;\r\n  files: File[];\r\n  result: FileUploadResult;\r\n  showAppCatalog: boolean;\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nexport interface FileUploadDialogData {\r\n  title?: string;\r\n  description?: string;\r\n  allowedFileTypes?: string;\r\n  files?: File[];\r\n  multiple?: boolean;\r\n  upload$?(files: File[]): Observable<FileUploadResult>;\r\n}\r\n\r\nexport interface FileUploadResult {\r\n  Messages: FileUploadResultMessage[];\r\n  Success: boolean;\r\n}\r\n\r\nexport interface FileUploadResultMessage {\r\n  MessageType: FileUploadMessageType;\r\n  Text: string;\r\n}\r\n\r\nexport const FileUploadMessageTypes = {\r\n  Warning: 0,\r\n  Success: 1,\r\n  Error: 2,\r\n} as const;\r\n\r\nexport type FileUploadMessageType = typeof FileUploadMessageTypes[keyof typeof FileUploadMessageTypes];\r\n\r\nexport const UploadTypes = {\r\n  App: 0,\r\n  AppPart: 1,\r\n  ContentType: 2,\r\n  ContentItem: 3,\r\n  Query: 4,\r\n  View: 5,\r\n} as const;\r\n\r\nexport type UploadTypes = typeof UploadTypes[keyof typeof UploadTypes];\r\n","import { Directive, ElementRef, EventEmitter, HostListener, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { BaseSubsinkComponent } from '../components/base-subsink-component/base-subsink.component';\r\n\r\n@Directive({ selector: '[appDragAndDrop]' })\r\nexport class DragAndDropDirective extends BaseSubsinkComponent implements OnInit, OnDestroy {\r\n  @Input() markStyle: 'outline' | 'fill' | 'shadow' = 'outline';\r\n  /** Comma separated file types, e.g. 'txt,doc,docx' */\r\n  @Input() allowedFileTypes = '';\r\n  @Output() private filesDropped = new EventEmitter<File[]>();\r\n\r\n  private element: HTMLElement;\r\n  private dropAreaClass = 'eav-droparea';\r\n  private markStyleClass: string;\r\n  private dragClass = 'eav-dragover';\r\n  private timeouts: number[] = [];\r\n\r\n  constructor(elementRef: ElementRef, private zone: NgZone, private snackBar: MatSnackBar) {\r\n    super();\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.markStyleClass = `eav-droparea-${this.markStyle}`;\r\n    this.element.classList.add(this.dropAreaClass, this.markStyleClass);\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscription.add(\r\n        fromEvent<DragEvent>(this.element, 'dragover').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.clearTimeouts();\r\n          this.element.classList.add(this.dragClass);\r\n        })\r\n      );\r\n      this.subscription.add(\r\n        fromEvent<DragEvent>(this.element, 'dragleave').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.timeouts.push(\r\n            window.setTimeout(() => { this.element.classList.remove(this.dragClass); }, 50)\r\n          );\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dropAreaClass, this.markStyleClass, this.dragClass);\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(event: DragEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dragClass);\r\n    const fileList = event.dataTransfer.files;\r\n    let files = Array.from(fileList);\r\n    files = this.filterTypes(files, this.allowedFileTypes);\r\n    if (files.length > 0) {\r\n      this.filesDropped.emit(files);\r\n    }\r\n  }\r\n\r\n  private clearTimeouts() {\r\n    for (const timeout of this.timeouts) {\r\n      clearTimeout(timeout);\r\n    }\r\n    this.timeouts = [];\r\n  }\r\n\r\n  private filterTypes(files: File[], allowedFileTypes: string) {\r\n    if (allowedFileTypes === '') { return files; }\r\n\r\n    const allowedTypes = allowedFileTypes.split(',').map(type => type.toLocaleLowerCase());\r\n    const filtered = files.filter(file => {\r\n      const extIndex = file.name.lastIndexOf('.');\r\n      if (extIndex <= 0) { return false; }\r\n      const ext = file.name.substring(extIndex + 1).toLocaleLowerCase();\r\n      const allowed = allowedTypes.includes(ext);\r\n      return allowed;\r\n    });\r\n\r\n    if (files.length !== filtered.length) {\r\n      const allowedTypesString = this.allowedFileTypes.replace(/\\,/g, ', ');\r\n      const message = filtered.length\r\n        ? 'Some files were filtered out. This drop location only accepts file types: ' + allowedTypesString\r\n        : 'This drop location only accepts file types: ' + allowedTypesString;\r\n      this.snackBar.open(message, null, { duration: 5000 });\r\n    }\r\n    return filtered;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeHtml' })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}