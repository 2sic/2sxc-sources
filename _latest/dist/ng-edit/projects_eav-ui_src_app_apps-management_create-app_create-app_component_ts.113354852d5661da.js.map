{"version":3,"file":"projects_eav-ui_src_app_apps-management_create-app_create-app_component_ts.113354852d5661da.js","mappings":"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","names":["ServiceBase","constructor","this","subscriptions","Subscription","ngOnDestroy","destroy","unsubscribe","static","__ngFactoryType__","_angular_core__WEBPACK_IMPORTED_MODULE_1__","jDH","factory","ɵfac","AppInstallSettingsService","http","installSettingsSubject","Subject","settings$","asObservable","pipe","map","startWith","subscribe","loadGettingStarted","isContentApp","get","json","next","i0","i1","_angular_core__WEBPACK_IMPORTED_MODULE_3__","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","fromEvent","target","eventName","options","resultSelector","isFunction","undefined","mapOneOrManyArgs","add","remove","isEventTarget","addEventListener","removeEventListener","methodName","handler","isNodeStyleEventEmitter","addListener","removeListener","toCommonHandlerRegistry","isJQueryStyleEventEmitter","on","off","isArrayLike","mergeMap","subTarget","innerFrom","TypeError","Observable","subscriber","args","length","ExtendedFabSpeedDialActionDirective","elementRef","disabled","input","ngOnChanges","changes","nativeElement","toggleAttribute","FsC","selectors","inputs","features","SaveCloseButtonBase","label","icon","ngClass","action","output","isDisabled","onClick","event","emit","outputs","ExtendedFabSpeedDialTriggerContentDirective","templateRef","_angular_core__WEBPACK_IMPORTED_MODULE_0__","ExtendedFabSpeedDialActionsContentDirective","isEscape","key","isCtrlS","ctrlKey","metaKey","isCtrlEnter","BaseComponent","VBU","decls","vars","template","rf","ctx","encapsulation","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","FieldHintComponent","isError","isShort","toggleIsShort","ngContentSelectors","_c0","consts","_r1","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c1","tmp_2_0","MatFormFieldModule","NgClass","NgTemplateOutlet","styles","logSpecs","doOnDialogClosed","DialogRoutingService","router","route","super","log","classLog","snapshot","url","urlSegments","split","getParam","paramMap","getParams","keys","reduce","acc","getQueryParam","queryParamMap","getQueryParams","state","getCurrentNavigation","extras","callback","l","fnIf","childDialogClosed$","data","a","end","doOnDialogClosedWithData","#childDialogClosedWithData","urlSubRoute","params","tree","createUrlTree","relativeTo","serializeUrl","navPath","navigate","navRelative","commands","events","filter","NavigationEnd","firstChild","pairwise","hadChildBefore","hasChildNow","tap","fn","snapShot","prev","curr","_angular_core__WEBPACK_IMPORTED_MODULE_8__","ExtendedFabSpeedDialTriggerDirective","webApiAppRootApp","AppsListService","HttpServiceBaseSignal","getAllLive","refresh","httpResource","apiUrl","zoneId","getInheritable","getPendingApps","create","name","inheritAppId","templateId","post","createTemplate","newName","encodedName","encodeURIComponent","installPendingApps","pendingApps","delete","appId","toString","flushCache","_this","_asyncToGenerator","getStatusPromise","_angular_core__WEBPACK_IMPORTED_MODULE_4__","appNamePattern","ctx_r0","appNameError","CreateAppComponent_Conditional_16_Conditional_0_Template","CreateAppComponent_Conditional_16_Conditional_1_Template","form","controls","errors","required","pattern","_r2","switchToImportApp","remoteInstallerUrl","CreateAppComponent_Conditional_26_Conditional_0_Template","ready","CreateAppComponent","#appsListService","#installSettingsService","#dialogRouter","dialog","snackBar","sanitizer","hostClass","loading","signal","showAppCatalog","alreadyProcessing","canSave","computed","canCreate","transient","inject","Router","packageUrl","messages$","window","evt","origin","x","JSON","parse","set","packages","buildForm","updateCanCreate","valueChanges","settings","remoteUrl","includes","bypassSecurityTrustResourceUrl","effect","ngOnInit","#watchKeyboardShortcuts","createAndClose","createObservable","disable","open","duration","appTemplateId","Number","value","trim","replace","error","handleCreateError","handleCreateSuccess","enable","closeDialog","close","UntypedFormGroup","UntypedFormControl","Validators","onTemplateChange","segments","Boolean","splice","setTimeout","join","appTemplateIdValue","keydownEvents","preventDefault","i2","i3","debug_node_JnOYh9kg","viewQuery","CreateAppComponent_Conditional_16_Template","$event","CreateAppComponent_Conditional_25_Template","CreateAppComponent_Conditional_26_Template","touched","RouterOutlet","FormsModule","i4","ReactiveFormsModule","i5","MatInputModule","i6","MatSelectModule","MatOptionModule","MatDialogActions","MatButtonModule","i7","MatRadioModule","i8","MatIconModule","i9","SaveCloseButtonFabComponent","ExtendedFabSpeedDialComponent","open$","BehaviorSubject","ngAfterContentInit","combineLatest","distinctUntilChanged","actionButtons","forEach","btn","i","all","max","Math","min","step","transitionDuration","style","complete","setOpen","pointerType","_angular_core__WEBPACK_IMPORTED_MODULE_6__","contentQueries","dirIndex","ElementRef","trigger","actions","ctx_r1","SaveCloseButtonFabComponent_ng_template_1_Template","MatRippleModule","TranslateModule","TippyDirective"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/services/service-base.ts","./projects/eav-ui/src/app/shared/services/getting-started.service.ts","./node_modules/rxjs/dist/esm/internal/observable/fromEvent.js","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial-action.directive.ts","./projects/eav-ui/src/app/shared/modules/save-close-button/save-close-button-base.directive.ts","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial-trigger-content.directive.ts","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial-actions-content.directive.ts","./projects/eav-ui/src/app/edit/dialog/main/keyboard-shortcuts.ts","./projects/eav-ui/src/app/shared/components/base.component.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial-trigger.directive.ts","./projects/eav-ui/src/app/apps-management/services/apps-list.service.ts","./projects/eav-ui/src/app/apps-management/constants/app.patterns.ts","./projects/eav-ui/src/app/apps-management/create-app/create-app.component.html","./projects/eav-ui/src/app/apps-management/create-app/create-app.component.ts","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial.component.ts","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial.component.html","./projects/eav-ui/src/app/shared/modules/save-close-button-fab/save-close-button-fab.component.html","./projects/eav-ui/src/app/shared/modules/save-close-button-fab/save-close-button-fab.component.ts"],"sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","\r\nimport { startWith, map, tap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { InstallSettings } from '../models/installer-models';\r\n\r\n// copied from 2sxc-ui app/installer\r\n@Injectable()\r\nexport class AppInstallSettingsService {\r\n\r\n  private installSettingsSubject: Subject<InstallSettings> = new Subject<InstallSettings>();\r\n  settings$: Observable<InstallSettings> = this.installSettingsSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n    const ready$ = this.settings$.pipe(\r\n      map(() => true),\r\n      startWith(false));\r\n\r\n    ready$.subscribe();\r\n  }\r\n\r\n  public loadGettingStarted(isContentApp: boolean): void {\r\n    this.http.get<InstallSettings>(`sys/install/InstallSettings?isContentApp=${isContentApp}`)\r\n      .subscribe(json => this.installSettingsSubject.next(json));\r\n  }\r\n}\r\n","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'];\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'];\nconst jqueryMethods = ['on', 'off'];\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));\n    }\n    const [add, remove] = isEventTarget(target)\n        ? eventTargetMethods.map((methodName) => (handler) => target[methodName](eventName, handler, options))\n        :\n            isNodeStyleEventEmitter(target)\n                ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n                : isJQueryStyleEventEmitter(target)\n                    ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n                    : [];\n    if (!add) {\n        if (isArrayLike(target)) {\n            return mergeMap((subTarget) => fromEvent(subTarget, eventName, options))(innerFrom(target));\n        }\n    }\n    if (!add) {\n        throw new TypeError('Invalid event target');\n    }\n    return new Observable((subscriber) => {\n        const handler = (...args) => subscriber.next(1 < args.length ? args : args[0]);\n        add(handler);\n        return () => remove(handler);\n    });\n}\nfunction toCommonHandlerRegistry(target, eventName) {\n    return (methodName) => (handler) => target[methodName](eventName, handler);\n}\nfunction isNodeStyleEventEmitter(target) {\n    return isFunction(target.addListener) && isFunction(target.removeListener);\n}\nfunction isJQueryStyleEventEmitter(target) {\n    return isFunction(target.on) && isFunction(target.off);\n}\nfunction isEventTarget(target) {\n    return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","import { Directive, ElementRef, input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n// tslint:disable-next-line:directive-selector\r\n@Directive({\r\n  selector: '[extended-fab-speed-dial-action]',\r\n})\r\nexport class ExtendedFabSpeedDialActionDirective implements OnChanges {\r\n  disabled = input<boolean>(false);\r\n\r\n  constructor(private elementRef: ElementRef<HTMLElement>) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.disabled != null) {\r\n      this.elementRef.nativeElement.toggleAttribute('disabled', this.disabled());\r\n    }\r\n  }\r\n}\r\n","import { Directive, input, output } from '@angular/core';\r\n\r\n// 2pp: needs to be a directive in order to make input, output functions work\r\n@Directive()\r\nexport abstract class SaveCloseButtonBase {\r\n  /** Button label, can be a translation key or plain text */\r\n  label = input<string>('Form.Buttons.SaveAndClose');\r\n\r\n  /** Material icon name to show */\r\n  icon = input<string>('done');\r\n\r\n  /** Classes to apply to the button */\r\n  ngClass = input<string>('');\r\n\r\n  /** If true, disables the button. Can also be a function returning boolean */\r\n  disabled = input<boolean | (() => boolean)>(false);\r\n\r\n  /** Emits when the button is clicked */\r\n  action = output<Event>();\r\n\r\n  /** Derived property for disabled state */\r\n  get isDisabled(): boolean {\r\n    return typeof this.disabled === 'function' ? !!this.disabled() : !!this.disabled;\r\n  }\r\n\r\n  onClick(event: Event) {\r\n    if (!this.isDisabled) {\r\n      this.action.emit(event);\r\n    }\r\n  }\r\n}","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n// tslint:disable-next-line:directive-selector\r\n@Directive({\r\n  selector: '[extendedFabSpeedDialTriggerContent]',\r\n})\r\nexport class ExtendedFabSpeedDialTriggerContentDirective {\r\n  constructor(public templateRef: TemplateRef<unknown>) { }\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n// tslint:disable-next-line:directive-selector\r\n@Directive({\r\n  selector: '[extendedFabSpeedDialActionsContent]',\r\n})\r\nexport class ExtendedFabSpeedDialActionsContentDirective {\r\n  constructor(public templateRef: TemplateRef<unknown>) { }\r\n}\r\n","/**\r\n * Checks if the keyboard event is triggered by the Escape key.\r\n * @param event KeyboardEvent\r\n * @returns boolean\r\n */\r\nexport function isEscape(event: KeyboardEvent): boolean {\r\n  return event.key === 'Escape';\r\n}\r\n\r\n/**\r\n * Checks if the keyboard event is triggered by Ctrl + S (or Cmd + S on Mac).\r\n * @param event KeyboardEvent\r\n * @returns boolean\r\n */\r\nexport function isCtrlS(event: KeyboardEvent): boolean {\r\n  return (event.key === 's' || event.key === 'S') && (event.ctrlKey || event.metaKey);\r\n}\r\n\r\n/**\r\n * Checks if the keyboard event is triggered by Ctrl + Enter (or Cmd + Enter on Mac).\r\n * @param event KeyboardEvent\r\n * @returns boolean\r\n */\r\nexport function isCtrlEnter(event: KeyboardEvent): boolean {\r\n  return event.key === 'Enter' && (event.ctrlKey || event.metaKey);\r\n}","import { Component, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * A newer base component, without Log being created / requested.\r\n * This is so it's easier to inherit than the BaseComponent,\r\n * which would make typed log with specs harder to implement.\r\n * \r\n * Note that as with time, we wish to get away from these, as we don't want to use many observables any more.\r\n */\r\n@Component({\r\n  selector: 'app-base-component',\r\n  template: '',\r\n})\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class BaseComponent implements OnDestroy {\r\n  \r\n  /** Holds all subscriptions to be unsubscribed on destroy */\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError()) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n    selector: 'app-field-hint',\r\n    templateUrl: './field-hint.component.html',\r\n    styleUrls: ['./field-hint.component.scss'],\r\n    imports: [\r\n        MatFormFieldModule,\r\n        NgClass,\r\n        NgTemplateOutlet\r\n    ]\r\n})\r\nexport class FieldHintComponent {\r\n  isError = input<boolean>(false);\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith, tap } from 'rxjs';\r\nimport { classLog } from '../logging';\r\nimport { ServiceBase } from '../services/service-base';\r\n\r\nconst logSpecs = {\r\n  doOnDialogClosed: true,\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase {\r\n\r\n  log = classLog({ DialogRoutingService }, logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) { super(); }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  get urlSegments() { return this.router.url.split('/'); }\r\n\r\n  getParam(key: string): string {\r\n    return this.route.snapshot.paramMap.get(key);\r\n  }\r\n\r\n  getParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const paramMap = this.route.snapshot.paramMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = paramMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  getQueryParam(key: string): string {\r\n    return this.route.snapshot.queryParamMap.get(key);\r\n  }\r\n\r\n  getQueryParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const queryParamMap = this.route.snapshot.queryParamMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = queryParamMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe((data: unknown) => {\r\n        l.a('Dialog closed', { data });\r\n        return callback();\r\n      })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  public doOnDialogClosedWithData(callback: (data: any) => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.#childDialogClosedWithData().subscribe(({ state }) => {\r\n        l.a('Dialog closed', { state });\r\n        callback(state);\r\n      })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Get the URL for a sub-route of the current route.\r\n   */\r\n  public urlSubRoute(params: string) {\r\n    const tree = this.router.createUrlTree([params], { relativeTo: this.route });\r\n    const routeUrl = this.router.serializeUrl(tree);\r\n    return routeUrl;\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  public childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n\r\n  #childDialogClosedWithData() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      tap(event => {\r\n        const l = this.log.fn(\"childDialogClosed$\", {\r\n          event,\r\n          firstChild: this.route.snapshot.firstChild,\r\n          snapShot: this.route.snapshot,\r\n          state: this.router.getCurrentNavigation()?.extras.state,\r\n        });\r\n        l.a('NavigationEnd', { event });\r\n        l.end();\r\n      }),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => ({\r\n        hasChildNow: !!this.route.snapshot.firstChild,\r\n        state: this.router.getCurrentNavigation()?.extras.state,\r\n      })),\r\n      pairwise(),\r\n      filter(([prev, curr]) => prev.hasChildNow && !curr.hasChildNow),\r\n      map(([prev, curr]) => ({\r\n        hadChildBefore: prev.hasChildNow,\r\n        hasChildNow: curr.hasChildNow,\r\n        state: curr.state\r\n      }))\r\n    );\r\n  }\r\n}\r\n","import { Directive, ElementRef, input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n// tslint:disable-next-line:directive-selector\r\n@Directive({\r\n  selector: '[extended-fab-speed-dial-trigger]',\r\n})\r\nexport class ExtendedFabSpeedDialTriggerDirective implements OnChanges {\r\n  disabled = input<boolean>(false);\r\n\r\n  constructor(private elementRef: ElementRef<HTMLElement>) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.disabled != null) {\r\n      this.elementRef.nativeElement.toggleAttribute('disabled', this.disabled());\r\n    }\r\n  }\r\n}\r\n","import { httpResource } from '@angular/common/http';\r\nimport { Injectable, Signal } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpServiceBaseSignal } from '../../shared/services/http-service-base-signal';\r\nimport { App, PendingApp } from '../models/app.model';\r\n\r\nconst webApiAppRootList = 'admin/app/list';\r\nconst webApiAppRootInheritableApps = 'admin/app/InheritableApps';\r\nconst webApiAppRootPendingApps = 'admin/app/GetPendingApps';\r\nconst webApiAppRootApp = 'admin/app/app';\r\nconst webApiAppRootInstallPendingApps = 'admin/app/InstallPendingApps';\r\nconst webApiAppRootFlushcache = 'admin/app/flushcache';\r\n\r\n@Injectable()\r\nexport class AppsListService extends HttpServiceBaseSignal {\r\n\r\n  // clean way to create a new resource every time if refresh change\r\n  getAllLive(refresh: Signal<unknown>) {\r\n    return httpResource<App[]>(() => {\r\n      refresh();\r\n      return ({\r\n        url: this.apiUrl(webApiAppRootList),\r\n        params: { zoneId: this.zoneId }\r\n      });\r\n    });\r\n  }\r\n\r\n  getInheritable() {\r\n    return httpResource<App[]>(() => ({\r\n      url: this.apiUrl(webApiAppRootInheritableApps),\r\n      params: { zoneId: this.zoneId }\r\n    }));\r\n  }\r\n\r\n  getPendingApps() {\r\n    return httpResource<PendingApp[]>(() => ({\r\n      url: this.apiUrl(webApiAppRootPendingApps),\r\n      params: { zoneId: this.zoneId },\r\n    }));\r\n  }\r\n\r\n  create(name: string, inheritAppId?: number, templateId?: number) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRootApp), {}, {\r\n      params: {\r\n        zoneId: this.zoneId,\r\n        name,\r\n        ...(inheritAppId != null && { inheritAppId }),\r\n        ...(templateId != null && { templateId }),\r\n      },\r\n    });\r\n  }\r\n\r\n  createTemplate(url: string, newName: string) {\r\n    const encodedName = encodeURIComponent(newName);\r\n    return <Observable<any>>this.http.post(`sys/install/RemotePackage?packageUrl=${url}&newName=${encodedName}`, {});\r\n  }\r\n\r\n  installPendingApps(pendingApps: PendingApp[]) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRootInstallPendingApps), pendingApps, {\r\n      params: {\r\n        zoneId: this.zoneId,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(appId: number) {\r\n    return this.http.delete<null>(this.apiUrl(webApiAppRootApp), {\r\n      params: { zoneId: this.zoneId, appId: appId.toString() },\r\n    });\r\n  }\r\n\r\n  async flushCache(appId: number): Promise<number> {\r\n    return this.getStatusPromise(webApiAppRootFlushcache, {\r\n      params: { zoneId: this.zoneId, appId: appId.toString() },\r\n    });\r\n  }\r\n\r\n}\r\n","export const appNamePattern = /^[A-Za-z](?:[A-Za-z0-9\\s\\(\\)-]+)*$/;\r\nexport const appNameError = 'Standard letters, numbers, spaces, hyphens and round brackets are allowed. Must start with a letter.';\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Create App</div>\r\n    <button mat-icon-button [disabled]=\"loading()\" tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"eav-dialog-content\">\r\n    <router-outlet></router-outlet>\r\n    <form [formGroup]=\"form\">\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput type=\"text\" formControlName=\"name\" />\r\n      </mat-form-field>\r\n      <app-field-hint> App name will also be used for the folder </app-field-hint>\r\n      @if (form.controls.name.touched) {\r\n        @if (form.controls.name.errors?.required) {\r\n          <app-field-hint [isError]=\"true\"> Required </app-field-hint>\r\n        }\r\n        @if (form.controls.name.errors?.pattern) {\r\n          <app-field-hint [isError]=\"true\">\r\n            {{ appNameError }}\r\n          </app-field-hint>\r\n        }\r\n      }\r\n      <br />\r\n      <mat-radio-group formControlName=\"appTemplateId\" required (change)=\"onTemplateChange($event)\">\r\n        <mat-radio-button [value]=\"1\">Use Template</mat-radio-button>\r\n        <mat-radio-button [value]=\"0\">Completely new / empty App</mat-radio-button>\r\n        <mat-radio-button [value]=\"2\">Use existing App as Template</mat-radio-button>\r\n      </mat-radio-group>\r\n    </form>\r\n\r\n    @if (appTemplateIdValue == 2) {\r\n      <br />\r\n      <span>\r\n        To use an existing App as a template, please switch to the\r\n        <strong> Import App Dialog </strong>\r\n      </span>\r\n      <br />\r\n      <br />\r\n      <button mat-raised-button class=\"eav-action-button\" (click)=\"switchToImportApp()\">Switch to Import App</button>\r\n    }\r\n\r\n    @if (showAppCatalog()) {\r\n      @if (ready()) {\r\n        <iframe #installerWindow class=\"eav-app-catalog-iframe\" [src]=\"remoteInstallerUrl\"></iframe>\r\n      }\r\n    }\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    <app-save-close-button-fab\r\n      [ngClass]=\"!canSave() ? 'disabled' : ''\"\r\n      [disabled]=\"!canSave()\"\r\n      [label]=\"'Form.Buttons.CreateAndClose'\"\r\n      (action)=\"createAndClose()\"\r\n    ></app-save-close-button-fab>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { Component, computed, effect, ElementRef, HostBinding, inject, signal, ViewChild } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Router, RouterOutlet } from '@angular/router';\r\nimport { filter, fromEvent, map, Observable } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { isCtrlEnter } from '../../edit/dialog/main/keyboard-shortcuts';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { CrossWindowMessage, InstallSettings } from '../../shared/models/installer-models';\r\nimport { SaveCloseButtonFabComponent } from '../../shared/modules/save-close-button-fab/save-close-button-fab.component';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { AppInstallSettingsService } from '../../shared/services/getting-started.service';\r\nimport { appNameError, appNamePattern } from '../constants/app.patterns';\r\nimport { AppsListService } from '../services/apps-list.service';\r\n\r\n@Component({\r\n  selector: 'app-create-app',\r\n  templateUrl: './create-app.component.html',\r\n  styleUrls: ['./create-app.component.scss'],\r\n  imports: [\r\n    RouterOutlet,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatDialogActions,\r\n    MatButtonModule,\r\n    FieldHintComponent,\r\n    MatRadioModule,\r\n    MatIconModule,\r\n    SaveCloseButtonFabComponent,\r\n  ]\r\n})\r\nexport class CreateAppComponent {\r\n  // Add a CSS class to the host element for consistent dialog styling\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n  // Reference to the installer iframe element (for cross-window messaging)\r\n  @ViewChild('installerWindow') installerWindow: ElementRef;\r\n\r\n  // Reactive form group for app creation fields\r\n  form: UntypedFormGroup;\r\n\r\n  // Signal to control loading spinner and disable UI during app creation\r\n  loading = signal<boolean>(false);\r\n  // Error message for invalid app names, used in template validation\r\n  appNameError = appNameError;\r\n  // URL for the remote app catalog iframe, sanitized for Angular\r\n  remoteInstallerUrl = '';\r\n  // Signal to indicate when the iframe is ready to be shown\r\n  ready = signal(false);\r\n  // Signal to toggle visibility of the app catalog iframe\r\n  showAppCatalog = signal(true);\r\n  // Prevents double-processing of installations via window messages\r\n  private alreadyProcessing = false;\r\n  protected canSave = computed(() => this.canCreate() && !this.loading());\r\n\r\n  // App and settings service instances (using custom transient DI)\r\n  #appsListService = transient(AppsListService);\r\n  #installSettingsService = transient(AppInstallSettingsService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  private router = inject(Router);\r\n\r\n  // Holds the URL of the package selected in the app catalog (reactive signal)\r\n  private packageUrl = signal<string>(null);\r\n\r\n  // Holds installer settings loaded from service\r\n  settings: InstallSettings;\r\n\r\n  // Signal controlling Create button state (enabled/disabled)\r\n  canCreate = signal<boolean>(false);\r\n\r\n  // Reactive observable for cross-window installer messages\r\n  private messages$ = fromEvent(window, 'message').pipe(\r\n    // Ignore messages if already processing an installation\r\n    filter(() => !this.alreadyProcessing),\r\n    // Only accept messages from the trusted installer domain\r\n    filter((evt: MessageEvent) => evt.origin === \"https://2sxc.org\"),\r\n    // Parse the incoming message and update packageUrl signal\r\n    map((evt: MessageEvent) => {\r\n      const x = JSON.parse(evt.data) as CrossWindowMessage;\r\n      this.packageUrl.set(x.packages?.[0]?.url || null);\r\n    }),\r\n  );\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<CreateAppComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private sanitizer: DomSanitizer,\r\n  ) {\r\n    // Initialize the reactive form with validation\r\n    this.form = this.buildForm();\r\n\r\n    // Set Create button state initially\r\n    this.updateCanCreate();\r\n\r\n    // Re-calculate Create button state on any form value change\r\n    this.form.valueChanges.subscribe(() => this.updateCanCreate());\r\n\r\n    // Load installer settings and set up the iframe URL for the app catalog\r\n    this.#installSettingsService.loadGettingStarted(false);\r\n    this.#installSettingsService.settings$.subscribe(settings => {\r\n      let url = settings.remoteUrl;\r\n      // Add query param to ensure template mode in the installer\r\n      url += (url.includes('?') ? '&' : '?') + 'isTemplate=true';\r\n\r\n      this.remoteInstallerUrl = <string>this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n      this.ready.set(true);\r\n    });\r\n\r\n    // React to changes in packageUrl and update Create button accordingly\r\n    effect(() => {\r\n      this.packageUrl();\r\n      this.updateCanCreate();\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.#watchKeyboardShortcuts();\r\n\r\n    // Ensure installer settings are loaded (redundant if already done in constructor)\r\n    this.#installSettingsService.loadGettingStarted(false);\r\n\r\n    // Listen for messages from the app catalog iframe (e.g., package selection)\r\n    this.messages$.subscribe();\r\n  }\r\n\r\n  /**\r\n   * Handles the app creation logic. Disables the form and shows feedback messages.\r\n   * Decides whether to create a raw app or use a selected template.\r\n   */\r\n  createAndClose(): void {\r\n    if (!this.canCreate()) return;\r\n    this.form.disable();\r\n    this.loading.set(true);\r\n    this.snackBar.open('Creating app...', undefined, { duration: 2000 });\r\n\r\n    let createObservable: Observable<any>;\r\n    const appTemplateId = Number(this.form.controls.appTemplateId.value);\r\n    const name = this.form.controls.name.value?.trim().replace(/\\s\\s+/g, ' ');\r\n\r\n    // Use the selected template if applicable, otherwise create a raw app\r\n    if (appTemplateId === 1 && this.packageUrl() && this.packageUrl().length > 0) {\r\n      createObservable = this.#appsListService.createTemplate(this.packageUrl(), name);\r\n    } else if (appTemplateId === 0) {\r\n      createObservable = this.#appsListService.create(name, null, 0);\r\n    }\r\n\r\n    // Subscribe to creation result and show success/error feedback\r\n    createObservable.subscribe({\r\n      error: () => this.handleCreateError(),\r\n      next: () => this.handleCreateSuccess()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles errors that occur during app creation.\r\n   * Re-enables the form and displays a failure message.\r\n   */\r\n  private handleCreateError(): void {\r\n    this.form.enable();\r\n    this.loading.set(false);\r\n    this.snackBar.open('Failed to create app. Please check console for more information', undefined, { duration: 3000 });\r\n  }\r\n\r\n  /**\r\n   * Handles successful app creation by enabling the form,\r\n   * showing a success message, and closing the dialog.\r\n   */\r\n  private handleCreateSuccess(): void {\r\n    this.form.enable();\r\n    this.loading.set(false);\r\n    this.snackBar.open('Created app', undefined, { duration: 2000 });\r\n    this.closeDialog();\r\n  }\r\n\r\n  /**\r\n   * Closes the create app dialog.\r\n   */\r\n  closeDialog(): void {\r\n    this.dialog.close();\r\n  }\r\n\r\n  /**\r\n   * Builds and returns the reactive form group with validation.\r\n   */\r\n  private buildForm(): UntypedFormGroup {\r\n    return new UntypedFormGroup({\r\n      name: new UntypedFormControl(null, [Validators.required, Validators.pattern(appNamePattern)]),\r\n      appTemplateId: new UntypedFormControl(1, Validators.required),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Updates the canCreate signal based on form and packageUrl state.\r\n   * Enables the Create button only if conditions are met.\r\n   */\r\n  private updateCanCreate(): void {\r\n    const name = this.form.controls.name.value?.trim();\r\n    const appTemplateId = Number(this.form.controls.appTemplateId.value);\r\n    const packageUrl = this.packageUrl();\r\n\r\n    // Enable Create if: \r\n    // - name is present and appTemplateId is 0, OR\r\n    // - name, appTemplateId=1, and packageUrl are all present\r\n    const valid =\r\n      !!name &&\r\n      (\r\n        appTemplateId === 0 ||\r\n        (appTemplateId === 1 && !!packageUrl)\r\n      );\r\n    this.canCreate.set(valid);\r\n  }\r\n\r\n  /**\r\n   * Handles changes to the template selection radio group.\r\n   * Shows or hides the app catalog iframe and updates Create button state.\r\n   */\r\n  onTemplateChange(event: any) {\r\n    if (event.value == 1)\r\n      this.showAppCatalog.set(true);\r\n    else\r\n      this.showAppCatalog.set(false);\r\n\r\n    this.updateCanCreate();\r\n  }\r\n\r\n  switchToImportApp(): void {\r\n    const segments = this.router.url.split('/').filter(Boolean);\r\n    segments.splice(-1, 1, 'import'); // Change the last segment to 'import'\r\n    this.dialog.close();\r\n    // Timeout to ensure dialog closes before navigation \r\n    // This is necessary to avoid issues with Angular's navigation lifecycle\r\n    // when trying to open a new dialog immediately after closing the current one.\r\n    // This is a workaround for the issue where Angular tries to open a new dialog while the last one is still closing.\r\n    setTimeout(() => this.#dialogRouter.navPath('/' + segments.join('/')), 100);\r\n  }\r\n\r\n  get appTemplateIdValue() { return this.form.controls.appTemplateId.value; }\r\n\r\n  #watchKeyboardShortcuts(): void {\r\n    this.dialog.keydownEvents().subscribe(event => {\r\n      if (isCtrlEnter(event) && this.canSave()) {\r\n        event.preventDefault();\r\n        this.createAndClose();\r\n      }\r\n    });\r\n  }\r\n}","// tslint:disable-next-line:max-line-length\r\nimport { NgTemplateOutlet } from '@angular/common';\r\nimport { AfterContentInit, Component, ContentChild, ContentChildren, ElementRef, input, OnDestroy, QueryList, ViewEncapsulation } from '@angular/core';\r\nimport { BehaviorSubject, combineLatest, distinctUntilChanged, startWith } from 'rxjs';\r\nimport { BaseComponent } from '../../components/base.component';\r\nimport { ExtendedFabSpeedDialActionDirective } from './extended-fab-speed-dial-action.directive';\r\nimport { ExtendedFabSpeedDialActionsContentDirective } from './extended-fab-speed-dial-actions-content.directive';\r\nimport { ExtendedFabSpeedDialTriggerContentDirective } from './extended-fab-speed-dial-trigger-content.directive';\r\n\r\n/**\r\n * Special Speed-Dial kind of FAB which opens more menu items on hover.\r\n *\r\n * IMPORTANT: to work it needs ca. 4 more directives.\r\n * So never import this component directly, but instead import the ExtendedFabSpeedDialImports.\r\n */\r\n@Component({\r\n    // tslint:disable-next-line:component-selector\r\n    selector: 'extended-fab-speed-dial',\r\n    templateUrl: './extended-fab-speed-dial.component.html',\r\n    styleUrls: ['./extended-fab-speed-dial.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    imports: [\r\n        NgTemplateOutlet\r\n    ]\r\n})\r\nexport class ExtendedFabSpeedDialComponent extends BaseComponent implements AfterContentInit, OnDestroy {\r\n  @ContentChild(ExtendedFabSpeedDialTriggerContentDirective) trigger: ExtendedFabSpeedDialTriggerContentDirective;\r\n  @ContentChild(ExtendedFabSpeedDialActionsContentDirective) actions: ExtendedFabSpeedDialActionsContentDirective;\r\n  @ContentChildren(ExtendedFabSpeedDialActionDirective, { read: ElementRef }) actionButtons: QueryList<ElementRef<HTMLButtonElement>>;\r\n\r\n  disabled = input<boolean>(false);\r\n\r\n  open$ = new BehaviorSubject(false);\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.subscriptions.add(\r\n      combineLatest([\r\n        this.open$.pipe(distinctUntilChanged()),\r\n        this.actionButtons.changes.pipe(startWith(undefined)),\r\n      ]).subscribe(([open]) => {\r\n        this.actionButtons.forEach((btn, i, all) => {\r\n          const min = 0.3;\r\n          const max = Math.min(min + (all.length - 1) * 0.05, 0.6);\r\n          const step = (max - min) / (all.length - 1);\r\n          const transitionDuration = `${open ? min + step * i : max - step * i}s`;\r\n          if (btn.nativeElement.style.transitionDuration !== transitionDuration) {\r\n            btn.nativeElement.style.transitionDuration = transitionDuration;\r\n          }\r\n        });\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.open$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  setOpen(event: PointerEvent, open: boolean): void {\r\n    if (event.pointerType === 'touch') return;\r\n    this.open$.next(open);\r\n  }\r\n}\r\n","<div class=\"extended-fab-speed-dial\" [attr.disabled]=\"disabled() || null\" (pointerenter)=\"setOpen($event, true)\"\r\n  (pointerleave)=\"setOpen($event, false)\">\r\n  <div class=\"extended-fab-speed-dial-trigger\">\r\n    <ng-container [ngTemplateOutlet]=\"trigger?.templateRef\"></ng-container>\r\n  </div>\r\n  <div class=\"extended-fab-speed-dial-actions\">\r\n    <ng-container [ngTemplateOutlet]=\"actions?.templateRef\"></ng-container>\r\n  </div>\r\n</div>\r\n","<extended-fab-speed-dial>\r\n  <ng-template extendedFabSpeedDialTriggerContent>\r\n    <button\r\n      type=\"button\"\r\n      [tippy]=\"(label() | translate) + ' (' + ('Form.Buttons.ActionAndCloseShortcut' | translate) + ')'\"\r\n      tippyShowDelay=\"500\"\r\n      [ngClass]=\"ngClass()\"\r\n      [disabled]=\"isDisabled\"\r\n      (click)=\"onClick($event)\"\r\n      extended-fab-speed-dial-trigger\r\n      matRipple\r\n    >\r\n      <span>{{ label() | translate }}</span>\r\n      <span class=\"keybinding-hint\">\r\n        <kbd>⌃</kbd><kbd>⏎</kbd>\r\n      </span>\r\n      <mat-icon>{{ icon() }}</mat-icon>\r\n    </button>\r\n  </ng-template>\r\n</extended-fab-speed-dial>\r\n","import { NgClass } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\nimport { ExtendedFabSpeedDialImports } from '../extended-fab-speed-dial/extended-fab-speed-dial.imports';\r\nimport { SaveCloseButtonBase } from '../save-close-button/save-close-button-base.directive';\r\n\r\n@Component({\r\n  selector: 'app-save-close-button-fab',\r\n  imports: [\r\n    NgClass,\r\n    MatIconModule,\r\n    ...ExtendedFabSpeedDialImports,\r\n    MatRippleModule,\r\n    TranslateModule,\r\n    TippyDirective,\r\n  ],\r\n  templateUrl: './save-close-button-fab.component.html',\r\n  styleUrls: ['../save-close-button/save-close-button.component.scss'],\r\n})\r\nexport class SaveCloseButtonFabComponent extends SaveCloseButtonBase {}"],"x_google_ignoreList":[2]}