{"version":3,"file":"projects_eav-ui_src_app_code-editor_code-editor_module_ts-projects_eav-ui_src_app_shared_comp-2b2737.d3ba7523f4740e9d.js","mappings":"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","names":["webApiTypeRoot","ContentTypesService","_class","constructor","http","context","dnnContext","this","apiUrl","name","$2sxc","retrieveContentType","staticName","get","params","appId","toString","contentTypeId","retrieveContentTypes","scope","getScopes","pipe","map","scopes","Object","keys","key","value","save","contentType","post","appid","delete","StaticName","import","files","formData","FormData","file","append","zoneId","createGhost","sourceStaticName","i0","i1","i2","i3","factory","ɵfac","ctx_r0","snackBarData","fileName","codeFile","ctx_r3","edition","CodeAndEditionWarningsComponent_div_2_ng_container_1_Template","CodeAndEditionWarningsComponent_div_2_ng_container_3_Template","ctx_r1","otherEditions","_r6","ctx_r5","openCodeBehind","CodeAndEditionWarningsComponent","snackRef","dismissWithAction","MAT_SNACK_BAR_DATA","selectors","decls","vars","consts","template","rf","ctx","CodeAndEditionWarningsComponent_ng_container_1_Template","CodeAndEditionWarningsComponent_div_2_Template","CodeAndEditionWarningsComponent_button_4_Template","Explorers","Templates","Snippets","SnippetsService","translate","getTooltips","language","getSnippets","view","res","relevant","filterAwayNotNeededSnippetsList","snippets","standardAndInputSnips","extractInputTypeSnippets","sets","initSnippetsWithConfig","standardArray","inputTypeSnippets","list","keyPrefixes","keyPrefixIndex","v","Type","indexOf","newList","itm","setHasPrefix","set","substring","push","inputTypeArray","catalogInputTypeSnippets","inputTypeList","undefined","subset","templateConfiguration","makeTree","Content","assign","Fields","PresentationFields","TypeContent","loadContentType","TypeContentPresentation","HasList","List","TypeList","TypeListPresentation","HasApp","App","Resources","Settings","tree","o","reformatted","label","snip","content","help","links","linksList","getHelpKey","result","instant","addition","linksString","llist","split","l","pair","length","link","trim","url","target","type","prefix","getFields","AppId","subscribe","fields","field","fieldname","valuePlaceholder","Metadata","merged","Notes","toLowerCase","snipDefaults","cloneDeep","attachSnippets","InputType","std","i","obj","val","replace","webApiFieldsAll","filter","DataTypeConstants","Empty","fld","md","All","inputType","genericSnippet","fieldType","typeSnips","concat","more","fieldSnips","g","localizeGenericSnippet","collapse","objName","fieldName","ObjectToArrayPipe","transform","Array","isArray","values","pure","_r13","snippet_r7","$implicit","ctx_r11","toggleMore","ctx_r8","toggledMores","includes","link_r16","CodeSnippetsComponent_div_1_ng_container_8_div_1_ng_container_8_div_1_div_7_div_3_Template","link_r22","CodeSnippetsComponent_div_1_ng_container_8_div_1_ng_container_8_div_1_ng_container_8_div_1_div_6_div_3_Template","more_r19","_r25","ctx_r24","addSnippet","ctx_r26","toggleInfo","CodeSnippetsComponent_div_1_ng_container_8_div_1_ng_container_8_div_1_ng_container_8_div_1_div_6_Template","ctx_r18","toggledInfos","CodeSnippetsComponent_div_1_ng_container_8_div_1_ng_container_8_div_1_ng_container_8_div_1_Template","_r29","ctx_r28","CodeSnippetsComponent_div_1_ng_container_8_div_1_ng_container_8_div_1_mat_icon_4_Template","ctx_r30","CodeSnippetsComponent_div_1_ng_container_8_div_1_ng_container_8_div_1_div_7_Template","CodeSnippetsComponent_div_1_ng_container_8_div_1_ng_container_8_div_1_ng_container_8_Template","ctx_r6","CodeSnippetsComponent_div_1_ng_container_8_div_1_ng_container_8_div_1_Template","folder_r4","_r33","ctx_r32","toggleFolder","CodeSnippetsComponent_div_1_ng_container_8_div_1_ng_container_8_Template","section_r1","toggledFolders","CodeSnippetsComponent_div_1_ng_container_8_div_1_Template","_r37","ctx_r36","toggleSection","CodeSnippetsComponent_div_1_ng_container_8_Template","toggledSections","CodeSnippetsComponent","insertSnippet","EventEmitter","snippet","emit","GeneralHelpers","toggleInArray","inputs","outputs","CodeSnippetsComponent_div_1_Template","calculateTree","templates","parent","paths","Path","last","pathFromRoot","path","existing","find","item","children","depth","isShared","Shared","isFolder","DepthPaddingPipe","sanitizer","padding","bypassSecurityTrustStyle","SortItemsPipe","items","sort","item1","item2","CodeTemplatesComponent_ng_container_2_ng_container_1_Template","_r1","_c0","item_r4","_r11","item_r6","ctx_r9","openTemplate","_c1","ctx_r7","isToggled","CodeTemplatesComponent_ng_template_4_div_1_ng_container_11_ng_container_1_ng_container_1_Template","item1_r15","CodeTemplatesComponent_ng_template_4_div_1_ng_container_11_ng_container_1_Template","_r20","toggleItem","ctx_r21","addFile","CodeTemplatesComponent_ng_template_4_div_1_ng_container_11_Template","_c2","CodeTemplatesComponent_ng_template_4_div_0_Template","CodeTemplatesComponent_ng_template_4_div_1_Template","CodeTemplatesComponent","openView","createTemplate","toggledItemsApp","toggledItemsShared","ngOnChanges","changes","calculateTreeAppShared","f","previousView","previousValue","FileName","IsShared","showFileInTree","shared","folder","toggledItems","features","CodeTemplatesComponent_ng_container_2_Template","CodeTemplatesComponent_ng_template_4_Template","_r3","tab_r6","ctx_r10","viewKey","CodeEditorComponent_div_0_div_11_div_1_mat_icon_2_Template","CodeEditorComponent_div_0_div_11_div_1_mat_icon_6_Template","CodeEditorComponent_div_0_div_11_div_1_mat_spinner_7_Template","ctx_r12","closeEditor","isActive","isModified","isLoading","CodeEditorComponent_div_0_div_11_div_1_Template","vm_r1","tabs","$event","_r16","ngIf","ctx_r14","codeChanged","Code","monacoOptions","editorSnipps","tooltips","_r19","_r21","ctx_r20","toggleExplorer","ctx_r22","ctx_r23","ctx_r25","CodeEditorComponent_div_0_div_11_Template","CodeEditorComponent_div_0_app_monaco_editor_12_Template","CodeEditorComponent_div_0_button_13_Template","theme","activeExplorer","explorerSnipps","activeView","routes","component","CodeEditorComponent","BaseSubsinkComponent","route","snackBar","sourceService","snippetsService","zone","titleService","dialog","viewContainerRef","super","tabSize","fixedOverflowWidgets","init","codeItems","JSON","parse","sessionStorage","getItem","keyItems","keyIsShared","forEach","codeItem","startsWith","urlItems","ngOnInit","templates$","BehaviorSubject","initialViews","EntityId","activeView$","openViews$","viewInfos$","attachListeners","getAll","next","subscription","add","combineLatest","openViews","viewInfos","notLoaded","some","objectsEqual","forkJoin","newViewInfo","view$","share","snippets$","switchMap","tooltips$","Extension","of","results","viewInfos1","selectedIndex","findIndex","savedCode","slice","showCodeAndEditionWarnings","active","defaultTitle","newTitle","getTitle","setTitle","viewModel$","viewInfo","activeViewInfo","ngOnDestroy","complete","explorer","createFileDialogData","global","purpose","open","CreateFileDialogComponent","autoFocus","data","width","afterClosed","create","templateKey","monacoEditorRef","code","selectedViewInfo","oldOpenViews","newOpenViews","oldActiveView","newActiveView","codeToSave","duration","newViewInfos","error","pathAndName","pathSeparator","lastIndexOf","pathWithSlash","fullName","nameCode","endsWith","Edition","snackBarRef","openFromComponent","onAction","containerInstance","snackBarConfig","runOutsideAngular","fromEvent","window","event","preventDefault","returnValue","keyCode","navigator","platform","match","metaKey","ctrlKey","run","i4","i5","i6","i7","viewQuery","MonacoEditorComponent","CodeEditorComponent_div_0_Template","CodeEditorRoutingModule","RouterModule","forChild","translateLoaderFactoryCode","TranslateLoaderWithErrorHandling","sxcVersion","CodeEditorModule","Context","SourceService","TranslateService","imports","SharedComponentsModule","CommonModule","MatDialogModule","MatButtonModule","MatIconModule","MatSnackBarModule","MatRippleModule","MatMenuModule","TranslateModule","buildTranslateConfiguration","MonacoEditorModule","MatProgressSpinnerModule","CreateFileDialogModule","webApiFieldsRoot","webApiFieldsGetShared","ContentTypesFieldsService","typeListRetrieve","getInputTypesList","inputConfigs","config","dataType","Label","description","Description","isDefault","IsDefault","isObsolete","IsObsolete","isRecommended","IsRecommended","obsoleteMessage","ObsoleteMessage","icon","getReservedNames","contentTypeStaticName","getShareableFields","getShareableFieldsFor","attributeId","addInheritedField","targetContentTypeId","sourceContentTypeStaticName","sourceFieldGuid","newName","console","log","inherit","inheritMetadataOf","reOrder","idArray","Id","order","stringify","rename","fieldId","IsTitle","Error","newField","ContentTypeId","Index","SortOrder","updateInputType","id","voidElements","el","toLocaleLowerCase","MonacoInstance","monaco","filename","container","options","globalCache","createGlobalCache","defineThemes","cachedValue","editorInstance","createInstance","completionItemProviders","addSnippets","resizeObserver","createResizeObserver","restoreState","addEvents","destroy","saveState","disconnect","completionItemProvider","dispose","jsTypingsLib","getModel","updateValue","setValue","focus","onValueChange","callback","valueChangedCallback","onFocus","focusedCallback","onBlur","blurredCallback","getContribution","insert","setSnippets","setTooltips","setJsonSchema","jsonSchema","uri","oldJsonDiagnostics","languages","json","jsonDefaults","diagnosticsOptions","exists","schemas","schema","fileMatch","newSchema","newJsonDiagnostics","enableSchemaRequest","setDiagnosticsOptions","setJsonComments","comments","jsonDiagnostics","setJsDiagnostics","javascriptDiagnostics","typescript","javascriptDefaults","getDiagnosticsOptions","setJsTypings","typings","addExtraLib","_2sxc","themesAreDefined","savedStates","editor","defineTheme","base","rules","token","foreground","colors","editorModelUri","Uri","editorModel","createModel","setModel","viewState","saveViewState","savedState","restoreViewState","registerCompletionItemProvider","getLanguageId","triggerCharacters","provideCompletionItems","model","position","suggestions","textUntilPosition","getValueInRange","startLineNumber","lineNumber","startColumn","endLineNumber","endColumn","column","tagStartIndex","codeInTag","quotes","from","c","tagEndIndex","tag","test","kind","CompletionItemKind","Snippet","insertText","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","range","word","getWordUntilPosition","documentation","title","suggestion","registerHoverProvider","provideHover","getWordAtPosition","tooltip","Term","contents","Help","ResizeObserver","layout","observe","onDidChangeContent","newValue","getValue","onDidFocusEditorWidget","onDidBlurEditorWidget","valueChanged","focused","blurred","ngAfterViewInit","require","vs","createEditor","monacoInstance","jsonComments","jsTypings","jsDiagnostics","editorRef","nativeElement","FieldHintComponent_mat_hint_1_ng_container_1_Template","_r2","FieldHintComponent_mat_error_2_ng_container_1_Template","FieldHintComponent","isError","isShort","toggleIsShort","ngContentSelectors","FieldHintComponent_mat_hint_1_Template","FieldHintComponent_mat_error_2_Template","FieldHintComponent_ng_template_3_Template","ToggleDebugDirective","globalConfigService","onClick","shiftKey","altKey","toggleDebugEnabled","getSelection","removeAllRanges","hostBindings","SafeHtmlPipe","html","bypassSecurityTrustHtml","loader","provide","TranslateLoader","useFactory","deps","HttpClient","defaultLanguage","isolate","suffix","getTranslation","lang","catchError","warn"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/code-editor/code-and-edition-warnings/code-and-edition-warnings.component.html","./projects/eav-ui/src/app/code-editor/code-and-edition-warnings/code-and-edition-warnings.component.ts","./projects/eav-ui/src/app/code-editor/code-editor.models.ts","./projects/eav-ui/src/app/code-editor/services/snippets.service.ts","./projects/eav-ui/src/app/code-editor/code-snippets/object-to-array.pipe.ts","./projects/eav-ui/src/app/code-editor/code-snippets/code-snippets.component.html","./projects/eav-ui/src/app/code-editor/code-snippets/code-snippets.component.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.helpers.ts","./projects/eav-ui/src/app/code-editor/code-templates/depth-padding.pipe.ts","./projects/eav-ui/src/app/code-editor/code-templates/order-items.pipe.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.component.html","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.component.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.models.ts","./projects/eav-ui/src/app/code-editor/code-editor.component.html","./projects/eav-ui/src/app/code-editor/code-editor-routing.module.ts","./projects/eav-ui/src/app/code-editor/code-editor.component.ts","./projects/eav-ui/src/app/code-editor/code-editor.module.ts","./projects/eav-ui/src/app/content-type-fields/services/content-types-fields.service.ts","./projects/eav-ui/src/app/monaco-editor/monaco-editor.module.ts","./projects/eav-ui/src/app/shared/typescript-helpers/name-of.ts","./projects/eav-ui/src/app/monaco-editor/monaco-instance.ts","./projects/eav-ui/src/app/monaco-editor/monaco-editor.component.ts","./projects/eav-ui/src/app/monaco-editor/monaco-editor.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/directives/toggle-debug.directive.ts","./projects/eav-ui/src/app/shared/pipes/safe-html.pipe.ts","./projects/eav-ui/src/app/shared/translation/translate-configuration.ts","./projects/eav-ui/src/app/shared/translation/translate-loader-with-error-handling.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\n\r\nexport const webApiTypeRoot = 'admin/type/';\r\n\r\n@Injectable()\r\nexport class ContentTypesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get<ContentType>(this.apiUrl(webApiTypeRoot + 'get'), {\r\n      params: { appId: this.context.appId.toString(), contentTypeId: staticName }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get<ContentType[]>(this.apiUrl(webApiTypeRoot + 'list'), {\r\n      params: { appId: this.context.appId.toString(), scope }\r\n    });\r\n  }\r\n\r\n  getScopes() {\r\n    return this.http.get<Record<string, string>>(this.apiUrl(webApiTypeRoot + 'scopes'), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopes => {\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeRoot + 'save'), contentType, {\r\n      params: { appid: this.context.appId.toString() },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeRoot + 'delete'), {\r\n      params: { appid: this.context.appId.toString(), staticName: contentType.StaticName },\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeRoot + 'import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeRoot + 'addghost'), null, {\r\n      params: { appid: this.context.appId.toString(), sourceStaticName },\r\n    });\r\n  }\r\n}\r\n","<div class=\"messages\">\r\n  <ng-container *ngIf=\"snackBarData.codeFile\">\r\n    <div>\"{{ snackBarData.fileName }}\" also has a code-behind file \"{{ snackBarData.codeFile }}\".</div>\r\n    <br>\r\n  </ng-container>\r\n\r\n  <div *ngIf=\"snackBarData.otherEditions\">\r\n    <ng-container *ngIf=\"snackBarData.edition\">\r\n      You are editing \"{{ snackBarData.edition }}\" edition.\r\n    </ng-container>\r\n    There are {{ snackBarData.otherEditions }} other editions of \"{{ snackBarData.fileName }}\".\r\n    <ng-container *ngIf=\"!snackBarData.edition\">\r\n      You may be editing an edition which is not the one you see.\r\n    </ng-container>\r\n    See <a href=\"https://go.2sxc.org/polymorphism\" target=\"_blank\">docs</a>.\r\n  </div>\r\n</div>\r\n\r\n<div class=\"actions\">\r\n  <button mat-button color=\"primary\" *ngIf=\"snackBarData.codeFile\" (click)=\"openCodeBehind()\">\r\n    Open code-behind file\r\n  </button>\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\nimport { CodeAndEditionWarningsSnackBarData } from './code-and-edition-warnings.models';\r\n\r\n@Component({\r\n  selector: 'app-code-and-edition-warnings',\r\n  templateUrl: './code-and-edition-warnings.component.html',\r\n  styleUrls: ['./code-and-edition-warnings.component.scss'],\r\n})\r\nexport class CodeAndEditionWarningsComponent {\r\n  constructor(\r\n    private snackRef: MatSnackBarRef<CodeAndEditionWarningsComponent>,\r\n    @Inject(MAT_SNACK_BAR_DATA) public snackBarData: CodeAndEditionWarningsSnackBarData,\r\n  ) { }\r\n\r\n  openCodeBehind(): void {\r\n    this.snackBarData.openCodeBehind = true;\r\n    this.snackRef.dismissWithAction();\r\n  }\r\n}\r\n","import { FileAsset } from './models/file-asset.model';\r\nimport { Snippet, SnippetsSets } from './models/snippet.model';\r\nimport { SourceView } from './models/source-view.model';\r\nimport { Tooltip } from './models/tooltip.model';\r\n\r\nexport interface Tab {\r\n  viewKey: ViewKey;\r\n  label: string;\r\n  isActive: boolean;\r\n  isModified: boolean;\r\n  isLoading: boolean;\r\n}\r\n\r\nexport interface CodeEditorViewModel {\r\n  activeView: ViewKey;\r\n  tabs: Tab[];\r\n  viewKey: ViewKey;\r\n  view?: SourceView;\r\n  templates: FileAsset[];\r\n  explorerSnipps: SnippetsSets;\r\n  editorSnipps: Snippet[];\r\n  tooltips?: Tooltip[];\r\n}\r\n\r\nexport const Explorers = {\r\n  Templates: 'Templates',\r\n  Snippets: 'Snippets',\r\n} as const;\r\n\r\nexport type ExplorerOption = typeof Explorers[keyof typeof Explorers];\r\n\r\nexport interface ViewInfo {\r\n  viewKey: ViewKey;\r\n  view?: SourceView;\r\n  explorerSnipps?: SnippetsSets;\r\n  editorSnipps?: Snippet[];\r\n  tooltips?: Tooltip[];\r\n  savedCode?: string;\r\n}\r\n\r\nexport interface ViewKey {\r\n  /** ViewKey is templateId or path */\r\n  key: string;\r\n  shared: boolean;\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { map, Observable } from 'rxjs';\r\nimport { DataTypeConstants } from '../../content-type-fields/constants/data-type.constants';\r\nimport { Field } from '../../content-type-fields/models/field.model';\r\nimport { webApiFieldsAll } from '../../content-type-fields/services/content-types-fields.service';\r\nimport { MoreSnippet, SetSnippet, SetSnippetLink, Snippet, SnippetsSets, SnippetsSubSubSets } from '../models/snippet.model';\r\nimport { SourceView } from '../models/source-view.model';\r\nimport { Tooltip } from '../models/tooltip.model';\r\nimport { InputTypeStrict } from '../../content-type-fields/constants/input-type.constants';\r\n\r\nexport const inlineHelp = 'admin/Code/InlineHelp';\r\n\r\n@Injectable()\r\nexport class SnippetsService {\r\n\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext, private translate: TranslateService) { }\r\n\r\n  getTooltips(language: string): Observable<Tooltip[]> {\r\n    return this.http.get<Tooltip[]>(this.dnnContext.$2sxc.http.apiUrl(inlineHelp), {\r\n      params: {\r\n        language,\r\n      },\r\n    });\r\n  }\r\n\r\n  getSnippets(view: SourceView): Observable<{ list: Snippet[]; sets: SnippetsSets; }> {\r\n    return this.http.get<{ snippets: Snippet[] }>('../ng-assets/snippets.json.js').pipe(\r\n      map(res => {\r\n        const relevant = this.filterAwayNotNeededSnippetsList(res.snippets, view);\r\n        const standardAndInputSnips = this.extractInputTypeSnippets(relevant);\r\n        const sets = this.initSnippetsWithConfig(standardAndInputSnips.standardArray, view, standardAndInputSnips.inputTypeSnippets);\r\n        const sorted: { list: Snippet[]; sets: SnippetsSets; } = {\r\n          list: standardAndInputSnips.standardArray,\r\n          sets\r\n        };\r\n        return sorted;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** Scan the list for sets starting with @ or [ and filter if not needed right now */\r\n  private filterAwayNotNeededSnippetsList(list: Snippet[], view: SourceView): Snippet[] {\r\n    const keyPrefixes = ['@', '['];\r\n    const keyPrefixIndex = (v: SourceView) => (v.Type.indexOf('Razor') > -1) ? 0 : 1;\r\n\r\n    const newList: Snippet[] = [];\r\n    for (const itm of list) {\r\n      const setHasPrefix = keyPrefixes.indexOf(itm.set[0]);\r\n      if (setHasPrefix === -1 || (setHasPrefix === keyPrefixIndex(view))) {\r\n        // if necessary, remove first char\r\n        if (setHasPrefix === keyPrefixIndex(view)) {\r\n          itm.set = itm.set.substring(1);\r\n        }\r\n        newList.push(itm);\r\n      }\r\n    }\r\n    return newList;\r\n  }\r\n\r\n  private extractInputTypeSnippets(list: Snippet[]): { standardArray: Snippet[]; inputTypeSnippets: Record<string, Snippet[]>; } {\r\n    const standardArray: Snippet[] = [];\r\n    const inputTypeArray: Snippet[] = [];\r\n\r\n    for (const itm of list) {\r\n      const systemSnippet = itm.set[0] === '\\\\';\r\n      if (!systemSnippet) {\r\n        standardArray.push(itm);\r\n      } else {\r\n        itm.set = itm.set.substring(1);\r\n        inputTypeArray.push(itm);\r\n      }\r\n    }\r\n    const inputTypeSnippets = this.catalogInputTypeSnippets(inputTypeArray);\r\n    const extracted: { standardArray: Snippet[]; inputTypeSnippets: Record<string, Snippet[]>; } = {\r\n      standardArray,\r\n      inputTypeSnippets,\r\n    };\r\n    return extracted;\r\n  }\r\n\r\n  private catalogInputTypeSnippets(list: Snippet[]): Record<string, Snippet[]> {\r\n    const inputTypeList: Record<string, Snippet[]> = {};\r\n    for (const itm of list) {\r\n      if (inputTypeList[itm.subset] === undefined) {\r\n        inputTypeList[itm.subset] = [];\r\n      }\r\n      inputTypeList[itm.subset].push(itm);\r\n    }\r\n    return inputTypeList;\r\n  }\r\n\r\n  private initSnippetsWithConfig(\r\n    standardArray: Snippet[],\r\n    templateConfiguration: SourceView,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): SnippetsSets {\r\n    const sets = this.makeTree(standardArray);\r\n\r\n    // retrieve all relevant content-types and infos\r\n    sets.Content = Object.assign({}, sets.Content, { Fields: {}, PresentationFields: {} });\r\n    if (templateConfiguration.TypeContent) {\r\n      this.loadContentType(\r\n        sets.Content.Fields as SnippetsSubSubSets,\r\n        templateConfiguration.TypeContent,\r\n        'Content',\r\n        templateConfiguration,\r\n        inputTypeSnippets,\r\n      );\r\n    }\r\n    if (templateConfiguration.TypeContentPresentation) {\r\n      this.loadContentType(\r\n        sets.Content.PresentationFields as SnippetsSubSubSets,\r\n        templateConfiguration.TypeContentPresentation,\r\n        'Content.Presentation',\r\n        templateConfiguration,\r\n        inputTypeSnippets,\r\n      );\r\n    }\r\n\r\n    if (templateConfiguration.HasList) {\r\n      sets.List = Object.assign({}, sets.List, { Fields: {}, PresentationFields: {} });\r\n      if (templateConfiguration.TypeList) {\r\n        this.loadContentType(\r\n          sets.List.Fields as SnippetsSubSubSets,\r\n          templateConfiguration.TypeList,\r\n          'Header',\r\n          templateConfiguration,\r\n          inputTypeSnippets,\r\n        );\r\n      }\r\n      if (templateConfiguration.TypeListPresentation) {\r\n        this.loadContentType(\r\n          sets.List.PresentationFields as SnippetsSubSubSets,\r\n          templateConfiguration.TypeListPresentation,\r\n          'Header.Presentation',\r\n          templateConfiguration,\r\n          inputTypeSnippets,\r\n        );\r\n      }\r\n    } else {\r\n      delete sets.List;\r\n    }\r\n\r\n    // maybe App-infos\r\n    if (templateConfiguration.HasApp) {\r\n      sets.App.Resources = {};\r\n      sets.App.Settings = {};\r\n      this.loadContentType(sets.App.Resources, 'App-Resources', 'App.Resources', templateConfiguration, inputTypeSnippets);\r\n      this.loadContentType(sets.App.Settings, 'App-Settings', 'App.Settings', templateConfiguration, inputTypeSnippets);\r\n    }\r\n\r\n    return sets;\r\n  }\r\n\r\n  /** Convert the list into a tree with set/subset/item */\r\n  private makeTree(list: Snippet[]): SnippetsSets {\r\n    const tree: SnippetsSets = {};\r\n    for (const o of list) {\r\n      if (tree[o.set] === undefined) {\r\n        tree[o.set] = {};\r\n      }\r\n      if (tree[o.set][o.subset] === undefined) {\r\n        tree[o.set][o.subset] = [];\r\n      }\r\n      const reformatted: SetSnippet = {\r\n        key: o.name,\r\n        label: this.label(o.set, o.subset, o.name),\r\n        snip: o.content,\r\n        help: o.help || this.help(o.set, o.subset, o.name),\r\n        links: this.linksList(o.links)\r\n      };\r\n\r\n      (tree[o.set][o.subset] as SetSnippet[]).push(reformatted);\r\n    }\r\n    return tree;\r\n  }\r\n\r\n  private label(set: string, subset: string, snip: string): string {\r\n    const key = this.getHelpKey(set, subset, snip, '.Key');\r\n\r\n    let result: string = this.translate.instant(key);\r\n    if (result === key) {\r\n      result = snip;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private getHelpKey(set: string, subset: string, snip: string, addition: string): string {\r\n    return 'SourceEditorSnippets' + '.' + set + '.' + subset + '.' + snip + addition;\r\n  }\r\n\r\n  private help(set: string, subset: string, snip: string): string {\r\n    const key = this.getHelpKey(set, subset, snip, '.Help');\r\n\r\n    let result: string = this.translate.instant(key);\r\n    if (result === key) {\r\n      result = '';\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private linksList(linksString: string): SetSnippetLink[] {\r\n    if (!linksString) { return null; }\r\n\r\n    const links: SetSnippetLink[] = [];\r\n    const llist = linksString.split('\\n');\r\n    for (const l of llist) {\r\n      const pair = l.split(':');\r\n      if (pair.length === 3) {\r\n        const link: SetSnippetLink = {\r\n          name: pair[0].trim(),\r\n          url: pair[1].trim() + ':' + pair[2].trim(),\r\n        };\r\n        links.push(link);\r\n      }\r\n    }\r\n    if (links.length === 0) { return null; }\r\n    return links;\r\n  }\r\n\r\n  /** spm TODO: this happens after snippets are calculated for the first time. Needs to be fixed */\r\n  private loadContentType(\r\n    target: SnippetsSubSubSets,\r\n    type: string,\r\n    prefix: string,\r\n    templateConfiguration: SourceView,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): void {\r\n    this.getFields(templateConfiguration.AppId, type).subscribe(fields => {\r\n      // first add common items if the content-type actually exists\r\n      for (const field of fields) {\r\n        const fieldname = field.StaticName;\r\n        target[fieldname] = {\r\n          key: fieldname,\r\n          label: fieldname,\r\n          snip: this.valuePlaceholder(prefix, fieldname, templateConfiguration),\r\n          help: field.Metadata.merged.Notes || ' (' + field.Type.toLowerCase() + ') '\r\n        };\r\n        // try to add generic snippets specific to this input-type\r\n        const snipDefaults = cloneDeep(target[fieldname]); // must be a copy, because target[fieldname] will grow\r\n        this.attachSnippets(target, prefix, fieldname, field.InputType, snipDefaults, inputTypeSnippets);\r\n      }\r\n\r\n      if (fields.length) {\r\n        const std = ['EntityId', 'EntityTitle', 'EntityGuid', 'EntityType', 'IsPublished', 'Modified'];\r\n        // tslint:disable-next-line:prefer-for-of\r\n        for (let i = 0; i < std.length; i++) {\r\n          target[std[i]] = {\r\n            key: std[i],\r\n            label: std[i],\r\n            snip: this.valuePlaceholder(prefix, std[i], templateConfiguration),\r\n            help: this.translate.instant('SourceEditorSnippets.StandardFields.' + std[i] + '.Help'),\r\n          };\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private valuePlaceholder(obj: string, val: string, templateConfiguration: SourceView): string {\r\n    return (templateConfiguration.Type.indexOf('Razor') > -1)\r\n      ? '@' + obj + '.' + val\r\n      : '[' + obj.replace('.', ':') + ':' + val + ']';\r\n  }\r\n\r\n  private getFields(appId: number, staticName: string): Observable<Field[]> {\r\n    return this.http.get<Field[]>(this.dnnContext.$2sxc.http.apiUrl(webApiFieldsAll), {\r\n      params: { appid: appId.toString(), staticName },\r\n    }).pipe(\r\n      map(fields => {\r\n        fields = fields.filter(field => field.Type !== DataTypeConstants.Empty);\r\n        for (const fld of fields) {\r\n          if (!fld.Metadata) { continue; }\r\n          const md = fld.Metadata;\r\n          const allMd = md.All;\r\n          const typeMd = md[fld.Type];\r\n          const inputMd = md[fld.InputType];\r\n          md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n        }\r\n        return fields;\r\n      }),\r\n    );\r\n  }\r\n\r\n  private attachSnippets(\r\n    target: SnippetsSubSubSets,\r\n    prefix: string,\r\n    fieldname: string,\r\n    inputType: InputTypeStrict,\r\n    snipDefaults: SetSnippet,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): void {\r\n    let genericSnippet = inputTypeSnippets[inputType];\r\n    if (inputType.indexOf('-')) { // if it's a sub-type, let's also get the master-type\r\n      const fieldType = inputType.substring(0, inputType.indexOf('-'));\r\n      if (fieldType) {\r\n        const typeSnips = inputTypeSnippets[fieldType];\r\n        if (typeSnips) {\r\n          genericSnippet = genericSnippet ? genericSnippet.concat(typeSnips) : typeSnips;\r\n        }\r\n      }\r\n    }\r\n    if (!genericSnippet) { return; }\r\n\r\n    if (target[fieldname].more === undefined) {\r\n      target[fieldname].more = {};\r\n    }\r\n    const fieldSnips = target[fieldname].more;\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let g = 0; g < genericSnippet.length; g++) {\r\n      try {\r\n        fieldSnips[fieldname + '-' + genericSnippet[g].name] = Object.assign({}, snipDefaults, {\r\n          key: fieldname + ' - ' + genericSnippet[g].name,\r\n          label: genericSnippet[g].name,\r\n          snip: this.localizeGenericSnippet(genericSnippet[g].content, prefix, fieldname),\r\n          collapse: true,\r\n        } as MoreSnippet);\r\n      } finally { }\r\n    }\r\n  }\r\n\r\n  private localizeGenericSnippet(snip: string, objName: string, fieldName: string): string {\r\n    snip = snip\r\n      .replace(/(\\$\\{[0-9]+\\:)var(\\})/gi, '$1' + objName + '$2')\r\n      .replace(/(\\$\\{[0-9]+\\:)prop(\\})/gi, '$1' + fieldName + '$2');\r\n    return snip;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'objectToArray' })\r\nexport class ObjectToArrayPipe implements PipeTransform {\r\n  transform(obj: Record<string, any> | Record<string, any>[]): Record<string, any>[] {\r\n    if (obj == null) { return; }\r\n\r\n    if (Array.isArray(obj)) { return obj; }\r\n\r\n    return Object.values(obj);\r\n  }\r\n}\r\n","<div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n  <div *ngFor=\"let section of snippets | keyvalue\">\r\n\r\n    <div class=\"collapsible-header section\" [tippy]=\"'SourceEditorSnippets.' + section.key + '.Help' | translate\"\r\n      tippyShowDelay=\"750\" (click)=\"toggleSection(section.key)\">\r\n      <mat-icon>\r\n        {{ toggledSections.includes(section.key) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n      </mat-icon>\r\n      <span>{{ 'SourceEditorSnippets.' + section.key + '.Title' | translate }}</span>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"toggledSections.includes(section.key)\">\r\n      <div *ngFor=\"let folder of section.value | keyvalue\">\r\n\r\n        <div class=\"collapsible-header folder\"\r\n          [tippy]=\"'SourceEditorSnippets.' + section.key + '.' + folder.key + '.Help' | translate\" tippyShowDelay=\"750\"\r\n          (click)=\"toggleFolder(folder.key)\">\r\n          <mat-icon>\r\n            {{ toggledFolders.includes(folder.key) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n          </mat-icon>\r\n          <span>{{ 'SourceEditorSnippets.' + section.key + '.' + folder.key + '.Title' | translate }}</span>\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"toggledFolders.includes(folder.key)\">\r\n          <div class=\"snippet\" *ngFor=\"let snippet of (folder.value | objectToArray)\">\r\n\r\n            <div class=\"snippet-label\">\r\n              <div matRipple class=\"text\" [tippy]=\"snippet.snip\" tippyShowDelay=\"750\"\r\n                (click)=\"addSnippet(snippet.snip)\">\r\n                {{ snippet.label }}\r\n              </div>\r\n              <mat-icon *ngIf=\"snippet.more\" tippy=\"Show More\" tippyShowDelay=\"750\" (click)=\"toggleMore(snippet.key)\">\r\n                {{ toggledMores.includes(snippet.key) ? 'more_vert' : 'more_horiz' }}\r\n              </mat-icon>\r\n              <mat-icon tippy=\"Show Help\" tippyShowDelay=\"750\" appClickStopPropagation\r\n                (click)=\"toggleInfo(snippet.key)\">info</mat-icon>\r\n            </div>\r\n\r\n            <div class=\"snippet-help\" *ngIf=\"toggledInfos.includes(snippet.key)\">\r\n              <div class=\"text\" [innerHTML]=\"snippet.help | safeHtml\"></div>\r\n              <div *ngFor=\"let link of snippet.links\">\r\n                <a [href]=\"link.url\" target=\"_blank\">{{ link.name }}</a>\r\n              </div>\r\n            </div>\r\n\r\n            <ng-container *ngIf=\"toggledMores.includes(snippet.key)\">\r\n              <div *ngFor=\"let more of (snippet.more | objectToArray)\">\r\n\r\n                <div class=\"snippet-label\">\r\n                  <div matRipple class=\"text text-more\" [tippy]=\"more.snip\" tippyShowDelay=\"750\"\r\n                    (click)=\"addSnippet(more.snip)\">\r\n                    {{ more.label }}\r\n                  </div>\r\n                  <mat-icon tippy=\"Show Help\" tippyShowDelay=\"750\" appClickStopPropagation\r\n                    (click)=\"toggleInfo(more.key)\">info</mat-icon>\r\n                </div>\r\n\r\n                <div class=\"snippet-help snippet-help-more\" *ngIf=\"toggledInfos.includes(more.key)\">\r\n                  <div class=\"text\" [innerHTML]=\"more.help | safeHtml\"></div>\r\n                  <div *ngFor=\"let link of more.links\">\r\n                    <a [href]=\"link.url\" target=\"_blank\">{{ link.name }}</a>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </ng-container>\r\n\r\n          </div>\r\n        </ng-container>\r\n\r\n      </div>\r\n    </ng-container>\r\n\r\n  </div>\r\n</div>","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { GeneralHelpers } from '../../edit/shared/helpers';\r\nimport { SnippetsSets } from '../models/snippet.model';\r\n\r\n@Component({\r\n  selector: 'app-code-snippets',\r\n  templateUrl: './code-snippets.component.html',\r\n  styleUrls: ['./code-snippets.component.scss'],\r\n})\r\nexport class CodeSnippetsComponent {\r\n  @Input() snippets: SnippetsSets;\r\n  @Output() insertSnippet: EventEmitter<string> = new EventEmitter();\r\n  toggledSections: string[] = [];\r\n  toggledFolders: string[] = [];\r\n  toggledInfos: string[] = [];\r\n  toggledMores: string[] = [];\r\n\r\n  constructor() { }\r\n\r\n  addSnippet(snippet: string): void {\r\n    this.insertSnippet.emit(snippet);\r\n  }\r\n\r\n  toggleSection(key: string): void {\r\n    GeneralHelpers.toggleInArray(key, this.toggledSections);\r\n  }\r\n\r\n  toggleFolder(key: string): void {\r\n    GeneralHelpers.toggleInArray(key, this.toggledFolders);\r\n  }\r\n\r\n  toggleInfo(key: string): void {\r\n    GeneralHelpers.toggleInArray(key, this.toggledInfos);\r\n  }\r\n\r\n  toggleMore(key: string): void {\r\n    GeneralHelpers.toggleInArray(key, this.toggledMores);\r\n  }\r\n}\r\n","import { FileAsset } from '../models/file-asset.model';\r\nimport { TreeItem } from '../models/tree-item.model';\r\nimport { appSharedRoot } from './code-templates.models';\r\n\r\nexport function calculateTreeAppShared(templates: FileAsset[]): TreeItem[] {\r\n  const tree: TreeItem[] = [\r\n    {\r\n      depth: -1,\r\n      name: 'App Files',\r\n      pathFromRoot: appSharedRoot,\r\n      isShared: false,\r\n      isFolder: true,\r\n      children: calculateTree(templates.filter(f => !f.Shared)),\r\n    },\r\n    {\r\n      depth: -1,\r\n      name: 'Shared App Files',\r\n      pathFromRoot: appSharedRoot,\r\n      isShared: true,\r\n      isFolder: true,\r\n      children: calculateTree(templates.filter(f => f.Shared)),\r\n    },\r\n  ];\r\n  return tree;\r\n}\r\n\r\nfunction calculateTree(templates: FileAsset[]): TreeItem[] {\r\n  if (!templates) { return []; }\r\n\r\n  const tree: TreeItem[] = [];\r\n  for (const template of templates) {\r\n    let parent: TreeItem[] = tree;\r\n    const paths = template.Path.split('/');\r\n    const last = paths[paths.length - 1];\r\n    let pathFromRoot = '';\r\n    for (let i = 0; i < paths.length; i++) {\r\n      const path = paths[i];\r\n      pathFromRoot += i ? `/${path}` : path;\r\n      const existing = parent.find(item => item.name === path);\r\n      if (existing) {\r\n        parent = existing.children;\r\n      } else {\r\n        const item: TreeItem = {\r\n          depth: i,\r\n          name: path,\r\n          pathFromRoot,\r\n          isShared: template.Shared,\r\n          isFolder: path !== last,\r\n          ...(path !== last && { children: [] }),\r\n        };\r\n        parent.push(item);\r\n        parent = item.children;\r\n      }\r\n    }\r\n  }\r\n\r\n  return tree;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'depthPadding' })\r\nexport class DepthPaddingPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(depth: number, isFolder: boolean): SafeStyle {\r\n    let padding: number;\r\n    if (isFolder) {\r\n      padding = depth * 8;\r\n    } else {\r\n      padding = (depth === 0) ? 8 : (depth * 8 + 16);\r\n    }\r\n    return this.sanitizer.bypassSecurityTrustStyle(`padding-left: ${padding}px;`);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TreeItem } from '../models/tree-item.model';\r\n\r\n/** Sorts folders before files */\r\n@Pipe({ name: 'sortItems' })\r\nexport class SortItemsPipe implements PipeTransform {\r\n\r\n  transform(items: TreeItem[]) {\r\n    if (items == null) { return items; }\r\n\r\n    items.sort((item1, item2) => {\r\n      if (item1.isFolder < item2.isFolder) {\r\n        return 1;\r\n      } else if (item1.isFolder > item2.isFolder) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    return items;\r\n  }\r\n}\r\n","<div class=\"editor-active-explorer fancy-scrollbar-dark explorer-wrapper\">\r\n\r\n  <div>\r\n    <ng-container *ngFor=\"let item of (tree | sortItems)\">\r\n      <ng-container *ngTemplateOutlet=\"fileOrFolder; context: {item: item}\"></ng-container>\r\n    </ng-container>\r\n\r\n    <ng-template #fileOrFolder let-item=\"item\">\r\n\r\n      <div class=\"file\" *ngIf=\"!item.isFolder\" [style]=\"item.depth | depthPadding: item.isFolder\"\r\n        [ngClass]=\"{'active': isToggled(item.pathFromRoot, item.isShared) }\" [tippy]=\"item.name\" tippyShowDelay=\"750\"\r\n        (click)=\"openTemplate(item.pathFromRoot, item.isShared)\">\r\n        {{ item.name }}\r\n      </div>\r\n\r\n      <div *ngIf=\"item.isFolder\">\r\n        <div class=\"folder-name-wrapper\" [ngClass]=\"{'app-shared-root': item.depth < 0}\"\r\n          [style]=\"item.depth + 1 | depthPadding: item.isFolder\" (click)=\"toggleItem(item.pathFromRoot, item.isShared)\">\r\n          <div class=\"folder-name\" [tippy]=\"item.name\" tippyShowDelay=\"750\">\r\n            <mat-icon> {{ isToggled(item.pathFromRoot, item.isShared) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n            </mat-icon>\r\n            <span>{{ item.name }}</span>\r\n          </div>\r\n          <div class=\"add-item\" tippy=\"Create file in this folder\" tippyShowDelay=\"750\" appClickStopPropagation\r\n            (click)=\"addFile(item.pathFromRoot, item.isShared)\">\r\n            <mat-icon>add</mat-icon>\r\n          </div>\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"isToggled(item.pathFromRoot, item.isShared)\">\r\n          <ng-container *ngFor=\"let item1 of (item.children | sortItems)\">\r\n            <ng-container *ngTemplateOutlet=\"fileOrFolder; context: {item: item1}\"></ng-container>\r\n          </ng-container>\r\n        </ng-container>\r\n      </div>\r\n\r\n    </ng-template>\r\n  </div>\r\n\r\n  <div class=\"create-button-wrapper\">\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" tippy=\"Create file\" tippyPlacement=\"left\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button mat-menu-item  (click)=\"addFile('', false)\">\r\n        <span>App</span>\r\n      </button>\r\n      <button mat-menu-item  (click)=\"addFile('', true)\">\r\n        <span>Shared (global)</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\r\nimport { GeneralHelpers } from '../../edit/shared/helpers';\r\nimport { ViewKey } from '../code-editor.models';\r\nimport { FileAsset } from '../models/file-asset.model';\r\nimport { SourceView } from '../models/source-view.model';\r\nimport { TreeItem } from '../models/tree-item.model';\r\nimport { calculateTreeAppShared } from './code-templates.helpers';\r\nimport { appSharedRoot, CreateTemplateParams } from './code-templates.models';\r\n\r\n@Component({\r\n  selector: 'app-code-templates',\r\n  templateUrl: './code-templates.component.html',\r\n  styleUrls: ['./code-templates.component.scss'],\r\n})\r\nexport class CodeTemplatesComponent implements OnChanges {\r\n  @Input() view?: SourceView;\r\n  @Input() templates: FileAsset[];\r\n  @Output() openView: EventEmitter<ViewKey> = new EventEmitter();\r\n  @Output() createTemplate: EventEmitter<CreateTemplateParams> = new EventEmitter();\r\n  tree: TreeItem[];\r\n  toggledItemsApp: string[] = [];\r\n  toggledItemsShared: string[] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.templates != null) {\r\n      this.tree = calculateTreeAppShared(this.templates);\r\n    }\r\n    if (changes.view != null) {\r\n      const previousView: SourceView = changes.view?.previousValue;\r\n      if (previousView) {\r\n        this.toggleItem(previousView.FileName, previousView.IsShared);\r\n      }\r\n      if (this.view) {\r\n        this.showFileInTree(this.view.FileName, this.view.IsShared);\r\n      }\r\n    }\r\n  }\r\n\r\n  isToggled(path: string, isShared: boolean): boolean {\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    return toggledItems.includes(path);\r\n  }\r\n\r\n  openTemplate(path: string, isShared: boolean): void {\r\n    const viewKey: ViewKey = { key: path, shared: isShared };\r\n    this.openView.emit(viewKey);\r\n  }\r\n\r\n  toggleItem(path: string, isShared: boolean): void {\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    GeneralHelpers.toggleInArray(path, toggledItems);\r\n  }\r\n\r\n  addFile(folder?: string, isShared?: boolean): void {\r\n    const params: CreateTemplateParams = { folder, isShared };\r\n    this.createTemplate.emit(params);\r\n  }\r\n\r\n  private showFileInTree(file: string, isShared: boolean): void {\r\n    if (file == null) { return; }\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    if (toggledItems.includes(file)) { return; }\r\n\r\n    const paths = [appSharedRoot, ...file.split('/')];\r\n    let pathFromRoot = '';\r\n    for (const path of paths) {\r\n      pathFromRoot = !pathFromRoot ? path : `${pathFromRoot}/${path}`;\r\n      if (toggledItems.includes(pathFromRoot)) { continue; }\r\n      this.toggleItem(pathFromRoot, isShared);\r\n    }\r\n  }\r\n}\r\n","export const appSharedRoot = '' as const;\r\n\r\nexport interface CreateTemplateParams {\r\n  folder?: string;\r\n  isShared?: boolean;\r\n}\r\n","<div class=\"editor-root\" appToggleDebug [ngClass]=\"{ 'sxc-dark': monacoOptions.theme === '2sxc-dark' }\"\r\n  *ngIf=\"viewModel$ | async as vm\">\r\n  <div class=\"editor-side-toolbar\">\r\n    <div class=\"button\" [ngClass]=\"{ 'active': activeExplorer === Explorers.Templates }\" tippy=\"Templates\"\r\n      (click)=\"toggleExplorer(Explorers.Templates)\">\r\n      <mat-icon>file_copy</mat-icon>\r\n    </div>\r\n    <div class=\" button\" [ngClass]=\"{ 'active': activeExplorer === Explorers.Snippets }\" tippy=\"Snippets\"\r\n      (click)=\"toggleExplorer(Explorers.Snippets)\">\r\n      <mat-icon>code</mat-icon>\r\n    </div>\r\n  </div>\r\n\r\n  <app-code-templates [hidden]=\"activeExplorer !== Explorers.Templates\" [view]=\"vm.view\" [templates]=\"vm.templates\"\r\n    (openView)=\"openView($event)\" (createTemplate)=\"createTemplate($event)\">\r\n  </app-code-templates>\r\n  <app-code-snippets [hidden]=\"activeExplorer !== Explorers.Snippets\" [snippets]=\"vm.explorerSnipps\"\r\n    (insertSnippet)=\"insertSnippet($event)\">\r\n  </app-code-snippets>\r\n\r\n  <div class=\"editor-group\">\r\n    <div class=\"tabs-container fancy-scrollbar-dark\" *ngIf=\"vm.tabs.length > 0\">\r\n      <div class=\"tab\" *ngFor=\"let tab of vm.tabs\" [ngClass]=\"{\r\n        'active': tab.isActive,\r\n        'modified': tab.isModified,\r\n        'loading': tab.isLoading\r\n      }\" (click)=\"openView(tab.viewKey)\">\r\n        <div class=\"tab-label-container\" [tippy]=\"tab.label\" tippyShowDelay=\"750\">\r\n          <mat-icon class=\"icon-shared\" *ngIf=\"tab.viewKey.shared\">share</mat-icon>\r\n          <span class=\"tab-label\">{{ tab.label }}</span>\r\n        </div>\r\n        <div class=\"tab-actions-container\">\r\n          <mat-icon *ngIf=\"tab.isModified\" class=\"tab-action icon-modified\" fontSet=\"material-icons\">circle</mat-icon>\r\n          <mat-spinner *ngIf=\"tab.isLoading\" class=\"spinner\" mode=\"indeterminate\" diameter=\"14\" color=\"white\">\r\n          </mat-spinner>\r\n          <mat-icon class=\"tab-action icon-close\" tippy=\"Close\" appClickStopPropagation\r\n            (click)=\"closeEditor(tab.viewKey)\">close</mat-icon>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <app-monaco-editor *ngIf=\"vm.view\" [filename]=\"vm.view.FileName\" [value]=\"vm.view.Code\"\r\n      (valueChanged)=\"codeChanged($event, vm.viewKey)\" [options]=\"monacoOptions\" [snippets]=\"vm.editorSnipps\"\r\n      [tooltips]=\"vm.tooltips\" [autoFocus]=\"true\">\r\n    </app-monaco-editor>\r\n  </div>\r\n\r\n  <button mat-fab mat-elevation-z24 tippy=\"Click to save or CTRL + S\" *ngIf=\"vm.activeView\" (click)=\"save()\">\r\n    <mat-icon>done</mat-icon>\r\n  </button>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CodeEditorComponent } from './code-editor.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CodeEditorComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CodeEditorRoutingModule { }\r\n","import { Component, NgZone, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport type * as Monaco from 'monaco-editor';\r\nimport { BehaviorSubject, combineLatest, forkJoin, fromEvent, map, Observable, of, share, Subscription, switchMap } from 'rxjs';\r\n// tslint:disable-next-line:max-line-length\r\nimport { CreateFileDialogComponent, CreateFileDialogData, CreateFileDialogResult, FileLocationDialogComponent } from '../create-file-dialog';\r\nimport { GeneralHelpers } from '../edit/shared/helpers';\r\nimport { MonacoEditorComponent } from '../monaco-editor';\r\nimport { BaseSubsinkComponent } from '../shared/components/base-subsink-component/base-subsink.component';\r\nimport { keyIsShared, keyItems } from '../shared/constants/session.constants';\r\nimport { ViewOrFileIdentifier } from '../shared/models/edit-form.model';\r\nimport { Context } from '../shared/services/context';\r\nimport { CodeAndEditionWarningsComponent } from './code-and-edition-warnings/code-and-edition-warnings.component';\r\nimport { CodeAndEditionWarningsSnackBarData } from './code-and-edition-warnings/code-and-edition-warnings.models';\r\nimport { CodeEditorViewModel, ExplorerOption, Explorers, Tab, ViewInfo, ViewKey } from './code-editor.models';\r\nimport { CreateTemplateParams } from './code-templates/code-templates.models';\r\nimport { FileAsset } from './models/file-asset.model';\r\nimport { SourceView } from './models/source-view.model';\r\nimport { SnippetsService } from './services/snippets.service';\r\nimport { SourceService } from './services/source.service';\r\n\r\n@Component({\r\n  selector: 'app-code-editor',\r\n  templateUrl: './code-editor.component.html',\r\n  styleUrls: ['./code-editor.component.scss'],\r\n})\r\nexport class CodeEditorComponent extends BaseSubsinkComponent implements OnInit, OnDestroy {\r\n  @ViewChild(MonacoEditorComponent) private monacoEditorRef: MonacoEditorComponent;\r\n\r\n  Explorers = Explorers;\r\n  activeExplorer: ExplorerOption = Explorers.Templates;\r\n  monacoOptions: Monaco.editor.IStandaloneEditorConstructionOptions = {\r\n    theme: '2sxc-dark',\r\n    tabSize: 2,\r\n    fixedOverflowWidgets: true,\r\n  };\r\n  viewModel$: Observable<CodeEditorViewModel>;\r\n\r\n  private templates$: BehaviorSubject<FileAsset[]>;\r\n  private activeView$: BehaviorSubject<ViewKey>;\r\n  private openViews$: BehaviorSubject<ViewKey[]>;\r\n  private viewInfos$: BehaviorSubject<ViewInfo[]>;\r\n  private urlItems: ViewOrFileIdentifier[];\r\n\r\n  constructor(\r\n    private context: Context,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n    private sourceService: SourceService,\r\n    private snippetsService: SnippetsService,\r\n    private zone: NgZone,\r\n    private titleService: Title,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) {\r\n    super();\r\n    this.context.init(this.route);\r\n    const codeItems: ViewOrFileIdentifier[] = JSON.parse(sessionStorage.getItem(keyItems));\r\n    const isShared = sessionStorage.getItem(keyIsShared) === 'true' ?? false;\r\n    codeItems.forEach(codeItem => {\r\n      // remove leading \"/\" from path\r\n      if (codeItem.Path.startsWith('/')) {\r\n        codeItem.Path = codeItem.Path.substring(1);\r\n      }\r\n      codeItem.IsShared ??= isShared;\r\n    });\r\n    this.urlItems = codeItems;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.templates$ = new BehaviorSubject<FileAsset[]>([]);\r\n    const initialViews = this.urlItems.map(item => {\r\n      const viewKey: ViewKey = { key: item.EntityId?.toString() ?? item.Path, shared: item.IsShared };\r\n      return viewKey;\r\n    });\r\n    this.activeView$ = new BehaviorSubject<ViewKey>(initialViews[0]);\r\n    this.openViews$ = new BehaviorSubject<ViewKey[]>(initialViews);\r\n    this.viewInfos$ = new BehaviorSubject<ViewInfo[]>([]);\r\n\r\n    this.attachListeners();\r\n\r\n    this.sourceService.getAll().subscribe(templates => {\r\n      this.templates$.next(templates);\r\n    });\r\n\r\n    this.subscription.add(\r\n      combineLatest([this.templates$, this.openViews$]).subscribe(([templates, openViews]) => {\r\n        if (templates.length === 0) { return; }\r\n\r\n        let viewInfos = this.viewInfos$.value;\r\n        const notLoaded = openViews.filter(viewKey => !viewInfos.some(v => GeneralHelpers.objectsEqual(v.viewKey, viewKey)));\r\n        if (notLoaded.length === 0) { return; }\r\n\r\n        forkJoin(\r\n          notLoaded.map(viewKey => {\r\n            // set viewKey in viewInfos to mark that view is being fetched\r\n            const newViewInfo: ViewInfo = {\r\n              viewKey,\r\n            };\r\n            viewInfos = [...viewInfos, newViewInfo];\r\n\r\n            const view$ = this.sourceService.get(viewKey.key, viewKey.shared, this.urlItems).pipe(share());\r\n            const snippets$ = view$.pipe(switchMap(view => this.snippetsService.getSnippets(view)));\r\n            const tooltips$ = view$.pipe(switchMap(view => this.snippetsService.getTooltips(view.Extension.substring(1))));\r\n            return forkJoin([of(viewKey), view$, snippets$, tooltips$]);\r\n          })\r\n        ).subscribe(results => {\r\n          let viewInfos1 = this.viewInfos$.value;\r\n\r\n          results.forEach(([viewKey, view, snippets, tooltips]) => {\r\n            const selectedIndex = viewInfos1.findIndex(v => GeneralHelpers.objectsEqual(v.viewKey, viewKey));\r\n            if (selectedIndex < 0) { return; }\r\n\r\n            const newViewInfo: ViewInfo = {\r\n              viewKey,\r\n              view,\r\n              explorerSnipps: snippets.sets,\r\n              editorSnipps: snippets.list,\r\n              tooltips,\r\n              savedCode: view.Code,\r\n            };\r\n            viewInfos1 = [...viewInfos1.slice(0, selectedIndex), newViewInfo, ...viewInfos1.slice(selectedIndex + 1)];\r\n            this.showCodeAndEditionWarnings(viewKey, view, templates);\r\n          });\r\n\r\n          this.viewInfos$.next(viewInfos1);\r\n        });\r\n\r\n        this.viewInfos$.next(viewInfos);\r\n      })\r\n    );\r\n\r\n    this.subscription.add(\r\n      combineLatest([this.activeView$, this.viewInfos$]).subscribe(([activeView, viewInfos]) => {\r\n        const active = viewInfos.find(v => GeneralHelpers.objectsEqual(v.viewKey, activeView));\r\n        const defaultTitle = 'Code Editor';\r\n        const newTitle = active == null ? defaultTitle : `${active.view?.FileName} - ${defaultTitle}`;\r\n        const oldTitle = this.titleService.getTitle();\r\n        if (newTitle !== oldTitle) {\r\n          this.titleService.setTitle(newTitle);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.viewModel$ = combineLatest([this.templates$, this.activeView$, this.openViews$, this.viewInfos$]).pipe(\r\n      map(([templates, activeView, openViews, viewInfos]) => {\r\n        const tabs = openViews.map(viewKey => {\r\n          const viewInfo = viewInfos.find(v => GeneralHelpers.objectsEqual(v.viewKey, viewKey));\r\n          const label: Tab = {\r\n            viewKey,\r\n            label: viewInfo?.view?.FileName ?? viewKey.key,\r\n            isActive: GeneralHelpers.objectsEqual(viewKey, activeView),\r\n            isModified: viewInfo?.view?.Code !== viewInfo?.savedCode,\r\n            isLoading: viewInfo?.view == null,\r\n          };\r\n          return label;\r\n        });\r\n        const activeViewInfo = viewInfos.find(v => GeneralHelpers.objectsEqual(v.viewKey, activeView));\r\n\r\n        const viewModel: CodeEditorViewModel = {\r\n          activeView,\r\n          tabs,\r\n          viewKey: activeViewInfo?.viewKey,\r\n          view: activeViewInfo?.view,\r\n          templates,\r\n          explorerSnipps: activeViewInfo?.explorerSnipps,\r\n          editorSnipps: activeViewInfo?.editorSnipps,\r\n          tooltips: activeViewInfo?.tooltips,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.templates$.complete();\r\n    this.activeView$.complete();\r\n    this.openViews$.complete();\r\n    this.viewInfos$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  toggleExplorer(explorer: ExplorerOption): void {\r\n    this.activeExplorer = (this.activeExplorer !== explorer) ? explorer : null;\r\n  }\r\n\r\n  createTemplate(params: CreateTemplateParams): void {\r\n    // This FileLocationDialogComponent dialog is currently never going to be opened because it has been replaced by mat-menu\r\n    // in the code-templates.component.html template. If you want to use the dialog instead of the menu, you need to remove the\r\n    // mat-menu and replace it with a button that opens the dialog with empty parameters.\r\n    // Dialog has been replaced by menu because from update to Angular 16 CreateFileDialogComponent wasn't opening anymore if \r\n    // FileLocationDialogComponent dialog was used.\r\n    // if (params.isShared == null) {\r\n    //   const fileLocationDialogRef = this.dialog.open(FileLocationDialogComponent, {\r\n    //     autoFocus: false,\r\n    //     viewContainerRef: this.viewContainerRef,\r\n    //     width: '650px',\r\n    //   });\r\n    //   fileLocationDialogRef.afterClosed().subscribe((isShared?: boolean) => {\r\n    //     if (isShared == null) { return; }\r\n    //     params.isShared = isShared;\r\n    //     this.createTemplate(params);\r\n    //   });\r\n    //   return;\r\n    // }\r\n\r\n    const createFileDialogData: CreateFileDialogData = {\r\n      folder: params.folder,\r\n      global: params.isShared,\r\n      purpose: params.folder === 'api' || params.folder?.startsWith('api/') ? 'Api' : undefined,\r\n    };\r\n    const createFileDialogRef = this.dialog.open(CreateFileDialogComponent, {\r\n      autoFocus: false,\r\n      data: createFileDialogData,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n\r\n    createFileDialogRef.afterClosed().subscribe((result?: CreateFileDialogResult) => {\r\n      if (!result) { return; }\r\n\r\n      this.sourceService.create(result.name, params.isShared, result.templateKey).subscribe(() => {\r\n        this.sourceService.getAll().subscribe(files => {\r\n          this.templates$.next(files);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  insertSnippet(snippet: string): void {\r\n    this.monacoEditorRef?.insertSnippet(snippet);\r\n  }\r\n\r\n  codeChanged(code: string, viewKey: ViewKey): void {\r\n    let viewInfos = this.viewInfos$.value;\r\n    const selectedIndex = viewInfos.findIndex(v => GeneralHelpers.objectsEqual(v.viewKey, viewKey));\r\n    const selectedViewInfo = viewInfos[selectedIndex];\r\n    const newViewInfo: ViewInfo = {\r\n      ...selectedViewInfo,\r\n      view: {\r\n        ...selectedViewInfo.view,\r\n        Code: code,\r\n      },\r\n    };\r\n    viewInfos = [...viewInfos.slice(0, selectedIndex), newViewInfo, ...viewInfos.slice(selectedIndex + 1)];\r\n    this.viewInfos$.next(viewInfos);\r\n  }\r\n\r\n  openView(viewKey: ViewKey): void {\r\n    // fix viewKey because it can be a templateId or a path, and file might already be open\r\n    viewKey = this.viewInfos$.value.find(\r\n      v => !GeneralHelpers.objectsEqual(v.viewKey, viewKey) && v.view?.FileName === viewKey.key && v.view?.IsShared === viewKey.shared\r\n    )?.viewKey ?? viewKey;\r\n\r\n    const oldActiveView = this.activeView$.value;\r\n    if (!GeneralHelpers.objectsEqual(oldActiveView, viewKey)) {\r\n      this.activeView$.next(viewKey);\r\n    }\r\n    const oldOpenViews = this.openViews$.value;\r\n    if (!oldOpenViews.some(v => GeneralHelpers.objectsEqual(v, viewKey))) {\r\n      const newOpenViews = [...oldOpenViews, viewKey];\r\n      this.openViews$.next(newOpenViews);\r\n    }\r\n  }\r\n\r\n  closeEditor(viewKey: ViewKey): void {\r\n    const oldOpenViews = this.openViews$.value;\r\n    const newOpenViews = oldOpenViews.filter(key => !GeneralHelpers.objectsEqual(key, viewKey));\r\n\r\n    const oldActiveView = this.activeView$.value;\r\n    if (GeneralHelpers.objectsEqual(oldActiveView, viewKey)) {\r\n      const newActiveView = oldOpenViews[oldOpenViews.findIndex(v => GeneralHelpers.objectsEqual(v, oldActiveView)) - 1] ?? newOpenViews[0];\r\n      this.activeView$.next(newActiveView);\r\n    }\r\n\r\n    this.openViews$.next(newOpenViews);\r\n  }\r\n\r\n  save(viewKey?: ViewKey): void {\r\n    viewKey ??= this.activeView$.value;\r\n    const viewInfo = this.viewInfos$.value.find(v => GeneralHelpers.objectsEqual(v.viewKey, viewKey));\r\n    if (viewInfo?.view == null) { return; }\r\n\r\n    this.snackBar.open('Saving...');\r\n    const codeToSave = viewInfo.view.Code;\r\n    this.sourceService.save(viewKey.key, viewKey.shared, viewInfo.view, this.urlItems).subscribe({\r\n      next: res => {\r\n        if (!res) {\r\n          this.snackBar.open('Failed', null, { duration: 2000 });\r\n          return;\r\n        }\r\n\r\n        let newViewInfos = [...this.viewInfos$.value];\r\n        const selectedIndex = newViewInfos.findIndex(v => GeneralHelpers.objectsEqual(v.viewKey, viewKey));\r\n        if (selectedIndex < 0) { return; }\r\n\r\n        const selectedViewInfo = newViewInfos[selectedIndex];\r\n        const newViewInfo: ViewInfo = {\r\n          ...selectedViewInfo,\r\n          savedCode: codeToSave,\r\n        };\r\n        newViewInfos = [...newViewInfos.slice(0, selectedIndex), newViewInfo, ...newViewInfos.slice(selectedIndex + 1)];\r\n        this.viewInfos$.next(newViewInfos);\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n      },\r\n      error: () => {\r\n        this.snackBar.open('Failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Show info about editions if other files with the same name exist */\r\n  private showCodeAndEditionWarnings(viewKey: ViewKey, view: SourceView, files: FileAsset[]): void {\r\n    const pathAndName = view.FileName;\r\n    const pathSeparator = pathAndName.indexOf('/') > -1 ? pathAndName.lastIndexOf('/') + 1 : 0;\r\n    const pathWithSlash = pathSeparator === 0 ? '' : pathAndName.substring(0, pathSeparator);\r\n    const fullName = pathAndName.substring(pathSeparator);\r\n    const name = fullName.substring(0, fullName.length - view.Extension.length);\r\n    const nameCode = name + '.code' + view.Extension;\r\n    // find out if we also have a code file\r\n    const codeFile = files.find(file => file.Path === pathWithSlash + nameCode && file.Shared === view.IsShared);\r\n    const otherEditions = files.filter(file => file.Path.endsWith(fullName) && file.Shared === view.IsShared).length - 1;\r\n\r\n    if (codeFile || otherEditions) {\r\n      const snackBarData: CodeAndEditionWarningsSnackBarData = {\r\n        fileName: fullName,\r\n        codeFile: codeFile?.Path,\r\n        edition: this.urlItems\r\n          .find(i => i.EntityId?.toString() === viewKey.key && i.IsShared === view.IsShared && i.Path === view.FileName)?.Edition,\r\n        otherEditions,\r\n        openCodeBehind: false,\r\n      };\r\n      const snackBarRef = this.snackBar.openFromComponent(CodeAndEditionWarningsComponent, {\r\n        data: snackBarData,\r\n        duration: 10000,\r\n      });\r\n\r\n      snackBarRef.onAction().subscribe(() => {\r\n        if ((snackBarRef.containerInstance.snackBarConfig.data as CodeAndEditionWarningsSnackBarData).openCodeBehind) {\r\n          const openViewKey: ViewKey = { key: codeFile?.Path, shared: codeFile?.Shared };\r\n          this.openView(openViewKey);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private attachListeners(): void {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscription.add(\r\n        fromEvent<BeforeUnloadEvent>(window, 'beforeunload').subscribe(event => {\r\n          const allSaved = !this.viewInfos$.value.some(v => v.view != null && v.view.Code !== v.savedCode);\r\n          if (allSaved) { return; }\r\n          event.preventDefault();\r\n          event.returnValue = ''; // fix for Chrome\r\n        })\r\n      );\r\n      this.subscription.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown').subscribe(event => {\r\n          const CTRL_S = event.keyCode === 83 && (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey);\r\n          if (!CTRL_S) { return; }\r\n          event.preventDefault();\r\n          this.zone.run(() => { this.save(); });\r\n        })\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { CreateFileDialogModule } from '../create-file-dialog';\r\nimport { MonacoEditorModule } from '../monaco-editor';\r\nimport { EavWindow } from '../shared/models/eav-window.model';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { buildTranslateConfiguration, TranslateLoaderWithErrorHandling } from '../shared/translation';\r\nimport { CodeAndEditionWarningsComponent } from './code-and-edition-warnings/code-and-edition-warnings.component';\r\nimport { CodeEditorRoutingModule } from './code-editor-routing.module';\r\nimport { CodeEditorComponent } from './code-editor.component';\r\nimport { CodeSnippetsComponent } from './code-snippets/code-snippets.component';\r\nimport { ObjectToArrayPipe } from './code-snippets/object-to-array.pipe';\r\nimport { CodeTemplatesComponent } from './code-templates/code-templates.component';\r\nimport { DepthPaddingPipe } from './code-templates/depth-padding.pipe';\r\nimport { SortItemsPipe } from './code-templates/order-items.pipe';\r\nimport { SnippetsService } from './services/snippets.service';\r\nimport { SourceService } from './services/source.service';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n// AoT requires an exported function for factories\r\n// at least according to https://github.com/ngx-translate/http-loader\r\nexport function translateLoaderFactoryCode(http: HttpClient) {\r\n  return new TranslateLoaderWithErrorHandling(http, './i18n/code-editor.', `.js?${window.sxcVersion}`);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CodeEditorComponent,\r\n    CodeSnippetsComponent,\r\n    ObjectToArrayPipe,\r\n    CodeTemplatesComponent,\r\n    DepthPaddingPipe,\r\n    SortItemsPipe,\r\n    CodeAndEditionWarningsComponent,\r\n  ],\r\n  imports: [\r\n    CodeEditorRoutingModule,\r\n    SharedComponentsModule,\r\n    CommonModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n    MatRippleModule,\r\n    MatMenuModule,\r\n    TranslateModule.forChild(buildTranslateConfiguration(translateLoaderFactoryCode)),\r\n    MonacoEditorModule,\r\n    MatProgressSpinnerModule,\r\n    CreateFileDialogModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    SourceService,\r\n    SnippetsService,\r\n    TranslateService,\r\n  ],\r\n})\r\nexport class CodeEditorModule { }\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { ContentType } from '../../app-administration/models/content-type.model';\r\nimport { webApiTypeRoot } from '../../app-administration/services/content-types.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Field, FieldInputTypeOption } from '../models/field.model';\r\nimport { InputType } from '../models/input-type.model';\r\nimport { ReservedNames } from '../models/reserved-names.model';\r\nimport { InputTypeStrict } from '../constants/input-type.constants';\r\n\r\nexport const webApiFieldsRoot = 'admin/field/';\r\nexport const webApiFieldsAll = 'admin/field/all';\r\nexport const webApiFieldsGetShared = 'admin/field/GetSharedFields';\r\n\r\n@Injectable()\r\nexport class ContentTypesFieldsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  typeListRetrieve() {\r\n    return this.http.get<string[]>(this.apiUrl(webApiFieldsRoot + 'DataTypes'), {\r\n      params: { appid: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getInputTypesList() {\r\n    return this.http\r\n      .get<InputType[]>(this.apiUrl(webApiFieldsRoot + 'InputTypes'), { params: { appid: this.context.appId.toString() } })\r\n      .pipe(\r\n        map(inputConfigs => {\r\n          const inputTypeOptions = inputConfigs.map(config => {\r\n            const option: FieldInputTypeOption = {\r\n              dataType: config.Type.substring(0, config.Type.indexOf('-')),\r\n              inputType: config.Type,\r\n              label: config.Label,\r\n              description: config.Description,\r\n              isDefault: config.IsDefault,\r\n              isObsolete: config.IsObsolete,\r\n              isRecommended: config.IsRecommended,\r\n              obsoleteMessage: config.ObsoleteMessage,\r\n              icon: config.IsDefault ? 'star' : config.IsRecommended ? 'star_outline' : null,\r\n            };\r\n            return option;\r\n          });\r\n          return inputTypeOptions;\r\n        }),\r\n      );\r\n  }\r\n\r\n  getReservedNames() {\r\n    return this.http.get<ReservedNames>(this.apiUrl(webApiFieldsRoot + 'ReservedNames'));\r\n  }\r\n\r\n  /** Get all fields for some content type */\r\n  getFields(contentTypeStaticName: string) {\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsAll), {\r\n        params: { appid: this.context.appId.toString(), staticName: contentTypeStaticName },\r\n      })\r\n      .pipe(\r\n        map(fields => {\r\n          if (fields) {\r\n            for (const fld of fields) {\r\n              if (!fld.Metadata) { continue; }\r\n              const md = fld.Metadata;\r\n              const allMd = md.All;\r\n              const typeMd = md[fld.Type];\r\n              const inputMd = md[fld.InputType];\r\n              md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n            }\r\n          }\r\n          return fields;\r\n        }),\r\n      );\r\n  }\r\n\r\n  /** Get all possible sharable fields for a new sharing */\r\n  getShareableFields() {\r\n    return this.http.get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString() },\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Get sharable fields which are possible for this attribute.\r\n   * \r\n   * Reason is that eg. a bool-attribute can only receive metadata from a bool attribute, etc.\r\n   * \r\n   * @param attributeId the existing attributeId which will receive the new metadata\r\n   */\r\n  getShareableFieldsFor(attributeId: number) {\r\n    // TODO: @SDV - do the same as in getShareableFields()\r\n    // but add parameter attributeId to the webapi call\r\n    // I'll create the backend afterwards\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString(), attributeId: attributeId.toString() },\r\n      });\r\n  }\r\n\r\n  addInheritedField(targetContentTypeId: number, sourceContentTypeStaticName: string, sourceFieldGuid: string, newName: string) {\r\n    console.log(\"SDV - addInheritedField API not implemented yet\", targetContentTypeId, sourceContentTypeStaticName, sourceFieldGuid, newName);\r\n  }\r\n\r\n  share(attributeId: number, share: boolean = true) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Share'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        share,\r\n      },\r\n    });\r\n  }\r\n\r\n  inherit(attributeId: number, sourceFieldGuid: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Inherit'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        inheritMetadataOf: sourceFieldGuid,\r\n      },\r\n    });\r\n  }\r\n\r\n  reOrder(idArray: number[], contentType: ContentType) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'Sort'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        order: JSON.stringify(idArray),\r\n      },\r\n    });\r\n  }\r\n\r\n  setTitle(item: Field, contentType: ContentType) {\r\n    return this.http.post<null>(this.apiUrl(webApiTypeRoot + 'SetTitle'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  rename(fieldId: number, contentTypeId: number, newName: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Rename'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentTypeId.toString(),\r\n        attributeId: fieldId.toString(),\r\n        newName,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(item: Field, contentType: ContentType) {\r\n    if (item.IsTitle) {\r\n      throw new Error('Can\\'t delete Title');\r\n    }\r\n\r\n    return this.http.delete<boolean>(this.apiUrl(webApiFieldsRoot + 'Delete'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  add(newField: Partial<Field>, contentTypeId: number) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'Add'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: contentTypeId.toString(),\r\n        Id: newField.Id.toString(),\r\n        Type: newField.Type,\r\n        InputType: newField.InputType,\r\n        StaticName: newField.StaticName,\r\n        IsTitle: newField.IsTitle.toString(),\r\n        Index: newField.SortOrder.toString(),\r\n      }\r\n    });\r\n  }\r\n\r\n  updateInputType(id: number, staticName: string, inputType: InputTypeStrict) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'InputType'), null, {\r\n      params: { appId: this.context.appId.toString(), attributeId: id.toString(), field: staticName, inputType }\r\n    });\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MonacoEditorComponent } from './monaco-editor.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    MonacoEditorComponent,\r\n  ],\r\n  exports: [\r\n    MonacoEditorComponent,\r\n  ],\r\n})\r\nexport class MonacoEditorModule { }\r\n","// Inspired by https://schneidenbach.gitbooks.io/typescript-cookbook/content/nameof-operator.html\r\nexport const nameof = <T>(name: keyof T) => name;\r\n","import type * as Monaco from 'monaco-editor';\r\nimport { JsonSchema, Monaco2sxc } from '.';\r\nimport { Snippet } from '../code-editor/models/snippet.model';\r\nimport { Tooltip } from '../code-editor/models/tooltip.model';\r\n\r\nexport const voidElements = 'area, base, br, col, embed, hr, img, input, link, meta, param, source, track, wbr'\r\n  .split(',')\r\n  .map(el => el.trim().toLocaleLowerCase());\r\n\r\nexport class MonacoInstance {\r\n  /** Editor instance configuration */\r\n  private editorInstance: Monaco.editor.IStandaloneCodeEditor;\r\n  private completionItemProviders: Monaco.IDisposable[];\r\n  private jsTypingsLib?: Monaco.IDisposable;\r\n  private resizeObserver: ResizeObserver;\r\n  private globalCache: Monaco2sxc;\r\n  private cachedValue: string;\r\n  private valueChangedCallback?: (value: string) => void;\r\n  private focusedCallback?: () => void;\r\n  private blurredCallback?: () => void;\r\n\r\n  constructor(\r\n    /** Global Monaco configuration */\r\n    private monaco: typeof Monaco,\r\n    private filename: string,\r\n    value: string,\r\n    container: HTMLElement,\r\n    options: Monaco.editor.IStandaloneEditorConstructionOptions,\r\n    private snippets: Snippet[],\r\n    private tooltips: Tooltip[],\r\n  ) {\r\n    this.globalCache = this.createGlobalCache(monaco);\r\n    this.defineThemes(this.globalCache, this.monaco);\r\n    this.cachedValue = value;\r\n    this.editorInstance = this.createInstance(this.monaco, filename, value, container, options);\r\n    this.completionItemProviders = this.addSnippets(this.monaco, this.editorInstance);\r\n    this.resizeObserver = this.createResizeObserver(container, this.editorInstance);\r\n    this.restoreState(this.globalCache, this.editorInstance);\r\n    this.addEvents(this.editorInstance);\r\n  }\r\n\r\n  destroy(): void {\r\n    this.saveState(this.globalCache, this.editorInstance);\r\n    this.resizeObserver.disconnect();\r\n    this.completionItemProviders.forEach(completionItemProvider => completionItemProvider.dispose());\r\n    this.jsTypingsLib?.dispose();\r\n    this.editorInstance.getModel().dispose();\r\n    this.editorInstance.dispose();\r\n  }\r\n\r\n  updateValue(value: string): void {\r\n    if (this.cachedValue === value) { return; }\r\n    this.cachedValue = value;\r\n    this.editorInstance.getModel().setValue(value);\r\n  }\r\n\r\n  focus(): void {\r\n    this.editorInstance.focus();\r\n  }\r\n\r\n  onValueChange(callback: (value: string) => void): void {\r\n    this.valueChangedCallback = callback;\r\n  }\r\n\r\n  onFocus(callback: () => void): void {\r\n    this.focusedCallback = callback;\r\n  }\r\n\r\n  onBlur(callback: () => void): void {\r\n    this.blurredCallback = callback;\r\n  }\r\n\r\n  insertSnippet(snippet: string): void {\r\n    const snippetController = this.editorInstance\r\n      .getContribution<Monaco.editor.IEditorContribution & { insert(template: string, opts?: Record<string, any>): void; }>('snippetController2');\r\n    snippetController.insert(snippet);\r\n  }\r\n\r\n  setSnippets(snippets: Snippet[]): void {\r\n    this.snippets = snippets;\r\n  }\r\n\r\n  setTooltips(tooltips: Tooltip[]): void {\r\n    this.tooltips = tooltips;\r\n  }\r\n\r\n  setJsonSchema(jsonSchema?: JsonSchema): void {\r\n    const uri = this.editorInstance.getModel().uri.toString();\r\n    const oldJsonDiagnostics = this.monaco.languages.json.jsonDefaults.diagnosticsOptions;\r\n    const exists = oldJsonDiagnostics.schemas?.some(schema => schema.fileMatch[0] === uri) ?? false;\r\n\r\n    const newSchema: Monaco.languages.json.DiagnosticsOptions['schemas'][0] = jsonSchema?.type === 'link'\r\n      ? { uri: jsonSchema.value, fileMatch: [uri] }\r\n      : jsonSchema?.type === 'raw'\r\n        ? { uri, fileMatch: [uri], schema: JSON.parse(jsonSchema.value) }\r\n        : undefined;\r\n\r\n    if (!exists && !newSchema) { return; }\r\n\r\n    const newJsonDiagnostics: Monaco.languages.json.DiagnosticsOptions = {\r\n      ...oldJsonDiagnostics,\r\n      enableSchemaRequest: true,\r\n      schemas: exists && !newSchema\r\n        ? oldJsonDiagnostics.schemas.filter(schema => schema.fileMatch[0] !== uri)\r\n        : exists\r\n          ? oldJsonDiagnostics.schemas.map(schema => schema.fileMatch[0] === uri ? newSchema : schema)\r\n          : [...(oldJsonDiagnostics.schemas ?? []), newSchema],\r\n    };\r\n\r\n    this.monaco.languages.json.jsonDefaults.setDiagnosticsOptions(newJsonDiagnostics);\r\n  }\r\n\r\n  setJsonComments(comments?: Monaco.languages.json.SeverityLevel): void {\r\n    if (!comments) { return; }\r\n\r\n    const jsonDiagnostics: Monaco.languages.json.DiagnosticsOptions = {\r\n      ...this.monaco.languages.json.jsonDefaults.diagnosticsOptions,\r\n      comments,\r\n    };\r\n    this.monaco.languages.json.jsonDefaults.setDiagnosticsOptions(jsonDiagnostics);\r\n  }\r\n\r\n  setJsDiagnostics(options: Monaco.languages.typescript.DiagnosticsOptions): void {\r\n    if (!options) { return; }\r\n\r\n    const javascriptDiagnostics: Monaco.languages.typescript.DiagnosticsOptions = {\r\n      ...this.monaco.languages.typescript.javascriptDefaults.getDiagnosticsOptions(),\r\n      ...options,\r\n    };\r\n    this.monaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions(javascriptDiagnostics);\r\n  }\r\n\r\n  setJsTypings(typings: string): void {\r\n    if (!typings) {\r\n      this.jsTypingsLib?.dispose();\r\n      return;\r\n    }\r\n    this.jsTypingsLib = this.monaco.languages.typescript.javascriptDefaults.addExtraLib(typings, `js-typings-${this.filename}`);\r\n  }\r\n\r\n  private createGlobalCache(monaco: typeof Monaco & { _2sxc?: Monaco2sxc }): Monaco2sxc {\r\n    if (monaco._2sxc == null) {\r\n      const _2sxc: Monaco2sxc = {\r\n        themesAreDefined: false,\r\n        savedStates: {},\r\n      };\r\n      monaco._2sxc = _2sxc;\r\n    }\r\n    return monaco._2sxc;\r\n  }\r\n\r\n  /** Registers our themes. Themes are global. Run before creating editor */\r\n  private defineThemes(globalCache: Monaco2sxc, monaco: typeof Monaco): void {\r\n    // there is currently no official way to get defined themes from Monaco to check if some theme was already defined\r\n    if (globalCache.themesAreDefined) { return; }\r\n    globalCache.themesAreDefined = true;\r\n\r\n    monaco.editor.defineTheme('2sxc-dark', {\r\n      base: 'vs-dark',\r\n      inherit: true,\r\n      rules: [\r\n        { token: 'metatag.cs', foreground: 'ffff00' },\r\n      ],\r\n      colors: {\r\n      },\r\n    });\r\n  }\r\n\r\n  private createInstance(\r\n    monaco: typeof Monaco,\r\n    filename: string,\r\n    value: string,\r\n    container: HTMLElement,\r\n    options: Monaco.editor.IStandaloneEditorConstructionOptions,\r\n  ): Monaco.editor.IStandaloneCodeEditor {\r\n    const editorInstance = monaco.editor.create(container, options);\r\n    const editorModelUri = monaco.Uri.file(filename);\r\n    const editorModel = monaco.editor.createModel(value, undefined, editorModelUri);\r\n    editorInstance.setModel(editorModel);\r\n    return editorInstance;\r\n  }\r\n\r\n  private saveState(globalCache: Monaco2sxc, editorInstance: Monaco.editor.IStandaloneCodeEditor): void {\r\n    const uri = editorInstance.getModel().uri.toString();\r\n    const viewState = JSON.stringify(editorInstance.saveViewState());\r\n\r\n    if (globalCache.savedStates[uri] == null) {\r\n      globalCache.savedStates[uri] = { viewState };\r\n    } else {\r\n      globalCache.savedStates[uri].viewState = viewState;\r\n    }\r\n  }\r\n\r\n  private restoreState(globalCache: Monaco2sxc, editorInstance: Monaco.editor.IStandaloneCodeEditor): void {\r\n    const uri = editorInstance.getModel().uri.toString();\r\n    const savedState = globalCache.savedStates[uri];\r\n    if (savedState == null) { return; }\r\n\r\n    const viewState: Monaco.editor.ICodeEditorViewState = JSON.parse(savedState.viewState);\r\n    editorInstance.restoreViewState(viewState);\r\n  }\r\n\r\n  private addSnippets(monaco: typeof Monaco, editorInstance: Monaco.editor.IStandaloneCodeEditor): Monaco.IDisposable[] {\r\n    const completionItemProviders = [\r\n      monaco.languages.registerCompletionItemProvider(editorInstance.getModel().getLanguageId(), {\r\n        triggerCharacters: ['>'],\r\n        provideCompletionItems: (model, position) => {\r\n          if (editorInstance.getModel() !== model) { return { suggestions: [] }; }\r\n\r\n          const textUntilPosition: string = model.getValueInRange({\r\n            startLineNumber: position.lineNumber,\r\n            startColumn: 1,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column,\r\n          });\r\n\r\n          // sometimes trigger character is wrong\r\n          const trigger = textUntilPosition[textUntilPosition.length - 1];\r\n          if (trigger !== '>') { return { suggestions: [] }; }\r\n\r\n          const tagStartIndex = textUntilPosition.lastIndexOf('<');\r\n          if (tagStartIndex === -1) { return { suggestions: [] }; }\r\n\r\n          const codeInTag = textUntilPosition.substring(tagStartIndex);\r\n          // check that > is not in between quotes like in <div class=\"car>\"\r\n          let quotes = 0;\r\n          Array.from(codeInTag).forEach(c => {\r\n            if (c === '\"') { quotes++; }\r\n          });\r\n          if (quotes % 2 !== 0) { return { suggestions: [] }; }\r\n          // check that it's not a closing tag\r\n          if (codeInTag.startsWith('</')) { return { suggestions: [] }; }\r\n          // check that tag is not already closed\r\n          if (codeInTag.indexOf('>') !== codeInTag.length - 1) { return { suggestions: [] }; }\r\n\r\n          // tag name ends with space or tag is closed completely\r\n          let tagEndIndex = codeInTag.indexOf(' ');\r\n          if (tagEndIndex === -1) {\r\n            tagEndIndex = codeInTag.indexOf('>');\r\n          }\r\n          if (tagEndIndex === -1) { return { suggestions: [] }; }\r\n\r\n          const tag = codeInTag.substring(1, tagEndIndex);\r\n          if (!tag) { return { suggestions: [] }; }\r\n          if (voidElements.includes(tag.toLocaleLowerCase())) { return { suggestions: [] }; }\r\n          if (!/[a-zA-Z0-9_-]/.test(tag)) { return { suggestions: [] }; }\r\n\r\n          const suggestions: Monaco.languages.CompletionItem[] = [{\r\n            label: `</${tag}>`,\r\n            kind: monaco.languages.CompletionItemKind.Snippet,\r\n            insertText: `\\$0</${tag}>`,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            range: {\r\n              startLineNumber: position.lineNumber,\r\n              endLineNumber: position.lineNumber,\r\n              startColumn: position.column,\r\n              endColumn: position.column,\r\n            },\r\n          }];\r\n          return { suggestions };\r\n        },\r\n      }),\r\n\r\n      monaco.languages.registerCompletionItemProvider(editorInstance.getModel().getLanguageId(), {\r\n        provideCompletionItems: (model, position) => {\r\n          if (this.snippets == null || editorInstance.getModel() !== model) { return { suggestions: [] }; }\r\n\r\n          const word = model.getWordUntilPosition(position);\r\n          const suggestions = this.snippets.map(snippet => {\r\n            if (!snippet.content) { return; }\r\n            const suggestion: Monaco.languages.CompletionItem = {\r\n              label: snippet.name,\r\n              kind: monaco.languages.CompletionItemKind.Snippet,\r\n              documentation: `${snippet.title ?? ''}\\n${snippet.help ?? ''}\\n${snippet.links ?? ''}`,\r\n              insertText: snippet.content,\r\n              insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n              range: {\r\n                startLineNumber: position.lineNumber,\r\n                endLineNumber: position.lineNumber,\r\n                startColumn: word.startColumn,\r\n                endColumn: word.endColumn\r\n              },\r\n            };\r\n            return suggestion;\r\n          }).filter(suggestion => !!suggestion);\r\n          return { suggestions };\r\n        },\r\n      }),\r\n\r\n      monaco.languages.registerHoverProvider(editorInstance.getModel().getLanguageId(), {\r\n        provideHover: (model, position) => {\r\n          if (this.tooltips == null || editorInstance.getModel() !== model) { return; }\r\n\r\n          const word = model.getWordAtPosition(position);\r\n          if (!word) { return; }\r\n\r\n          const tooltip = this.tooltips.find(i => i.Term === word.word);\r\n          if (!tooltip) { return; }\r\n\r\n          return {\r\n            contents: tooltip.Help.map(value => {\r\n              const content: Monaco.IMarkdownString = {\r\n                value,\r\n              };\r\n              return content;\r\n            }),\r\n            range: {\r\n              startLineNumber: position.lineNumber,\r\n              endLineNumber: position.lineNumber,\r\n              startColumn: word.startColumn,\r\n              endColumn: word.endColumn,\r\n            },\r\n          };\r\n        }\r\n      }),\r\n    ];\r\n\r\n    return completionItemProviders;\r\n  }\r\n\r\n  private createResizeObserver(container: HTMLElement, editorInstance: Monaco.editor.IStandaloneCodeEditor): ResizeObserver {\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      editorInstance.layout();\r\n    });\r\n    resizeObserver.observe(container);\r\n    return resizeObserver;\r\n  }\r\n\r\n  private addEvents(editorInstance: Monaco.editor.IStandaloneCodeEditor): void {\r\n    editorInstance.getModel().onDidChangeContent(() => {\r\n      const newValue = editorInstance.getModel().getValue();\r\n      if (newValue === this.cachedValue) { return; }\r\n      this.cachedValue = newValue;\r\n      this.valueChangedCallback?.(newValue);\r\n    });\r\n\r\n    editorInstance.onDidFocusEditorWidget(() => {\r\n      this.focusedCallback?.();\r\n    });\r\n\r\n    editorInstance.onDidBlurEditorWidget(() => {\r\n      this.blurredCallback?.();\r\n    });\r\n\r\n    // this.editorInstance.onDidChangeModelDecorations(e => {\r\n    //   const value = this.editorInstance.getModel().getValue();\r\n    //   const markers = this.monaco.editor.getModelMarkers({}).filter(marker => marker.resource.path === `/${this.filename}`);\r\n    //   const valid = !markers.some(\r\n    //     marker => marker.severity === this.monaco.MarkerSeverity.Error || marker.severity === this.monaco.MarkerSeverity.Warning\r\n    //   );\r\n    // });\r\n\r\n    // this.monaco.editor.onDidChangeMarkers(() => {\r\n    //   // markers updates are async and lagging behind value updates\r\n    //   const markers = this.monaco.editor.getModelMarkers({}).filter(marker => marker.resource.path === `/${this.filename}`);\r\n    //   if (markers.some(marker => marker.severity === this.monaco.MarkerSeverity.Error)) {\r\n    //     // has errors\r\n    //   } else if (markers.some(marker => marker.severity === this.monaco.MarkerSeverity.Warning)) {\r\n    //     // has warnings\r\n    //   } else {\r\n    //     // has no errors or warnings\r\n    //   }\r\n    // });\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport type * as Monaco from 'monaco-editor';\r\nimport { JsonSchema } from '.';\r\nimport { Snippet } from '../code-editor/models/snippet.model';\r\nimport { Tooltip } from '../code-editor/models/tooltip.model';\r\nimport { EavWindow } from '../shared/models/eav-window.model';\r\nimport { nameof } from '../shared/typescript-helpers';\r\nimport { MonacoInstance } from './monaco-instance';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-monaco-editor',\r\n  templateUrl: './monaco-editor.component.html',\r\n  styleUrls: ['./monaco-editor.component.scss'],\r\n})\r\nexport class MonacoEditorComponent implements AfterViewInit, OnChanges, OnDestroy {\r\n  @ViewChild('editor') private editorRef: ElementRef<HTMLElement>;\r\n  @Input() filename: string;\r\n  @Input() value: string;\r\n  @Input() snippets?: Snippet[];\r\n  @Input() tooltips?: Tooltip[];\r\n  @Input() options?: Monaco.editor.IStandaloneEditorConstructionOptions;\r\n  @Input() jsonSchema?: JsonSchema;\r\n  @Input() jsonComments?: Monaco.languages.json.SeverityLevel;\r\n  @Input() jsTypings?: string;\r\n  @Input() jsDiagnostics?: Monaco.languages.typescript.DiagnosticsOptions;\r\n  @Input() autoFocus = false;\r\n  @Output() private valueChanged = new EventEmitter<string>();\r\n  @Output() private focused = new EventEmitter<undefined>();\r\n  @Output() private blurred = new EventEmitter<undefined>();\r\n\r\n  private monaco?: typeof Monaco;\r\n  private monacoInstance?: MonacoInstance;\r\n\r\n  constructor() { }\r\n\r\n  ngAfterViewInit(): void {\r\n    window.require.config({\r\n      paths: {\r\n        vs: ['https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.33.0/min/vs'],\r\n      },\r\n    });\r\n\r\n    window.require(['vs/editor/editor.main'], (monaco: typeof Monaco) => {\r\n      this.monaco = monaco;\r\n      this.createEditor(this.autoFocus);\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes[nameof<MonacoEditorComponent>('filename')] != null && this.monacoInstance != null) {\r\n      this.monacoInstance.destroy();\r\n      this.createEditor(true);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('value')] != null) {\r\n      this.monacoInstance?.updateValue(this.value);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('jsonSchema')] != null) {\r\n      this.monacoInstance?.setJsonSchema(this.jsonSchema);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('jsonComments')] != null) {\r\n      this.monacoInstance?.setJsonComments(this.jsonComments);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('snippets')] != null) {\r\n      this.monacoInstance?.setSnippets(this.snippets);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('tooltips')] != null) {\r\n      this.monacoInstance?.setTooltips(this.tooltips);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('jsTypings')] != null) {\r\n      this.monacoInstance?.setJsTypings(this.jsTypings);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('jsDiagnostics')] != null) {\r\n      this.monacoInstance?.setJsDiagnostics(this.jsDiagnostics);\r\n    }\r\n  }\r\n\r\n  insertSnippet(snippet: string): void {\r\n    this.monacoInstance?.insertSnippet(snippet);\r\n    this.monacoInstance?.focus();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.monacoInstance?.destroy();\r\n  }\r\n\r\n  private createEditor(autoFocus: boolean): void {\r\n    this.monacoInstance = new MonacoInstance(\r\n      this.monaco, this.filename, this.value, this.editorRef.nativeElement, this.options, this.snippets, this.tooltips,\r\n    );\r\n\r\n    this.monacoInstance.setJsonSchema(this.jsonSchema);\r\n    this.monacoInstance.setJsonComments(this.jsonComments);\r\n    this.monacoInstance.setJsTypings(this.jsTypings);\r\n    this.monacoInstance.setJsDiagnostics(this.jsDiagnostics);\r\n\r\n    this.monacoInstance.onValueChange(value => {\r\n      this.valueChanged.emit(value);\r\n    });\r\n\r\n    this.monacoInstance.onFocus(() => {\r\n      this.focused.emit();\r\n    });\r\n\r\n    this.monacoInstance.onBlur(() => {\r\n      this.blurred.emit();\r\n    });\r\n\r\n    if (autoFocus) {\r\n      this.monacoInstance.focus();\r\n    }\r\n  }\r\n}\r\n","<div class=\"editor\" #editor></div>\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\" [ngSwitch]=\"isError\">\r\n  <mat-hint *ngSwitchCase=\"false\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-hint>\r\n\r\n  <mat-error *ngSwitchCase=\"true\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-error>\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { GlobalConfigService } from '../../edit/shared/store/ngrx-data';\r\n\r\n@Directive({ selector: '[appToggleDebug]' })\r\nexport class ToggleDebugDirective {\r\n\r\n  constructor(private globalConfigService: GlobalConfigService) { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    const CTRL_SHIFT_ALT_CLICK = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.shiftKey && event.altKey;\r\n    if (CTRL_SHIFT_ALT_CLICK) {\r\n      this.globalConfigService.toggleDebugEnabled();\r\n      window.getSelection().removeAllRanges();\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeHtml' })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader, TranslateModuleConfig } from '@ngx-translate/core';\r\n\r\nexport function buildTranslateConfiguration(factory: (http: HttpClient) => TranslateLoader): TranslateModuleConfig {\r\n  const config: TranslateModuleConfig = {\r\n    loader: {\r\n      provide: TranslateLoader,\r\n      useFactory: factory,\r\n      deps: [HttpClient],\r\n    },\r\n    defaultLanguage: 'en',\r\n    isolate: true,\r\n  };\r\n  return config;\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader } from '@ngx-translate/core';\r\nimport { catchError, Observable, of } from 'rxjs';\r\n\r\n/**\r\n * This loader should catch a 404 if the file doesn't exist and not result in errors.\r\n * https://stackoverflow.com/questions/47391613/how-to-set-a-fallback-assets-i18n-en-json-when-url-is-not-available-ngx-trans\r\n */\r\nexport class TranslateLoaderWithErrorHandling implements TranslateLoader {\r\n  constructor(private http: HttpClient, private prefix: string, private suffix: string) { }\r\n\r\n  getTranslation(lang: string): Observable<Record<string, any>> {\r\n    return this.http.get<Record<string, any>>(`${this.prefix}${lang}${this.suffix}`).pipe(\r\n      catchError(error => {\r\n        console.warn(`Translation: Failed to get language '${lang}' from ${this.prefix}`, error);\r\n        return of({});\r\n      }),\r\n    );\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}