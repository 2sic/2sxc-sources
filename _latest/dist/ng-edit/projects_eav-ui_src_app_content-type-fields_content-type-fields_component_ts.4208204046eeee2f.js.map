{"version":3,"file":"projects_eav-ui_src_app_content-type-fields_content-type-fields_component_ts.4208204046eeee2f.js","mappings":"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","names":["i0","_r9","ctx_r8","openMetadata","ctx_r0","metadataCount","ctx_r1","_r11","ctx_r10","shareOrInherit","ctx_r2","shareText","shareOrInheritIcon","_r13","ctx_r12","ctx_r3","_r15","ctx_r14","openPermissions","ctx_r4","field","Permissions","Count","ctx_r5","_r17","ctx_r16","rename","ctx_r18","deleteField","ctx_r7","EditInfo","DisableRename","DisableDelete","IsTitle","ContentTypeFieldsActionsComponent","BaseSubsinkComponent","constructor","super","ngOnDestroy","agInit","params","this","data","Metadata","Object","keys","filter","key","length","enablePermissions","InputType","InputTypeConstants","StringWysiwyg","Type","DataTypeConstants","Hyperlink","clickToConfigure","ss","SysSettings","Share","Guid","InheritMetadataOf","refresh","onOpenMetadata","onRename","onOpenPermissions","onDelete","onShareOrInherit","static","t","core","Xpm","selectors","features","decls","vars","consts","template","rf","ctx","ContentTypeFieldsActionsComponent_Conditional_1_Template","ContentTypeFieldsActionsComponent_Conditional_2_Template","ContentTypeFieldsActionsComponent_Conditional_3_Template","ContentTypeFieldsActionsComponent_Conditional_4_Template","ContentTypeFieldsActionsComponent_Conditional_5_Template","ContentTypeFieldsActionsComponent_Conditional_6_Template","ContentTypeFieldsActionsComponent_ng_template_12_Template","DisableMetadata","DisableEdit","_r6","_r3","changeInputType","value","ContentTypeFieldsInputTypeComponent","onChangeInputType","ContentTypeFieldsInputTypeComponent_Conditional_0_Template","ContentTypeFieldsInputTypeComponent_Conditional_1_Template","ContentTypeFieldsSpecialComponent","hasFormulas","HasFormulas","isEphemeral","IsEphemeral","ContentTypeFieldsSpecialComponent_Conditional_1_Template","ContentTypeFieldsSpecialComponent_Conditional_2_Template","setTitle","isTitle","ContentTypeFieldsTitleComponent","onSetTitle","ContentTypeFieldsTitleComponent_Conditional_1_Template","ContentTypeFieldsTitleComponent_Conditional_2_Template","ReadOnly","ContentTypeFieldsTypeComponent","icon","calculateTypeIcon","SharingOrInheriting","None","Sharing","Inheriting","closeDialog","message","dialogData","_r12","ctx_r11","chooseShare","_r14","ctx_r13","chooseInherit","field_r24","ContentType","Name","field_r25","StaticName","field_r26","row_r27","_r29","$implicit","ctx_r28","inheritField","_c0","ctx_r23","guid","ShareOrInheritDialogComponent_Conditional_9_Conditional_4_th_3_Template","ShareOrInheritDialogComponent_Conditional_9_Conditional_4_td_4_Template","ShareOrInheritDialogComponent_Conditional_9_Conditional_4_th_6_Template","ShareOrInheritDialogComponent_Conditional_9_Conditional_4_td_7_Template","ShareOrInheritDialogComponent_Conditional_9_Conditional_4_th_9_Template","ShareOrInheritDialogComponent_Conditional_9_Conditional_4_td_10_Template","ShareOrInheritDialogComponent_Conditional_9_Conditional_4_tr_11_Template","ShareOrInheritDialogComponent_Conditional_9_Conditional_4_tr_12_Template","shareableFields","displayedShareableFieldsColumns","ShareOrInheritDialogComponent_Conditional_9_Conditional_1_Template","ShareOrInheritDialogComponent_Conditional_9_Conditional_2_Template","ShareOrInheritDialogComponent_Conditional_9_Conditional_3_Template","ShareOrInheritDialogComponent_Conditional_9_Conditional_4_Template","state","sharingOrInheriting","ShareOrInheritDialogComponent_Conditional_9_contFlowTmp","viewModel$","_r31","ctx_r30","ctx_r32","save","isSaveDisabled","ShareOrInheritDialogComponent","dialogRef","contentTypesFieldsService","featuresService","dialog","viewContainerRef","changeDetectorRef","initialState","shareableFields$","BehaviorSubject","undefined","ngOnInit","title","getShareableFieldsFor","AttributeId","combineLatest","pipe","map","next","isEnabled$","FeatureNames","FieldShareConfigManagement","take","subscribe","isEnabled","subscription","add","share","Id","close","inherit","FeatureComponentBase","openDialog","MAT_DIALOG_DATA","i1","i2","i3","ShareOrInheritDialogComponent_Conditional_5_Template","ShareOrInheritDialogComponent_Conditional_7_Template","ShareOrInheritDialogComponent_Conditional_8_Template","ShareOrInheritDialogComponent_Conditional_9_Template","ShareOrInheritDialogComponent_Conditional_10_Template","$event","onRowDragEnter","onRowDragEnd","ctx_r6","onRowDragMove","onGridReady","onSortChanged","ctx_r9","onFilterChanged","contentType","Label","fields","gridOptions","sortApplied","filterApplied","ContentTypeFieldsComponent","BaseComponent","router","route","contentTypesService","snackBar","contentType$","fields$","buildGridOptions","rowDragSuppressed","contentTypeStaticName","snapshot","paramMap","get","fetchFields","refreshOnChildClosedShallow","complete","gridApi","api","columnApi","event","setEnableCellTextSelection","setSuppressRowDrag","idArray","reOrder","movingNode","node","overNode","overData","newFields","fromIndex","indexOf","toIndex","moveInArray","clearFocusedCell","arr","element","splice","columnStates","getColumnState","some","sort","suppressRowDrag","filterModel","getFilterModel","fieldsFiltered","shouldSuppress","navigate","relativeTo","nameCellRenderer","currentField","inputType","EmptyFieldHelpers","endsPreviousGroup","isGroupOpen","isGroupStart","isGroupEnd","callback","retrieveContentType","of","getFields","forkJoin","editFieldMetadata","ConfigTypes","open","duration","form","items","createItemDefinition","formUrl","convertFormToUrl","metadataType","keyForMdLookup","replace","newItemTypeName","existingMd","EntityId","ContentTypeName","For","Target","eavConstants","metadata","attribute","target","TargetType","targetType","Number","Prefill","delete","confirm","GoToPermissions","getUrlAttribute","url","GoToMetadata","autoFocus","width","afterClosed","defaultGridOptions","getRowClass","rowClass","DisableSort","push","columnDefs","rowDrag","cellClass","split","valueGetter","cellRenderer","cellRendererParams","flex","minWidth","sortable","onCellClicked","headerClass","headerName","substring","All","Notes","pinned","i4","i5","ContentTypeFieldsComponent_Conditional_0_Template","ContentTypeFieldsComponent_contFlowTmp","FeatureIconIndicatorComponent","_angular_core__WEBPACK_IMPORTED_MODULE_0__","FeatureIconIndicatorComponent_Conditional_0_Template","show$","AppSyncWithSiteFiles","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","LightSpeed","ContentSecurityPolicy","PermissionsByLanguage","id_r4","copyToClipboard","link_r7","findOutMore","FeatureInfoDialogComponent_Conditional_0_Conditional_15_Template","FeatureInfoDialogComponent_Conditional_0_Conditional_17_Template","feature","Description","IsEnabled","FeatureInfoDialogComponent_Conditional_0_contFlowTmp","NameId","Link","FeatureInfoDialogComponent","featureDetailService","getFeatureDetails","text","link","window","FeatureInfoDialogComponent_Conditional_0_Template","FeatureInfoDialogComponent_contFlowTmp","featureNameId","featureNameId$","showIf","showIf$","feature$","switchMap","featName","get$","feat","featureId","markForCheck","lG2","inputs","refreshOnChildClosedDeep","events","NavigationEnd","startWith","firstChild","pairwise","hadChild","hasChild","_angular_core__WEBPACK_IMPORTED_MODULE_6__","accentedSort","animateRows","enableCellTextSelection","headerHeight","suppressScrollOnNewData","valueCache","defaultColDef","filterParams","newRowsAction","tooltipShowDelay","tooltipHideDelay","suppressMovableColumns","ToggleDebugDirective","globalConfigService","onClick","navigator","platform","match","metaKey","ctrlKey","shiftKey","altKey","toggleDebugEnabled","getSelection","removeAllRanges","_angular_core__WEBPACK_IMPORTED_MODULE_1__","hostBindings","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","selected","rangeCount","getRangeAt","select","execCommand","removeChild","addRange","SafeHtmlPipe","sanitizer","transform","html","bypassSecurityTrustHtml","Yjl","pure"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/content-type-fields/content-type-fields-actions/content-type-fields-actions.component.html","./projects/eav-ui/src/app/content-type-fields/content-type-fields-actions/content-type-fields-actions.component.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields-input-type/content-type-fields-input-type.component.html","./projects/eav-ui/src/app/content-type-fields/content-type-fields-input-type/content-type-fields-input-type.component.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields-special/content-type-fields-special.component.html","./projects/eav-ui/src/app/content-type-fields/content-type-fields-special/content-type-fields-special.component.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields-title/content-type-fields-title.component.html","./projects/eav-ui/src/app/content-type-fields/content-type-fields-title/content-type-fields-title.component.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields-type/content-type-fields-type.component.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields-type/content-type-fields-type.component.html","./projects/eav-ui/src/app/content-type-fields/share-or-inherit-dialog/share-or-inherit-dialog-models.ts","./projects/eav-ui/src/app/content-type-fields/share-or-inherit-dialog/share-or-inherit-dialog.component.html","./projects/eav-ui/src/app/content-type-fields/share-or-inherit-dialog/share-or-inherit-dialog.component.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields.component.html","./projects/eav-ui/src/app/content-type-fields/content-type-fields.component.ts","./projects/eav-ui/src/app/features/feature-icon-indicator/feature-icon-indicator.component.html","./projects/eav-ui/src/app/features/feature-icon-indicator/feature-icon-indicator.component.ts","./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts","./projects/eav-ui/src/app/shared/components/base-component/base.component.ts","./projects/eav-ui/src/app/shared/constants/default-grid-options.constants.ts","./projects/eav-ui/src/app/shared/directives/toggle-debug.directive.ts","./projects/eav-ui/src/app/shared/helpers/copy-to-clipboard.helper.ts","./projects/eav-ui/src/app/shared/pipes/safe-html.pipe.ts"],"sourcesContent":["<div class=\"actions-component\">\r\n  @if (!field.EditInfo.DisableMetadata) {\r\n    <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Metadata\"\r\n      (click)=\"openMetadata()\">\r\n      <mat-icon [matBadge]=\"metadataCount\" matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadgeHidden]=\"!metadataCount\"\r\n      matBadgePosition=\"below after\" aria-hidden=\"false\">local_offer</mat-icon>\r\n    </div>\r\n  }\r\n  @if (field.EditInfo.DisableMetadata) {\r\n    <div class=\"eav-grid-action-button disabled\">\r\n      <mat-icon [matBadge]=\"metadataCount\" matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadgeDisabled=\"true\"\r\n        [matBadgeHidden]=\"!metadataCount\" matBadgePosition=\"below after\" aria-hidden=\"false\">\r\n        local_offer\r\n      </mat-icon>\r\n    </div>\r\n  }\r\n\r\n  <!--\r\n    TODO: @SDV pls enhance as follows\r\n    ✅ If share is on or InheritMetadata is on, show various icons (already done)\r\n    ⬛ If neither is on, it should not show an icon, until mouseover, then it should show the share icon to indicate it can be added\r\n    ⬛ If the click should add sharing, open a dialog to configure share\r\n        - if there is no share it should Title \"Field Metadata Sharing\" show with the question \"Do you want to enable sharing to this field?\"\r\n          - if yes, it should call an endpoint on field/share(appId, attributeId, share: true, hide: false) (just add a todo in the code which will call the endpoint)\r\n        - If Share is already enabled, the Title should be \"Field Metadata Sharing\" (same) and content \"Shared as: [field.Guid]\"\r\n        - If it's in inherit mode, different dialog Title \"Field Inherits Metadata\", content \"Inherits from: [field.SysSettings.InheritMetadataOf]\"\r\n          - there is no endpoint to call here, because inherit is configured on create (separate todo)\r\n  -->\r\n\r\n  <!-- *ngIf is necessary as empty mat icon still consumes some space-->\r\n  @if (shareOrInheritIcon() != '') {\r\n    <div class=\"eav-grid-action-button highlight\"\r\n      matRipple [tippy]=\"shareText()\" (click)=\"shareOrInherit()\">\r\n      <mat-icon aria-hidden=\"false\">\r\n        {{ shareOrInheritIcon() }}\r\n      </mat-icon>\r\n    </div>\r\n  }\r\n  @if (shareOrInheritIcon() == '') {\r\n    <div class=\"eav-grid-action-button disabled eav-hover-icon-div\"\r\n      matRipple [tippy]=\"shareText()\" (click)=\"shareOrInherit()\">\r\n      <mat-icon aria-hidden=\"false\" class=\"eav-hover-icon disabled\">\r\n        share\r\n      </mat-icon>\r\n    </div>\r\n  }\r\n\r\n  @if (!field.EditInfo.DisableEdit && enablePermissions) {\r\n    <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Permissions\"\r\n      (click)=\"openPermissions()\">\r\n      <mat-icon [matBadge]=\"field.Permissions.Count\" matBadgeColor=\"accent\" matBadgeSize=\"small\"\r\n        [matBadgeHidden]=\"!field.Permissions.Count\" matBadgePosition=\"below after\" aria-hidden=\"false\">\r\n        person\r\n      </mat-icon>\r\n    </div>\r\n  }\r\n  @if (field.EditInfo.DisableEdit || !enablePermissions) {\r\n    <div class=\"eav-grid-action-button disabled\">\r\n      <mat-icon [matBadge]=\"field.Permissions.Count\" matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadgeDisabled=\"true\"\r\n        [matBadgeHidden]=\"!field.Permissions.Count\" matBadgePosition=\"below after\" aria-hidden=\"false\">\r\n        person\r\n      </mat-icon>\r\n    </div>\r\n  }\r\n\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"More\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"grid-more-menu\">\r\n  <ng-template matMenuContent>\r\n    <button mat-menu-item [disabled]=\"field.EditInfo.DisableRename\" (click)=\"rename()\">\r\n      <mat-icon>text_fields</mat-icon>\r\n      <span>Rename</span>\r\n    </button>\r\n    <button mat-menu-item [disabled]=\"field.EditInfo.DisableDelete || field.IsTitle\" (click)=\"deleteField()\">\r\n      <mat-icon>delete</mat-icon>\r\n      <span>Delete</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy } from '@angular/core';\r\nimport { DataTypeConstants } from '../constants/data-type.constants';\r\nimport { InputTypeConstants } from '../constants/input-type.constants';\r\nimport { Field } from '../models/field.model';\r\nimport { ContentTypeFieldsActionsParams } from './content-type-fields-actions.models';\r\nimport { BaseSubsinkComponent } from '../../shared/components/base-subsink-component/base-subsink.component';\r\n\r\n@Component({\r\n  selector: 'app-content-type-fields-actions',\r\n  templateUrl: './content-type-fields-actions.component.html',\r\n  styleUrls: ['./content-type-fields-actions.component.scss'],\r\n})\r\nexport class ContentTypeFieldsActionsComponent extends BaseSubsinkComponent implements ICellRendererAngularComp, OnDestroy {\r\n  field: Field;\r\n  metadataCount: number;\r\n  enablePermissions: boolean;\r\n  private params: ICellRendererParams & ContentTypeFieldsActionsParams;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n  \r\n  ngOnDestroy(): void { \r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  agInit(params: ICellRendererParams & ContentTypeFieldsActionsParams): void {\r\n    this.params = params;\r\n    this.field = this.params.data;\r\n    this.metadataCount = this.field.Metadata ? Object.keys(this.field.Metadata).filter(key => key !== 'merged').length : 0;\r\n    this.enablePermissions = this.field.InputType === InputTypeConstants.StringWysiwyg || this.field.Type === DataTypeConstants.Hyperlink;\r\n  }\r\n\r\n  // #region Sharing Info for better icons #SharedFieldDefinition\r\n\r\n  shareText(): string {\r\n    const clickToConfigure = 'click to configure sharing';\r\n    const ss = this.field.SysSettings;\r\n    if (!ss) return clickToConfigure;\r\n    return ss.Share \r\n      ? 'shared enabled as ' + this.field.Guid\r\n      : ss.InheritMetadataOf\r\n        ? 'inherits ' + ss.InheritMetadataOf\r\n        : clickToConfigure;\r\n  }\r\n\r\n  shareOrInheritIcon(): string {\r\n    const ss = this.field.SysSettings;\r\n    if (!ss) return '';\r\n    return ss.Share \r\n      ? 'share'\r\n      : ss.InheritMetadataOf ? 'adjust' : '';\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region Callback Actions\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  openMetadata(): void {\r\n    this.params.onOpenMetadata(this.field);\r\n  }\r\n\r\n  rename(): void {\r\n    this.params.onRename(this.field);\r\n  }\r\n\r\n  openPermissions(): void {\r\n    this.params.onOpenPermissions(this.field);\r\n  }\r\n\r\n  deleteField(): void {\r\n    this.params.onDelete(this.field);\r\n  }\r\n\r\n  shareOrInherit(): void {\r\n    this.params.onShareOrInherit(this.field);\r\n  }\r\n\r\n  // #endregion\r\n}\r\n","@if (!field.EditInfo.DisableEdit) {\r\n  <div matRipple class=\"input-component highlight\" (click)=\"changeInputType()\">\r\n    <div class=\"text\">{{ value }}</div>\r\n    <div class=\"eav-grid-action-button\">\r\n      <mat-icon>arrow_drop_down</mat-icon>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n@if (field.EditInfo.DisableEdit) {\r\n  <div class=\"input-component disabled\">\r\n    <div class=\"text disabled\">{{ value }}</div>\r\n    <div class=\"eav-grid-action-button disabled\">\r\n      <mat-icon>arrow_drop_down</mat-icon>\r\n    </div>\r\n  </div>\r\n}","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Field } from '../models/field.model';\r\nimport { ContentTypeFieldsInputTypeParams } from './content-type-fields-input-type.models';\r\n\r\n@Component({\r\n  selector: 'app-content-type-fields-input-type',\r\n  templateUrl: './content-type-fields-input-type.component.html',\r\n  styleUrls: ['./content-type-fields-input-type.component.scss'],\r\n})\r\nexport class ContentTypeFieldsInputTypeComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n  field: Field;\r\n\r\n  private params: ICellRendererParams & ContentTypeFieldsInputTypeParams;\r\n\r\n  agInit(params: ICellRendererParams & ContentTypeFieldsInputTypeParams): void {\r\n    this.params = params;\r\n    this.value = params.value;\r\n    this.field = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  changeInputType(): void {\r\n    this.params.onChangeInputType(this.field);\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  @if (hasFormulas) {\r\n    <mat-icon tippy=\"Has Formulas\">functions</mat-icon>\r\n  }\r\n  @if (isEphemeral) {\r\n    <mat-icon tippy=\"Ephemeral / Temporary, won't save\">mobiledata_off</mat-icon>\r\n  }\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Field } from '../models/field.model';\r\n\r\n@Component({\r\n  selector: 'app-content-type-fields-special',\r\n  templateUrl: './content-type-fields-special.component.html',\r\n  styleUrls: ['./content-type-fields-special.component.scss'],\r\n})\r\nexport class ContentTypeFieldsSpecialComponent implements ICellRendererAngularComp {\r\n  hasFormulas: boolean;\r\n  isEphemeral: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    const field: Field = params.data;\r\n    this.hasFormulas = field.HasFormulas;\r\n    this.isEphemeral = field.IsEphemeral;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  @if (!field.EditInfo.ReadOnly) {\r\n    <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Use as title field\"\r\n      (click)=\"setTitle()\">\r\n      <mat-icon>{{ isTitle ? 'star' : 'star_outline' }}</mat-icon>\r\n    </div>\r\n  }\r\n  @if (field.EditInfo.ReadOnly) {\r\n    <div class=\"eav-grid-action-button disabled\">\r\n      <mat-icon>{{ isTitle ? 'star' : 'star_outline' }}</mat-icon>\r\n    </div>\r\n  }\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Field } from '../models/field.model';\r\nimport { ContentTypeFieldsTitleParams } from './content-type-fields-title.models';\r\n\r\n@Component({\r\n  selector: 'app-content-type-fields-title',\r\n  templateUrl: './content-type-fields-title.component.html',\r\n  styleUrls: ['./content-type-fields-title.component.scss'],\r\n})\r\nexport class ContentTypeFieldsTitleComponent implements ICellRendererAngularComp {\r\n  isTitle: boolean;\r\n  field: Field;\r\n\r\n  private params: ICellRendererParams & ContentTypeFieldsTitleParams;\r\n\r\n  agInit(params: ICellRendererParams & ContentTypeFieldsTitleParams): void {\r\n    this.params = params;\r\n    this.isTitle = params.value;\r\n    this.field = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  setTitle(): void {\r\n    this.params.onSetTitle(this.field);\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { calculateTypeIcon } from '../content-type-fields.helpers';\r\n\r\n@Component({\r\n  selector: 'app-content-type-fields-type',\r\n  templateUrl: './content-type-fields-type.component.html',\r\n  styleUrls: ['./content-type-fields-type.component.scss'],\r\n})\r\nexport class ContentTypeFieldsTypeComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n  icon: string;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.icon = calculateTypeIcon(this.value);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\" [tippy]=\"value\">\r\n  <mat-icon>{{ icon }}</mat-icon>\r\n</div>\r\n","import { Field } from \"../models/field.model\";\r\n\r\nexport interface ShareOrInheritDialogViewModel {\r\n  shareableFields: Field[];\r\n}\r\n\r\nexport enum SharingOrInheriting {\r\n  None,\r\n  Sharing,\r\n  Inheriting\r\n}","<div class=\"eav-dialog eav-no-scrollbar\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      {{ title | translate }}\r\n    </div>\r\n    @if (initialState != sharingOrInheriting.None) {\r\n      <button mat-icon-button tippy=\"Close dialog\"\r\n        (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    }\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    @if (initialState == sharingOrInheriting.Sharing) {\r\n      <div>{{ message | translate }} {{ dialogData.Guid }}</div>\r\n    }\r\n    @if (initialState == sharingOrInheriting.Inheriting) {\r\n      <div>{{ message| translate }} {{\r\n      dialogData.SysSettings.InheritMetadataOf }}</div>\r\n    }\r\n    @if (initialState == sharingOrInheriting.None) {\r\n      <div>\r\n        @if (state == sharingOrInheriting.None) {\r\n          <button mat-raised-button type=\"button\" class=\"eav-dialog-action-button\"\r\n          (click)=\"chooseShare()\">Share</button>\r\n        }\r\n        @if (state == sharingOrInheriting.None) {\r\n          <button mat-raised-button type=\"button\"\r\n          (click)=\"chooseInherit()\">Inherit</button>\r\n        }\r\n        @if (state == sharingOrInheriting.Sharing) {\r\n          <span>This will share the field definition</span>\r\n        }\r\n        @if (state == sharingOrInheriting.Inheriting && viewModel$ | async; as vm) {\r\n          <mat-card class=\"eav-table-div\">\r\n            <table mat-table [dataSource]=\"vm.shareableFields\" class=\"mat-elevation-z8 eav-fields-table\">\r\n              <ng-container matColumnDef=\"contentType\">\r\n                <th mat-header-cell *matHeaderCellDef> <b>Content Type</b> </th>\r\n                <td mat-cell *matCellDef=\"let field\"> {{field.ContentType.Name}} </td>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"name\">\r\n                <th mat-header-cell *matHeaderCellDef> <b>Name</b> </th>\r\n                <td mat-cell *matCellDef=\"let field\"> {{field.StaticName}} </td>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"type\">\r\n                <th mat-header-cell *matHeaderCellDef> <b>Type</b> </th>\r\n                <td mat-cell *matCellDef=\"let field\"> {{field.Type}} </td>\r\n              </ng-container>\r\n              <tr mat-header-row *matHeaderRowDef=\"displayedShareableFieldsColumns\"></tr>\r\n              <tr mat-row *matRowDef=\"let row; columns: displayedShareableFieldsColumns;\"\r\n              [ngClass]=\"{'eav-selected-row': guid === row.Guid}\" (click)=\"inheritField(row)\"></tr>\r\n            </table>\r\n          </mat-card>\r\n        }\r\n      </div>\r\n    }\r\n  </div>\r\n  @if (initialState == sharingOrInheriting.None) {\r\n    <div class=\"eav-dialog-actions\">\r\n      <button mat-raised-button type=\"button\" class=\"eav-dialog-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"submit\" color=\"accent\" class=\"eav-dialog-action-button\"\r\n        [disabled]=\"isSaveDisabled\" (click)=\"save()\">\r\n        <div class=\"eav-button-feature\">\r\n          <span>Save</span>\r\n          <app-feature-icon-indicator class=\"eav-button-feature-icon\" [featureNameId]=\"'FieldShareConfigManagement'\"></app-feature-icon-indicator>\r\n        </div>\r\n      </button>\r\n    </div>\r\n  }\r\n</div>","import { ChangeDetectorRef, Component, Inject, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { BaseSubsinkComponent } from '../../shared/components/base-subsink-component/base-subsink.component';\r\nimport { BehaviorSubject, Observable, combineLatest, map, take } from 'rxjs';\r\nimport { Field } from '../models/field.model';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ContentTypesFieldsService } from '../services/content-types-fields.service';\r\nimport { ShareOrInheritDialogViewModel, SharingOrInheriting } from './share-or-inherit-dialog-models';\r\nimport { FeatureComponentBase } from '../../features/shared/base-feature.component';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureNames } from '../../features/feature-names';\r\n\r\n@Component({\r\n  selector: 'app-share-or-inherit-dialog',\r\n  templateUrl: './share-or-inherit-dialog.component.html',\r\n  styleUrls: ['./share-or-inherit-dialog.component.scss']\r\n})\r\nexport class ShareOrInheritDialogComponent extends BaseSubsinkComponent implements OnInit, OnDestroy {\r\n  displayedShareableFieldsColumns: string[] = ['contentType', 'name', 'type'];\r\n  title: string;\r\n  message: string;\r\n  state: SharingOrInheriting = SharingOrInheriting.None;\r\n  initialState: SharingOrInheriting = SharingOrInheriting.None;\r\n  sharingOrInheriting = SharingOrInheriting;\r\n  guid: string = null;\r\n  isSaveDisabled: boolean = true;\r\n\r\n  shareableFields$ = new BehaviorSubject<Field[]>(undefined);\r\n  viewModel$: Observable<ShareOrInheritDialogViewModel>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: Field,\r\n    private dialogRef: MatDialogRef<ShareOrInheritDialogComponent>,\r\n    private contentTypesFieldsService: ContentTypesFieldsService,\r\n    // All this is just for the feature dialog\r\n    private featuresService: FeaturesService,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialState = !this.dialogData.SysSettings || (!this.dialogData.SysSettings.Share && !this.dialogData.SysSettings.InheritMetadataOf)\r\n      ? SharingOrInheriting.None\r\n      : this.dialogData.SysSettings.Share\r\n        ? SharingOrInheriting.Sharing\r\n        : SharingOrInheriting.Inheriting;\r\n    if (this.initialState === SharingOrInheriting.None) {\r\n      this.title = 'SharingOrInheriting.TitleNone';\r\n      const shareableFields$ = this.contentTypesFieldsService.getShareableFieldsFor(this.dialogData.AttributeId);\r\n      this.viewModel$ = combineLatest([\r\n        shareableFields$\r\n      ]).pipe(\r\n        map(([shareableFields]) => {\r\n          this.shareableFields$.next(shareableFields);\r\n          return { shareableFields };\r\n        })\r\n      );\r\n    } else if (this.initialState === SharingOrInheriting.Sharing) {\r\n      this.title = 'SharingOrInheriting.TitleSharing';\r\n      this.message = 'SharingOrInheriting.MessageSharing';\r\n    } else if (this.initialState === SharingOrInheriting.Inheriting) {\r\n      this.title = 'SharingOrInheriting.TitleInheriting';\r\n      this.message = 'SharingOrInheriting.MessageInheriting';\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  chooseShare() {\r\n    this.guid = null;\r\n    this.state = SharingOrInheriting.Sharing;\r\n    this.isSaveDisabled = false;\r\n  }\r\n\r\n  chooseInherit() {\r\n    this.guid = null;\r\n    this.state = SharingOrInheriting.Inheriting;\r\n    this.isSaveDisabled = true;\r\n  }\r\n\r\n  inheritField(field: Field) {\r\n    this.guid = field.Guid;\r\n    this.isSaveDisabled = false;\r\n  }\r\n\r\n  save() {\r\n    this.featuresService.isEnabled$(FeatureNames.FieldShareConfigManagement).pipe(\r\n      take(1),\r\n    ).subscribe(isEnabled => {\r\n      if (!isEnabled) {\r\n        FeatureComponentBase.openDialog(this.dialog, FeatureNames.FieldShareConfigManagement, this.viewContainerRef, this.changeDetectorRef);\r\n      } else {\r\n        if (this.state == SharingOrInheriting.Sharing) {\r\n          this.subscription.add(this.contentTypesFieldsService.share(this.dialogData.Id)\r\n            .subscribe(() => this.dialogRef.close()));\r\n        } else if (this.state == SharingOrInheriting.Inheriting) {\r\n          this.subscription.add(this.contentTypesFieldsService.inherit(this.dialogData.Id, this.guid)\r\n            .subscribe(() => this.dialogRef.close()));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog nav-component-wrapper\" appToggleDebug>\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">\r\n        {{ vm.contentType?.Label || vm.contentType?.Name }} Fields\r\n      </div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"eav-dialog-content nav-component-wrapper\">\r\n      <router-outlet></router-outlet>\r\n      <div class=\"grid-wrapper\">\r\n        <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.fields\" [gridOptions]=\"gridOptions\"\r\n          (rowDragEnter)=\"onRowDragEnter($event)\" (rowDragEnd)=\"onRowDragEnd($event)\" (rowDragMove)=\"onRowDragMove($event)\"\r\n          (gridReady)=\"onGridReady($event)\" (sortChanged)=\"onSortChanged($event)\" (filterChanged)=\"onFilterChanged($event)\"\r\n          [ngClass]=\"{\r\n          'grid-sorted': sortApplied,\r\n          'grid-filtered': filterApplied\r\n          }\">\r\n        </ag-grid-angular>\r\n      </div>\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Add fields\"\r\n        [disabled]=\"vm.contentType == null || vm.contentType.EditInfo.ReadOnly\" (click)=\"add()\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n}","// tslint:disable-next-line:max-line-length\r\nimport { ColumnApi, FilterChangedEvent, GridApi, GridOptions, GridReadyEvent, ICellRendererParams, RowClassParams, RowDragEvent, SortChangedEvent } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable, combineLatest, forkJoin, map, of } from 'rxjs';\r\nimport { ContentType } from '../app-administration/models/content-type.model';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { GoToPermissions } from '../permissions/go-to-permissions';\r\nimport { BaseComponent } from '../shared/components/base-component/base.component';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { ItemAddIdentifier, EditForm, ItemEditIdentifier } from '../shared/models/edit-form.model';\r\nimport { ContentTypeFieldsActionsComponent } from './content-type-fields-actions/content-type-fields-actions.component';\r\nimport { ContentTypeFieldsActionsParams } from './content-type-fields-actions/content-type-fields-actions.models';\r\nimport { ContentTypeFieldsInputTypeComponent } from './content-type-fields-input-type/content-type-fields-input-type.component';\r\n// tslint:disable-next-line:max-line-length\r\nimport { ContentTypeFieldsInputTypeParams } from './content-type-fields-input-type/content-type-fields-input-type.models';\r\nimport { ContentTypeFieldsSpecialComponent } from './content-type-fields-special/content-type-fields-special.component';\r\nimport { ContentTypeFieldsTitleComponent } from './content-type-fields-title/content-type-fields-title.component';\r\nimport { ContentTypeFieldsTitleParams } from './content-type-fields-title/content-type-fields-title.models';\r\nimport { ContentTypeFieldsTypeComponent } from './content-type-fields-type/content-type-fields-type.component';\r\nimport { Field } from './models/field.model';\r\nimport { ContentTypesFieldsService } from './services/content-types-fields.service';\r\nimport { EmptyFieldHelpers } from '../edit/form/fields/empty/empty-field-helpers';\r\nimport { ShareOrInheritDialogComponent } from './share-or-inherit-dialog/share-or-inherit-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-content-type-fields',\r\n  templateUrl: './content-type-fields.component.html',\r\n  styleUrls: ['./content-type-fields.component.scss'],\r\n})\r\nexport class ContentTypeFieldsComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  contentType$ = new BehaviorSubject<ContentType>(undefined);\r\n  fields$ = new BehaviorSubject<Field[]>(undefined);\r\n  gridOptions = this.buildGridOptions();\r\n  sortApplied = false;\r\n  filterApplied = false;\r\n\r\n  private gridApi: GridApi;\r\n  private columnApi: ColumnApi;\r\n  private rowDragSuppressed = false;\r\n  private contentTypeStaticName = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n\r\n  viewModel$: Observable<ContentTypeFieldsViewModel>;\r\n\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<ContentTypeFieldsComponent>,\r\n    private contentTypesService: ContentTypesService,\r\n    private contentTypesFieldsService: ContentTypesFieldsService,\r\n    private snackBar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchFields();\r\n    this.subscription.add(this.refreshOnChildClosedShallow().subscribe(() => { this.fetchFields(); }));\r\n    this.viewModel$ = combineLatest([\r\n      this.contentType$, this.fields$\r\n    ]).pipe(\r\n      map(([contentType, fields]) => ({ contentType, fields }))\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.contentType$.complete();\r\n    this.fields$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onGridReady(params: GridReadyEvent) {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n  }\r\n\r\n  onRowDragEnter(event: RowDragEvent) {\r\n    this.gridApi.setEnableCellTextSelection(false);\r\n  }\r\n\r\n  onRowDragEnd(event: RowDragEvent) {\r\n    this.gridApi.setSuppressRowDrag(true);\r\n    const idArray = this.fields$.value.map(field => field.Id);\r\n    this.contentTypesFieldsService.reOrder(idArray, this.contentType$.value).subscribe(() => {\r\n      this.fetchFields(() => {\r\n        this.gridApi.setEnableCellTextSelection(true);\r\n        this.gridApi.setSuppressRowDrag(false);\r\n      });\r\n    });\r\n  }\r\n\r\n  onRowDragMove(event: RowDragEvent) {\r\n    const movingNode = event.node;\r\n    const overNode = event.overNode;\r\n    if (!overNode) { return; }\r\n    const rowNeedsToMove = movingNode !== overNode;\r\n    if (rowNeedsToMove) {\r\n      const movingData: Field = movingNode.data;\r\n      const overData: Field = overNode.data;\r\n      const newFields = [...this.fields$.value];\r\n      const fromIndex = newFields.indexOf(movingData);\r\n      const toIndex = newFields.indexOf(overData);\r\n      this.moveInArray(newFields, fromIndex, toIndex);\r\n      this.fields$.next(newFields);\r\n      this.gridApi.clearFocusedCell();\r\n    }\r\n  }\r\n\r\n  private moveInArray(arr: Field[], fromIndex: number, toIndex: number) {\r\n    const element = arr[fromIndex];\r\n    arr.splice(fromIndex, 1);\r\n    arr.splice(toIndex, 0, element);\r\n  }\r\n\r\n  onSortChanged(params: SortChangedEvent) {\r\n    const columnStates = this.columnApi.getColumnState();\r\n    this.sortApplied = columnStates.some(state => state.sort != null);\r\n    this.suppressRowDrag();\r\n  }\r\n\r\n  onFilterChanged(params: FilterChangedEvent) {\r\n    const filterModel = this.gridApi.getFilterModel();\r\n    const fieldsFiltered = Object.keys(filterModel);\r\n    this.filterApplied = fieldsFiltered.length > 0;\r\n    this.suppressRowDrag();\r\n  }\r\n\r\n  private suppressRowDrag() {\r\n    const shouldSuppress = this.sortApplied || this.filterApplied;\r\n    if (shouldSuppress && !this.rowDragSuppressed) {\r\n      this.rowDragSuppressed = true;\r\n      this.gridApi.setSuppressRowDrag(true);\r\n    } else if (!shouldSuppress && this.rowDragSuppressed) {\r\n      this.rowDragSuppressed = false;\r\n      this.gridApi.setSuppressRowDrag(false);\r\n    }\r\n  }\r\n\r\n  add() {\r\n    this.router.navigate([`add/${this.contentTypeStaticName}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private nameCellRenderer(params: ICellRendererParams) {\r\n    const currentField: Field = params.data;\r\n    const inputType = currentField.InputType;\r\n\r\n    if (EmptyFieldHelpers.endsPreviousGroup(inputType))\r\n      return params.value;\r\n\r\n    let isGroupOpen = false;\r\n    for (const field of this.fields$.value) {\r\n      if (EmptyFieldHelpers.isGroupStart(inputType)) {\r\n        isGroupOpen = true;\r\n        continue;\r\n      }\r\n      if (EmptyFieldHelpers.isGroupEnd(inputType)) {\r\n        isGroupOpen = false;\r\n        continue;\r\n      }\r\n      if (field.StaticName === currentField.StaticName)\r\n        break;\r\n    }\r\n\r\n    return isGroupOpen ? `<span class=\"is-in-group\">${params.value}</span>` : params.value;\r\n  }\r\n\r\n  private fetchFields(callback?: () => void) {\r\n    const contentType$ = this.contentType$.value == null\r\n      ? this.contentTypesService.retrieveContentType(this.contentTypeStaticName)\r\n      : of(this.contentType$.value);\r\n    const fields$ = this.contentTypesFieldsService.getFields(this.contentTypeStaticName);\r\n    forkJoin([contentType$, fields$]).subscribe(([contentType, fields]) => {\r\n      this.contentType$.next(contentType);\r\n      this.fields$.next(fields);\r\n      if (callback != null) { callback(); }\r\n    });\r\n  }\r\n\r\n  private editFieldMetadata(field: Field) {\r\n    // 2023-11-10 @2dm #ConfigTypesFromBackend\r\n    // https://github.com/2sic/2sxc/issues/3205\r\n    // Keep old code in till 2024-01 for ref in case something breaks\r\n    // console.warn('2dm - editFieldMetadata', field);\r\n    // console.warn('2dm - editFieldMetadata', field.ConfigTypes);\r\n    // const form: EditForm = {\r\n    //   items: [\r\n    //     this.createItemDefinition(field, 'All'),\r\n    //     this.createItemDefinition(field, field.Type),\r\n    //     this.createItemDefinition(field, field.InputType),\r\n    //   ],\r\n    // };\r\n\r\n    // If this field is inherited and therefor has no own metadata, show a snackbar and exit\r\n    if (field.SysSettings?.InheritMetadataOf) {\r\n      if (!Object.keys(field.ConfigTypes).length) {\r\n        this.snackBar.open('This field inherits all configuration so there is nothing to edit.', null, { duration: 3000 });\r\n        return;\r\n      }\r\n      this.snackBar.open('This field inherits some configuration. Edit will only show configuration which is not inherited.', null, { duration: 5000 });\r\n    }\r\n\r\n    // if this field is shared/can-be-inherited, show warning so the user is aware of it\r\n    if (field.SysSettings?.Share)\r\n      this.snackBar.open('This field is shared, so changing it will affect all other fields inheriting it.', null, { duration: 5000 });\r\n\r\n    const form: EditForm = {\r\n      items: Object.keys(field.ConfigTypes).map((t) => this.createItemDefinition(field, t))\r\n    };\r\n    // console.warn('2dm - editFieldMetadata', field.ConfigTypes, form);\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private createItemDefinition(field: Field, metadataType: string): ItemAddIdentifier | ItemEditIdentifier {\r\n    // The keys could start with an @ but may not, and in some cases we need it, others we don't\r\n    const keyForMdLookup = metadataType.replace('@', '');\r\n    const newItemTypeName = ('@' + metadataType).replace('@@', '@');\r\n\r\n    // Is an item of this type already loaded? Then just edit it, otherwise request new as Metadata\r\n    const existingMd = field.Metadata[keyForMdLookup];\r\n    return existingMd != null\r\n      ? { EntityId: existingMd.Id } // if defined, return the entity-number to edit\r\n      : {\r\n        ContentTypeName: newItemTypeName, // otherwise the content type for new-assignment\r\n        For: {\r\n          Target: eavConstants.metadata.attribute.target,\r\n          TargetType: eavConstants.metadata.attribute.targetType,\r\n          Number: field.Id,\r\n        },\r\n        Prefill: { Name: field.StaticName },\r\n      };\r\n  }\r\n\r\n  private setTitle(field: Field) {\r\n    this.snackBar.open('Setting title...');\r\n    this.contentTypesFieldsService.setTitle(field, this.contentType$.value).subscribe(() => {\r\n      this.snackBar.open('Title set', null, { duration: 2000 });\r\n      this.fetchFields();\r\n    });\r\n  }\r\n\r\n  private changeInputType(field: Field) {\r\n    this.router.navigate([`update/${this.contentTypeStaticName}/${field.Id}/inputType`], { relativeTo: this.route });\r\n  }\r\n\r\n  private rename(field: Field) {\r\n    this.router.navigate([`update/${this.contentTypeStaticName}/${field.Id}/name`], { relativeTo: this.route });\r\n  }\r\n\r\n  private delete(field: Field) {\r\n    if (!confirm(`Are you sure you want to delete '${field.StaticName}' (${field.Id})?`)) { return; }\r\n    this.snackBar.open('Deleting...');\r\n    this.contentTypesFieldsService.delete(field, this.contentType$.value).subscribe(() => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.fetchFields();\r\n    });\r\n  }\r\n\r\n  private openPermissions(field: Field) {\r\n    this.router.navigate([GoToPermissions.getUrlAttribute(field.Id)], { relativeTo: this.route });\r\n  }\r\n\r\n  private openMetadata(field: Field) {\r\n    const url = GoToMetadata.getUrlAttribute(\r\n      field.Id,\r\n      `Metadata for Field: ${field.StaticName} (${field.Id})`,\r\n    );\r\n    this.router.navigate([url], { relativeTo: this.route });\r\n  }\r\n\r\n  private shareOrInherit(field: Field) {\r\n    const shareOrInheritDialogRef = this.dialog.open(ShareOrInheritDialogComponent, {\r\n      autoFocus: false,\r\n      width: '800px',\r\n      data: field,\r\n    });\r\n    shareOrInheritDialogRef.afterClosed().subscribe(() => this.fetchFields());\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      getRowClass(params: RowClassParams) {\r\n        const field: Field = params.data;\r\n        const rowClass: string[] = [];\r\n        if (field.EditInfo.DisableSort) { rowClass.push('disable-row-drag'); }\r\n        if (EmptyFieldHelpers.isGroupStart(field.InputType)) { rowClass.push('group-start-row'); }\r\n        if (EmptyFieldHelpers.isGroupEnd(field.InputType)) { rowClass.push('group-end-row'); }\r\n        return rowClass;\r\n      },\r\n      columnDefs: [\r\n        {\r\n          rowDrag: true,\r\n          width: 18,\r\n          cellClass: 'no-select no-padding no-outline'.split(' '),\r\n        },\r\n        {\r\n          field: 'Title',\r\n          width: 42,\r\n          cellClass: 'secondary-action no-padding no-outline'.split(' '),\r\n          valueGetter: (params) => {\r\n            const field: Field = params.data;\r\n            return field.IsTitle;\r\n          },\r\n          cellRenderer: ContentTypeFieldsTitleComponent,\r\n          cellRendererParams: (() => {\r\n            const params: ContentTypeFieldsTitleParams = {\r\n              onSetTitle: (field) => this.setTitle(field),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          field: 'Name',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'primary-action highlight'.split(' '),\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          onCellClicked: (params) => {\r\n            const field: Field = params.data;\r\n            this.editFieldMetadata(field);\r\n          },\r\n          cellRenderer: (params: ICellRendererParams) => this.nameCellRenderer(params),\r\n          valueGetter: (params) => {\r\n            const field: Field = params.data;\r\n            return field.StaticName;\r\n          },\r\n        },\r\n        {\r\n          field: 'Type',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const field: Field = params.data;\r\n            return field.Type;\r\n          },\r\n          cellRenderer: ContentTypeFieldsTypeComponent,\r\n        },\r\n        {\r\n          headerName: 'Input',\r\n          field: 'InputType',\r\n          width: 160,\r\n          cellClass: (params) => {\r\n            const field: Field = params.data;\r\n            return `${field.EditInfo.DisableEdit ? 'no-outline no-padding' : 'secondary-action no-padding'}`.split(' ');\r\n          },\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const field: Field = params.data;\r\n            const inputType = field.InputType.substring(field.InputType.indexOf('-') + 1);\r\n            return inputType;\r\n          },\r\n          cellRenderer: ContentTypeFieldsInputTypeComponent,\r\n          cellRendererParams: (() => {\r\n            const params: ContentTypeFieldsInputTypeParams = {\r\n              onChangeInputType: (field) => this.changeInputType(field),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          field: 'Label',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const field: Field = params.data;\r\n            return field.Metadata?.All?.Name;\r\n          },\r\n        },\r\n        {\r\n          field: 'Special',\r\n          width: 66,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-outline',\r\n          cellRenderer: ContentTypeFieldsSpecialComponent,\r\n        },\r\n        {\r\n          field: 'Notes',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const field: Field = params.data;\r\n            return field.Metadata?.All?.Notes;\r\n          },\r\n        },\r\n        {\r\n          width: 162,\r\n          cellClass: 'secondary-action no-padding'.split(' '),\r\n          pinned: 'right',\r\n          cellRenderer: ContentTypeFieldsActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: ContentTypeFieldsActionsParams = {\r\n              onRename: (field) => this.rename(field),\r\n              onDelete: (field) => this.delete(field),\r\n              onOpenPermissions: (field) => this.openPermissions(field),\r\n              onOpenMetadata: (field) => this.openMetadata(field),\r\n              onShareOrInherit: (field) => this.shareOrInherit(field),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface ContentTypeFieldsViewModel {\r\n  contentType: ContentType;\r\n  fields: Field[];\r\n}","@if (show$ | async) {\r\n  <mat-icon [tippy]=\"'Features.NotActivated' | translate\">diamond</mat-icon>\r\n}","import { ChangeDetectorRef, Component, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureComponentBase } from '../shared/base-feature.component';\r\n\r\n@Component({\r\n  selector: 'app-feature-icon-indicator',\r\n  templateUrl: './feature-icon-indicator.component.html',\r\n  styleUrls: ['./feature-icon-indicator.component.scss']\r\n})\r\nexport class FeatureIconIndicatorComponent extends FeatureComponentBase /* implements OnInit */ {\r\n\r\n  constructor(\r\n    dialog: MatDialog,\r\n    viewContainerRef: ViewContainerRef,\r\n    featuresService: FeaturesService,\r\n    changeDetectorRef: ChangeDetectorRef\r\n  ) {\r\n    super(dialog, viewContainerRef, changeDetectorRef, featuresService);\r\n  }\r\n\r\n  // ngOnInit(): void {\r\n  //   super.ngOnInit();\r\n  // }\r\n}\r\n","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  FieldShareConfigManagement: 'FieldShareConfigManagement',\r\n};\r\n","@if (viewModel$ | async; as vm) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ vm.feature.Name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"vm.feature.Description | safeHtml\"></p>\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ \"Features.Status\" | translate }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ (vm.feature.IsEnabled ? \"Features.Active\" : \"Features.NotActive\") | translate }}</span>\r\n        </div>\r\n      </div>\r\n      @if (vm.feature.NameId; as id) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">ID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      @if (vm.feature.Link; as link) {\r\n        <button mat-raised-button color=\"accent\"\r\n          class=\"eav-card-action-button\" (click)=\"findOutMore(link)\">\r\n          <mat-icon>open_in_new</mat-icon>\r\n          {{ \"Features.FindOutMore\" | translate }}\r\n        </button>\r\n      }\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">\r\n        {{ \"Features.Close\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable, combineLatest, map } from 'rxjs';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { Feature } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\n\r\n@Component({\r\n  selector: 'app-feature-info-dialog',\r\n  templateUrl: './feature-info-dialog.component.html',\r\n  styleUrls: ['./feature-info-dialog.component.scss']\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  viewModel$: Observable<FeatureInfoViewModel>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    private dialogRef: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private featureDetailService: FeatureDetailService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.viewModel$ = combineLatest([\r\n      this.featureDetailService.getFeatureDetails(this.dialogData)\r\n    ]).pipe(map(([feature]) => ({ feature })));\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  findOutMore(link: string): void { \r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\r\ninterface FeatureInfoViewModel {\r\n  feature: Feature;\r\n}","import { ChangeDetectorRef, Directive, Input, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { BehaviorSubject, switchMap, Observable, map, combineLatest } from 'rxjs';\r\nimport { FeatureSummary } from '../models';\r\n\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n  /** Feature NameId to check */\r\n  @Input()\r\n  public set featureNameId(value: string) { this.featureNameId$.next(value); }\r\n  protected featureNameId$ = new BehaviorSubject<string>(null);\r\n\r\n  /** By default, it will show if it's false - here we can change it to show if true */\r\n  @Input()\r\n  public set showIf(value: boolean) { this.showIf$.next(value == true); }\r\n  protected showIf$ = new BehaviorSubject<boolean>(false);\r\n\r\n  // TODO: @SDV - MAKE REACTIVE - SEE text-info-component example\r\n  // featureOn: boolean = true;\r\n  feature$: Observable<FeatureSummary>;\r\n  show$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    protected featuresService: FeaturesService\r\n  ) {\r\n    this.feature$ = this.featureNameId$.pipe(\r\n      switchMap(featName => this.featuresService.get$(featName)\r\n    ));\r\n    this.show$ = combineLatest([this.feature$, this.showIf$]).pipe(\r\n      // tap(data => console.log('2dm - show$', data)),\r\n      map(([feat,showIf]) => showIf == (feat?.IsEnabled ?? false))\r\n    );\r\n  }\r\n\r\n  openDialog() {\r\n    FeatureComponentBase.openDialog(this.dialog, this.featureNameId$.value, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n\r\n  /** Public/Static so it can be called from elsewhere */\r\n  public static openDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n    dialog.open(FeatureInfoDialogComponent, {\r\n      autoFocus: false,\r\n      data: featureId,\r\n      viewContainerRef: viewContainerRef,\r\n      width: '400px',\r\n    });\r\n\r\n    changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","import { Directive, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith, Subscription } from 'rxjs';\r\nimport { BaseSubsinkComponent } from '../base-subsink-component/base-subsink.component';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class BaseComponent extends BaseSubsinkComponent implements OnDestroy {\r\n  \r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  protected refreshOnChildClosedDeep() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n\r\n  protected refreshOnChildClosedShallow() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n}\r\n","import { GridOptions } from '@ag-grid-community/core';\r\n\r\nexport const defaultGridOptions: GridOptions = {\r\n  accentedSort: true,\r\n  animateRows: true,\r\n  enableCellTextSelection: true,\r\n  headerHeight: 32,\r\n  suppressScrollOnNewData: true,\r\n  valueCache: true,\r\n  defaultColDef: { filterParams: { newRowsAction: 'keep' } },\r\n  tooltipShowDelay: 0,\r\n  tooltipHideDelay: 100000,\r\n  suppressMovableColumns: true,\r\n} as const;\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { GlobalConfigService } from '../../edit/shared/store/ngrx-data';\r\n\r\n@Directive({ selector: '[appToggleDebug]' })\r\nexport class ToggleDebugDirective {\r\n\r\n  constructor(private globalConfigService: GlobalConfigService) { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    const CTRL_SHIFT_ALT_CLICK = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.shiftKey && event.altKey;\r\n    if (CTRL_SHIFT_ALT_CLICK) {\r\n      this.globalConfigService.toggleDebugEnabled();\r\n      window.getSelection().removeAllRanges();\r\n    }\r\n  }\r\n}\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeHtml' })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}