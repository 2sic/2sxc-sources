{"version":3,"file":"projects_eav-ui_src_app_import-app_import-app_component_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAC2D;AACd;AAC0E;AACtD;;AAU3D,MAAOK,kBAAkB;EAM7BC,YAAqCC,UAAgC;IAJrE,KAAAC,UAAU,GAAGL,8EAAW,CAACM,GAAG;IAEpB,KAAAC,gBAAgB,GAAGT,gDAAS,CAACG,0EAAgB,CAAC;IAGpDG,UAAU,CAACI,KAAK,KAAK,YAAY;IACjCJ,UAAU,CAACK,WAAW,KAAK;;;;KAI1B;IACDL,UAAU,CAACM,gBAAgB,KAAK,KAAK;IACrCN,UAAU,CAACO,OAAO,KAAMC,KAAK,IAAK,IAAI,CAACL,gBAAgB,CAACM,SAAS,CAACD,KAAK,CAAC,CAAC,CAAC,EAAEE,SAAS,EAAE,IAAI,CAAC;EAC9F;;;uCAfWZ,kBAAkB,EAAAa,+DAAA,CAMTlB,qEAAe;IAAA;EAAA;;;YANxBK,kBAAkB;MAAAe,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAAJ,iEAAA;MAAAM,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCd/BX,uDAAA,gCAA2E;;;UAAnDA,wDAAA,eAAAY,GAAA,CAAAtB,UAAA,CAAyB;;;qBDW7CN,4FAAyB;MAAA+B,aAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;AEVoB;AACqD;AAC5B;;AAEnE,MAAMK,aAAa,GAAG,YAAY;AAGnC,MAAOlC,gBAAiB,SAAQiC,+EAAe;EAEnDrB,SAASA,CAACuB,IAAU,EAAEC,WAAmB,EAAEC,gBAAgB,GAAG,KAAK;IACjE,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,CAAC;IAC7BG,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,WAAW,IAAI,EAAE,CAAC;IAC1C,OAAO,IAAI,CAACK,IAAI,CAACC,IAAI,CAAmB,IAAI,CAACC,MAAM,CAACT,aAAa,GAAG,QAAQ,CAAC,EAAEI,QAAQ,EAAE;MACvFM,MAAM,EAAE;QAAEC,MAAM,EAAE,IAAI,CAACA;MAAM;KAC9B,CAAC,CAACC,IAAI,CACLf,+CAAS,CAACgB,MAAM,IAAG;MACjB,IAAIV,gBAAgB,IAAIU,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC,EAAEC,WAAW,KAAKjB,yFAAsB,CAACkB,OAAO,EAAE;QAC1F,MAAMC,UAAU,GAAGC,MAAM,CAACL,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACK,IAAI,GAAG,0DAA0D,CAAC;QAC/G,IAAIF,UAAU,EAAE;UACd,OAAO,IAAI,CAACvC,SAAS,CAACuB,IAAI,EAAEgB,UAAU,EAAE,IAAI,CAAC;QAC/C;MACF;MACA,OAAOrB,wCAAE,CAACiB,MAAM,CAAC;IACnB,CAAC,CAAC,CACH;EACH;;;;;sJAnBW/C,gBAAgB,IAAAsD,iBAAA,IAAhBtD,gBAAgB;MAAA;IAAA;EAAA;;;aAAhBA,gBAAgB;MAAAuD,OAAA,EAAhBvD,gBAAgB,CAAAwD;IAAA;EAAA","sources":["./projects/eav-ui/src/app/import-app/import-app.component.ts","./projects/eav-ui/src/app/import-app/import-app.component.html","./projects/eav-ui/src/app/import-app/services/import-app.service.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { transient } from '../../../../core';\r\nimport { FileUploadDialogComponent, FileUploadDialogData, UploadTypes } from '../shared/components/file-upload-dialog';\r\nimport { ImportAppService } from './services/import-app.service';\r\n\r\n@Component({\r\n  selector: 'app-import-app',\r\n  templateUrl: './import-app.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    FileUploadDialogComponent,\r\n  ],\r\n})\r\nexport class ImportAppComponent {\r\n\r\n  uploadType = UploadTypes.App;\r\n\r\n  private importAppService = transient(ImportAppService);\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) dialogData: FileUploadDialogData) {\r\n    dialogData.title ??= `Import App`;\r\n    dialogData.description ??= `\r\n    Select an app package (zip) from your computer to import an app. New apps can be downloaded on\r\n    <a href=\"https://2sxc.org/apps\" target=\"_blank\">https://2sxc.org/apps</a>.\r\n    For further help visit <a href=\"https://2sxc.org/en/help?tag=import-app\" target=\"_blank\">2sxc Help</a>.\r\n    `;\r\n    dialogData.allowedFileTypes ??= 'zip';\r\n    dialogData.upload$ ??= (files) => this.importAppService.importApp(files[0], undefined, true);\r\n  }\r\n}\r\n","<app-file-upload-dialog [uploadType]=\"uploadType\"></app-file-upload-dialog>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService extends HttpServiceBase {\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.zoneId }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n"],"names":["MAT_DIALOG_DATA","transient","FileUploadDialogComponent","UploadTypes","ImportAppService","ImportAppComponent","constructor","dialogData","uploadType","App","importAppService","title","description","allowedFileTypes","upload$","files","importApp","undefined","i0","ɵɵdirectiveInject","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ImportAppComponent_Template","rf","ctx","ɵɵelement","ɵɵproperty","encapsulation","of","switchMap","FileUploadMessageTypes","HttpServiceBase","webApiAppRoot","file","changedName","retryOnDuplicate","formData","FormData","append","http","post","apiUrl","params","zoneId","pipe","result","Messages","MessageType","Warning","folderName","prompt","Text","__ngFactoryType__","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}