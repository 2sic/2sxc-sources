{"version":3,"file":"default-projects_eav-ui_src_app_create-file-dialog_create-file-dialog_component_ts.20116acb1ddfde5a.js","mappings":"kOAUA,MACMA,EAAgB,uBAGhBC,EAAyB,gCAKxB,IAAMC,EAAc,MAArB,MAAOA,UAAsBC,IAGjCC,IAAIC,EAAiBC,EAAiBC,GACpC,OAAOC,KAAKC,cAA0BT,EAAe,CACnDU,OAAQ,CACNC,MAAOH,KAAKG,MACZL,YACGE,KAAKI,iBAAiBP,EAASC,EAAQC,MAE3CM,QACDC,KAAIC,IACF,GAAsC,SAAlCA,EAAKC,KAAKC,oBACZ,OAAQF,EAAKG,UAAUD,qBACrB,IAAK,MACL,IAAK,UACHF,EAAKC,KAAO,QACZ,MACF,IAAK,QACL,IAAK,OACL,IAAK,MACHD,EAAKC,KAAO,QAIlB,OAAOD,IAGb,CAmCAI,KAAKd,EAAiBC,EAAiBS,EAAkBR,GACvD,OAAOC,KAAKY,KAAKC,KAAcb,KAAKc,OAAOtB,GAAgBe,EAAM,CAC/DL,OAAQ,CACNC,MAAOH,KAAKG,MACZL,YACGE,KAAKI,iBAAiBP,EAASC,EAAQC,KAGhD,CAEAgB,OAAOC,GACL,OAAOhB,KAAKC,cAnFI,0BAmF+C,CAC7DC,OAAQ,CACNC,MAAOH,KAAKG,SACRa,GAAQ,CAAEA,WAEfX,QACDC,KAAI,EAAGW,YACLA,EAAMC,QAAQC,IACZA,EAAKC,UAAW,IAEXH,IAGb,CAEAI,aACE,OAAOrB,KAAKC,cAAmCR,EAAwB,CACrES,OAAQ,CACNC,MAAOH,KAAKG,SAEbE,QACDC,KAAI,EAAGgB,YACLA,EAAMJ,QAAQC,IACZA,EAAKI,YAAa,EAClBJ,EAAKK,cAAe,IAEfF,KAETjB,QACAC,KAAIgB,GACwBA,EAAMhB,IAAIa,IAClC,MAAMM,EAAaN,EAAKO,KAAKC,YAAY,KACnCC,EAAeT,EAAKO,KAAKC,YAAY,KACrCE,EAASV,EAAKO,KAAKI,UAAU,EAAGL,GAChCM,EAAOZ,EAAKO,KAAKI,UAAUL,EAAa,EAAGG,GAEjD,MADuB,CAAEF,KAAMP,EAAKO,KAAMG,SAAQE,OAAMR,SAAUJ,EAAKI,SAAUS,aAAcb,EAAKa,aAAcR,WAAYL,EAAKK,WAAYS,QAASd,EAAKc,QAAO,IAM5K,CAEAC,gBAEE,MAAMC,EAAiBnC,KAAKoC,UAA+B3C,EAAwB,CACjFS,OAAQ,CACNC,MAAOH,KAAKG,SAqChB,SAhCsBkC,OAAS,KAC7B,MAAMf,EAAQa,KAAkBb,MAEhC,OAAIA,GAKJA,EAAMJ,QAAQC,IACZA,EAAKI,YAAa,EAClBJ,EAAKK,cAAe,IAIfF,EAAMhB,IAAIa,IACf,MAAMM,EAAaN,EAAKO,KAAKC,YAAY,KACnCC,EAAeT,EAAKO,KAAKC,YAAY,KACrCE,EAASV,EAAKO,KAAKI,UAAU,EAAGL,GAChCM,EAAOZ,EAAKO,KAAKI,UAAUL,EAAa,EAAGG,GAEjD,MAAO,CACLF,KAAMP,EAAKO,KACXG,SACAE,OACAR,SAAUJ,EAAKI,SACfS,aAAcb,EAAKa,aACnBR,WAAYL,EAAKK,WACjBS,QAASd,EAAKc,YAvBT,IA6Bb,CAGAK,iBAAiBC,GACf,OAAOvC,KAAKC,cAzKW,4BAyKsC,CAC3DC,OAAQ,CAAEC,MAAOH,KAAKG,MAAOqC,OAAQxC,KAAKwC,OAAQd,KAAMa,IAE5D,CAEAE,uBAAuBC,EAAyCC,GAC9D,OAAO3C,KAAKC,cA7KoB,8BA6KoD,CAClFC,OAAQ,IACFwC,GAAW,CAAEA,cACbC,GAAQ,CAAEA,UAGpB,CAEAC,WAAWlB,EAAc5B,EAAiB+C,GACxC,OAAO7C,KAAKC,cArLQ,yBAqLgC,CAClDC,OAAQ,CACNC,MAAOH,KAAKG,MACZuB,OACAmB,cACA/C,WAGN,CAEAgD,OAAOpB,EAAc5B,EAAiB+C,GACpC,OAAO7C,KAAKY,KAAKC,KAAcb,KAAKc,OApMjB,yBAoMyC,GAAI,CAC9DZ,OAAQ,CACNC,MAAOH,KAAKG,MACZL,SACA4C,QAAS,OACThB,OACAmB,gBAGN,CAEQzC,iBAAiBP,EAAiBC,EAAiBC,GACzD,GAAI,YAAYgD,KAAKlD,GAAU,CAC7B,MAAM6B,EAAO3B,EAASiD,KAAKC,GAAKA,EAAEC,UAAUC,aAAetD,GAAWoD,EAAEG,WAAatD,IAASuD,KAC9F,MAAO,CACLC,WAAYzD,KACA,MAAR6B,GAAgB,CAAEA,QAE1B,CACE,MAAO,CAAEA,KAAM7B,EAEnB,yEAlNWH,KAAa6D,GAAb7D,EAAa,0CAAbA,EAAa8D,QAAb9D,EAAa+D,WAAA,SAAb/D,CAAc,8UCbpB,IAAMgE,EAA0B,MAAjC,MAAOA,EAGXC,YAAoBC,EAA4BC,GAA5B7D,KAAA4D,WAA4B5D,KAAA6D,aAFhD7D,KAAA8D,wBAAuBC,QAA2C,EAE0B,CAE5FC,WACEC,WAAW,KACTjE,KAAK4D,SAASM,QAEVlE,KAAKmE,UAAUnE,KAAK8D,yBACtB9D,KAAK6D,WAAWO,cAAcC,kBAAkB,EAAGrE,KAAK4D,SAASU,MAAMC,OAAM,EAGnF,CAEQJ,UAAUG,GAChB,GAAqB,kBAAVA,EAAuB,OAAOA,EACzC,GAAqB,iBAAVA,EAAoB,CAC7B,MAAME,EAAiBF,EAAM7D,oBAC7B,MAAuB,SAAnB+D,GACmB,UAAnBA,QACJ,CACF,CACA,OAAa,MAATF,EAAwBA,OAA5B,CACF,iDAxBWZ,GAA0Be,MAAAC,MAAAD,aAAA,oCAA1Bf,EAA0BiB,UAAA,iCAAAC,OAAA,CAAAd,qBAAA,sCAA1BJ,CAA0B,wDCevBe,MAAA,mBACEA,MAAA,GACFA,kCAFYA,MAAA,QAAAI,GACVJ,cAAA,IAAAI,EAAA,+BAYFJ,MAAA,mBACEA,MAAA,GACFA,kCAFYA,MAAA,QAAAK,GACVL,cAAA,IAAAK,EAAA,+BAaJL,MAAA,mBACEA,MAAA,GACFA,kCAFYA,MAAA,QAAAM,EAAAC,KACVP,cAAA,IAAAM,EAAAE,KAAA,6BAcNR,MAAA,uBACEA,MAAA,8BACFA,cAFgBA,MAAA,oCASlBA,MADA,mBACAA,CAD6E,sCAW7EA,MADF,WACEA,CADiC,cAC8CA,MAAA,aACjFA,UACAA,MAAA,YAAiFA,MAAA,GAAgBA,8BAF9DA,cAAA,UAAAA,MAAA,EAAAS,EAAAC,EAAAC,iBAEAX,MAAA,GAAAA,MAAA,UAAAA,MAAA,EAAAS,EAAAC,EAAAC,iBAA8CX,cAAAU,EAAAE,oCAGjFZ,MAAA,YACEA,MAAA,GACFA,8BADEA,cAAA,IAAAU,EAAAG,aAAA,+CApFFb,MAHN,UAGMA,CAHmC,UAGnCA,CAF2B,UAE3BA,CADyD,UACnDA,MAAA,YAAMA,QACZA,MAAA,YAA4BA,MAAA,GAKhCA,YAQYA,MAPZ,UAOYA,CAPoB,WAOpBA,CANmC,UAMnCA,CALyB,WAKzBA,CAJwC,WAIxCA,CAF4B,sBAE5BA,CADwD,gBAC7CA,MAAA,eAAQA,QACnBA,MAAA,oBACEA,MAAA,GAAAc,EAAA,oBAAAd,OAONA,YAIIA,MAFJ,WAEIA,CAF4B,sBAE5BA,CADwD,gBAC7CA,MAAA,cAAOA,QAClBA,MAAA,oBACEA,MAAA,GAAAe,EAAA,oBAAAf,OAQRA,cAIIA,MAFJ,YAEIA,CAF6B,sBAE7BA,CADwD,gBAC7CA,MAAA,eAAQA,QACnBA,MAAA,oBACEA,MAAA,GAAAgB,EAAA,oBAAAhB,OAONA,YAIIA,MAFJ,YAEIA,CAF6B,sBAE7BA,CADwD,gBAC7CA,MAAA,WAAIA,QACfA,MAAA,eAEFA,QACAA,MAAA,GAAAiB,GAAA,yBAMJjB,UACAA,MAAA,aACEA,MAAA,GAAAkB,GAAA,KAIAlB,MAAA,gBAAwCA,MAAA,mBAAAA,MAAAmB,GAAA,MAAAC,EAAApB,QAAA,OAAAA,MAASoB,EAAAC,cAAa,GAAErB,MAAA,aAAMA,QACtEA,MAAA,gBACoEA,MAAA,mBAAAA,MAAAmB,GAAA,MAAAC,EAAApB,QAAA,OAAAA,MAASoB,EAAAE,UAAS,GACpFtB,MAAA,eAEJA,UAOAA,MANA,GAAAuB,GAAA,IAMAvB,CANkB,GAAAwB,GAAA,cAaxBxB,wCAxFkCA,MAAA,GAAAA,MAAAoB,EAAAK,SAAAC,UAAA7B,QAAAuB,EAAAK,SAAArE,OAAAyC,MAAAuB,EAAAK,SAAArE,OAAAyC,MAAA8B,OAAA,SAOxB3B,MAAA,GAAAA,MAAA,YAAAoB,EAAAQ,MAQM5B,MAAA,GAAAA,MAAAU,EAAAmB,WAaA7B,MAAA,GAAAA,MAAAU,EAAAoB,UAcF9B,MAAA,GAAAA,MAAAU,EAAAqB,WAeJ/B,MAAA,GAAAA,MAAAoB,EAAAK,SAAAnE,KAAA0E,SAAA,MAAAZ,EAAAK,SAAAnE,KAAA2E,QAAAb,EAAAK,SAAAnE,KAAA2E,OAAAC,SAAA,OAQFlC,MAAA,GAAAA,MAAAU,EAAAC,eAAA,OAMEX,MAAA,GAAAA,MAAA,YAAAoB,EAAAQ,KAAAO,OAAAzB,EAAAC,iBAAAD,EAAA0B,cAIJpC,MAAA,GAAAA,MAAAU,EAAAE,QAAA,OAMAZ,eAAAU,EAAAC,gBAAAD,EAAAG,aAAA,QC7CC,IAAMwB,GAA0B,MAAjC,MAAOA,UAAkCC,IAc7CpD,YACmCqD,EACzBC,GAERC,QAHiClH,KAAAgH,aACzBhH,KAAAiH,SAfgBjH,KAAAmH,UAAY,mBAO9BnH,KAAAoH,IAAM,MAINpH,KAAAqH,iBAAgBC,KAAU5H,IAOlC,CAEAsE,WACEhE,KAAKuH,WAAa,IAAIC,IAAsC,IAC5DxH,KAAKyH,gBAAkB,IAAID,KAAgB,GAE3CxH,KAAK0H,YACL1H,KAAK2H,iBACL3H,KAAK4H,gBACP,CAEAC,cACE7H,KAAKuH,WAAWO,WAChB9H,KAAKyH,gBAAgBK,WACrBZ,MAAMW,aACR,CAEA/B,YAAYiC,GACV/H,KAAKiH,OAAOe,MAAMD,EACpB,CAEAhC,UACE,MAAMkC,EAAmCjI,KAAKqG,KAAK6B,cAMnDlI,KAAK8F,YAJkC,CACrC/D,KAAMkG,EAAW9B,UACjBtD,YAAaoF,EAAWpF,aAG5B,CAEQ8E,iBACN3H,KAAKqH,cAAc5E,uBAAuBzC,KAAKgH,WAAWtE,QAAS1C,KAAKgH,WAAWrE,MAAMwF,UAAUC,IAC7FpI,KAAKkG,SAASrD,YAAYyB,QAAU8D,EAASC,SAC/CrI,KAAKkG,SAASrD,YAAYyF,WAAWF,EAASC,SAEhDrI,KAAKuH,WAAWgB,KAAKH,EAASI,UAAS,EAE3C,CAEQd,YACN1H,KAAKqG,KAAO,IAAIoC,KAAiB,CAC/BC,SAAU,IAAIC,KAAmB3I,KAAKoH,KACtC1E,QAAS,IAAIiG,KAAmB,CAAErE,MAAOtE,KAAKgH,WAAWtE,SAAW1C,KAAKoH,IAAKwB,SAAqC,MAA3B5I,KAAKgH,WAAWtE,UACxGG,YAAa,IAAI8F,KAAmB,KAAME,KAAWlC,UACrD5E,KAAM,IAAI4G,KAAmB3I,KAAKgH,WAAWjF,MAAQ,KAAM8G,KAAWlC,UACtER,UAAW,IAAIwC,KAAmB,CAAErE,MAAO,KAAMsE,UAAU,IAC3D/G,OAAQ,IAAI8G,KAAmB,CAAErE,MAAOtE,KAAKgH,WAAWnF,QAAU,GAAI+G,UAAU,MAGlF5I,KAAKkG,SAAWlG,KAAKqG,KAAKH,SAE1BlG,KAAK8I,cAAcC,OACjBC,KAAc,CACZhJ,KAAKuH,WACLvH,KAAKkG,SAASrD,YAAYoG,aAAa5I,QACrC6I,KAAkBlJ,KAAKkG,SAASrD,YAAYyB,QAAK,EACjD6E,UAEDhB,UAAU,EAAE3B,EAAW3D,MACxB,MAAMuG,EAAW5C,EAAUxD,KAAKqG,GAAKA,EAAErE,MAAQnC,GACzCyG,EAAgBtJ,KAAKgH,WAAWjF,KAClC/B,KAAKkG,SAASnE,KAAKuC,OAAStE,KAAKgH,WAAWjF,KAC5CqH,GAAUG,mBAAqB,KAE/BvJ,KAAKkG,SAASnE,KAAKuC,QAAUgF,GAC/BtJ,KAAKkG,SAASnE,KAAKuG,WAAWgB,EAAa,IAKjDtJ,KAAK8I,cAAcC,OACjBC,KAAc,CACZhJ,KAAKuH,WACLvH,KAAKkG,SAASrD,YAAYoG,aAAa5I,QACrC6I,KAAkBlJ,KAAKkG,SAASrD,YAAYyB,QAAK,EACjD6E,QAEFnJ,KAAKkG,SAASnE,KAAKkH,aAAa5I,QAC9B6I,KAAkBlJ,KAAKkG,SAASnE,KAAKuC,QAAK,EAC1C6E,QAEFnJ,KAAKkG,SAASrE,OAAOoH,aAAa5I,QAChC6I,KAAkBlJ,KAAKkG,SAASrE,OAAOyC,QAAK,EAC5C6E,UAEDhB,UAAU,EAAE3B,EAAW3D,EAAad,EAAMF,MAC3C,MAAMuH,EAAW5C,EAAUxD,KAAKqG,GAAKA,EAAErE,MAAQnC,GAE/C,IAAIsD,EAAoB,KACpBpE,IACFF,EAASA,EAAOuE,OAChBrE,EAAOyH,KAAeC,aAAa1H,EAAKqE,QAExCD,EAAY,GAAGtE,EAAS,GAAGA,KAAY,KADvCE,EAAO,GAAGqH,GAAUM,QAAU,KAAK3H,IAAOqH,GAAUO,QAAU,KAAKP,GAAU1I,WAAa,OACvCkJ,QAAQ,UAAW,MAGpE5J,KAAKkG,SAASC,UAAU7B,QAAU6B,GACpCnG,KAAKkG,SAASC,UAAUmC,WAAWnC,EAAS,GAIpD,CAEQyB,iBACN,MAAMiC,EAAa7J,KAAKuH,WAAWlH,QACjCC,KAAIkG,IACF,MAAMsD,EAAuC,CAC3C,CAAC9J,KAAKoH,KAAMpH,KAAKoH,KAEnBZ,SAAUtF,QAAQkI,IAChBA,EAASW,WAAW7I,QAAQwH,IAC1BoB,EAAapB,GAAYA,GAC1B,GAEIsB,OAAOC,KAAKH,EAAY,IAG7BI,EAAYlK,KAAKuH,WAAWlH,QAChCC,KAAIkG,IACF,MAAM2D,EAAsC,CAC1C,CAACnK,KAAKoH,KAAMpH,KAAKoH,KAEnBZ,SAAUtF,QAAQkI,IAChBe,EAAYf,EAASgB,SAAWhB,EAASgB,UAEpCJ,OAAOC,KAAKE,EAAW,IAG5B5C,KAAayB,KAAc,CAC/BhJ,KAAKuH,WACLvH,KAAKkG,SAASwC,SAASO,aAAa5I,QAClC6I,KAAkBlJ,KAAKkG,SAASwC,SAASpE,QAAK,EAC9C6E,QAEFnJ,KAAKkG,SAASxD,QAAQuG,aAAa5I,QACjC6I,KAAkBlJ,KAAKkG,SAASxD,QAAQ4B,QAAK,EAC7C6E,UAED9I,QACDC,KAAI,EAAEkG,EAAWkC,EAAUhG,KACR8D,EAAU6D,OAAOjB,IACVV,IAAa1I,KAAKoH,MAAQgC,EAASW,WAAWO,SAAS5B,KAAa,MACrEhG,IAAY1C,KAAKoH,KAAOgC,EAASgB,UAAY1H,MAIrE,EACD6H,KAAI/D,IACF,IAAKA,EAAUgE,KAAKnB,GAAKA,EAAErE,MAAQhF,KAAKkG,SAASrD,YAAYyB,OAAQ,CACnE,MAAMmG,EAAiBjE,EAAU,IAAIxB,KAAO,KACxChF,KAAKkG,SAASrD,YAAYyB,QAAUmG,GACtCzK,KAAKkG,SAASrD,YAAYyF,WAAWmC,EAEzC,KAGEC,KAAW1B,KAAc,CAC7BhJ,KAAKkG,SAASC,UAAU8C,aAAa5I,QACnC6I,KAAkBlJ,KAAKkG,SAASC,UAAU7B,QAAK,EAC/C6E,QAEFnJ,KAAKkG,SAASrD,YAAYoG,aAAa5I,QACrC6I,KAAkBlJ,KAAKkG,SAASrD,YAAYyB,QAAK,EACjD6E,UAED9I,KC/NA,SAASsK,EAAaC,EAAUC,EAAYC,IAAgBC,GAC/D,MAAMC,KAAYC,KAAML,EAAUC,GAClC,OCFG,SAASK,EAASC,EAAkBJ,GACvC,SAAOK,KAAQ,CAACC,EAAQC,KACpB,MAAQC,WAAU,EAAMC,YAAW,GAAUT,GAAgD,CAAC,EAC9F,IAAIU,GAAW,EACXC,EAAY,KACZC,EAAY,KACZC,GAAa,EACjB,MAAMC,EAAgBA,KACoCF,GAAUG,cAChEH,EAAY,KACRH,IACAO,IACAH,GAAcN,EAAWxD,WAAS,EAGpCkE,EAAoBA,KACtBL,EAAY,KACZC,GAAcN,EAAWxD,UAAS,EAEhCmE,EAAiB3H,GAAWqH,KAAYO,MAAUf,EAAiB7G,IAAQ6D,aAAUgE,KAAyBb,EAAYO,EAAeG,IACzID,EAAOA,KACT,GAAIN,EAAU,CACVA,GAAW,EACX,MAAMnH,EAAQoH,EACdA,EAAY,KACZJ,EAAW/C,KAAKjE,IACfsH,GAAcK,EAAc3H,EACjC,GAEJ+G,EAAOlD,aAAUgE,KAAyBb,EAAahH,IACnDmH,GAAW,EACXC,EAAYpH,IACVqH,GAAcA,EAAUS,UAAYb,EAAUQ,IAASE,EAAc3H,GAAK,EAC7E,KACCsH,GAAa,KACXJ,GAAYC,GAAYE,IAAcA,EAAUS,SAAWd,EAAWxD,UAAS,GACnF,EAEV,CDpCWoD,CAAS,IAAMF,EAAWD,EACrC,CD6NMJ,CAAa,IAAKG,IAAgB,CAAES,SAAS,EAAMC,UAAU,KAAM,EACnEjB,KAAI,KACFvK,KAAKyH,gBAAgBc,MAAK,EAAI,IAC/B,EACD8D,KAAU,EAAElG,EAAWtD,KACbsD,GAActD,GACe,EACjCyJ,KAAS,CACTtM,KAAKqH,cAAczE,WAAWuD,EAAWnG,KAAKgH,WAAWlH,OAAQ+C,IAAW,EAC5EoI,KAAM,OACL5K,QAAKC,KAAI,EAAE+E,KAAaA,KALPxC,EAClB0J,WAAwBC,KAK7B,EACDjC,KAAI,KACFvK,KAAKyH,gBAAgBc,MAAK,EAAK,IAGnCvI,KAAKyM,cAAazD,KAAc,CAACa,EAAYK,EAAW3C,EAAYmD,EAAU1K,KAAKyH,kBAAkBpH,QACnGC,KAAI,EAAEgG,EAAWC,EAAUC,EAAWnB,EAASD,MAAc,CAEzDkB,YACAC,WACAC,YACApB,iBACAC,QAASA,GAASqH,QAClB7F,aAAcxB,GAASsH,UAAW,EAClCrH,aAAcD,GAASuH,SAK/B,iDAxNW9F,GAAyBrC,MAe1BoI,MAAepI,MAAAC,MAAA,oCAfdoC,EAAyBnC,UAAA,6BAAAmI,SAAA,EAAAC,aAAA,SAAAC,EAAAC,GAAA,EAAAD,GAAzBvI,MAAA,YAAAwI,EAAA9F,6gCDzCb1C,MAAA,EAAAyI,GAAA,2CAAAzI,OAAA0I,EAAA1I,MAAA,IAAAwI,EAAAR,aAAA,KAAAU,mBC2BQC,KAAWC,yBACXC,KAAmBD,UACnBE,KAAkBC,UAClBC,KAAeC,KAAAC,KACfC,KACAC,KAAcC,KACdC,KAAwBC,KACxBC,KAAeC,KACfC,KACAC,KACAC,IACA3K,GAA0B4K,OAAA,s6CAGrBxH,CAA0B","names":["appFilesAsset","apiExplorerAppApiFiles","SourceService","HttpServiceBase","get","viewKey","global","urlItems","this","getHttpApiUrl","params","appId","templateIdOrPath","pipe","map","view","Type","toLocaleLowerCase","Extension","save","http","post","apiUrl","getAll","mask","Files","forEach","file","Shared","getWebApis","files","isShared","isCompiled","splitIndex","path","lastIndexOf","fileExtIndex","folder","substring","name","endpointPath","edition","getWebApisSig","apiFilesSignal","getSignal","computed","getWebApiDetails","apiPath","zoneId","getPredefinedTemplates","purpose","type","getPreview","templateKey","create","test","find","i","EntityId","toString","IsShared","Path","templateId","__ngFactoryType__","factory","ɵfac","MatInputAutofocusDirective","constructor","matInput","elementRef","autofocusSelectValue","input","ngOnInit","setTimeout","focus","toBoolean","nativeElement","setSelectionRange","value","length","valueLowerCase","i0","i1","selectors","inputs","platform_r2","purpose_r3","template_r4","Key","Name","_c0","vm_r6","loadingPreview","preview","previewError","CreateFileDialogComponent_Conditional_0_For_17_Template","CreateFileDialogComponent_Conditional_0_For_24_Template","CreateFileDialogComponent_Conditional_0_For_31_Template","CreateFileDialogComponent_Conditional_0_Conditional_37_Template","CreateFileDialogComponent_Conditional_0_Conditional_39_Template","_r1","ctx_r4","closeDialog","confirm","CreateFileDialogComponent_Conditional_0_Conditional_44_Template","CreateFileDialogComponent_Conditional_0_Conditional_45_Template","controls","finalName","trim","form","platforms","purposes","templates","touched","errors","required","valid","previewValid","CreateFileDialogComponent","BaseComponent","dialogData","dialog","super","hostClass","all","sourceService","transient","templates$","BehaviorSubject","loadingPreview$","buildForm","fetchTemplates","buildViewModel","ngOnDestroy","complete","result","close","formValues","getRawValue","subscribe","response","Default","patchValue","next","Templates","UntypedFormGroup","platform","UntypedFormControl","disabled","Validators","subscriptions","add","combineLatest","valueChanges","startWith","distinctUntilChanged","template","t","suggestedName","SuggestedFileName","SanitizeHelper","sanitizePath","Prefix","Suffix","replace","platforms$","platformsMap","Platforms","Object","keys","purposes$","purposesMap","Purpose","filter","includes","tap","some","newTemplateKey","preview$","throttleTime","duration","scheduler","asyncScheduler","config","duration$","timer","throttle","durationSelector","operate","source","subscriber","leading","trailing","hasValue","sendValue","throttled","isComplete","endThrottling","unsubscribe","send","cleanupThrottling","startThrottle","innerFrom","createOperatorSubscriber","closed","switchMap","forkJoin","of","undefined","viewModel$","Preview","IsValid","Error","MAT_DIALOG_DATA","hostVars","hostBindings","rf","ctx","CreateFileDialogComponent_Conditional_0_Template","tmp_0_0","FormsModule","i2","ReactiveFormsModule","MatFormFieldModule","i3","MatSelectModule","i4","i5","MatOptionModule","MatInputModule","i6","MatProgressSpinnerModule","i7","MatButtonModule","i8","NgClass","AsyncPipe","FieldHintComponent","styles"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/code-editor/services/source.service.ts","./projects/eav-ui/src/app/shared/directives/mat-input-autofocus.directive.ts","./projects/eav-ui/src/app/create-file-dialog/create-file-dialog.component.html","./projects/eav-ui/src/app/create-file-dialog/create-file-dialog.component.ts","./node_modules/rxjs/dist/esm/internal/operators/throttleTime.js","./node_modules/rxjs/dist/esm/internal/operators/throttle.js"],"sourcesContent":["import { computed, Injectable, Signal } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { WebApi, WebApiDetails } from '../../app-administration/models';\r\nimport { ViewOrFileIdentifier } from '../../shared/models/edit-form.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { FileAsset } from '../models/file-asset.model';\r\nimport { PredefinedTemplatesResponse } from '../models/predefined-template.model';\r\nimport { Preview } from '../models/preview.models';\r\nimport { SourceView } from '../models/source-view.model';\r\n\r\nconst appFilesAll = 'admin/AppFiles/AppFiles';\r\nconst appFilesAsset = 'admin/AppFiles/asset';\r\nconst appFilesCreate = 'admin/AppFiles/create';\r\nconst apiExplorerInspect = 'admin/ApiExplorer/inspect';\r\nconst apiExplorerAppApiFiles = 'admin/ApiExplorer/AppApiFiles';\r\nconst appFilesPredefinedTemplates = 'admin/AppFiles/GetTemplates';\r\nconst appFilesPreview = 'admin/AppFiles/preview';\r\n\r\n@Injectable()\r\nexport class SourceService extends HttpServiceBase {\r\n\r\n  /** ViewKey is templateId or path */\r\n  get(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[]): Observable<SourceView> {\r\n    return this.getHttpApiUrl<SourceView>(appFilesAsset, {\r\n      params: {\r\n        appId: this.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    }).pipe(\r\n      map(view => {\r\n        if (view.Type.toLocaleLowerCase() === 'auto') {\r\n          switch (view.Extension.toLocaleLowerCase()) {\r\n            case '.cs':\r\n            case '.cshtml':\r\n              view.Type = 'Razor';\r\n              break;\r\n            case '.html':\r\n            case '.css':\r\n            case '.js':\r\n              view.Type = 'Token';\r\n              break;\r\n          }\r\n        }\r\n        return view;\r\n      })\r\n    );\r\n  }\r\n\r\n  // TODO: For Code Editor,\r\n  // getSig(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[], initial: undefined): Signal<SourceView> {\r\n  //   // Signal für die SourceView erstellen\r\n  //   const temp = this.getSignal<SourceView>(appFilesAsset, {\r\n  //     params: {\r\n  //       appId: this.appId,\r\n  //       global,\r\n  //       ...this.templateIdOrPath(viewKey, global, urlItems),\r\n  //     },\r\n  //   }, initial);\r\n  //   return computed(() => {\r\n  //     const result = temp();\r\n\r\n  //     if (result && result.Type.toLocaleLowerCase() === 'auto') {\r\n  //       switch (result.Extension.toLocaleLowerCase()) {\r\n  //         case '.cs':\r\n  //         case '.cshtml':\r\n  //           result.Type = 'Razor';\r\n  //           break;\r\n  //         case '.html':\r\n  //         case '.css':\r\n  //         case '.js':\r\n  //           result.Type = 'Token';\r\n  //           break;\r\n  //       }\r\n  //     }\r\n\r\n  //     return result;\r\n  //   });\r\n  // }\r\n\r\n\r\n  /** ViewKey is templateId or path */\r\n  save(viewKey: string, global: boolean, view: SourceView, urlItems: ViewOrFileIdentifier[]): Observable<boolean> {\r\n    return this.http.post<boolean>(this.apiUrl(appFilesAsset), view, {\r\n      params: {\r\n        appId: this.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    });\r\n  }\r\n\r\n  getAll(mask?: string): Observable<FileAsset[]> {\r\n    return this.getHttpApiUrl<{ Files: FileAsset[] }>(appFilesAll, {\r\n      params: {\r\n        appId: this.appId,\r\n        ...(mask && { mask }),\r\n      },\r\n    }).pipe(\r\n      map(({ Files }) => {\r\n        Files.forEach(file => {\r\n          file.Shared ??= false;\r\n        });\r\n        return Files;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getWebApis(): Observable<WebApi[]> {\r\n    return this.getHttpApiUrl<{ files: WebApi[] }>(apiExplorerAppApiFiles, {\r\n      params: {\r\n        appId: this.appId,\r\n      },\r\n    }).pipe(\r\n      map(({ files }) => {\r\n        files.forEach(file => {\r\n          file.isShared ??= false;\r\n          file.isCompiled ??= false;\r\n        });\r\n        return files;\r\n      }),\r\n    ).pipe(\r\n      map(files => {\r\n        const webApis: WebApi[] = files.map(file => {\r\n          const splitIndex = file.path.lastIndexOf('/');\r\n          const fileExtIndex = file.path.lastIndexOf('.');\r\n          const folder = file.path.substring(0, splitIndex);\r\n          const name = file.path.substring(splitIndex + 1, fileExtIndex);\r\n          const webApi: WebApi = { path: file.path, folder, name, isShared: file.isShared, endpointPath: file.endpointPath, isCompiled: file.isCompiled, edition: file.edition };\r\n          return webApi;\r\n        });\r\n        return webApis;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getWebApisSig(): Signal<WebApi[]> {\r\n    // Get the signal that retrieves the API files\r\n    const apiFilesSignal = this.getSignal<{ files: WebApi[] }>(apiExplorerAppApiFiles, {\r\n      params: {\r\n        appId: this.appId,\r\n      },\r\n    });\r\n\r\n    // Use a computed signal to transform the data\r\n    const webApisSignal = computed(() => {\r\n      const files = apiFilesSignal()?.files;\r\n\r\n      if(!files) {\r\n        return [];\r\n      }\r\n\r\n      // Ensure the default values for `isShared` and `isCompiled`\r\n      files.forEach(file => {\r\n        file.isShared ??= false;\r\n        file.isCompiled ??= false;\r\n      });\r\n\r\n      // Map the files to the desired WebApi format\r\n      return files.map(file => {\r\n        const splitIndex = file.path.lastIndexOf('/');\r\n        const fileExtIndex = file.path.lastIndexOf('.');\r\n        const folder = file.path.substring(0, splitIndex);\r\n        const name = file.path.substring(splitIndex + 1, fileExtIndex);\r\n\r\n        return {\r\n          path: file.path,\r\n          folder,\r\n          name,\r\n          isShared: file.isShared,\r\n          endpointPath: file.endpointPath,\r\n          isCompiled: file.isCompiled,\r\n          edition: file.edition,\r\n        } as WebApi;\r\n      });\r\n    });\r\n\r\n    return webApisSignal;\r\n  }\r\n\r\n\r\n  getWebApiDetails(apiPath: string): Observable<WebApiDetails> {\r\n    return this.getHttpApiUrl<WebApiDetails>(apiExplorerInspect, {\r\n      params: { appId: this.appId, zoneId: this.zoneId, path: apiPath },\r\n    });\r\n  }\r\n\r\n  getPredefinedTemplates(purpose?: 'Template' | 'Search' | 'Api', type?: 'Token' | 'Razor'): Observable<PredefinedTemplatesResponse> {\r\n    return this.getHttpApiUrl<PredefinedTemplatesResponse>(appFilesPredefinedTemplates, {\r\n      params: {\r\n        ...(purpose && { purpose }),\r\n        ...(type && { type }),\r\n      },\r\n    });\r\n  }\r\n\r\n  getPreview(path: string, global: boolean, templateKey: string): Observable<Preview> {\r\n    return this.getHttpApiUrl<Preview>(appFilesPreview, {\r\n      params: {\r\n        appId: this.appId,\r\n        path,\r\n        templateKey,\r\n        global,\r\n      },\r\n    });\r\n  }\r\n\r\n  create(path: string, global: boolean, templateKey: string): Observable<boolean> {\r\n    return this.http.post<boolean>(this.apiUrl(appFilesCreate), {}, {\r\n      params: {\r\n        appId: this.appId,\r\n        global,\r\n        purpose: 'auto',\r\n        path,\r\n        templateKey,\r\n      },\r\n    });\r\n  }\r\n\r\n  private templateIdOrPath(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[]) {\r\n    if (/^[0-9]*$/g.test(viewKey)) {\r\n      const path = urlItems.find(i => i.EntityId?.toString() === viewKey && i.IsShared === global)?.Path;\r\n      return {\r\n        templateId: viewKey,\r\n        ...(path != null && { path }),\r\n      };\r\n    } else {\r\n      return { path: viewKey };\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, input, OnInit } from '@angular/core';\r\nimport { MatInput } from '@angular/material/input';\r\n\r\n@Directive({\r\n  selector: '[appMatInputAutofocus]',\r\n})\r\nexport class MatInputAutofocusDirective implements OnInit {\r\n  autofocusSelectValue = input<string | boolean | null | undefined>(false);\r\n\r\n  constructor(private matInput: MatInput, private elementRef: ElementRef<HTMLInputElement>) { }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.matInput.focus();\r\n\r\n      if (this.toBoolean(this.autofocusSelectValue())) {\r\n        this.elementRef.nativeElement.setSelectionRange(0, this.matInput.value.length);\r\n      }\r\n    });\r\n  }\r\n\r\n  private toBoolean(value: any): boolean | null | undefined {\r\n    if (typeof value === 'boolean') { return value; }\r\n    if (typeof value === 'string') {\r\n      const valueLowerCase = value.toLocaleLowerCase();\r\n      if (valueLowerCase === 'true') { return true; }\r\n      if (valueLowerCase === 'false') { return false; }\r\n      return;\r\n    }\r\n    if (value == null) { return value; }\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n<div class=\"eav-dialog eav-no-scrollbar\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title eav-dialog-title-box\">\r\n      <span>Create</span>\r\n      <span class=\"eav-file-name\">{{\r\n        controls.finalName.value\r\n        || (controls.folder.value ? controls.folder.value.trim() + '/' : '')\r\n        }}</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <form [formGroup]=\"form\" class=\"dialog-form\">\r\n      <div class=\"dialog-form-content\">\r\n        <div class=\"eav-field-container eav-multiple\">\r\n          <!-- Platform -->\r\n          <div class=\"eav-multiple-field\">\r\n            <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n              <mat-label>Platform</mat-label>\r\n              <mat-select formControlName=\"platform\">\r\n                @for (platform of vm.platforms; track platform) {\r\n                <mat-option [value]=\"platform\">\r\n                  {{ platform }}\r\n                </mat-option>\r\n                }\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <!-- Purpose -->\r\n          <div class=\"eav-multiple-field\">\r\n            <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n              <mat-label>Purpose</mat-label>\r\n              <mat-select formControlName=\"purpose\">\r\n                @for (purpose of vm.purposes; track purpose) {\r\n                <mat-option [value]=\"purpose\">\r\n                  {{ purpose }}\r\n                </mat-option>\r\n                }\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <!-- Template -->\r\n        <div class=\"eav-field-container\">\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Template</mat-label>\r\n            <mat-select formControlName=\"templateKey\">\r\n              @for (template of vm.templates; track template) {\r\n              <mat-option [value]=\"template.Key\">\r\n                {{ template.Name }}\r\n              </mat-option>\r\n              }\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <!-- Name -->\r\n        <div class=\"eav-field-container\">\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Name</mat-label>\r\n            <input matInput type=\"text\" formControlName=\"name\" required appMatInputAutofocus\r\n              autofocusSelectValue=\"true\">\r\n          </mat-form-field>\r\n          @if (controls.name.touched && controls.name.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n          }\r\n        </div>\r\n      </div>\r\n      <div class=\"dialog-form-actions\">\r\n        @if (vm.loadingPreview) {\r\n        <mat-spinner mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n        <div class=\"spacer\"></div>\r\n        }\r\n        <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n        <button mat-raised-button type=\"button\" color=\"accent\"\r\n          [disabled]=\"!form.valid || vm.loadingPreview || !vm.previewValid\" (click)=\"confirm()\">\r\n          Create\r\n        </button>\r\n      </div>\r\n      @if (vm.preview) {\r\n      <div class=\"eav-preview-label-box\">\r\n        <label class=\"eav-preview-label\" [ngClass]=\"{ 'disabled': vm.loadingPreview }\">Preview</label>\r\n      </div>\r\n      <pre class=\"fancy-scrollbar-light\" [ngClass]=\"{ 'disabled': vm.loadingPreview }\">{{ vm.preview }}</pre>\r\n      }\r\n      @if (!vm.loadingPreview && vm.previewError) {\r\n      <div class=\"eav-preview-error\">\r\n        {{ vm.previewError }}\r\n      </div>\r\n      }\r\n    </form>\r\n  </div>\r\n</div>\r\n}\r\n","import { Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n// tslint:disable-next-line:max-line-length\r\nimport { AsyncPipe, NgClass } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { asyncScheduler, BehaviorSubject, combineLatest, distinctUntilChanged, forkJoin, map, Observable, of, startWith, switchMap, tap, throttleTime, timer } from 'rxjs';\r\nimport { CreateFileDialogData, CreateFileDialogResult, CreateFileFormControls, CreateFileFormValues, CreateFileViewModel } from '.';\r\nimport { transient } from '../../../../core';\r\nimport { PredefinedTemplate } from '../code-editor/models/predefined-template.model';\r\nimport { Preview } from '../code-editor/models/preview.models';\r\nimport { SourceService } from '../code-editor/services/source.service';\r\nimport { SanitizeHelper } from '../edit/shared/helpers';\r\nimport { BaseComponent } from '../shared/components/base.component';\r\nimport { FieldHintComponent } from '../shared/components/field-hint/field-hint.component';\r\nimport { MatInputAutofocusDirective } from '../shared/directives/mat-input-autofocus.directive';\r\n\r\n@Component({\r\n    selector: 'app-create-file-dialog',\r\n    templateUrl: './create-file-dialog.component.html',\r\n    styleUrls: ['./create-file-dialog.component.scss'],\r\n    imports: [\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        MatInputModule,\r\n        MatProgressSpinnerModule,\r\n        MatButtonModule,\r\n        NgClass,\r\n        AsyncPipe,\r\n        FieldHintComponent,\r\n        MatInputAutofocusDirective,\r\n    ]\r\n})\r\nexport class CreateFileDialogComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  controls: CreateFileFormControls;\r\n  viewModel$: Observable<CreateFileViewModel>;\r\n  // TODO: 2dg ViewModel Offen > Views, Create Template\r\n\r\n  private all = 'All' as const;\r\n  private templates$: BehaviorSubject<PredefinedTemplate[]>;\r\n  private loadingPreview$: BehaviorSubject<boolean>;\r\n\r\n  private sourceService = transient(SourceService);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: CreateFileDialogData,\r\n    private dialog: MatDialogRef<CreateFileDialogComponent>,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.templates$ = new BehaviorSubject<PredefinedTemplate[]>([]);\r\n    this.loadingPreview$ = new BehaviorSubject(false);\r\n\r\n    this.buildForm();\r\n    this.fetchTemplates();\r\n    this.buildViewModel();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.templates$.complete();\r\n    this.loadingPreview$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(result?: CreateFileDialogResult): void {\r\n    this.dialog.close(result);\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: CreateFileFormValues = this.form.getRawValue();\r\n\r\n    const result: CreateFileDialogResult = {\r\n      name: formValues.finalName,\r\n      templateKey: formValues.templateKey,\r\n    };\r\n    this.closeDialog(result);\r\n  }\r\n\r\n  private fetchTemplates(): void {\r\n    this.sourceService.getPredefinedTemplates(this.dialogData.purpose, this.dialogData.type).subscribe(response => {\r\n      if (this.controls.templateKey.value !== response.Default) {\r\n        this.controls.templateKey.patchValue(response.Default);\r\n      }\r\n      this.templates$.next(response.Templates);\r\n    });\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({\r\n      platform: new UntypedFormControl(this.all),\r\n      purpose: new UntypedFormControl({ value: this.dialogData.purpose ?? this.all, disabled: this.dialogData.purpose != null }),\r\n      templateKey: new UntypedFormControl(null, Validators.required),\r\n      name: new UntypedFormControl(this.dialogData.name ?? null, Validators.required),\r\n      finalName: new UntypedFormControl({ value: null, disabled: true }),\r\n      folder: new UntypedFormControl({ value: this.dialogData.folder ?? '', disabled: true }),\r\n    });\r\n\r\n    this.controls = this.form.controls as any;\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([\r\n        this.templates$,\r\n        this.controls.templateKey.valueChanges.pipe(\r\n          startWith<string>(this.controls.templateKey.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n      ]).subscribe(([templates, templateKey]) => {\r\n        const template = templates.find(t => t.Key === templateKey);\r\n        const suggestedName = this.dialogData.name\r\n          ? this.controls.name.value || this.dialogData.name\r\n          : template?.SuggestedFileName ?? null;\r\n\r\n        if (this.controls.name.value !== suggestedName) {\r\n          this.controls.name.patchValue(suggestedName);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([\r\n        this.templates$,\r\n        this.controls.templateKey.valueChanges.pipe(\r\n          startWith<string>(this.controls.templateKey.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n        this.controls.name.valueChanges.pipe(\r\n          startWith<string>(this.controls.name.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n        this.controls.folder.valueChanges.pipe(\r\n          startWith<string>(this.controls.folder.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n      ]).subscribe(([templates, templateKey, name, folder]) => {\r\n        const template = templates.find(t => t.Key === templateKey);\r\n\r\n        let finalName: string = null;\r\n        if (name) {\r\n          folder = folder.trim();\r\n          name = SanitizeHelper.sanitizePath(name.trim());\r\n          name = `${template?.Prefix ?? ''}${name}${template?.Suffix ?? ''}${template?.Extension ?? ''}`;\r\n          finalName = `${folder ? `${folder}/` : ''}${name}`.replace(/\\/{2,}/g, '/');\r\n        }\r\n\r\n        if (this.controls.finalName.value !== finalName) {\r\n          this.controls.finalName.patchValue(finalName);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private buildViewModel(): void {\r\n    const platforms$ = this.templates$.pipe(\r\n      map(templates => {\r\n        const platformsMap: Record<string, string> = {\r\n          [this.all]: this.all,\r\n        };\r\n        templates.forEach(template => {\r\n          template.Platforms?.forEach(platform => {\r\n            platformsMap[platform] = platform;\r\n          });\r\n        });\r\n        return Object.keys(platformsMap);\r\n      }),\r\n    );\r\n    const purposes$ = this.templates$.pipe(\r\n      map(templates => {\r\n        const purposesMap: Record<string, string> = {\r\n          [this.all]: this.all,\r\n        };\r\n        templates.forEach(template => {\r\n          purposesMap[template.Purpose] = template.Purpose;\r\n        });\r\n        return Object.keys(purposesMap);\r\n      }),\r\n    );\r\n    const templates$ = combineLatest([\r\n      this.templates$,\r\n      this.controls.platform.valueChanges.pipe(\r\n        startWith<string>(this.controls.platform.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n      this.controls.purpose.valueChanges.pipe(\r\n        startWith<string>(this.controls.purpose.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n    ]).pipe(\r\n      map(([templates, platform, purpose]) => {\r\n        const filtered = templates.filter(template => {\r\n          const platformMatch = platform === this.all || (template.Platforms?.includes(platform) ?? false);\r\n          const purposeMatch = purpose === this.all || template.Purpose === purpose;\r\n          return platformMatch && purposeMatch;\r\n        });\r\n        return filtered;\r\n      }),\r\n      tap(templates => {\r\n        if (!templates.some(t => t.Key === this.controls.templateKey.value)) {\r\n          const newTemplateKey = templates[0]?.Key ?? null;\r\n          if (this.controls.templateKey.value !== newTemplateKey) {\r\n            this.controls.templateKey.patchValue(newTemplateKey);\r\n          }\r\n        }\r\n      }),\r\n    );\r\n    const preview$ = combineLatest([\r\n      this.controls.finalName.valueChanges.pipe(\r\n        startWith<string>(this.controls.finalName.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n      this.controls.templateKey.valueChanges.pipe(\r\n        startWith<string>(this.controls.templateKey.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n    ]).pipe(\r\n      throttleTime(100, asyncScheduler, { leading: true, trailing: true }),\r\n      tap(() => {\r\n        this.loadingPreview$.next(true);\r\n      }),\r\n      switchMap(([finalName, templateKey]) => {\r\n        return !finalName || !templateKey\r\n          ? of<Preview | undefined>(undefined)\r\n          : forkJoin([\r\n            this.sourceService.getPreview(finalName, this.dialogData.global, templateKey),\r\n            timer(500),\r\n          ]).pipe(map(([preview]) => preview));\r\n      }),\r\n      tap(() => {\r\n        this.loadingPreview$.next(false);\r\n      }),\r\n    );\r\n    this.viewModel$ = combineLatest([platforms$, purposes$, templates$, preview$, this.loadingPreview$]).pipe(\r\n      map(([platforms, purposes, templates, preview, loadingPreview]) => {\r\n        const viewModel: CreateFileViewModel = {\r\n          platforms,\r\n          purposes,\r\n          templates,\r\n          loadingPreview,\r\n          preview: preview?.Preview,\r\n          previewValid: preview?.IsValid ?? false,\r\n          previewError: preview?.Error,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { asyncScheduler } from '../scheduler/async';\nimport { throttle } from './throttle';\nimport { timer } from '../observable/timer';\nexport function throttleTime(duration, scheduler = asyncScheduler, config) {\n    const duration$ = timer(duration, scheduler);\n    return throttle(() => duration$, config);\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport function throttle(durationSelector, config) {\n    return operate((source, subscriber) => {\n        const { leading = true, trailing = false } = config !== null && config !== void 0 ? config : {};\n        let hasValue = false;\n        let sendValue = null;\n        let throttled = null;\n        let isComplete = false;\n        const endThrottling = () => {\n            throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();\n            throttled = null;\n            if (trailing) {\n                send();\n                isComplete && subscriber.complete();\n            }\n        };\n        const cleanupThrottling = () => {\n            throttled = null;\n            isComplete && subscriber.complete();\n        };\n        const startThrottle = (value) => (throttled = innerFrom(durationSelector(value)).subscribe(createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n        const send = () => {\n            if (hasValue) {\n                hasValue = false;\n                const value = sendValue;\n                sendValue = null;\n                subscriber.next(value);\n                !isComplete && startThrottle(value);\n            }\n        };\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            hasValue = true;\n            sendValue = value;\n            !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        }, () => {\n            isComplete = true;\n            !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }));\n    });\n}\n"],"x_google_ignoreList":[4,5]}