{"version":3,"file":"projects_eav-ui_src_app_apps-management_apps-management-nav_apps-management-nav_component_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/index.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/apps-management/apps-management-nav/apps-management-nav.component.ts","./projects/eav-ui/src/app/apps-management/apps-management-nav/apps-management-nav.component.html","./projects/eav-ui/src/app/apps-management/apps-management-nav/managment-nav-items.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts","./projects/eav-ui/src/app/shared/services/entity.service.ts","./projects/eav-ui/src/app/shared/services/query.service.ts","./projects/eav-ui/src/app/shared/services/service-base.ts"],"sourcesContent":["import { computed, Injectable, Signal } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\n\r\n// We should list all the \"full\" paths here, so it's easier to find when searching for API calls\r\nexport const webApiTypeRoot = 'admin/type/';\r\nconst webApiTypeGet = 'admin/type/get';\r\nconst webApiTypes = 'admin/type/list';\r\nconst webApiTypeScopes = 'admin/type/scopes';\r\nconst webApiTypeSave = 'admin/type/save';\r\nconst webApiTypeDelete = 'admin/type/delete';\r\nconst webApiTypeImport = 'admin/type/import';\r\nconst webApiTypeAddGhost = 'admin/type/addghost';\r\n\r\n@Injectable()\r\nexport class ContentTypesService extends HttpServiceBase {\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.getHttpApiUrl<ContentType>(webApiTypeGet, {\r\n      params: { appId: this.appId, contentTypeId: staticName }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypeSig(staticName: string, initial: undefined): Signal<ContentType> {\r\n    return this.getSignal<ContentType>(webApiTypeGet, {\r\n      params: { appId: this.appId, contentTypeId: staticName }\r\n    }, initial);\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.getHttpApiUrl<ContentType[]>(webApiTypes, {\r\n      params: { appId: this.appId, scope }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypesSig(scope: string, initial: undefined): Signal<ContentType[]> {\r\n    return this.getSignal<ContentType[]>(webApiTypes, {\r\n      params: { appId: this.appId, scope }\r\n    }, initial);\r\n  }\r\n\r\n  // TODO: remove this method after upgrade to V2\r\n  getScopes() {\r\n    return this.getHttpApiUrl<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(webApiTypeScopes, {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => {\r\n        // wip during upgrade:\r\n        const scopes = scopesData.old;\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getScopesSig(initial: undefined): Signal<ScopeOption[]> {\r\n    const scopesSignal = this.getSignal<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(\r\n      webApiTypeScopes,\r\n      { params: { appId: this.appId } }, initial,\r\n    );\r\n\r\n    const scopeOptionsSignal = computed(() => {\r\n      const scopesData = scopesSignal();\r\n\r\n      // Add null/undefined check here\r\n      if (!scopesData || !scopesData.old) {\r\n        return []; // Return an empty array or handle this case as appropriate\r\n      }\r\n\r\n      const scopes = scopesData.old;\r\n      return Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n    });\r\n\r\n    return scopeOptionsSignal;\r\n  }\r\n\r\n\r\n  getScopesV2() {\r\n    return this.getHttpApiUrl<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(webApiTypeScopes, {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => scopesData.scopes),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeSave), contentType, {\r\n      params: { appid: this.appId },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeDelete), {\r\n      params: { appid: this.appId, staticName: contentType.StaticName },\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeAddGhost), null, {\r\n      params: { appid: this.appId, sourceStaticName },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\n\r\nconst webApiAppPartsGet = 'admin/appParts/get';\r\n@Injectable()\r\nexport class ExportAppPartsService extends HttpServiceBase {\r\n\r\n  getContentInfo(scope: string, initial: ContentInfo) {\r\n    return this.getSignal<ContentInfo>(webApiAppPartsGet, {\r\n      params: { appid: this.appId, zoneId: this.zoneId, scope }\r\n    }, initial);\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.appId\r\n      + '&zoneId=' + this.zoneId\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { AppInfo } from '../models/app-info.model';\r\n\r\n const webApiAppRootStatistics = 'admin/app/Statistics';\r\n const webApiAppRootSaveData = 'admin/app/SaveData';\r\n\r\n\r\n@Injectable()\r\nexport class ExportAppService extends HttpServiceBase {\r\n\r\n  getAppInfo(initial: AppInfo) {\r\n    return this.getSignal<AppInfo>(webApiAppRootStatistics, {\r\n      params: { appid: this.appId, zoneId: this.zoneId },\r\n    }, initial);\r\n  }\r\n\r\n  /** Generate the export app path. It can be extended with additional parameters */\r\n  exportAppUrl() {\r\n    return `${this.apiUrl(`${webApiAppRoot}Export`)}?appId=${this.appId}&zoneId=${this.zoneId}`;\r\n  }\r\n\r\n  exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }) {\r\n    // return this.get<boolean>(webApiAppRoot + 'SaveData', {\r\n    return this.getHttpApiUrl<boolean>(webApiAppRootSaveData, {\r\n      params: {\r\n        appid: this.appId,\r\n        zoneId: this.zoneId,\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService extends HttpServiceBase {\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.appId,\r\n        zoneId: this.zoneId,\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","export * from './dialog-config-global.service';\r\nexport * from './content-types.service';\r\nexport * from './export-app-parts.service';\r\nexport * from './export-app.service';\r\nexport * from './import-app-parts.service';\r\nexport * from './pipelines.service';\r\nexport * from './views.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Query } from '../models/query.model';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService extends HttpServiceBase {\r\n\r\n  getAll(contentType: string) {\r\n    return this.getHttpApiUrl<Query[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiQueryImport), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.getHttpApiUrl<null>(webApiQueryClone, {\r\n      params: { Id: id.toString(), appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService extends HttpServiceBase {\r\n\r\n  getAll() {\r\n    return this.getHttpApiUrl<View[]>(webApiViews, {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.getHttpApiUrl<boolean>(webApiViewDelete, {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.getHttpApiUrl<Polymorphism>(webApiViewPolymorph, {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.getHttpApiUrl<ViewUsage[]>(webApiViewUsage, {\r\n      params: { appId: this.appId, guid }\r\n    });\r\n  }\r\n}\r\n","import { MediaMatcher } from '@angular/cdk/layout';\r\nimport { Component, inject, OnInit, ViewChild } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenav, MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { BreadcrumbModule } from 'xng-breadcrumb';\r\nimport { transient } from '../../../../../core';\r\nimport { DialogConfigGlobalService } from '../../app-administration/services';\r\nimport { NavItemListComponent } from '../../shared/components/nav-item-list/nav-item-list.component';\r\nimport { ToggleDebugDirective } from '../../shared/directives/toggle-debug.directive';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AppsManagementNavItems } from './managment-nav-items';\r\n\r\n@Component({\r\n  selector: 'app-apps-management-nav',\r\n  templateUrl: './apps-management-nav.component.html',\r\n  styleUrls: ['./apps-management-nav.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    BreadcrumbModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    RouterOutlet,\r\n    NavItemListComponent,\r\n    ToggleDebugDirective,\r\n  ],\r\n})\r\nexport class AppsManagementNavComponent implements OnInit {\r\n  @ViewChild('sidenav') sidenav!: MatSidenav;\r\n\r\n  #globalDialogConfigSvc = inject(DialogConfigGlobalService);\r\n\r\n  zoneId = this.context.zoneId;\r\n\r\n  smallScreen: MediaQueryList = this.media.matchMedia('(max-width: 1000px)');\r\n  sideNavOpened = !this.smallScreen.matches;\r\n\r\n  navItems = AppsManagementNavItems;\r\n  #dialogClose = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<AppsManagementNavComponent>,\r\n    private context: Context,\r\n    private media: MediaMatcher,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchDialogSettings();\r\n\r\n    // Trigger settings load? not sure why, because it's cached in the service... on dialog close?\r\n    this.#dialogClose.doOnDialogClosed(() => this.fetchDialogSettings());\r\n\r\n    this.smallScreen.addEventListener('change', c => (\r\n      this.sidenav.opened = !c.matches,\r\n      this.sidenav.mode = c.matches ? 'over' : 'side'\r\n    ));\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  private fetchDialogSettings() {\r\n    this.#globalDialogConfigSvc.getShared$(0).subscribe();\r\n  }\r\n\r\n}\r\n","\r\n<mat-toolbar appToggleDebug>\r\n  <div class=\"toolbar-container\">\r\n    <!-- Mat Icon Menu -->\r\n    <mat-icon class=\"menu-container\" (click)=\"sidenav.opened = !sidenav.opened\">menu</mat-icon>\r\n    <!-- App Name -->\r\n    <div>\r\n      <span> Manage Zone {{ zoneId }} </span>\r\n    </div>\r\n    <!-- Breadcrum in the Toolbar after show Img and Aoo Name -->\r\n    <xng-breadcrumb [separator]=\"emptyTemplate\">\r\n      <ng-container *xngBreadcrumbItem=\"let breadcrumb; let info = info; let last = last\">\r\n        @if (last)\r\n        {\r\n          <mat-icon class=\"breadcrumb-icon\">chevron_right</mat-icon>\r\n          {{ breadcrumb }}\r\n        }\r\n      </ng-container>\r\n    </xng-breadcrumb>\r\n    <ng-template #emptyTemplate></ng-template>\r\n  </div>\r\n  <span class=\"toolbar-spacer\"></span>\r\n  <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n    <mat-icon>close</mat-icon>\r\n  </button>\r\n</mat-toolbar>\r\n<mat-sidenav-container appToggleDebug>\r\n  <mat-sidenav #sidenav [mode]=\"smallScreen.matches ? 'over' : 'side'\" [opened]=\"sideNavOpened\">\r\n    @for (navItem of navItems; track navItem.path)\r\n    {\r\n      <app-nav-item-list [navItem]=\"navItem\"></app-nav-item-list>\r\n    }\r\n\r\n    <div class=\"sideNav-bottom-info\">\r\n      <p>use Burger icon to show/hide menu</p>\r\n    </div>\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content>\r\n    <div class=\"container-content\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { NavItem } from \"../../shared/models/nav-item.model\";\r\n\r\nexport const AppsManagementNavItems: NavItem[] = [\r\n  {\r\n    name: 'System', path: 'system', icon: 'settings', svgIcon: false, tippy: 'System Info', child: [\r\n      { name: 'Register', path: 'registration', icon: 'how_to_reg', svgIcon: false, tippy: 'Register this System on 2sxc Patrons' },\r\n    ]\r\n  },\r\n  { name: 'Apps', path: 'list', icon: 'star', svgIcon: false, tippy: 'Apps' },\r\n  { name: 'Languages', path: 'languages', icon: 'translate', svgIcon: false, tippy: 'Languages' },\r\n  { name: 'Extensions / Features', path: 'license', icon: 'tune', svgIcon: false, tippy: 'Extensions and Features' },\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService extends HttpServiceBase {\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.zoneId }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","import { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { ServiceBase } from '../services/service-base';\r\nimport { classLog } from '../logging';\r\n\r\nconst logSpecs = {\r\n  doOnDialogClosed: true,\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase {\r\n\r\n  log = classLog({DialogRoutingService}, logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  getParam(key: string): string {\r\n    return this.route.snapshot.paramMap.get(key);\r\n  }\r\n\r\n  getParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const paramMap = this.route.snapshot.paramMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = paramMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  getQueryParam(key: string): string {\r\n    return this.route.snapshot.queryParamMap.get(key);\r\n  }\r\n\r\n  getQueryParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const queryParamMap = this.route.snapshot.queryParamMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = queryParamMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe(() => callback())\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  public navParentFirstChild(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route.parent.firstChild });\r\n  }\r\n  \r\n  childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { filter, map, Observable, shareReplay, switchMap } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { EntityLightIdentifier } from '../../../../../edit-types/src/EntityLight';\r\nimport { classLog } from '../logging';\r\nimport { HttpServiceBase } from './http-service-base';\r\nimport { QueryService } from './query.service';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  getEntities: false,\r\n  getAvailableEntities: false,\r\n  delete: false,\r\n};\r\n\r\nexport const webApiEntityRoot = 'admin/entity/';\r\nexport const webApiEntityList = 'admin/entity/list';\r\n\r\n@Injectable()\r\nexport class EntityService extends HttpServiceBase {\r\n\r\n  log = classLog({ EntityService }, logSpecs);\r\n\r\n  private queryService = transient(QueryService);\r\n\r\n  /**\r\n   * Get entities based on the content type name.\r\n   * As of 2024-04-29 only used in REST API.\r\n   * @param params\r\n   * @returns\r\n   */\r\n  getEntities$(params: Observable<{ contentTypeName: string }>): Observable<EntityLightIdentifier[]> {\r\n    this.log.fnIf('getEntities');\r\n    return params.pipe(\r\n      filter(p => p != null),\r\n      switchMap(p => this.getAvailableEntities(p.contentTypeName).pipe(shareReplay(1))),\r\n    );\r\n  }\r\n\r\n  private getAvailableEntities(contentTypeName: string, entitiesFilter?: string[]): Observable<EntityLightIdentifier[]> {\r\n    var log = this.log.fnIf('getAvailableEntities');\r\n    return this.queryService.getEntities({\r\n      contentTypes: [contentTypeName],\r\n      itemIds: entitiesFilter,\r\n      fields: 'Id,Guid,Title',\r\n      log: 'getAvailableEntities'\r\n    }).pipe(\r\n      map(data => data.Default)\r\n    );\r\n  }\r\n\r\n  delete(appId: number, contentType: string, entityId: number, force: boolean, parentId?: number, parentField?: string): Observable<null> {\r\n    this.log.fnIf('delete', { appId, contentType, entityId, force, parentId, parent });\r\n    return this.http.delete<null>(this.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: {\r\n        contentType,\r\n        id: entityId.toString(),\r\n        appId,\r\n        force: force.toString(),\r\n        ...(parentId && { parentId: parentId.toString() }),\r\n        ...(parentId && parentField && { parentField }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { classLog } from '../logging';\r\nimport { QueryStreams } from '../models/query-stream.model';\r\nimport { Context } from './context';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  getAvailableEntities: false,\r\n  getEntities: false,\r\n};\r\n\r\n@Injectable()\r\nexport class QueryService {\r\n\r\n  log = classLog({QueryService}, logSpecs);\r\n\r\n  constructor(private http: HttpClient, private context: Context) { }\r\n\r\n  getFromQuery(queryUrl: string, params: string, fields: string, entitiesFilter?: string[]): Observable<QueryStreams> {\r\n    this.log.fnIf('getAvailableEntities', { queryUrl, params, fields, entitiesFilter });\r\n    // Check if any params we should auto-add are already set (like in a query which has these params set in the configuration)\r\n    const hasParams = !!params;\r\n    const paramsLower = params?.toLocaleLowerCase() ?? '';\r\n    const hasAppId = paramsLower.includes('appid=') ?? false;\r\n    const allParams = ''\r\n      + (hasAppId ? '' : `&appId=${this.context.appId}`)\r\n      + (hasParams ? `&${params}` : '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(`app/auto/query/${queryUrl}?${urlParams}`,\r\n      {\r\n        Guids: entitiesFilter,\r\n      },\r\n    );\r\n  }\r\n\r\n  getEntities({ contentTypes, itemIds, fields, log }: { contentTypes: string[]; itemIds: string[]; fields: string; log: string }): Observable<QueryStreams> {\r\n    this.log.fnIf(`getEntities`, { log, contentTypes, itemIds, fields });\r\n    const allParams =\r\n      '&typeNames=' + (contentTypes?.join(',') ?? '')\r\n      + `&appId=${this.context.appId}`\r\n      + '&itemIds=' + (itemIds?.join(',') ?? '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(\r\n      `app/auto/query/System.EntityPicker/Default?${urlParams}`,\r\n      {}\r\n    );\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n"],"names":["computed","Signal","map","HttpServiceBase","webApiTypeRoot","webApiTypeGet","webApiTypes","webApiTypeScopes","webApiTypeSave","webApiTypeDelete","webApiTypeImport","webApiTypeAddGhost","ContentTypesService","retrieveContentType","staticName","getHttpApiUrl","params","appId","contentTypeId","retrieveContentTypeSig","initial","getSignal","retrieveContentTypes","scope","retrieveContentTypesSig","getScopes","pipe","scopesData","scopes","old","scopeOptions","Object","keys","key","name","value","getScopesSig","scopesSignal","scopeOptionsSignal","getScopesV2","save","contentType","http","post","apiUrl","appid","delete","StaticName","import","files","formData","FormData","file","append","zoneId","createGhost","sourceStaticName","__ngFactoryType__","factory","ɵfac","webApiAppPartsRoot","webApiAppPartsGet","ExportAppPartsService","getContentInfo","exportParts","contentTypeIds","entityIds","templateIds","url","join","window","open","webApiAppRoot","webApiAppRootStatistics","webApiAppRootSaveData","ExportAppService","getAppInfo","exportAppUrl","exportForVersionControl","includeContentGroups","resetAppGuid","withFiles","toString","withPortalFiles","ImportAppPartsService","importAppParts","resetApp","from","switchMap","toBase64","webApiEntityList","webApiQueryImport","webApiQueryClone","webApiQueryDelete","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","importQuery","fileBase64","AppId","ContentBase64","success","result","Success","Messages","clonePipeline","id","Id","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","export","getPolymorphism","getUsage","guid","MediaMatcher","inject","MatButtonModule","MatDialogRef","MatIconModule","MatSidenav","MatSidenavModule","MatToolbarModule","RouterOutlet","BreadcrumbModule","transient","DialogConfigGlobalService","NavItemListComponent","ToggleDebugDirective","DialogRoutingService","Context","AppsManagementNavItems","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","breadcrumb_r3","ɵɵelementContainerStart","ɵɵtemplate","AppsManagementNavComponent_ng_container_8_Conditional_1_Template","ɵɵconditional","last_r4","ɵɵelement","ɵɵproperty","navItem_r5","AppsManagementNavComponent","globalDialogConfigSvc","dialogClose","constructor","dialog","context","media","smallScreen","matchMedia","sideNavOpened","matches","navItems","ngOnInit","fetchDialogSettings","doOnDialogClosed","addEventListener","c","sidenav","opened","mode","closeDialog","close","getShared$","subscribe","ɵɵdirectiveInject","i1","i2","i3","selectors","viewQuery","AppsManagementNavComponent_Query","rf","ctx","ɵɵlistener","AppsManagementNavComponent_Template_mat_icon_click_2_listener","ɵɵrestoreView","_r1","sidenav_r2","ɵɵreference","ɵɵresetView","AppsManagementNavComponent_ng_container_8_Template","AppsManagementNavComponent_ng_template_9_Template","ɵɵtemplateRefExtractor","AppsManagementNavComponent_Template_button_click_12_listener","ɵɵrepeaterCreate","AppsManagementNavComponent_For_19_Template","_forTrack0","emptyTemplate_r6","ɵɵrepeater","i4","MatToolbar","i5","MatIcon","i6","BreadcrumbComponent","BreadcrumbItemDirective","i7","MatIconButton","i8","MatSidenavContainer","MatSidenavContent","styles","path","icon","svgIcon","tippy","child","of","FileUploadMessageTypes","ImportAppService","importApp","changedName","retryOnDuplicate","MessageType","Warning","folderName","prompt","Text","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","split","onerror","error","readAsText","ActivatedRoute","NavigationEnd","Router","filter","pairwise","startWith","ServiceBase","classLog","logSpecs","router","route","log","snapshot","getParam","paramMap","get","getParams","reduce","acc","getQueryParam","queryParamMap","getQueryParams","state","getCurrentNavigation","extras","callback","l","fnIf","subscriptions","add","childDialogClosed$","end","navPath","navigate","navRelative","commands","relativeTo","navParentFirstChild","parent","firstChild","events","event","hadChildBefore","hasChildNow","ɵɵinject","shareReplay","QueryService","all","getEntities","getAvailableEntities","webApiEntityRoot","EntityService","queryService","getEntities$","p","contentTypeName","entitiesFilter","contentTypes","itemIds","fields","data","Default","entityId","force","parentId","parentField","HttpClient","getFromQuery","queryUrl","hasParams","paramsLower","toLocaleLowerCase","hasAppId","includes","allParams","urlParams","substring","Guids","Subscription","ngOnDestroy","destroy","unsubscribe"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}