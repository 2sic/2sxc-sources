{"version":3,"file":"default-projects_eav-ui_src_app_permissions_permissions_component_ts.65d641c823d04374.js","mappings":"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","names":["convert","obj","fn","getWith","TrueFalseComponent","constructor","this","trueIcon","falseIcon","agInit","params","value","reverse","icon","refresh","static","t","_angular_core__WEBPACK_IMPORTED_MODULE_0__","VBU","selectors","standalone","features","i0","decls","vars","consts","template","rf","ctx","MatIconModule","i1","encapsulation","PermissionsActionsComponent","deletePermission","onDelete","data","core","MatRippleModule","i2","PermissionsComponent","#permissionsService","#dialogRoutes","#params","#prefills","dialogRef","snackBar","gridOptions","buildGridOptions","permissions","signal","transient","PermissionsService","DialogRoutingService","getParams","p","targetType","parseInt","keyType","key","eavConstants","metadata","language","PermissionType","ngOnInit","#fetchPermissions","doOnDialogClosed","closeDialog","close","getAll","subscribe","set","editPermission","permission","form","items","EditPrep","newMetadataFromInfo","contentTypes","constructMetadataInfo","Prefill","editId","Id","formUrl","convertFormToUrl","navRelative","confirm","Title","open","delete","duration","defaultGridOptions","columnDefs","ColumnDefinitions","cellRendererParams","idFieldParamsTooltipGetter","TextWide","headerName","field","sort","onCellClicked","Character","ActionsPinnedRight1","cellRenderer","MatButtonModule","i3","i4","RouterOutlet","MatDialogActions","SxcGridModule","i5","MetadataService","http","context","dnnContext","getMetadata","contentTypeName","get","$2sxc","apiUrl","appId","toString","contentType","_angular_core__WEBPACK_IMPORTED_MODULE_1__","jDH","factory","ɵfac","metadataService","entitiesService","EntityEditService","pipe","map","Items","id","_angular_core__WEBPACK_IMPORTED_MODULE_5__","AgBoolCellIconsDefault","states","true","tooltip","false","AgBoolIconRenderer_Conditional_1_ng_container_1_Template","ctx_r0","url","showIcon_r2","_c0","clickable","AgBoolIconRenderer","allSettings","settings","d","getUrl","AgBoolIconRenderer_Conditional_1_Template","AgBoolIconRenderer_Conditional_2_Template","AgBoolIconRenderer_ng_template_3_Template","TippyDirective","NgClass","cellClassSecAction","split","actionsRight","cellClass","pinned","textSortFilter","sortable","filter","width","ActionsPinnedRight3","ActionsPinnedRight4","ActionsPinnedRight5","ActionsPinnedRight6","ActionsPinnedRight7","IconShow","headerClass","BooleanFilterComponent","valueGetter","IsHidden","Fields","IdWithDefaultRenderer","IdFieldComponent","Boolean","Boolean2","Boolean3","Number","TextWidePrimary","flex","minWidth","TextWideMin100","TextWideFlex3","TextNarrow","TextWideActionClass","tooltipGetter","filterParams","isFilterActive","doesFilterPass","api","colDef","column","columnApi","node","getValue","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","$event","FormsModule","MatRadioModule","styles","align","copy","copyToClipboard","logSpecs","ServiceBase","router","route","super","log","classLog","snapshot","getParam","paramMap","keys","reduce","acc","getQueryParam","queryParamMap","getQueryParams","state","getCurrentNavigation","extras","callback","l","fnIf","subscriptions","add","childDialogClosed$","end","navPath","navigate","commands","relativeTo","navParentFirstChild","parent","firstChild","events","event","NavigationEnd","startWith","pairwise","hadChildBefore","hasChildNow","_angular_core__WEBPACK_IMPORTED_MODULE_7__","create","entity","post","zoneId","update","entityId","type","tryForce","webApiEntityRoot","force","_angular_core__WEBPACK_IMPORTED_MODULE_2__","all","getEntities","getAvailableEntities","webApiEntityList","EntityService","queryService","QueryService","getEntities$","switchMap","shareReplay","entitiesFilter","itemIds","fields","Default","parentId","parentField","queryUrl","hasParams","urlParams","toLocaleLowerCase","includes","substring","Guids","join","Subscription","ngOnDestroy","destroy","unsubscribe"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/core/object-utilities.ts","./projects/eav-ui/src/app/dev-rest/api/true-false/true-false.component.ts","./projects/eav-ui/src/app/dev-rest/api/true-false/true-false.component.html","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.html","./projects/eav-ui/src/app/permissions/permissions.component.ts","./projects/eav-ui/src/app/permissions/permissions.component.html","./projects/eav-ui/src/app/permissions/services/metadata.service.ts","./projects/eav-ui/src/app/permissions/services/permissions.service.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-params.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.html","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.component.ts","./projects/eav-ui/src/app/shared/ag-grid/column-definitions.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.html","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.html","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts","./projects/eav-ui/src/app/shared/services/entity-edit.service.ts","./projects/eav-ui/src/app/shared/services/entity.service.ts","./projects/eav-ui/src/app/shared/services/query.service.ts","./projects/eav-ui/src/app/shared/services/service-base.ts"],"sourcesContent":["\r\n/**\r\n * Conversion function to change something to something else, a bit like 'map' but for a single item.\r\n * \r\n * Typically used in short return statements.\r\n * \r\n * Internally it's the same as the `getWith` function, but has a different name to indicate the usage.\r\n */\r\nexport function convert<T extends unknown, R extends unknown>(obj: T, fn: (value: T) => R): R {\r\n  return fn(obj);\r\n}\r\n\r\n/**\r\n * Function to do something with an object and return the result.\r\n * \r\n * Typically used in short return statements.\r\n * \r\n * Internally it's the same as the `convert` function, but has a different name to indicate the usage.\r\n */\r\nexport function getWith<T extends unknown, R extends unknown>(obj: T, fn: (value: T) => R): R {\r\n  return fn(obj);\r\n}\r\n\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { TrueFalseParams } from './true-false.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-rest-api-true-false',\r\n  templateUrl: './true-false.component.html',\r\n  standalone: true,\r\n  imports: [MatIconModule],\r\n})\r\nexport class TrueFalseComponent implements ICellRendererAngularComp {\r\n  icon: string;\r\n\r\n  private trueIcon = 'check_circle';\r\n  private falseIcon = 'circle';\r\n\r\n  agInit(params: ICellRendererParams & TrueFalseParams): void {\r\n    let value: boolean = params.value;\r\n    if (params.reverse) { value = !value; }\r\n    if (params.trueIcon) { this.trueIcon = params.trueIcon; }\r\n    if (params.falseIcon) { this.falseIcon = params.falseIcon; }\r\n    this.icon = value ? this.trueIcon : this.falseIcon;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon>{{ icon }}</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Permission } from '../models/permission.model';\r\nimport { PermissionsActionsParams } from './permissions-actions.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRippleModule } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-permissions-actions',\r\n  templateUrl: './permissions-actions.component.html',\r\n  styleUrls: ['./permissions-actions.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n  ],\r\n})\r\nexport class PermissionsActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & PermissionsActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & PermissionsActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deletePermission(): void {\r\n    const permission: Permission = this.params.data;\r\n    this.params.onDelete(permission);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deletePermission()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnInit, signal } from '@angular/core';\r\nimport { MatDialogRef, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep } from '../shared/models/edit-form.model';\r\nimport { Permission } from './models/permission.model';\r\nimport { PermissionsActionsComponent } from './permissions-actions/permissions-actions.component';\r\nimport { PermissionsActionsParams } from './permissions-actions/permissions-actions.models';\r\nimport { PermissionsService } from './services/permissions.service';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { convert, transient } from '../core';\r\nimport { DialogRoutingService } from '../shared/routing/dialog-routing.service';\r\n\r\n@Component({\r\n  selector: 'app-permissions',\r\n  templateUrl: './permissions.component.html',\r\n  styleUrls: ['./permissions.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    MatDialogActions,\r\n    SxcGridModule,\r\n  ],\r\n})\r\nexport class PermissionsComponent implements OnInit {\r\n  gridOptions = this.buildGridOptions();\r\n  permissions = signal<Permission[]>([]);\r\n  #permissionsService = transient(PermissionsService);\r\n  #dialogRoutes = transient(DialogRoutingService);\r\n\r\n  #params = convert(this.#dialogRoutes.getParams(['targetType', 'keyType', 'key']), p => ({\r\n    targetType: parseInt(p.targetType, 10),\r\n    keyType: p.keyType as MetadataKeyType,\r\n    key: p.key,\r\n  }));\r\n\r\n  #prefills: Record<string, Record<string, string>> = {\r\n    [eavConstants.metadata.language.targetType]: {\r\n      PermissionType: 'language',\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<PermissionsComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.#fetchPermissions();\r\n    this.#dialogRoutes.doOnDialogClosed(() => this.#fetchPermissions());\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  #fetchPermissions() {\r\n    this.#permissionsService.getAll(this.#params.targetType, this.#params.keyType, this.#params.key)\r\n      .subscribe(permissions => {\r\n        this.permissions.set(permissions);\r\n      });\r\n  }\r\n\r\n  editPermission(permission?: Permission) {\r\n    let form: EditForm;\r\n    if (permission == null) {\r\n      form = {\r\n        items: [{\r\n          ...EditPrep.newMetadataFromInfo(\r\n            eavConstants.contentTypes.permissions,\r\n            EditPrep.constructMetadataInfo(this.#params.targetType, this.#params.keyType, this.#params.key)\r\n          ),\r\n          ...(this.#prefills[this.#params.targetType] && { Prefill: this.#prefills[this.#params.targetType] }),\r\n        }],\r\n      };\r\n    } else {\r\n      form = {\r\n        items: [EditPrep.editId(permission.Id)],\r\n      };\r\n    }\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  private deletePermission(permission: Permission) {\r\n    if (!confirm(`Delete '${permission.Title}' (${permission.Id})?`)) return;\r\n    this.snackBar.open('Deleting...');\r\n    this.#permissionsService.delete(permission.Id).subscribe(() => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.#fetchPermissions();\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.Id,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<Permission>()\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Name',\r\n          field: 'Title',\r\n          sort: 'asc',\r\n          onCellClicked: (params) => {\r\n            const permission: Permission = params.data;\r\n            this.editPermission(permission);\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Identity',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Condition',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Character,\r\n          field: 'Grant',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight1,\r\n          cellRenderer: PermissionsActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: PermissionsActionsParams = {\r\n              onDelete: (permission) => this.deletePermission(permission),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface PermissionsViewModel {\r\n  permissions: Permission[];\r\n}\r\n","<div class=\"eav-dialog nav-component-wrapper\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Permissions</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content nav-component-wrapper\">\r\n    <router-outlet></router-outlet>\r\n    <div class=\"grid-wrapper\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"permissions()\" [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new permission\" (click)=\"editPermission(null)\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n</div>\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { MetadataDto } from '../../metadata';\r\nimport { MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nconst webApiRoot = 'admin/metadata/get';\r\n\r\n@Injectable()\r\nexport class MetadataService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param targetType type of target metadata item is for, e.g. for Entity, or ContentType\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of target metadata item is for\r\n   * @param contentTypeName name of content type where permissions are stored. If blank, backend returns all metadata except permissions\r\n   */\r\n  getMetadata(targetType: number, keyType: MetadataKeyType, key: string | number, contentTypeName?: string): Observable<MetadataDto> {\r\n    return this.http.get<MetadataDto>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        targetType: targetType.toString(),\r\n        keyType,\r\n        key: key.toString(),\r\n        ...(contentTypeName && { contentType: contentTypeName }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { EntityEditService } from '../../shared/services/entity-edit.service';\r\nimport { eavConstants, MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Permission } from '../models/permission.model';\r\nimport { MetadataService } from './metadata.service';\r\nimport { transient } from '../../core';\r\n\r\n@Injectable()\r\nexport class PermissionsService {\r\n\r\n  private metadataService = transient(MetadataService);\r\n\r\n  private entitiesService = transient(EntityEditService);\r\n\r\n  getAll(targetType: number, keyType: MetadataKeyType, key: string): Observable<Permission[]> {\r\n    return this.metadataService.getMetadata(targetType, keyType, key, eavConstants.contentTypes.permissions).pipe(\r\n      map(metadata => metadata.Items as Permission[]),\r\n    );\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.entitiesService.delete(eavConstants.contentTypes.permissions, id, false);\r\n  }\r\n}\r\n","export interface AgBoolCellIconSetting {\r\n  clickable?: boolean;\r\n  tooltip: string;\r\n  icon: string;\r\n  url?: string;\r\n  getUrl?: (data: any) => string;\r\n}\r\n\r\nexport interface AgBoolCellIconSettings {\r\n  states: Record<'true' | 'false' | string, AgBoolCellIconSetting>;\r\n}\r\n\r\nexport interface AgBoolCellIconsParams<T = any> {\r\n  settings(data: T): AgBoolCellIconSettings;\r\n}\r\n\r\nexport const AgBoolCellIconsDefault: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      tooltip: 'true/on',\r\n      icon: 'radio_button_checked',\r\n    },\r\n    false: {\r\n      tooltip: 'false/off',\r\n      icon: 'radio_button_unchecked',\r\n    }\r\n  }\r\n};","<div class=\"icon-container\">\r\n  @if (data.url) {\r\n    <a [href]=\"data.url\" target=\"_blank\">\r\n      <ng-container *ngTemplateOutlet=\"showIcon\"></ng-container>\r\n    </a>\r\n  } @else {\r\n    <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n      <mat-icon>{{ data.icon }}</mat-icon>\r\n    </div>\r\n  }\r\n</div>\r\n\r\n<ng-template #showIcon>\r\n  <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n    <mat-icon>{{ data.icon }}</mat-icon>\r\n  </div>\r\n</ng-template>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { AgBoolCellIconSetting, AgBoolCellIconSettings, AgBoolCellIconsDefault, AgBoolCellIconsParams } from './ag-bool-icon-params';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgClass } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-ag-bool-icon-renderer',\r\n  templateUrl: './ag-bool-icon-renderer.html',\r\n  standalone: true,\r\n  imports: [\r\n    TippyDirective,\r\n    MatIconModule,\r\n    NgClass,\r\n  ],\r\n})\r\nexport class AgBoolIconRenderer implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  private allSettings: AgBoolCellIconSettings;\r\n\r\n  data: AgBoolCellIconSetting; // | { link: boolean  };\r\n\r\n  agInit(params: ICellRendererParams & AgBoolCellIconsParams): void {\r\n    this.value = params.value;\r\n\r\n    this.allSettings = params.settings?.(params.data) ?? AgBoolCellIconsDefault;\r\n    const d = this.allSettings.states[this.value ? 'true' : 'false'];\r\n    this.data = {\r\n      ...d,\r\n      url: d.url ?? d.getUrl?.(params.data),\r\n      // link: !!(d.url || d.getUrl),\r\n    };\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { ColDef } from '@ag-grid-community/core';\r\nimport { BooleanFilterComponent } from '../components/boolean-filter/boolean-filter.component';\r\nimport { App } from '../../apps-management/models/app.model';\r\nimport { AgBoolIconRenderer } from './apps-list-show/ag-bool-icon-renderer.component';\r\nimport { TrueFalseComponent } from '../../dev-rest/api/true-false/true-false.component';\r\nimport { TrueFalseParams } from '../../dev-rest/api/true-false/true-false.models';\r\nimport { IdFieldComponent } from '../components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../components/id-field/id-field.models';\r\n\r\nconst cellClassSecAction = 'secondary-action no-padding'.split(' ');\r\n\r\nconst actionsRight: ColDef = {\r\n  cellClass: cellClassSecAction,\r\n  pinned: 'right',\r\n};\r\n\r\nconst textSortFilter: ColDef = {\r\n  sortable: true,\r\n  filter: 'agTextColumnFilter',\r\n};\r\n\r\nexport class ColumnDefinitions {\r\n  static ActionsPinnedRight1: ColDef = {\r\n    width: 42,\r\n    ...actionsRight,\r\n  };\r\n\r\n  static ActionsPinnedRight3: ColDef = {\r\n    width: 122,\r\n    ...actionsRight,\r\n  };\r\n\r\n  static ActionsPinnedRight4: ColDef = {\r\n    width: 162,\r\n    ...actionsRight,\r\n  };\r\n\r\n  static ActionsPinnedRight5: ColDef = {\r\n    width: 202,\r\n    ...actionsRight,\r\n  };\r\n\r\n  // TODO: the name here is wrong - 6 indicates 6 buttons, but the size wouldn't allow this\r\n  static ActionsPinnedRight6: ColDef = {\r\n    width: 82,\r\n    ...actionsRight,\r\n  };\r\n\r\n  // TODO: the name here is wrong - 7 indicates 6 buttons, but the size wouldn't allow this\r\n  static ActionsPinnedRight7: ColDef = {\r\n    width: 62,\r\n    cellClass: cellClassSecAction + ' no-outline',\r\n    pinned: 'right',\r\n  };\r\n\r\n  static IconShow: ColDef = {\r\n    headerName: 'Show',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'icons no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: BooleanFilterComponent,\r\n    valueGetter: (params) => {\r\n      const app: App = params.data;\r\n      return !app.IsHidden;\r\n    },\r\n    cellRenderer: AgBoolIconRenderer,\r\n  };\r\n\r\n  static Items: ColDef = {\r\n    width: 102,\r\n    headerClass: 'dense',\r\n    cellClass: cellClassSecAction,\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static Fields: ColDef = {\r\n    width: 94,\r\n    headerClass: 'dense',\r\n    cellClass: cellClassSecAction,\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  /**\r\n   * Very narrow columns, typically just showing 1 character\r\n   */\r\n  static Character: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'no-outline',\r\n    ...textSortFilter,\r\n  };\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Id: ColDef = {\r\n    headerName: 'ID',\r\n    field: 'Id',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'id-action no-padding no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static IdWithDefaultRenderer: ColDef = {\r\n    ...ColumnDefinitions.Id,\r\n    cellRenderer: IdFieldComponent,\r\n  }\r\n\r\n  static Boolean: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'number-cell no-outline'.split(' '),\r\n    sortable: true,\r\n  };\r\n\r\n  static Boolean2: ColDef = {\r\n    width: 100,\r\n    sortable: true,\r\n    cellClass: 'no-outline',\r\n    filter: BooleanFilterComponent,\r\n  };\r\n\r\n  static Boolean3: ColDef = {\r\n    headerClass: 'dense',\r\n    width: 80,\r\n    cellClass: 'no-outline',\r\n    cellRenderer: TrueFalseComponent,\r\n    cellRendererParams: (() => ({\r\n      reverse: false,\r\n    } satisfies TrueFalseParams))(),\r\n  }\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Number: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'number-cell no-outline'.split(' '),\r\n    ...textSortFilter,\r\n  };\r\n\r\n  static TextWidePrimary: ColDef = {\r\n    flex: 3,\r\n    minWidth: 250,\r\n    cellClass: 'primary-action highlight'.split(' '),\r\n    ...textSortFilter,\r\n  };\r\n\r\n  static TextWide: ColDef = {\r\n    flex: 2,\r\n    minWidth: 250,\r\n    cellClass: 'no-outline',\r\n    ...textSortFilter,\r\n  };\r\n\r\n  static TextWideMin100: ColDef = {\r\n    flex: 1,\r\n    minWidth: 100,\r\n    ...textSortFilter,\r\n  }\r\n\r\n  static TextWideFlex3: ColDef = {\r\n    flex: 3,\r\n    minWidth: 250,\r\n    cellClass: 'no-outline',\r\n    ...textSortFilter,\r\n  };\r\n\r\n  static TextNarrow: ColDef = {\r\n    flex: 1,\r\n    minWidth: 150,\r\n    cellClass: 'no-outline',\r\n    ...textSortFilter,\r\n  };\r\n\r\n  static TextWideActionClass: ColDef = {\r\n    flex: 2,\r\n    minWidth: 250,\r\n    cellClass: 'primary-action no-padding no-outline'.split(' '),\r\n    ...textSortFilter,\r\n  };\r\n\r\n  static idFieldParamsTooltipGetter<T extends { Id: string | number, Guid?: string }>(key?: keyof T): IdFieldParams<T> {\r\n    const objWithTooltipGetter: IdFieldParams<T> = {\r\n      tooltipGetter: (contentType: T) => `ID: ${contentType.Id}\\nGUID: ${contentType[key || \"Guid\"]}`,\r\n    };\r\n    return objWithTooltipGetter;\r\n  }\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { BooleanFilterModel } from './boolean-filter.model';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\n\r\n@Component({\r\n  selector: 'app-boolean-filter',\r\n  templateUrl: './boolean-filter.component.html',\r\n  styleUrls: ['./boolean-filter.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    MatRadioModule,\r\n  ]\r\n})\r\nexport class BooleanFilterComponent implements IFilterAngularComp {\r\n  filter = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.filter !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: boolean = this.filterParams.valueGetter(valueGetterParams);\r\n    if (value == null) { return false; }\r\n    return value.toString() === this.filter;\r\n  }\r\n\r\n  getModel(): BooleanFilterModel {\r\n    if (!this.isFilterActive()) return;\r\n    return {\r\n      filterType: 'boolean',\r\n      filter: this.filter,\r\n    };\r\n  }\r\n\r\n  setModel(model: BooleanFilterModel) {\r\n    this.filter = model ? model.filter : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<mat-radio-group [(ngModel)]=\"filter\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">True</mat-radio-button>\r\n  <mat-radio-button value=\"false\">False</mat-radio-button>\r\n</mat-radio-group>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    MatIconModule,\r\n    TippyDirective,\r\n  ]\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(): void {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>","import { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { ServiceBase } from '../services/service-base';\r\nimport { classLog } from '../logging';\r\n\r\nconst logSpecs = {\r\n  doOnDialogClosed: true,\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase {\r\n\r\n  log = classLog({DialogRoutingService}, logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  getParam(key: string): string {\r\n    return this.route.snapshot.paramMap.get(key);\r\n  }\r\n\r\n  getParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const paramMap = this.route.snapshot.paramMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = paramMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  getQueryParam(key: string): string {\r\n    return this.route.snapshot.queryParamMap.get(key);\r\n  }\r\n\r\n  getQueryParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const queryParamMap = this.route.snapshot.queryParamMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = queryParamMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe(() => callback())\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  public navParentFirstChild(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route.parent.firstChild });\r\n  }\r\n  \r\n  childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../edit/shared/models/eav';\r\nimport { ItemInListIdentifier } from '../models/edit-form.model';\r\nimport { Context } from './context';\r\nimport { webApiEntityRoot } from './entity.service';\r\n\r\n@Injectable()\r\nexport class EntityEditService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.context.appId.toString(), force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n\r\ninterface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: ItemInListIdentifier;\r\n  [field: string]: any;\r\n}\r\n\r\ninterface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { filter, map, Observable, shareReplay, switchMap } from 'rxjs';\r\nimport { classLog } from '../logging';\r\nimport { EntityBasic } from '../../shared/models/entity-basic';\r\nimport { QueryService } from './query.service';\r\nimport { transient } from '../../core';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  getEntities: false,\r\n  getAvailableEntities: false,\r\n  delete: false,\r\n};\r\n\r\nexport const webApiEntityRoot = 'admin/entity/';\r\nexport const webApiEntityList = 'admin/entity/list';\r\n\r\n @Injectable()\r\n export class EntityService {\r\n  \r\n  log = classLog({EntityService}, logSpecs);\r\n\r\n  private queryService = transient(QueryService);\r\n\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext) { }\r\n\r\n  /**\r\n   * Get entities based on the content type name.\r\n   * As of 2024-04-29 only used in REST API.\r\n   * @param params\r\n   * @returns\r\n   */\r\n  getEntities$(params: Observable<{ contentTypeName: string }>): Observable<EntityBasic[]> {\r\n    this.log.fnIf('getEntities');\r\n    return params.pipe(\r\n      filter(p => p != null),\r\n      switchMap(p => this.getAvailableEntities(p.contentTypeName).pipe(shareReplay(1))),\r\n    );\r\n  }\r\n\r\n  private getAvailableEntities(contentTypeName: string, entitiesFilter?: string[]): Observable<EntityBasic[]> {\r\n    var log = this.log.fnIf('getAvailableEntities');\r\n    return this.queryService.getEntities({\r\n      contentTypes: [contentTypeName],\r\n      itemIds: entitiesFilter,\r\n      fields: 'Id,Guid,Title',\r\n      log: 'getAvailableEntities'\r\n    }).pipe(\r\n      map(data => data.Default)\r\n    );\r\n  }\r\n\r\n  delete(appId: number, contentType: string, entityId: number, force: boolean, parentId?: number, parentField?: string): Observable<null> {\r\n    this.log.fnIf('delete', { appId, contentType, entityId, force, parentId, parent });\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: {\r\n        contentType,\r\n        id: entityId.toString(),\r\n        appId,\r\n        force: force.toString(),\r\n        ...(parentId && { parentId: parentId.toString() }),\r\n        ...(parentId && parentField && { parentField }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Context } from './context';\r\nimport { QueryStreams } from '../models/query-stream.model';\r\nimport { classLog } from '../logging';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  getAvailableEntities: false,\r\n  getEntities: false,\r\n};\r\n\r\n@Injectable()\r\nexport class QueryService {\r\n\r\n  log = classLog({QueryService}, logSpecs);\r\n\r\n  constructor(private http: HttpClient, private context: Context) { }\r\n\r\n  getAvailableEntities(queryUrl: string, params: string, fields: string, entitiesFilter?: string[]): Observable<QueryStreams> {\r\n    this.log.fnIf('getAvailableEntities', { queryUrl, params, fields, entitiesFilter });\r\n    // Check if any params we should auto-add are already set (like in a query which has these params set in the configuration)\r\n    const hasParams = !!params;\r\n    const paramsLower = params?.toLocaleLowerCase() ?? '';\r\n    const hasAppId = paramsLower.includes('appid=') ?? false;\r\n    const allParams = ''\r\n      + (hasAppId ? '' : `&appId=${this.context.appId}`)\r\n      + (hasParams ? `&${params}` : '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(`app/auto/query/${queryUrl}?${urlParams}`,\r\n      {\r\n        Guids: entitiesFilter,\r\n      },\r\n    );\r\n  }\r\n\r\n  getEntities({ contentTypes, itemIds, fields, log }: { contentTypes: string[]; itemIds: string[]; fields: string; log: string }): Observable<QueryStreams> {\r\n    this.log.fnIf(`getEntities`, { log, contentTypes, itemIds, fields });\r\n    const allParams =\r\n      '&typeNames=' + (contentTypes?.join(',') ?? '')\r\n      + `&appId=${this.context.appId}`\r\n      + '&itemIds=' + (itemIds?.join(',') ?? '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(\r\n      `app/auto/query/System.EntityPicker/Default?${urlParams}`,\r\n      {}\r\n    );\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}