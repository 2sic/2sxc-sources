{"version":3,"file":"default-node_modules_angular_material_fesm2022_radio_mjs.js","mappings":"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","sources":["./node_modules/@angular/material/fesm2022/radio.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { forwardRef, InjectionToken, EventEmitter, booleanAttribute, Directive, Output, ContentChildren, Input, numberAttribute, ANIMATION_MODULE_TYPE, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Attribute, ViewChild, NgModule } from '@angular/core';\nimport { MatRipple, _MatInternalFormField, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i2 from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n/** Change event object emitted by radio button and radio group. */\nclass MatRadioChange {\n    constructor(\n    /** The radio button that emits the change event. */\n    source, \n    /** The value of the radio button. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatRadioGroup),\n    multi: true,\n};\n/**\n * Injection token that can be used to inject instances of `MatRadioGroup`. It serves as\n * alternative token to the actual `MatRadioGroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_RADIO_GROUP = new InjectionToken('MatRadioGroup');\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY,\n});\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n    };\n}\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup {\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    get name() {\n        return this._name;\n    }\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     */\n    get selected() {\n        return this._selected;\n    }\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /** Whether the radio group is disabled */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._markRadiosForCheck();\n    }\n    /** Whether the radio group is required */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = value;\n        this._markRadiosForCheck();\n    }\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /** Selected value for the radio group. */\n        this._value = null;\n        /** The HTML name attribute applied to radio buttons in this group. */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /** The currently selected radio button. Should match value. */\n        this._selected = null;\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        this._labelPosition = 'after';\n        /** Whether the radio group is disabled. */\n        this._disabled = false;\n        /** Whether the radio group is required. */\n        this._required = false;\n        /** The method to be called in order to update ngModel */\n        this._controlValueAccessorChangeFn = () => { };\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * @docs-private\n         */\n        this.onTouched = () => { };\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n        // Clear the `selected` button when it's destroyed since the tabindex of the rest of the\n        // buttons depends on it. Note that we don't clear the `value`, because the radio button\n        // may be swapped out with a similar one and there are some internal apps that depend on\n        // that behavior.\n        this._buttonChanges = this._radios.changes.subscribe(() => {\n            if (this.selected && !this._radios.find(radio => radio === this.selected)) {\n                this._selected = null;\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._buttonChanges?.unsubscribe();\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach(radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            });\n        }\n    }\n    /** Updates the `selected` radio button from the internal _value state. */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange(this._selected, this._value));\n        }\n    }\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach(radio => radio._markForCheck());\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatRadioGroup, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.2.0\", type: MatRadioGroup, isStandalone: true, selector: \"mat-radio-group\", inputs: { color: \"color\", name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: [\"disabled\", \"disabled\", booleanAttribute], required: [\"required\", \"required\", booleanAttribute] }, outputs: { change: \"change\" }, host: { attributes: { \"role\": \"radiogroup\" }, classAttribute: \"mat-mdc-radio-group\" }, providers: [\n            MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n            { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n        ], queries: [{ propertyName: \"_radios\", predicate: i0.forwardRef(() => MatRadioButton), descendants: true }], exportAs: [\"matRadioGroup\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatRadioGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-radio-group',\n                    exportAs: 'matRadioGroup',\n                    providers: [\n                        MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n                        { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n                    ],\n                    host: {\n                        'role': 'radiogroup',\n                        'class': 'mat-mdc-radio-group',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }], propDecorators: { change: [{\n                type: Output\n            }], _radios: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatRadioButton), { descendants: true }]\n            }], color: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\nclass MatRadioButton {\n    /** Whether this radio button is checked. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        if (this._checked !== value) {\n            this._checked = value;\n            if (value && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!value && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (value) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** The value of this radio button. */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /** Whether the radio button is disabled. */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    set disabled(value) {\n        this._setDisabled(value);\n    }\n    /** Whether the radio button is required. */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value) {\n        this._required = value;\n    }\n    /** Theme color of the radio button. */\n    get color() {\n        // As per Material design specifications the selection control radio should use the accent color\n        // palette by default. https://material.io/guidelines/components/selection-controls.html\n        return (this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            (this._providerOverride && this._providerOverride.color) ||\n            'accent');\n    }\n    set color(newValue) {\n        this._color = newValue;\n    }\n    /** ID of the native input element inside `<mat-radio-button>` */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    constructor(radioGroup, _elementRef, _changeDetector, _focusMonitor, _radioDispatcher, animationMode, _providerOverride, tabIndex) {\n        this._elementRef = _elementRef;\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /** The unique ID for the radio button. */\n        this.id = this._uniqueId;\n        /** Whether ripples are disabled inside the radio button */\n        this.disableRipple = false;\n        /** Tabindex of the radio button. */\n        this.tabIndex = 0;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /** Whether this radio is checked. */\n        this._checked = false;\n        /** Value assigned to this radio. */\n        this._value = null;\n        /** Unregister function for _radioDispatcher */\n        this._removeUniqueSelectionListener = () => { };\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        this._noopAnimations = animationMode === 'NoopAnimations';\n        if (tabIndex) {\n            this.tabIndex = numberAttribute(tabIndex, 0);\n        }\n    }\n    /** Focuses the radio button. */\n    focus(options, origin) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            if (this.checked) {\n                this.radioGroup.selected = this;\n            }\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n        this._removeUniqueSelectionListener = this._radioDispatcher.listen((id, name) => {\n            if (id !== this.id && name === this.name) {\n                this.checked = false;\n            }\n        });\n    }\n    ngDoCheck() {\n        this._updateTabIndex();\n    }\n    ngAfterViewInit() {\n        this._updateTabIndex();\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /** Dispatch change event with current value. */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Triggered when the radio button receives an interaction from the user. */\n    _onInputInteraction(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        if (!this.checked && !this.disabled) {\n            const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n            this.checked = true;\n            this._emitChangeEvent();\n            if (this.radioGroup) {\n                this.radioGroup._controlValueAccessorChangeFn(this.value);\n                if (groupValueChanged) {\n                    this.radioGroup._emitChangeEvent();\n                }\n            }\n        }\n    }\n    /** Triggered when the user clicks on the touch target. */\n    _onTouchTargetClick(event) {\n        this._onInputInteraction(event);\n        if (!this.disabled) {\n            // Normally the input should be focused already, but if the click\n            // comes from the touch target, then we might have to focus it ourselves.\n            this._inputElement.nativeElement.focus();\n        }\n    }\n    /** Sets the disabled state and marks for check if a change occurred. */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** Gets the tabindex for the underlying input element. */\n    _updateTabIndex() {\n        const group = this.radioGroup;\n        let value;\n        // Implement a roving tabindex if the button is inside a group. For most cases this isn't\n        // necessary, because the browser handles the tab order for inputs inside a group automatically,\n        // but we need an explicitly higher tabindex for the selected button in order for things like\n        // the focus trap to pick it up correctly.\n        if (!group || !group.selected || this.disabled) {\n            value = this.tabIndex;\n        }\n        else {\n            value = group.selected === this ? this.tabIndex : -1;\n        }\n        if (value !== this._previousTabIndex) {\n            // We have to set the tabindex directly on the DOM node, because it depends on\n            // the selected state which is prone to \"changed after checked errors\".\n            const input = this._inputElement?.nativeElement;\n            if (input) {\n                input.setAttribute('tabindex', value + '');\n                this._previousTabIndex = value;\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatRadioButton, deps: [{ token: MAT_RADIO_GROUP, optional: true }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.FocusMonitor }, { token: i2.UniqueSelectionDispatcher }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_RADIO_DEFAULT_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"17.2.0\", type: MatRadioButton, isStandalone: true, selector: \"mat-radio-button\", inputs: { id: \"id\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))], checked: [\"checked\", \"checked\", booleanAttribute], value: \"value\", labelPosition: \"labelPosition\", disabled: [\"disabled\", \"disabled\", booleanAttribute], required: [\"required\", \"required\", booleanAttribute], color: \"color\" }, outputs: { change: \"change\" }, host: { listeners: { \"focus\": \"_inputElement.nativeElement.focus()\" }, properties: { \"attr.id\": \"id\", \"class.mat-primary\": \"color === \\\"primary\\\"\", \"class.mat-accent\": \"color === \\\"accent\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\", \"class.mat-mdc-radio-checked\": \"checked\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.aria-describedby\": \"null\" }, classAttribute: \"mat-mdc-radio-button\" }, viewQueries: [{ propertyName: \"_inputElement\", first: true, predicate: [\"input\"], descendants: true }, { propertyName: \"_rippleTrigger\", first: true, predicate: [\"formField\"], descendants: true, read: ElementRef, static: true }], exportAs: [\"matRadioButton\"], ngImport: i0, template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\" #formField>\\n  <div class=\\\"mdc-radio\\\" [class.mdc-radio--disabled]=\\\"disabled\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-radio-touch-target\\\" (click)=\\\"_onTouchTargetClick($event)\\\"></div>\\n    <input #input class=\\\"mdc-radio__native-control\\\" type=\\\"radio\\\"\\n           [id]=\\\"inputId\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [required]=\\\"required\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInputInteraction($event)\\\">\\n    <div class=\\\"mdc-radio__background\\\">\\n      <div class=\\\"mdc-radio__outer-circle\\\"></div>\\n      <div class=\\\"mdc-radio__inner-circle\\\"></div>\\n    </div>\\n    <div mat-ripple class=\\\"mat-radio-ripple mat-mdc-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"_rippleTrigger.nativeElement\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\">\\n      <div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div>\\n    </div>\\n  </div>\\n  <label class=\\\"mdc-label\\\" [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-radio{display:inline-block;position:relative;flex:0 0 auto;box-sizing:content-box;width:20px;height:20px;cursor:pointer;will-change:opacity,transform,border-color,color}.mdc-radio[hidden]{display:none}.mdc-radio__background{display:inline-block;position:relative;box-sizing:border-box;width:20px;height:20px}.mdc-radio__background::before{position:absolute;transform:scale(0, 0);border-radius:50%;opacity:0;pointer-events:none;content:\\\"\\\";transition:opacity 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__outer-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;border-width:2px;border-style:solid;border-radius:50%;transition:border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__inner-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;transform:scale(0, 0);border-width:10px;border-style:solid;border-radius:50%;transition:transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1}.mdc-radio--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-radio--touch .mdc-radio__native-control{top:calc((40px - 48px) / 2);right:calc((40px - 48px) / 2);left:calc((40px - 48px) / 2);width:48px;height:48px}.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring{border-color:CanvasText}}.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring::after,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring::after,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring::after{border-color:CanvasText}}.mdc-radio__native-control:checked+.mdc-radio__background,.mdc-radio__native-control:disabled+.mdc-radio__background{transition:opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{transition:border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle,.mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{transition:transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1),border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio--disabled{cursor:default;pointer-events:none}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle{transform:scale(0.5);transition:transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1),border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:disabled+.mdc-radio__background,[aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background{cursor:default}.mdc-radio__native-control:focus+.mdc-radio__background::before{transform:scale(1);opacity:.12;transition:opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-radio-button .mdc-radio{padding:calc((var(--mdc-radio-state-layer-size) - 20px) / 2)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-selected-icon-color)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-disabled-selected-icon-color)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:checked+.mdc-radio__background .mdc-radio__outer-circle{opacity:var(--mdc-radio-disabled-selected-icon-opacity)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{opacity:var(--mdc-radio-disabled-selected-icon-opacity)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-unselected-icon-color)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{opacity:var(--mdc-radio-disabled-unselected-icon-opacity)}.mat-mdc-radio-button .mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-focus-icon-color)}.mat-mdc-radio-button .mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-focus-icon-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-hover-icon-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-hover-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-icon-color)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-pressed-icon-color)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-pressed-icon-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-hover-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-icon-color)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-pressed-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__background::before{top:calc(-1 * (var(--mdc-radio-state-layer-size) - 20px) / 2);left:calc(-1 * (var(--mdc-radio-state-layer-size) - 20px) / 2);width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control{top:calc((var(--mdc-radio-state-layer-size) - var(--mdc-radio-state-layer-size)) / 2);right:calc((var(--mdc-radio-state-layer-size) - var(--mdc-radio-state-layer-size)) / 2);left:calc((var(--mdc-radio-state-layer-size) - var(--mdc-radio-state-layer-size)) / 2);width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size)}.mat-mdc-radio-button .mdc-radio .mdc-radio__background::before{background-color:var(--mat-radio-ripple-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:not([disabled]):not(:focus)~.mdc-radio__background::before{opacity:.04;transform:scale(1)}.mat-mdc-radio-button.mat-mdc-radio-checked .mdc-radio__background::before{background-color:var(--mat-radio-checked-ripple-color)}.mat-mdc-radio-button.mat-mdc-radio-checked .mat-ripple-element{background-color:var(--mat-radio-checked-ripple-color)}.mat-mdc-radio-button .mdc-radio--disabled+label{color:var(--mat-radio-disabled-label-color)}.mat-mdc-radio-button .mat-radio-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:50%}.mat-mdc-radio-button .mat-radio-ripple .mat-ripple-element{opacity:.14}.mat-mdc-radio-button .mat-radio-ripple::before{border-radius:50%}.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__background::before,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__outer-circle,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__inner-circle{transition:none !important}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:focus:enabled:not(:checked)~.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-focus-icon-color, black)}.mat-mdc-radio-button.cdk-focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-radio-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-radio-touch-target-display)}[dir=rtl] .mat-mdc-radio-touch-target{left:0;right:50%;transform:translate(50%, -50%)}\"], dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"component\", type: _MatInternalFormField, selector: \"div[mat-internal-form-field]\", inputs: [\"labelPosition\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatRadioButton, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-radio-button', host: {\n                        'class': 'mat-mdc-radio-button',\n                        '[attr.id]': 'id',\n                        '[class.mat-primary]': 'color === \"primary\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        '[class.mat-mdc-radio-checked]': 'checked',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                        // Needs to be removed since it causes some a11y issues (see #21266).\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.aria-describedby]': 'null',\n                        // Note: under normal conditions focus shouldn't land on this element, however it may be\n                        // programmatically set, for example inside of a focus trap, in this case we want to forward\n                        // the focus to the native element.\n                        '(focus)': '_inputElement.nativeElement.focus()',\n                    }, exportAs: 'matRadioButton', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [MatRipple, _MatInternalFormField], template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\" #formField>\\n  <div class=\\\"mdc-radio\\\" [class.mdc-radio--disabled]=\\\"disabled\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-radio-touch-target\\\" (click)=\\\"_onTouchTargetClick($event)\\\"></div>\\n    <input #input class=\\\"mdc-radio__native-control\\\" type=\\\"radio\\\"\\n           [id]=\\\"inputId\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [required]=\\\"required\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInputInteraction($event)\\\">\\n    <div class=\\\"mdc-radio__background\\\">\\n      <div class=\\\"mdc-radio__outer-circle\\\"></div>\\n      <div class=\\\"mdc-radio__inner-circle\\\"></div>\\n    </div>\\n    <div mat-ripple class=\\\"mat-radio-ripple mat-mdc-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"_rippleTrigger.nativeElement\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\">\\n      <div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div>\\n    </div>\\n  </div>\\n  <label class=\\\"mdc-label\\\" [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-radio{display:inline-block;position:relative;flex:0 0 auto;box-sizing:content-box;width:20px;height:20px;cursor:pointer;will-change:opacity,transform,border-color,color}.mdc-radio[hidden]{display:none}.mdc-radio__background{display:inline-block;position:relative;box-sizing:border-box;width:20px;height:20px}.mdc-radio__background::before{position:absolute;transform:scale(0, 0);border-radius:50%;opacity:0;pointer-events:none;content:\\\"\\\";transition:opacity 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__outer-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;border-width:2px;border-style:solid;border-radius:50%;transition:border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__inner-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;transform:scale(0, 0);border-width:10px;border-style:solid;border-radius:50%;transition:transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1}.mdc-radio--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-radio--touch .mdc-radio__native-control{top:calc((40px - 48px) / 2);right:calc((40px - 48px) / 2);left:calc((40px - 48px) / 2);width:48px;height:48px}.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring{border-color:CanvasText}}.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring::after,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring::after,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring::after{border-color:CanvasText}}.mdc-radio__native-control:checked+.mdc-radio__background,.mdc-radio__native-control:disabled+.mdc-radio__background{transition:opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{transition:border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle,.mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{transition:transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1),border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio--disabled{cursor:default;pointer-events:none}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle{transform:scale(0.5);transition:transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1),border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:disabled+.mdc-radio__background,[aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background{cursor:default}.mdc-radio__native-control:focus+.mdc-radio__background::before{transform:scale(1);opacity:.12;transition:opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-radio-button .mdc-radio{padding:calc((var(--mdc-radio-state-layer-size) - 20px) / 2)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-selected-icon-color)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-disabled-selected-icon-color)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:checked+.mdc-radio__background .mdc-radio__outer-circle{opacity:var(--mdc-radio-disabled-selected-icon-opacity)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{opacity:var(--mdc-radio-disabled-selected-icon-opacity)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-unselected-icon-color)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{opacity:var(--mdc-radio-disabled-unselected-icon-opacity)}.mat-mdc-radio-button .mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-focus-icon-color)}.mat-mdc-radio-button .mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-focus-icon-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-hover-icon-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-hover-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-icon-color)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-pressed-icon-color)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-pressed-icon-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-hover-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-icon-color)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-pressed-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__background::before{top:calc(-1 * (var(--mdc-radio-state-layer-size) - 20px) / 2);left:calc(-1 * (var(--mdc-radio-state-layer-size) - 20px) / 2);width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control{top:calc((var(--mdc-radio-state-layer-size) - var(--mdc-radio-state-layer-size)) / 2);right:calc((var(--mdc-radio-state-layer-size) - var(--mdc-radio-state-layer-size)) / 2);left:calc((var(--mdc-radio-state-layer-size) - var(--mdc-radio-state-layer-size)) / 2);width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size)}.mat-mdc-radio-button .mdc-radio .mdc-radio__background::before{background-color:var(--mat-radio-ripple-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:not([disabled]):not(:focus)~.mdc-radio__background::before{opacity:.04;transform:scale(1)}.mat-mdc-radio-button.mat-mdc-radio-checked .mdc-radio__background::before{background-color:var(--mat-radio-checked-ripple-color)}.mat-mdc-radio-button.mat-mdc-radio-checked .mat-ripple-element{background-color:var(--mat-radio-checked-ripple-color)}.mat-mdc-radio-button .mdc-radio--disabled+label{color:var(--mat-radio-disabled-label-color)}.mat-mdc-radio-button .mat-radio-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:50%}.mat-mdc-radio-button .mat-radio-ripple .mat-ripple-element{opacity:.14}.mat-mdc-radio-button .mat-radio-ripple::before{border-radius:50%}.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__background::before,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__outer-circle,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__inner-circle{transition:none !important}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:focus:enabled:not(:checked)~.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-focus-icon-color, black)}.mat-mdc-radio-button.cdk-focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-radio-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-radio-touch-target-display)}[dir=rtl] .mat-mdc-radio-touch-target{left:0;right:50%;transform:translate(50%, -50%)}\"] }]\n        }], ctorParameters: () => [{ type: MatRadioGroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RADIO_GROUP]\n                }] }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FocusMonitor }, { type: i2.UniqueSelectionDispatcher }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RADIO_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }], propDecorators: { id: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                    }]\n            }], checked: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], value: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], color: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], _inputElement: [{\n                type: ViewChild,\n                args: ['input']\n            }], _rippleTrigger: [{\n                type: ViewChild,\n                args: ['formField', { read: ElementRef, static: true }]\n            }] } });\n\nclass MatRadioModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatRadioModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: MatRadioModule, imports: [MatCommonModule, CommonModule, MatRippleModule, MatRadioGroup, MatRadioButton], exports: [MatCommonModule, MatRadioGroup, MatRadioButton] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatRadioModule, imports: [MatCommonModule, CommonModule, MatRippleModule, MatRadioButton, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatRadioModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, CommonModule, MatRippleModule, MatRadioGroup, MatRadioButton],\n                    exports: [MatCommonModule, MatRadioGroup, MatRadioButton],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule };\n"],"names":["i0","forwardRef","InjectionToken","EventEmitter","booleanAttribute","Directive","Output","ContentChildren","Input","numberAttribute","ANIMATION_MODULE_TYPE","ElementRef","Component","ViewEncapsulation","ChangeDetectionStrategy","Optional","Inject","Attribute","ViewChild","NgModule","MatRipple","_MatInternalFormField","MatCommonModule","MatRippleModule","i1","i2","NG_VALUE_ACCESSOR","CommonModule","_c0","_c1","_c2","nextUniqueId","MatRadioChange","constructor","source","value","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","provide","useExisting","MatRadioGroup","multi","MAT_RADIO_GROUP","MAT_RADIO_DEFAULT_OPTIONS","providedIn","factory","MAT_RADIO_DEFAULT_OPTIONS_FACTORY","color","name","_name","_updateRadioButtonNames","labelPosition","_labelPosition","v","_markRadiosForCheck","_value","newValue","_updateSelectedRadioFromValue","_checkSelectedRadioButton","_selected","checked","selected","disabled","_disabled","required","_required","_changeDetector","_isInitialized","_controlValueAccessorChangeFn","onTouched","change","ngAfterContentInit","_buttonChanges","_radios","changes","subscribe","find","radio","ngOnDestroy","unsubscribe","_touch","forEach","_markForCheck","isAlreadySelected","_emitChangeEvent","emit","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","_","ɵfac","MatRadioGroup_Factory","t","ɵɵdirectiveInject","ChangeDetectorRef","_2","ɵdir","ɵɵdefineDirective","type","selectors","contentQueries","MatRadioGroup_ContentQueries","rf","ctx","dirIndex","ɵɵcontentQuery","MatRadioButton","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostAttrs","inputs","ɵɵInputFlags","HasDecoratorInputTransform","outputs","exportAs","standalone","features","ɵɵProvidersFeature","ɵɵInputTransformsFeature","ngDevMode","ɵsetClassMetadata","args","selector","providers","host","descendants","transform","_checked","radioGroup","_radioDispatcher","notify","id","_setDisabled","_color","_providerOverride","inputId","_uniqueId","_elementRef","_focusMonitor","animationMode","tabIndex","disableRipple","_removeUniqueSelectionListener","_noopAnimations","focus","options","origin","focusVia","_inputElement","nativeElement","ngOnInit","listen","ngDoCheck","_updateTabIndex","ngAfterViewInit","monitor","focusOrigin","stopMonitoring","_isRippleDisabled","_onInputClick","event","stopPropagation","_onInputInteraction","groupValueChanged","_onTouchTargetClick","group","_previousTabIndex","input","setAttribute","MatRadioButton_Factory","FocusMonitor","UniqueSelectionDispatcher","ɵɵinjectAttribute","ɵcmp","ɵɵdefineComponent","viewQuery","MatRadioButton_Query","ɵɵviewQuery","first","_rippleTrigger","hostVars","hostBindings","MatRadioButton_HostBindings","ɵɵlistener","MatRadioButton_focus_HostBindingHandler","ɵɵattribute","ɵɵclassProp","ariaLabel","None","ariaLabelledby","ariaDescribedby","ɵɵStandaloneFeature","ngContentSelectors","decls","vars","consts","template","MatRadioButton_Template","_r1","ɵɵgetCurrentView","ɵɵprojectionDef","ɵɵelementStart","MatRadioButton_Template_div_click_3_listener","$event","ɵɵrestoreView","ɵɵresetView","ɵɵelementEnd","MatRadioButton_Template_input_change_4_listener","ɵɵelement","ɵɵprojection","ɵɵproperty","ɵɵadvance","dependencies","styles","encapsulation","changeDetection","OnPush","imports","decorators","undefined","read","static","MatRadioModule","MatRadioModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}