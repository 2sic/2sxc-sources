{"version":3,"file":"projects_eav-ui_src_app_apps-management_system-info_system-info_component_ts-projects_eav-ui_-24c111.dea28d035838ae0d.js","mappings":"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","names":["SxcInsightsService","constructor","http","dnnContext","this","activatePageLog","duration","get","$2sxc","apiUrl","webApiLogRoot","params","toString","static","t","i0","i1","i2","core","jDH","factory","ɵfac","_r5","info_r3","$implicit","ctx_r3","openSideNavPath","link","url","_c4","label","_r2","copyToClipboard","value","SystemInfoComponent_Conditional_0_For_12_Conditional_6_Template","_r8","info_r7","target","SystemInfoComponent_Conditional_0_For_36_Conditional_6_Conditional_0_Template","SystemInfoComponent_Conditional_0_For_36_Conditional_6_Conditional_1_Template","_r6","SystemInfoComponent_Conditional_0_For_36_Conditional_6_Template","SystemInfoComponent_Conditional_0_Conditional_119_Conditional_0_Template","duration_r10","errors","pattern","info_r12","SystemInfoComponent_Conditional_0_For_135_Conditional_6_Conditional_0_Template","SystemInfoComponent_Conditional_0_For_135_Conditional_6_Conditional_1_Template","_r11","SystemInfoComponent_Conditional_0_For_135_Conditional_6_Template","SystemInfoComponent_Conditional_0_For_12_Template","SystemInfoComponent_Conditional_0_ng_container_19_Template","_r1","openGlobalSettings","SystemInfoComponent_Conditional_0_For_36_Template","SystemInfoComponent_Conditional_0_ng_container_44_Template","openSiteSettings","SystemInfoComponent_Conditional_0_Conditional_61_Template","SystemInfoComponent_Conditional_0_ng_container_64_Template","SystemInfoComponent_Conditional_0_Conditional_76_Template","SystemInfoComponent_Conditional_0_ng_container_79_Template","SystemInfoComponent_Conditional_0_ng_container_98_Template","openInsights","activateLogForm_r9","$event","pageLogDuration","SystemInfoComponent_Conditional_0_Conditional_119_Template","SystemInfoComponent_Conditional_0_For_135_Template","vm_r13","systemInfos","docsLink_r14","_c0","siteInfos","lsEnabled","_c1","cspEnabled","_c2","_c3","positiveWholeNumber","loading","touched","valid","warningIcon","warningInfos","tmp_7_0","icon_r15","undefined","label_r16","SystemInfoComponent","BaseWithChildDialogComponent","router","route","snackBar","super","dialogSettings","transient","AppDialogConfigService","sxcInsightsService","zoneService","ZoneService","dialogService","DialogService","features","inject","FeaturesService","isEnabled","FeatureNames","LightSpeed","ContentSecurityPolicy","ngOnInit","systemInfoSet$","BehaviorSubject","languages$","loading$","buildViewModel","getSystemInfo","getLanguages","subscriptions","add","childDialogClosed$","subscribe","ngOnDestroy","complete","text","open","getSitePrimaryApp$","sitePrimaryApp","openAppAdministration","ZoneId","AppId","getGlobalPrimaryApp$","globalPrimaryApp","window","sideNavPath","includes","navigate","replace","form","next","res","document","activeElement","HTMLElement","blur","resetForm","error","systemInfoSet","languages","systemInfos$","pipe","map","System","EavVersion","Platform","PlatformVersion","Zones","Fingerprint","License","Owner","siteInfos$","combineLatest","allLanguages","length","activeLanguages","filter","l","IsEnabled","Site","SiteId","Apps","warningIcon$","Messages","WarningsObsolete","WarningsOther","warningInfos$","viewModel$","VBU","selectors","standalone","decls","vars","consts","template","rf","ctx","SystemInfoComponent_Conditional_0_Template","SystemInfoComponent_ng_template_2_Template","tmp_1_0","MatCardModule","i3","MatIconModule","i4","RouterLink","NgTemplateOutlet","MatButtonModule","i5","FormsModule","i6","MatFormFieldModule","i7","MatInputModule","i8","RouterOutlet","AsyncPipe","FeatureTextInfoComponent","FieldHintComponent","TippyDirective","token","injector","Injector","create","providers","parent","self","AppSyncWithSiteFiles","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","PermissionsByLanguage","FieldShareConfigManagement","FeatureDetailService","getFeatureDetails","featureNameId","webApiRoot","nameId","_angular_core__WEBPACK_IMPORTED_MODULE_0__","id_r3","FeatureInfoDialogComponent_Conditional_0_Conditional_15_Template","feature_r5","findOutMore","closeDialog","name","description","tmp_6_0","FeatureInfoDialogComponent","dialogData","dialogRef","featureDetailService","close","MAT_DIALOG_DATA","FeatureInfoDialogComponent_Conditional_0_Template","tmp_0_0","TranslateModule","SafeHtmlPipe","FeatureComponentProviders","FeatureComponentBase","featureNameId$","showIf","showIf$","dialog","MatDialog","viewContainerRef","ViewContainerRef","changeDetectorRef","ChangeDetectorRef","featuresService","feature$","switchMap","featName","get$","show$","feat","openDialog","openFeatureDialog","FsC","inputs","featureId","autoFocus","data","width","markForCheck","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","isError","isShort","toggleIsShort","ngContentSelectors","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","tmp_2_0","NgClass","styles","str","el","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/apps-management/services/sxc-insights.service.ts","./projects/eav-ui/src/app/apps-management/system-info/system-info.component.html","./projects/eav-ui/src/app/apps-management/system-info/system-info.component.ts","./projects/eav-ui/src/app/core/transient.ts","./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/helpers/copy-to-clipboard.helper.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nconst webApiLogRoot = 'sys/log/';\r\n\r\n@Injectable()\r\nexport class SxcInsightsService {\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext) { }\r\n\r\n  activatePageLog(duration: number) {\r\n    return this.http.get<string>(this.dnnContext.$2sxc.http.apiUrl(webApiLogRoot + 'EnableDebug'), {\r\n      params: { duration: duration.toString() }\r\n    });\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-cards-box\">\r\n    <!-- Platform Info -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">settings_applications</mat-icon>\r\n        </div>\r\n        <mat-card-title>Platform</mat-card-title>\r\n        <mat-card-subtitle>What you are running</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        @for (info of vm.systemInfos; track info) {\r\n          <div class=\"eav-info-row\">\r\n            <div class=\"eav-info-row__label\">{{ info.label }}:</div>\r\n            <div class=\"eav-info-row__value\">\r\n              <span class=\"eav-info-row__value__span eav-click\" [tippy]=\"info.value\"\r\n                (click)=\"copyToClipboard(info.value)\">{{ info.value }}</span>\r\n              @if (info.link) {\r\n                <a class=\"eav-info-row__link\" [routerLink]=\"['/']\" (click)=\"openSideNavPath(info.link.url)\">\r\n                  {{ info.link.label }}\r\n                </a>\r\n              }\r\n            </div>\r\n          </div>\r\n        }\r\n        <h4>Global Settings</h4>\r\n        <p>\r\n          This includes both pre-defined SystemSettings as well as custom Settings.\r\n          It will affect the entire Installation.\r\n        </p>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/settings' }\"></ng-container>\r\n        <button mat-button class=\"eav-button__with-icon\" (click)=\"openGlobalSettings()\">\r\n          <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n          <span>Open Global Settings</span>\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Site Info -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">public</mat-icon>\r\n        </div>\r\n        <mat-card-title>This Site</mat-card-title>\r\n        <mat-card-subtitle>The current Site you're on</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        @for (info of vm.siteInfos; track info) {\r\n          <div class=\"eav-info-row\">\r\n            <div class=\"eav-info-row__label\">{{ info.label }}:</div>\r\n            <div class=\"eav-info-row__value\">\r\n              <span [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">{{ info.value }}</span>\r\n              @if (info.link) {\r\n                @if (info.link.target === 'angular') {\r\n                  <a [routerLink]=\"['/']\" class=\"eav-info-row__link\" (click)=\"openSideNavPath(info.link.url)\" >\r\n                  {{info.link.label }}\r\n                  </a>\r\n                }\r\n                @if (info.link.target !== 'angular') {\r\n                  <a class=\"eav-info-row__link\" [href]=\"info.link.url\" [target]=\"info.link.target\">{{ info.link.label }}</a>\r\n                }\r\n              }\r\n            </div>\r\n          </div>\r\n        }\r\n        <div class=\"card-content-separator\"></div>\r\n        <h4>Site Settings</h4>\r\n        <p>\r\n          This includes both pre-defined SystemSettings as well as custom Settings.\r\n          It will affect the entire Site / Portal.\r\n        </p>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/settings' }\"></ng-container>\r\n        <button mat-button class=\"eav-button__with-icon\" (click)=\"openSiteSettings()\">\r\n          <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n          <span>Open Site Settings</span>\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Performance / Lightspeed -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">bolt</mat-icon>\r\n        </div>\r\n        <mat-card-title>Performance</mat-card-title>\r\n        <mat-card-subtitle>Performance Enhancements and Caching</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <app-feature-text-info [featureNameId]=\"'LightSpeedOutputCache'\" [asInfo]=\"true\"></app-feature-text-info>\r\n        @if (lsEnabled()) {\r\n          <div>\r\n            LightSpeed is enabled.\r\n            Configure it in each site/app as you need.\r\n          </div>\r\n        }\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/lightspeed' }\"></ng-container>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Security -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">local_police</mat-icon>\r\n        </div>\r\n        <mat-card-title>Security</mat-card-title>\r\n        <mat-card-subtitle>System Security Features</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <app-feature-text-info [featureNameId]=\"'ContentSecurityPolicy'\" [asInfo]=\"true\"></app-feature-text-info>\r\n        @if (cspEnabled()) {\r\n          <div>\r\n            ContentSecurityPolicy is enabled.\r\n            Configure it in each site/app as you need.\r\n          </div>\r\n        }\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/csp' }\"></ng-container>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Insights -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">speed</mat-icon>\r\n        </div>\r\n        <mat-card-title>2sxc Insights</mat-card-title>\r\n        <mat-card-subtitle>See what's happening under the hood</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <h4>2sxc Insights for Super Users</h4>\r\n        <p>\r\n          This is to access a special section to see what is really in the server memory.\r\n          It's intended for extensive debugging - see also\r\n          <a href=\"https://2sxc.org/en/blog/post/using-2sxc-insights\" target=\"_blank\">this blog post</a>.\r\n        </p>\r\n        <div align=\"start\">\r\n          <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/insights' }\"></ng-container>\r\n          <button mat-button class=\"eav-button__with-icon\" (click)=\"openInsights()\">\r\n            <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n            <span>Open 2sxc Insights</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"card-content-separator\"></div>\r\n        <h4>Activate Page Level Logging</h4>\r\n        <form #activateLogForm=\"ngForm\" class=\"activate-log-form\" (ngSubmit)=\"activatePageLog(activateLogForm)\">\r\n          <div>\r\n            This will place insights-logs in the HTML of the user output for users with <code>?debug=true</code> in the\r\n            url.\r\n            It can only be activated for short periods of time.\r\n          </div>\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Duration in Minutes</mat-label>\r\n            <input matInput type=\"number\" min=\"0\" required [pattern]=\"positiveWholeNumber\" [(ngModel)]=\"pageLogDuration\"\r\n              name=\"Duration\" #duration=\"ngModel\" [disabled]=\"vm.loading\">\r\n          </mat-form-field>\r\n          @if (duration.touched && duration.errors) {\r\n            @if (duration.errors.pattern) {\r\n              <app-field-hint [isError]=\"true\">\r\n                Only positive whole numbers\r\n              </app-field-hint>\r\n            }\r\n          }\r\n        </form>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"end\">\r\n        <button mat-raised-button type=\"submit\" color=\"accent\" [disabled]=\"!activateLogForm.valid || vm.loading\">\r\n          Activate\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Warnings -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">{{ vm.warningIcon }}</mat-icon>\r\n        </div>\r\n        <mat-card-title>Warnings</mat-card-title>\r\n        <mat-card-subtitle>System and Code Warnings</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        @for (info of vm.warningInfos; track info) {\r\n          <div class=\"eav-info-row\">\r\n            <div class=\"eav-info-row__label eav-long\">{{ info.label }}:</div>\r\n            <div class=\"eav-info-row__value\">\r\n              <span [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">{{ info.value }}</span>\r\n              @if (info.link) {\r\n                @if (info.link.target === 'angular') {\r\n                  <a class=\"eav-info-row__link\" [routerLink]=\"info.link.url\">\r\n                    {{info.link.label}}</a>\r\n                }\r\n                @if (info.link.target !== 'angular') {\r\n                  <a class=\"eav-info-row__link\" [href]=\"info.link.url\" [target]=\"info.link.target\">{{ info.link.label }}</a>\r\n                }\r\n              }\r\n            </div>\r\n          </div>\r\n        }\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n    </mat-card>\r\n  </div>\r\n}\r\n\r\n\r\n<ng-template #docsLink let-icon let-label let-link=\"link\">\r\n  <a mat-button class=\"eav-button__with-icon\" href=\"{{link}}\" target=\"_blank\" [tippy]=\"'online documentation'\">\r\n    <mat-icon class=\"eav-icon\">{{ icon ?? \"menu_book\" }}</mat-icon>\r\n    <span>{{ label }}</span>\r\n  </a>\r\n</ng-template>\r\n\r\n<router-outlet></router-outlet>\r\n","import { Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { NgForm, FormsModule } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router, RouterLink, RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { BaseWithChildDialogComponent } from '../../shared/components/base-with-child-dialog.component';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { SiteLanguage } from '../models/site-language.model';\r\nimport { SystemInfoSet } from '../models/system-info.model';\r\nimport { SxcInsightsService } from '../services/sxc-insights.service';\r\nimport { ZoneService } from '../services/zone.service';\r\nimport { InfoTemplate, SystemInfoViewModel } from './system-info.models';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgTemplateOutlet, AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { AppDialogConfigService } from '../../app-administration/services';\r\nimport { FeatureTextInfoComponent } from '../../features/feature-text-info/feature-text-info.component';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { FeatureDetailService } from '../../features/services/feature-detail.service';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { transient } from '../../core';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-system-info',\r\n  templateUrl: './system-info.component.html',\r\n  styleUrls: ['./system-info.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatIconModule,\r\n    RouterLink,\r\n    NgTemplateOutlet,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    RouterOutlet,\r\n    AsyncPipe,\r\n    FeatureTextInfoComponent,\r\n    FieldHintComponent,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class SystemInfoComponent extends BaseWithChildDialogComponent implements OnInit, OnDestroy {\r\n\r\n  private dialogSettings = transient(AppDialogConfigService);\r\n  private sxcInsightsService = transient(SxcInsightsService);\r\n  private zoneService = transient(ZoneService);\r\n  private dialogService = transient(DialogService);\r\n\r\n  pageLogDuration: number;\r\n  positiveWholeNumber = /^[1-9][0-9]*$/;\r\n  viewModel$: Observable<SystemInfoViewModel>;\r\n\r\n  private systemInfoSet$: BehaviorSubject<SystemInfoSet | undefined>;\r\n  private languages$: BehaviorSubject<SiteLanguage[] | undefined>;\r\n  private loading$: BehaviorSubject<boolean>;\r\n\r\n  public features: FeaturesService = inject(FeaturesService);\r\n  protected lsEnabled = this.features.isEnabled(FeatureNames.LightSpeed);\r\n  protected cspEnabled = this.features.isEnabled(FeatureNames.ContentSecurityPolicy);\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    super(router, route);\r\n  }\r\n  ngOnInit(): void {\r\n    this.systemInfoSet$ = new BehaviorSubject<SystemInfoSet | undefined>(undefined);\r\n    this.languages$ = new BehaviorSubject<SiteLanguage[] | undefined>(undefined);\r\n    this.loading$ = new BehaviorSubject<boolean>(false);\r\n    this.buildViewModel();\r\n    this.getSystemInfo();\r\n    this.getLanguages();\r\n    this.subscriptions.add(this.childDialogClosed$().subscribe(() => {\r\n      this.buildViewModel();\r\n      this.getSystemInfo();\r\n      this.getLanguages();\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.systemInfoSet$.complete();\r\n    this.languages$.complete();\r\n    this.loading$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  openSiteSettings(): void {\r\n    this.dialogSettings.getSitePrimaryApp$().subscribe(sitePrimaryApp => {\r\n      this.dialogService.openAppAdministration(sitePrimaryApp.ZoneId, sitePrimaryApp.AppId, 'app');\r\n    })\r\n  }\r\n\r\n  openGlobalSettings(): void {\r\n    this.dialogSettings.getGlobalPrimaryApp$().subscribe(globalPrimaryApp => {\r\n      this.dialogService.openAppAdministration(globalPrimaryApp.ZoneId, globalPrimaryApp.AppId, 'app');\r\n    })\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/help'), '_blank');\r\n  }\r\n\r\n\r\n  openSideNavPath(sideNavPath: string): void {\r\n\r\n    // Url are /2/apps/system/registration, sideNavPath are only the last part of the url\r\n    if (sideNavPath.includes('registration'))\r\n      sideNavPath = 'registration';\r\n\r\n    this.router.navigate([this.router.url.replace('system', '') + sideNavPath]);\r\n  }\r\n\r\n  activatePageLog(form: NgForm) {\r\n    this.loading$.next(true);\r\n    this.snackBar.open('Activating...');\r\n    this.sxcInsightsService.activatePageLog(this.pageLogDuration).subscribe(res => {\r\n      this.loading$.next(false);\r\n      this.snackBar.open(res, null, { duration: 4000 });\r\n    });\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n    form.resetForm();\r\n  }\r\n\r\n  private getSystemInfo(): void {\r\n    this.zoneService.getSystemInfo().subscribe({\r\n      error: () => {\r\n        this.systemInfoSet$.next(undefined);\r\n      },\r\n      next: (systemInfoSet) => {\r\n        this.systemInfoSet$.next(systemInfoSet);\r\n      },\r\n    });\r\n  }\r\n\r\n  private getLanguages(): void {\r\n    this.zoneService.getLanguages().subscribe({\r\n      error: () => {\r\n        this.languages$.next(undefined);\r\n      },\r\n      next: (languages) => {\r\n        this.languages$.next(languages);\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildViewModel(): void {\r\n    const systemInfos$ = this.systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) { return; }\r\n        const info: InfoTemplate[] = [\r\n          { label: 'CMS', value: `2sxc v.${systemInfoSet.System.EavVersion}` },\r\n          { label: 'Platform', value: `${systemInfoSet.System.Platform} v.${systemInfoSet.System.PlatformVersion}` },\r\n          { label: 'Zones', value: systemInfoSet.System.Zones.toString() },\r\n          { label: 'Fingerprint', value: systemInfoSet.System.Fingerprint },\r\n          {\r\n            label: 'Registered to',\r\n            value: systemInfoSet.License.Owner || '(unregistered)',\r\n            link: systemInfoSet.License.Owner\r\n              ? {\r\n                url: this.router.url + '/' + \"registration\",\r\n                label: 'manage',\r\n                target: 'angular',\r\n              }\r\n              : {\r\n                url: this.router.url + '/' + \"registration\",\r\n                label: 'register',\r\n                target: 'angular',\r\n              },\r\n          },\r\n        ];\r\n        return info;\r\n      })\r\n    );\r\n    const siteInfos$ = combineLatest([this.systemInfoSet$, this.languages$]).pipe(\r\n      map(([systemInfoSet, languages]) => {\r\n        if (systemInfoSet == null || languages == null) { return; }\r\n        const allLanguages = languages.length;\r\n        const activeLanguages = languages.filter(l => l.IsEnabled).length;\r\n        const info: InfoTemplate[] = [\r\n          { label: 'Zone', value: systemInfoSet.Site.ZoneId.toString() },\r\n          { label: 'Site', value: systemInfoSet.Site.SiteId.toString() },\r\n          {\r\n            label: 'Languages',\r\n            value: `${activeLanguages}/${allLanguages}`,\r\n            link: {\r\n              url: 'languages',\r\n              label: 'manage',\r\n              target: 'angular',\r\n            },\r\n          },\r\n          {\r\n            label: 'Apps',\r\n            value: systemInfoSet.Site.Apps.toString(),\r\n            link: {\r\n              url: 'list',\r\n              label: 'manage',\r\n              target: 'angular',\r\n            },\r\n          },\r\n        ];\r\n        return info;\r\n      })\r\n    );\r\n    const warningIcon$ = this.systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) { return; }\r\n        if (systemInfoSet.Messages.WarningsObsolete || systemInfoSet.Messages.WarningsOther) {\r\n          return 'warning';\r\n        }\r\n        return 'check';\r\n      }),\r\n    );\r\n    const warningInfos$ = this.systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) { return; }\r\n        const info: InfoTemplate[] = [\r\n          {\r\n            label: 'Warnings Obsolete',\r\n            value: systemInfoSet.Messages.WarningsObsolete.toString(),\r\n            link: !systemInfoSet.Messages.WarningsObsolete\r\n              ? undefined\r\n              : {\r\n                url: window.$2sxc.http.apiUrl('sys/insights/logs?key=warnings-obsolete'),\r\n                label: 'review',\r\n                target: '_blank',\r\n              },\r\n          },\r\n          {\r\n            label: 'Warnings Other',\r\n            value: systemInfoSet.Messages.WarningsOther.toString(),\r\n            link: !systemInfoSet.Messages.WarningsOther\r\n              ? undefined\r\n              : {\r\n                url: window.$2sxc.http.apiUrl('sys/insights/logs'),\r\n                label: 'review',\r\n                target: '_blank',\r\n              },\r\n          },\r\n        ];\r\n        return info;\r\n      }),\r\n    );\r\n    this.viewModel$ = combineLatest([systemInfos$, siteInfos$, this.loading$, warningIcon$, warningInfos$]).pipe(\r\n      map(([systemInfos, siteInfos, loading, warningIcon, warningInfos]) => {\r\n        const viewModel: SystemInfoViewModel = {\r\n          systemInfos,\r\n          siteInfos,\r\n          loading,\r\n          warningIcon,\r\n          warningInfos,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Injector, ProviderToken, TypeProvider, inject } from '@angular/core';\r\n\r\n/**\r\n * Transient dependency injection provider.\r\n * This will create a new instance of the provided token,\r\n * without making it available in sub-components\r\n * as would happen with providers in a component.\r\n * \r\n * @param token the class which is injectable\r\n * @param injector the injector to use, if not provided, the current injector will be used.\r\n *     Not not necessary when using transient in the class properties construction or in the constructor,\r\n *     as the injector will be available in the constructor.\r\n *     But necessary when using transient inside anything else.\r\n * @returns \r\n */\r\nexport function transient<T>(token: ProviderToken<T>, injector?: Injector): T {\r\n  // make sure we have an injector\r\n  // this will throw an error, if transient is used outside of construction and without providing an injector\r\n  injector ??= inject(Injector);\r\n\r\n  // create a new injector which is only meant to be used for this transient instance\r\n  const subInjector = Injector.create({\r\n    providers: [\r\n      token as TypeProvider\r\n    ],\r\n    parent: injector\r\n  });\r\n\r\n  // return the instance\r\n  return subInjector.get(token, undefined, { self: true });\r\n}\r\n","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  FieldShareConfigManagement: 'FieldShareConfigManagement',\r\n};\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Feature } from '../models';\r\n\r\nexport const webApiRoot = \"admin/feature/\";\r\n\r\n@Injectable()\r\nexport class FeatureDetailService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private dnnContext: DnnContext\r\n  ) { }\r\n\r\n  getFeatureDetails(featureNameId: string): Observable<Feature> {\r\n    return this.http.get<Feature>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot + 'details'), {\r\n      params: { nameId: featureNameId }\r\n    });\r\n  }\r\n}\r\n","@if (viewModel$ | async; as feature) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ feature.name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"feature.description | safeHtml\"></p>\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ \"Features.Status\" | translate }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ (feature.isEnabled ? \"Features.Active\" : \"Features.NotActive\") | translate }}</span>\r\n        </div>\r\n      </div>\r\n      @if (feature.nameId; as id) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">ID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      <button mat-raised-button color=\"accent\"\r\n        class=\"eav-card-action-button\" (click)=\"findOutMore(feature.link)\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        {{ \"Features.FindOutMore\" | translate }}\r\n      </button>\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">\r\n        {{ \"Features.Close\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable } from 'rxjs';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { Feature } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\n\r\n@Component({\r\n  selector: 'app-feature-info-dialog',\r\n  templateUrl: './feature-info-dialog.component.html',\r\n  styleUrls: ['./feature-info-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n    TippyDirective,\r\n    SafeHtmlPipe,\r\n  ]\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  viewModel$: Observable<Feature>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    private dialogRef: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private featureDetailService: FeatureDetailService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.viewModel$ = this.featureDetailService.getFeatureDetails(this.dialogData);\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  findOutMore(link: string): void {\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Directive, Input, ViewContainerRef, inject } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { BehaviorSubject, switchMap, Observable, map, combineLatest } from 'rxjs';\r\nimport { FeatureSummary } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\n\r\nexport const FeatureComponentProviders = [\r\n  FeatureDetailService,\r\n];\r\n\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n  /** Feature NameId to check */\r\n  @Input()\r\n  public set featureNameId(value: string) { this.featureNameId$.next(value); }\r\n  protected featureNameId$ = new BehaviorSubject<string>(null);\r\n\r\n  /** By default, it will show if it's false - here we can change it to show if true */\r\n  @Input()\r\n  public set showIf(value: boolean) { this.showIf$.next(value == true); }\r\n  protected showIf$ = new BehaviorSubject<boolean>(false);\r\n\r\n  // TODO: @SDV - MAKE REACTIVE - SEE text-info-component example\r\n  // featureOn: boolean = true;\r\n  feature$: Observable<FeatureSummary>;\r\n  show$: Observable<boolean>;\r\n\r\n  private dialog = inject(MatDialog);\r\n  private viewContainerRef = inject(ViewContainerRef);\r\n  private changeDetectorRef = inject(ChangeDetectorRef);\r\n  protected featuresService = inject(FeaturesService);\r\n\r\n  constructor() {\r\n    this.feature$ = this.featureNameId$.pipe(\r\n      switchMap(featName => this.featuresService.get$(featName)\r\n    ));\r\n    this.show$ = combineLatest([this.feature$, this.showIf$]).pipe(\r\n      // tap(data => console.log('2dm - show$', data)),\r\n      map(([feat,showIf]) => showIf == (feat?.isEnabled ?? false))\r\n    );\r\n  }\r\n\r\n  openDialog() {\r\n    openFeatureDialog(this.dialog, this.featureNameId$.value, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n}\r\n\r\n\r\nexport function openFeatureDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n  dialog.open(FeatureInfoDialogComponent, {\r\n    autoFocus: false,\r\n    data: featureId,\r\n    viewContainerRef: viewContainerRef,\r\n    width: '400px',\r\n  });\r\n\r\n  changeDetectorRef.markForCheck();\r\n}","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule, NgClass, NgTemplateOutlet\r\n  ]\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}