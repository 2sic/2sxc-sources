{"version":3,"sources":["./src/app/import-app/import-app.component.html","./src/app/import-app/import-app.component.ts"],"names":["dialogRef","importAppService","hostClass","isImporting$","importFile$","importResult$","templateVars$","this","pipe","isImporting","importFile","importResult","ngOnInit","ngOnDestroy","complete","importApp","changedName","next","value","subscribe","result","Messages","MessageType","folderName","prompt","Text","error","fileChange","event","target","files","closeDialog","close","ImportAppComponent"],"mappings":"mTAME,wB,sBAWM,eAA+B,sBAAW,Q,yBAC1C,eAA8B,QAA0B,Q,wBAA1B,iC,qCAVpC,cACE,cACE,2GACA,cAA+B,+BAAoB,OAAI,oCAChC,cAAiE,oBAAS,OAAI,aACvG,OAEA,cACE,oBAAyD,iDAAS,WAChE,wBACA,wBACF,OACA,sBAA8B,mEAA9B,OACF,OAEA,kBACE,qBAA0B,iEAAwB,kBAAM,OACxD,qBACE,+DAAsB,kBAAM,OAChC,OACF,O,0BAXY,oCACA,kCAOiC,uD,sBAOzC,iBACE,mFACF,Q,sBACA,iBACE,4EACF,Q,8HACA,iBAKE,QACF,Q,uBAN4E,6EAK1E,8B,qCAbN,QACE,iBACE,uBAGA,uBAGA,uBAOF,OACA,iBACE,oBAAyC,iEAAwB,gBAAK,OACxE,OACF,O,0BAjBS,8CAGA,+CAGA,iD,yBAlCX,QAEE,8BAEA,uBAsBA,+BAoBF,Q,kBA5Ce,mCAER,+EAsBS,8ECrBhB,iBAgBE,WAAoBA,EAAqDC,GAArD,KAAAD,YAAqD,KAAAC,mBAT/C,KAAAC,UAAY,mBAE9B,KAAAC,aAAe,IAAI,KAAgB,GACnC,KAAAC,YAAc,IAAI,IAAsB,MACxC,KAAAC,cAAgB,IAAI,IAAiC,MAC7D,KAAAC,cAAgB,YAAc,CAACC,KAAKJ,aAAcI,KAAKH,YAAaG,KAAKF,gBAAgBG,KACvF,aAAI,SAAC,G,IAAA,mBAA4C,OAAGC,YAA9C,KAA2DC,WAA9C,KAA0DC,aAA9C,U,OAKjC,YAAAC,SAAA,aAGA,YAAAC,YAAA,WACEN,KAAKJ,aAAaW,WAClBP,KAAKH,YAAYU,WACjBP,KAAKF,cAAcS,YAGrB,YAAAC,UAAA,SAAUC,GAAV,WACET,KAAKJ,aAAac,MAAK,GAEvBV,KAAKN,iBAAiBc,UAAUR,KAAKH,YAAYc,MAAOF,GAAaG,UAAU,CAC7EF,KAAM,SAAAG,G,UAKJ,GAJA,EAAKjB,aAAac,MAAK,GAEvB,EAAKZ,cAAcY,KAAKG,GAEqC,KAAnB,QAAtC,EAAkC,QAAlC,EAAwB,QAAxB,IAAKf,cAAca,aAAK,eAAEG,gBAAQ,eAAG,UAAC,eAAGC,aAAmB,CAC9D,IAAMC,EAAaC,OAAO,EAAKnB,cAAca,MAAMG,SAAS,GAAGI,KAAO,4DAClEF,GACF,EAAKR,UAAUQ,KAIrBG,MAAO,SAACA,GACN,EAAKvB,aAAac,MAAK,OAK7B,YAAAU,WAAA,SAAWC,GAETrB,KAAKH,YAAYa,KADGW,EAAMC,OAA4BC,MAAM,KAI9D,YAAAC,YAAA,WACExB,KAAKP,UAAUgC,S,sCAjDNC,GAAkB,sB,uBAAlBA,EAAkB,0E,m/BDf/B,gBACE,gBAA8B,qBAAU,OAC1C,OAEA,+B,uBAAc,iD,uFCKd","file":"import-app-component.461d4b2aba8b8555ca02.js","sourcesContent":["<div mat-dialog-title>\r\n  <div class=\"dialog-title-box\">Import App</div>\r\n</div>\r\n\r\n<ng-container *ngIf=\"(templateVars$ | async) as data\">\r\n\r\n  <mat-spinner *ngIf=\"data.isImporting\" mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n\r\n  <div *ngIf=\"!data.importResult || (data.importResult && !data.importResult.Messages)\">\r\n    <p class=\"dialog-description\">\r\n      Select an app package (zip) from your computer to import an app. New apps can be downloaded on\r\n      <a href=\"http://2sxc.org/apps\">http://2sxc.org/apps</a>.\r\n      For further help visit <a href=\"http://2sxc.org/en/help?tag=import-app\" target=\"_blank\">2sxc Help</a>.\r\n    </p>\r\n\r\n    <div>\r\n      <button mat-raised-button matTooltip=\"Open file browser\" (click)=\"fileInput.click()\">\r\n        <span *ngIf=\"!data.importFile\">Select file</span>\r\n        <span *ngIf=\"data.importFile\">{{ data.importFile.name }}</span>\r\n      </button>\r\n      <input #fileInput type=\"file\" (change)=\"fileChange($event)\" class=\"hide\" />\r\n    </div>\r\n\r\n    <div class=\"dialog-component-actions\">\r\n      <button mat-raised-button (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button color=\"accent\" [disabled]=\"!data.importFile || data.isImporting\"\r\n        (click)=\"importApp()\">Import</button>\r\n    </div>\r\n  </div>\r\n\r\n  <ng-container *ngIf=\"data.importResult && data.importResult.Messages && !data.isImporting\">\r\n    <div class=\"dialog-component-content fancy-scrollbar-light\">\r\n      <div *ngIf=\"data.importResult.Succeeded\" class=\"sxc-message sxc-message-info\">\r\n        The import has been done. See the messages below for more information.\r\n      </div>\r\n      <div *ngIf=\"!data.importResult.Succeeded\" class=\"sxc-message sxc-message-error\">\r\n        The import failed. See the messages below for more information.\r\n      </div>\r\n      <div *ngFor=\"let message of data.importResult.Messages\" class=\"sxc-message\" [ngClass]=\"{\r\n        'sxc-message-warning': message.MessageType == 0,\r\n        'sxc-message-success': message.MessageType == 1,\r\n        'sxc-message-error': message.MessageType == 2\r\n      }\">\r\n        {{ message.Text }}\r\n      </div>\r\n    </div>\r\n    <div class=\"dialog-component-actions\">\r\n      <button mat-raised-button color=\"accent\" (click)=\"closeDialog()\">Close</button>\r\n    </div>\r\n  </ng-container>\r\n</ng-container>\r\n","import { Component, OnInit, HostBinding, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { ImportAppService } from './services/import-app.service';\r\nimport { ImportAppResult } from './models/import-app-result.model';\r\n\r\n@Component({\r\n  selector: 'app-import-app',\r\n  templateUrl: './import-app.component.html',\r\n  styleUrls: ['./import-app.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ImportAppComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  private isImporting$ = new BehaviorSubject(false);\r\n  private importFile$ = new BehaviorSubject<File>(null);\r\n  private importResult$ = new BehaviorSubject<ImportAppResult>(null);\r\n  templateVars$ = combineLatest([this.isImporting$, this.importFile$, this.importResult$]).pipe(\r\n    map(([isImporting, importFile, importResult]) => ({ isImporting, importFile, importResult })),\r\n  );\r\n\r\n  constructor(private dialogRef: MatDialogRef<ImportAppComponent>, private importAppService: ImportAppService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.isImporting$.complete();\r\n    this.importFile$.complete();\r\n    this.importResult$.complete();\r\n  }\r\n\r\n  importApp(changedName?: string) {\r\n    this.isImporting$.next(true);\r\n\r\n    this.importAppService.importApp(this.importFile$.value, changedName).subscribe({\r\n      next: result => {\r\n        this.isImporting$.next(false);\r\n\r\n        this.importResult$.next(result);\r\n        // The app could not be installed because the app-folder already exists. Install app in a different folder?\r\n        if (this.importResult$.value?.Messages?.[0]?.MessageType === 0) {\r\n          const folderName = prompt(this.importResult$.value.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            this.importApp(folderName);\r\n          }\r\n        }\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.isImporting$.next(false);\r\n      },\r\n    });\r\n  }\r\n\r\n  fileChange(event: Event) {\r\n    const importFile = (event.target as HTMLInputElement).files[0];\r\n    this.importFile$.next(importFile);\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}