{"version":3,"file":"projects_eav-ui_src_app_app-administration_sub-dialogs_analyze-settings_analyze-settings_comp-6cd38e.29003e58563e15b6.js","mappings":"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","names":["AnalyzeSettingsKeyComponent","constructor","snackBar","this","agInit","params","key","value","refresh","copy","copyToClipboard","open","duration","static","t","i0","i1","fesm2022_core","VBU","selectors","standalone","features","decls","vars","consts","template","rf","ctx","MatRippleModule","i2","TippyDirective","styles","ctx_r0","totalResults","_r2","openDetails","AnalyzeSettingsTotalResultsComponent","stackItem","data","AnalyzeSettingsTotalResultsComponent_Conditional_0_Template","AnalyzeSettingsTotalResultsComponent_Conditional_1_Template","MatIconModule","view_r3","Guid","Name","_r1","ctx_r1","closeDialog","$event","changeView","AnalyzeSettingsComponent_Conditional_0_For_19_Template","part","vm_r4","selectedView","undefined","views","stack","gridOptions","AnalyzeSettingsComponent","dialogRef","route","router","buildGridOptions","viewsService","transient","ViewsService","analyzeSettingsService","AnalyzeSettingsService","snapshot","paramMap","get","ngOnInit","views$","BehaviorSubject","selectedView$","stack$","getViews","getStack","viewModel$","combineLatest","pipe","map","ngOnDestroy","complete","close","viewGuid","next","getAll","subscribe","defaultGridOptions","columnDefs","ColumnDefinitions","TextWideActionClass","headerName","field","cellRenderer","AnalyzeSettingsValueComponent","TextNarrow","width","headerClass","cellClass","split","sortable","filter","cellRendererParams","navigate","Path","relativeTo","AnalyzeSettingsComponent_Conditional_0_Template","tmp_0_0","MatButtonModule","i3","i4","RouterOutlet","MatFormFieldModule","i5","MatSelectModule","i6","i7","FormsModule","i8","MatOptionModule","AsyncPipe","SxcGridModule","i9"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-key/analyze-settings-key.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-key/analyze-settings-key.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-total-results/analyze-settings-total-results.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-total-results/analyze-settings-total-results.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings.component.ts"],"sourcesContent":["import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../../../shared/helpers/copy-to-clipboard.helper';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { TippyDirective } from 'projects/eav-ui/src/app/shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings-key',\r\n  templateUrl: './analyze-settings-key.component.html',\r\n  styleUrls: ['./analyze-settings-key.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class AnalyzeSettingsKeyComponent implements ICellRendererAngularComp {\r\n  key: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.key = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy() {\r\n    copyToClipboard(this.key);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"key-box highlight\" [tippy]=\"key\" (click)=\"copy()\">\r\n  <span class=\"key\">{{ key }}</span>\r\n</div>\r\n","@if (totalResults <= 1) {\r\n  <div class=\"input-component no-click\">\r\n    <div>{{ totalResults }}</div>\r\n    <div class=\"eav-grid-action-button disabled\">\r\n      <mat-icon>search</mat-icon>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n@if (totalResults > 1) {\r\n  <div matRipple class=\"input-component highlight\" tippy=\"Open details\" (click)=\"openDetails()\">\r\n    <div class=\"text\">{{ totalResults }}</div>\r\n    <div class=\"eav-grid-action-button\">\r\n      <mat-icon>search</mat-icon>\r\n    </div>\r\n  </div>\r\n}","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { SettingsStackItem } from '../analyze-settings.models';\r\nimport { AnalyzeSettingsTotalResultsParams } from './analyze-settings-total-results.models';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings-total-results',\r\n  templateUrl: './analyze-settings-total-results.component.html',\r\n  styleUrls: ['./analyze-settings-total-results.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    MatRippleModule,\r\n  ],\r\n})\r\nexport class AnalyzeSettingsTotalResultsComponent implements ICellRendererAngularComp {\r\n  totalResults: number;\r\n\r\n  private stackItem: SettingsStackItem;\r\n  private params: ICellRendererParams & AnalyzeSettingsTotalResultsParams;\r\n\r\n  agInit(params: ICellRendererParams & AnalyzeSettingsTotalResultsParams): void {\r\n    this.totalResults = params.value;\r\n    this.params = params;\r\n    this.stackItem = this.params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  openDetails(): void {\r\n    this.params.openDetails(this.stackItem);\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n<div class=\"nav-component-wrapper\">\r\n  <div mat-mdc-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Analyze {{ part }}</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"padding-class\">\r\n    <p class=\"dialog-description\">\r\n      Settings and Resources are consolidated from many sources. Here you see what the resulting values would be.\r\n    </p>\r\n    <router-outlet></router-outlet>\r\n    <mat-form-field color=\"accent\" class=\"view-select-box\">\r\n      <mat-label>Merge settings / resources of a View</mat-label>\r\n      <mat-select [ngModel]=\"vm.selectedView\" (ngModelChange)=\"changeView($event)\">\r\n        <mat-option [value]=\"undefined\">No view selected - this is how APIs see the data</mat-option>\r\n        @for (view of vm.views; track view) {\r\n        <mat-option [value]=\"view.Guid\">{{ view.Name }}</mat-option>\r\n        }\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"grid-wrapper padding-class\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.stack\" [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n    <div class=\"grid-more-actions-box\"></div>\r\n  </div>\r\n</div>\r\n}\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { View } from '../../models';\r\nimport { ViewsService } from '../../services';\r\nimport { AnalyzeSettingsService } from '../../services/analyze-settings.service';\r\nimport { AnalyzeSettingsKeyComponent } from './analyze-settings-key/analyze-settings-key.component';\r\nimport { AnalyzeSettingsTotalResultsComponent } from './analyze-settings-total-results/analyze-settings-total-results.component';\r\nimport { AnalyzeSettingsTotalResultsParams } from './analyze-settings-total-results/analyze-settings-total-results.models';\r\nimport { AnalyzeSettingsValueComponent } from './analyze-settings-value/analyze-settings-value.component';\r\nimport { AnalyzePart, AnalyzeSettingsViewModel, SettingsStackItem } from './analyze-settings.models';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { SxcGridModule } from '../../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { ColumnDefinitions } from '../../../shared/ag-grid/column-definitions';\r\nimport { transient } from '../../../core';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings',\r\n  templateUrl: './analyze-settings.component.html',\r\n  styleUrls: ['./analyze-settings.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    MatOptionModule,\r\n    AsyncPipe,\r\n    SxcGridModule,\r\n  ],\r\n})\r\nexport class AnalyzeSettingsComponent implements OnInit, OnDestroy {\r\n  part: AnalyzePart;\r\n  viewModel$: Observable<AnalyzeSettingsViewModel>;\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private views$: BehaviorSubject<View[]>;\r\n  private selectedView$: BehaviorSubject<string>;\r\n  private stack$: BehaviorSubject<SettingsStackItem[]>;\r\n\r\n  private viewsService = transient(ViewsService);\r\n  private analyzeSettingsService = transient(AnalyzeSettingsService);\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AnalyzeSettingsComponent>,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n  ) {\r\n    this.part = this.route.snapshot.paramMap.get('part') as AnalyzePart;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.views$ = new BehaviorSubject<View[]>([]);\r\n    this.selectedView$ = new BehaviorSubject<string>(undefined);\r\n    this.stack$ = new BehaviorSubject<SettingsStackItem[]>([]);\r\n\r\n    this.getViews();\r\n    this.getStack();\r\n\r\n    this.viewModel$ = combineLatest([this.views$, this.selectedView$, this.stack$]).pipe(\r\n      map(([views, selectedView, stack]) => {\r\n        const viewModel: AnalyzeSettingsViewModel = {\r\n          views,\r\n          selectedView,\r\n          stack,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.views$.complete();\r\n    this.selectedView$.complete();\r\n    this.stack$.complete();\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeView(viewGuid: string): void {\r\n    this.selectedView$.next(viewGuid);\r\n    this.getStack();\r\n  }\r\n\r\n  private getViews(): void {\r\n    this.viewsService.getAll().subscribe(views => {\r\n      this.views$.next(views);\r\n    });\r\n  }\r\n\r\n  private getStack(): void {\r\n    this.analyzeSettingsService.getStack(this.part, undefined, this.selectedView$.value, true).subscribe(stack => {\r\n      this.stack$.next(stack);\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.TextWideActionClass,\r\n          headerName: 'Key',\r\n          field: 'Path',\r\n          cellRenderer: AnalyzeSettingsKeyComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWideActionClass,\r\n          headerName: 'Value',\r\n          field: '_value',\r\n          cellRenderer: AnalyzeSettingsValueComponent,\r\n        },\r\n        {\r\n          field: 'Source',\r\n          ...ColumnDefinitions.TextNarrow,\r\n        },\r\n        {\r\n          headerName: 'Total',\r\n          field: 'TotalResults',\r\n          width: 72,\r\n          headerClass: 'dense',\r\n          cellClass: 'secondary-action no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agNumberColumnFilter',\r\n          cellRenderer: AnalyzeSettingsTotalResultsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: AnalyzeSettingsTotalResultsParams = {\r\n              openDetails: (stackItem) => {\r\n                this.router.navigate([`details/${this.selectedView$.value}/${stackItem.Path}`], { relativeTo: this.route });\r\n              },\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}