{"version":3,"mappings":"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","names":["params","data","Block","Id","Guid","Module","UsageId","Title","value","split","PageId","window","open","Url","status","IsVisible","IsDeleted","i0","ctx_r1","ViewsUsageIdComponent","constructor","snackBar","agInit","this","tooltip","idPart","id","refresh","copy","copyToClipboard","duration","selectors","ViewsUsageStatusFilterComponent","filterParams","isFilterActive","isVisible","isDeleted","doesFilterPass","visiblePassed","deletedPassed","valueGetter","api","colDef","column","columnApi","context","node","getValue","field","toString","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","ctx","ViewsUsageComponent","dialogRef","route","viewsService","BehaviorSubject","undefined","buildGridOptions","ngOnInit","viewGuid","snapshot","paramMap","get","getUsage","subscribe","viewUsages","viewUsage","viewUsage$","next","viewTooltip$","block","Blocks","Modules","length","push","module","Page","Name","Language","CultureCode","Status","Visible","buildData","data$","ngOnDestroy","complete","closeDialog","close","Object","defaultGridOptions","columnDefs","width","headerClass","cellClass","sortable","filter","blockIdValueGetter","cellRenderer","moduleIdValueGetter","moduleIdClassGetter","pageIdValueGetter","pageIdClassGetter","flex","minWidth","sort","nameClassGetter","onCellClicked","onNameClicked","statusCellRenderer"],"sources":["./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-grid.helpers.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-id/views-usage-id.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-id/views-usage-id.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-status-filter/views-usage-status-filter.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-status-filter/views-usage-status-filter.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage.helpers.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage.component.html"],"sourcesContent":["import { CellClassParams, CellClickedEvent, ICellRendererParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { ViewUsageData, ViewUsageDataStatus } from '../../models/view-usage-data.model';\r\n\r\nexport function blockIdValueGetter(params: ValueGetterParams) {\r\n  const data: ViewUsageData = params.data;\r\n  return `ID: ${data.Block.Id}\\nGUID: ${data.Block.Guid}`;\r\n}\r\n\r\nexport function moduleIdValueGetter(params: ValueGetterParams) {\r\n  const data: ViewUsageData = params.data;\r\n  if (data.Module == null) { return; }\r\n  return `ID: ${data.Module.Id}\\nUsageId: ${data.Module.UsageId}\\nTitle: ${data.Module.Title}`;\r\n}\r\n\r\nexport function moduleIdClassGetter(params: CellClassParams): string[] {\r\n  return `${params.value != null ? 'id-action no-padding' : ''} no-outline`.split(' ');\r\n}\r\n\r\nexport function pageIdValueGetter(params: ValueGetterParams) {\r\n  const data: ViewUsageData = params.data;\r\n  if (data.PageId == null) { return; }\r\n  return `ID: ${data.PageId}`;\r\n}\r\n\r\nexport function pageIdClassGetter(params: CellClassParams): string[] {\r\n  return `${params.value != null ? 'id-action no-padding' : ''} no-outline`.split(' ');\r\n}\r\n\r\nexport function nameClassGetter(params: CellClassParams): string[] {\r\n  return `${params.value != null ? 'primary-action highlight' : 'no-outline'}`.split(' ');\r\n}\r\n\r\nexport function onNameClicked(params: CellClickedEvent) {\r\n  if (params.value == null) { return; }\r\n  const data: ViewUsageData = params.data;\r\n  window.open(data.Url, '_blank');\r\n}\r\n\r\nexport function statusCellRenderer(params: ICellRendererParams) {\r\n  const status: ViewUsageDataStatus = params.value;\r\n  if (status == null) { return; }\r\n  return `\r\n    <div style=\"height: 100%;display: flex;align-items: center;\">\r\n      ${status.IsVisible ? '<span class=\"material-icons-outlined\">visibility</span>' : '<span class=\"material-icons-outlined\">visibility_off</span>'}\r\n      ${status.IsDeleted ? '<span style=\"margin-left: 8px;\" class=\"material-icons-outlined\">delete</span>' : ''}\r\n    </div>\r\n  `;\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" *ngIf=\"id\" (click)=\"copy()\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../../../shared/helpers/copy-to-clipboard.helper';\r\n\r\n@Component({\r\n  selector: 'app-views-usage-id',\r\n  templateUrl: './views-usage-id.component.html',\r\n  styleUrls: ['./views-usage-id.component.scss'],\r\n})\r\nexport class ViewsUsageIdComponent implements ICellRendererAngularComp {\r\n  tooltip: string;\r\n  id: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.tooltip = params.value;\r\n    if (this.tooltip == null) { return; }\r\n    const idPart = this.tooltip.split('\\n')[0];\r\n    this.id = idPart.split(' ')[1];\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy() {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { ViewUsageDataStatus } from '../../../models/view-usage-data.model';\r\nimport { ViewsUsageStatusFilterModel } from './views-usage-status-filter.model';\r\n\r\n@Component({\r\n  selector: 'app-views-usage-status-filter',\r\n  templateUrl: './views-usage-status-filter.component.html',\r\n  styleUrls: ['./views-usage-status-filter.component.scss'],\r\n})\r\nexport class ViewsUsageStatusFilterComponent implements IFilterAngularComp {\r\n  isVisible = '';\r\n  isDeleted = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.isVisible !== '' || this.isDeleted !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    let visiblePassed = false;\r\n    let deletedPassed = false;\r\n\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: ViewUsageDataStatus = this.filterParams.valueGetter(valueGetterParams);\r\n    if (value == null) { return false; }\r\n    if (this.isVisible !== '') {\r\n      visiblePassed = (value.IsVisible == null) ? false : value.IsVisible.toString() === this.isVisible;\r\n    } else {\r\n      visiblePassed = true;\r\n    }\r\n    if (this.isDeleted !== '') {\r\n      deletedPassed = (value.IsDeleted == null) ? false : value.IsDeleted.toString() === this.isDeleted;\r\n    } else {\r\n      deletedPassed = true;\r\n    }\r\n    return visiblePassed && deletedPassed;\r\n  }\r\n\r\n  getModel(): ViewsUsageStatusFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n    return {\r\n      filterType: 'views-usage-status',\r\n      isVisible: this.isVisible,\r\n      isDeleted: this.isDeleted,\r\n    };\r\n  }\r\n\r\n  setModel(model: ViewsUsageStatusFilterModel) {\r\n    this.isVisible = model ? model.isVisible : '';\r\n    this.isDeleted = model ? model.isDeleted : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<div class=\"title\">Visible</div>\r\n<mat-radio-group [(ngModel)]=\"isVisible\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">Visible</mat-radio-button>\r\n  <mat-radio-button value=\"false\">Hidden</mat-radio-button>\r\n</mat-radio-group>\r\n\r\n<div class=\"title\">Deleted</div>\r\n<mat-radio-group [(ngModel)]=\"isDeleted\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">Is deleted</mat-radio-button>\r\n  <mat-radio-button value=\"false\">Is not deleted</mat-radio-button>\r\n</mat-radio-group>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { ViewUsageData } from '../../models/view-usage-data.model';\r\nimport { ViewUsage } from '../../models/view-usage.model';\r\nimport { ViewsService } from '../../services/views.service';\r\n// tslint:disable-next-line:max-line-length\r\nimport { blockIdValueGetter, moduleIdClassGetter, moduleIdValueGetter, nameClassGetter, onNameClicked, pageIdClassGetter, pageIdValueGetter, statusCellRenderer } from './views-usage-grid.helpers';\r\nimport { ViewsUsageIdComponent } from './views-usage-id/views-usage-id.component';\r\nimport { ViewsUsageStatusFilterComponent } from './views-usage-status-filter/views-usage-status-filter.component';\r\nimport { buildData } from './views-usage.helpers';\r\n\r\n@Component({\r\n  selector: 'app-views-usage',\r\n  templateUrl: './views-usage.component.html',\r\n  styleUrls: ['./views-usage.component.scss'],\r\n})\r\nexport class ViewsUsageComponent implements OnInit, OnDestroy {\r\n  viewUsage$ = new BehaviorSubject<ViewUsage>(undefined);\r\n  viewTooltip$ = new BehaviorSubject(undefined);\r\n  data$ = new BehaviorSubject<ViewUsageData[]>(undefined);\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  constructor(private dialogRef: MatDialogRef<ViewsUsageComponent>, private route: ActivatedRoute, private viewsService: ViewsService) { }\r\n\r\n  ngOnInit() {\r\n    const viewGuid = this.route.snapshot.paramMap.get('guid');\r\n    this.viewsService.getUsage(viewGuid).subscribe(viewUsages => {\r\n      const viewUsage = viewUsages[0];\r\n      this.viewUsage$.next(viewUsage);\r\n      const viewTooltip = `ID: ${viewUsage.Id}\\nGUID: ${viewUsage.Guid}`;\r\n      this.viewTooltip$.next(viewTooltip);\r\n      const data = buildData(viewUsage);\r\n      this.data$.next(data);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.viewUsage$.complete();\r\n    this.viewTooltip$.complete();\r\n    this.data$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          field: 'Block',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'id-action no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: blockIdValueGetter,\r\n          cellRenderer: ViewsUsageIdComponent,\r\n        },\r\n        {\r\n          field: 'Module',\r\n          width: 76,\r\n          headerClass: 'dense',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: moduleIdValueGetter,\r\n          cellClass: moduleIdClassGetter,\r\n          cellRenderer: ViewsUsageIdComponent,\r\n        },\r\n        {\r\n          field: 'Page',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: pageIdValueGetter,\r\n          cellClass: pageIdClassGetter,\r\n          cellRenderer: ViewsUsageIdComponent,\r\n        },\r\n        {\r\n          field: 'Name',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          sortable: true,\r\n          sort: 'asc',\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const data: ViewUsageData = params.data;\r\n            return data.Name;\r\n          },\r\n          cellClass: nameClassGetter,\r\n          onCellClicked: onNameClicked,\r\n        },\r\n        {\r\n          field: 'Language',\r\n          width: 90,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const data: ViewUsageData = params.data;\r\n            return data.Language;\r\n          },\r\n        },\r\n        {\r\n          field: 'Status',\r\n          width: 80,\r\n          cellClass: 'icon no-outline'.split(' '),\r\n          filter: ViewsUsageStatusFilterComponent,\r\n          cellRenderer: statusCellRenderer,\r\n          valueGetter: (params) => {\r\n            const data: ViewUsageData = params.data;\r\n            return data.Status;\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","import { ViewUsageData } from '../../models/view-usage-data.model';\r\nimport { ViewUsage } from '../../models/view-usage.model';\r\n\r\nexport function buildData(viewUsage: ViewUsage) {\r\n  const data: ViewUsageData[] = [];\r\n  for (const block of viewUsage.Blocks) {\r\n    if (block.Modules.length === 0) {\r\n      data.push({\r\n        Block: { Id: block.Id, Guid: block.Guid },\r\n      });\r\n    }\r\n    for (const module of block.Modules) {\r\n      data.push({\r\n        Block: { Id: block.Id, Guid: block.Guid },\r\n        Module: module,\r\n        PageId: module.Page.Id,\r\n        Name: module.Page.Name,\r\n        Url: module.Page.Url,\r\n        Language: module.Page.CultureCode,\r\n        Status: { IsVisible: module.Page.Visible, IsDeleted: module.IsDeleted },\r\n      });\r\n    }\r\n  }\r\n  return data;\r\n}\r\n","<div class=\"nav-component-wrapper\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div [tippy]=\"viewTooltip$ | async\">View: {{ (viewUsage$ | async)?.Name }}</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <p class=\"dialog-description\">\r\n    This shows where this view is being used. Read about the\r\n    <a href=\"http://r.2sxc.org/content-in-dnn\" target=\"_blank\">connections between DNN and 2sxc Views</a>\r\n    to make good decisions if you're doing clean-up or just want to better know what this is all about.\r\n    <em>Before you get confused about some things you see here, do read the FAQ on that page.</em>\r\n  </p>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <div class=\"grid-wrapper\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"data$ | async\" [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n\r\n    <div class=\"grid-more-actions-box\"></div>\r\n  </div>\r\n</div>"],"sourceRoot":"webpack:///","file":"projects_eav-ui_src_app_app-administration_sub-dialogs_views-usage_views-usage_component_ts.bf6d4b5eb192349c.js"}