{"version":3,"file":"projects_eav-ui_src_app_metadata_metadata_component_ts-projects_eav-ui_src_app_shared_service-802177.887c060cae1c2aae.js","mappings":"8SAWA,MAAMA,EAAW,CACfC,QAAQ,EACRC,WAAW,GAIN,IAAMC,EAAoB,MAA3B,MAAOA,UAA4BC,IADzCC,kCAGEC,KAAAC,OAAMC,MAAS,CAAEL,uBAAuBH,GAExCC,OAAOQ,GACL,OAAAH,KAAKC,IAAIG,KAAK,SAAU,CAAED,0BACnBH,KAAKK,cAA6BC,KAAkB,CACzDC,OAAQ,CAAEC,MAAOR,KAAKQ,MAAOC,YAAaN,IAE9C,CAEAP,UAAUO,EAA+BO,GACvC,OAAAV,KAAKC,IAAIG,KAAK,YAAa,CAAED,wBAAuBO,YAC7CV,KAAKW,UAAyBL,KAAkB,CACrDC,OAAQ,CAAEC,MAAOR,KAAKQ,MAAOC,YAAaN,IACzCO,EACL,CAEAE,WAAWT,GACT,OAAOH,KAAKK,cAAuBQ,IAAiB,CAClDN,OAAQ,CAAEC,MAAOR,KAAKQ,MAAOM,WAAYX,IAE7C,CAEAY,WAAWC,GACT,SAAOC,QAAKC,KAASF,IAAOG,QAC1BC,KAAUC,GACDrB,KAAKsB,KAAKC,KAAcvB,KAAKwB,OAAOC,KAAmB,UAAW,CACvEC,MAAO1B,KAAKQ,MACZmB,cAAeN,MAElB,EACDO,KAAIC,KAEAC,QAASD,EACTE,SAAU,MAKlB,yEAxCWlC,KAAmBmC,GAAnBnC,EAAmB,0CAAnBA,EAAmBoC,QAAnBpC,EAAmBqC,WAAA,SAAnBrC,CAAoB,uICbzBsC,MAAA,4BADFA,MAAA,cACEA,MAAA,EAAAC,EAAA,sBACFD,uCADiBA,cAAA,mBAAAE,yBAKfF,MAAA,4BADFA,MAAA,eACEA,MAAA,EAAAG,EAAA,sBACFH,uCADiBA,cAAA,mBAAAE,yBAOrBF,MAAA,GCFK,IAAMI,EAAkB,MAAzB,MAAOA,EAIXxC,cAHAC,KAAAwC,WAAUC,QAAe,GACzBzC,KAAA0C,SAAU,CAEM,CAEhBC,gBACE3C,KAAK0C,SAAW1C,KAAK0C,OACvB,iDARWH,EAAkB,oCAAlBA,EAAkBK,UAAA,qBAAAC,OAAA,CAAAL,QAAA,eAAAM,mBAAAC,EAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,2EAAAC,SAAA,SAAAC,EAAAC,GAAA,KAAAD,EAAA,yBDd/BjB,MAAA,WAAsBA,MAAA,mBAAAA,aAAAmB,GAAAnB,MAASkB,EAAAV,gBAAe,GAO1CR,MALA,EAAAoB,EAAA,eAKApB,CALe,EAAAqB,EAAA,iBAWnBrB,QAEAA,MAAA,EAAAsB,EAAA,yBAAAtB,qBAfgDA,MAAA,UAAAA,MAAA,EAAAuB,EAAAL,EAAAX,UAC9CP,eAAA,KAAAwB,EAAAN,EAAAb,WAAK,GAAL,IAAKmB,EAAD,sBCQEC,KAAkBC,UAClBC,KACAC,MAAgBC,OAAA,gdAGXzB,CAAkB,8DCNxB,IAAe0B,EAAW,MAA3B,MAAgBA,EADtBlE,cAGYC,KAAAkE,cAAgB,IAAIC,KAE9BC,cACEpE,KAAKqE,SACP,CAGAA,UACErE,KAAKkE,cAAcI,aACrB,iDAXoBL,EAAW,sCAAXA,EAAWhC,QAAXgC,EAAW/B,WAAA,SAAX+B,CAAW,sCCR1B,MAAMM,EAAsB,mWCI7BpC,MAAA,mEAAmBA,MAAA,YAAAA,MAAA,IAAAqC,EAAAC,WAAAC,SAAAvC,QCalB,IAAMwC,EAA4B,MAAnC,MAAOA,EAGX5E,YACkC0E,EACxBG,GADwB5E,KAAAyE,aACxBzE,KAAA4E,SAJgB5E,KAAA6E,UAAY,kBAKlC,CAEJC,YAAYC,GACV/E,KAAK4E,OAAOI,MAAMD,EACpB,iDAVWJ,GAA4BxC,MAI7B8C,MAAe9C,MAAA0B,MAAA,oCAJdc,EAA4B/B,UAAA,gCAAAsC,SAAA,EAAAC,aAAA,SAAA/B,EAAAC,GAAA,EAAAD,GAA5BjB,MAAA,YAAAkB,EAAAwB,gKDfT1C,MAFJ,aAEIA,CAFM,oBAENA,CADe,oBACCA,MAAA,GAAgEA,QAChFA,MAAA,EAAAiD,EAAA,2BAGFjD,QAEEA,MADF,uBACEA,CAD4B,cAC6BA,MAAA,0BAASkB,EAAAyB,aAAa,GAAE3C,MAAA,YAAMA,QACvFA,MAAA,cAAyDA,MAAA,0BAASkB,EAAAyB,aAAY,EAAK,GAAE3C,MAAA,YAEzFA,mBAToBA,MAAA,GAAAA,MAAA,UAAAkB,EAAAoB,WAAAY,YAAA,KAAAhC,EAAAoB,WAAAa,SAAA,MAChBnD,cAAAkB,EAAAoB,WAAAC,QAAA,sBCSIa,KAAaC,yBACbC,KAAeC,KACfC,KAAY3B,OAAA,0EAGPW,CAA4B,6BCClC,IAAMiB,EAAwB,MAA/B,MAAOA,EAGXC,OAAOtF,GACLP,KAAKO,OAASA,CAChB,CAEAuF,QAAQvF,GACN,OAAO,CACT,CAEAwF,iBAEE/F,KAAKO,OAAOyF,SADmBhG,KAAKO,OAAO0F,KAE7C,iDAdWL,EAAwB,oCAAxBA,EAAwBhD,UAAA,2BAAAI,MAAA,EAAAC,KAAA,EAAAC,OAAA,6GAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICjBnCjB,MADF,UACEA,CAD6B,WAC0CA,MAAA,0BAASkB,EAAA0C,gBAAgB,GAC9F5D,MAAA,cAAUA,MAAA,YAEdA,4BDSQ+D,KAAerC,KACfsC,KAAaX,KACbY,KAAcC,cAAA,YAGTT,CAAwB,KENxBU,EAA4B,MAAnC,MAAOA,EAIXT,OAAOtF,GACLP,KAAKuG,MAAQhG,EAAOgG,MACpBvG,KAAKwG,SAAWjG,EAAO0F,IACzB,CAEAH,QAAQvF,GACN,OAAO,CACT,iDAXW+F,EAA4B,oCAA5BA,EAA4B1D,UAAA,gCAAAI,MAAA,EAAAC,KAAA,EAAAC,OAAA,4BAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICZzCjB,MAAA,WACEA,MAAA,GACFA,eAFuBA,MAAA,QAAAkB,EAAAmD,SAAAC,MAAAC,aACrBvE,cAAA,IAAAkB,EAAAkD,MAAA,sBDSYH,KAAcpC,OAAA,+DAEfsC,CAA4B,mLEI/BnE,MAAA,mBACEA,MAAA,GACFA,kCAFYA,MAAA,QAAAwE,EAAAJ,OACVpE,cAAA,IAAAwE,EAAAC,KAAA,gCAJJzE,MADF,qBACEA,CADwD,eAC7CA,MAAA,WAAKA,QAChBA,MAAA,mBACEA,MAAA,EAAA0E,GAAA,oBAAA1E,OAKAA,MAAA,mBAA0CA,MAAA,cAE9CA,YACAA,MAAA,oBACEA,MAAA,kDACAA,MAAA,WAAkFA,MAAA,eACpFA,gCAZsCA,MAAA,GAAAA,MAAA,cAAA2E,EAAAC,eAAAC,OAAA,qBAClC7E,cAAA2E,EAAAC,gBAKY5E,MAAA,GAAAA,MAAA,QAAA2E,EAAAvC,gDAeZpC,MAAA,mBACEA,MAAA,GACFA,kCAFYA,MAAA,QAAA8E,EAAAC,QACV/E,cAAA,IAAA8E,EAAAE,MAAA,gCAJJhF,MAAA,kBAEEA,MAAA,EAAAiF,GAAA,oBAAAjF,OAKFA,oCANEA,MAAA,qBAAAkF,EAAAP,EAAAQ,cAAAR,KAAAO,EAAAL,OAAA,qBACA7E,cAAA2E,EAAAQ,cAAAR,2BAQF3E,MAAA,oCAcFA,MAAA,sBACEA,MAAA,8BACFA,cAFgBA,MAAA,cCff,IAAMoF,GAA2B,MAAlC,MAAOA,EAQXC,GAEAzH,YACU6E,GAAA5E,KAAA4E,SAVgB5E,KAAA6E,UAAY,mBAGtC7E,KAAAuE,oBAAsBA,IACtBvE,KAAAyH,mBAAoB,EACpBzH,KAAA0H,cAAe,EAEf1H,MAAAwH,KAAuBG,KAAUC,MAMjC5H,KAAA6H,SAAQC,OAAOC,KAAaC,OAAOC,QAAQ1B,OAC3CvG,KAAA+G,aAAe/G,MAAKwH,EAAqBU,kBAAaC,GAEtDnI,KAAAsH,gBAAec,OAAS,KACtB,MAAMP,EAAQ7H,KAAK6H,QACnB,OAAO7H,MAAKwH,EAAqBa,YAAYR,OAAOM,EAAS,EAP3D,CAWJG,WACEtI,KAAKuI,WACP,CAEAzD,YAAYrE,GACVT,KAAK4E,OAAOI,MAAMvE,EACpB,CAEA+H,wBAAwBf,GACtBzH,KAAKyH,kBAAoBA,CAC3B,CAEAgB,mBAAmBC,GACjB1I,KAAK0H,aAAegB,EAAMC,OAC5B,CAEA5D,UACE,MAAM6D,EAAqC5I,KAAK6I,KAAKC,cACrD9I,KAAK8E,YAAY8D,EAAWnI,YAC9B,CAEQ8H,YACNvI,KAAK6I,KAAO,IAAIE,KAAiB,IACjC/I,KAAK6I,KAAKG,WAAW,cAAe,IAAIC,KAAmB,KAAM,CAACC,KAAWC,YAC7EnJ,KAAK6I,KAAKG,WAAW,QAAS,IAAIC,KAAmBlB,KAAaC,OAAOC,QAAQ1B,QAEjFvG,KAAK6I,KAAKO,SAASvB,MAAMwB,aAAalI,QACpCmI,KAAUtJ,KAAK6I,KAAKO,SAASvB,MAAMtB,QAAK,EACxCgD,QACAC,UAAWC,IAEiC,MAAxCzJ,KAAK6I,KAAKO,SAAS3I,YAAY8F,OACjCvG,KAAK6I,KAAKO,SAAS3I,YAAYiJ,WAAW,MAIxCD,IAAalF,KACfkF,EAAWE,OAAO,mMAAwM5B,KAAaC,OAAOC,QAAQ1B,MACjPvG,KAAK+G,eAAe6C,KAAKC,GAAUA,EAAOtD,QAAUkD,IAKvDzJ,KAAK+G,aAAa+C,IAAI,CAJc,CAClClD,KAAM6C,EACNlD,MAAOkD,MAEiCzJ,KAAK+G,iBAEjD/G,KAAK6I,KAAKO,SAASvB,MAAM6B,WAAWD,IAEpCzJ,KAAK6H,MAAMiC,IAAIL,EAAQ,EAG7B,iDAzEWlC,GAA2BpF,MAAA0B,MAAA,oCAA3B0D,EAA2B3E,UAAA,+BAAAsC,SAAA,EAAAC,aAAA,SAAA/B,EAAAC,GAAA,EAAAD,GAA3BjB,MAAA,YAAAkB,EAAAwB,03BDvCT1C,MAFJ,aAEIA,CAFM,oBAENA,CADe,oBACCA,MAAA,qBAAeA,QAC/BA,MAAA,uBACEA,MAAA,0FACIA,MAAA,SAAuDA,MAAA,UAAIA,QAAIA,MAAA,QAEvEA,UAEEA,MADF,qBACEA,CADgB,aAGdA,MAAA,GAAA4H,GAAA,MAmBE5H,MADF,sBACEA,CADwD,gBAC7CA,MAAA,mBAAYA,QAWvBA,MAVA,GAAA6H,GAAA,mBAUA7H,CAVyB,GAAA8H,GAAA,eAcvB9H,MADF,WACEA,CADiB,eAEfA,MAAA,0BAASkB,EAAAmF,yBAAwB,EAAK,GACtCrG,MAAA,eAAUA,MAAA,aACZA,UACAA,MAAA,eACEA,MAAA,0BAASkB,EAAAmF,yBAAwB,EAAM,GACvCrG,MAAA,eAAUA,MAAA,kBAGhBA,cACAA,MAAA,GAAA+H,GAAA,wBAMJ/H,UAEEA,MADF,wBACEA,CADyC,0BACiBA,MAAA,kBAAAgI,GAAA,OAAU9G,EAAAoF,mBAAA0B,EAA0B,GAC5FhI,MAAA,IACFA,QAEEA,MADF,SACEA,CADG,gBACsDA,MAAA,0BAASkB,EAAAyB,aAAa,GAAE3C,MAAA,aAAMA,QACvFA,MAAA,gBACEA,MAAA,0BAASkB,EAAA0B,SAAS,GAClB5C,MAAA,gBAIRA,qBAjEUA,MAAA,IAAAA,MAAA,YAAAkB,EAAAwF,MAEJ1G,cAAAkB,EAAAqE,cAAArE,EAAAoE,kBAAA,OAoBEtF,MAAA,GAAAA,MAAAkB,EAAAoE,kBAAA,OAUAtF,cAAAkB,EAAAoE,mBAAA,MAIwCtF,MAAA,GAAAA,MAAA,UAAAA,MAAA,GAAAY,EAAAM,EAAAoE,oBAIAtF,MAAA,GAAAA,MAAA,UAAAA,MAAA,GAAAY,GAAAM,EAAAoE,oBAM1CtF,MAAA,GAAAA,MAAAkB,EAAAwF,KAAAO,SAAA3I,YAAA2J,SAAA,MAAA/G,EAAAwF,KAAAO,SAAA3I,YAAA4J,QAAAhH,EAAAwF,KAAAO,SAAA3I,YAAA4J,OAAAlB,SAAA,OAQ+BhH,MAAA,GAAAA,MAAA,UAAAkB,EAAAqE,cAC/BvF,cAAA,IAAAkB,EAAAqE,aAAA,yBAIwEvF,MAAA,GAAAA,MAAA,YAAAkB,EAAAwF,KAAAyB,uBC1CtE/E,KAAaC,8BACb+E,KAAW7E,yBACX8E,KAAmB9E,UACnB9B,KAAkB6G,eAClBC,KAAeC,KAAAC,KACfC,KACAC,KAAcC,KACdtF,KAAeuF,UACflH,KACAqC,KAAa8E,KACbC,KAAoBC,KACpB5I,KACA6I,MAA6BpH,OAAA,0JAGxBuD,CAA2B,oFC7BlCpF,MAAA,8EAOAA,MAAA,QAAIA,MAAA,0BAAAA,cAAA,eAAAqC,EAAA6G,UAAAC,UAAA,gCAGJnJ,MAAA,QAAIA,MAAA,0BAAAA,cAAA,aAAAqC,EAAA6G,UAAAE,QAAA,gCAGJpJ,MAAA,QAAIA,MAAA,0BAAAA,cAAA,eAAAqC,EAAA6G,UAAAG,UAAA,gCAGJrJ,MAAA,QAAIA,MAAA,0BAAAA,cAAA,UAAAqC,EAAA6G,UAAAI,MAAA,gCAbJtJ,MAAA,kCACAA,MAAA,QAAIA,MAAA,GACJA,MAAA,QAAIA,MAAA,GAUJA,MATA,EAAAuJ,GAAA,IASAvJ,CAT2B,EAAAwJ,GAAA,IAS3BxJ,CANyB,EAAAyJ,GAAA,IAMzBzJ,CAH2B,EAAA0J,GAAA,2BARvB1J,MAAA,GAAAA,MAAA,WAAAqC,EAAA6G,UAAAS,OAAA,KACA3J,MAAA,GAAAA,MAAA,eAAAqC,EAAA6G,UAAAU,WAAA,KACJ5J,cAAAqC,EAAA6G,UAAAC,UAAA,MAGAnJ,cAAAqC,EAAA6G,UAAAE,QAAA,MAGApJ,cAAAqC,EAAA6G,UAAAG,UAAA,MAGArJ,cAAAqC,EAAA6G,UAAAI,MAAA,gDAaFtJ,MAAA,eACEA,MAAA,mBAAAA,MAAA6J,GAAA,MAAAxH,EAAArC,QAAA,OAAAA,MAASqC,EAAAyH,iBAAgB,GACzB9J,MAAA,cAAUA,MAAA,SACZA,qCAmBMA,MAAA,gEACEA,MADsC,YAAAA,MAAA,IAAA+J,EAAAC,MAAAhK,MACtCA,CADkF,iBAAA+J,EAAAE,iCAIpFjK,MAAA,cAAUA,MAAA,SAAGA,kDAPfA,MAAA,eACEA,MAAA,yBAAA+J,EAAA/J,MAAAkK,GAAAC,UAAA9H,EAAArC,MAAA,UAAAA,MAASqC,EAAAyH,eAAAC,GAA8B,GAKrC/J,MAJF,EAAAoK,GAAA,aAIEpK,CAJyB,EAAAqK,GAAA,gBAO7BrK,2DAPEA,cAAA+J,EAAAC,KAAA,+CAfNhK,MAAA,2BACEA,MAAA,sBAAAgI,GAAAhI,MAAAsK,GAAA,MAAAjI,EAAArC,QAAA,OAAAA,MAAcqC,EAAAkI,WAAAvC,GAAkB,GAG5BhI,MAFJ,kCAEIA,CAFsC,cAEtCA,CADc,iBACYA,MAAA,GAE9BA,YAEEA,MADF,kCACEA,CADiE,eAE/DA,MAAA,mBAAAA,MAAAsK,GAAA,MAAAjI,EAAArC,QAAA,OAAAA,MAASqC,EAAAyH,iBAAgB,GACzB9J,MAAA,cAAUA,MAAA,YACZA,UACAA,MAAA,EAAAwK,GAAA,gBAAAxK,OAaJA,kCAzBmDA,MAAA,UAAAA,MAAA,EAAAY,GAAAyB,EAAAoI,YAErBzK,cAAA,WAEEA,MAAA,GAAAA,MAAAqC,EAAAoI,UAAA,eAQ5BzK,MAAA,GAAAA,MAAAqC,EAAAqI,oBCND,IAAMC,GAAiB,MAAxB,MAAOA,EAIXC,GACAC,GACAC,GACAC,GAEAnN,YACU6E,EACAuI,EACAC,EACAC,EACAC,GAJAtN,KAAA4E,SACA5E,KAAAmN,WACAnN,KAAAoN,YACApN,KAAAqN,mBACArN,KAAAsN,oBAZVtN,KAAAC,OAAMC,MAAS,CAAE4M,sBAEjB9M,MAAA+M,KAAepF,KAAU4F,KACzBvN,MAAAgN,KAAerF,KAAU6F,MACzBxN,MAAAiN,KAAkBtF,KAAU9H,KAC5BG,MAAAkN,KAAgBvF,KAAU8F,KAU1BzN,KAAA0N,YAAc1N,MAAK2N,IAEnB3N,KAAA4M,WAAU9E,QAAO,GAEjB9H,MAAA4N,KAAUC,KAAQ7N,MAAKkN,EAAcY,UAAU,CAAC,aAAc,UAAW,MAAO,QAAS,0BAA2BC,KAClHC,WAAYC,SAASF,EAAEC,WAAY,IACnCE,QAASH,EAAEG,QACXC,IAAKJ,EAAEI,IACPhO,sBAAuB4N,EAAE5N,yBAa3BH,MAAAoO,EAAiBpO,MAAKiN,EAAgBrN,UAAUI,MAAK4N,EAAQzN,sBAAuC,MAEpGH,KAAAqL,WAAUjD,OAAsC,KAC9C,MAAMiG,EAAOrO,MAAKoO,KAAkBE,KAAKC,GAAKA,EAAEC,OAASxO,MAAK4N,EAAQO,KACtE,OAAQE,GAAMI,IACVJ,EAAKI,SACLtG,IAGNnI,KAAA0O,eAAc5G,OAAoB,CAAE6G,MAAO,GAAIC,gBAAiB,KAEhE5O,KAAA6M,mBAAkBzE,OAAS,KACzB,MAAM5B,EAAWxG,KAAK0O,cACtB,OAAOlI,EAASoI,gBAAgBC,OAAOC,GACrCtI,EAASmI,MAAME,OAAON,IAAKA,GAAE9H,MAAMsI,KAAOD,EAAEC,IAAI/H,OAAS8H,EAAEE,MAAK,GAI1DhP,KAAAiP,YACR,IACE,OAAOC,mBAAmBlP,MAAKkN,EAAciC,SAAS,UAAY,GACpE,OACEC,eAAQC,MAAM,kCACPrP,MAAKkN,EAAciC,SAAS,UAAY,EACjD,CACF,EAPUF,EAzCN,CAMJrB,GAiBAQ,GA2BA9F,WACEtI,MAAKsP,IACLtP,MAAKkN,EAAcqC,iBAAiB,IAAMvP,MAAKsP,IACjD,CAEAxK,cACE9E,KAAK4E,OAAOI,OACd,CAEA0H,WAAW8C,GACTxP,KAAK4M,QAAQ9C,IAAI0F,EACnB,CAEAvD,eAAewD,GACb,GAAIA,EAEF,OAAKA,EAAerD,aAKhBqD,EAAeC,aACjB1P,KAAKmN,SAASqC,KAAK,YAAYC,EAAeE,WAC9C3P,MAAK+M,EAAa6C,OAAOH,EAAeV,GAAI,CAAEN,IAAKzO,KAAK6P,iBAAiB,SAASpB,MAAOjF,UAAU,CACjG6F,MAAOA,KACLrP,KAAKmN,SAASqC,KAAK,YAAYC,EAAeE,uDAAmDxH,EAAW,CAAE2H,SAAU,MACxH9P,MAAKsP,GAAc,EAErBS,KAAMA,KACJ/P,KAAKmN,SAASqC,KAAK,WAAWC,EAAeE,YAAQxH,EAAW,CAAE2H,SAAU,MAC5E9P,MAAKsP,GAAc,KAKvBtP,KAAKgQ,mBAAmBP,EAAeV,UAlBvCkB,OAAkBjQ,KAAKoN,UAAWqC,EAAeS,eAAgBlQ,KAAKqN,iBAAkBrN,KAAKsN,mBAsBvEtN,KAAKoN,UAAUoC,KAAKjI,GAA6B,CACzE4I,WAAW,EACX9C,iBAAkBrN,KAAKqN,iBACvB+C,MAAO,UAESC,cAAc7G,UAAW/I,IACtB,MAAfA,GACJT,KAAKgQ,mBAAmBvP,EAAW,EAEvC,CAEQuP,mBAAmBvP,GACzB,MAAMoI,EAAiB,CACrByH,MAAO,CAACtQ,KAAK6P,iBAAiBpP,KAE1B8P,KAAUC,KAAiB3H,GACjC7I,MAAKkN,EAAcuD,YAAY,CAAC,QAAQF,MACxCvQ,KAAKsN,kBAAkBoD,cACzB,CAEQb,iBAAiBpP,GACvB,MAAMkQ,EAAIC,IAASC,sBAAsB7Q,MAAK4N,EAAQI,WAAYhO,MAAK4N,EAAQM,QAASlO,MAAK4N,EAAQO,KACrG,OAAOyC,IAASE,oBAAoBrQ,EAAakQ,EACnD,CAEArB,KACE,MAAMyB,EAAiB/Q,KAAKC,IAAI+Q,MAAM,eACtChR,MAAKgN,EAAaiE,YAAYjR,MAAK4N,EAAQI,WAAYhO,MAAK4N,EAAQM,QAASlO,MAAK4N,EAAQO,KACvFhN,KACC4P,EAAe5P,QAAI,EACnB+P,KAAK,IAAC,EACNtP,KAAI4E,IACFA,EAASoI,gBAAgBuC,QAAQrC,IAC3BA,EAAE3C,MAAMiF,WAAW,aACrBtC,EAAE3C,KAAO2C,EAAE3C,KAAKkF,QAAQ,UAAW,IACnCvC,EAAE3C,KAAOmF,OAAOC,KAAKzC,EAAE3C,MAEvB2C,EAAE3C,KAAO2C,EAAE3C,KAAKkF,QAAQ,iBAAkB,kBAAgB,GAGvD7K,IAETuK,EAAenP,OAMhB4H,UAAUvD,IACTjG,KAAK0O,YAAY5E,IAAI7D,EAAI,EAG/B,CAEAuL,GAAchL,GACZ,MAAMqC,EAAiB,CACrByH,MAAO,CAACM,IAASa,OAAOjL,EAASuI,MAE7BwB,KAAUC,KAAiB3H,GACjC7I,MAAKkN,EAAcuD,YAAY,CAAC,QAAQF,KAC1C,CAEAmB,GAAgBlL,EAAwBmL,GAAY,GAClD,GAAKA,EAmBL3R,KAAKmN,SAASqC,KAAK,eACnBxP,MAAK+M,EAAa6E,OAAOpL,EAASC,MAAMsI,GAAIvI,EAASuI,IAAI,GAAOvF,UAAU,CACxEuG,KAAMA,KACJ/P,KAAKmN,SAASqC,KAAK,UAAW,KAAM,CAAEM,SAAU,MAChD9P,MAAKsP,GAAc,EAErBD,MAAOA,KACLrP,KAAKmN,SAASqC,KAAK,2DAA4D,KAAM,CAAEM,SAAU,KAAM,QA1B3G,CACE,MAAM7J,EAAgC,CACpCX,SAAUkB,EAASuI,GACnB1J,YAAamB,EAASiF,MACtB/G,QAAS1E,KAAK0O,cAAcE,gBAAgBN,KAAKQ,GAAKA,EAAEC,KAAOvI,EAASC,MAAMsI,KAAK8C,eAEvD7R,KAAKoN,UAAUoC,KAAK7K,EAA8B,CAC9EwL,WAAW,EACXlK,OACAoH,iBAAkBrN,KAAKqN,iBACvB+C,MAAO,UAEaC,cAAc7G,UAAWsI,IACzCA,GACF9R,MAAK0R,EAAgBlL,GAAU,EAAI,EAGzC,CAYF,CAEAmH,KA6BE,MA5BiC,IAC5BoE,IACHC,WAAY,CACV,IACKC,IAAkBC,sBACrBC,mBAAoBF,IAAkBG,8BAExC,IACKH,IAAkBI,SACrBC,MAAO,QACPC,cAAgBxE,GAA8B/N,MAAKwR,EAAczD,EAAE9H,OAErE,IACKgM,IAAkBI,SACrBG,WAAY,eACZF,MAAO,cACPG,YAAc1E,GAA8B,GAAGA,EAAE9H,KAAKQ,MAAMkJ,OAAO5B,EAAE9H,KAAKQ,MAAMgF,QAAUsC,EAAE9H,KAAKQ,MAAMkJ,KAAO,KAAK5B,EAAE9H,KAAKQ,MAAMgF,SAAW,KAC3IiH,aAAcpM,GAEhB,IACK2L,IAAkBU,oBACrBD,aAAc9M,EACduM,mBAA4B,CAC1BnM,SAAWQ,GAAaxG,MAAK0R,EAAgBlL,MAMvD,iDApOWsG,GAAiB3K,MAAA0B,MAAA1B,MAAAqD,OAAArD,MAAA0B,MAAA1B,0BAAA,oCAAjB2K,EAAiBlK,UAAA,mBAAAI,MAAA,GAAAC,KAAA,EAAAC,OAAA,gkCAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDlD1BjB,MAFJ,UAEIA,CAF0C,UAE1CA,CAD6B,WAE3BA,MAAA,GACFA,QACAA,MAAA,cAA6CA,MAAA,0BAASkB,EAAAyB,aAAa,GACjE3C,MAAA,cAAUA,MAAA,WAEdA,YAEEA,MADF,UACEA,CADoD,OAKlDA,MAHA,EAAAyQ,GAAA,IAGAzQ,CAHkB,GAAA0Q,GAAA,KAoBpB1Q,QACAA,MAAA,oBACAA,MAAA,YACEA,MAAA,wBAGJA,UACAA,MAAA,2BAOEA,MANA,GAAA2Q,GAAA,eAMA3Q,CANsC,GAAA4Q,GAAA,6BAmC1C5Q,iBAvEMA,MAAA,GAAAA,MAAA,IAAAkB,EAAA4L,OAAA,gBAQA9M,MAAA,GAAAA,MAAAkB,EAAAgI,UAAA,MAuB2ClJ,MAAA,GAAgCA,MAAhC,UAAAkB,EAAAqL,cAAAC,MAAgCxM,CAAD,cAAAkB,EAAAqK,aAK5EvL,MAAA,GAAAA,MAAA,IAAAkB,EAAAwJ,kBAAA7F,OAAA,OAMA7E,cAAAkB,EAAAwJ,kBAAA7F,OAAA,yBCNIvB,KAAeC,eACfS,KAAasE,KACbuI,KACAC,IAAatI,MACbuI,KACAC,KACArP,KACAsP,KACAC,KACAC,IAAc1I,IACdjF,KAAY3B,OAAA,wFAGP8I,CAAiB,8DC9CvB,IAAM1B,EAA6B,MAApC,MAAOA,EAKXrL,cAHAC,KAAAC,OAAMC,MAAS,CAACkL,kCAIdpL,KAAKC,IAAIsT,EAAE,cACb,CAGAC,QAAQ9K,GACN1I,KAAKC,IAAIsT,EAAE,UAAW,CAAE7K,UACxBA,EAAM+K,iBAIR,iDAhBWrI,EAA6B,oCAA7BA,EAA6BxI,UAAA,oCAAAuC,aAAA,SAAA/B,EAAAC,GAAA,EAAAD,GAA7BjB,MAAA,iBAAAgI,GAAA,OAAA9G,EAAAmQ,QAAArJ,EAAe,cAAfiB,CAA6B","names":["logSpecs","getAll","getAllSig","ContentItemsService","HttpServiceBase","constructor","this","log","classLog","contentTypeStaticName","fnIf","getHttpApiUrl","webApiEntityList","params","appId","contentType","initial","getSignal","getColumns","webApiFieldsAll","staticName","importItem","file","from","toBase64","pipe","switchMap","fileBase64","http","post","apiUrl","webApiEntityRoot","AppId","ContentBase64","map","success","Success","Messages","__ngFactoryType__","factory","ɵfac","i0","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","FieldHintComponent","isError","input","isShort","toggleIsShort","selectors","inputs","ngContentSelectors","_c0","decls","vars","consts","template","rf","ctx","_r1","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c1","tmp_2_0","MatFormFieldModule","i1","NgClass","NgTemplateOutlet","styles","ServiceBase","subscriptions","Subscription","ngOnDestroy","destroy","unsubscribe","dropdownInsertValue","ctx_r0","dialogData","message","ConfirmDeleteDialogComponent","dialog","hostClass","closeDialog","confirm","close","MAT_DIALOG_DATA","hostVars","hostBindings","ConfirmDeleteDialogComponent_Conditional_4_Template","entityTitle","entityId","MatCardModule","i2","MatButtonModule","i3","SafeHtmlPipe","MetadataActionsComponent","agInit","refresh","deleteMetadata","onDelete","data","MatRippleModule","MatIconModule","TippyDirective","encapsulation","MetadataContentTypeComponent","value","metadata","_Type","Description","scopeOption_r1","name","MetadataSaveDialogComponent_Conditional_11_For_5_Template","ctx_r1","scopeOptions","length","contentType_r3","NameId","Label","MetadataSaveDialogComponent_Conditional_15_For_2_Template","tmp_1_0","contentTypes","MetadataSaveDialogComponent","#contentTypesService","guidedContentType","advancedMode","transient","ContentTypesService","scope","signal","eavConstants","scopes","default","getScopesSig","undefined","computed","getTypesSig","ngOnInit","buildForm","toggleGuidedContentType","toggleAdvancedMode","event","checked","formValues","form","getRawValue","UntypedFormGroup","addControl","UntypedFormControl","Validators","required","controls","valueChanges","startWith","distinctUntilChanged","subscribe","newScope","patchValue","prompt","some","option","set","MetadataSaveDialogComponent_Conditional_11_Template","MetadataSaveDialogComponent_Conditional_15_Template","MetadataSaveDialogComponent_Conditional_16_Template","MetadataSaveDialogComponent_Conditional_24_Template","$event","touched","errors","valid","FormsModule","ReactiveFormsModule","i4","MatSelectModule","i5","i6","MatOptionModule","MatInputModule","i7","i8","i9","MatSlideToggleModule","i10","ClickStopPropagationDirective","itemFor","KeyNumber","KeyGuid","KeyString","Title","MetadataComponent_Conditional_10_Conditional_5_Template","MetadataComponent_Conditional_10_Conditional_6_Template","MetadataComponent_Conditional_10_Conditional_7_Template","MetadataComponent_Conditional_10_Conditional_8_Template","Target","TargetType","_r2","createMetadata","recommendation_r5","Icon","Enabled","_r4","$implicit","MetadataComponent_Conditional_16_For_10_Conditional_1_Template","MetadataComponent_Conditional_16_For_10_Conditional_2_Template","_r3","openChange","MetadataComponent_Conditional_16_For_10_Template","fabOpen","recommendations","MetadataComponent","#entitiesSvc","#metadataSvc","#contentItemSvc","#dialogRoutes","snackBar","matDialog","viewContainerRef","changeDetectorRef","EntityEditService","MetadataService","DialogRoutingService","gridOptions","#buildGridOptions","#params","convert","getParams","p","targetType","parseInt","keyType","key","#itemsFromHttp","item","find","i","Guid","For","metadataSet","Items","Recommendations","filter","r","Id","Count","title","decodeURIComponent","getParam","console","error","#fetchMetadata","doOnDialogClosed","open","recommendation","CreateEmpty","Name","create","calculateItemFor","duration","next","createMetadataForm","openFeatureDialog","MissingFeature","autoFocus","width","afterClosed","items","formUrl","convertFormToUrl","navRelative","markForCheck","x","EditPrep","constructMetadataInfo","newMetadataFromInfo","logGetMetadata","rxTap","getMetadata","take","forEach","startsWith","replace","window","atob","#editMetadata","editId","#deleteMetadata","confirmed","delete","DeleteWarning","isConfirmed","defaultGridOptions","columnDefs","ColumnDefinitions","IdWithDefaultRenderer","cellRendererParams","idFieldParamsTooltipGetter","TextWide","field","onCellClicked","headerName","valueGetter","cellRenderer","ActionsPinnedRight1","MetadataComponent_Conditional_9_Template","MetadataComponent_Conditional_10_Template","MetadataComponent_Conditional_15_Template","MetadataComponent_Conditional_16_Template","RouterOutlet","SxcGridModule","MatDialogActions","EcoFabSpeedDialComponent","EcoFabSpeedDialTriggerComponent","EcoFabSpeedDialActionsComponent","MatBadgeModule","a","onClick","stopPropagation"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/content-items/services/content-items.service.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/services/service-base.ts","./projects/eav-ui/src/app/shared/constants/dropdown-insert-value.constant.ts","./projects/eav-ui/src/app/metadata/confirm-delete-dialog/confirm-delete-dialog.component.html","./projects/eav-ui/src/app/metadata/confirm-delete-dialog/confirm-delete-dialog.component.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.html","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.ts","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.ts","./projects/eav-ui/src/app/metadata/metadata.component.html","./projects/eav-ui/src/app/metadata/metadata.component.ts","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts"],"sourcesContent":["import { Injectable, Signal } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { webApiFieldsAll } from '../../shared/fields/content-types-fields.service';\r\nimport { Field } from '../../shared/fields/field.model';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { classLog } from '../../shared/logging';\r\nimport { webApiEntityList, webApiEntityRoot } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentItem } from '../models/content-item.model';\r\n\r\nconst logSpecs = {\r\n  getAll: true,\r\n  getAllSig: true,\r\n}\r\n\r\n@Injectable()\r\nexport class ContentItemsService extends HttpServiceBase {\r\n\r\n  log = classLog({ ContentItemsService }, logSpecs);\r\n\r\n  getAll(contentTypeStaticName: string) {\r\n    this.log.fnIf('getAll', { contentTypeStaticName });\r\n    return this.getHttpApiUrl<ContentItem[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  getAllSig(contentTypeStaticName: string, initial: undefined): Signal<ContentItem[]> {\r\n    this.log.fnIf('getAllSig', { contentTypeStaticName, initial });\r\n    return this.getSignal<ContentItem[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType: contentTypeStaticName }\r\n    }, initial);\r\n  }\r\n\r\n  getColumns(contentTypeStaticName: string) {\r\n    return this.getHttpApiUrl<Field[]>(webApiFieldsAll, {\r\n      params: { appId: this.appId, staticName: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  importItem(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiEntityRoot + 'upload'), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError()) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n    selector: 'app-field-hint',\r\n    templateUrl: './field-hint.component.html',\r\n    styleUrls: ['./field-hint.component.scss'],\r\n    imports: [\r\n        MatFormFieldModule,\r\n        NgClass,\r\n        NgTemplateOutlet\r\n    ]\r\n})\r\nexport class FieldHintComponent {\r\n  isError = input<boolean>(false);\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","export const dropdownInsertValue = 'DROPDOWN_INSERT_VALUE' as const;\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>Delete {{ dialogData.entityTitle }} ({{ dialogData.entityId }})?</mat-card-title>\r\n    @if (dialogData.message) {\r\n      <mat-card-subtitle [innerHtml]=\"dialogData.message | safeHtml\"></mat-card-subtitle>\r\n    }\r\n  </mat-card-header>\r\n  <mat-card-actions align=\"end\">\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog(true)\">Delete</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, HostBinding, Inject } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\nimport { ConfirmDeleteDialogData } from './confirm-delete-dialog.models';\r\n\r\n@Component({\r\n    selector: 'app-confirm-delete-dialog',\r\n    templateUrl: './confirm-delete-dialog.component.html',\r\n    styleUrls: ['./confirm-delete-dialog.component.scss'],\r\n    imports: [\r\n        MatCardModule,\r\n        MatButtonModule,\r\n        SafeHtmlPipe,\r\n    ]\r\n})\r\nexport class ConfirmDeleteDialogComponent {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: ConfirmDeleteDialogData,\r\n    private dialog: MatDialogRef<ConfirmDeleteDialogComponent>,\r\n  ) { }\r\n\r\n  closeDialog(confirm?: boolean) {\r\n    this.dialog.close(confirm);\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { MetadataItem } from '../models/metadata.model';\r\nimport { MetadataActionsParams } from './metadata-actions.models';\r\n\r\n@Component({\r\n    selector: 'app-metadata-actions',\r\n    templateUrl: './metadata-actions.component.html',\r\n    imports: [\r\n        MatRippleModule,\r\n        MatIconModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class MetadataActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & MetadataActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & MetadataActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deleteMetadata(): void {\r\n    const metadata: MetadataItem = this.params.data;\r\n    this.params.onDelete(metadata);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deleteMetadata()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MetadataItem } from '../models/metadata.model';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n    selector: 'app-metadata-content-type',\r\n    templateUrl: './metadata-content-type.component.html',\r\n    styleUrls: ['./metadata-content-type.component.scss'],\r\n    imports: [TippyDirective,]\r\n})\r\nexport class MetadataContentTypeComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n  metadata: MetadataItem;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.metadata = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"container\" [tippy]=\"metadata._Type.Description\">\r\n  {{ value }}\r\n</div>\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>Create Metadata</mat-card-title>\r\n    <mat-card-subtitle>\r\n      This is a special operation to add an item which is metadata for another item,\r\n      see <a href=\"https://go.2sxc.org/metadata\" target=\"_blank\">docs</a>.\r\n    </mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form [formGroup]=\"form\">\r\n      <!-- Scope -->\r\n      @if (advancedMode && guidedContentType) {\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Scope</mat-label>\r\n        <mat-select formControlName=\"scope\" [placeholder]=\"!scopeOptions().length ? 'No items found' : ''\">\r\n          @for (scopeOption of scopeOptions(); track scopeOption) {\r\n          <mat-option [value]=\"scopeOption.value\">\r\n            {{ scopeOption.name }}\r\n          </mat-option>\r\n          }\r\n          <mat-option [value]=\"dropdownInsertValue\">Other...</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <app-field-hint>\r\n        The scope should almost never be changed -\r\n        <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n      </app-field-hint>\r\n      }\r\n      <!-- Content Type of metadata item -->\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Content Type</mat-label>\r\n        @if (guidedContentType) {\r\n        <mat-select formControlName=\"contentType\" required\r\n          [placeholder]=\"!contentTypes()()?.length ? 'No items found' : ''\">\r\n          @for (contentType of contentTypes()(); track contentType) {\r\n          <mat-option [value]=\"contentType.NameId\">\r\n            {{ contentType.Label }}\r\n          </mat-option>\r\n          }\r\n        </mat-select>\r\n        }\r\n        @if (!guidedContentType) {\r\n        <input matInput type=\"text\" formControlName=\"contentType\" required>\r\n        }\r\n        <div matTextSuffix>\r\n          <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': guidedContentType }\" tippy=\"Pick existing value\"\r\n            (click)=\"toggleGuidedContentType(true)\">\r\n            <mat-icon>search</mat-icon>\r\n          </button>\r\n          <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': !guidedContentType }\" tippy=\"Manual entry\"\r\n            (click)=\"toggleGuidedContentType(false)\">\r\n            <mat-icon>text_fields</mat-icon>\r\n          </button>\r\n        </div>\r\n      </mat-form-field>\r\n      @if (form.controls.contentType.touched && form.controls.contentType.errors?.required) {\r\n      <app-field-hint [isError]=\"true\">\r\n        This field is required\r\n      </app-field-hint>\r\n      }\r\n    </form>\r\n  </mat-card-content>\r\n  <mat-card-actions class=\"eav-card-actions\">\r\n    <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n      {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n    </mat-slide-toggle>\r\n    <div>\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button color=\"accent\" class=\"eav-card-action-button\" [disabled]=\"!form.valid\"\r\n        (click)=\"confirm()\">\r\n        Confirm\r\n      </button>\r\n    </div>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, computed, HostBinding, OnInit, signal, WritableSignal } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { distinctUntilChanged, startWith } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { ContentTypesService } from '../../app-administration/services';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { dropdownInsertValue } from '../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants, ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { MetadataSaveFormValues } from './metadata-save-dialog.models';\r\n\r\n@Component({\r\n    selector: 'app-metadata-save-dialog',\r\n    templateUrl: './metadata-save-dialog.component.html',\r\n    styleUrls: ['./metadata-save-dialog.component.scss'],\r\n    imports: [\r\n        MatCardModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        NgClass,\r\n        MatIconModule,\r\n        MatSlideToggleModule,\r\n        FieldHintComponent,\r\n        ClickStopPropagationDirective,\r\n    ]\r\n})\r\nexport class MetadataSaveDialogComponent implements OnInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  dropdownInsertValue = dropdownInsertValue;\r\n  guidedContentType = true;\r\n  advancedMode = false;\r\n\r\n  #contentTypesService = transient(ContentTypesService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<MetadataSaveDialogComponent>,\r\n  ) { }\r\n\r\n  scope = signal(eavConstants.scopes.default.value);\r\n  scopeOptions = this.#contentTypesService.getScopesSig(undefined) as WritableSignal<ScopeOption[]>;\r\n\r\n  contentTypes = computed(() => {\r\n    const scope = this.scope();\r\n    return this.#contentTypesService.getTypesSig(scope, undefined);\r\n  });\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n  closeDialog(contentType?: string): void {\r\n    this.dialog.close(contentType);\r\n  }\r\n\r\n  toggleGuidedContentType(guidedContentType: boolean): void {\r\n    this.guidedContentType = guidedContentType;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: MetadataSaveFormValues = this.form.getRawValue();\r\n    this.closeDialog(formValues.contentType);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({});\r\n    this.form.addControl('contentType', new UntypedFormControl(null, [Validators.required]));\r\n    this.form.addControl('scope', new UntypedFormControl(eavConstants.scopes.default.value));\r\n\r\n    this.form.controls.scope.valueChanges.pipe(\r\n      startWith(this.form.controls.scope.value),\r\n      distinctUntilChanged(),\r\n    ).subscribe((newScope: string) => {\r\n      // reset content types when scope changes\r\n      if (this.form.controls.contentType.value != null) {\r\n        this.form.controls.contentType.patchValue(null);\r\n      }\r\n\r\n      // add new scope on manual entry\r\n      if (newScope === dropdownInsertValue) {\r\n        newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n        if (!this.scopeOptions().some(option => option.value === newScope)) {\r\n          const newScopeOption: ScopeOption = {\r\n            name: newScope,\r\n            value: newScope,\r\n          };\r\n          this.scopeOptions.set([newScopeOption, ...this.scopeOptions()]);\r\n        }\r\n        this.form.controls.scope.patchValue(newScope);\r\n      } else {\r\n        this.scope.set(newScope);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-dialog nav-component-wrapper\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      {{ title || 'Metadata' }}\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content nav-component-wrapper\">\r\n    <p>\r\n      @if (!itemFor()) {\r\n      This item is not metadata for anything else.\r\n      }\r\n      @else {\r\n      This item is metadata for:\r\n      <br>Target: {{ itemFor().Target }}\r\n      <br>TargetType: {{ itemFor().TargetType }}\r\n      @if (itemFor().KeyNumber) {\r\n      <br>Key Number: {{ itemFor().KeyNumber }}\r\n      }\r\n      @if (itemFor().KeyGuid) {\r\n      <br>Key Guid: {{ itemFor().KeyGuid }}\r\n      }\r\n      @if (itemFor().KeyString) {\r\n      <br>Key String: {{ itemFor().KeyString }}\r\n      }\r\n      @if (itemFor().Title) {\r\n      <br>Title: {{ itemFor().Title }}\r\n      }\r\n      }\r\n    </p>\r\n    <router-outlet></router-outlet>\r\n    <div class=\"grid-wrapper\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"metadataSet().Items\" [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </div>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    @if (recommendations().length === 0) {\r\n    <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new metadata for this item\"\r\n      (click)=\"createMetadata()\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n    }\r\n    @if (recommendations().length > 0) {\r\n    <eco-fab-speed-dial class=\"eav-eco-fab-speed-dial\" [ngClass]=\"{ 'fab-opened': fabOpen() }\"\r\n      (openChange)=\"openChange($event)\">\r\n      <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n        <button mat-fab>\r\n          <mat-icon class=\"spin180\">{{ fabOpen() ? 'close' : 'add' }}</mat-icon>\r\n        </button>\r\n      </eco-fab-speed-dial-trigger>\r\n      <eco-fab-speed-dial-actions class=\"eav-eco-fab-speed-dial-actions\">\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Other Content Type\"\r\n          (click)=\"createMetadata()\">\r\n          <mat-icon>search</mat-icon>\r\n        </button>\r\n        @for (recommendation of recommendations(); track recommendation) {\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" [attr.label]=\"recommendation.Title\"\r\n          (click)=\"createMetadata(recommendation)\">\r\n          @if (recommendation.Icon) {\r\n          <div style=\"color: white; fill: white;\" [innerHTML]=\"recommendation.Icon | safeHtml\"\r\n            [matBadgeHidden]=\"recommendation.Enabled\" matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadge=\"💎\"\r\n            matBadgePosition=\"below after\" aria-hidden=\"false\"></div>\r\n          } @else {\r\n          <mat-icon>add</mat-icon>\r\n          }\r\n        </button>\r\n        }\r\n      </eco-fab-speed-dial-actions>\r\n    </eco-fab-speed-dial>\r\n    }\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, computed, OnInit, signal, ViewContainerRef } from '@angular/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent } from '@ecodev/fab-speed-dial';\r\nimport { map, take } from 'rxjs';\r\nimport { convert, Of, transient } from '../../../../core';\r\nimport { ContentItemsService } from '../content-items/services/content-items.service';\r\nimport { EavForInAdminUi } from '../edit/shared/models/eav';\r\nimport { openFeatureDialog } from '../features/shared/base-feature.component';\r\nimport { MetadataService } from '../permissions';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { MetadataKeyTypes } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { classLog } from '../shared/logging';\r\nimport { EditForm, EditPrep, ItemAddIdentifier } from '../shared/models/edit-form.model';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { SafeHtmlPipe } from '../shared/pipes/safe-html.pipe';\r\nimport { DialogRoutingService } from '../shared/routing/dialog-routing.service';\r\nimport { EntityEditService } from '../shared/services/entity-edit.service';\r\nimport { ConfirmDeleteDialogComponent } from './confirm-delete-dialog/confirm-delete-dialog.component';\r\nimport { ConfirmDeleteDialogData } from './confirm-delete-dialog/confirm-delete-dialog.models';\r\nimport { MetadataActionsComponent } from './metadata-actions/metadata-actions.component';\r\nimport { MetadataActionsParams } from './metadata-actions/metadata-actions.models';\r\nimport { MetadataContentTypeComponent } from './metadata-content-type/metadata-content-type.component';\r\nimport { MetadataSaveDialogComponent } from './metadata-save-dialog/metadata-save-dialog.component';\r\nimport { MetadataDto, MetadataItem, MetadataRecommendation } from './models/metadata.model';\r\n\r\n@Component({\r\n    selector: 'app-metadata',\r\n    templateUrl: './metadata.component.html',\r\n    styleUrls: ['./metadata.component.scss'],\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        RouterOutlet,\r\n        SxcGridModule,\r\n        MatDialogActions,\r\n        EcoFabSpeedDialComponent,\r\n        NgClass,\r\n        EcoFabSpeedDialTriggerComponent,\r\n        EcoFabSpeedDialActionsComponent,\r\n        MatBadgeModule,\r\n        SafeHtmlPipe,\r\n    ]\r\n})\r\nexport class MetadataComponent implements OnInit {\r\n\r\n  log = classLog({ MetadataComponent });\r\n\r\n  #entitiesSvc = transient(EntityEditService);\r\n  #metadataSvc = transient(MetadataService);\r\n  #contentItemSvc = transient(ContentItemsService);\r\n  #dialogRoutes = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<MetadataComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) { }\r\n\r\n  gridOptions = this.#buildGridOptions();\r\n\r\n  fabOpen = signal(false);\r\n\r\n  #params = convert(this.#dialogRoutes.getParams(['targetType', 'keyType', 'key', 'title', 'contentTypeStaticName']), p => ({\r\n    targetType: parseInt(p.targetType, 10),\r\n    keyType: p.keyType as Of<typeof MetadataKeyTypes>,\r\n    key: p.key,\r\n    contentTypeStaticName: p.contentTypeStaticName,\r\n  }));\r\n\r\n  // 2024-11-05 2dm: broken, must inform @2dg\r\n  // itemFor = computed<EavForInAdminUi | undefined>(() => {\r\n  //   const items = this.#contentItemSvc.getAllSig(this.#params.contentTypeStaticName, undefined)\r\n  //   const item = items()?.find(i => i.Guid === this.#params.key);\r\n  //   if (item?.For)\r\n  //     return item.For;\r\n  //   return undefined;\r\n  // });\r\n\r\n  // Signal to get itemFor - must be _outside_ the computed property, otherwise it regenerates infinitely\r\n  #itemsFromHttp = this.#contentItemSvc.getAllSig(this.#params.contentTypeStaticName,  /* initial: */ null);\r\n\r\n  itemFor = computed<EavForInAdminUi | undefined>(() => {\r\n    const item = this.#itemsFromHttp()?.find(i => i.Guid === this.#params.key);\r\n    return (item?.For)\r\n      ? item.For\r\n      : undefined;\r\n  });\r\n\r\n  metadataSet = signal<MetadataDto>({ Items: [], Recommendations: [] } as MetadataDto);\r\n\r\n  recommendations = computed(() => {\r\n    const metadata = this.metadataSet();\r\n    return metadata.Recommendations.filter(r =>\r\n      metadata.Items.filter(i => i._Type.Id === r.Id).length < r.Count\r\n    );\r\n  });\r\n\r\n  protected title = (() => {\r\n    try {\r\n      return decodeURIComponent(this.#dialogRoutes.getParam('title') ?? '');\r\n    } catch (e) {\r\n      console.error('Couldn\\'t properly decode title');\r\n      return this.#dialogRoutes.getParam('title') ?? '';\r\n    }\r\n  })();\r\n\r\n  ngOnInit() {\r\n    this.#fetchMetadata();\r\n    this.#dialogRoutes.doOnDialogClosed(() => this.#fetchMetadata());\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  openChange(open: boolean) {\r\n    this.fabOpen.set(open);\r\n  }\r\n\r\n  createMetadata(recommendation?: MetadataRecommendation) {\r\n    if (recommendation) {\r\n      // If the feature is not enabled, open the info dialog instead of metadata\r\n      if (!recommendation.Enabled) {\r\n        openFeatureDialog(this.matDialog, recommendation.MissingFeature, this.viewContainerRef, this.changeDetectorRef);\r\n        return;\r\n      }\r\n      // Feature is enabled, check if it's an empty metadata\r\n      if (recommendation.CreateEmpty) {\r\n        this.snackBar.open(`Creating ${recommendation.Name}...`);\r\n        this.#entitiesSvc.create(recommendation.Id, { For: this.calculateItemFor('dummy').For }).subscribe({\r\n          error: () => {\r\n            this.snackBar.open(`Creating ${recommendation.Name} failed. Please check console for more info`, undefined, { duration: 3000 });\r\n            this.#fetchMetadata();\r\n          },\r\n          next: () => {\r\n            this.snackBar.open(`Created ${recommendation.Name}`, undefined, { duration: 3000 });\r\n            this.#fetchMetadata();\r\n          },\r\n        });\r\n      } else {\r\n        // Default case - open new-metadata dialog\r\n        this.createMetadataForm(recommendation.Id);\r\n      }\r\n      return;\r\n    }\r\n    const metadataDialogRef = this.matDialog.open(MetadataSaveDialogComponent, {\r\n      autoFocus: false,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    metadataDialogRef.afterClosed().subscribe((contentType?: string) => {\r\n      if (contentType == null) return;\r\n      this.createMetadataForm(contentType);\r\n    });\r\n  }\r\n\r\n  private createMetadataForm(contentType: string) {\r\n    const form: EditForm = {\r\n      items: [this.calculateItemFor(contentType)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private calculateItemFor(contentType: string): ItemAddIdentifier {\r\n    const x = EditPrep.constructMetadataInfo(this.#params.targetType, this.#params.keyType, this.#params.key);\r\n    return EditPrep.newMetadataFromInfo(contentType, x);\r\n  }\r\n\r\n  #fetchMetadata() {\r\n    const logGetMetadata = this.log.rxTap('getMetadata');\r\n    this.#metadataSvc.getMetadata(this.#params.targetType, this.#params.keyType, this.#params.key)\r\n      .pipe(\r\n        logGetMetadata.pipe(),\r\n        take(1),\r\n        map(metadata => {\r\n          metadata.Recommendations.forEach(r => {\r\n            if (r.Icon?.startsWith('base64:')) {\r\n              r.Icon = r.Icon.replace('base64:', '');\r\n              r.Icon = window.atob(r.Icon);\r\n              // used for coloring black icons to white\r\n              r.Icon = r.Icon.replace('fill=\"#000000\"', 'fill=\"#ffffff\"');\r\n            }\r\n          });\r\n          return metadata;\r\n        }),\r\n        logGetMetadata.map(),\r\n      )\r\n      // 2024-05-30 2dm - this standard shorthand seems to fail\r\n      // for reasons unknown to me. I've replaced it with the longhand\r\n      // The problem occurs when the metadataSet$ is updated after the initial load.\r\n      // .subscribe(this.metadataSet$);\r\n      .subscribe(data => {\r\n        this.metadataSet.set(data);\r\n      }\r\n      );\r\n  }\r\n\r\n  #editMetadata(metadata: MetadataItem) {\r\n    const form: EditForm = {\r\n      items: [EditPrep.editId(metadata.Id)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  #deleteMetadata(metadata: MetadataItem, confirmed = false) {\r\n    if (!confirmed) {\r\n      const data: ConfirmDeleteDialogData = {\r\n        entityId: metadata.Id,\r\n        entityTitle: metadata.Title,\r\n        message: this.metadataSet().Recommendations.find(r => r.Id === metadata._Type.Id)?.DeleteWarning,\r\n      };\r\n      const confirmationDialogRef = this.matDialog.open(ConfirmDeleteDialogComponent, {\r\n        autoFocus: false,\r\n        data,\r\n        viewContainerRef: this.viewContainerRef,\r\n        width: '400px',\r\n      });\r\n      confirmationDialogRef.afterClosed().subscribe((isConfirmed: boolean) => {\r\n        if (isConfirmed)\r\n          this.#deleteMetadata(metadata, true);\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.snackBar.open('Deleting...');\r\n    this.#entitiesSvc.delete(metadata._Type.Id, metadata.Id, false).subscribe({\r\n      next: () => {\r\n        this.snackBar.open('Deleted', null, { duration: 2000 });\r\n        this.#fetchMetadata();\r\n      },\r\n      error: () => {\r\n        this.snackBar.open('Delete failed. Please check console for more information', null, { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  #buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.IdWithDefaultRenderer,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<MetadataItem>()\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Title',\r\n          onCellClicked: (p: { data: MetadataItem }) => this.#editMetadata(p.data),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Content Type',\r\n          field: 'ContentType',\r\n          valueGetter: (p: { data: MetadataItem }) => `${p.data._Type.Name}${p.data._Type.Title !== p.data._Type.Name ? ` (${p.data._Type.Title})` : ''}`,\r\n          cellRenderer: MetadataContentTypeComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight1,\r\n          cellRenderer: MetadataActionsComponent,\r\n          cellRendererParams: (() => ({\r\n            onDelete: (metadata) => this.#deleteMetadata(metadata),\r\n          } satisfies MetadataActionsParams))(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { classLog } from '../logging';\r\n\r\n@Directive({\r\n  selector: '[appClickStopPropagation]',\r\n})\r\nexport class ClickStopPropagationDirective {\r\n\r\n  log = classLog({ClickStopPropagationDirective});\r\n\r\n  // Log constructor to detect that it was really attached/created\r\n  constructor() {\r\n    this.log.a('constructor');\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    this.log.a('onClick', { event });\r\n    event.stopPropagation();\r\n\r\n    // This should never be added here, as it's often on a link, and the default behavior (link open) should happen\r\n    // event.preventDefault();\r\n  }\r\n\r\n}\r\n"],"x_google_ignoreList":[]}