{"version":3,"mappings":"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","names":["i0","ctx_r5","ctx_r7","ctx_r8","ctx_r9","ctx_r10","ReplaceContentComponent","BaseComponent","constructor","router","route","dialogRef","contentGroupService","snackBar","super","this","ngOnInit","guid","snapshot","paramMap","get","part","index","parseInt","add","queryParamMap","filterText$","BehaviorSubject","options$","filteredOptions$","combineLatest","pipe","map","filterText","options","filter","option","label","toLocaleLowerCase","includes","viewModel$","filteredOptions","isAddMode","isMatch","fetchConfig","subscription","refreshOnChildClosedShallow","subscribe","editResult","o","getCurrentNavigation","extras","_a","state","cloneId","s","Object","keys","ngOnDestroy","complete","closeDialog","close","setFilter","next","select","event","value","copySelected","contentGroup","buildContentGroup","formUrl","convertFormToUrl","items","ContentTypeName","contentTypeName","DuplicateEntity","id","navigate","relativeTo","save","open","saveItem","duration","isRefresh","getItems","replaceConfig","entries","Items","itemId","itemName","newId","SelectedId","newFilter","r","find","n","_b","selectors","BaseSubsinkComponent","refreshOnChildClosedDeep","events","NavigationEnd","startWith","firstChild","pairwise","hadChild","hasChild","features"],"sources":["./projects/eav-ui/src/app/replace-content/replace-content.component.html","./projects/eav-ui/src/app/replace-content/replace-content.component.ts","./projects/eav-ui/src/app/shared/components/base-component/base.component.ts"],"sourcesContent":["<ng-container *ngIf=\"viewModel$ | async as vm\">\r\n\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">{{ vm.isAddMode ? 'Add Existing Item' : 'Replace Content Item' }}</div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <p class=\"dialog-description\">\r\n    {{\r\n    vm.isAddMode\r\n    ? 'Select a content-item to add to this list.'\r\n    : 'By replacing a content-item you can make other content appear in the slot of the original content.'\r\n    }}\r\n  </p>\r\n\r\n  <div class=\"options-box\">\r\n    <mat-form-field appearance=\"standard\" color=\"accent\">\r\n      <mat-label>Choose item</mat-label>\r\n      <input matInput [matAutocomplete]=\"auto\" [ngModel]=\"vm.filterText\" (ngModelChange)=\"setFilter($event)\">\r\n      <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"select($event)\">\r\n        <cdk-virtual-scroll-viewport itemSize=\"48\" minBufferPx=\"500\" maxBufferPx=\"1000\"\r\n          [style.height.px]=\"vm.filteredOptions.length < 6 ? vm.filteredOptions.length * 48 : 240\">\r\n          <mat-option *cdkVirtualFor=\"let option of vm.filteredOptions\" [value]=\"option\">{{ option }}</mat-option>\r\n        </cdk-virtual-scroll-viewport>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n    <button mat-icon-button class=\"options-box__copy\" tippy=\"Copy\" [disabled]=\"!vm.isMatch\" (click)=\"copySelected()\">\r\n      <mat-icon>file_copy</mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\" dialog-component-actions\">\r\n    <button mat-raised-button (click)=\"closeDialog()\">Cancel</button>\r\n    <button mat-raised-button color=\"accent\" [disabled]=\"!vm.isMatch\" (click)=\"save()\">Save</button>\r\n  </div>\r\n</ng-container>","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { ContentGroupAdd } from '../manage-content-list/models/content-group.model';\r\nimport { ContentGroupService } from '../manage-content-list/services/content-group.service';\r\nimport { BaseComponent } from '../shared/components/base-component/base.component';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { ReplaceOption } from './models/replace-option.model';\r\nimport { ReplaceContentViewModel } from './replace-content.models';\r\n\r\n@Component({\r\n  selector: 'app-replace-content',\r\n  templateUrl: './replace-content.component.html',\r\n  styleUrls: ['./replace-content.component.scss'],\r\n})\r\nexport class ReplaceContentComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  viewModel$: Observable<ReplaceContentViewModel>;\r\n\r\n  private guid: string;\r\n  private part: string;\r\n  private index: number;\r\n  private add: boolean;\r\n  private filterText$: BehaviorSubject<string>;\r\n  private options$: BehaviorSubject<ReplaceOption[]>;\r\n  private contentTypeName: string;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<ReplaceContentComponent>,\r\n    private contentGroupService: ContentGroupService,\r\n\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.guid = this.route.snapshot.paramMap.get('guid');\r\n    this.part = this.route.snapshot.paramMap.get('part');\r\n    this.index = parseInt(this.route.snapshot.paramMap.get('index'), 10);\r\n    this.add = !!this.route.snapshot.queryParamMap.get('add');\r\n\r\n    this.filterText$ = new BehaviorSubject('');\r\n    this.options$ = new BehaviorSubject([]);\r\n\r\n    const filteredOptions$ = combineLatest([this.filterText$, this.options$]).pipe(\r\n      map(([filterText, options]) =>\r\n        options.filter(option => option.label.toLocaleLowerCase().includes(filterText.toLocaleLowerCase())).map(option => option.label)\r\n      ),\r\n    );\r\n    this.viewModel$ = combineLatest([this.filterText$, filteredOptions$]).pipe(\r\n      map(([filterText, filteredOptions]) => {\r\n        const viewModel: ReplaceContentViewModel = {\r\n          filterText,\r\n          filteredOptions,\r\n          isAddMode: this.add,\r\n          isMatch: filteredOptions.includes(filterText),\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n\r\n    this.fetchConfig(false, null);\r\n    this.subscription.add(this.refreshOnChildClosedShallow().subscribe(() => {\r\n      const navigation = this.router.getCurrentNavigation();\r\n      const editResult = navigation.extras?.state;\r\n      const cloneId: number = editResult?.[Object.keys(editResult)[0]];\r\n      this.fetchConfig(true, cloneId);\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.filterText$.complete();\r\n    this.options$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  setFilter(filterText: string) {\r\n    this.filterText$.next(filterText);\r\n  }\r\n\r\n  select(event: MatAutocompleteSelectedEvent) {\r\n    this.filterText$.next(event.option.value);\r\n  }\r\n\r\n  copySelected() {\r\n    const contentGroup = this.buildContentGroup();\r\n    const form: EditForm = {\r\n      items: [{ ContentTypeName: this.contentTypeName, DuplicateEntity: contentGroup.id }],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n  }\r\n\r\n  save() {\r\n    this.snackBar.open('Saving...');\r\n    const contentGroup = this.buildContentGroup();\r\n    this.contentGroupService.saveItem(contentGroup).subscribe(() => {\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.closeDialog();\r\n    });\r\n  }\r\n\r\n  private fetchConfig(isRefresh: boolean, cloneId: number) {\r\n    const contentGroup = this.buildContentGroup();\r\n    this.contentGroupService.getItems(contentGroup).subscribe(replaceConfig => {\r\n      const options = Object.entries(replaceConfig.Items).map(([itemId, itemName]) => {\r\n        const option: ReplaceOption = {\r\n          id: parseInt(itemId, 10),\r\n          label: `${itemName} (${itemId})`,\r\n        };\r\n        return option;\r\n      });\r\n      this.options$.next(options);\r\n\r\n      // don't set selected option if dialog should be in add-mode and don't change selected option on refresh unless it's cloneId\r\n      if ((!contentGroup.add && !isRefresh) || cloneId != null) {\r\n        const newId = !isRefresh ? replaceConfig.SelectedId : cloneId;\r\n        const newFilter = this.options$.value.find(option => option.id === newId)?.label || '';\r\n        this.filterText$.next(newFilter);\r\n      }\r\n      this.contentTypeName = replaceConfig.ContentTypeName;\r\n    });\r\n  }\r\n\r\n  private buildContentGroup() {\r\n    const id = this.options$.value.find(option => option.label === this.filterText$.value)?.id ?? null;\r\n\r\n    const contentGroup: ContentGroupAdd = {\r\n      id,\r\n      guid: this.guid,\r\n      part: this.part,\r\n      index: this.index,\r\n      add: this.add,\r\n    };\r\n    return contentGroup;\r\n  }\r\n}\r\n","import { Directive, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith, Subscription } from 'rxjs';\r\nimport { BaseSubsinkComponent } from '../base-subsink-component/base-subsink.component';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class BaseComponent extends BaseSubsinkComponent implements OnDestroy {\r\n  \r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  protected refreshOnChildClosedDeep() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n\r\n  protected refreshOnChildClosedShallow() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"projects_eav-ui_src_app_replace-content_replace-content_component_ts.14f748a01056caf9.js"}