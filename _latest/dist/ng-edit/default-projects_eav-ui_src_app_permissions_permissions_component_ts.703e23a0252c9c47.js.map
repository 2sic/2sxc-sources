{"version":3,"file":"default-projects_eav-ui_src_app_permissions_permissions_component_ts.703e23a0252c9c47.js","mappings":"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","names":["EntitiesService","constructor","http","context","dnnContext","this","create","contentType","entity","post","params","appId","zoneId","update","entityId","delete","type","id","tryForce","$2sxc","apiUrl","webApiEntityRoot","toString","force","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_2__","jDH","factory","ɵfac","TrueFalseComponent","trueIcon","falseIcon","agInit","value","reverse","icon","refresh","_angular_core__WEBPACK_IMPORTED_MODULE_0__","VBU","selectors","standalone","features","decls","vars","consts","template","rf","ctx","MatIconModule","encapsulation","PermissionsActionsComponent","deletePermission","onDelete","data","fesm2022_core","MatRippleModule","_r1","ctx_r1","closeDialog","editPermission","permissions","gridOptions","PermissionsComponent","BaseWithChildDialogComponent","router","route","dialogRef","snackBar","super","permissions$","BehaviorSubject","undefined","buildGridOptions","targetType","parseInt","snapshot","paramMap","get","keyType","key","prefills","eavConstants","metadata","language","PermissionType","permissionsService","transient","PermissionsService","ngOnInit","fetchPermissions","subscriptions","add","childDialogClosed$","subscribe","viewModel$","combineLatest","pipe","map","ngOnDestroy","complete","close","getAll","next","permission","form","items","ContentTypeName","contentTypes","For","Target","Object","values","find","m","target","TargetType","keyTypes","guid","Guid","number","Number","string","String","Prefill","EntityId","Id","formUrl","convertFormToUrl","navigate","relativeTo","confirm","Title","open","duration","defaultGridOptions","columnDefs","ColumnDefinitions","cellRenderer","IdFieldComponent","cellRendererParams","tooltipGetter","TextWide","headerName","field","sort","onCellClicked","Character","ActionsPinnedRight1","PermissionsComponent_Conditional_0_Template","tmp_0_0","MatButtonModule","i4","i5","RouterOutlet","MatDialogActions","AsyncPipe","SxcGridModule","i6","MetadataService","getMetadata","contentTypeName","_angular_core__WEBPACK_IMPORTED_MODULE_1__","entitiesService","metadataService","Items","_angular_core__WEBPACK_IMPORTED_MODULE_5__","AgBoolCellIconsDefault","states","true","tooltip","false","AgBoolIconRenderer_Conditional_1_ng_container_1_Template","ctx_r0","url","showIcon_r2","_c0","clickable","AgBoolIconRenderer","allSettings","settings","d","getUrl","core","AgBoolIconRenderer_Conditional_1_Template","AgBoolIconRenderer_Conditional_2_Template","AgBoolIconRenderer_ng_template_3_Template","TippyDirective","NgClass","width","cellClass","split","pinned","ActionsPinnedRight3","ActionsPinnedRight4","ActionsPinnedRight5","ActionsPinnedRight6","ActionsPinnedRight7","IconShow","headerClass","sortable","filter","BooleanFilterComponent","valueGetter","IsHidden","Fields","Boolean","Boolean2","Boolean3","TextWideType","flex","minWidth","TextWideMin100","TextWideFlex3","TextNarrow","TextWideActionClass","filterParams","isFilterActive","doesFilterPass","api","colDef","column","columnApi","node","getValue","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","$event","FormsModule","MatRadioModule","styles","align","copy","copyToClipboard"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/content-items/services/entities.service.ts","./projects/eav-ui/src/app/dev-rest/api/true-false/true-false.component.ts","./projects/eav-ui/src/app/dev-rest/api/true-false/true-false.component.html","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.html","./projects/eav-ui/src/app/permissions/permissions.component.html","./projects/eav-ui/src/app/permissions/permissions.component.ts","./projects/eav-ui/src/app/permissions/services/metadata.service.ts","./projects/eav-ui/src/app/permissions/services/permissions.service.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-params.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.html","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.component.ts","./projects/eav-ui/src/app/shared/ag-grid/column-definitions.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.html","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.html"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../edit/shared/models/eav';\r\nimport { ItemInListIdentifier } from '../../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { webApiEntityRoot } from '../../shared/services/entity.service';\r\n\r\n@Injectable()\r\nexport class EntitiesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.context.appId.toString(), force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n\r\nexport interface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: ItemInListIdentifier;\r\n  [field: string]: any;\r\n}\r\n\r\nexport interface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { TrueFalseParams } from './true-false.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-rest-api-true-false',\r\n  templateUrl: './true-false.component.html',\r\n  standalone: true,\r\n  imports: [MatIconModule],\r\n})\r\nexport class TrueFalseComponent implements ICellRendererAngularComp {\r\n  icon: string;\r\n\r\n  private trueIcon = 'check_circle';\r\n  private falseIcon = 'circle';\r\n\r\n  agInit(params: ICellRendererParams & TrueFalseParams): void {\r\n    let value: boolean = params.value;\r\n    if (params.reverse) { value = !value; }\r\n    if (params.trueIcon) { this.trueIcon = params.trueIcon; }\r\n    if (params.falseIcon) { this.falseIcon = params.falseIcon; }\r\n    this.icon = value ? this.trueIcon : this.falseIcon;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon>{{ icon }}</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Permission } from '../models/permission.model';\r\nimport { PermissionsActionsParams } from './permissions-actions.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRippleModule } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-permissions-actions',\r\n  templateUrl: './permissions-actions.component.html',\r\n  styleUrls: ['./permissions-actions.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n  ],\r\n})\r\nexport class PermissionsActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & PermissionsActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & PermissionsActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deletePermission(): void {\r\n    const permission: Permission = this.params.data;\r\n    this.params.onDelete(permission);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deletePermission()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog nav-component-wrapper\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">Permissions</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"eav-dialog-content nav-component-wrapper\">\r\n      <router-outlet></router-outlet>\r\n      <div class=\"grid-wrapper\">\r\n        <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.permissions\" [gridOptions]=\"gridOptions\">\r\n        </ag-grid-angular>\r\n      </div>\r\n      <mat-dialog-actions align=\"end\">\r\n        <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new permission\" (click)=\"editPermission(null)\">\r\n          <mat-icon>add</mat-icon>\r\n        </button>\r\n      </mat-dialog-actions>\r\n    </div>\r\n  </div>\r\n}\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, Observable, combineLatest, map } from 'rxjs';\r\nimport { BaseWithChildDialogComponent } from '../shared/components/base-with-child-dialog.component';\r\nimport { IdFieldComponent } from '../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { Permission } from './models/permission.model';\r\nimport { PermissionsActionsComponent } from './permissions-actions/permissions-actions.component';\r\nimport { PermissionsActionsParams } from './permissions-actions/permissions-actions.models';\r\nimport { PermissionsService } from './services/permissions.service';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MetadataService } from './services/metadata.service';\r\nimport { EntitiesService } from '../content-items/services/entities.service';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { transient } from '../core';\r\n\r\n@Component({\r\n  selector: 'app-permissions',\r\n  templateUrl: './permissions.component.html',\r\n  styleUrls: ['./permissions.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    MatDialogActions,\r\n    AsyncPipe,\r\n    SxcGridModule,\r\n  ],\r\n  providers: [\r\n    EntitiesService,\r\n  ],\r\n})\r\nexport class PermissionsComponent extends BaseWithChildDialogComponent implements OnInit, OnDestroy {\r\n  permissions$ = new BehaviorSubject<Permission[]>(undefined);\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private targetType = parseInt(this.route.snapshot.paramMap.get('targetType'), 10);\r\n  private keyType = this.route.snapshot.paramMap.get('keyType') as MetadataKeyType;\r\n  private key = this.route.snapshot.paramMap.get('key');\r\n  private prefills: Record<string, Record<string, string>> = {\r\n    [eavConstants.metadata.language.targetType]: {\r\n      PermissionType: 'language',\r\n    },\r\n  };\r\n\r\n  viewModel$: Observable<PermissionsViewModel>;\r\n\r\n  private permissionsService = transient(PermissionsService);\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<PermissionsComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchPermissions();\r\n    this.subscriptions.add(this.childDialogClosed$().subscribe(() => { this.fetchPermissions(); }));\r\n    this.viewModel$ = combineLatest([\r\n      this.permissions$\r\n    ]).pipe(map(([permissions]) => ({ permissions })));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.permissions$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private fetchPermissions() {\r\n    this.permissionsService.getAll(this.targetType, this.keyType, this.key).subscribe(permissions => {\r\n      this.permissions$.next(permissions);\r\n    });\r\n  }\r\n\r\n  editPermission(permission?: Permission) {\r\n    let form: EditForm;\r\n    if (permission == null) {\r\n      form = {\r\n        items: [{\r\n          ContentTypeName: eavConstants.contentTypes.permissions,\r\n          For: {\r\n            Target: Object.values(eavConstants.metadata).find(m => m.targetType === this.targetType)?.target ?? this.targetType.toString(),\r\n            TargetType: this.targetType,\r\n            ...(this.keyType === eavConstants.keyTypes.guid && { Guid: this.key }),\r\n            ...(this.keyType === eavConstants.keyTypes.number && { Number: parseInt(this.key, 10) }),\r\n            ...(this.keyType === eavConstants.keyTypes.string && { String: this.key }),\r\n          },\r\n          ...(this.prefills[this.targetType] && { Prefill: this.prefills[this.targetType] }),\r\n        }],\r\n      };\r\n    } else {\r\n      form = {\r\n        items: [{ EntityId: permission.Id }],\r\n      };\r\n    }\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private deletePermission(permission: Permission) {\r\n    if (!confirm(`Delete '${permission.Title}' (${permission.Id})?`)) { return; }\r\n    this.snackBar.open('Deleting...');\r\n    this.permissionsService.delete(permission.Id).subscribe(() => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.fetchPermissions();\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.Id,\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<Permission> = {\r\n              tooltipGetter: (permission: Permission) => `ID: ${permission.Id}\\nGUID: ${permission.Guid}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Name',\r\n          field: 'Title',\r\n          sort: 'asc',\r\n          onCellClicked: (params) => {\r\n            const permission: Permission = params.data;\r\n            this.editPermission(permission);\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Identity',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Condition',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Character,\r\n          field: 'Grant',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight1,\r\n          cellRenderer: PermissionsActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: PermissionsActionsParams = {\r\n              onDelete: (permission) => this.deletePermission(permission),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface PermissionsViewModel {\r\n  permissions: Permission[];\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { MetadataDto } from '../../metadata';\r\nimport { MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nconst webApiRoot = 'admin/metadata/get';\r\n\r\n@Injectable()\r\nexport class MetadataService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param targetType type of target metadata item is for, e.g. for Entity, or ContentType\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of target metadata item is for\r\n   * @param contentTypeName name of content type where permissions are stored. If blank, backend returns all metadata except permissions\r\n   */\r\n  getMetadata(targetType: number, keyType: MetadataKeyType, key: string | number, contentTypeName?: string): Observable<MetadataDto> {\r\n    return this.http.get<MetadataDto>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        targetType: targetType.toString(),\r\n        keyType,\r\n        key: key.toString(),\r\n        ...(contentTypeName && { contentType: contentTypeName }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { EntitiesService } from '../../content-items/services/entities.service';\r\nimport { eavConstants, MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Permission } from '../models/permission.model';\r\nimport { MetadataService } from './metadata.service';\r\nimport { transient } from '../../core';\r\n\r\n@Injectable()\r\nexport class PermissionsService {\r\n\r\n  private metadataService = transient(MetadataService);\r\n\r\n  constructor(private entitiesService: EntitiesService) { }\r\n\r\n  getAll(targetType: number, keyType: MetadataKeyType, key: string): Observable<Permission[]> {\r\n    return this.metadataService.getMetadata(targetType, keyType, key, eavConstants.contentTypes.permissions).pipe(\r\n      map(metadata => metadata.Items as Permission[]),\r\n    );\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.entitiesService.delete(eavConstants.contentTypes.permissions, id, false);\r\n  }\r\n}\r\n","export interface AgBoolCellIconSetting {\r\n  clickable?: boolean;\r\n  tooltip: string;\r\n  icon: string;\r\n  url?: string;\r\n  getUrl?: (data: any) => string;\r\n}\r\n\r\nexport interface AgBoolCellIconSettings {\r\n  states: Record<'true' | 'false' | string, AgBoolCellIconSetting>;\r\n}\r\n\r\nexport interface AgBoolCellIconsParams<T = any> {\r\n  settings(data: T): AgBoolCellIconSettings;\r\n}\r\n\r\nexport const AgBoolCellIconsDefault: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      tooltip: 'true/on',\r\n      icon: 'radio_button_checked',\r\n    },\r\n    false: {\r\n      tooltip: 'false/off',\r\n      icon: 'radio_button_unchecked',\r\n    }\r\n  }\r\n};","<div class=\"icon-container\">\r\n  @if (data.url) {\r\n    <a [href]=\"data.url\" target=\"_blank\">\r\n      <ng-container *ngTemplateOutlet=\"showIcon\"></ng-container>\r\n    </a>\r\n  } @else {\r\n    <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n      <mat-icon>{{ data.icon }}</mat-icon>\r\n    </div>\r\n  }\r\n</div>\r\n\r\n<ng-template #showIcon>\r\n  <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n    <mat-icon>{{ data.icon }}</mat-icon>\r\n  </div>\r\n</ng-template>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { AgBoolCellIconSetting, AgBoolCellIconSettings, AgBoolCellIconsDefault, AgBoolCellIconsParams } from './ag-bool-icon-params';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgClass } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-ag-bool-icon-renderer',\r\n  templateUrl: './ag-bool-icon-renderer.html',\r\n  standalone: true,\r\n  imports: [\r\n    TippyDirective,\r\n    MatIconModule,\r\n    NgClass,\r\n  ],\r\n})\r\nexport class AgBoolIconRenderer implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  private allSettings: AgBoolCellIconSettings;\r\n\r\n  data: AgBoolCellIconSetting; // | { link: boolean  };\r\n\r\n  agInit(params: ICellRendererParams & AgBoolCellIconsParams): void {\r\n    this.value = params.value;\r\n\r\n    this.allSettings = params.settings?.(params.data) ?? AgBoolCellIconsDefault;\r\n    const d = this.allSettings.states[this.value ? 'true' : 'false'];\r\n    this.data = {\r\n      ...d,\r\n      url: d.url ?? d.getUrl?.(params.data),\r\n      // link: !!(d.url || d.getUrl),\r\n    };\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { ColDef } from '@ag-grid-community/core';\r\nimport { BooleanFilterComponent } from '../components/boolean-filter/boolean-filter.component';\r\nimport { App } from '../../apps-management/models/app.model';\r\nimport { AgBoolIconRenderer } from './apps-list-show/ag-bool-icon-renderer.component';\r\nimport { TrueFalseComponent } from '../../dev-rest/api/true-false/true-false.component';\r\nimport { TrueFalseParams } from '../../dev-rest/api/true-false/true-false.models';\r\n\r\nexport class ColumnDefinitions {\r\n  static ActionsPinnedRight1: ColDef = {\r\n    width: 42,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight3: ColDef = {\r\n    width: 122,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight4: ColDef = {\r\n    width: 162,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight5: ColDef = {\r\n    width: 202,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight6: ColDef = {\r\n    width: 82,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight7: ColDef = {\r\n    width: 62,\r\n    cellClass: 'secondary-action no-outline no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static IconShow: ColDef = {\r\n    headerName: 'Show',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'icons no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: BooleanFilterComponent,\r\n    valueGetter: (params) => {\r\n      const app: App = params.data;\r\n      return !app.IsHidden;\r\n    },\r\n    cellRenderer: AgBoolIconRenderer,\r\n  };\r\n\r\n  static Items: ColDef = {\r\n    width: 102,\r\n    headerClass: 'dense',\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static Fields: ColDef = {\r\n    width: 94,\r\n    headerClass: 'dense',\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  /**\r\n   * Very narrow columns, typically just showing 1 character\r\n   */\r\n  static Character: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Id: ColDef = {\r\n    headerName: 'ID',\r\n    field: 'Id',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'id-action no-padding no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static Boolean: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'number-cell no-outline'.split(' '),\r\n    sortable: true,\r\n  };\r\n\r\n  static Boolean2: ColDef = {\r\n    width: 100,\r\n    sortable: true,\r\n    cellClass: 'no-outline',\r\n    filter: BooleanFilterComponent,\r\n  };\r\n\r\n  static Boolean3: ColDef = {\r\n    headerClass: 'dense',\r\n    width: 80,\r\n    cellClass: 'no-outline',\r\n    cellRenderer: TrueFalseComponent,\r\n    cellRendererParams: (() => {\r\n      const params: TrueFalseParams = {\r\n        reverse: false,\r\n      };\r\n      return params;\r\n    })(),\r\n  }\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Number: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'number-cell no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static TextWideType: ColDef = {\r\n    flex: 3,\r\n    minWidth: 250,\r\n    cellClass: 'primary-action highlight'.split(' '),\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextWide: ColDef = {\r\n    flex: 2,\r\n    minWidth: 250,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextWideMin100: ColDef = {\r\n    flex: 1,\r\n    minWidth: 100,\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  }\r\n\r\n  static TextWideFlex3: ColDef = {\r\n    flex: 3,\r\n    minWidth: 250,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextNarrow: ColDef = {\r\n    flex: 1,\r\n    minWidth: 150,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextWideActionClass: ColDef = {\r\n    flex: 2,\r\n    minWidth: 250,\r\n    cellClass: 'primary-action no-padding no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n\r\n\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { BooleanFilterModel } from './boolean-filter.model';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\n\r\n@Component({\r\n  selector: 'app-boolean-filter',\r\n  templateUrl: './boolean-filter.component.html',\r\n  styleUrls: ['./boolean-filter.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    MatRadioModule,\r\n  ]\r\n})\r\nexport class BooleanFilterComponent implements IFilterAngularComp {\r\n  filter = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.filter !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: boolean = this.filterParams.valueGetter(valueGetterParams);\r\n    if (value == null) { return false; }\r\n    return value.toString() === this.filter;\r\n  }\r\n\r\n  getModel(): BooleanFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n    return {\r\n      filterType: 'boolean',\r\n      filter: this.filter,\r\n    };\r\n  }\r\n\r\n  setModel(model: BooleanFilterModel) {\r\n    this.filter = model ? model.filter : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<mat-radio-group [(ngModel)]=\"filter\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">True</mat-radio-button>\r\n  <mat-radio-button value=\"false\">False</mat-radio-button>\r\n</mat-radio-group>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    MatIconModule,\r\n    TippyDirective,\r\n  ]\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(): void {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>"],"x_google_ignoreList":[]}