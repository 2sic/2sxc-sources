{"version":3,"file":"default-node_modules_angular_material_fesm2022_expansion_mjs.js","mappings":"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","sources":["./node_modules/@angular/cdk/fesm2022/accordion.mjs","./node_modules/@angular/material/fesm2022/expansion.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, booleanAttribute, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/collections';\nimport { Subject, Subscription } from 'rxjs';\n\n/** Used to generate unique ID for each accordion. */\nlet nextId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /** Emits when the state of the accordion changes */\n        this._stateChanges = new Subject();\n        /** Stream that emits true/false when openAll/closeAll is triggered. */\n        this._openCloseAllActions = new Subject();\n        /** A readonly id value to use for unique selection coordination. */\n        this.id = `cdk-accordion-${nextId$1++}`;\n        /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n        this.multi = false;\n    }\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n        if (this.multi) {\n            this._openCloseAllActions.next(true);\n        }\n    }\n    /** Closes all enabled accordion items. */\n    closeAll() {\n        this._openCloseAllActions.next(false);\n    }\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n        this._openCloseAllActions.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkAccordion, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.2.0\", type: CdkAccordion, isStandalone: true, selector: \"cdk-accordion, [cdkAccordion]\", inputs: { multi: [\"multi\", \"multi\", booleanAttribute] }, providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }], exportAs: [\"cdkAccordion\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkAccordion, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-accordion, [cdkAccordion]',\n                    exportAs: 'cdkAccordion',\n                    providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }],\n                    standalone: true,\n                }]\n        }], propDecorators: { multi: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\n/** Used to generate unique ID for each accordion item. */\nlet nextId = 0;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    /** Whether the AccordionItem is expanded. */\n    get expanded() {\n        return this._expanded;\n    }\n    set expanded(expanded) {\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /** Subscription to openAll/closeAll events. */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /** Event emitted every time the AccordionItem is closed. */\n        this.closed = new EventEmitter();\n        /** Event emitted every time the AccordionItem is opened. */\n        this.opened = new EventEmitter();\n        /** Event emitted when the AccordionItem is destroyed. */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * @docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /** The unique AccordionItem id. */\n        this.id = `cdk-accordion-child-${nextId++}`;\n        this._expanded = false;\n        /** Whether the AccordionItem is disabled. */\n        this.disabled = false;\n        /** Unregister function for _expansionDispatcher. */\n        this._removeUniqueSelectionListener = () => { };\n        this._removeUniqueSelectionListener = _expansionDispatcher.listen((id, accordionId) => {\n            if (this.accordion &&\n                !this.accordion.multi &&\n                this.accordion.id === accordionId &&\n                this.id !== id) {\n                this.expanded = false;\n            }\n        });\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe(expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkAccordionItem, deps: [{ token: CDK_ACCORDION, optional: true, skipSelf: true }, { token: i0.ChangeDetectorRef }, { token: i1.UniqueSelectionDispatcher }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.2.0\", type: CdkAccordionItem, isStandalone: true, selector: \"cdk-accordion-item, [cdkAccordionItem]\", inputs: { expanded: [\"expanded\", \"expanded\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, providers: [\n            // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n            // registering to the same accordion.\n            { provide: CDK_ACCORDION, useValue: undefined },\n        ], exportAs: [\"cdkAccordionItem\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkAccordionItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                    exportAs: 'cdkAccordionItem',\n                    providers: [\n                        // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n                        // registering to the same accordion.\n                        { provide: CDK_ACCORDION, useValue: undefined },\n                    ],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: CdkAccordion, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_ACCORDION]\n                }, {\n                    type: SkipSelf\n                }] }, { type: i0.ChangeDetectorRef }, { type: i1.UniqueSelectionDispatcher }], propDecorators: { closed: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], destroyed: [{\n                type: Output\n            }], expandedChange: [{\n                type: Output\n            }], expanded: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\nclass CdkAccordionModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkAccordionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkAccordionModule, imports: [CdkAccordion, CdkAccordionItem], exports: [CdkAccordion, CdkAccordionItem] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkAccordionModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkAccordionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkAccordion, CdkAccordionItem],\n                    exports: [CdkAccordion, CdkAccordionItem],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_ACCORDION, CdkAccordion, CdkAccordionItem, CdkAccordionModule };\n","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, EventEmitter, ANIMATION_MODULE_TYPE, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, SkipSelf, Input, Output, ContentChild, ViewChild, numberAttribute, Host, Attribute, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i2 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/cdk/collections';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nconst matExpansionAnimations = {\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        // Clear the `visibility` while open, otherwise the content will be visible when placed in\n        // a parent that's `visibility: hidden`, because `visibility` doesn't apply to descendants\n        // that have a `visibility` of their own (see #27436).\n        state('expanded', style({ height: '*', visibility: '' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n};\n\n/**\n * Token used to provide a `MatExpansionPanel` to `MatExpansionPanelContent`.\n * Used to avoid circular imports between `MatExpansionPanel` and `MatExpansionPanelContent`.\n */\nconst MAT_EXPANSION_PANEL = new InjectionToken('MAT_EXPANSION_PANEL');\n\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    constructor(_template, _expansionPanel) {\n        this._template = _template;\n        this._expansionPanel = _expansionPanel;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanelContent, deps: [{ token: i0.TemplateRef }, { token: MAT_EXPANSION_PANEL, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatExpansionPanelContent, isStandalone: true, selector: \"ng-template[matExpansionPanelContent]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanelContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matExpansionPanelContent]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_EXPANSION_PANEL]\n                }, {\n                    type: Optional\n                }] }] });\n\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the default\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    /** Whether the toggle indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    set hideToggle(value) {\n        this._hideToggle = value;\n    }\n    /** The position of the expansion indicator. */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /** An event emitted after the body's expansion animation happens. */\n        this.afterExpand = new EventEmitter();\n        /** An event emitted after the body's collapse animation happens. */\n        this.afterCollapse = new EventEmitter();\n        /** Stream that emits for changes in `@Input` properties. */\n        this._inputChanges = new Subject();\n        /** ID for the associated header element. Used for a11y labelling. */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        this.accordion = accordion;\n        this._document = _document;\n        this._animationsDisabled = _animationMode === 'NoopAnimations';\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /** Gets the expanded state string. */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /** Toggles the expanded state of the expansion panel. */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /** Sets the expanded state of the expansion panel to false. */\n    close() {\n        this.expanded = false;\n    }\n    /** Sets the expanded state of the expansion panel to true. */\n    open() {\n        this.expanded = true;\n    }\n    ngAfterContentInit() {\n        if (this._lazyContent && this._lazyContent._expansionPanel === this) {\n            // Render the content as soon as the panel becomes open.\n            this.opened\n                .pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1))\n                .subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._inputChanges.complete();\n    }\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n    _containsFocus() {\n        if (this._body) {\n            const focusedElement = this._document.activeElement;\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n    /** Called when the expansion animation has started. */\n    _animationStarted(event) {\n        if (!isInitialAnimation(event) && !this._animationsDisabled && this._body) {\n            // Prevent the user from tabbing into the content while it's animating.\n            // TODO(crisbeto): maybe use `inert` to prevent focus from entering while closed as well\n            // instead of `visibility`? Will allow us to clean up some code but needs more testing.\n            this._body?.nativeElement.setAttribute('inert', '');\n        }\n    }\n    /** Called when the expansion animation has finished. */\n    _animationDone(event) {\n        if (!isInitialAnimation(event)) {\n            if (event.toState === 'expanded') {\n                this.afterExpand.emit();\n            }\n            else if (event.toState === 'collapsed') {\n                this.afterCollapse.emit();\n            }\n            // Re-enable tabbing once the animation is finished.\n            if (!this._animationsDisabled && this._body) {\n                this._body.nativeElement.removeAttribute('inert');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanel, deps: [{ token: MAT_ACCORDION, optional: true, skipSelf: true }, { token: i0.ChangeDetectorRef }, { token: i1.UniqueSelectionDispatcher }, { token: i0.ViewContainerRef }, { token: DOCUMENT }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"17.2.0\", type: MatExpansionPanel, isStandalone: true, selector: \"mat-expansion-panel\", inputs: { hideToggle: [\"hideToggle\", \"hideToggle\", booleanAttribute], togglePosition: \"togglePosition\" }, outputs: { afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, host: { properties: { \"class.mat-expanded\": \"expanded\", \"class._mat-animation-noopable\": \"_animationsDisabled\", \"class.mat-expansion-panel-spacing\": \"_hasSpacing()\" }, classAttribute: \"mat-expansion-panel\" }, providers: [\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: undefined },\n            { provide: MAT_EXPANSION_PANEL, useExisting: MatExpansionPanel },\n        ], queries: [{ propertyName: \"_lazyContent\", first: true, predicate: MatExpansionPanelContent, descendants: true }], viewQueries: [{ propertyName: \"_body\", first: true, predicate: [\"body\"], descendants: true }], exportAs: [\"matExpansionPanel\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.start)=\\\"_animationStarted($event)\\\"\\n     (@bodyExpansion.done)=\\\"_animationDone($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\", styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative;background:var(--mat-expansion-container-background-color);color:var(--mat-expansion-container-text-color);border-radius:var(--mat-expansion-container-shape)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:var(--mat-expansion-container-shape);border-top-left-radius:var(--mat-expansion-container-shape)}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:var(--mat-expansion-container-shape);border-bottom-left-radius:var(--mat-expansion-container-shape)}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible;font-family:var(--mat-expansion-container-text-font);font-size:var(--mat-expansion-container-text-size);font-weight:var(--mat-expansion-container-text-weight);line-height:var(--mat-expansion-container-text-line-height);letter-spacing:var(--mat-expansion-container-text-tracking)}.mat-expansion-panel-content[style*=\\\"visibility: hidden\\\"] *{visibility:hidden !important}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px;border-top-color:var(--mat-expansion-actions-divider-color)}.mat-action-row .mat-button-base,.mat-action-row .mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row .mat-button-base,[dir=rtl] .mat-action-row .mat-mdc-button-base{margin-left:0;margin-right:8px}\"], dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matExpansionAnimations.bodyExpansion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanel, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-expansion-panel', exportAs: 'matExpansionPanel', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [matExpansionAnimations.bodyExpansion], providers: [\n                        // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                        // to the same accordion.\n                        { provide: MAT_ACCORDION, useValue: undefined },\n                        { provide: MAT_EXPANSION_PANEL, useExisting: MatExpansionPanel },\n                    ], host: {\n                        'class': 'mat-expansion-panel',\n                        '[class.mat-expanded]': 'expanded',\n                        '[class._mat-animation-noopable]': '_animationsDisabled',\n                        '[class.mat-expansion-panel-spacing]': '_hasSpacing()',\n                    }, standalone: true, imports: [CdkPortalOutlet], template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.start)=\\\"_animationStarted($event)\\\"\\n     (@bodyExpansion.done)=\\\"_animationDone($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\", styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative;background:var(--mat-expansion-container-background-color);color:var(--mat-expansion-container-text-color);border-radius:var(--mat-expansion-container-shape)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:var(--mat-expansion-container-shape);border-top-left-radius:var(--mat-expansion-container-shape)}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:var(--mat-expansion-container-shape);border-bottom-left-radius:var(--mat-expansion-container-shape)}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible;font-family:var(--mat-expansion-container-text-font);font-size:var(--mat-expansion-container-text-size);font-weight:var(--mat-expansion-container-text-weight);line-height:var(--mat-expansion-container-text-line-height);letter-spacing:var(--mat-expansion-container-text-tracking)}.mat-expansion-panel-content[style*=\\\"visibility: hidden\\\"] *{visibility:hidden !important}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px;border-top-color:var(--mat-expansion-actions-divider-color)}.mat-action-row .mat-button-base,.mat-action-row .mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row .mat-button-base,[dir=rtl] .mat-action-row .mat-mdc-button-base{margin-left:0;margin-right:8px}\"] }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [MAT_ACCORDION]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i1.UniqueSelectionDispatcher }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n                }, {\n                    type: Optional\n                }] }], propDecorators: { hideToggle: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], togglePosition: [{\n                type: Input\n            }], afterExpand: [{\n                type: Output\n            }], afterCollapse: [{\n                type: Output\n            }], _lazyContent: [{\n                type: ContentChild,\n                args: [MatExpansionPanelContent]\n            }], _body: [{\n                type: ViewChild,\n                args: ['body']\n            }] } });\n/** Checks whether an animation is the initial setup animation. */\nfunction isInitialAnimation(event) {\n    return event.fromState === 'void';\n}\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelActionRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanelActionRow, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatExpansionPanelActionRow, isStandalone: true, selector: \"mat-action-row\", host: { classAttribute: \"mat-action-row\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanelActionRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-action-row',\n                    host: {\n                        class: 'mat-action-row',\n                    },\n                    standalone: true,\n                }]\n        }] });\n\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions, _animationMode, tabIndex) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        /** Tab index of the header. */\n        this.tabIndex = 0;\n        const accordionHideToggleChange = panel.accordion\n            ? panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition'])))\n            : EMPTY;\n        this.tabIndex = parseInt(tabIndex || '') || 0;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription = merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n            return !!(changes['hideToggle'] || changes['disabled'] || changes['togglePosition']);\n        }))).subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * @docs-private\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /** Toggles the expanded state of the panel. */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /** Gets whether the panel is expanded. */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /** Gets the expanded state string of the panel. */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /** Gets the panel id. */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /** Gets the toggle position for the header. */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /** Gets whether the expand indicator should be shown. */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n    _getHeaderHeight() {\n        const isExpanded = this._isExpanded();\n        if (isExpanded && this.expandedHeight) {\n            return this.expandedHeight;\n        }\n        else if (!isExpanded && this.collapsedHeight) {\n            return this.collapsedHeight;\n        }\n        return null;\n    }\n    /** Handle keydown event calling to toggle() if appropriate. */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._element).subscribe(origin => {\n            if (origin && this.panel.accordion) {\n                this.panel.accordion._handleHeaderFocus(this);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanelHeader, deps: [{ token: MatExpansionPanel, host: true }, { token: i0.ElementRef }, { token: i2.FocusMonitor }, { token: i0.ChangeDetectorRef }, { token: MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.2.0\", type: MatExpansionPanelHeader, isStandalone: true, selector: \"mat-expansion-panel-header\", inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\", tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))] }, host: { attributes: { \"role\": \"button\" }, listeners: { \"click\": \"_toggle()\", \"keydown\": \"_keydown($event)\" }, properties: { \"attr.id\": \"panel._headerId\", \"attr.tabindex\": \"disabled ? -1 : tabIndex\", \"attr.aria-controls\": \"_getPanelId()\", \"attr.aria-expanded\": \"_isExpanded()\", \"attr.aria-disabled\": \"panel.disabled\", \"class.mat-expanded\": \"_isExpanded()\", \"class.mat-expansion-toggle-indicator-after\": \"_getTogglePosition() === 'after'\", \"class.mat-expansion-toggle-indicator-before\": \"_getTogglePosition() === 'before'\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"style.height\": \"_getHeaderHeight()\" }, classAttribute: \"mat-expansion-panel-header mat-focus-indicator\" }, ngImport: i0, template: \"<span class=\\\"mat-content\\\" [class.mat-content-hide-toggle]=\\\"!_showToggle()\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n\\n@if (_showToggle()) {\\n  <span [@indicatorRotate]=\\\"_getExpandedState()\\\" class=\\\"mat-expansion-indicator\\\">\\n    <svg\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n      viewBox=\\\"0 -960 960 960\\\"\\n      aria-hidden=\\\"true\\\"\\n      focusable=\\\"false\\\">\\n      <path d=\\\"M480-345 240-585l56-56 184 184 184-184 56 56-240 240Z\\\"/>\\n    </svg>\\n  </span>\\n}\\n\", styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-expansion-header-collapsed-state-height);font-family:var(--mat-expansion-header-text-font);font-size:var(--mat-expansion-header-text-size);font-weight:var(--mat-expansion-header-text-weight);line-height:var(--mat-expansion-header-text-line-height);letter-spacing:var(--mat-expansion-header-text-tracking)}.mat-expansion-panel-header.mat-expanded{height:var(--mat-expansion-header-expanded-state-height)}.mat-expansion-panel-header[aria-disabled=true]{color:var(--mat-expansion-header-disabled-state-text-color)}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-header-hover-state-layer-color)}@media(hover: none){.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-container-background-color)}}.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused{background:var(--mat-expansion-header-focus-state-layer-color)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-content.mat-content-hide-toggle{margin-right:8px}[dir=rtl] .mat-content.mat-content-hide-toggle{margin-right:0;margin-left:8px}.mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-left:24px;margin-right:0}[dir=rtl] .mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-right:24px;margin-left:0}.mat-expansion-panel-header-title{color:var(--mat-expansion-header-text-color)}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;flex-basis:0;margin-right:16px;align-items:center}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description{color:inherit}.mat-expansion-panel-header-description{flex-grow:2;color:var(--mat-expansion-header-description-color)}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle;color:var(--mat-expansion-header-indicator-color);display:inline-block;display:var(--mat-expansion-legacy-header-indicator-display, inline-block)}.mat-expansion-indicator svg{width:24px;height:24px;margin:0 -8px;vertical-align:middle;fill:var(--mat-expansion-header-indicator-color);display:none;display:var(--mat-expansion-header-indicator-display, none)}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}\"], animations: [matExpansionAnimations.indicatorRotate], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanelHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-expansion-panel-header', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [matExpansionAnimations.indicatorRotate], host: {\n                        'class': 'mat-expansion-panel-header mat-focus-indicator',\n                        'role': 'button',\n                        '[attr.id]': 'panel._headerId',\n                        '[attr.tabindex]': 'disabled ? -1 : tabIndex',\n                        '[attr.aria-controls]': '_getPanelId()',\n                        '[attr.aria-expanded]': '_isExpanded()',\n                        '[attr.aria-disabled]': 'panel.disabled',\n                        '[class.mat-expanded]': '_isExpanded()',\n                        '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                        '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        '[style.height]': '_getHeaderHeight()',\n                        '(click)': '_toggle()',\n                        '(keydown)': '_keydown($event)',\n                    }, standalone: true, template: \"<span class=\\\"mat-content\\\" [class.mat-content-hide-toggle]=\\\"!_showToggle()\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n\\n@if (_showToggle()) {\\n  <span [@indicatorRotate]=\\\"_getExpandedState()\\\" class=\\\"mat-expansion-indicator\\\">\\n    <svg\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n      viewBox=\\\"0 -960 960 960\\\"\\n      aria-hidden=\\\"true\\\"\\n      focusable=\\\"false\\\">\\n      <path d=\\\"M480-345 240-585l56-56 184 184 184-184 56 56-240 240Z\\\"/>\\n    </svg>\\n  </span>\\n}\\n\", styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-expansion-header-collapsed-state-height);font-family:var(--mat-expansion-header-text-font);font-size:var(--mat-expansion-header-text-size);font-weight:var(--mat-expansion-header-text-weight);line-height:var(--mat-expansion-header-text-line-height);letter-spacing:var(--mat-expansion-header-text-tracking)}.mat-expansion-panel-header.mat-expanded{height:var(--mat-expansion-header-expanded-state-height)}.mat-expansion-panel-header[aria-disabled=true]{color:var(--mat-expansion-header-disabled-state-text-color)}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-header-hover-state-layer-color)}@media(hover: none){.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-container-background-color)}}.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused{background:var(--mat-expansion-header-focus-state-layer-color)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-content.mat-content-hide-toggle{margin-right:8px}[dir=rtl] .mat-content.mat-content-hide-toggle{margin-right:0;margin-left:8px}.mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-left:24px;margin-right:0}[dir=rtl] .mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-right:24px;margin-left:0}.mat-expansion-panel-header-title{color:var(--mat-expansion-header-text-color)}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;flex-basis:0;margin-right:16px;align-items:center}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description{color:inherit}.mat-expansion-panel-header-description{flex-grow:2;color:var(--mat-expansion-header-description-color)}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle;color:var(--mat-expansion-header-indicator-color);display:inline-block;display:var(--mat-expansion-legacy-header-indicator-display, inline-block)}.mat-expansion-indicator svg{width:24px;height:24px;margin:0 -8px;vertical-align:middle;fill:var(--mat-expansion-header-indicator-color);display:none;display:var(--mat-expansion-header-indicator-display, none)}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}\"] }]\n        }], ctorParameters: () => [{ type: MatExpansionPanel, decorators: [{\n                    type: Host\n                }] }, { type: i0.ElementRef }, { type: i2.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }], propDecorators: { expandedHeight: [{\n                type: Input\n            }], collapsedHeight: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                    }]\n            }] } });\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelDescription {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanelDescription, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatExpansionPanelDescription, isStandalone: true, selector: \"mat-panel-description\", host: { classAttribute: \"mat-expansion-panel-header-description\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanelDescription, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-panel-description',\n                    host: {\n                        class: 'mat-expansion-panel-header-description',\n                    },\n                    standalone: true,\n                }]\n        }] });\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelTitle {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanelTitle, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatExpansionPanelTitle, isStandalone: true, selector: \"mat-panel-title\", host: { classAttribute: \"mat-expansion-panel-header-title\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanelTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-panel-title',\n                    host: {\n                        class: 'mat-expansion-panel-header-title',\n                    },\n                    standalone: true,\n                }]\n        }] });\n\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /** Headers belonging to this accordion. */\n        this._ownHeaders = new QueryList();\n        /** Whether the expansion indicator should be hidden. */\n        this.hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /** The position of the expansion indicator. */\n        this.togglePosition = 'after';\n    }\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((headers) => {\n            this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n            this._ownHeaders.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n    }\n    /** Handles keyboard events coming in from the panel headers. */\n    _handleHeaderKeydown(event) {\n        this._keyManager.onKeydown(event);\n    }\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._keyManager?.destroy();\n        this._ownHeaders.destroy();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatAccordion, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.2.0\", type: MatAccordion, isStandalone: true, selector: \"mat-accordion\", inputs: { hideToggle: [\"hideToggle\", \"hideToggle\", booleanAttribute], displayMode: \"displayMode\", togglePosition: \"togglePosition\" }, host: { properties: { \"class.mat-accordion-multi\": \"this.multi\" }, classAttribute: \"mat-accordion\" }, providers: [\n            {\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion,\n            },\n        ], queries: [{ propertyName: \"_headers\", predicate: MatExpansionPanelHeader, descendants: true }], exportAs: [\"matAccordion\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatAccordion, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-accordion',\n                    exportAs: 'matAccordion',\n                    providers: [\n                        {\n                            provide: MAT_ACCORDION,\n                            useExisting: MatAccordion,\n                        },\n                    ],\n                    host: {\n                        class: 'mat-accordion',\n                        // Class binding which is only used by the test harness as there is no other\n                        // way for the harness to detect if multiple panel support is enabled.\n                        '[class.mat-accordion-multi]': 'this.multi',\n                    },\n                    standalone: true,\n                }]\n        }], propDecorators: { _headers: [{\n                type: ContentChildren,\n                args: [MatExpansionPanelHeader, { descendants: true }]\n            }], hideToggle: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], displayMode: [{\n                type: Input\n            }], togglePosition: [{\n                type: Input\n            }] } });\n\nclass MatExpansionModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionModule, imports: [MatCommonModule,\n            CdkAccordionModule,\n            PortalModule,\n            MatAccordion,\n            MatExpansionPanel,\n            MatExpansionPanelActionRow,\n            MatExpansionPanelHeader,\n            MatExpansionPanelTitle,\n            MatExpansionPanelDescription,\n            MatExpansionPanelContent], exports: [MatAccordion,\n            MatExpansionPanel,\n            MatExpansionPanelActionRow,\n            MatExpansionPanelHeader,\n            MatExpansionPanelTitle,\n            MatExpansionPanelDescription,\n            MatExpansionPanelContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionModule, imports: [MatCommonModule,\n            CdkAccordionModule,\n            PortalModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        CdkAccordionModule,\n                        PortalModule,\n                        MatAccordion,\n                        MatExpansionPanel,\n                        MatExpansionPanelActionRow,\n                        MatExpansionPanelHeader,\n                        MatExpansionPanelTitle,\n                        MatExpansionPanelDescription,\n                        MatExpansionPanelContent,\n                    ],\n                    exports: [\n                        MatAccordion,\n                        MatExpansionPanel,\n                        MatExpansionPanelActionRow,\n                        MatExpansionPanelHeader,\n                        MatExpansionPanelTitle,\n                        MatExpansionPanelDescription,\n                        MatExpansionPanelContent,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations };\n"],"names":["i0","InjectionToken","booleanAttribute","Directive","Input","EventEmitter","Optional","Inject","SkipSelf","Output","NgModule","i1","Subject","Subscription","nextId$1","CDK_ACCORDION","CdkAccordion","constructor","_stateChanges","_openCloseAllActions","id","multi","openAll","next","closeAll","ngOnChanges","changes","ngOnDestroy","complete","_","ɵfac","CdkAccordion_Factory","t","_2","ɵdir","ɵɵdefineDirective","type","selectors","inputs","ɵɵInputFlags","HasDecoratorInputTransform","exportAs","standalone","features","ɵɵProvidersFeature","provide","useExisting","ɵɵInputTransformsFeature","ɵɵNgOnChangesFeature","ngDevMode","ɵsetClassMetadata","args","selector","providers","transform","nextId","CdkAccordionItem","expanded","_expanded","expandedChange","emit","opened","accordionId","accordion","_expansionDispatcher","notify","closed","_changeDetectorRef","markForCheck","_openCloseAllSubscription","EMPTY","destroyed","disabled","_removeUniqueSelectionListener","listen","_subscribeToOpenCloseAllActions","unsubscribe","toggle","close","open","subscribe","CdkAccordionItem_Factory","ɵɵdirectiveInject","ChangeDetectorRef","UniqueSelectionDispatcher","outputs","useValue","undefined","decorators","CdkAccordionModule","CdkAccordionModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","exports","TemplatePortal","CdkPortalOutlet","PortalModule","ANIMATION_MODULE_TYPE","Component","ViewEncapsulation","ChangeDetectionStrategy","ContentChild","ViewChild","numberAttribute","Host","Attribute","QueryList","ContentChildren","MatCommonModule","i2","FocusKeyManager","startWith","filter","take","ENTER","hasModifierKey","SPACE","merge","trigger","state","style","transition","animate","DOCUMENT","_c0","_c1","_c2","MatExpansionPanel_ng_template_5_Template","rf","ctx","_c3","_c4","MatExpansionPanelHeader_Conditional_4_Template","ɵɵelementStart","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵproperty","_getExpandedState","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","bodyExpansion","height","visibility","MAT_EXPANSION_PANEL","MatExpansionPanelContent","_template","_expansionPanel","MatExpansionPanelContent_Factory","TemplateRef","uniqueId","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","MatExpansionPanel","hideToggle","_hideToggle","value","togglePosition","_togglePosition","_uniqueSelectionDispatcher","_viewContainerRef","_document","_animationMode","defaultOptions","afterExpand","afterCollapse","_inputChanges","_headerId","_animationsDisabled","_hasSpacing","displayMode","ngAfterContentInit","_lazyContent","pipe","_portal","_containsFocus","_body","focusedElement","activeElement","bodyElement","nativeElement","contains","_animationStarted","event","isInitialAnimation","setAttribute","_animationDone","toState","removeAttribute","MatExpansionPanel_Factory","ViewContainerRef","ɵcmp","ɵɵdefineComponent","contentQueries","MatExpansionPanel_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatExpansionPanel_Query","ɵɵviewQuery","hostAttrs","hostVars","hostBindings","MatExpansionPanel_HostBindings","ɵɵclassProp","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","ngContentSelectors","decls","vars","consts","template","MatExpansionPanel_Template","_r1","ɵɵgetCurrentView","ɵɵprojectionDef","ɵɵprojection","ɵɵlistener","MatExpansionPanel_Template_div_animation_bodyExpansion_start_1_listener","$event","ɵɵrestoreView","ɵɵresetView","MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener","ɵɵtemplate","ɵɵadvance","ɵɵattribute","dependencies","styles","encapsulation","data","animation","changeDetection","None","OnPush","animations","host","fromState","MatExpansionPanelActionRow","MatExpansionPanelActionRow_Factory","class","MatExpansionPanelHeader","panel","_element","_focusMonitor","tabIndex","_parentChangeSubscription","accordionHideToggleChange","parseInt","focusVia","expandedHeight","collapsedHeight","_toggle","_isExpanded","_getPanelId","_getTogglePosition","_showToggle","_getHeaderHeight","isExpanded","_keydown","keyCode","preventDefault","_handleHeaderKeydown","focus","origin","options","ngAfterViewInit","monitor","_handleHeaderFocus","stopMonitoring","MatExpansionPanelHeader_Factory","ElementRef","FocusMonitor","ɵɵinjectAttribute","MatExpansionPanelHeader_HostBindings","MatExpansionPanelHeader_click_HostBindingHandler","MatExpansionPanelHeader_keydown_HostBindingHandler","ɵɵstyleProp","MatExpansionPanelHeader_Template","ɵɵconditional","MatExpansionPanelDescription","MatExpansionPanelDescription_Factory","MatExpansionPanelTitle","MatExpansionPanelTitle_Factory","MatAccordion","arguments","_ownHeaders","_headers","headers","reset","header","notifyOnChanges","_keyManager","withWrap","withHomeAndEnd","onKeydown","updateActiveItem","destroy","ɵMatAccordion_BaseFactory","MatAccordion_Factory","ɵɵgetInheritedFactory","MatAccordion_ContentQueries","MatAccordion_HostBindings","descendants","MatExpansionModule","MatExpansionModule_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}