{"version":3,"sources":["C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_baseTimes.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_isIndex.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_arrayLikeKeys.js","./src/app/shared/helpers/load-scripts.helper.ts","../edit/shared/services/global-configuration.service.ts","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_getAllKeys.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_nativeCreate.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_hashGet.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_hashHas.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_Hash.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_hashClear.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_hashDelete.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_hashSet.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_getMapData.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_isKeyable.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_MapCache.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_mapCacheClear.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_mapCacheDelete.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_mapCacheGet.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_mapCacheHas.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_mapCacheSet.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_Stack.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_stackClear.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_stackDelete.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_stackGet.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_stackHas.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_stackSet.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/keys.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_listCacheClear.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_assocIndexOf.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_listCacheDelete.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_ListCache.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_listCacheGet.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_listCacheHas.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_listCacheSet.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/eq.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/stubArray.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_arrayPush.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/rxjs/_esm5/internal/observable/zip.js","../edit/eav-material-controls/dialogs/snack-bar-save-errors/snack-bar-save-errors.component.html","../edit/eav-material-controls/dialogs/snack-bar-save-errors/snack-bar-save-errors.component.ts","../edit/eav-material-controls/dialogs/snack-bar-unsaved-changes/snack-bar-unsaved-changes.component.ts","../edit/eav-material-controls/dialogs/snack-bar-unsaved-changes/snack-bar-unsaved-changes.component.html","../edit/shared/models/json-format-v1/value1.ts","../edit/shared/models/json-format-v1/attributes1.ts","../edit/shared/models/json-format-v1/for1.ts","../edit/shared/models/json-format-v1/type1.ts","../edit/shared/models/json-format-v1/entity1.ts","../edit/shared/models/json-format-v1/json-item1.ts","../edit/eav-material-controls/input-types/base/base.component.ts","../edit/eav-material-controls/adam/adam-browser/adam-browser.models.ts","../edit/shared/models/feature/feature.ts","../edit/shared/store/ngrx-data/feature.service.ts","../edit/shared/directives/paste-clipboard-image.directive.ts","../shared/features-guids.constants.ts","../edit/eav-material-controls/adam/adam-browser/adam-browser.component.html","../edit/eav-material-controls/adam/adam-browser/adam-browser.component.ts","../edit/eav-material-controls/adam/adam-hint/adam-hint.component.ts","../edit/eav-material-controls/adam/adam-hint/adam-hint.component.html","../edit/eav-material-controls/adam/adam-attach-wrapper/adam-attach-wrapper.component.ts","../edit/eav-material-controls/adam/adam-attach-wrapper/adam-attach-wrapper.component.html","../edit/eav-material-controls/adam/dropzone-wrapper/dropzone-wrapper.models.ts","../edit/eav-material-controls/adam/dropzone-wrapper/dropzone-wrapper.component.ts","../edit/eav-material-controls/adam/dropzone-wrapper/dropzone-wrapper.component.html","../edit/eav-dynamic-form/decorators/input-type.decorator.ts","../edit/shared/directives/change-anchor-target.directive.ts","../edit/eav-material-controls/wrappers/field-helper-text/field-helper-text.component.html","../edit/eav-material-controls/wrappers/field-helper-text/field-helper-text.component.ts","../edit/eav-material-controls/input-types/boolean/boolean-default/boolean-default.component.html","../edit/eav-material-controls/input-types/boolean/boolean-default/boolean-default.component.ts","../edit/eav-material-controls/input-types/boolean/boolean-tristate/boolean-tristate.component.html","../edit/eav-material-controls/input-types/boolean/boolean-tristate/boolean-tristate.component.ts","../edit/eav-material-controls/input-types/custom/custom-default/custom-default.component.ts","../edit/eav-material-controls/input-types/custom/custom-default/custom-default.component.html","../edit/eav-material-controls/input-types/custom/custom-json-editor/custom-json-editor.component.html","../edit/eav-material-controls/input-types/custom/custom-json-editor/custom-json-editor.component.ts","../edit/eav-material-controls/input-types/custom/external-web-component/connector/models/connector-instance.model.ts","../edit/eav-material-controls/input-types/custom/external-web-component/connector/connector.helper.ts","../edit/shared/store/ngrx-data/content-type.service.ts","../edit/eav-material-controls/input-types/custom/external-web-component/connector/connector.component.ts","../edit/eav-material-controls/input-types/custom/external-web-component/connector/connector.component.html","../edit/eav-material-controls/input-types/custom/external-web-component/external-web-component.component.html","../edit/eav-material-controls/input-types/custom/external-web-component/external-web-component.component.ts","../edit/eav-material-controls/input-types/datetime/datetime-default/datetime-default.component.html","../edit/eav-material-controls/input-types/datetime/datetime-default/datetime-default.component.ts","../edit/eav-material-controls/input-types/empty/empty-default/empty-default.component.ts","../shared/field-mask.service.ts","../edit/eav-material-controls/input-types/entity/entity-default-search/entity-default-search.component.html","../edit/eav-material-controls/input-types/entity/entity-default-search/entity-default-search.component.ts","../edit/eav-material-controls/input-types/entity/entity-default/entity-default.helpers.ts","../edit/eav-material-controls/input-types/entity/entity-default-list/entity-default-list.component.html","../edit/eav-material-controls/input-types/entity/entity-default-list/entity-default-list.component.ts","../edit/eav-material-controls/input-types/entity/entity-default/entity-default.component.html","../edit/eav-material-controls/input-types/entity/entity-default/entity-default.component.ts","../edit/eav-material-controls/input-types/entity/entity-content-blocks/entity-content-blocks.component.ts","../edit/eav-material-controls/input-types/entity/entity-query/entity-query.component.ts","../edit/eav-material-controls/input-types/hyperlink/hyperlink-default/hyperlink-default.component.html","../edit/eav-material-controls/input-types/hyperlink/hyperlink-default/hyperlink-default.component.ts","../edit/eav-material-controls/input-types/hyperlink/hyperlink-library/hyperlink-library.component.ts","../edit/eav-material-controls/input-types/number/number-default/number-default.component.html","../edit/eav-material-controls/input-types/number/number-default/number-default.component.ts","../edit/eav-material-controls/input-types/string/string-default/string-default.component.html","../edit/eav-material-controls/input-types/string/string-default/string-default.component.ts","../edit/eav-material-controls/input-types/string/string-dropdown-query/string-dropdown-query.component.ts","../edit/eav-material-controls/input-types/string/string-dropdown/string-dropdown.component.html","../edit/eav-material-controls/input-types/string/string-dropdown/string-dropdown.component.ts","../edit/eav-material-controls/input-types/string/string-dropdown/string-dropdown.helpers.ts","../edit/eav-material-controls/input-types/string/string-font-icon-picker/string-font-icon-picker.component.html","../edit/eav-material-controls/input-types/string/string-font-icon-picker/string-font-icon-picker.component.ts","../edit/eav-material-controls/input-types/string/string-font-icon-picker/string-font-icon-picker.helpers.ts","../edit/eav-material-controls/input-types/string/string-template-picker/string-template-picker.constants.ts","../edit/eav-material-controls/input-types/string/string-template-picker/string-template-picker.component.html","../edit/eav-material-controls/input-types/string/string-template-picker/string-template-picker.component.ts","../edit/eav-material-controls/input-types/string/string-url-path/string-url-path.component.html","../edit/eav-material-controls/input-types/string/string-url-path/string-url-path.component.ts","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_SetCache.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_setCacheAdd.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_setCacheHas.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_arraySome.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_equalArrays.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_cacheHas.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_mapToArray.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_setToArray.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_equalByTag.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_equalObjects.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_baseIsEqualDeep.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/isEqual.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_baseIsEqual.js","../edit/shared/constants/translation-link.constants.ts","../edit/eav-material-controls/localization/link-to-other-language/link-to-other-language.constants.ts","../edit/eav-material-controls/localization/link-to-other-language/link-to-other-language.component.html","../edit/eav-material-controls/localization/link-to-other-language/link-to-other-language.component.ts","../edit/eav-material-controls/localization/link-to-other-language/link-to-other-language.helpers.ts","../edit/eav-material-controls/localization/translate-group-menu/translate-group-menu.helpers.ts","../edit/eav-material-controls/localization/translate-group-menu/translate-group-menu.component.html","../edit/eav-material-controls/localization/translate-group-menu/translate-group-menu.component.ts","../edit/eav-material-controls/wrappers/collapsible-wrapper/collapsible-wrapper.component.html","../edit/eav-material-controls/wrappers/collapsible-wrapper/collapsible-wrapper.component.ts","../edit/eav-material-controls/wrappers/collapsible-field-wrapper/collapsible-field-wrapper.component.ts","../edit/eav-material-controls/wrappers/collapsible-field-wrapper/collapsible-field-wrapper.component.html","../edit/eav-material-controls/wrappers/eav-localization-wrapper/eav-localization-wrapper.component.ts","../edit/eav-material-controls/wrappers/eav-localization-wrapper/eav-localization-wrapper.component.html","../edit/shared/animations/content-expand-animation.ts","../edit/eav-material-controls/wrappers/entity-expandable-wrapper/entity-expandable-wrapper.component.html","../edit/eav-material-controls/wrappers/entity-expandable-wrapper/entity-expandable-wrapper.component.ts","../edit/eav-material-controls/wrappers/expandable-wrapper/expandable-wrapper.component.html","../edit/eav-material-controls/wrappers/expandable-wrapper/expandable-wrapper.component.ts","../edit/eav-material-controls/wrappers/hidden-wrapper/hidden-wrapper.component.ts","../edit/eav-material-controls/wrappers/hidden-wrapper/hidden-wrapper.component.html","../edit/eav-material-controls/wrappers/hyperlink-default-expandable-wrapper/hyperlink-default-expandable-wrapper.component.html","../edit/eav-material-controls/wrappers/hyperlink-default-expandable-wrapper/hyperlink-default-expandable-wrapper.component.ts","../edit/eav-material-controls/wrappers/hyperlink-library-expandable-wrapper/hyperlink-library-expandable-wrapper.component.html","../edit/eav-material-controls/wrappers/hyperlink-library-expandable-wrapper/hyperlink-library-expandable-wrapper.component.ts","../edit/eav-dynamic-form/components/eav-field/eav-field.directive.ts","../edit/eav-dynamic-form/components/eav-form/eav-form.component.ts","../edit/eav-dynamic-form/components/eav-form/eav-form.component.html","../edit/eav-item-dialog/item-edit-form/item-edit-form.component.html","../edit/eav-item-dialog/item-edit-form/item-edit-form.component.ts","../edit/eav-item-dialog/multi-item-edit-form/multi-item-edit-form.constants.ts","../edit/eav-item-dialog/multi-item-edit-form/multi-item-edit-form.helpers.ts","../edit/eav-material-controls/dialogs/save-status-dialog/save-status-dialog.component.ts","../edit/eav-material-controls/dialogs/save-status-dialog/save-status-dialog.component.html","../edit/eav-material-controls/localization/eav-language-switcher/eav-language-switcher-services/center-selected-helper.ts","../edit/eav-material-controls/localization/eav-language-switcher/eav-language-switcher-services/eav-language-switcher.helpers.ts","../edit/eav-material-controls/localization/eav-language-switcher/eav-language-switcher-services/mouse-scroll-helper.ts","../edit/eav-material-controls/localization/eav-language-switcher/eav-language-switcher-services/show-shadows-helper.ts","../edit/eav-material-controls/localization/eav-language-switcher/eav-language-switcher.component.html","../edit/eav-material-controls/localization/eav-language-switcher/eav-language-switcher.component.ts","../edit/eav-item-dialog/multi-item-edit-form-header/multi-item-edit-form-header.component.html","../edit/eav-item-dialog/multi-item-edit-form-header/multi-item-edit-form-header.component.ts","../edit/eav-item-dialog/multi-item-edit-form-debug/multi-item-edit-form-debug.component.html","../edit/eav-item-dialog/multi-item-edit-form-debug/multi-item-edit-form-debug.component.ts","../edit/eav-item-dialog/multi-item-edit-form/multi-item-edit-form.component.html","../edit/eav-item-dialog/multi-item-edit-form/multi-item-edit-form.component.ts","../edit/shared/services/dropzone-dragging.helper.ts","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_baseGetAllKeys.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_Uint8Array.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_arrayFilter.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_getSymbols.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/reflect-metadata/Reflect.js"],"names":["reIsUint","value","length","type","test","Object","prototype","hasOwnProperty","inherited","isArr","isArray","isArg","isArguments","isBuff","isBuffer","isType","isTypedArray","skipIndexes","result","n","iteratee","index","Array","String","key","call","push","loadScripts","scriptObjects","callback","iteration","newCallback","bind","this","scrObj","global","window","scriptInDom","document","querySelector","src","addEventListener","once","scriptEl","createElement","head","appendChild","store","snackBar","loadDebugEnabled","debugEnabled","dispatch","toggleDebugEnabled","select","pipe","subscribe","enabled","open","duration","getDebugEnabled","GlobalConfigService","object","Hash","entries","clear","entry","set","__data__","size","has","get","data","undefined","map","MapCache","Stack","pairs","LARGE_ARRAY_SIZE","array","eq","splice","ListCache","pop","other","values","offset","zip","observables","_i","arguments","resultSelector","fromArray","lift","ZipOperator","subscriber","source","_super","ZipSubscriber","destination","create","_this","iterators","active","_next","StaticIterator","_complete","len","unsubscribe","i","iterator","stillUnsubscribed","add","complete","notifyInactive","checkIterators","hasValue","shouldComplete","args","next","hasCompleted","done","_tryresultSelector","apply","err","error","Subscriber","nextResult","StaticArrayIterator","ZipBufferIterator","parent","observable","buffer","isComplete","shift","notifyComplete","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","subscribeToResult","OuterSubscriber","snackBarData","fieldErrors","ngOnInit","SnackBarSaveErrorsComponent","snackRef","saveChanges","save","dismissWithAction","SnackBarUnsavedChangesComponent","eavValues","newValue1","forEach","eavValue","allDimensions","dimensions","d","join","eavAttributes","newAttribute1","Attributes1","keys","eavAttributeKey","entityFor","Target","Number","Guid","Id","Name","Version","Type","Attributes","Owner","Metadata","For","entity","attributes1","attributes","metaData1","createArray","metadata","for1","For1","Entity1","id","version","guid","Type1","name","owner","eavEntityArray","metaData1Array","eavEntity","Header","Entity","item","JsonItem1","header","eavService","validationMessagesService","subscription","Subscription","control","group","controls","config","field","settings$","label$","settings","placeholder$","Placeholder","required$","isRequired","invalid$","statusChanges","status","startWith","invalid","showValidation$","filter","value$","formValueChange$","formSet","formId","form","entityGuid","distinctUntilChanged","disabled$","formDisabledChange$","asObservable","formDisabledSet","disabled","ngOnDestroy","BaseComponent","rootSubfolder","fileFilter","allowAssetsInRoot","folderDepth","metadataContentTypes","usePortalRoot","showImagesOnly","autoLoad","enableSelect","subfolder","allowEdit","maxDepthReached","expires","isPublic","ui","createFeatureArray","features","featureList","f","Feature","public","serviceElementsFactory","loadFeatures","addAllToCache","isFeatureEnabled","isEnabled","entities$","take","feature","find","ftr","FeatureService","elementRef","featureService","eventListeners","elementType","nativeElement","pastableTextarea","pastableNonInputable","handleImageBound","handleImage","element","listener","eventListener","removeEventListener","event","image","getFile","detail","dropzone","uploadFile","newFile","file","formData","FormData","append","imageFileName","e","console","PasteClipboardImageDirective","adamService","fileTypeService","dnnContext","editRoutingService","zone","openUpload","adamConfig$","BehaviorSubject","items$","refreshOnChildClosed","url","$2sxc","http","apiUrl","ContentTypeName","pasteClipboardImage","adam","toggle","run","setConfig","getConfig","getConfig$","onItemClick","onItemUpload","refresh","fetchItems","addFullPath","adamConfig","expanded$","isExpanded","addFolder","folderName","prompt","res","del","confirm","deleteItem","editItemMetadata","adamItem","items","MetadataId","_metadataContentType","cmsObject","target","EntityId","goUp","includes","slice","lastIndexOf","getMetadataContentType","found","match","goIntoFolder","openUploadClick","emit","rename","newName","getAll","filteredItems","allowedFileTypes","split","extension","replace","trim","IsFolder","substring","_icon","getIconClass","_isMaterialIcon","isKnownType","_displaySize","Size","toFixed","AllowEdit","sort","a","b","toLocaleLowerCase","localeCompare","toString","newConfig","JSON","stringify","trackByFn","startDisabled","isExternal","oldConfig","AdamConfigInstance","newConfigKeys","startsWith","folders","oldDzConfig","newDzConfig","dzUrlParams","getUrlParams","newUrl","replaceUrlParam","uploadDisabled","childFormClosed","AdamBrowserComponent","height","overflow","AdamHintComponent","adamDisabled$","fullscreenAdam","inputType","HyperlinkLibrary","ngAfterViewInit","invisibleClickableRef","click","AdamAttachWrapperComponent","headers","acceptedFiles","maxFiles","parallelUploads","autoReset","errorReset","cancelReset","maxFilesize","paramName","maxThumbnailFilesize","dictDefaultMessage","addRemoveLinks","previewsContainer","clickable","dropzoneConfig$","dropzoneDisabled$","combineLatest","dropzoneConfig","onUploadError","dropzoneRef","reset","onUploadSuccess","response","Success","alert","Error","eavConfig","appId","sxc","webApi","DropzoneConfigInstance","uploadLimit","upload","chunked","defaultOptions","chunking","processFile","DropzoneWrapperComponent","InputType","annotation","Reflect","defineMetadata","runOutsideAngular","observer","MutationObserver","mutations","tagName","anchor","childAnchors","getElementsByTagName","observe","childList","subtree","disconnect","ChangeAnchorTargetDirective","disableError","hyperlinkDefaultWrapperFix","isFullText","description$","Notes","toggleHint","classList","contains","parentNode","getErrorMessage","FieldHelperTextComponent","TitleTrue","TitleFalse","BooleanDefaultComponent","wrapper","EavLocalizationWrapper","TitleIndeterminate","nextValue","patchValue","BooleanTristateComponent","CustomDefaultComponent","rowCount$","Rows","CustomJsonEditorComponent","_connectorHost","_experimental","ConnectorDataInstance","dialog","ConnectorDialogInstance","loadScript","testOrScripts","srcOrCallback","resolveTokens","script","getUrlPrefix","sxcVersion","clientValueChangeListeners","forceConnectorSave$","newValue","clientListener","update","onValueChange","componentTag","expand","close","customElContainerRef","customElName","translateService","contentTypeService","inputTypeService","dnnBridgeService","customEl","connector","buildConnector","destroy","removeChild","connectorHost","calculateRegularProps","experimental","calculateExperimentalProps","updateControl","allInputTypeNames","getContentTypeById","contentTypeId","calculateInputTypes","contentType","formGroup","isExpanded$","updateField","setFocused","focused","focused$","openPagePicker","params","getUrlOfId","path","dirty","markAsDirty","touched","markAsTouched","addContentTypes","rawContentTypes","builtContentTypes","rawCT","addManyToCache","contentTypes","ContentTypeService","history","state","connectorCreator","ConnectorComponent","scriptsLoaderService","loading$","loadAssets","getInputTypeById","assets","AngularAssets","load","assetsLoaded","ExternalWebComponentComponent","translate","dateAdapter","ngxDateTimeAdapter","currentLang","setLocale","useTimePicker$","UseTimePicker","DatetimeDefaultComponent","EmptyDefaultComponent","mask","model","changeEvent","overloadPreCleanValues","fields","findFields","unwrapField","subscriptions","fieldList","preClean","watchAllFields","resolve","zoneId","replaceValue","cleaned","matches","staticName","onChange","maybeNew","valueSub","valueChanges","globalConfigService","toggleFreeTextMode","addSelected","editEntity","filteredEntities","debugEnabled$","ngOnChanges","changes","availableEntities","currentValue","autocompleteRef","filterSelectionList","getPlaceholder","instant","toggleFreeText","option","Text","toLowerCase","Value","optionSelected","blur","insertNull","isOptionDisabled","selectedEntities","openNewEntityDialog","EntityDefaultSearchComponent","calculateSelectedEntities","fieldValue","separator","convertValueToArray","label","tooltip","isFreeTextOrNotFound","reorder","removeSelected","deleteEntity","drop","previousIndex","currentIndex","edit","removeItem","EntityDefaultListComponent","entityService","useQuery","error$","freeTextMode$","disableAddNew$","entityCache$","calculateSettings","selectedEntities$","Separator","contentTypeMask","FieldMaskService","EntityType","updateAddNew","fetchAvailableEntities","fixedSettings","AllowMultiValue","EnableEdit","EnableCreate","EnableAddExisting","EnableRemove","EnableDelete","contentTypeName","getAvailableEntities","reorderIndexes","updateValue","props","title","delete","dismiss","res2","childFormResult","newItemGuid","action","valueArray","valueString","convertArrayToString","setTimeout","entitySearchComponent","focus","EntityDefaultComponent","EntityContentBlockComponent","queryService","paramsMask","UrlParameters","Query","StreamName","streamName","queryUrl","queryEntityMapping","Title","EntityQueryComponent","preview$","thumbnailUrl","thumbnailPreviewUrl","floatingText","isImage","icon","buttons$","Buttons","open$","attachAdam","setLink","CurrentValue","FileFilter","Paths","pagePickerCallback","urlLowered","preview","link","quote","qt","toggleAdam","setValue","ServerResourceMapping","FullPath","HyperlinkDefaultComponent","DropzoneWrapper","HyperlinkDefaultExpandableWrapper","AdamAttachWrapper","attachAdamValidator","Required","adamValidation","AllowAssetsInRoot","FolderDepth","MetadataContentTypes","required","setValidators","validation","validators","validateAdam","adamItems","updateValueAndValidity","HyperlinkLibraryComponent","HyperlinkLibraryExpandableWrapper","min$","Min","max$","Max","NumberDefaultComponent","RowCount","StringDefaultComponent","Label","EnableTextEntry","StringDropdownQueryComponent","toggleFreeText$","enableTextEntry$","dropdownOptions$","dropdownValues","currentValueFound","options","DropdownValues","s","maybeWantedEmptyVal","val","StringDropdownComponent","class","iconOptions$","cssPrefix","CssPrefix","showPrefix","ShowPrefix","Files","newIconOptions","classPrefix","foundList","duplicateDetector","truncateLabel","styleSheets","sheet","rules","cssRules","j","rule","selectorText","selector","iconClass","indexOf","search","findAllIconsInCss","previewCss$","PreviewCss","filteredIcons$","iconList","StringFontIconPickerComponent","templateTypes","Token","ext","prefix","suggestion","assetsService","templateOptions$","activeSpec","templates","resetIfNotFound","typeWatcher","setFileConfig","locationWatcher","onLocationChange","setTemplateOptions","location","filtered","template","createTemplate","foundSlash","endsWith","fullPath","StringTemplatePickerComponent","lastAutoCopy","autoGenerateMask","AutoGenerateMask","allowSlashes","AllowSlashes","fieldMaskService","onSourcesChanged","clean","stripNonUrlCharacters","trimEnd","StringUrlPathComponent","SetCache","predicate","bitmask","customizer","equalFunc","stack","isPartial","arrLength","othLength","stacked","seen","arrValue","othValue","compared","othIndex","symbolProto","symbolValueOf","valueOf","objectTag","baseIsEqual","isObjectLike","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","tag","byteLength","byteOffset","message","convert","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","skipCtor","objValue","objCtor","constructor","othCtor","Translate","DontTranslate","MissingDefaultLangValue","LinkReadOnly","LinkReadWrite","LinkCopyFrom","NoTranslate","FromPrimary","FromOther","LinkShared","dialogData","languageService","languageInstanceService","TranslationLinks","TranslationLinkConstants","I18nKeys","I18nKeyConstants","selected$","showLanguages$","language","i18nKey","translationLink","findI18nKey","linkType","i18nRoot$","languages$","getCurrentLanguage","currentLanguage","lang","showLanguages","newSelected","findTranslationLink","selectLanguage","isOkDisabled","selected","isLanguageDisabled","languageKey","isEditableTranslationExist","attributeKey","defaultLanguage","LinkToOtherLanguageComponent","calculateSharedInfoMessage","TranslateGroupMenuHelpers","calculateShortDimensions","calculateEditAndReadDimensions","editableDimensions","readOnlyDimensions","infoMessage","editableExist","readOnlyExist","dimensionsMap","shortCurrentLanguage","dimension","shortNoReadOnly","shortDimension","itemService","translationLinkConstants","defaultLanguageMissingValue$","headerGroupSlotIsEmpty","translationState$","infoMessage$","infoMessageLabel$","fieldConfig","isParentGroup","of","currentLanguage$","defaultLanguage$","getDefaultLanguage","attributes$","selectAttributesByEntityId","entityId","subscribeToAttributeValues","subscribeMenuChange","subscribeToItemFromStore","subscribeToContentTypeFromStore","subscribeToCurrentLanguageFromStore","subscribeToDefaultLanguageFromStore","subscribeToEntityHeaderFromStore","toggleTranslateField","translateUnlink","openLinkToOtherLanguage","dialogRef","panelClass","autoFocus","width","keydownEvents","keyCode","navigator","platform","metaKey","ctrlKey","preventDefault","afterClosed","actionResult","triggerTranslation","isTranslateDisabled","removeItemAttributeDimension","defaultValue","getValueTranslation","fieldType","getFieldType","addAttributeValue","refreshControlConfig","linkToDefault","translateAll","setTranslationState","triggerLocalizationWrapperMenuChange","dontTranslateAll","copyFromAll","copyFrom","copyFromLanguageKey","attributeValueTranslation","isEditableOrReadonlyTranslationExist","updateItemAttributeValue","linkReadOnlyAll","linkReadOnly","addItemAttributeDimension","linkReadWriteAll","linkReadWrite","getTranslationStateClass","setControlDisable","readTranslationState","setInfoMessage","newTranslationState","disable","emitEvent","enable","translationExistsInDefault","isReadonlyTranslationExist","translateAllConfiguration","fieldSettings","translateSettings","fullSettings","getValidations","Group","SlotCanBeEmpty","selectHeaderByEntityId","SlotIsEmpty","selectItemById","attributeDef","attr","calculatedInputType","calculateInputType","isI18nDisabled","editableElements","readOnlyElements","localizationWrapperMenuChange$","TranslateGroupMenuComponent","collapse$","visibleInEditUI$","VisibleInEditUI","header$","DefaultCollapsed","slotCanBeEmpty$","slotIsEmpty$","itemTitle$","cType","defaultLang","getValueOrDefault","EditInstructions","toggleCollapse","toggleSlotIsEmpty","hdr","newHeader","updateItemHeader","CollapsibleWrapperComponent","CollapsibleFieldWrapperComponent","toggleTranslateField$","toggleTranslate","isOpen","EavLocalizationComponent","ContentExpandAnimation","maxHeight","bottomPixels","innerWidth","dialogIsOpen$","calculateBottomPixels","expandDialog","closeDialog","EntityExpandableWrapperComponent","previewContainerRef","dropzoneDraggingHelper","attach","backdropRef","detach","ExpandableWrapperComponent","HiddenWrapperComponent","adamButton$","pageButton$","HyperlinkDefaultExpandableWrapperComponent","adamItems$","HyperlinkLibraryExpandableWrapperComponent","resolver","container","components","controlConfiguration","createFieldOrGroup","fieldGroup","createGroupComponents","createComponent","wrappers","createComponentWrappers","componentType","readComponentType","ExternalWebComponent","inputTypeAnnotations","getMetadata","factory","resolveComponentFactory","ref","assign","instance","wrapperName","createWrapper","componentFactory","fieldComponent","EavFieldDirective","formBuilder","formSubmit","formValueChange","createControlsInFormGroup","submitOutside","valueIsChanged","valueKeys","valueKey","fieldConfigArray","addControl","createControl","initialValue","EavFormComponent","actions$","buildFieldsService","itemFormValueChange","setFormValues","getContentTypeId","contentType$","itemFields$","buildFields","formSaveObservable","updateItemAttributesValues","submit","valid","checkAreAllControlsDisabled","saveItem","allDisabled","controlKeys","formValues","entityValues","ItemEditFormComponent","Show","Hide","Branch","alphabetCompare","Modes","PublishModeConstants","publishMode","setMode","mode","SaveStatusDialogComponent","ngZone","moveThreshold","stopClick","checkIfMouseMoved","passive","lngButtonDown","saveInitialPosition","lngButtonClick","doMove","stopClickIfMouseMoved","evList","positionX","pageX","positionY","pageY","Math","abs","button","buttonOffset","getBoundingClientRect","left","buttonWidth","headerOffset","headerWidth","scrollLeft","removeRegionName","languageName","toLocaleUpperCase","areButtonsDisabled","registerScroll","headerDownListener","getSelection","removeAllRanges","oldScrollBehavior","getComputedStyle","getPropertyValue","style","scrollBehavior","doScroll","removeScroll","newPositionX","leftShadow","rightShadow","hidden","calculateShadows","maxScrollLeft","scrollWidth","clientWidth","hideBoth","hideLeft","hideRight","showBoth","remove","languageButtons$","langs","languageButtons","regionlessNamesCount","languages","regionlessName","buttonText","showShadowsService","ShowShadowsHelper","headerRef","leftShadowRef","rightShadowRef","mouseScrollHelper","MouseScrollHelper","centerSelectedService","CenterSelectedHelper","lngButtonMouseDown","updateCurrentLanguage","EavLanguageSwitcherComponent","setPublishMode","hasLanguages$","openSaveStatusDialog","MultiItemEditFormHeaderComponent","debugInfoOpened","sxcVer","showDebugInfo$","selectAllItems","toggleDebugInfo","MultiItemEditFormDebugComponent","changeDetectorRef","loadIconsService","route","isParentDialog","editDialogCount","snapshot","pathFromRoot","calculateIsParentDialog","floor","random","isCopy$","formsAreValid$","allControlsAreDisabled$","publishMode$","reduceSaveButton$","hideHeader$","getHideHeader","tap","debugInfoIsOpen$","eavConfigLoaded$","formErrors","formsAreDirty","formSaveAllObservables$","createMode","formIsSaved","init","fetchFormData","ngAfterViewChecked","attachAllSaveFormObservables","detectChanges","initSlider","removeLanguageInstance","clearCache","saveResult","disableClose","snackBarYouHaveUnsavedChanges","versioningOptions","checkFormsState","saveAll","itemEditFormRefs","itemEditFormComponent","calculateAllValidationMessages","formError","openFromComponent","opened","editItems","loadItems","Items","addInputTypes","InputTypes","ContentTypes","Features","setEavConfig","Context","isoLangCode","use","eavLangs","sortedLanguages","primaryLangKey","primaryLang","sameLangs","otherLangs","sortLanguages","langPri","loadLanguages","addLanguageInstance","DraftShouldBranch","IsPublished","valuesExistInDefaultLanguage","selectItemsByIdList","delay","DuplicateEntity","languageChangeSubscribe","dialogBackdropClickSubscribe","saveFormMessagesSubscribe","formSetValueChangeSubscribe","slideableRef","slide$","merge","pairwise","previousLang","findIndex","fromEvent","animationName","returnValue","backdropClick","updateItemId","first","areFormsDirtyAnyLanguage","isDirty","langKeys","validateForm","saveFormSubscribe","switchMap","actions","allItems","saveFormData","saveItemSuccess","catchError","saveItemError","snackBarRef","onAction","containerInstance","snackBarConfig","MultiItemEditFormComponent","htmlEl","dragoverListener","timeoutsArray","clearTimeout","clearTimeouts","windowBodyTimeouts","body","draggingClass","dropListener","keysFunc","symbolsFunc","Uint8Array","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","resIndex","stubArray","root","self","Function","exporter","makeExporter","previous","defineProperty","configurable","writable","hasOwn","supportsSymbol","Symbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","supportsCreate","supportsProto","__proto__","downLevel","HashMap","MakeDictionary","functionPrototype","getPrototypeOf","usePolyfill","process","env","_Map","Map","cacheSentinel","arraySentinel","MapIterator","_index","_keys","_values","_selector","throw","return","_cacheKey","_cacheIndex","enumerable","_find","getKey","getValue","getEntry","insert","_","CreateMapPolyfill","_Set","Set","_map","WeakMap","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","crypto","getRandomValues","msCrypto","byte","CreateWeakMapPolyfill","GetOrCreateMetadataMap","O","P","Create","targetMetadata","IsUndefined","metadataMap","OrdinaryHasOwnMetadata","MetadataKey","OrdinaryGetOwnMetadata","OrdinaryDefineOwnMetadata","MetadataValue","OrdinaryOwnMetadataKeys","obj","method","GetMethod","IsCallable","TypeError","IsObject","GetIterator","k","IteratorStep","IteratorClose","x","IsNull","ToPropertyKey","argument","input","PreferredType","exoticToPrim","hint","toString_1","OrdinaryToPrimitive","ToPrimitive","ToString","IsArray","IsConstructor","V","func","OrdinaryGetPrototypeOf","proto","prototypeProto","__","decorators","propertyKey","decorated","decorator","DecorateConstructor","descriptor","DecorateProperty","metadataKey","metadataValue","IsPropertyKey","OrdinaryHasMetadata","OrdinaryGetMetadata","OrdinaryMetadataKeys","ownKeys","parentKeys","ownKeys_1","_a","parentKeys_1"],"mappings":"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","file":"multi-item-edit-form-component.0dbc0ef37835903ee11d.js","sourcesContent":["/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","export function loadScripts(scriptObjects: ScriptObject[], callback: () => any, iteration = 0) {\r\n  const isLast = scriptObjects.length === iteration + 1;\r\n  const newCallback = isLast ? callback : loadScripts.bind(this, scriptObjects, callback, iteration + 1);\r\n  const scrObj = scriptObjects[iteration];\r\n\r\n  const global = typeof scrObj.test === 'string' ? scrObj.test : null;\r\n  const test = typeof scrObj.test === 'function' ? scrObj.test : null;\r\n\r\n  if (global != null && !!(window as any)[global]) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  if (test != null && test()) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  const scriptInDom: HTMLScriptElement = document.querySelector(`script[src=\"${scrObj.src}\"]`);\r\n  if (scriptInDom) {\r\n    scriptInDom.addEventListener('load', newCallback, { once: true });\r\n    return;\r\n  }\r\n\r\n  const scriptEl = document.createElement('script');\r\n  scriptEl.src = scrObj.src;\r\n  scriptEl.addEventListener('load', newCallback, { once: true });\r\n  document.head.appendChild(scriptEl);\r\n}\r\n\r\nexport class ScriptObject {\r\n  /** window.xxx or a function that returns a boolean */\r\n  test: string | (() => boolean);\r\n  src: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport * as fromStore from '../store';\r\nimport * as GlobalConfigurationActions from '../store/actions/global-configuration.actions';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GlobalConfigService {\r\n  constructor(private store: Store<fromStore.EavState>, private snackBar: MatSnackBar) { }\r\n\r\n  loadDebugEnabled(debugEnabled: boolean) {\r\n    this.store.dispatch(GlobalConfigurationActions.loadDebugEnabled({ debugEnabled }));\r\n  }\r\n\r\n  toggleDebugEnabled() {\r\n    this.store.dispatch(GlobalConfigurationActions.toggleDebugEnabled());\r\n    let debugEnabled: boolean;\r\n    this.store.select(fromStore.selectDebugEnabled).pipe(take(1)).subscribe(enabled => {\r\n      debugEnabled = enabled;\r\n    });\r\n    if (debugEnabled) {\r\n      this.snackBar.open('debug mode enabled', null, {\r\n        duration: 3000,\r\n      });\r\n    } else {\r\n      this.snackBar.open('debug mode disabled', null, {\r\n        duration: 3000,\r\n      });\r\n    }\r\n  }\r\n\r\n  getDebugEnabled(): Observable<boolean> {\r\n    return this.store.select(fromStore.selectDebugEnabled);\r\n  }\r\n}\r\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n","import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_OuterSubscriber,_util_subscribeToResult,_.._internal_symbol_iterator PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\nexport function zip() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var resultSelector = observables[observables.length - 1];\n    if (typeof resultSelector === 'function') {\n        observables.pop();\n    }\n    return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\nvar ZipOperator = /*@__PURE__*/ (function () {\n    function ZipOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    };\n    return ZipOperator;\n}());\nexport { ZipOperator };\nvar ZipSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, resultSelector, values) {\n        if (values === void 0) {\n            values = Object.create(null);\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.iterators = [];\n        _this.active = 0;\n        _this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n        _this.values = values;\n        return _this;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[Symbol_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[Symbol_iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        this.unsubscribe();\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                var destination = this.destination;\n                destination.add(iterator.subscribe(iterator, i));\n            }\n            else {\n                this.active--;\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.resultSelector) {\n            this._tryresultSelector(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryresultSelector = function (args) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber));\nexport { ZipSubscriber };\nvar StaticIterator = /*@__PURE__*/ (function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = /*@__PURE__*/ (function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[Symbol_iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\nvar ZipBufferIterator = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        _this.observable = observable;\n        _this.stillUnsubscribed = true;\n        _this.buffer = [];\n        _this.isComplete = false;\n        return _this;\n    }\n    ZipBufferIterator.prototype[Symbol_iterator] = function () {\n        return this;\n    };\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber));\n//# sourceMappingURL=zip.js.map\n","<div class=\"save-errors-container\">\r\n  <div>{{ 'Errors.SaveErrors' | translate }}</div>\r\n  <br />\r\n  <div *ngFor=\"let error of fieldErrors;\">\r\n    <span>{{ error.field }}<span>: {{ error.message | translate }}</span></span>\r\n  </div>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\nimport { FieldErrorMessage } from '../../../shared/models/eav/field-error-message';\r\nimport { SaveErrorsSnackData } from './snack-bar-save-errors.models';\r\n\r\n@Component({\r\n  selector: 'app-snack-bar-save-errors',\r\n  templateUrl: './snack-bar-save-errors.component.html',\r\n  styleUrls: ['./snack-bar-save-errors.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SnackBarSaveErrorsComponent implements OnInit {\r\n  fieldErrors: FieldErrorMessage[] = [];\r\n\r\n  constructor(@Inject(MAT_SNACK_BAR_DATA) private snackBarData: SaveErrorsSnackData) { }\r\n\r\n  ngOnInit() {\r\n    this.fieldErrors = this.snackBarData.fieldErrors;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Inject, OnInit } from '@angular/core';\r\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\nimport { UnsavedChangesSnackData } from './snack-bar-unsaved-changes.models';\r\n\r\n@Component({\r\n  selector: 'app-snack-bar-unsaved-changes',\r\n  templateUrl: './snack-bar-unsaved-changes.component.html',\r\n  styleUrls: ['./snack-bar-unsaved-changes.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SnackBarUnsavedChangesComponent implements OnInit {\r\n\r\n  constructor(\r\n    private snackRef: MatSnackBarRef<SnackBarUnsavedChangesComponent>,\r\n    @Inject(MAT_SNACK_BAR_DATA) private snackBarData: UnsavedChangesSnackData,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  saveChanges(save: boolean) {\r\n    this.snackBarData.save = save;\r\n    this.snackRef.dismissWithAction();\r\n  }\r\n}\r\n","<span class=\"error-message\">{{ 'Errors.UnsavedChanges' | translate }}</span>\r\n\r\n<div fxLayoutAlign=\"end end\">\r\n  <button mat-button color=\"accent\" (click)=\"saveChanges(false)\">\r\n    {{ ('General.Buttons.NotSave' | translate).toUpperCase() }}\r\n  </button>\r\n  <button mat-button color=\"accent\" (click)=\"saveChanges(true)\">\r\n    {{ ('General.Buttons.Save' | translate).toUpperCase()}}\r\n  </button>\r\n</div>\r\n","import { angularConsoleLog } from '../../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\nimport { EavValues } from '../eav';\r\n\r\nexport class Value1<T> {\r\n  [key: string]: T;\r\n\r\n  public static create<T>(eavValues: EavValues<T>): Value1<T> {\r\n    const newValue1: Value1<T> = {};\r\n    angularConsoleLog('eavValues.values.forEach: ', eavValues.values);\r\n    eavValues.values.forEach(eavValue => {\r\n      const allDimensions = eavValue.dimensions.map(d => d.value).join();\r\n      newValue1[allDimensions] = eavValue.value;\r\n    });\r\n    return newValue1;\r\n  }\r\n}\r\n","import { EavAttributes } from '../eav';\r\nimport { Attribute1 } from './attribute1';\r\nimport { Value1 } from './value1';\r\n\r\nexport class Attributes1<T> {\r\n  [key: string]: Attribute1<T>;\r\n\r\n  public static create<T>(eavAttributes: EavAttributes): Attributes1<T> {\r\n    const newAttribute1: Attributes1<T> = new Attributes1<T>();\r\n\r\n    Object.keys(eavAttributes).forEach(eavAttributeKey => {\r\n      const type = eavAttributes[eavAttributeKey].type;\r\n      if (!newAttribute1[type]) { newAttribute1[type] = {}; }\r\n      newAttribute1[type][eavAttributeKey] = Value1.create<T>(eavAttributes[eavAttributeKey]);\r\n    });\r\n    return newAttribute1;\r\n  }\r\n}\r\n","import { EavFor } from '../eav';\r\n\r\nexport class For1 {\r\n  Target: string;\r\n  Number?: number;\r\n  String?: string;\r\n  Guid?: string;\r\n\r\n  constructor(entityFor: EavFor) {\r\n    this.Target = entityFor.Target;\r\n    if (entityFor.Number) {\r\n      this.Number = entityFor.Number;\r\n    }\r\n    if (entityFor.String) {\r\n      this.String = entityFor.String;\r\n    }\r\n    if (entityFor.Guid) {\r\n      this.Guid = entityFor.Guid;\r\n    }\r\n  }\r\n}\r\n","export class Type1 {\r\n    Id: string;\r\n    Name: string;\r\n\r\n    constructor(Id: string, Name: string) {\r\n        this.Id = Id;\r\n        this.Name = Name;\r\n    }\r\n}\r\n","import { EavEntity } from '../eav';\r\nimport { Attributes1 } from './attributes1';\r\nimport { For1 } from './for1';\r\nimport { Type1 } from './type1';\r\n\r\nexport class Entity1 {\r\n  Id: number;\r\n  Version: number;\r\n  Guid: string;\r\n  Type: Type1;\r\n  Attributes: Attributes1<any>;\r\n  Owner: string;\r\n  Metadata: Entity1[];\r\n  For?: For1;\r\n\r\n  constructor(\r\n    Id: number,\r\n    Version: number,\r\n    Guid: string,\r\n    Type: Type1,\r\n    Attributes: Attributes1<any>,\r\n    Owner: string,\r\n    Metadata: Entity1[],\r\n    For?: For1,\r\n  ) {\r\n    this.Id = Id;\r\n    this.Version = Version;\r\n    this.Guid = Guid;\r\n    this.Type = Type;\r\n    this.Attributes = Attributes;\r\n    this.Owner = Owner;\r\n    this.Metadata = Metadata;\r\n    if (For) { this.For = For; }\r\n  }\r\n\r\n  public static create(entity: EavEntity): Entity1 {\r\n    const attributes1 = Attributes1.create(entity.attributes);\r\n    const metaData1 = this.createArray(entity.metadata);\r\n    const for1 = entity.For ? new For1(entity.For) : null;\r\n\r\n    return new Entity1(\r\n      entity.id,\r\n      entity.version,\r\n      entity.guid,\r\n      new Type1(entity.type.id, entity.type.name),\r\n      attributes1,\r\n      entity.owner,\r\n      metaData1,\r\n      for1,\r\n    );\r\n  }\r\n\r\n  public static createArray(eavEntityArray: EavEntity[]): Entity1[] {\r\n    if (!eavEntityArray) { return null; }\r\n    const metaData1Array: Entity1[] = new Array<Entity1>();\r\n    eavEntityArray.forEach(eavEntity => {\r\n      metaData1Array.push(Entity1.create(eavEntity));\r\n    });\r\n    return metaData1Array;\r\n  }\r\n}\r\n","import { EavHeader } from '../eav';\r\n// import { JsonHeader1 } from './json-header1';\r\nimport { Item } from '../eav/item';\r\nimport { Entity1 } from './entity1';\r\n\r\nexport class JsonItem1 {\r\n  // Header: JsonHeader1;\r\n  Header: EavHeader;\r\n  Entity: Entity1;\r\n\r\n  constructor(Header: EavHeader, Entity: Entity1) {\r\n    this.Header = Header;\r\n    this.Entity = Entity;\r\n  }\r\n\r\n  public static create(item: Item): JsonItem1 {\r\n    return new JsonItem1(\r\n      // JsonHeader1.create(item.header),\r\n      item.header,\r\n      Entity1.create(item.entity)\r\n    );\r\n  }\r\n}\r\n","import { Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { distinctUntilChanged, filter, map, startWith } from 'rxjs/operators';\r\nimport { FieldSettings } from '../../../../edit-types';\r\nimport { Field } from '../../../eav-dynamic-form/model/field';\r\nimport { FieldConfigSet } from '../../../eav-dynamic-form/model/field-config';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { ValidationHelper } from '../../validators/validation-helper';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\n\r\nexport class BaseComponent<T> implements Field, OnInit, OnDestroy {\r\n  @Input() config: FieldConfigSet;\r\n  @Input() group: FormGroup;\r\n\r\n  control: AbstractControl;\r\n  settings$: BehaviorSubject<FieldSettings>;\r\n  label$: Observable<string>;\r\n  placeholder$: Observable<string>;\r\n  value$: Observable<T>;\r\n  disabled$: Observable<boolean>;\r\n  required$: Observable<boolean>;\r\n  invalid$: Observable<boolean>;\r\n  showValidation$: Observable<AbstractControl>;\r\n  subscription = new Subscription();\r\n\r\n  constructor(public eavService: EavService, public validationMessagesService: ValidationMessagesService) { }\r\n\r\n  ngOnInit() {\r\n    this.control = this.group.controls[this.config.field.name];\r\n    this.settings$ = this.config.field.settings$;\r\n    this.label$ = this.settings$.pipe(map(settings => settings.Name));\r\n    this.placeholder$ = this.settings$.pipe(map(settings => settings.Placeholder));\r\n    this.required$ = this.settings$.pipe(map(settings => ValidationHelper.isRequired(settings)));\r\n    this.invalid$ = this.control.statusChanges.pipe(map(status => status === 'INVALID'), startWith(this.control.invalid));\r\n    this.showValidation$ = this.validationMessagesService.showValidation$.pipe(filter(control => control === this.control));\r\n    // doesn't work because controls are sometimes updated without emitting change (e.g. on language change)\r\n    // this.value$ = this.control.valueChanges.pipe(\r\n    //   startWith(this.control.value)\r\n    // );\r\n    // this.status$ = this.control.statusChanges.pipe(\r\n    //   startWith(this.control.status)\r\n    // );\r\n    this.value$ = this.eavService.formValueChange$.pipe(\r\n      filter(formSet => (formSet.formId === this.config.form.formId) && (formSet.entityGuid === this.config.entity.entityGuid)),\r\n      map(formSet => this.control.value),\r\n      startWith(this.control.value),\r\n      distinctUntilChanged(),\r\n    );\r\n    this.disabled$ = this.eavService.formDisabledChange$.asObservable().pipe(\r\n      filter(formDisabledSet => (formDisabledSet.formId === this.config.form.formId)\r\n        && (formDisabledSet.entityGuid === this.config.entity.entityGuid)\r\n      ),\r\n      map(formSet => this.control.disabled),\r\n      startWith(this.control.disabled),\r\n      distinctUntilChanged(),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { AdamConfig } from '../../../../edit-types';\r\n\r\nexport class AdamConfigInstance implements AdamConfig {\r\n  //#region Field settings\r\n  rootSubfolder = '';\r\n  fileFilter = '';\r\n  allowAssetsInRoot = true;\r\n  folderDepth = 0;\r\n  metadataContentTypes = '';\r\n  //#endregion\r\n\r\n  //#region Toggle\r\n  usePortalRoot = false;\r\n  showImagesOnly = false;\r\n  //#endregion\r\n\r\n  //#region Calculated\r\n  autoLoad = false;\r\n  enableSelect = true;\r\n  subfolder = '';\r\n  allowEdit = true;\r\n  disabled = true;\r\n  maxDepthReached = false;\r\n  //#endregion\r\n\r\n  constructor(disabled: boolean) {\r\n    this.disabled = disabled;\r\n  }\r\n}\r\n","export class Feature {\r\n  constructor(\r\n    public enabled: boolean,\r\n    public expires: string,\r\n    public id: string,\r\n    public isPublic: boolean,\r\n    public ui: boolean,\r\n  ) {\r\n    this.enabled = enabled;\r\n    this.expires = expires;\r\n    this.id = id;\r\n    this.isPublic = isPublic;\r\n    this.ui = ui;\r\n  }\r\n\r\n  /**\r\n   * Features array from service have one different key.\r\n   * Key 'public' is converted to 'isPublic' ('public' is a reserved word in strict mode)\r\n   */\r\n  public static createFeatureArray(features: any[]) {\r\n    const featureList: Feature[] = [];\r\n    features.forEach(f => {\r\n      featureList.push(new Feature(f.enabled, f.expires, f.id, f.public, f.ui));\r\n    });\r\n    return featureList;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceBase, EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { take } from 'rxjs/operators';\r\nimport { Feature } from '../../models/feature/feature';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FeatureService extends EntityCollectionServiceBase<Feature> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('Feature', serviceElementsFactory);\r\n  }\r\n\r\n  loadFeatures(features: any[]) {\r\n    const featureList: Feature[] = Feature.createFeatureArray(features);\r\n    this.addAllToCache(featureList);\r\n  }\r\n\r\n  isFeatureEnabled(guid: string) {\r\n    let isEnabled = false;\r\n    this.entities$.pipe(take(1)).subscribe(features => {\r\n      const feature = features.find(ftr => ftr.id === guid);\r\n      if (feature != null) {\r\n        isEnabled = feature.enabled;\r\n      }\r\n    });\r\n    return isEnabled;\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { angularConsoleLog } from '../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\nimport { ElementEventListener } from '../../../shared/element-event-listener.model';\r\nimport { FeaturesGuidsConstants } from '../../../shared/features-guids.constants';\r\nimport { FieldConfigSet } from '../../eav-dynamic-form/model/field-config';\r\nimport { PasteClipboardImageEventDetail } from '../models/adam/paste-clipboard-image';\r\nimport { FeatureService } from '../store/ngrx-data/feature.service';\r\n\r\n@Directive({ selector: '[appPasteClipboardImage]' })\r\nexport class PasteClipboardImageDirective implements OnInit, OnDestroy {\r\n  @Input() config: FieldConfigSet;\r\n  @Input() elementType: string;\r\n  private eventListeners: ElementEventListener[] = [];\r\n\r\n  constructor(private elementRef: ElementRef, private featureService: FeatureService) { }\r\n\r\n  ngOnInit() {\r\n    if (!this.featureService.isFeatureEnabled(FeaturesGuidsConstants.PasteImageFromClipboard)) { return; }\r\n\r\n    switch (this.elementType) {\r\n      case 'input':\r\n        this.elementRef.nativeElement.pastableTextarea();\r\n        break;\r\n      case 'element':\r\n        this.elementRef.nativeElement.pastableNonInputable();\r\n        break;\r\n    }\r\n    const handleImageBound = this.handleImage.bind(this);\r\n    this.elementRef.nativeElement.addEventListener('handleImage', handleImageBound);\r\n\r\n    this.eventListeners.push(\r\n      { element: this.elementRef.nativeElement, type: 'handleImage', listener: handleImageBound },\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // spm 2019-10-24 paste.js which handles clipboard paste doesn't destroy listeners\r\n    this.eventListeners.forEach(eventListener => {\r\n      const element = eventListener.element;\r\n      const type = eventListener.type;\r\n      const listener = eventListener.listener;\r\n      element.removeEventListener(type, listener);\r\n    });\r\n  }\r\n\r\n  private handleImage(event: CustomEvent) {\r\n    angularConsoleLog('PASTE IMAGE', 'event:', event);\r\n    // todo: convert png to jpg to reduce file size\r\n    const image = this.getFile(event.detail as PasteClipboardImageEventDetail);\r\n    this.config.dropzone.uploadFile(image);\r\n  }\r\n\r\n  private getFile(data: PasteClipboardImageEventDetail) {\r\n    let newFile = data.file; // for fallback\r\n\r\n    try {\r\n      // File.name is readonly so we do this\r\n      const formData = new FormData();\r\n      formData.append('file', data.file, data.imageFileName);\r\n      newFile = formData.get('file') as File;\r\n    } catch (e) {\r\n      console.error('paste image error', e);\r\n    }\r\n    return newFile;\r\n  }\r\n}\r\n","export const FeaturesGuidsConstants = {\r\n    PasteWithFormatting: '1b13e0e6-a346-4454-a1e6-2fb18c047d20',\r\n    PasteImageFromClipboard: 'f6b8d6da-4744-453b-9543-0de499aa2352',\r\n};\r\n","<ng-container *ngIf=\"{\r\n  adamConfig: adamConfig$ | async,\r\n  disabled: disabled$ | async\r\n  } as data\">\r\n  <div class=\"dropzone\" [@adamShowAnimate]=\"data.adamConfig?.autoLoad ? 'open' : 'closed'\">\r\n    <div *ngIf=\"data.adamConfig?.autoLoad && (expanded$ | async)\" [ngClass]=\"{\r\n    'adam-scope-site': data.adamConfig.usePortalRoot,\r\n    'adam-scope-field': !data.adamConfig.usePortalRoot\r\n  }\">\r\n\r\n      <!-- click to upload -->\r\n      <div\r\n        *ngIf=\"!data.disabled && data.adamConfig.allowEdit && !((data.adamConfig.subfolder === '' || data.adamConfig.usePortalRoot && data.adamConfig.subfolder === data.adamConfig.rootSubfolder) && !data.adamConfig.allowAssetsInRoot)\"\r\n        class=\"dz-preview dropzone-adam\" (click)=\"openUploadClick($event)\"\r\n        [matTooltip]=\"'Fields.Hyperlink.AdamFileManager.UploadTip' | translate\">\r\n        <div class=\"dz-image adam-browse-background-icon adam-browse-background\">\r\n          <mat-icon>cloud_upload</mat-icon>\r\n          <div class=\"adam-upload-label\">\r\n            {{ 'Fields.Hyperlink.AdamFileManager.UploadLabel' | translate }}\r\n            &nbsp;\r\n            <mat-icon *ngIf=\"data.adamConfig.usePortalRoot\">public</mat-icon>\r\n            <mat-icon *ngIf=\"!data.adamConfig.usePortalRoot\" svgIcon=\"appleFilled\"></mat-icon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- paste image from clipboard -->\r\n      <div #pasteDiv\r\n        *ngIf=\"pasteClipboardImage && !data.disabled && data.adamConfig.allowEdit && !((data.adamConfig.subfolder === '' || data.adamConfig.usePortalRoot && data.adamConfig.subfolder === data.adamConfig.rootSubfolder) && !data.adamConfig.allowAssetsInRoot)\"\r\n        appPasteClipboardImage [config]=\"config\" [elementType]=\"'element'\" class=\"dz-preview dropzone-adam paste-image\"\r\n        [matTooltip]=\"'Fields.Hyperlink.AdamFileManager.UploadPasteTip' | translate\">\r\n        <div class=\"dz-image adam-browse-background-icon adam-browse-background\">\r\n          <mat-icon>filter</mat-icon>\r\n          <div *ngIf=\"!pasteDiv.classList.contains('pastable-focus')\" class=\"adam-upload-label\">\r\n            {{ 'Fields.Hyperlink.AdamFileManager.UploadPasteLabel' | translate }}\r\n          </div>\r\n          <div *ngIf=\"pasteDiv.classList.contains('pastable-focus')\" class=\"adam-upload-label\">\r\n            {{ 'Fields.Hyperlink.AdamFileManager.UploadPasteFocusedLabel' | translate }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- add folder -->\r\n      <div\r\n        *ngIf=\"!data.adamConfig.maxDepthReached && !data.disabled && data.adamConfig.allowEdit && !((data.adamConfig.subfolder === '' || data.adamConfig.usePortalRoot && data.adamConfig.subfolder === data.adamConfig.rootSubfolder) && !data.adamConfig.allowAssetsInRoot)\"\r\n        class=\"dz-preview\" (click)=\"addFolder()\"\r\n        [matTooltip]=\"'Fields.Hyperlink.AdamFileManager.NewFolderTip' | translate\">\r\n        <div class=\"dz-image adam-browse-background-icon adam-browse-background\">\r\n          <mat-icon svgIcon=\"folder-plus\"></mat-icon>\r\n          <div class=\"adam-short-label\">{{ 'Fields.Hyperlink.AdamFileManager.NewFolder' | translate }}</div>\r\n        </div>\r\n        <div class=\"dz-details\" style=\"opacity: 1\"></div>\r\n      </div>\r\n\r\n      <!-- browse up a folder -->\r\n      <ng-container\r\n        *ngIf=\"data.adamConfig.subfolder !== '' || data.adamConfig.usePortalRoot && data.adamConfig.subfolder !== data.adamConfig.rootSubfolder\">\r\n        <div class=\"dz-preview\" (click)=\"goUp()\"\r\n          [matTooltip]=\"'Fields.Hyperlink.AdamFileManager.BackFolderTip' | translate\">\r\n          <div class=\"dz-image adam-browse-background-icon adam-browse-background\">\r\n            <mat-icon svgIcon=\"folder\"></mat-icon>\r\n            <div class=\"adam-short-label\">{{ 'Fields.Hyperlink.AdamFileManager.BackFolder' | translate }}</div>\r\n          </div>\r\n          <div class=\"adam-background adam-browse-background-icon\">\r\n            <mat-icon class=\"adam-back-folder-arrow\">arrow_back</mat-icon>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n\r\n      <ng-container *ngFor=\"let item of (items$ | async); trackBy: trackByFn\">\r\n        <!-- folders -->\r\n        <ng-container *ngIf=\"item.IsFolder\">\r\n          <div class=\"dz-preview\" (click)=\"goIntoFolder(item)\">\r\n            <div class=\"dz-image adam-blur adam-browse-background-icon adam-browse-background\">\r\n              <mat-icon svgIcon=\"folder\"></mat-icon>\r\n              <div class=\"short-label\">{{ item.Name }}</div>\r\n            </div>\r\n            <div class=\"dz-details file-type-{{ item.Type }}\">\r\n              <mat-icon *ngIf=\"data.adamConfig.allowEdit\" (click)=\"del(item)\" appClickStopPropagation\r\n                class=\"adam-delete-button\" [matTooltip]=\"'Fields.Hyperlink.AdamFileManager.Delete' | translate\"\r\n                [ngClass]=\"{\r\n                'adam-button-disabled': data.disabled\r\n              }\">clear\r\n              </mat-icon>\r\n              <mat-icon *ngIf=\"data.adamConfig.allowEdit\" (click)=\"rename(item)\" appClickStopPropagation\r\n                class=\"adam-rename-button\" [matTooltip]=\"'Fields.Hyperlink.AdamFileManager.Edit' | translate\" [ngClass]=\"{\r\n                'adam-button-disabled': data.disabled\r\n              }\">edit\r\n              </mat-icon>\r\n              <div class=\"adam-full-name-area\">\r\n                <div class=\"adam-full-name\" [title]=\"item.Name\">{{ item.Name }}</div>\r\n              </div>\r\n            </div>\r\n            <mat-icon class=\"adam-tag\" [ngClass]=\"{ 'metadata-exists': item.MetadataId > 0 }\"\r\n              (click)=\"editItemMetadata(item)\" matTooltip=\"{{ item._metadataContentType }}: {{ item.MetadataId }}\"\r\n              appClickStopPropagation *ngIf=\"item._metadataContentType\">local_offer</mat-icon>\r\n          </div>\r\n        </ng-container>\r\n\r\n        <!-- files -->\r\n        <ng-container *ngIf=\"!item.IsFolder\">\r\n          <div class=\"dz-preview\" (click)=\"select(item)\" [ngClass]=\"{\r\n            'dz-success': (value$ | async) === 'file:' + item.Id,\r\n            'disable-select': !data.adamConfig.enableSelect\r\n          }\">\r\n            <div *ngIf=\"item.Type !== 'image'\"\r\n              class=\"dz-image adam-blur adam-browse-background-icon adam-browse-background\">\r\n              <mat-icon *ngIf=\"item._isMaterialIcon\">{{ item._icon }}</mat-icon>\r\n              <mat-icon *ngIf=\"!item._isMaterialIcon\" [svgIcon]=\"item._icon\"></mat-icon>\r\n              <div class=\"adam-short-label\">{{ item.Name }}</div>\r\n            </div>\r\n            <div *ngIf=\"item.Type === 'image'\" class=\"dz-image adam-browse-background-image\">\r\n              <img data-dz-thumbnail=\"\" [alt]=\"item.Id + ':' + item.Name\"\r\n                [src]=\"item.FullPath + '?w=120&h=120&mode=crop'\">\r\n            </div>\r\n\r\n            <div class=\"dz-details file-type-{{ item.Type }}\">\r\n              <mat-icon *ngIf=\"data.adamConfig.allowEdit\" (click)=\"del(item)\" appClickStopPropagation\r\n                class=\"adam-delete-button\" [matTooltip]=\"'Fields.Hyperlink.AdamFileManager.Delete' | translate\"\r\n                [ngClass]=\"{\r\n                'adam-button-disabled': data.disabled\r\n              }\">clear\r\n              </mat-icon>\r\n              <mat-icon *ngIf=\"data.adamConfig.allowEdit\" (click)=\"rename(item)\" appClickStopPropagation\r\n                class=\"adam-rename-button\" [matTooltip]=\"'Fields.Hyperlink.AdamFileManager.Edit' | translate\" [ngClass]=\"{\r\n                'adam-button-disabled': data.disabled\r\n              }\">edit\r\n              </mat-icon>\r\n              <div class=\"adam-full-name-area\">\r\n                <div class=\"adam-full-name\" [title]=\"item.Name\">{{ item.Name }}</div>\r\n              </div>\r\n              <div class=\"dz-filename adam-short-label\" appClickStopPropagation\r\n                title=\"#{{ item.Id }} - {{ item._displaySize }} KB\">\r\n                <span>#{{ item.Id }} - {{ item._displaySize }} KB</span>\r\n              </div>\r\n              <a class=\"adam-link-button\" target=\"_blank\" [href]=\"item.FullPath\" appClickStopPropagation>\r\n                <mat-icon [matTooltip]=\"'Fields.Hyperlink.AdamFileManager.Show' | translate\">open_in_new</mat-icon>\r\n              </a>\r\n            </div>\r\n            <mat-icon class=\"adam-tag\" [ngClass]=\"{ 'metadata-exists': item.MetadataId > 0 }\"\r\n              (click)=\"editItemMetadata(item)\" *ngIf=\"item._metadataContentType\" appClickStopPropagation\r\n              matTooltip=\"{{ item._metadataContentType }}: {{ item.MetadataId }}\">local_offer</mat-icon>\r\n\r\n            <div class=\"dz-success-mark\">\r\n              <svg width=\"54px\" height=\"54px\" viewBox=\"0 0 54 54\" version=\"1.1\" xmlns=\"https://www.w3.org/2000/svg\"\r\n                xmlns:xlink=\"https://www.w3.org/1999/xlink\" xmlns:sketch=\"https://www.bohemiancoding.com/sketch/ns\">\r\n                <title>Check</title>\r\n                <defs></defs>\r\n                <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\r\n                  <path\r\n                    d=\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\"\r\n                    id=\"Oval-2\" stroke-opacity=\"0.198794158\" stroke=\"#747474\" fill-opacity=\"0.816519475\" fill=\"#FFFFFF\"\r\n                    sketch:type=\"MSShapeGroup\"></path>\r\n                </g>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { distinctUntilChanged, filter, map, startWith } from 'rxjs/operators';\r\nimport { AdamConfig, AdamItem, DropzoneConfigExt } from '../../../../edit-types';\r\nimport { eavConstants } from '../../../../ng-dialogs/src/app/shared/constants/eav.constants';\r\nimport { EditForm } from '../../../../ng-dialogs/src/app/shared/models/edit-form.model';\r\nimport { FeaturesGuidsConstants } from '../../../../shared/features-guids.constants';\r\nimport { FieldConfigSet } from '../../../eav-dynamic-form/model/field-config';\r\nimport { UrlHelper } from '../../../shared/helpers/url-helper';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { EditRoutingService } from '../../../shared/services/edit-routing.service';\r\nimport { FileTypeService } from '../../../shared/services/file-type.service';\r\nimport { FeatureService } from '../../../shared/store/ngrx-data/feature.service';\r\nimport { AdamService } from '../adam.service';\r\nimport { AdamConfigInstance } from './adam-browser.models';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'adam-browser',\r\n  templateUrl: './adam-browser.component.html',\r\n  styleUrls: ['./adam-browser.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('adamShowAnimate', [\r\n      state('closed', style({\r\n        height: '0',\r\n        overflow: 'hidden'\r\n      })),\r\n      state('open', style({\r\n        height: '*',\r\n        overflow: 'hidden'\r\n      })),\r\n      transition('closed => open', [\r\n        animate('300ms cubic-bezier(0.4, 0.0, 0.2, 1)'),\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class AdamBrowserComponent implements OnInit, OnDestroy {\r\n  @Input() config: FieldConfigSet;\r\n  @Input() group: FormGroup;\r\n  @Output() openUpload = new EventEmitter<null>();\r\n\r\n  value$: Observable<string>;\r\n  disabled$: Observable<boolean>;\r\n  expanded$: Observable<boolean>;\r\n  adamConfig$ = new BehaviorSubject<AdamConfig>(null);\r\n  items$ = new BehaviorSubject<AdamItem[]>([]);\r\n  pasteClipboardImage: boolean;\r\n\r\n  private control: AbstractControl;\r\n  private url: string;\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private adamService: AdamService,\r\n    private fileTypeService: FileTypeService,\r\n    private featureService: FeatureService,\r\n    private dnnContext: DnnContext,\r\n    private eavService: EavService,\r\n    private editRoutingService: EditRoutingService,\r\n    private zone: NgZone,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.control = this.group.controls[this.config.field.name];\r\n    this.refreshOnChildClosed();\r\n    const contentType = this.config.entity.header.ContentTypeName;\r\n    const entityGuid = this.config.entity.header.Guid;\r\n    const field = this.config.field.name;\r\n    this.url = this.dnnContext.$2sxc.http.apiUrl(`app-content/${contentType}/${entityGuid}/${field}`);\r\n    this.pasteClipboardImage = this.featureService.isFeatureEnabled(FeaturesGuidsConstants.PasteImageFromClipboard);\r\n\r\n    // run inside zone to detect changes when called from custom components\r\n    this.config.adam = {\r\n      items$: this.items$.asObservable(),\r\n      toggle: (usePortalRoot, showImagesOnly) => {\r\n        this.zone.run(() => {\r\n          this.toggle(usePortalRoot, showImagesOnly);\r\n        });\r\n      },\r\n      setConfig: (config) => {\r\n        this.zone.run(() => {\r\n          this.setConfig(config);\r\n        });\r\n      },\r\n      getConfig: () => this.adamConfig$.value,\r\n      getConfig$: () => this.adamConfig$.asObservable(),\r\n      onItemClick: () => { return; },\r\n      onItemUpload: () => { return; },\r\n      refresh: () => {\r\n        this.zone.run(() => {\r\n          this.fetchItems();\r\n        });\r\n      },\r\n      addFullPath: (item) => { this.adamService.addFullPath(item); }\r\n    };\r\n    this.subscription.add(\r\n      this.adamConfig$.subscribe(adamConfig => {\r\n        this.fetchItems();\r\n      })\r\n    );\r\n    this.expanded$ = this.editRoutingService.isExpanded(this.config.field.index, this.config.entity.entityGuid);\r\n    this.value$ = this.eavService.formValueChange$.pipe(\r\n      filter(formSet => (formSet.formId === this.config.form.formId) && (formSet.entityGuid === this.config.entity.entityGuid)),\r\n      map(formSet => this.control.value),\r\n      startWith(this.control.value),\r\n      distinctUntilChanged(),\r\n    );\r\n    this.disabled$ = this.eavService.formDisabledChange$.asObservable().pipe(\r\n      filter(formDisabledSet => (formDisabledSet.formId === this.config.form.formId)\r\n        && (formDisabledSet.entityGuid === this.config.entity.entityGuid)\r\n      ),\r\n      map(formSet => this.control.disabled),\r\n      startWith(this.control.disabled),\r\n      distinctUntilChanged(),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.adamConfig$.complete();\r\n    this.items$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  addFolder() {\r\n    if (this.control.disabled) { return; }\r\n\r\n    const folderName = window.prompt('Please enter a folder name'); // todo i18n\r\n    if (!folderName) { return; }\r\n\r\n    this.adamService.addFolder(folderName, this.url, this.adamConfig$.value).subscribe(res => {\r\n      this.fetchItems();\r\n    });\r\n  }\r\n\r\n  del(item: AdamItem) {\r\n    if (this.control.disabled) { return; }\r\n\r\n    const ok = window.confirm('Are you sure you want to delete this item?'); // todo i18n\r\n    if (!ok) { return; }\r\n\r\n    this.adamService.deleteItem(item, this.url, this.adamConfig$.value).subscribe(res => {\r\n      this.fetchItems();\r\n    });\r\n  }\r\n\r\n  editItemMetadata(adamItem: AdamItem) {\r\n    const form: EditForm = {\r\n      items: [\r\n        adamItem.MetadataId === 0\r\n          ? {\r\n            ContentTypeName: adamItem._metadataContentType,\r\n            For: {\r\n              Target: eavConstants.metadata.cmsObject.target,\r\n              String: `${adamItem.Type === 'folder' ? 'folder' : 'file'}:${adamItem.Id}`,\r\n            }\r\n          }\r\n          : { EntityId: adamItem.MetadataId }\r\n      ],\r\n    };\r\n    this.editRoutingService.open(this.config.field.index, this.config.entity.entityGuid, form);\r\n  }\r\n\r\n  goUp() {\r\n    let subfolder = this.adamConfig$.value.subfolder;\r\n    subfolder = subfolder.includes('/') ? subfolder.slice(0, subfolder.lastIndexOf('/')) : '';\r\n    this.config.adam.setConfig({ subfolder });\r\n  }\r\n\r\n  private getMetadataContentType(item: AdamItem) {\r\n    let found: string[];\r\n\r\n    // check if it's a folder and if this has a special registration\r\n    if (item.Type === 'folder') {\r\n      found = this.adamConfig$.value.metadataContentTypes.match(/^(folder)(:)([^\\n]*)/im);\r\n      if (found) {\r\n        return found[3];\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    // check if the extension has a special registration\r\n    // -- not implemented yet\r\n\r\n    // check if the type \"image\" or \"document\" has a special registration\r\n    // -- not implemented yet\r\n\r\n    // nothing found so far, go for the default with nothing as the prefix\r\n    found = this.adamConfig$.value.metadataContentTypes.match(/^([^:\\n]*)(\\n|$)/im);\r\n    if (found) { return found[1]; }\r\n\r\n    // this is if we don't find anything\r\n    return null;\r\n  }\r\n\r\n  goIntoFolder(item: AdamItem) {\r\n    let subfolder = this.adamConfig$.value.subfolder;\r\n    subfolder = subfolder ? `${subfolder}/${item.Name}` : item.Name;\r\n    this.config.adam.setConfig({ subfolder });\r\n  }\r\n\r\n  openUploadClick(event: MouseEvent) {\r\n    this.openUpload.emit();\r\n  }\r\n\r\n  rename(item: AdamItem) {\r\n    if (this.control.disabled) { return; }\r\n\r\n    const newName = window.prompt('Rename the file / folder to: ', item.Name);\r\n    if (!newName) { return; }\r\n\r\n    this.adamService.rename(item, newName, this.url, this.adamConfig$.value).subscribe(res => {\r\n      this.fetchItems();\r\n    });\r\n  }\r\n\r\n  select(item: AdamItem) {\r\n    if (this.control.disabled || !this.adamConfig$.value.enableSelect) { return; }\r\n    this.config.adam.onItemClick(item);\r\n  }\r\n\r\n  private fetchItems() {\r\n    const adamConfig = this.adamConfig$.value;\r\n    if (adamConfig == null) { return; }\r\n    if (!adamConfig.autoLoad) { return; }\r\n    this.adamService.getAll(this.url, adamConfig).subscribe(items => {\r\n      const filteredItems: AdamItem[] = [];\r\n      const allowedFileTypes = adamConfig.fileFilter\r\n        ? adamConfig.fileFilter.split(',').map(extension => extension.replace('*', '').trim())\r\n        : [];\r\n\r\n      for (const item of items) {\r\n        if (item.Name === '.') { // is root\r\n          const allowEdit = item.AllowEdit;\r\n          if (allowEdit !== adamConfig.allowEdit) {\r\n            this.config.adam.setConfig({ allowEdit });\r\n          }\r\n          continue;\r\n        }\r\n        if (item.Name === '2sxc' || item.Name === 'adam') { continue; }\r\n        if (!item.IsFolder && adamConfig.showImagesOnly && item.Type !== 'image') { continue; }\r\n        if (item.IsFolder && adamConfig.maxDepthReached) { continue; }\r\n        if (allowedFileTypes.length > 0) {\r\n          const extension = item.Name.substring(item.Name.lastIndexOf('.'));\r\n          if (!allowedFileTypes.includes(extension)) { continue; }\r\n        }\r\n\r\n        item._metadataContentType = this.getMetadataContentType(item);\r\n        item._icon = this.fileTypeService.getIconClass(item.Name);\r\n        item._isMaterialIcon = this.fileTypeService.isKnownType(item.Name);\r\n        item._displaySize = (item.Size / 1024).toFixed(0);\r\n        filteredItems.push(item);\r\n      }\r\n\r\n      filteredItems.sort((a, b) => a.Name.toLocaleLowerCase().localeCompare(b.Name.toLocaleLowerCase()));\r\n      filteredItems.sort((a, b) => b.IsFolder.toString().localeCompare(a.IsFolder.toString()));\r\n      this.items$.next(filteredItems);\r\n    });\r\n  }\r\n\r\n  private toggle(usePortalRoot: boolean, showImagesOnly: boolean) {\r\n    const newConfig = { ...this.adamConfig$.value, ...{ usePortalRoot, showImagesOnly } };\r\n    if (JSON.stringify(newConfig) === JSON.stringify(this.adamConfig$.value)) {\r\n      newConfig.autoLoad = !newConfig.autoLoad;\r\n    } else if (!newConfig.autoLoad) {\r\n      newConfig.autoLoad = true;\r\n    }\r\n    this.config.adam.setConfig(newConfig);\r\n  }\r\n\r\n  trackByFn(index: number, item: AdamItem) {\r\n    return item.Id;\r\n  }\r\n\r\n  private setConfig(config: Partial<AdamConfig>) {\r\n    // set new values and use old ones where new value is not provided\r\n    const startDisabled = this.config.field.isExternal;\r\n    const oldConfig = (this.adamConfig$.value != null) ? this.adamConfig$.value : new AdamConfigInstance(startDisabled);\r\n    const newConfig = new AdamConfigInstance(startDisabled);\r\n    const newConfigKeys = Object.keys(newConfig);\r\n    for (const key of newConfigKeys) {\r\n      (newConfig as any)[key] = ((config as any)[key] != null) ? (config as any)[key] : (oldConfig as any)[key];\r\n    }\r\n\r\n    // fixes\r\n    const resetSubfolder = oldConfig.usePortalRoot !== newConfig.usePortalRoot;\r\n    if (resetSubfolder) {\r\n      newConfig.subfolder = '';\r\n    }\r\n    if (newConfig.usePortalRoot) {\r\n      const fixBackSlashes = newConfig.rootSubfolder.includes('\\\\');\r\n      if (fixBackSlashes) {\r\n        newConfig.rootSubfolder = newConfig.rootSubfolder.replace(/\\\\/g, '/');\r\n      }\r\n      const fixStartingSlash = newConfig.rootSubfolder.startsWith('/');\r\n      if (fixStartingSlash) {\r\n        newConfig.rootSubfolder = newConfig.rootSubfolder.replace('/', '');\r\n      }\r\n      const fixRoot = !newConfig.subfolder.startsWith(newConfig.rootSubfolder);\r\n      if (fixRoot) {\r\n        newConfig.subfolder = newConfig.rootSubfolder;\r\n      }\r\n      newConfig.maxDepthReached = false; // when using portal root depth is infinite\r\n    }\r\n    if (!newConfig.usePortalRoot) {\r\n      const currentDepth = newConfig.subfolder ? newConfig.subfolder.split('/').length : 0;\r\n      const fixDepth = currentDepth >= newConfig.folderDepth;\r\n      if (fixDepth) {\r\n        let folders = newConfig.subfolder.split('/');\r\n        folders = folders.slice(0, newConfig.folderDepth);\r\n        newConfig.subfolder = folders.join('/');\r\n        newConfig.maxDepthReached = true;\r\n      } else {\r\n        newConfig.maxDepthReached = false;\r\n      }\r\n    }\r\n    this.adamConfig$.next(newConfig);\r\n\r\n    // fix dropzone\r\n    const oldDzConfig = this.config.dropzone.getConfig();\r\n    const newDzConfig: Partial<DropzoneConfigExt> = {};\r\n    const dzUrlParams = UrlHelper.getUrlParams(oldDzConfig.url as string);\r\n    const dzSubfolder = dzUrlParams.subfolder || '';\r\n    const dzUsePortalRoot = dzUrlParams.usePortalRoot;\r\n    const fixUploadUrl = dzSubfolder !== newConfig.subfolder || dzUsePortalRoot !== newConfig.usePortalRoot.toString();\r\n    if (fixUploadUrl) {\r\n      let newUrl = oldDzConfig.url as string;\r\n      newUrl = UrlHelper.replaceUrlParam(newUrl, 'subfolder', newConfig.subfolder);\r\n      newUrl = UrlHelper.replaceUrlParam(newUrl, 'usePortalRoot', newConfig.usePortalRoot.toString());\r\n      newDzConfig.url = newUrl;\r\n    }\r\n    const uploadDisabled = !newConfig.allowEdit\r\n      || (\r\n        (newConfig.subfolder === '' || newConfig.usePortalRoot && newConfig.subfolder === newConfig.rootSubfolder)\r\n        && !newConfig.allowAssetsInRoot\r\n      );\r\n    const fixDisabled = oldDzConfig.disabled !== uploadDisabled;\r\n    if (fixDisabled) {\r\n      newDzConfig.disabled = uploadDisabled;\r\n    }\r\n    if (Object.keys(newDzConfig).length > 0) {\r\n      this.config.dropzone.setConfig(newDzConfig);\r\n    }\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.editRoutingService.childFormClosed().subscribe(result => {\r\n        this.fetchItems();\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'adam-hint',\r\n  templateUrl: './adam-hint.component.html',\r\n  styleUrls: ['./adam-hint.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AdamHintComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","<mat-divider></mat-divider>\r\n<div class=\"hint-box u-border-radius-bottom mat-caption u-shadow-top\">\r\n  <div class=\"hint-box__hint\">{{ 'Fields.Hyperlink.AdamFileManager.Hint' | translate }}</div>\r\n  <div class=\"hint-box__sponsor\">\r\n    <a href=\"https://2sxc.org/help?tag=adam\" target=\"_blank\" tabindex=\"-1\" class=\"adam-link\"\r\n      [matTooltip]=\"'Fields.Hyperlink.AdamFileManager.SponsorTooltip' | translate\">\r\n      <mat-icon svgIcon=\"appleFilled\"></mat-icon>\r\n      <span>Adam</span>\r\n    </a>\r\n    &nbsp;\r\n    <span>{{ 'Fields.Hyperlink.AdamFileManager.SponsorLine' | translate }}</span>\r\n    &nbsp;\r\n    <a href=\"https://www.2sic.com\" target=\"_blank\" tabindex=\"-1\">2sic.com</a>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { InputTypeConstants } from '../../../../ng-dialogs/src/app/content-type-fields/constants/input-type.constants';\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { BaseComponent } from '../../input-types/base/base.component';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  selector: 'app-adam-attach-wrapper',\r\n  templateUrl: './adam-attach-wrapper.component.html',\r\n  styleUrls: ['./adam-attach-wrapper.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AdamAttachWrapperComponent extends BaseComponent<any> implements FieldWrapper, OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n  @ViewChild('invisibleClickable') invisibleClickableRef: ElementRef;\r\n\r\n  fullscreenAdam: boolean;\r\n  adamDisabled$ = new BehaviorSubject(true);\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.fullscreenAdam = this.config.field.inputType === InputTypeConstants.HyperlinkLibrary;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.subscription.add(\r\n      this.config.adam.getConfig$().subscribe(adamConfig => {\r\n        if (adamConfig == null) { return; }\r\n        this.adamDisabled$.next(adamConfig.disabled);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.adamDisabled$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  openUpload() {\r\n    this.invisibleClickableRef.nativeElement.click();\r\n  }\r\n}\r\n","<div class=\"adam-dialog-container\">\r\n  <div class=\"adam-dialog-content\">\r\n    <ng-container #fieldComponent></ng-container>\r\n  </div>\r\n  <adam-browser (openUpload)=\"openUpload()\" [config]=\"config\" [group]=\"group\" class=\"u-shadow-top\" [ngClass]=\"{\r\n      'adam-browser-container--short u-hide-scrollbar': !fullscreenAdam,\r\n      'u-display-none': adamDisabled$ | async\r\n    }\">\r\n  </adam-browser>\r\n  <div class=\"field-{{ config.field.index }}\" [ngClass]=\"{ 'u-display-none': adamDisabled$ | async }\">\r\n    <div class=\"dropzone-previews\"></div>\r\n    <span #invisibleClickable class=\"invisible-clickable\" data-note=\"just a fake, invisible area for dropzone\"></span>\r\n  </div>\r\n  <adam-hint class=\"field-hints\" [ngClass]=\"{ 'u-display-none': adamDisabled$ | async }\"></adam-hint>\r\n</div>\r\n","import { DropzoneConfigExt } from '../../../../edit-types';\r\n\r\nexport class DropzoneConfigInstance implements DropzoneConfigExt {\r\n  /** Subfolder and UsePortalRoot are updated from AdamBrowser */\r\n  disabled: boolean;\r\n  url: string;\r\n  headers: any;\r\n  acceptedFiles: string = null;\r\n  maxFiles = 1000;\r\n  parallelUploads = 1000;\r\n  autoReset: number = null;\r\n  errorReset: number = null;\r\n  cancelReset: number = null;\r\n  /** In MB. Upload will also be stopped on the server if file is larger than allowed */\r\n  maxFilesize = 10000;\r\n  paramName = 'uploadfile';\r\n  maxThumbnailFilesize = 10;\r\n  dictDefaultMessage = '';\r\n  addRemoveLinks = false;\r\n  previewsContainer = '.dropzone-previews';\r\n  /**\r\n   * We need a clickable, because otherwise the entire area is clickable,\r\n   * so i'm just making the preview clickable, as it's not important\r\n   */\r\n  clickable = '.dropzone-previews';\r\n\r\n  constructor(disabled: boolean, url: string, headers: any) {\r\n    this.disabled = disabled;\r\n    this.url = url;\r\n    this.headers = headers;\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { AfterViewInit, ChangeDetectionStrategy, Component, NgZone, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { DropzoneDirective } from 'ngx-dropzone-wrapper';\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AdamPostResponse, DropzoneConfigExt } from '../../../../edit-types';\r\nimport { angularConsoleLog } from '../../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { BaseComponent } from '../../input-types/base/base.component';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\nimport { DropzoneConfigInstance } from './dropzone-wrapper.models';\r\n\r\n@Component({\r\n  selector: 'app-dropzone-wrapper',\r\n  templateUrl: './dropzone-wrapper.component.html',\r\n  styleUrls: ['./dropzone-wrapper.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DropzoneWrapperComponent extends BaseComponent<any> implements FieldWrapper, OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n  @ViewChild(DropzoneDirective) dropzoneRef: DropzoneDirective;\r\n\r\n  dropzoneConfig$ = new BehaviorSubject<DropzoneConfigExt>(null);\r\n  dropzoneDisabled$: Observable<boolean>;\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private dnnContext: DnnContext,\r\n    private zone: NgZone,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.dropzoneDisabled$ = combineLatest([this.disabled$, this.dropzoneConfig$]).pipe(\r\n      map(([controlDisabled, dropzoneConfig]) => {\r\n        const dropzoneDisabled = (dropzoneConfig != null) ? dropzoneConfig.disabled : true;\r\n        return controlDisabled || dropzoneDisabled;\r\n      }),\r\n    );\r\n\r\n    this.config.dropzone = {\r\n      setConfig: (config) => {\r\n        this.zone.run(() => {\r\n          this.setConfig(config);\r\n        });\r\n      },\r\n      getConfig: () => this.dropzoneConfig$.value,\r\n      getConfig$: () => this.dropzoneConfig$.asObservable(),\r\n      uploadFile: (image) => {\r\n        this.zone.run(() => {\r\n          this.uploadFile(image);\r\n        });\r\n      }\r\n    };\r\n\r\n    this.config.dropzone.setConfig({});\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.config.dropzone.setConfig({\r\n      previewsContainer: '.field-' + this.config.field.index + ' .dropzone-previews',\r\n      clickable: '.field-' + this.config.field.index + ' .invisible-clickable',\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dropzoneConfig$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  onUploadError(args: any) {\r\n    angularConsoleLog('Dropzone upload error. Args:', args);\r\n    this.dropzoneRef.reset();\r\n  }\r\n\r\n  onUploadSuccess(args: any) {\r\n    const response: AdamPostResponse = args[1]; // Gets the server response as second argument.\r\n    if (response.Success) {\r\n      if (this.config.adam) {\r\n        this.config.adam.addFullPath(response);\r\n        this.config.adam.onItemUpload(response);\r\n        this.config.adam.refresh();\r\n      } else {\r\n        alert(`Upload failed because: ADAM reference doesn't exist`);\r\n      }\r\n    } else {\r\n      alert(`Upload failed because: ${response.Error}`);\r\n    }\r\n    this.dropzoneRef.reset();\r\n  }\r\n\r\n  private setConfig(config: Partial<DropzoneConfigExt>) {\r\n    const contentType = this.config.entity.header.ContentTypeName;\r\n    const entityGuid = this.config.entity.header.Guid;\r\n    const field = this.config.field.name;\r\n    const appId = this.eavService.eavConfig.appId;\r\n\r\n    const startDisabled = this.config.field.isExternal;\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(`app-content/${contentType}/${entityGuid}/${field}?subfolder=&usePortalRoot=false&appId=${appId}`);\r\n    const headers = this.dnnContext.sxc.webApi.headers();\r\n\r\n    const oldConfig = (this.dropzoneConfig$.value != null)\r\n      ? this.dropzoneConfig$.value\r\n      : new DropzoneConfigInstance(startDisabled, url, headers);\r\n    const newConfig = new DropzoneConfigInstance(startDisabled, url, headers);\r\n\r\n    const newConfigKeys = Object.keys(newConfig);\r\n    for (const key of newConfigKeys) {\r\n      (newConfig as any)[key] = ((config as any)[key] != null) ? (config as any)[key] : (oldConfig as any)[key];\r\n    }\r\n\r\n    // fixes\r\n    const syncUploadLimit = newConfig.maxFiles !== newConfig.parallelUploads;\r\n    if (syncUploadLimit) {\r\n      const uploadLimit = (newConfig.maxFiles >= newConfig.parallelUploads) ? newConfig.maxFiles : newConfig.parallelUploads;\r\n      newConfig.maxFiles = uploadLimit;\r\n      newConfig.parallelUploads = uploadLimit;\r\n    }\r\n    const fixAcceptedFiles = newConfig.acceptedFiles == null || newConfig.acceptedFiles === '';\r\n    if (fixAcceptedFiles) {\r\n      delete newConfig.acceptedFiles; // only way to tell dropzone to accept all files is to remove acceptedFiles from config\r\n    }\r\n\r\n    this.dropzoneConfig$.next(newConfig);\r\n  }\r\n\r\n  private uploadFile(file: File) {\r\n    const dropzone = this.dropzoneRef.dropzone();\r\n    (file as any).upload = { chunked: dropzone.defaultOptions.chunking };\r\n    dropzone.processFile(file);\r\n  }\r\n\r\n}\r\n","<div class=\"dropzone dropzone-container\" [ngClass]=\"{ 'dropzone-disabled': dropzoneDisabled$ | async }\"\r\n  [dropzone]=\"dropzoneConfig$ | async\" [disabled]=\"dropzoneDisabled$ | async\" (error)=\"onUploadError($event)\"\r\n  (success)=\"onUploadSuccess($event)\">\r\n  <ng-container #fieldComponent></ng-container>\r\n</div>\r\n","import 'reflect-metadata';\r\n\r\nexport function InputType(annotation: any) {\r\n  return (target: any) => {\r\n    // Object.defineProperty(target.prototype, 'wrapper', { value: () => annotation.wrapper });\r\n    // const metadata = new Component(annotation);\r\n    Reflect.defineMetadata('inputTypeAnnotations', annotation, target);\r\n  };\r\n}\r\n","import { Directive, ElementRef, NgZone, OnDestroy, OnInit } from '@angular/core';\r\n\r\n@Directive({ selector: '[appChangeAnchorTarget]' })\r\nexport class ChangeAnchorTargetDirective implements OnInit, OnDestroy {\r\n  private target = '_blank';\r\n  private element: HTMLElement;\r\n  private observer: MutationObserver;\r\n\r\n  constructor(elementRef: ElementRef, private zone: NgZone) {\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.observer = new MutationObserver((mutations: MutationRecord[]) => {\r\n        if (this.element.tagName === 'A') {\r\n          const anchor = this.element as HTMLAnchorElement;\r\n          if (anchor.target !== this.target) {\r\n            anchor.target = this.target;\r\n          }\r\n        }\r\n        const childAnchors = this.element.getElementsByTagName('a');\r\n        // tslint:disable-next-line:prefer-for-of\r\n        for (let i = 0; i < childAnchors.length; i++) {\r\n          const anchor = childAnchors[i];\r\n          if (anchor.target !== this.target) {\r\n            anchor.target = this.target;\r\n          }\r\n        }\r\n      });\r\n      this.observer.observe(this.element, { childList: true, subtree: true });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.observer.disconnect();\r\n    });\r\n  }\r\n}\r\n","<ng-container *ngIf=\"{\r\n  invalid: invalid$ | async,\r\n  description: description$ | async\r\n} as data\">\r\n  <div class=\"c-fht__container\" [ngClass]=\"{\r\n    'c-fht__container--no-hint': !data.description && !(data.invalid && !disableError),\r\n    'c-fht__container--last': config.field.isLastInGroup,\r\n    'c-fht__container--last--no-hint': config.field.isLastInGroup && !data.description && !(data.invalid && !disableError),\r\n    'c-fht__container--hyperlink-default-wrapper-fix': hyperlinkDefaultWrapperFix && !config.field.isLastInGroup\r\n  }\">\r\n    <mat-hint *ngIf=\"data.description\" class=\"mat-caption\" (click)=\"toggleHint($event)\"\r\n      [ngClass]=\"control.disabled ? 'c-fht__container-hint--disabled' : 'c-fht__container-hint'\" align=\"start\"\r\n      fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n      <span class=\"notes-container\" [ngClass]=\"{ 'c-fht__container-hint--ellipsis': !isFullText }\" appChangeAnchorTarget\r\n        [innerHtml]=\"data.description | safeHtml\">\r\n      </span>\r\n    </mat-hint>\r\n    <mat-error *ngIf=\"data.invalid && !disableError\" class=\"mat-caption\">\r\n      {{ getErrorMessage() | translate:{ param:config.field.settings } }}\r\n    </mat-error>\r\n  </div>\r\n</ng-container>\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { FieldConfigSet } from '../../../eav-dynamic-form/model/field-config';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  selector: 'app-field-helper-text',\r\n  templateUrl: './field-helper-text.component.html',\r\n  styleUrls: ['./field-helper-text.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FieldHelperTextComponent implements OnInit {\r\n  @Input() config: FieldConfigSet;\r\n  @Input() group: FormGroup;\r\n  @Input() disableError = false;\r\n  @Input() hyperlinkDefaultWrapperFix = false;\r\n\r\n  isFullText = false;\r\n  description$: Observable<string>;\r\n  invalid$: Observable<boolean>;\r\n  control: AbstractControl;\r\n\r\n  constructor(private validationMessagesService: ValidationMessagesService) { }\r\n\r\n  ngOnInit() {\r\n    this.control = this.group.controls[this.config.field.name];\r\n    this.invalid$ = this.control.statusChanges.pipe(map(status => status === 'INVALID'), startWith(this.control.invalid));\r\n    this.description$ = this.config.field.settings$.pipe(map(settings => settings.Notes));\r\n  }\r\n\r\n  /** Don't toggle if clicked on an anchor tag or it's children */\r\n  toggleHint(event: MouseEvent) {\r\n    let target = event.target as HTMLElement;\r\n\r\n    if (target.tagName === 'A') { return; }\r\n    while (target && target.classList && !target.classList.contains('notes-container')) {\r\n      target = target.parentNode as HTMLElement;\r\n      if (!target) { return; }\r\n      if (target.tagName === 'A') { return; }\r\n    }\r\n\r\n    this.isFullText = !this.isFullText;\r\n  }\r\n\r\n  getErrorMessage() {\r\n    return this.validationMessagesService.getErrorMessage(this.control, this.config);\r\n  }\r\n}\r\n","<ng-container *ngIf=\"{\r\n  disabled: disabled$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <div [formGroup]=\"group\">\r\n    <mat-slide-toggle [formControlName]=\"config.field.name\">{{ label$ | async }}</mat-slide-toggle>\r\n    <app-field-helper-text [config]=\"config\" [group]=\"group\" disableError=\"true\"></app-field-helper-text>\r\n  </div>\r\n\r\n</ng-container>\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { combineLatest } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { BaseComponent } from '../../base/base.component';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'boolean-default',\r\n  templateUrl: './boolean-default.component.html',\r\n  styleUrls: ['./boolean-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.EavLocalizationWrapper],\r\n})\r\nexport class BooleanDefaultComponent extends BaseComponent<boolean> implements OnInit, OnDestroy {\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.label$ = combineLatest([this.value$, this.settings$, this.label$]).pipe(\r\n      map(([value, settings, label]) => {\r\n        if (value === true && settings.TitleTrue != null && settings.TitleTrue !== '') {\r\n          return settings.TitleTrue;\r\n        }\r\n        if (value === false && settings.TitleFalse != null && settings.TitleFalse !== '') {\r\n          return settings.TitleFalse;\r\n        }\r\n        return label;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n}\r\n","<ng-container *ngIf=\"{\r\n  value: value$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <div [formGroup]=\"group\">\r\n    <mat-slide-toggle [disabled]=\"disabled$ | async\" [checked]=\"data.value\" (toggleChange)=\"toggle()\" [ngClass]=\"{\r\n      'toggle-false': data.value === false,\r\n      'toggle-null': data.value === null\r\n    }\">\r\n      {{ label$ | async }}\r\n    </mat-slide-toggle>\r\n\r\n    <app-field-helper-text [config]=\"config\" [group]=\"group\" disableError=\"true\"></app-field-helper-text>\r\n  </div>\r\n\r\n</ng-container>\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { combineLatest } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { BaseComponent } from '../../base/base.component';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'boolean-tristate',\r\n  templateUrl: './boolean-tristate.component.html',\r\n  styleUrls: ['./boolean-tristate.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.EavLocalizationWrapper],\r\n})\r\nexport class BooleanTristateComponent extends BaseComponent<boolean | ''> implements OnInit, OnDestroy {\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.value$ = this.value$.pipe(map(value => (value === '') ? null : value));\r\n    this.label$ = combineLatest([this.value$, this.settings$, this.label$]).pipe(\r\n      map(([value, settings, label]) => {\r\n        if (value === true && settings.TitleTrue != null && settings.TitleTrue !== '') {\r\n          return settings.TitleTrue;\r\n        }\r\n        if (value === false && settings.TitleFalse != null && settings.TitleFalse !== '') {\r\n          return settings.TitleFalse;\r\n        }\r\n        if (value === null && settings.TitleIndeterminate != null && settings.TitleIndeterminate !== '') {\r\n          return settings.TitleIndeterminate;\r\n        }\r\n        return label;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  toggle() {\r\n    const currentValue: boolean | '' = this.control.value;\r\n    let nextValue: boolean;\r\n    switch (currentValue) {\r\n      case false:\r\n        nextValue = null;\r\n        break;\r\n      case '':\r\n      case null:\r\n        nextValue = true;\r\n        break;\r\n      case true:\r\n        nextValue = false;\r\n        break;\r\n    }\r\n    this.control.patchValue(nextValue);\r\n  }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { BaseComponent } from '../../base/base.component';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'custom-default',\r\n  templateUrl: './custom-default.component.html',\r\n  styleUrls: ['./custom-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n})\r\nexport class CustomDefaultComponent extends BaseComponent<null> implements OnInit, OnDestroy {\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n}\r\n","<div class=\"message\">{{ config.field.name }}: Field configuration is incomplete and should be fixed.</div>\r\n","<ng-container *ngIf=\"{\r\n  disabled: disabled$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\" class=\"textarea-field\">\r\n    <textarea matInput [formControlName]=\"config.field.name\" [rows]=\"rowCount$ | async\"\r\n      [placeholder]=\"placeholder$ | async\" [required]=\"required$ | async\"></textarea>\r\n    <mat-label>{{ label$ | async }}</mat-label>\r\n  </mat-form-field>\r\n\r\n  <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n\r\n</ng-container>\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { BaseComponent } from '../../base/base.component';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'custom-json-editor',\r\n  templateUrl: './custom-json-editor.component.html',\r\n  styleUrls: ['./custom-json-editor.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.EavLocalizationWrapper],\r\n})\r\nexport class CustomJsonEditorComponent extends BaseComponent<string> implements OnInit, OnDestroy {\r\n  rowCount$: Observable<number>;\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.rowCount$ = this.settings$.pipe(map(settings => settings.Rows || 5));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { Connector, ConnectorData, ExperimentalProps, FieldConfig } from '../../../../../../../edit-types';\r\nimport { ConnectorDialog } from '../../../../../../../edit-types/src/ConnectorDialog';\r\nimport { loadScripts } from '../../../../../../../ng-dialogs/src/app/shared/helpers/load-scripts.helper';\r\nimport { UrlHelper } from '../../../../../../shared/helpers/url-helper';\r\nimport { EavConfig } from '../../../../../../shared/models/eav-config';\r\n\r\ndeclare const sxcVersion: string;\r\n\r\nexport class ConnectorInstance<T> implements Connector<T> {\r\n  field$: Observable<FieldConfig>;\r\n  data: ConnectorData<T>;\r\n  dialog: ConnectorDialog<T>;\r\n  loadScript: (...args: any[]) => void;\r\n\r\n  constructor(\r\n    _connectorHost: ConnectorHost<T>,\r\n    value$: Observable<T>,\r\n    public field: FieldConfig,\r\n    public _experimental: ExperimentalProps,\r\n    eavConfig: EavConfig,\r\n  ) {\r\n    this.data = new ConnectorDataInstance<T>(_connectorHost, value$);\r\n    this.dialog = new ConnectorDialogInstance<T>(_connectorHost);\r\n\r\n    this.loadScript = (\r\n      testOrScripts: string | (() => any) | { test: string | (() => any); src: string }[],\r\n      srcOrCallback: string | (() => any),\r\n      callback?: () => any\r\n    ) => {\r\n      // one script (3 parameters: global or test, script url and a callback)\r\n      if (\r\n        (typeof testOrScripts === 'string' || typeof testOrScripts === 'function')\r\n        && typeof srcOrCallback === 'string'\r\n        && typeof callback === 'function'\r\n      ) {\r\n        srcOrCallback = this.resolveTokens(srcOrCallback, eavConfig);\r\n        loadScripts([{ test: testOrScripts, src: srcOrCallback }], callback);\r\n        return;\r\n      }\r\n      // multiple scripts (2 parameters: scripts array and a callback)\r\n      if (Array.isArray(testOrScripts) && typeof srcOrCallback === 'function') {\r\n        for (const script of testOrScripts) {\r\n          script.src = this.resolveTokens(script.src, eavConfig);\r\n        }\r\n        loadScripts(testOrScripts, srcOrCallback);\r\n        return;\r\n      }\r\n      throw new Error('Unrecognized parameters. Please double check your input');\r\n    };\r\n  }\r\n\r\n  resolveTokens(src: string, eavConfig: EavConfig) {\r\n    src = src.replace(/\\[System:Path\\]/i, UrlHelper.getUrlPrefix('system', eavConfig))\r\n      .replace(/\\[Zone:Path\\]/i, UrlHelper.getUrlPrefix('zone', eavConfig))\r\n      .replace(/\\[App:Path\\]/i, UrlHelper.getUrlPrefix('app', eavConfig));\r\n    if (!src.includes('?')) {\r\n      src = `${src}?sxcver=${sxcVersion}`;\r\n    }\r\n    return src;\r\n  }\r\n}\r\n\r\nexport class ConnectorDataInstance<T> implements ConnectorData<T> {\r\n  value$: Observable<T>;\r\n  forceConnectorSave$: Observable<null>;\r\n  value: T;\r\n  clientValueChangeListeners: ((newValue: T) => void)[] = [];\r\n\r\n  constructor(\r\n    private _connectorHost: ConnectorHost<T>,\r\n    value$: Observable<T>\r\n  ) {\r\n    this.value$ = value$;\r\n    this.forceConnectorSave$ = _connectorHost.forceConnectorSave$;\r\n    // Host will complete this observable. Therefore unsubscribe is not required\r\n    this.value$.subscribe(newValue => {\r\n      this.value = newValue;\r\n      this.clientValueChangeListeners.forEach(clientListener => clientListener(newValue));\r\n    });\r\n  }\r\n\r\n  update(newValue: T) {\r\n    this._connectorHost.update(newValue);\r\n  }\r\n\r\n  onValueChange(callback: (newValue: T) => void) {\r\n    this.clientValueChangeListeners.push(callback);\r\n  }\r\n}\r\n\r\nexport class ConnectorDialogInstance<T> implements ConnectorDialog<T> {\r\n  open: (componentTag?: string) => void;\r\n  close: () => void;\r\n\r\n  constructor(_connectorHost: ConnectorHost<T>) {\r\n    this.open = (componentTag?) => _connectorHost.expand(true, componentTag);\r\n    this.close = () => _connectorHost.expand(false);\r\n  }\r\n}\r\n\r\n/** Props and methods available to the connector to communicate with the host */\r\nexport interface ConnectorHost<T> {\r\n  forceConnectorSave$: Observable<null>;\r\n  update: (value: T) => void;\r\n  expand: (expand: boolean, componentTag?: string) => void;\r\n}\r\n","import { ElementRef, NgZone } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { distinctUntilChanged, filter, map, startWith, take } from 'rxjs/operators';\r\nimport { EavCustomInputField, ExperimentalProps, InputTypeName } from '../../../../../../edit-types';\r\nimport { FieldConfigSet } from '../../../../../eav-dynamic-form/model/field-config';\r\nimport { InputFieldHelper } from '../../../../../shared/helpers/input-field-helper';\r\nimport { DnnBridgeService } from '../../../../../shared/services/dnn-bridge.service';\r\nimport { EavService } from '../../../../../shared/services/eav.service';\r\nimport { EditRoutingService } from '../../../../../shared/services/edit-routing.service';\r\nimport { ContentTypeService } from '../../../../../shared/store/ngrx-data/content-type.service';\r\nimport { FeatureService } from '../../../../../shared/store/ngrx-data/feature.service';\r\nimport { InputTypeService } from '../../../../../shared/store/ngrx-data/input-type.service';\r\nimport { ConnectorHost, ConnectorInstance } from './models/connector-instance.model';\r\n\r\nexport class ConnectorHelper {\r\n  private control: AbstractControl;\r\n  private customEl: EavCustomInputField<any>;\r\n  private value$ = new BehaviorSubject<any>(null);\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private config: FieldConfigSet,\r\n    private group: FormGroup,\r\n    private customElContainerRef: ElementRef,\r\n    private customElName: string,\r\n    private eavService: EavService,\r\n    private translateService: TranslateService,\r\n    private contentTypeService: ContentTypeService,\r\n    private inputTypeService: InputTypeService,\r\n    private featureService: FeatureService,\r\n    private editRoutingService: EditRoutingService,\r\n    private dnnBridgeService: DnnBridgeService,\r\n    private zone: NgZone,\r\n  ) {\r\n    this.control = this.group.controls[this.config.field.name];\r\n\r\n    this.subscription.add(\r\n      this.eavService.formValueChange$.pipe(\r\n        filter(formSet => (formSet.formId === this.config.form.formId) && (formSet.entityGuid === this.config.entity.entityGuid)),\r\n        map(formSet => this.control.value),\r\n        startWith(this.control.value),\r\n        distinctUntilChanged(),\r\n      ).subscribe(newValue => {\r\n        this.value$.next(newValue);\r\n      })\r\n    );\r\n\r\n    this.customEl = document.createElement(this.customElName) as any;\r\n    this.customEl.connector = this.buildConnector();\r\n    this.customElContainerRef.nativeElement.appendChild(this.customEl);\r\n  }\r\n\r\n  destroy() {\r\n    this.subscription.unsubscribe();\r\n    this.value$.complete();\r\n    this.customEl?.parentNode.removeChild(this.customEl);\r\n    this.customEl = null;\r\n  }\r\n\r\n  private buildConnector() {\r\n    const connectorHost = this.calculateRegularProps();\r\n    const experimental = this.calculateExperimentalProps();\r\n    const connector = new ConnectorInstance<any>(\r\n      connectorHost,\r\n      this.value$.asObservable(),\r\n      this.config.field,\r\n      experimental,\r\n      this.eavService.eavConfig,\r\n    );\r\n    return connector;\r\n  }\r\n\r\n  private calculateRegularProps() {\r\n    const connectorHost: ConnectorHost<any> = {\r\n      forceConnectorSave$: this.eavService.forceConnectorSave$,\r\n      update: (value) => {\r\n        this.zone.run(() => { this.updateControl(this.control, value); });\r\n      },\r\n      expand: (expand, componentTag) => {\r\n        this.zone.run(() => {\r\n          this.editRoutingService.expand(expand, this.config.field.index, this.config.entity.entityGuid, componentTag);\r\n        });\r\n      },\r\n    };\r\n    return connectorHost;\r\n  }\r\n\r\n  private calculateExperimentalProps() {\r\n    let allInputTypeNames: InputTypeName[];\r\n    this.contentTypeService.getContentTypeById(this.config.entity.contentTypeId).pipe(take(1)).subscribe(data => {\r\n      allInputTypeNames = InputFieldHelper.calculateInputTypes(data.contentType.attributes, this.inputTypeService);\r\n    });\r\n\r\n    const experimentalProps: ExperimentalProps = {\r\n      entityGuid: this.config.entity.entityGuid,\r\n      allInputTypeNames,\r\n      formGroup: this.group,\r\n      translateService: this.translateService,\r\n      isExpanded$: this.editRoutingService.isExpanded(this.config.field.index, this.config.entity.entityGuid),\r\n      dropzone: this.config.dropzone,\r\n      adam: this.config.adam,\r\n      updateField: (name, value) => {\r\n        this.zone.run(() => { this.updateControl(this.group.controls[name], value); });\r\n      },\r\n      isFeatureEnabled: (guid) => this.featureService.isFeatureEnabled(guid),\r\n      setFocused: (focused) => {\r\n        this.zone.run(() => { this.config.field.focused$.next(focused); });\r\n      },\r\n      openPagePicker: (params, callback) => {\r\n        this.zone.run(() => { this.dnnBridgeService.open('pagepicker', params, callback); });\r\n      },\r\n      getUrlOfId: (value, callback) => {\r\n        this.zone.run(() => { this.getUrlOfId(value, callback); });\r\n      },\r\n    };\r\n\r\n    return experimentalProps;\r\n  }\r\n\r\n  private getUrlOfId(value: string, callback: (value: string) => void) {\r\n    if (!value) { return; }\r\n\r\n    // handle short-ID links like file:17\r\n    const contentType = this.config.entity.header.ContentTypeName;\r\n    const entityGuid = this.config.entity.header.Guid;\r\n    const field = this.config.field.name;\r\n    this.dnnBridgeService.getUrlOfId(value, contentType, entityGuid, field).subscribe(path => {\r\n      if (!path) { return; }\r\n      callback(path);\r\n    });\r\n  }\r\n\r\n  private updateControl(control: AbstractControl, value: any) {\r\n    if (control == null || control.disabled) { return; }\r\n\r\n    if (control.value !== value) { control.patchValue(value); }\r\n    if (!control.dirty) { control.markAsDirty(); }\r\n    if (!control.touched) { control.markAsTouched(); }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceBase, EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { map } from 'rxjs/operators';\r\nimport { ContentType } from '../../models/eav';\r\nimport { JsonContentType1 } from '../../models/json-format-v1';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ContentTypeService extends EntityCollectionServiceBase<ContentType> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('ContentType', serviceElementsFactory);\r\n  }\r\n\r\n  /** Add new content types to the store */\r\n  addContentTypes(rawContentTypes: JsonContentType1[]) {\r\n    const builtContentTypes = rawContentTypes.map(rawCT => ContentType.create(rawCT));\r\n    this.addManyToCache(builtContentTypes);\r\n  }\r\n\r\n  /** Get content type observable from the store */\r\n  getContentTypeById(id: string) {\r\n    return this.entities$.pipe(\r\n      map(contentTypes => contentTypes.find(contentType => contentType.contentType.id === id))\r\n      // maybe add distinctUntilChanged()\r\n    );\r\n  }\r\n}\r\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, Input, NgZone, OnDestroy, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { angularConsoleLog } from '../../../../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\nimport { FieldConfigSet } from '../../../../../eav-dynamic-form/model/field-config';\r\nimport { DnnBridgeService } from '../../../../../shared/services/dnn-bridge.service';\r\nimport { EavService } from '../../../../../shared/services/eav.service';\r\nimport { EditRoutingService } from '../../../../../shared/services/edit-routing.service';\r\nimport { ContentTypeService } from '../../../../../shared/store/ngrx-data/content-type.service';\r\nimport { FeatureService } from '../../../../../shared/store/ngrx-data/feature.service';\r\nimport { InputTypeService } from '../../../../../shared/store/ngrx-data/input-type.service';\r\nimport { ConnectorHelper } from './connector.helper';\r\n\r\n@Component({\r\n  selector: 'app-connector',\r\n  templateUrl: './connector.component.html',\r\n  styleUrls: ['./connector.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ConnectorComponent implements AfterViewInit, OnDestroy {\r\n  @ViewChild('customElContainer') customElContainerRef: ElementRef;\r\n\r\n  @Input() config: FieldConfigSet;\r\n  @Input() group: FormGroup;\r\n\r\n  private connectorCreator: ConnectorHelper;\r\n\r\n  constructor(\r\n    private eavService: EavService,\r\n    private translateService: TranslateService,\r\n    private contentTypeService: ContentTypeService,\r\n    private inputTypeService: InputTypeService,\r\n    private featureService: FeatureService,\r\n    private editRoutingService: EditRoutingService,\r\n    private dnnBridgeService: DnnBridgeService,\r\n    private zone: NgZone,\r\n  ) { }\r\n\r\n  ngAfterViewInit() {\r\n    const componentTag = history?.state?.componentTag || `field-${this.config.field.inputType}-dialog`;\r\n    angularConsoleLog('Connector created for:', componentTag);\r\n    this.connectorCreator = new ConnectorHelper(\r\n      this.config,\r\n      this.group,\r\n      this.customElContainerRef,\r\n      componentTag,\r\n      this.eavService,\r\n      this.translateService,\r\n      this.contentTypeService,\r\n      this.inputTypeService,\r\n      this.featureService,\r\n      this.editRoutingService,\r\n      this.dnnBridgeService,\r\n      this.zone,\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    angularConsoleLog('Connector destroyed');\r\n    this.connectorCreator.destroy();\r\n  }\r\n}\r\n","<div #customElContainer style=\"height:100%; position:relative;\"></div>\r\n","<ng-container *ngIf=\"{\r\n  loading: loading$ | async,\r\n  isExpanded: isExpanded$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n  <mat-spinner *ngIf=\"data.loading\" color=\"accent\"></mat-spinner>\r\n  <app-connector [config]=\"config\" [group]=\"group\" *ngIf=\"!data.loading && data.isExpanded\"></app-connector>\r\n</ng-container>\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { angularConsoleLog } from '../../../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { InputType as InputTypeModel } from '../../../../shared/models/eav';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { EditRoutingService } from '../../../../shared/services/edit-routing.service';\r\nimport { ScriptsLoaderService } from '../../../../shared/services/scripts-loader.service';\r\nimport { InputTypeService } from '../../../../shared/store/ngrx-data/input-type.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { BaseComponent } from '../../base/base.component';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'external-web-component',\r\n  templateUrl: './external-web-component.component.html',\r\n  styleUrls: ['./external-web-component.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({})\r\nexport class ExternalWebComponentComponent extends BaseComponent<string> implements OnInit, OnDestroy {\r\n  loading$ = new BehaviorSubject(true);\r\n  isExpanded$: Observable<boolean>;\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private inputTypeService: InputTypeService,\r\n    private scriptsLoaderService: ScriptsLoaderService,\r\n    private editRoutingService: EditRoutingService,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.isExpanded$ = this.editRoutingService.isExpanded(this.config.field.index, this.config.entity.entityGuid);\r\n    this.loadAssets();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.loading$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  private loadAssets() {\r\n    let inputType: InputTypeModel;\r\n    this.inputTypeService.getInputTypeById(this.config.field.inputType).pipe(take(1)).subscribe(type => {\r\n      inputType = type;\r\n    });\r\n\r\n    const assets = inputType.AngularAssets.split('\\n');\r\n    if (assets.length === 0) { return; }\r\n    this.scriptsLoaderService.load(assets, this.assetsLoaded.bind(this));\r\n  }\r\n\r\n  private assetsLoaded() {\r\n    angularConsoleLog('ExternalWebcomponentComponent', this.config.field.name, 'loaded');\r\n    this.loading$.next(false);\r\n  }\r\n}\r\n","<ng-container *ngIf=\"{\r\n  useTimePicker: useTimePicker$ | async,\r\n  placeholder: placeholder$ | async,\r\n  required: required$ | async,\r\n  disabled: disabled$ | async,\r\n  label: label$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\" *ngIf=\"!data.useTimePicker\">\r\n    <input matInput [formControlName]=\"config.field.name\" [matDatepicker]=\"picker\" [placeholder]=\"data.placeholder\"\r\n      [required]=\"data.required\">\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\" [matTooltip]=\"'Fields.DateTime.Open' | translate\">\r\n    </mat-datepicker-toggle>\r\n    <mat-datepicker #picker></mat-datepicker>\r\n    <mat-label>{{ data.label }}</mat-label>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\" *ngIf=\"data.useTimePicker\">\r\n    <input matInput [formControlName]=\"config.field.name\" [ngxMatDatetimePicker]=\"picker\"\r\n      [placeholder]=\"data.placeholder\" [required]=\"data.required\">\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\" [matTooltip]=\"'Fields.DateTime.Open' | translate\">\r\n    </mat-datepicker-toggle>\r\n    <ngx-mat-datetime-picker #picker></ngx-mat-datetime-picker>\r\n    <mat-label>{{ data.label }}</mat-label>\r\n  </mat-form-field>\r\n\r\n  <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n</ng-container>\r\n","import { NgxMatDateAdapter } from '@angular-material-components/datetime-picker';\r\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { BaseComponent } from '../../base/base.component';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'datetime-default',\r\n  templateUrl: './datetime-default.component.html',\r\n  styleUrls: ['./datetime-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.EavLocalizationWrapper],\r\n})\r\nexport class DatetimeDefaultComponent extends BaseComponent<string> implements OnInit, OnDestroy {\r\n  useTimePicker$: Observable<boolean>;\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private translate: TranslateService,\r\n    private dateAdapter: DateAdapter<any>,\r\n    private ngxDateTimeAdapter: NgxMatDateAdapter<any>,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n    const currentLang = this.translate.currentLang;\r\n    this.dateAdapter.setLocale(currentLang);\r\n    this.ngxDateTimeAdapter.setLocale(currentLang);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.useTimePicker$ = this.settings$.pipe(map(settings => settings.UseTimePicker));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'empty-default',\r\n  templateUrl: './empty-default.component.html',\r\n  styleUrls: ['./empty-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EmptyDefaultComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { EavConfig } from '../edit/shared/models/eav-config';\r\n\r\n/**\r\n * Create a new FieldMaskService instance and access result with resolve\r\n * @example\r\n * const mask = new FieldMaskService(\"[FirstName]\", formGroup.controls);\r\n * const maskValue = mask.resolve();\r\n *\r\n * @param mask a string like \"[FirstName] [LastName]\"\r\n * @param model usually FormGroup controls, passed into here\r\n * @param overloadPreCleanValues a function which will \"scrub\" the found field-values\r\n */\r\nexport class FieldMaskService {\r\n  private mask: string;\r\n  private model: { [key: string]: AbstractControl; };\r\n  private fields: string[] = [];\r\n  private value: string;\r\n  private findFields = /\\[.*?\\]/ig;\r\n  private unwrapField = /[\\[\\]]/ig;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(\r\n    mask: string,\r\n    model: { [key: string]: AbstractControl; },\r\n    private changeEvent: (newValue: string) => any,\r\n    overloadPreCleanValues: (key: string, value: string) => string,\r\n    private eavConfig?: EavConfig,\r\n  ) {\r\n    this.mask = mask;\r\n    this.model = model;\r\n    this.fields = this.fieldList();\r\n\r\n    if (overloadPreCleanValues) {\r\n      this.preClean = overloadPreCleanValues;\r\n    }\r\n\r\n    // bind auto-watch only if needed...\r\n    if (model && changeEvent) {\r\n      this.watchAllFields();\r\n    }\r\n  }\r\n\r\n  /** Resolves a mask to the final value */\r\n  resolve(): string {\r\n    let value = this.mask;\r\n    if (this.eavConfig != null && value != null) {\r\n      value = value.replace('[App:AppId]', this.eavConfig.appId);\r\n      value = value.replace('[App:ZoneId]', this.eavConfig.zoneId);\r\n    }\r\n    this.fields.forEach((e, i) => {\r\n      const replaceValue = this.model.hasOwnProperty(e) && this.model[e] && this.model[e].value ? this.model[e].value : '';\r\n      const cleaned = this.preClean(e, replaceValue);\r\n      value = value.replace('[' + e + ']', cleaned);\r\n    });\r\n\r\n    return value;\r\n  }\r\n\r\n  /** Retrieves a list of all fields used in the mask */\r\n  fieldList(): string[] {\r\n    const result: string[] = [];\r\n    if (!this.mask) { return result; }\r\n    const matches = this.mask.match(this.findFields);\r\n    if (matches) {\r\n      matches.forEach((e, i) => {\r\n        const staticName = e.replace(this.unwrapField, '');\r\n        result.push(staticName);\r\n      });\r\n    } else { // TODO: ask is this good\r\n      result.push(this.mask);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /** Default preClean function */\r\n  private preClean(key: string, value: string): string {\r\n    return value;\r\n  }\r\n\r\n  /** Change-event - will only fire if it really changes */\r\n  private onChange() {\r\n    const maybeNew = this.resolve();\r\n    if (this.value !== maybeNew) {\r\n      this.changeEvent(maybeNew);\r\n    }\r\n    this.value = maybeNew;\r\n  }\r\n\r\n  /** Add watcher and execute onChange */\r\n  private watchAllFields() {\r\n    // add a watch for each field in the field-mask\r\n    this.fields.forEach(field => {\r\n      if (!this.model[field]) { return; }\r\n      const valueSub = this.model[field].valueChanges.subscribe(value => this.onChange());\r\n      this.subscriptions.push(valueSub);\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    this.subscriptions.forEach(subscription => { subscription.unsubscribe(); });\r\n  }\r\n}\r\n","<div [hidden]=\"freeTextMode\">\r\n  <div class=\"ed-field\" fxLayout=\"row\" fxLayoutAlign=\"start end\">\r\n    <div\r\n      [ngClass]=\"(settings.EnableCreate && settings.EntityType && !selectedEntities.length && !settings.AllowMultiValue) ? 'ed-field__field-short' : 'ed-field__field'\">\r\n      <div [hidden]=\"!settings.AllowMultiValue && selectedEntities.length\">\r\n        <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\" [ngClass]=\"{\r\n          'mat-form-field-invalid': invalid && touched\r\n        }\">\r\n          <input matInput #autocomplete [placeholder]=\"getPlaceholder()\" [matAutocomplete]=\"auto\"\r\n            [disabled]=\"disabled || !settings.EnableAddExisting\" (blur)=\"control.markAsTouched()\"\r\n            (input)=\"filterSelectionList($event.target.value)\">\r\n          <button mat-icon-button matSuffix [disabled]=\"disabled || !settings.EnableAddExisting\"\r\n            *ngIf=\"!settings.EnableTextEntry\">\r\n            <mat-icon>arrow_drop_down</mat-icon>\r\n          </button>\r\n          <a matSuffix *ngIf=\"settings.EnableTextEntry\" fxLayoutAlign=\"center center\" appClickStopPropagation\r\n            (click)=\"toggleFreeText()\">\r\n            <button mat-icon-button [disabled]=\"disabled\">\r\n              <mat-icon [matTooltip]=\"'Fields.String.Freetext' | translate\">text_fields</mat-icon>\r\n            </button>\r\n            <button mat-icon-button [disabled]=\"disabled\" *ngIf=\"freeTextMode\">\r\n              <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n          </a>\r\n          <mat-label [ngClass]=\"{ 'mat-error': invalid && touched }\">\r\n            {{ settings.AllowMultiValue ? ('Fields.Entity.Choose' | translate) : label }}\r\n            {{ required ? '*': '' }}\r\n          </mat-label>\r\n        </mat-form-field>\r\n\r\n        <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"optionSelected($event)\">\r\n          <mat-option *ngFor=\"let item of filteredEntities\" [value]=\"item.Value\"\r\n            [disabled]=\"isOptionDisabled(item.Value)\">\r\n            <span>{{ item.Text ? item.Text : item.Value }}</span>\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n      </div>\r\n    </div>\r\n    <div fxLayoutAlign=\"end center\"\r\n      [ngClass]=\"(settings.EnableCreate && settings.EntityType && !selectedEntities.length && !settings.AllowMultiValue) ? 'ed-field__create-icon' : 'ed-field__create-icon-hide'\">\r\n      <!-- create new entity to add to this list -->\r\n      <button mat-icon-button [matTooltip]=\"'Fields.Entity.New' | translate\" [disabled]=\"disabled || disableAddNew\"\r\n        *ngIf=\"settings.EnableCreate && settings.EntityType && !selectedEntities.length && !settings.AllowMultiValue\"\r\n        (click)=\"openNewEntityDialog()\">\r\n        <mat-icon>add_circle_outline</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<mat-form-field *ngIf=\"freeTextMode\" [formGroup]=\"group\" appearance=\"standard\" color=\"accent\">\r\n  <input matInput [required]=\"required\" [formControlName]=\"config.field.name\" [placeholder]=\"placeholder\">\r\n\r\n  <a matSuffix appClickStopPropagation (click)=\"toggleFreeText()\">\r\n    <button mat-icon-button [disabled]=\"disabled\">\r\n      <mat-icon>arrow_drop_down</mat-icon>\r\n    </button>\r\n  </a>\r\n  <mat-label>{{ label }}</mat-label>\r\n</mat-form-field>\r\n\r\n<div *ngIf=\"debugEnabled$ | async\">debug: <span (click)=\"insertNull()\">add null-item</span></div>\r\n\r\n<app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n\r\n<!-- add new entity -->\r\n<div *ngIf=\"!freeTextMode && settings.EnableCreate && settings.EntityType && settings.AllowMultiValue\">\r\n  <button mat-mini-fab color=\"accent\" [matTooltip]=\"'Fields.Entity.New' | translate\"\r\n    [disabled]=\"disabled || disableAddNew\" (click)=\"openNewEntityDialog()\">\r\n    <mat-icon>add</mat-icon>\r\n  </button>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FieldSettings } from '../../../../../edit-types';\r\nimport { FieldConfigSet } from '../../../../eav-dynamic-form/model/field-config';\r\nimport { EntityInfo } from '../../../../shared/models/eav/entity-info';\r\nimport { GlobalConfigService } from '../../../../shared/services/global-configuration.service';\r\nimport { SelectedEntity } from '../entity-default/entity-default.models';\r\n\r\n@Component({\r\n  selector: 'app-entity-default-search',\r\n  templateUrl: './entity-default-search.component.html',\r\n  styleUrls: ['./entity-default-search.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EntityDefaultSearchComponent implements OnInit, OnChanges {\r\n  @ViewChild('autocomplete') autocompleteRef: ElementRef;\r\n\r\n  @Input() config: FieldConfigSet;\r\n  @Input() group: FormGroup;\r\n  @Input() control: AbstractControl;\r\n  @Input() label: string;\r\n  @Input() placeholder: string;\r\n  @Input() required: boolean;\r\n  @Input() invalid: boolean;\r\n  @Input() touched: boolean;\r\n  @Input() disabled: boolean;\r\n  @Input() freeTextMode: boolean;\r\n  @Input() settings: FieldSettings;\r\n  @Input() error: string;\r\n  @Input() disableAddNew: boolean;\r\n  @Input() selectedEntities: SelectedEntity[];\r\n  @Input() availableEntities: EntityInfo[];\r\n\r\n  @Output() toggleFreeTextMode = new EventEmitter<null>();\r\n  @Output() addSelected = new EventEmitter<string>();\r\n  @Output() editEntity = new EventEmitter<string>();\r\n\r\n  filteredEntities: EntityInfo[] = [];\r\n  debugEnabled$: Observable<boolean>;\r\n\r\n  constructor(private translate: TranslateService, private globalConfigService: GlobalConfigService) { }\r\n\r\n  ngOnInit() {\r\n    this.debugEnabled$ = this.globalConfigService.getDebugEnabled();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const availableEntities: EntityInfo[] = changes.availableEntities?.currentValue;\r\n    if (availableEntities != null) {\r\n      const filter = this.autocompleteRef?.nativeElement.value || '';\r\n      this.filterSelectionList(filter);\r\n    }\r\n  }\r\n\r\n  getPlaceholder() {\r\n    if (this.availableEntities.length) {\r\n      return 'search';\r\n    }\r\n    if (this.error) {\r\n      return this.error;\r\n    }\r\n    return this.translate.instant('Fields.EntityQuery.QueryNoItems');\r\n  }\r\n\r\n  toggleFreeText() {\r\n    if (this.disabled) { return; }\r\n    this.toggleFreeTextMode.emit();\r\n  }\r\n\r\n  filterSelectionList(filter: string) {\r\n    if (filter === '') {\r\n      this.filteredEntities = this.availableEntities;\r\n      return;\r\n    }\r\n    this.filteredEntities = this.availableEntities.filter(option =>\r\n      option.Text\r\n        ? option.Text.toLowerCase().includes(filter.toLowerCase())\r\n        : option.Value.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n\r\n  optionSelected(event: MatAutocompleteSelectedEvent) {\r\n    const selected: string = event.option.value;\r\n    this.addSelected.emit(selected);\r\n    this.autocompleteRef.nativeElement.value = '';\r\n    this.autocompleteRef.nativeElement.blur();\r\n  }\r\n\r\n  insertNull() {\r\n    this.addSelected.emit(null);\r\n  }\r\n\r\n  isOptionDisabled(value: string) {\r\n    const isSelected = !!this.selectedEntities.find(entity => entity.value === value);\r\n    return isSelected;\r\n  }\r\n\r\n  openNewEntityDialog() {\r\n    this.editEntity.emit(null);\r\n  }\r\n}\r\n","import { TranslateService } from '@ngx-translate/core';\r\nimport { Helper } from '../../../../shared/helpers/helper';\r\nimport { EntityInfo } from '../../../../shared/models/eav/entity-info';\r\nimport { SelectedEntity } from './entity-default.models';\r\n\r\nexport function calculateSelectedEntities(\r\n  fieldValue: string | string[],\r\n  separator: string,\r\n  availableEntities: EntityInfo[],\r\n  translate: TranslateService,\r\n) {\r\n  // name is guid or freetext\r\n  const names = typeof fieldValue === 'string' ? Helper.convertValueToArray(fieldValue, separator) : fieldValue;\r\n  const selectedEntities = names.map(name => {\r\n    const entity = availableEntities.find(e => e.Value === name);\r\n    let label: string;\r\n    if (name == null) {\r\n      label = 'empty slot';\r\n    } else if (typeof fieldValue === 'string') {\r\n      label = entity != null ? entity.Text : name;\r\n    } else {\r\n      label = entity != null ? entity.Text : translate.instant('Fields.Entity.EntityNotFound');\r\n    }\r\n    const selectedEntity: SelectedEntity = {\r\n      value: name,\r\n      label,\r\n      tooltip: `${label} (${name})`,\r\n      isFreeTextOrNotFound: entity == null,\r\n    };\r\n    return selectedEntity;\r\n  });\r\n\r\n  return selectedEntities;\r\n}\r\n","<mat-label class=\"field-label\" *ngIf=\"!settings.AllowMultiValue\" [ngClass]=\"{ 'disabled': disabled }\">\r\n  {{ label }} {{ required ? '*': '' }}\r\n</mat-label>\r\n\r\n<div cdkDropList [cdkDropListDisabled]=\"!settings.AllowMultiValue || disabled\" (cdkDropListDropped)=\"drop($event)\"\r\n  [ngClass]=\"{\r\n    'normal-list': !settings.AllowMultiValue,\r\n    'dnd-list': settings.AllowMultiValue\r\n  }\">\r\n  <!-- Normal list usually shows only one item, but can show \"empty slot\" / \"null-item\" in debug mode -->\r\n  <div *ngFor=\"let item of selectedEntities; trackBy: trackByFn; let index = index\" cdkDrag [ngClass]=\"{\r\n      'normal-item': !settings.AllowMultiValue,\r\n      'dnd-item': settings.AllowMultiValue,\r\n      'disabled': disabled\r\n    }\">\r\n    <div class=\"item-title\" [ngClass]=\"{ 'disabled': disabled }\">\r\n      <mat-icon class=\"item-title__icon\" *ngIf=\"settings.AllowMultiValue\" [matTooltipDisabled]=\"disabled\"\r\n        [matTooltip]=\"'Fields.Entity.DragMove' | translate\">\r\n        drag_handle\r\n      </mat-icon>\r\n      <span class=\"item-title__text\" [matTooltip]=\"item.tooltip\">\r\n        {{ item.label }}\r\n      </span>\r\n    </div>\r\n    <div class=\"item-actions\">\r\n      <!-- Disable edit only if it was disabled in the settings, not if disabled by language change -->\r\n      <button mat-icon-button *ngIf=\"settings.EnableEdit && !item.isFreeTextOrNotFound\"\r\n        [matTooltip]=\"'Fields.Entity.Edit' | translate\" [disabled]=\"config.field.disabled\" appMousedownStopPropagation\r\n        (click)=\"edit(item.value)\">\r\n        <mat-icon>edit</mat-icon>\r\n      </button>\r\n      <button mat-icon-button *ngIf=\"settings.EnableDelete && !item.isFreeTextOrNotFound\"\r\n        [matTooltip]=\"'Fields.Entity.Delete' | translate\" [disabled]=\"disabled\" appMousedownStopPropagation\r\n        (click)=\"deleteItem(index, item.value)\">\r\n        <mat-icon>delete</mat-icon>\r\n      </button>\r\n      <button mat-icon-button *ngIf=\"settings.EnableRemove\" [matTooltip]=\"'Fields.Entity.Remove' | translate\"\r\n        [disabled]=\"disabled\" appMousedownStopPropagation (click)=\"removeItem(index)\">\r\n        <mat-icon>{{ settings.AllowMultiValue ? 'clear' : 'arrow_drop_down' }}</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { FieldSettings } from '../../../../../edit-types';\r\nimport { FieldConfigSet } from '../../../../eav-dynamic-form/model/field-config';\r\nimport { DeleteEntityProps, SelectedEntity } from '../entity-default/entity-default.models';\r\nimport { ReorderIndexes } from './entity-default-list.models';\r\n\r\n@Component({\r\n  selector: 'app-entity-default-list',\r\n  templateUrl: './entity-default-list.component.html',\r\n  styleUrls: ['./entity-default-list.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EntityDefaultListComponent {\r\n  @Input() config: FieldConfigSet;\r\n  @Input() label: string;\r\n  @Input() required: boolean;\r\n  @Input() disabled: boolean;\r\n  @Input() freeTextMode: boolean;\r\n  @Input() settings: FieldSettings;\r\n  @Input() selectedEntities: SelectedEntity[];\r\n\r\n  @Output() reorder = new EventEmitter<ReorderIndexes>();\r\n  @Output() removeSelected = new EventEmitter<number>();\r\n  @Output() editEntity = new EventEmitter<string>();\r\n  @Output() deleteEntity = new EventEmitter<DeleteEntityProps>();\r\n\r\n  constructor() { }\r\n\r\n  trackByFn(index: number, item: SelectedEntity) {\r\n    return item.value;\r\n  }\r\n\r\n  drop(event: CdkDragDrop<any[]>) {\r\n    moveItemInArray(this.selectedEntities, event.previousIndex, event.currentIndex);\r\n    const reorderIndexes: ReorderIndexes = {\r\n      previousIndex: event.previousIndex,\r\n      currentIndex: event.currentIndex,\r\n    };\r\n    this.reorder.emit(reorderIndexes);\r\n  }\r\n\r\n  edit(entityGuid: string) {\r\n    this.editEntity.emit(entityGuid);\r\n  }\r\n\r\n  removeItem(index: number) {\r\n    this.removeSelected.emit(index);\r\n  }\r\n\r\n  deleteItem(index: number, entityGuid: string) {\r\n    this.deleteEntity.emit({ index, entityGuid });\r\n  }\r\n}\r\n","<!--\r\n  This template is used for all entity like fields,\r\n  e.g. EntityDefault, EntityContentBlocks, EntityQuery, StringDropdownQuery\r\n-->\r\n<ng-container *ngIf=\"{\r\n  label: label$ | async,\r\n  placeholder: placeholder$ | async,\r\n  required: required$ | async,\r\n  invalid: invalid$ | async,\r\n  touched: control.touched,\r\n  disabled: disabled$ | async,\r\n  freeTextMode: freeTextMode$ | async,\r\n  settings: settings$ | async,\r\n  selectedEntities: selectedEntities$ | async,\r\n  availableEntities: config.entityCache$ | async,\r\n  disableAddNew: disableAddNew$ | async,\r\n  isExpanded: isExpanded$ | async,\r\n  error: error$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n  <app-entity-default-list\r\n    *ngIf=\"!data.freeTextMode && data.selectedEntities.length && (!data.settings.AllowMultiValue || (data.settings.AllowMultiValue && data.isExpanded))\"\r\n    [config]=\"config\" [label]=\"data.label\" [required]=\"data.required\" [disabled]=\"data.disabled\"\r\n    [freeTextMode]=\"data.freeTextMode\" [settings]=\"data.settings\" [selectedEntities]=\"data.selectedEntities\"\r\n    (reorder)=\"reorder($event)\" (removeSelected)=\"removeSelected($event)\" (editEntity)=\"editEntity($event)\"\r\n    (deleteEntity)=\"deleteEntity($event)\">\r\n  </app-entity-default-list>\r\n\r\n  <app-entity-default-search [config]=\"config\" [group]=\"group\" [control]=\"control\" [label]=\"data.label\"\r\n    [placeholder]=\"data.placeholder\" [required]=\"data.required\" [invalid]=\"data.invalid\" [touched]=\"data.touched\"\r\n    [disabled]=\"data.disabled\" [freeTextMode]=\"data.freeTextMode\" [settings]=\"data.settings\"\r\n    [selectedEntities]=\"data.selectedEntities\" [availableEntities]=\"data.availableEntities\"\r\n    [disableAddNew]=\"data.disableAddNew\" [error]=\"data.error\" (toggleFreeTextMode)=\"toggleFreeTextMode()\"\r\n    (addSelected)=\"addSelected($event)\" (editEntity)=\"editEntity($event)\">\r\n  </app-entity-default-search>\r\n</ng-container>\r\n","import { moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FieldSettings } from '../../../../../edit-types';\r\nimport { EditForm } from '../../../../../ng-dialogs/src/app/shared/models/edit-form.model';\r\nimport { FieldMaskService } from '../../../../../shared/field-mask.service';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { Helper } from '../../../../shared/helpers/helper';\r\nimport { EntityInfo } from '../../../../shared/models/eav/entity-info';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { EditRoutingService } from '../../../../shared/services/edit-routing.service';\r\nimport { EntityService } from '../../../../shared/services/entity.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { ReorderIndexes } from '../entity-default-list/entity-default-list.models';\r\nimport { EntityDefaultSearchComponent } from '../entity-default-search/entity-default-search.component';\r\nimport { calculateSelectedEntities } from './entity-default.helpers';\r\nimport { DeleteEntityProps, SelectedEntity } from './entity-default.models';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'entity-default',\r\n  templateUrl: './entity-default.component.html',\r\n  styleUrls: ['./entity-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({})\r\nexport class EntityDefaultComponent extends BaseComponent<string | string[]> implements OnInit, OnDestroy {\r\n  @ViewChild(EntityDefaultSearchComponent) private entitySearchComponent: EntityDefaultSearchComponent;\r\n\r\n  useQuery = false;\r\n  contentTypeMask: FieldMaskService;\r\n  error$ = new BehaviorSubject('');\r\n  freeTextMode$ = new BehaviorSubject(false);\r\n  disableAddNew$ = new BehaviorSubject(true);\r\n  isExpanded$: Observable<boolean>;\r\n  selectedEntities$: Observable<SelectedEntity[]>;\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private entityService: EntityService,\r\n    public translate: TranslateService,\r\n    private editRoutingService: EditRoutingService,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.config.entityCache$ = new BehaviorSubject<EntityInfo[]>([]);\r\n\r\n    this.settings$ = new BehaviorSubject<FieldSettings>(null);\r\n    this.subscription.add(\r\n      this.config.field.settings$.pipe(map(settings => this.calculateSettings(settings))).subscribe(settings => {\r\n        this.settings$.next(settings);\r\n      })\r\n    );\r\n    this.selectedEntities$ = combineLatest([this.value$, this.settings$, this.config.entityCache$]).pipe(\r\n      map(([fieldValue, settings, availableEntities]) => {\r\n        const selected = calculateSelectedEntities(fieldValue, settings.Separator, availableEntities, this.translate);\r\n        return selected;\r\n      }),\r\n    );\r\n\r\n    this.isExpanded$ = this.editRoutingService.isExpanded(this.config.field.index, this.config.entity.entityGuid);\r\n\r\n    this.subscription.add(\r\n      this.settings$.subscribe(settings => {\r\n        this.contentTypeMask?.destroy();\r\n        this.contentTypeMask = new FieldMaskService(\r\n          settings.EntityType,\r\n          this.group.controls,\r\n          !this.useQuery ? this.fetchAvailableEntities.bind(this) : this.updateAddNew.bind(this),\r\n          null,\r\n          this.eavService.eavConfig,\r\n        );\r\n      })\r\n    );\r\n\r\n    if (!this.useQuery) {\r\n      this.fetchAvailableEntities();\r\n    } else {\r\n      this.updateAddNew();\r\n    }\r\n\r\n    this.refreshOnChildClosed();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.settings$.complete();\r\n    this.error$.complete();\r\n    this.freeTextMode$.complete();\r\n    this.disableAddNew$.complete();\r\n    this.config.entityCache$.complete();\r\n    this.contentTypeMask.destroy();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  toggleFreeTextMode() {\r\n    this.freeTextMode$.next(!this.freeTextMode$.value);\r\n  }\r\n\r\n  /** Overridden in subclass */\r\n  calculateSettings(settings: FieldSettings) {\r\n    const fixedSettings = { ...settings };\r\n    if (fixedSettings.EntityType == null) { fixedSettings.EntityType = ''; }\r\n    if (fixedSettings.AllowMultiValue == null) { fixedSettings.AllowMultiValue = false; }\r\n    if (fixedSettings.EnableEdit == null) { fixedSettings.EnableEdit = true; }\r\n    if (fixedSettings.EnableCreate == null) { fixedSettings.EnableCreate = true; }\r\n    if (fixedSettings.EnableAddExisting == null) { fixedSettings.EnableAddExisting = true; }\r\n    if (fixedSettings.EnableRemove == null) { fixedSettings.EnableRemove = true; }\r\n    if (fixedSettings.EnableDelete == null) { fixedSettings.EnableDelete = false; }\r\n    return fixedSettings;\r\n  }\r\n\r\n  /** Overridden in subclass */\r\n  fetchAvailableEntities() {\r\n    this.updateAddNew();\r\n    const contentTypeName = this.contentTypeMask.resolve();\r\n    const enableAddExisting = this.settings$.value.EnableAddExisting;\r\n    // spm TODO: Should this work like this?\r\n    // check if we should get all or only the selected ones...\r\n    // if we can't add, then we only need one...\r\n    const filterText = enableAddExisting ? null : this.control.value;\r\n    this.entityService.getAvailableEntities(filterText, contentTypeName).subscribe(items => {\r\n      this.config.entityCache$.next(items);\r\n    });\r\n  }\r\n\r\n  updateAddNew() {\r\n    const contentTypeName = this.contentTypeMask.resolve();\r\n    this.disableAddNew$.next(!contentTypeName);\r\n  }\r\n\r\n  reorder(reorderIndexes: ReorderIndexes) {\r\n    this.updateValue('reorder', reorderIndexes);\r\n  }\r\n\r\n  addSelected(guid: string) {\r\n    this.updateValue('add', guid);\r\n  }\r\n\r\n  removeSelected(index: number) {\r\n    this.updateValue('delete', index);\r\n  }\r\n\r\n  editEntity(entityGuid: string) {\r\n    let form: EditForm;\r\n    if (entityGuid == null) {\r\n      const contentTypeName = this.contentTypeMask.resolve();\r\n      form = {\r\n        items: [{ ContentTypeName: contentTypeName }],\r\n      };\r\n    } else {\r\n      const entity = this.config.entityCache$.value.find(e => e.Value === entityGuid);\r\n      form = {\r\n        items: [{ EntityId: entity.Id }],\r\n      };\r\n    }\r\n    this.editRoutingService.open(this.config.field.index, this.config.entity.entityGuid, form);\r\n  }\r\n\r\n  deleteEntity(props: DeleteEntityProps) {\r\n    const entity = this.config.entityCache$.value.find(e => e.Value === props.entityGuid);\r\n    const id = entity.Id.toString();\r\n    const title = entity.Text;\r\n    const contentType = this.contentTypeMask.resolve();\r\n\r\n    const confirmed = confirm(this.translate.instant('Data.Delete.Question', { title, id }));\r\n    if (!confirmed) { return; }\r\n\r\n    this.snackBar.open('Deleting...');\r\n    this.entityService.delete(contentType, id, false).subscribe({\r\n      next: () => {\r\n        this.snackBar.open('Deleted', null, { duration: 2000 });\r\n        this.removeSelected(props.index);\r\n        this.fetchAvailableEntities();\r\n      },\r\n      error: (err: HttpErrorResponse) => {\r\n        this.snackBar.dismiss();\r\n        if (!confirm(this.translate.instant('Data.Delete.Question', { title, id }))) { return; }\r\n        this.snackBar.open('Deleting...');\r\n        this.entityService.delete(contentType, id, true).subscribe(res2 => {\r\n          this.snackBar.open('Deleted', null, { duration: 2000 });\r\n          this.removeSelected(props.index);\r\n          this.fetchAvailableEntities();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.editRoutingService.childFormClosed().subscribe(() => {\r\n        this.fetchAvailableEntities();\r\n      })\r\n    );\r\n    this.subscription.add(\r\n      this.editRoutingService.childFormResult(this.config.field.index, this.config.entity.entityGuid).subscribe(result => {\r\n        const newItemGuid = Object.keys(result)[0];\r\n        this.addSelected(newItemGuid);\r\n      })\r\n    );\r\n  }\r\n\r\n  private updateValue(action: 'add' | 'delete' | 'reorder', value: string | number | ReorderIndexes) {\r\n    const valueArray: string[] = (typeof this.control.value === 'string')\r\n      ? Helper.convertValueToArray(this.control.value, this.settings$.value.Separator)\r\n      : [...this.control.value];\r\n\r\n    switch (action) {\r\n      case 'add':\r\n        const guid = value as string;\r\n        valueArray.push(guid);\r\n        break;\r\n      case 'delete':\r\n        const index = value as number;\r\n        valueArray.splice(index, 1);\r\n        break;\r\n      case 'reorder':\r\n        const reorderIndexes = value as ReorderIndexes;\r\n        moveItemInArray(valueArray, reorderIndexes.previousIndex, reorderIndexes.currentIndex);\r\n        break;\r\n    }\r\n\r\n    if (typeof this.control.value === 'string') {\r\n      const valueString = Helper.convertArrayToString(valueArray, this.settings$.value.Separator);\r\n      this.control.patchValue(valueString);\r\n    } else {\r\n      this.control.patchValue(valueArray);\r\n    }\r\n\r\n    if (!this.control.dirty) {\r\n      this.control.markAsDirty();\r\n    }\r\n\r\n    if (action === 'delete' && !valueArray.length) {\r\n      setTimeout(() => {\r\n        this.entitySearchComponent.autocompleteRef?.nativeElement.focus();\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","\r\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { FieldSettings } from '../../../../../edit-types';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { EditRoutingService } from '../../../../shared/services/edit-routing.service';\r\nimport { EntityService } from '../../../../shared/services/entity.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { EntityDefaultComponent } from '../entity-default/entity-default.component';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'entity-content-blocks',\r\n  templateUrl: '../entity-default/entity-default.component.html',\r\n  styleUrls: ['../entity-default/entity-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({})\r\nexport class EntityContentBlockComponent extends EntityDefaultComponent implements OnInit, OnDestroy {\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    entityService: EntityService,\r\n    translate: TranslateService,\r\n    editRoutingService: EditRoutingService,\r\n    snackBar: MatSnackBar,\r\n  ) {\r\n    super(eavService, validationMessagesService, entityService, translate, editRoutingService, snackBar);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  /** Override function in superclass */\r\n  calculateSettings(settings: FieldSettings) {\r\n    const fixedSettings = super.calculateSettings(settings);\r\n    fixedSettings.AllowMultiValue = false;\r\n    fixedSettings.EnableRemove = true;\r\n    fixedSettings.AllowMultiValue = true;\r\n    fixedSettings.EnableAddExisting = false;\r\n    fixedSettings.EnableCreate = false;\r\n    fixedSettings.EnableEdit = false;\r\n    fixedSettings.EntityType = 'ContentGroupReference';\r\n    return fixedSettings;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { FieldSettings } from '../../../../../edit-types';\r\nimport { FieldMaskService } from '../../../../../shared/field-mask.service';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { EntityInfo } from '../../../../shared/models/eav/entity-info';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { EditRoutingService } from '../../../../shared/services/edit-routing.service';\r\nimport { EntityService } from '../../../../shared/services/entity.service';\r\nimport { QueryService } from '../../../../shared/services/query.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { EntityDefaultComponent } from '../entity-default/entity-default.component';\r\nimport { QueryEntity } from './entity-query.models';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'entity-query',\r\n  templateUrl: '../entity-default/entity-default.component.html',\r\n  styleUrls: ['../entity-default/entity-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({})\r\nexport class EntityQueryComponent extends EntityDefaultComponent implements OnInit, OnDestroy {\r\n  useQuery = true;\r\n  private paramsMask: FieldMaskService;\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    entityService: EntityService,\r\n    translate: TranslateService,\r\n    editRoutingService: EditRoutingService,\r\n    snackBar: MatSnackBar,\r\n    private queryService: QueryService,\r\n  ) {\r\n    super(eavService, validationMessagesService, entityService, translate, editRoutingService, snackBar);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    this.subscription.add(\r\n      this.settings$.subscribe(settings => {\r\n        this.paramsMask?.destroy();\r\n        this.paramsMask = new FieldMaskService(\r\n          settings.UrlParameters,\r\n          this.group.controls,\r\n          this.fetchAvailableEntities.bind(this),\r\n          null,\r\n          this.eavService.eavConfig,\r\n        );\r\n      })\r\n    );\r\n\r\n    this.fetchAvailableEntities();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  /** Override function in superclass */\r\n  calculateSettings(settings: FieldSettings) {\r\n    const fixedSettings = super.calculateSettings(settings);\r\n    if (fixedSettings.Query == null) { fixedSettings.Query = ''; }\r\n    if (fixedSettings.StreamName == null || fixedSettings.StreamName === '') { fixedSettings.StreamName = 'Default'; }\r\n    if (fixedSettings.UrlParameters == null) { fixedSettings.UrlParameters = ''; }\r\n    return fixedSettings;\r\n  }\r\n\r\n  /** Override function in superclass */\r\n  fetchAvailableEntities() {\r\n    const settings = this.settings$.value;\r\n    if (!settings.Query) {\r\n      alert(`No query defined for ${this.config.field.name} - can't load entities`);\r\n      return;\r\n    }\r\n\r\n    const streamName = settings.StreamName;\r\n    const queryUrl = settings.Query.includes('/') ? settings.Query : `${settings.Query}/${streamName}`;\r\n    const params = this.paramsMask.resolve();\r\n\r\n    this.queryService.getAvailableEntities(queryUrl, true, params).subscribe({\r\n      next: (data) => {\r\n        if (!data) {\r\n          this.error$.next(this.translate.instant('Fields.EntityQuery.QueryError'));\r\n          return;\r\n        }\r\n        if (!data[streamName]) {\r\n          this.error$.next(this.translate.instant('Fields.EntityQuery.QueryStreamNotFound') + streamName);\r\n          return;\r\n        }\r\n        const items: EntityInfo[] = data[streamName].map(this.queryEntityMapping.bind(this));\r\n        this.config.entityCache$.next(items);\r\n      },\r\n      error: (error) => {\r\n        console.error(error);\r\n        console.error(`${this.translate.instant('Fields.EntityQuery.QueryError')} - ${error.data}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Overridden in subclass */\r\n  queryEntityMapping(entity: QueryEntity) {\r\n    const entityInfo: EntityInfo = {\r\n      Id: entity.Id,\r\n      Value: entity.Guid,\r\n      Text: entity.Title,\r\n    };\r\n    return entityInfo;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"{\r\n  disabled: disabled$ | async,\r\n  buttons: buttons$ | async,\r\n  settings: settings$ | async,\r\n  value: value$ | async,\r\n  preview: preview$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <ng-container *ngIf=\"open$ | async\">\r\n\r\n    <div class=\"fabs-box\">\r\n      <button mat-mini-fab color=\"accent\" [matTooltip]=\"'Fields.Hyperlink.Default.AdamTip' | translate\"\r\n        *ngIf=\"data.buttons.includes('adam')\" [disabled]=\"data.disabled\" (click)=\"toggleAdam(false, false)\">\r\n        <mat-icon svgIcon=\"appleFilled\"></mat-icon>\r\n      </button>\r\n      <button mat-mini-fab color=\"primary\" [matTooltip]=\"'Fields.Hyperlink.Default.PageTip' | translate\"\r\n        *ngIf=\"data.buttons.includes('page')\" [disabled]=\"data.disabled\" (click)=\"openPagePicker()\">\r\n        <mat-icon svgIcon=\"sitemap\"></mat-icon>\r\n      </button>\r\n      <button mat-mini-fab color=\"primary\" [matTooltip]=\"'Fields.Hyperlink.Default.MoreOptions' | translate\"\r\n        *ngIf=\"data.buttons.includes('more')\" [disabled]=\"data.disabled\" [matMenuTriggerFor]=\"menu\">\r\n        <mat-icon>more_vert</mat-icon>\r\n      </button>\r\n    </div>\r\n\r\n    <mat-menu #menu=\"matMenu\" class=\"menu-box\">\r\n      <button mat-menu-item *ngIf=\"data.settings.ShowAdam\" (click)=\"toggleAdam(false, false)\">\r\n        <mat-icon svgIcon=\"appleFilled\"></mat-icon>\r\n        <span>{{ 'Fields.Hyperlink.Default.MenuAdam' | translate }}</span>\r\n      </button>\r\n      <button mat-menu-item *ngIf=\"data.settings.ShowPagePicker\" (click)=\"openPagePicker()\">\r\n        <mat-icon svgIcon=\"sitemap\"></mat-icon>\r\n        <span>{{ 'Fields.Hyperlink.Default.MenuPage' | translate }}</span>\r\n      </button>\r\n      <button mat-menu-item *ngIf=\"data.settings.ShowImageManager\" (click)=\"toggleAdam(true, true)\">\r\n        <mat-icon svgIcon=\"file-image\"></mat-icon>\r\n        <span>{{ 'Fields.Hyperlink.Default.MenuImage' | translate }}</span>\r\n      </button>\r\n      <button mat-menu-item *ngIf=\"data.settings.ShowFileManager\" (click)=\"toggleAdam(true, false)\">\r\n        <mat-icon svgIcon=\"file\"></mat-icon>\r\n        <span>{{ 'Fields.Hyperlink.Default.MenuDocs' | translate }}</span>\r\n      </button>\r\n    </mat-menu>\r\n\r\n    <!-- content -->\r\n    <div class=\"mdc-layout-grid\">\r\n      <div class=\"mdc-layout-grid__inner\">\r\n        <mat-card class=\"mdc-layout-grid__cell--span-12 hyperlink-card shadow-bottom-z-1\">\r\n          <div class=\"hyperlink-input-link-wrapper\">\r\n            <!-- input -->\r\n            <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\">\r\n              <input matInput [formControlName]=\"config.field.name\"\r\n                [matTooltip]=\"'Fields.Hyperlink.Default.Tooltip' | translate\" matTooltipPosition=\"above\"\r\n                [placeholder]=\"placeholder$ | async\" [required]=\"required$ | async\" appPasteClipboardImage\r\n                [config]=\"config\" [elementType]=\"'input'\">\r\n              <mat-label>{{ label$ | async }}</mat-label>\r\n            </mat-form-field>\r\n            <!-- link absolutely positioned above input -->\r\n            <div *ngIf=\"data.preview?.floatingText\" class=\"hyperlink-floating\">\r\n              <div class=\"hyperlink-floating__value\">{{ data.value }}</div>\r\n              <div class=\"hyperlink-floating__url-box\">\r\n                <a [href]=\"data.preview.url\" target=\"_blank\" class=\"hyperlink-floating__url\"\r\n                  [matTooltip]=\"data.preview.url\">\r\n                  <span>{{ data.preview.floatingText }}</span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"preview-wrapper\" *ngIf=\"data.value && data.preview\">\r\n            <!-- image -->\r\n            <a [href]=\"data.preview.thumbnailUrl\" target=\"_blank\" *ngIf=\"data.preview.isImage\">\r\n              <div class=\"preview-image-box\">\r\n                <img [src]=\"data.preview.thumbnailPreviewUrl\" class=\"preview-image\" />\r\n              </div>\r\n            </a>\r\n            <!-- icon -->\r\n            <a [href]=\"data.preview.url\" target=\"_blank\" [matTooltip]=\"data.preview.url\" matTooltipPosition=\"right\"\r\n              *ngIf=\"!data.preview.isImage\">\r\n              <div class=\"preview-icon-box\">\r\n                <mat-icon *ngIf=\"data.preview.isKnownType\">{{ data.preview.icon }}</mat-icon>\r\n                <mat-icon *ngIf=\"!data.preview.isKnownType\" [svgIcon]=\"data.preview.icon\"></mat-icon>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n\r\n  </ng-container>\r\n</ng-container>\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AdamItem, AdamPostResponse } from '../../../../../edit-types';\r\nimport { FieldSettings } from '../../../../../edit-types';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { DnnBridgeService } from '../../../../shared/services/dnn-bridge.service';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { EditRoutingService } from '../../../../shared/services/edit-routing.service';\r\nimport { FileTypeService } from '../../../../shared/services/file-type.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { DnnBridgeConnectorParams, PagePickerResult } from '../../dnn-bridge/dnn-bridge.models';\r\nimport { Preview } from './hyperlink-default.models';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'hyperlink-default',\r\n  templateUrl: './hyperlink-default.component.html',\r\n  styleUrls: ['./hyperlink-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.DropzoneWrapper, WrappersConstants.EavLocalizationWrapper,\r\n  WrappersConstants.HyperlinkDefaultExpandableWrapper, WrappersConstants.AdamAttachWrapper],\r\n})\r\nexport class HyperlinkDefaultComponent extends BaseComponent<string> implements OnInit, OnDestroy {\r\n  buttons$: Observable<string>;\r\n  open$: Observable<boolean>;\r\n  preview$ = new BehaviorSubject<Preview>({\r\n    url: '',\r\n    thumbnailUrl: '',\r\n    thumbnailPreviewUrl: '',\r\n    floatingText: '',\r\n    isImage: false,\r\n    isKnownType: false,\r\n    icon: '',\r\n  });\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private fileTypeService: FileTypeService,\r\n    private dnnBridgeService: DnnBridgeService,\r\n    private editRoutingService: EditRoutingService,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.buttons$ = this.settings$.pipe(map(settings => settings.Buttons || 'adam,more'));\r\n    this.open$ = this.editRoutingService.isExpanded(this.config.field.index, this.config.entity.entityGuid);\r\n    this.subscription.add(\r\n      this.settings$.subscribe(settings => {\r\n        this.attachAdam(settings);\r\n      })\r\n    );\r\n    this.subscription.add(\r\n      this.value$.subscribe(value => {\r\n        this.setLink(value);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.preview$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  openPagePicker() {\r\n    const settings = this.settings$.value;\r\n    const params: DnnBridgeConnectorParams = {\r\n      CurrentValue: this.control.value,\r\n      FileFilter: (settings.FileFilter != null) ? settings.FileFilter : '',\r\n      Paths: (settings.Paths != null) ? settings.Paths : '',\r\n    };\r\n    this.dnnBridgeService.open('pagepicker', params, this.pagePickerCallback.bind(this));\r\n  }\r\n\r\n  private pagePickerCallback(value: PagePickerResult) {\r\n    // Convert to page:xyz format (if it wasn't cancelled)\r\n    if (!value) { return; }\r\n    this.control.patchValue(`page:${value.id}`);\r\n  }\r\n\r\n  private setLink(value: string) {\r\n    if (!value) { return; }\r\n\r\n    // handle short-ID links like file:17\r\n    const contentType = this.config.entity.header.ContentTypeName;\r\n    const entityGuid = this.config.entity.header.Guid;\r\n    const field = this.config.field.name;\r\n    this.dnnBridgeService.getUrlOfId(value, contentType, entityGuid, field).subscribe(path => {\r\n      if (!path) { return; }\r\n      const urlLowered = path.toLowerCase();\r\n      const isFileOrPage = urlLowered.includes('file:') || urlLowered.includes('page:');\r\n      const preview: Preview = {\r\n        url: path,\r\n        floatingText: isFileOrPage ? `.../${path.substring(path.lastIndexOf('/') + 1, path.length)}` : '',\r\n        thumbnailUrl: this.thumbnailUrl(path),\r\n        thumbnailPreviewUrl: this.thumbnailUrl(path, 2),\r\n        isImage: this.fileTypeService.isImage(path),\r\n        isKnownType: this.fileTypeService.isKnownType(path),\r\n        icon: this.fileTypeService.getIconClass(path),\r\n      };\r\n      this.preview$.next(preview);\r\n    });\r\n  }\r\n\r\n  private thumbnailUrl(link: string, size?: number, quote?: boolean) {\r\n    let result = link;\r\n    if (size === 1) {\r\n      result = result + '?w=72&h=72&mode=crop';\r\n    }\r\n    if (size === 2) {\r\n      result = result + '?w=800&h=800&mode=max';\r\n    }\r\n    const qt = quote ? '\"' : '';\r\n    return qt + result + qt;\r\n  }\r\n\r\n  toggleAdam(usePortalRoot: boolean, showImagesOnly: boolean) {\r\n    this.config.adam.toggle(usePortalRoot, showImagesOnly);\r\n  }\r\n\r\n  private attachAdam(settings: FieldSettings) {\r\n    this.config.adam.onItemClick = (item: AdamItem) => { this.setValue(item); };\r\n    this.config.adam.onItemUpload = (item: AdamPostResponse) => { this.setValue(item); };\r\n    this.config.adam.setConfig({\r\n      rootSubfolder: settings.Paths,\r\n      fileFilter: settings.FileFilter,\r\n      autoLoad: true,\r\n    });\r\n  }\r\n\r\n  private setValue(item: AdamItem | AdamPostResponse) {\r\n    const usePath = this.settings$.value.ServerResourceMapping === 'url';\r\n    if (usePath) {\r\n      this.control.patchValue(item.FullPath);\r\n    } else {\r\n      this.control.patchValue(`file:${item.Id}`);\r\n    }\r\n  }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { FieldSettings } from '../../../../../edit-types';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { CustomValidators } from '../../../validators/custom-validators';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { AdamControl } from './hyperlink-library.models';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'hyperlink-library',\r\n  templateUrl: './hyperlink-library.component.html',\r\n  styleUrls: ['./hyperlink-library.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.DropzoneWrapper, WrappersConstants.EavLocalizationWrapper,\r\n  WrappersConstants.HyperlinkLibraryExpandableWrapper, WrappersConstants.AdamAttachWrapper],\r\n})\r\nexport class HyperlinkLibraryComponent extends BaseComponent<null> implements OnInit, OnDestroy {\r\n  /** Requires more handling that normal subscriptions */\r\n  private adamValidation: Subscription;\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.subscription.add(\r\n      this.settings$.subscribe(settings => {\r\n        this.attachAdam(settings);\r\n        this.attachAdamValidator(settings.Required);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.adamValidation?.unsubscribe();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  private attachAdam(settings: FieldSettings) {\r\n    this.config.adam.setConfig({\r\n      allowAssetsInRoot: settings.AllowAssetsInRoot,\r\n      autoLoad: true,\r\n      enableSelect: false,\r\n      rootSubfolder: settings.Paths,\r\n      fileFilter: settings.FileFilter,\r\n      folderDepth: settings.FolderDepth || 0,\r\n      metadataContentTypes: settings.MetadataContentTypes,\r\n    });\r\n  }\r\n\r\n  private attachAdamValidator(required: boolean) {\r\n    if (!required) {\r\n      this.adamValidation?.unsubscribe();\r\n      this.control.setValidators(this.config.field.validation);\r\n      return;\r\n    }\r\n\r\n    const validators = [\r\n      ...this.config.field.validation,\r\n      CustomValidators.validateAdam(),\r\n    ];\r\n    this.control.setValidators(validators);\r\n    this.adamValidation = this.config.adam.items$.subscribe(items => {\r\n      (this.control as AdamControl).adamItems = items.length;\r\n      // onlySelf doesn't update form being valid for some reason\r\n      this.control.updateValueAndValidity(/*{ onlySelf: true }*/);\r\n    });\r\n  }\r\n}\r\n","<ng-container *ngIf=\"{\r\n  disabled: disabled$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\">\r\n    <input matInput type=\"number\" [formControlName]=\"config.field.name\" [required]=\"required$ | async\"\r\n      [placeholder]=\"placeholder$ | async\" [min]=\"min$ | async\" [max]=\"max$ | async\">\r\n    <mat-label>{{ label$ | async }}</mat-label>\r\n  </mat-form-field>\r\n  <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n\r\n</ng-container>\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { BaseComponent } from '../../base/base.component';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'number-default',\r\n  templateUrl: './number-default.component.html',\r\n  styleUrls: ['./number-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.EavLocalizationWrapper],\r\n})\r\nexport class NumberDefaultComponent extends BaseComponent<number> implements OnInit, OnDestroy {\r\n  min$: Observable<number>;\r\n  max$: Observable<number>;\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.min$ = this.settings$.pipe(map(settings => settings.Min));\r\n    this.max$ = this.settings$.pipe(map(settings => settings.Max));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n}\r\n","<ng-container *ngIf=\"{\r\n  rowCount: rowCount$ | async,\r\n  label: label$ | async,\r\n  placeholder: placeholder$ | async,\r\n  required: required$ | async,\r\n  disabled: disabled$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\" [ngClass]=\"{\r\n    'textarea-field': data.rowCount > 1\r\n  }\">\r\n    <input matInput *ngIf=\"data.rowCount <= 1\" [formControlName]=\"config.field.name\" [placeholder]=\"data.placeholder\"\r\n      [required]=\"data.required\">\r\n\r\n    <textarea matInput *ngIf=\"data.rowCount > 1\" [formControlName]=\"config.field.name\" [rows]=\"data.rowCount\"\r\n      [placeholder]=\"data.placeholder\" [required]=\"data.required\">\r\n    </textarea>\r\n\r\n    <mat-label>{{ data.label }}</mat-label>\r\n  </mat-form-field>\r\n\r\n  <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n\r\n</ng-container>\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { BaseComponent } from '../../base/base.component';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'string-default',\r\n  templateUrl: './string-default.component.html',\r\n  styleUrls: ['./string-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.EavLocalizationWrapper],\r\n})\r\nexport class StringDefaultComponent extends BaseComponent<string> implements OnInit, OnDestroy {\r\n  rowCount$: Observable<number>;\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.rowCount$ = this.settings$.pipe(map(settings => settings.RowCount || 1));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { FieldSettings } from '../../../../../edit-types';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { EntityInfo } from '../../../../shared/models/eav/entity-info';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { EditRoutingService } from '../../../../shared/services/edit-routing.service';\r\nimport { EntityService } from '../../../../shared/services/entity.service';\r\nimport { QueryService } from '../../../../shared/services/query.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { EntityQueryComponent } from '../../entity/entity-query/entity-query.component';\r\nimport { QueryEntity } from '../../entity/entity-query/entity-query.models';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'string-dropdown-query',\r\n  templateUrl: '../../entity/entity-default/entity-default.component.html',\r\n  styleUrls: ['../../entity/entity-default/entity-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({})\r\nexport class StringDropdownQueryComponent extends EntityQueryComponent implements OnInit, OnDestroy {\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    entityService: EntityService,\r\n    translate: TranslateService,\r\n    editRoutingService: EditRoutingService,\r\n    snackBar: MatSnackBar,\r\n    queryService: QueryService,\r\n  ) {\r\n    super(eavService, validationMessagesService, entityService, translate, editRoutingService, snackBar, queryService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  /** Override function in superclass */\r\n  calculateSettings(settings: FieldSettings) {\r\n    const fixedSettings = super.calculateSettings(settings);\r\n    if (fixedSettings.Value == null) { fixedSettings.Value = ''; }\r\n    if (fixedSettings.Label == null) { fixedSettings.Label = ''; }\r\n    if (fixedSettings.EnableTextEntry == null) { fixedSettings.EnableTextEntry = false; }\r\n    if (fixedSettings.Separator == null || fixedSettings.Separator === '') { fixedSettings.Separator = ','; }\r\n    return fixedSettings;\r\n  }\r\n\r\n  /** Override function in superclass */\r\n  queryEntityMapping(entity: QueryEntity) {\r\n    const settings = this.settings$.value;\r\n    const entityInfo: EntityInfo = {\r\n      Id: entity.Id,\r\n      Value: entity[settings.Value],\r\n      Text: entity[settings.Label],\r\n    };\r\n    return entityInfo;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"{\r\n  required: required$ | async,\r\n  placeholder: placeholder$ | async,\r\n  label: label$ | async,\r\n  disabled: disabled$ | async,\r\n  enableTextEntry: enableTextEntry$ | async,\r\n  dropdownOptions: dropdownOptions$ | async,\r\n  freeTextMode: freeTextMode$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\">\r\n\r\n    <mat-select *ngIf=\"!data.freeTextMode\" [formControlName]=\"config.field.name\" [required]=\"data.required\"\r\n      [placeholder]=\"data.placeholder\">\r\n      <mat-option *ngFor=\"let option of data.dropdownOptions\" [value]=\"option.value\">\r\n        {{ option.label }}\r\n      </mat-option>\r\n    </mat-select>\r\n\r\n    <input matInput *ngIf=\"data.freeTextMode\" [formControlName]=\"config.field.name\" [required]=\"data.required\"\r\n      [placeholder]=\"data.placeholder\">\r\n\r\n    <button matSuffix mat-icon-button *ngIf=\"data.enableTextEntry\" [disabled]=\"data.disabled\" appClickStopPropagation\r\n      (click)=\"toggleFreeTextMode()\">\r\n      <mat-icon [matTooltip]=\"(data.freeTextMode ? 'Fields.String.Dropdown' : 'Fields.String.Freetext') | translate\">\r\n        {{ data.freeTextMode ? 'arrow_drop_down_circle' : 'text_fields' }}\r\n      </mat-icon>\r\n    </button>\r\n\r\n    <mat-label>{{ data.label }}</mat-label>\r\n  </mat-form-field>\r\n\r\n  <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n</ng-container>\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { calculateDropdownOptions } from './string-dropdown.helpers';\r\nimport { DropdownOption } from './string-dropdown.models';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'string-dropdown',\r\n  templateUrl: './string-dropdown.component.html',\r\n  styleUrls: ['./string-dropdown.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.EavLocalizationWrapper],\r\n})\r\nexport class StringDropdownComponent extends BaseComponent<string> implements OnInit, OnDestroy {\r\n  enableTextEntry$: Observable<boolean>;\r\n  dropdownOptions$: Observable<DropdownOption[]>;\r\n  freeTextMode$: Observable<boolean>;\r\n  private toggleFreeText$ = new BehaviorSubject(false);\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.enableTextEntry$ = this.settings$.pipe(map(settings => settings.EnableTextEntry || false));\r\n    this.dropdownOptions$ = combineLatest([this.value$, this.settings$]).pipe(\r\n      map(([value, settings]) => {\r\n        const dropdownOptions = calculateDropdownOptions(value, settings.DropdownValues);\r\n        return dropdownOptions;\r\n      }),\r\n    );\r\n    this.freeTextMode$ = combineLatest([this.enableTextEntry$, this.toggleFreeText$]).pipe(\r\n      map(([enableTextEntry, freeTextMode]) => {\r\n        if (!enableTextEntry) { return false; }\r\n        return freeTextMode;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.toggleFreeText$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  toggleFreeTextMode() {\r\n    this.toggleFreeText$.next(!this.toggleFreeText$.value);\r\n  }\r\n}\r\n","import { DropdownOption } from './string-dropdown.models';\r\n\r\n/** Takes current value and dropdownValues string from settings and calculates options for dropdown */\r\nexport function calculateDropdownOptions(currentValue: string, dropdownValues: string) {\r\n  let currentValueFound = false;\r\n  let options: DropdownOption[] = [];\r\n  if (dropdownValues) {\r\n    const dropdownValuesArray = dropdownValues.replace(/\\r/g, '').split('\\n');\r\n    options = dropdownValuesArray.map(e => {\r\n      const s = e.split(':');\r\n      const maybeWantedEmptyVal = s[1];\r\n      const key = s.shift();\r\n      const val = s.join(':');\r\n      const option = {\r\n        label: key,\r\n        value: (val || maybeWantedEmptyVal === '') ? val : key\r\n      };\r\n      if (option.value === currentValue) { currentValueFound = true; }\r\n      return option;\r\n    });\r\n  }\r\n  if (!currentValueFound) {\r\n    options.push({\r\n      label: currentValue,\r\n      value: currentValue,\r\n    });\r\n  }\r\n  return options;\r\n}\r\n","<ng-container *ngIf=\"{\r\n  value: value$ | async,\r\n  filteredIcons: filteredIcons$ | async,\r\n  disabled: disabled$ | async,\r\n  previewCss: previewCss$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\">\r\n    <div class=\"icon-option\">\r\n      <i *ngIf=\"data.value\" class=\"icon-preview {{ data.previewCss }} {{ data.value }}\"></i>\r\n      <input matInput [formControlName]=\"config.field.name\" [placeholder]=\"placeholder$ | async\"\r\n        [required]=\"required$ | async\" [matAutocomplete]=\"auto\">\r\n    </div>\r\n\r\n    <mat-autocomplete #auto=\"matAutocomplete\">\r\n      <cdk-virtual-scroll-viewport itemSize=\"48\" minBufferPx=\"500\" maxBufferPx=\"1000\"\r\n        [style.height.px]=\"data.filteredIcons.length < 6 ? data.filteredIcons.length * 48 : 240\">\r\n        <mat-option *cdkVirtualFor=\"let icon of data.filteredIcons\" [value]=\"icon.class\">\r\n          <div class=\"icon-option\">\r\n            <i class=\"icon-preview {{ data.previewCss }} {{ icon.class }}\"></i>\r\n            <span>{{ icon.label }}</span>\r\n          </div>\r\n        </mat-option>\r\n      </cdk-virtual-scroll-viewport>\r\n    </mat-autocomplete>\r\n\r\n    <mat-label>{{ label$ | async }}</mat-label>\r\n  </mat-form-field>\r\n\r\n  <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n\r\n</ng-container>\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ScriptsLoaderService } from '../../../../shared/services/scripts-loader.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { findAllIconsInCss } from './string-font-icon-picker.helpers';\r\nimport { IconOption } from './string-font-icon-picker.models';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'string-font-icon-picker',\r\n  templateUrl: './string-font-icon-picker.component.html',\r\n  styleUrls: ['./string-font-icon-picker.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.EavLocalizationWrapper],\r\n})\r\nexport class StringFontIconPickerComponent extends BaseComponent<string> implements OnInit, OnDestroy {\r\n  iconOptions$ = new BehaviorSubject<IconOption[]>([]);\r\n  filteredIcons$: Observable<IconOption[]>;\r\n  previewCss$: Observable<string>;\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private scriptsLoaderService: ScriptsLoaderService,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.subscription.add(\r\n      this.settings$.subscribe(settings => {\r\n        const files = settings.Files || '';\r\n        const cssPrefix = settings.CssPrefix || '';\r\n        const showPrefix = settings.ShowPrefix || false;\r\n        // load each file (usually CSS) in the settings\r\n        this.scriptsLoaderService.load(files.split('\\n'), () => {\r\n          const newIconOptions = findAllIconsInCss(cssPrefix, showPrefix);\r\n          this.iconOptions$.next(newIconOptions);\r\n        });\r\n      })\r\n    );\r\n    this.previewCss$ = this.settings$.pipe(map(settings => settings.PreviewCss));\r\n    this.filteredIcons$ = combineLatest([this.value$, this.iconOptions$]).pipe(\r\n      map(([search, iconList]) => {\r\n        // if we have a filter param, use it, otherwise don't filter\r\n        const filtered = search\r\n          ? iconList.filter(icon => icon.search?.includes(search.toLowerCase()) ?? false)\r\n          : iconList;\r\n        return filtered;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.iconOptions$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n}\r\n","import { IconOption, LoadedIcons } from './string-font-icon-picker.models';\r\n\r\n/** Calculates available css classes with className prefix. WARNING: Expensive operation */\r\nexport function findAllIconsInCss(classPrefix: string, showPrefix: boolean) {\r\n  const foundList: IconOption[] = [];\r\n  const duplicateDetector: LoadedIcons = {};\r\n\r\n  if (!classPrefix) { return foundList; }\r\n\r\n  const truncateLabel = showPrefix ? 0 : classPrefix.length - 1;\r\n\r\n  // tslint:disable-next-line:prefer-for-of\r\n  for (let i = 0; i < document.styleSheets.length; i++) {\r\n    const sheet = document.styleSheets[i] as CSSStyleSheet;\r\n    if (!sheet) { continue; }\r\n\r\n    let rules: CSSRuleList;\r\n    try {\r\n      rules = sheet.rules;\r\n    } catch (error) { /* errors happens if browser denies access to css rules */ }\r\n    if (!rules) {\r\n      try {\r\n        rules = sheet.cssRules;\r\n      } catch (error) { /* errors happens if browser denies access to css rules */ }\r\n    }\r\n    if (!rules) { continue; }\r\n\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let j = 0; j < rules.length; j++) {\r\n      const rule = rules[j] as CSSStyleRule;\r\n      if (!(rule.selectorText && rule.selectorText.startsWith(classPrefix))) { continue; }\r\n\r\n      const selector = rule.selectorText;\r\n      const iconClass = selector.substring(0, selector.indexOf(':')).replace('.', '');\r\n      if (duplicateDetector[iconClass]) { continue; }\r\n\r\n      foundList.push({\r\n        rule,\r\n        class: iconClass,\r\n        search: iconClass?.toLowerCase(),\r\n        label: iconClass.substring(truncateLabel),\r\n      });\r\n      duplicateDetector[iconClass] = true;\r\n    }\r\n  }\r\n\r\n  return foundList;\r\n}\r\n","import { defaultTemplateName, defaultTokenName } from '../../../../../ng-dialogs/src/app/shared/constants/file-names.constants';\r\nimport { TemplateTypes } from './string-template-picker.models';\r\n\r\nexport const templateTypes: TemplateTypes = {\r\n  Token: {\r\n    ext: '.html',\r\n    prefix: '',\r\n    suggestion: defaultTokenName,\r\n  },\r\n  'C# Razor': {\r\n    ext: '.cshtml',\r\n    prefix: '_',\r\n    suggestion: defaultTemplateName,\r\n  },\r\n};\r\n","<ng-container *ngIf=\"{\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <div class=\"picker-wrapper\">\r\n    <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\">\r\n      <mat-select [formControlName]=\"config.field.name\" [required]=\"required$ | async\">\r\n        <mat-option value=\"\">(no file selected)</mat-option>\r\n        <mat-option *ngFor=\"let file of templateOptions$ | async\" [value]=\"file\">\r\n          {{ file }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-label>{{ label$ | async }}</mat-label>\r\n    </mat-form-field>\r\n    <button mat-icon-button matTooltip=\"Create a new file\" [disabled]=\"disabled$ | async\" (click)=\"createTemplate()\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n\r\n</ng-container>\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { FieldMaskService } from '../../../../../shared/field-mask.service';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { AssetsService } from '../../../../shared/services/assets.service';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { templateTypes } from './string-template-picker.constants';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'string-template-picker',\r\n  templateUrl: './string-template-picker.component.html',\r\n  styleUrls: ['./string-template-picker.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.EavLocalizationWrapper],\r\n})\r\nexport class StringTemplatePickerComponent extends BaseComponent<string> implements OnInit, OnDestroy {\r\n  templateOptions$ = new BehaviorSubject<string[]>([]);\r\n\r\n  private typeWatcher: FieldMaskService;\r\n  private locationWatcher: FieldMaskService;\r\n  private activeSpec = templateTypes.Token;\r\n  private templates: string[] = [];\r\n  private global = false;\r\n  /** Reset only after templates have been fetched once */\r\n  private resetIfNotFound = false;\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService, private assetsService: AssetsService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    // set change-watchers to the other values\r\n    this.typeWatcher = new FieldMaskService('[Type]', this.group.controls, this.setFileConfig.bind(this), null);\r\n    this.locationWatcher = new FieldMaskService('[Location]', this.group.controls, this.onLocationChange.bind(this), null);\r\n\r\n    this.setFileConfig(this.typeWatcher.resolve() || 'Token'); // use token setting as default, till the UI tells us otherwise\r\n    this.onLocationChange(this.locationWatcher.resolve() || null); // set initial file list\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.templateOptions$.complete();\r\n    this.typeWatcher.destroy();\r\n    this.locationWatcher.destroy();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  private setFileConfig(type: string) {\r\n    this.activeSpec = templateTypes[type];\r\n    this.setTemplateOptions();\r\n  }\r\n\r\n  private onLocationChange(location: string) {\r\n    this.global = (location === 'Host File System');\r\n\r\n    this.assetsService.getAll(this.global).subscribe(templates => {\r\n      this.templates = templates;\r\n      this.resetIfNotFound = true;\r\n      this.setTemplateOptions();\r\n    });\r\n  }\r\n\r\n  private setTemplateOptions() {\r\n    let filtered = this.templates;\r\n    const ext = this.activeSpec.ext;\r\n    // new feature in v11 - '.code.xxx' files shouldn't be shown, they are code-behind\r\n    filtered = filtered.filter(template => !template.includes('.code.'));\r\n    filtered = filtered.filter(template => template.slice(template.length - ext.length) === ext);\r\n    this.templateOptions$.next(filtered);\r\n    const resetValue = this.resetIfNotFound && !filtered.find(template => template === this.control.value);\r\n    if (resetValue) { this.control.patchValue(''); }\r\n  }\r\n\r\n  createTemplate() {\r\n    let name = prompt('Enter new file name', this.activeSpec.suggestion); // todo: i18n\r\n    if (!name) { return; }\r\n\r\n    // 1. check for folders\r\n    let path = '';\r\n    name = name.replace('\\\\', '/');\r\n    const foundSlash = name.lastIndexOf('/');\r\n    if (foundSlash > -1) {\r\n      path = name.substring(0, foundSlash + 1); // path with slash\r\n      name = name.substring(foundSlash + 1);\r\n    }\r\n\r\n    // 2. check if extension already provided, otherwise or if not perfect, just attach default\r\n    if (!name.endsWith(this.activeSpec.ext)) {\r\n      name += this.activeSpec.ext;\r\n    }\r\n\r\n    // 3. check if cshtmls have a \"_\" in the file name (not folder, must be the file name part)\r\n    if (this.activeSpec.prefix !== '' && name[0] !== this.activeSpec.prefix) {\r\n      name = this.activeSpec.prefix + name;\r\n    }\r\n\r\n    const fullPath = path + name;\r\n\r\n    // 4. tell service to create it\r\n    this.assetsService.create(fullPath, this.global).subscribe(res => {\r\n      if (res === false) {\r\n        alert('Server reported that create failed - the file probably already exists'); // todo: i18n\r\n      } else {\r\n        this.templates.push(fullPath);\r\n        this.setTemplateOptions();\r\n        this.control.patchValue(fullPath);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"{\r\n  disabled: disabled$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\">\r\n    <input matInput [formControlName]=\"config.field.name\" (blur)=\"clean(true)\" [placeholder]=\"placeholder$ | async\"\r\n      [required]=\"required$ | async\">\r\n    <mat-label>{{ label$ | async }}</mat-label>\r\n  </mat-form-field>\r\n\r\n  <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n\r\n</ng-container>\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FieldMaskService } from '../../../../../shared/field-mask.service';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { Helper } from '../../../../shared/helpers/helper';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { BaseComponent } from '../../base/base.component';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'string-url-path',\r\n  templateUrl: './string-url-path.component.html',\r\n  styleUrls: ['./string-url-path.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.EavLocalizationWrapper],\r\n})\r\nexport class StringUrlPathComponent extends BaseComponent<string> implements OnInit, OnDestroy {\r\n  private autoGenerateMask: string;\r\n  private allowSlashes: boolean;\r\n  private fieldMaskService: FieldMaskService;\r\n  /** Blocks external update if field was changed manually and doesn't match external updates. WARNING: Doesn't work on language change */\r\n  private lastAutoCopy = '';\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.subscription.add(\r\n      this.settings$.subscribe(settings => {\r\n        this.autoGenerateMask = settings.AutoGenerateMask || null;\r\n        this.allowSlashes = settings.AllowSlashes || false;\r\n        if (this.fieldMaskService != null) {\r\n          this.fieldMaskService.destroy();\r\n          this.fieldMaskService = null;\r\n        }\r\n        this.fieldMaskService = new FieldMaskService(this.autoGenerateMask, this.group.controls,\r\n          this.onSourcesChanged.bind(this), this.preClean);\r\n      })\r\n    );\r\n\r\n    // set initial value\r\n    this.onSourcesChanged(this.fieldMaskService.resolve());\r\n\r\n    // clean on value change\r\n    this.subscription.add(\r\n      this.control.valueChanges.subscribe(value => {\r\n        this.clean(false);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  private onSourcesChanged(newValue: string) {\r\n    const value = this.control.value;\r\n    // don't do anything if the current field is not empty and doesn't have the last copy of the stripped value\r\n    if (value && value !== this.lastAutoCopy) { return; }\r\n\r\n    const cleaned = Helper.stripNonUrlCharacters(newValue, this.allowSlashes, true);\r\n    if (!cleaned) { return; }\r\n    this.lastAutoCopy = cleaned;\r\n    if (value === cleaned) { return; }\r\n    this.control.patchValue(cleaned);\r\n  }\r\n\r\n  private preClean(key: string, value: string) {\r\n    return value.replace('/', '-').replace('\\\\', '-'); // remove slashes which could look like path-parts\r\n  }\r\n\r\n  clean(trimEnd: boolean) {\r\n    const value = this.control.value;\r\n    const cleaned = Helper.stripNonUrlCharacters(value, this.allowSlashes, trimEnd);\r\n    if (value === cleaned) { return; }\r\n    this.control.patchValue(cleaned);\r\n  }\r\n}\r\n","import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nexport default SetCache;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nexport default setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arraySome;\n","import SetCache from './_SetCache.js';\nimport arraySome from './_arraySome.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalArrays;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;\n","import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n","import getAllKeys from './_getAllKeys.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalObjects;\n","import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;\n","import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nexport default isEqual;\n","import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;\n","export class TranslationLinkConstants {\r\n  public static readonly Translate = 'translate';\r\n  public static readonly DontTranslate = 'dontTranslate';\r\n  public static readonly MissingDefaultLangValue = 'missingDefaultLangValue';\r\n  public static readonly LinkReadOnly = 'linkReadOnly';\r\n  public static readonly LinkReadWrite = 'linkReadWrite';\r\n  public static readonly LinkCopyFrom = 'linkCopyFrom';\r\n}\r\n","export class I18nKeyConstants {\r\n  public static readonly NoTranslate = 'NoTranslate';\r\n  public static readonly FromPrimary = 'FromPrimary';\r\n  public static readonly FromOther = 'FromOther';\r\n  public static readonly LinkReadOnly = 'LinkReadOnly';\r\n  public static readonly LinkShared = 'LinkShared';\r\n}\r\n","<mat-card class=\"link-other-lang-container u-hide-scrollbar\" *ngIf=\"{\r\n  languages: languages$ | async,\r\n  selected: selected$ | async,\r\n  showLanguages: showLanguages$ | async,\r\n  i18nRoot: i18nRoot$ | async\r\n} as data\">\r\n  <div class=\"mat-card__header\">\r\n    <div class=\"mat-card__title\">\r\n      {{ 'LangMenu.Dialog.Title' | translate: { name: dialogData.attributeKey } }}\r\n    </div>\r\n    <div class=\"mat-card__description\">\r\n      {{ 'LangMenu.Dialog.Intro' | translate }}\r\n    </div>\r\n  </div>\r\n\r\n  <mat-nav-list toggle>\r\n    <ng-container\r\n      *ngTemplateOutlet=\"item;context:{ link: TranslationLinks.DontTranslate, icon: 'lock', i18nKey: I18nKeys.NoTranslate }\">\r\n    </ng-container>\r\n    <ng-container\r\n      *ngTemplateOutlet=\"item;context:{ link: TranslationLinks.Translate, icon: 'lock_open', i18nKey: I18nKeys.FromPrimary }\">\r\n    </ng-container>\r\n    <ng-container\r\n      *ngTemplateOutlet=\"item;context:{ link: TranslationLinks.LinkCopyFrom, icon: 'translate', i18nKey: I18nKeys.FromOther }\">\r\n    </ng-container>\r\n    <ng-container\r\n      *ngTemplateOutlet=\"item;context:{ link: TranslationLinks.LinkReadOnly, icon: 'link', i18nKey: I18nKeys.LinkReadOnly }\">\r\n    </ng-container>\r\n    <ng-container\r\n      *ngTemplateOutlet=\"item;context:{ link: TranslationLinks.LinkReadWrite, icon: 'share', i18nKey: I18nKeys.LinkShared }\">\r\n    </ng-container>\r\n  </mat-nav-list>\r\n\r\n  <ng-template #item let-icon=\"icon\" let-link='link' let-i18nKey=\"i18nKey\">\r\n    <mat-list-item [ngClass]=\"{ 'mat-list-item-focus': data.selected.linkType === link }\" (click)=\"select(i18nKey)\">\r\n\r\n      <mat-icon matListIcon color=\"accent\">{{ icon }}</mat-icon>\r\n      <div matLine class=\"mat-list-item__title\">\r\n        {{ ('LangMenu.Dialog.' + i18nKey + '.Title') | translate : { primary: dialogData.defaultLanguage } }}</div>\r\n      <div matLine class=\"mat-list-item__body\">\r\n        {{ ('LangMenu.Dialog.' + i18nKey + '.Body') | translate : { primary: dialogData.defaultLanguage } }}</div>\r\n    </mat-list-item>\r\n  </ng-template>\r\n\r\n  <div *ngIf=\"data.showLanguages\">\r\n    <div class=\"mat-card__header\">\r\n      <div class=\"mat-card__title\">\r\n        {{ (data.i18nRoot + '.Subtitle') | translate }}\r\n      </div>\r\n      <div class=\"mat-card__description\">\r\n        {{'LangMenu.Dialog.PickLanguageIntro' | translate }}\r\n      </div>\r\n    </div>\r\n\r\n    <mat-action-list>\r\n      <button mat-list-item *ngFor=\"let language of data.languages\" (click)=\"selectLanguage(language.key)\"\r\n        [disabled]=\"isLanguageDisabled(language.key)\" [ngClass]=\"{\r\n        'mat-list-item-focus': data.selected.language === language.key,\r\n        'mat-list-item--disabled': isLanguageDisabled(language.key)\r\n      }\">\r\n        <mat-icon matListIcon color=\"accent\">language</mat-icon>\r\n        {{ language.key }}\r\n      </button>\r\n    </mat-action-list>\r\n  </div>\r\n\r\n  <mat-dialog-actions fxLayoutAlign=\"end center\">\r\n    <button mat-button color=\"accent\" [disabled]=\"isOkDisabled(data.selected)\"\r\n      [mat-dialog-close]=\"data.selected\">OK</button>\r\n  </mat-dialog-actions>\r\n</mat-card>\r\n","import { ChangeDetectionStrategy, Component, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { TranslationLinkConstants } from '../../../shared/constants/translation-link.constants';\r\nimport { LocalizationHelper } from '../../../shared/helpers/localization-helper';\r\nimport { Language } from '../../../shared/models/eav';\r\nimport { LinkToOtherLanguageData } from '../../../shared/models/eav/link-to-other-language-data';\r\nimport { LanguageInstanceService } from '../../../shared/store/ngrx-data/language-instance.service';\r\nimport { LanguageService } from '../../../shared/store/ngrx-data/language.service';\r\nimport { I18nKeyConstants } from './link-to-other-language.constants';\r\nimport { findI18nKey, findTranslationLink } from './link-to-other-language.helpers';\r\n\r\n@Component({\r\n  selector: 'app-link-to-other-language',\r\n  templateUrl: './link-to-other-language.component.html',\r\n  styleUrls: ['./link-to-other-language.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LinkToOtherLanguageComponent implements OnInit, OnDestroy {\r\n  languages$: Observable<Language[]>;\r\n  selected$: BehaviorSubject<LinkToOtherLanguageData>;\r\n  showLanguages$: BehaviorSubject<boolean>;\r\n  i18nRoot$: BehaviorSubject<string>;\r\n  TranslationLinks = TranslationLinkConstants;\r\n  I18nKeys = I18nKeyConstants;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: LinkToOtherLanguageData,\r\n    private languageService: LanguageService,\r\n    private languageInstanceService: LanguageInstanceService,\r\n  ) {\r\n    this.selected$ = new BehaviorSubject({ ...this.dialogData });\r\n    this.showLanguages$ = new BehaviorSubject(this.dialogData.language !== '');\r\n\r\n    const i18nKey = findI18nKey(this.dialogData.linkType);\r\n    this.i18nRoot$ = new BehaviorSubject(`LangMenu.Dialog.${i18nKey}`);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.languages$ = combineLatest([\r\n      this.languageService.entities$,\r\n      this.languageInstanceService.getCurrentLanguage(this.dialogData.formId)\r\n    ]).pipe(\r\n      map(([languages, currentLanguage]) => languages.filter(lang => lang.key !== currentLanguage)),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.selected$.complete();\r\n    this.showLanguages$.complete();\r\n    this.i18nRoot$.complete();\r\n  }\r\n\r\n  select(i18nKey: string) {\r\n    const showLanguages = (i18nKey !== I18nKeyConstants.FromPrimary && i18nKey !== I18nKeyConstants.NoTranslate);\r\n    const newSelected: LinkToOtherLanguageData = { ...this.selected$.value };\r\n\r\n    if (!showLanguages) { newSelected.language = ''; }\r\n    newSelected.linkType = findTranslationLink(i18nKey);\r\n\r\n    this.showLanguages$.next(showLanguages);\r\n    this.selected$.next(newSelected);\r\n    this.i18nRoot$.next(`LangMenu.Dialog.${i18nKey}`);\r\n  }\r\n\r\n  selectLanguage(language: string) {\r\n    this.selected$.next({ ...this.selected$.value, language });\r\n  }\r\n\r\n  isOkDisabled(selected: LinkToOtherLanguageData) {\r\n    const disabled = selected.language === ''\r\n      && selected.linkType !== TranslationLinkConstants.Translate\r\n      && selected.linkType !== TranslationLinkConstants.DontTranslate;\r\n    return disabled;\r\n  }\r\n\r\n  isLanguageDisabled(languageKey: string) {\r\n    if (!this.dialogData.attributes) { return true; }\r\n\r\n    const hasTranslation = LocalizationHelper.isEditableTranslationExist(\r\n      this.dialogData.attributes[this.dialogData.attributeKey],\r\n      languageKey,\r\n      this.dialogData.defaultLanguage\r\n    );\r\n    return !hasTranslation;\r\n  }\r\n}\r\n","import { TranslationLinkConstants } from '../../../shared/constants/translation-link.constants';\r\nimport { I18nKeyConstants } from './link-to-other-language.constants';\r\n\r\nexport function findI18nKey(translationLink: string) {\r\n  switch (translationLink) {\r\n    case TranslationLinkConstants.Translate:\r\n      return I18nKeyConstants.FromPrimary;\r\n    case TranslationLinkConstants.DontTranslate:\r\n      return I18nKeyConstants.NoTranslate;\r\n    case TranslationLinkConstants.LinkReadOnly:\r\n      return I18nKeyConstants.LinkReadOnly;\r\n    case TranslationLinkConstants.LinkReadWrite:\r\n      return I18nKeyConstants.LinkShared;\r\n    case TranslationLinkConstants.LinkCopyFrom:\r\n      return I18nKeyConstants.FromOther;\r\n  }\r\n}\r\n\r\nexport function findTranslationLink(i18nKey: string) {\r\n  switch (i18nKey) {\r\n    case I18nKeyConstants.FromPrimary:\r\n      return TranslationLinkConstants.Translate;\r\n    case I18nKeyConstants.NoTranslate:\r\n      return TranslationLinkConstants.DontTranslate;\r\n    case I18nKeyConstants.LinkReadOnly:\r\n      return TranslationLinkConstants.LinkReadOnly;\r\n    case I18nKeyConstants.LinkShared:\r\n      return TranslationLinkConstants.LinkReadWrite;\r\n    case I18nKeyConstants.FromOther:\r\n      return TranslationLinkConstants.LinkCopyFrom;\r\n  }\r\n}\r\n","export class TranslateGroupMenuHelpers {\r\n\r\n  public static calculateSharedInfoMessage(dimensions: string[], currentLanguage: string): string {\r\n    dimensions = TranslateGroupMenuHelpers.calculateShortDimensions(dimensions, currentLanguage);\r\n    const result = TranslateGroupMenuHelpers.calculateEditAndReadDimensions(dimensions);\r\n    const editableDimensions = result.editableDimensions;\r\n    const readOnlyDimensions = result.readOnlyDimensions;\r\n    let infoMessage = '';\r\n\r\n    const editableExist = editableDimensions.length > 0;\r\n    const readOnlyExist = readOnlyDimensions.length > 0;\r\n    if (editableExist && readOnlyExist) {\r\n      infoMessage = `${editableDimensions.join(', ')}, (${readOnlyDimensions.join(', ')})`;\r\n    } else if (editableExist) {\r\n      infoMessage = editableDimensions.join(', ');\r\n    } else if (readOnlyExist) {\r\n      infoMessage = `(${readOnlyDimensions.join(', ')})`;\r\n    }\r\n\r\n    return infoMessage;\r\n  }\r\n\r\n  private static calculateShortDimensions(dimensions: string[], currentLanguage: string): string[] {\r\n    const dimensionsMap: { [key: string]: string[] } = {};\r\n    const shortCurrentLanguage = currentLanguage.slice(0, currentLanguage.indexOf('-'));\r\n\r\n    dimensionsMap[shortCurrentLanguage] = [];\r\n    dimensionsMap[shortCurrentLanguage].push(shortCurrentLanguage);\r\n\r\n    dimensions.forEach(dimension => {\r\n      const shortDimension = dimension.slice(0, dimension.indexOf('-'));\r\n      const shortNoReadOnly = shortDimension.replace('~', '');\r\n\r\n      if (!dimensionsMap[shortNoReadOnly]) {\r\n        dimensionsMap[shortNoReadOnly] = [];\r\n        dimensionsMap[shortNoReadOnly].push(dimension);\r\n      } else {\r\n        dimensionsMap[shortNoReadOnly].push(dimension);\r\n      }\r\n    });\r\n\r\n    dimensions = dimensions.map(dimension => {\r\n      const shortDimension = dimension.slice(0, dimension.indexOf('-'));\r\n      const shortNoReadOnly = shortDimension.replace('~', '');\r\n\r\n      if (dimensionsMap[shortNoReadOnly].length > 1) {\r\n        return dimension;\r\n      } else {\r\n        return shortDimension;\r\n      }\r\n    });\r\n\r\n    return dimensions;\r\n  }\r\n\r\n  private static calculateEditAndReadDimensions(dimensions: string[]) {\r\n    const editableDimensions: string[] = [];\r\n    const readOnlyDimensions: string[] = [];\r\n\r\n    dimensions.forEach(dimension => {\r\n      if (!dimension.includes('~')) {\r\n        editableDimensions.push(dimension);\r\n      } else {\r\n        readOnlyDimensions.push(dimension.replace('~', ''));\r\n      }\r\n    });\r\n\r\n    return {\r\n      editableDimensions,\r\n      readOnlyDimensions\r\n    };\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"{\r\n  currentLanguage: currentLanguage$ | async,\r\n  defaultLanguage: defaultLanguage$ | async,\r\n  translationState: translationState$ | async,\r\n  disabled: disabled$ | async,\r\n  defaultLanguageMissingValue: defaultLanguageMissingValue$ | async,\r\n  infoMessage: infoMessage$ | async,\r\n  infoMessageLabel: infoMessageLabel$ | async\r\n} as data\">\r\n\r\n  <ng-container *ngIf=\"data.currentLanguage !== data.defaultLanguage\">\r\n\r\n    <div *ngIf=\"fieldConfig.isParentGroup\" fxLayoutAlign=\"end center\">\r\n      <button mat-button fxLayoutAlign=\"end center\" [matMenuTriggerFor]=\"rootMenu\">\r\n        <span fxLayoutAlign=\"end center\">\r\n          {{ ('LangMenu.Translate' | translate).toUpperCase() }} &nbsp;&nbsp;\r\n          <mat-icon class=\"translate-icon\">translate</mat-icon>\r\n        </span>\r\n      </button>\r\n      <mat-menu #rootMenu=\"matMenu\" [overlapTrigger]=\"true\">\r\n        <button mat-menu-item (click)=\"translateAll()\"\r\n          [ngClass]=\"{'menu-item-selected': data.translationState.linkType === translationLinkConstants.Translate}\">\r\n          {{ 'LangMenu.TranslateAll' | translate }}\r\n        </button>\r\n        <button mat-menu-item (click)=\"dontTranslateAll()\"\r\n          [ngClass]=\"{'menu-item-selected': data.translationState.linkType === translationLinkConstants.DontTranslate}\">\r\n          {{ 'LangMenu.NoTranslateAll' | translate }}\r\n        </button>\r\n        <button mat-menu-item (click)=\"openLinkToOtherLanguage()\"\r\n          [ngClass]=\"{'menu-item-selected': data.translationState.language !== ''}\">\r\n          {{ 'LangMenu.Link' | translate }}\r\n        </button>\r\n      </mat-menu>\r\n    </div>\r\n\r\n    <div *ngIf=\"!fieldConfig.isParentGroup\" fxLayoutAlign=\"end center\">\r\n      <div fxLayoutAlign=\"end center\" class=\"shared-languages-container\"\r\n        [ngClass]=\"getTranslationStateClass(data.translationState.linkType)\">\r\n        <div class=\"shared-languages mat-caption\" [ngClass]=\"{'shared-languages--disabled': data.disabled}\">\r\n          {{ data.infoMessageLabel ? (data.infoMessageLabel | translate:{ languages: data.infoMessage }) : '' }}</div>\r\n        <button mat-icon-button [disabled]=\"fieldConfig.disableI18n || data.defaultLanguageMissingValue\"\r\n          [matMenuTriggerFor]=\"rootMenu2\">\r\n          <mat-icon class=\"translate-icon\">translate</mat-icon>\r\n        </button>\r\n      </div>\r\n      <mat-menu #rootMenu2=\"matMenu\" [overlapTrigger]=\"true\">\r\n        <button mat-menu-item (click)=\"translateUnlink(config.field.name)\"\r\n          [ngClass]=\"{'menu-item-selected': data.translationState.linkType === translationLinkConstants.Translate}\">\r\n          {{ 'LangMenu.Translate' | translate }}\r\n        </button>\r\n        <button mat-menu-item (click)=\"linkToDefault(config.field.name)\"\r\n          [ngClass]=\"{'menu-item-selected': data.translationState.linkType === translationLinkConstants.DontTranslate}\">\r\n          {{ 'LangMenu.NoTranslate' | translate }}\r\n        </button>\r\n        <button mat-menu-item (click)=\"openLinkToOtherLanguage()\"\r\n          [ngClass]=\"{'menu-item-selected': data.translationState.language !== ''}\">\r\n          {{ 'LangMenu.Link' | translate }}\r\n        </button>\r\n      </mat-menu>\r\n    </div>\r\n\r\n  </ng-container>\r\n</ng-container>\r\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport isEqual from 'lodash-es/isEqual';\r\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\r\nimport { distinctUntilChanged, filter, map, startWith } from 'rxjs/operators';\r\nimport { angularConsoleLog } from '../../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\nimport { FieldConfigGroup, FieldConfigSet } from '../../../eav-dynamic-form/model/field-config';\r\nimport { TranslationLinkConstants } from '../../../shared/constants/translation-link.constants';\r\nimport { InputFieldHelper } from '../../../shared/helpers/input-field-helper';\r\nimport { LocalizationHelper } from '../../../shared/helpers/localization-helper';\r\nimport { ContentType, EavAttributes, EavDimensions, EavValue, EavValues, Item } from '../../../shared/models/eav';\r\nimport { LinkToOtherLanguageData } from '../../../shared/models/eav/link-to-other-language-data';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { ContentTypeService } from '../../../shared/store/ngrx-data/content-type.service';\r\nimport { InputTypeService } from '../../../shared/store/ngrx-data/input-type.service';\r\nimport { ItemService } from '../../../shared/store/ngrx-data/item.service';\r\nimport { LanguageInstanceService } from '../../../shared/store/ngrx-data/language-instance.service';\r\nimport { ValidationHelper } from '../../validators/validation-helper';\r\nimport { LinkToOtherLanguageComponent } from '../link-to-other-language/link-to-other-language.component';\r\nimport { TranslateGroupMenuHelpers } from './translate-group-menu.helpers';\r\n\r\n@Component({\r\n  selector: 'app-translate-group-menu',\r\n  templateUrl: './translate-group-menu.component.html',\r\n  styleUrls: ['./translate-group-menu.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TranslateGroupMenuComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() config: FieldConfigSet;\r\n  @Input() group: FormGroup;\r\n  @Input() toggleTranslateField: boolean;\r\n\r\n  fieldConfig: FieldConfigGroup;\r\n  control: AbstractControl;\r\n  disabled$: Observable<boolean>;\r\n  translationLinkConstants = TranslationLinkConstants;\r\n  attributes$: Observable<EavAttributes>;\r\n  attributes: EavAttributes;\r\n  currentLanguage$: Observable<string>;\r\n  currentLanguage = '';\r\n  defaultLanguage$: Observable<string>;\r\n  defaultLanguage = '';\r\n  defaultLanguageMissingValue$ = new BehaviorSubject(false);\r\n  headerGroupSlotIsEmpty = false;\r\n  translationState$: BehaviorSubject<LinkToOtherLanguageData> = new BehaviorSubject({\r\n    formId: null,\r\n    linkType: '',\r\n    language: '',\r\n  });\r\n  infoMessage$ = new BehaviorSubject<string>('');\r\n  infoMessageLabel$ = new BehaviorSubject<string>('');\r\n  item: Item;\r\n  contentType: ContentType;\r\n\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private languageInstanceService: LanguageInstanceService,\r\n    private itemService: ItemService,\r\n    private inputTypeService: InputTypeService,\r\n    private contentTypeService: ContentTypeService,\r\n    private eavService: EavService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fieldConfig = this.config.field as FieldConfigGroup;\r\n    this.control = this.group.controls[this.config.field.name];\r\n    this.disabled$ = this.fieldConfig.isParentGroup ? of(false) : this.eavService.formDisabledChange$.asObservable().pipe(\r\n      filter(formDisabledSet => (formDisabledSet.formId === this.config.form.formId)\r\n        && (formDisabledSet.entityGuid === this.config.entity.entityGuid)\r\n      ),\r\n      map(formSet => this.control.disabled),\r\n      startWith(this.control.disabled),\r\n      distinctUntilChanged(),\r\n    );\r\n    this.currentLanguage$ = this.languageInstanceService.getCurrentLanguage(this.config.form.formId);\r\n    this.defaultLanguage$ = this.languageInstanceService.getDefaultLanguage(this.config.form.formId);\r\n    this.attributes$ = this.itemService.selectAttributesByEntityId(this.config.entity.entityId, this.config.entity.entityGuid);\r\n    this.subscribeToAttributeValues();\r\n    this.subscribeMenuChange();\r\n    this.subscribeToItemFromStore();\r\n    this.subscribeToContentTypeFromStore();\r\n    // subscribe to language data\r\n    this.subscribeToCurrentLanguageFromStore();\r\n    this.subscribeToDefaultLanguageFromStore();\r\n    this.subscribeToEntityHeaderFromStore();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.toggleTranslateField != null && this.currentLanguage !== this.defaultLanguage && this.control.disabled) {\r\n      this.translateUnlink(this.config.field.name);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.defaultLanguageMissingValue$.complete();\r\n    this.translationState$.complete();\r\n    this.infoMessage$.complete();\r\n    this.infoMessageLabel$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  openLinkToOtherLanguage() {\r\n    const dialogData: LinkToOtherLanguageData = {\r\n      formId: this.config.form.formId,\r\n      linkType: this.translationState$.value.linkType,\r\n      language: this.translationState$.value.language,\r\n      defaultLanguage: this.defaultLanguage,\r\n      attributes: this.attributes,\r\n      attributeKey: this.config.field.name,\r\n    };\r\n    const dialogRef = this.dialog.open(LinkToOtherLanguageComponent, {\r\n      panelClass: 'c-link-to-other-language',\r\n      autoFocus: false,\r\n      width: '350px',\r\n      data: dialogData\r\n    });\r\n    dialogRef.keydownEvents().subscribe(e => {\r\n      const CTRL_S = e.keyCode === 83 && (navigator.platform.match('Mac') ? e.metaKey : e.ctrlKey);\r\n      if (!CTRL_S) { return; }\r\n      e.preventDefault();\r\n    });\r\n    dialogRef.afterClosed().subscribe((actionResult: LinkToOtherLanguageData) => {\r\n      if (!actionResult) { return; }\r\n      this.triggerTranslation(actionResult);\r\n    });\r\n  }\r\n\r\n  translateUnlink(attributeKey: string) {\r\n    if (this.isTranslateDisabled(attributeKey)) { return; }\r\n\r\n    this.itemService.removeItemAttributeDimension(this.config.entity.entityId, attributeKey, this.currentLanguage,\r\n      this.config.entity.entityGuid);\r\n    const defaultValue: EavValue<any> = LocalizationHelper.getValueTranslation(this.attributes[attributeKey],\r\n      this.defaultLanguage, this.defaultLanguage);\r\n    if (defaultValue) {\r\n      const fieldType = InputFieldHelper.getFieldType(this.config, attributeKey);\r\n      this.itemService.addAttributeValue(this.config.entity.entityId, attributeKey, defaultValue.value,\r\n        this.currentLanguage, false, this.config.entity.entityGuid, fieldType);\r\n    } else {\r\n      angularConsoleLog(`${this.currentLanguage}: Cant copy value from ${this.defaultLanguage} because that value does not exist.`);\r\n    }\r\n\r\n    this.refreshControlConfig(attributeKey);\r\n  }\r\n\r\n  linkToDefault(attributeKey: string) {\r\n    if (this.isTranslateDisabled(attributeKey)) { return; }\r\n\r\n    this.itemService.removeItemAttributeDimension(this.config.entity.entityId, attributeKey, this.currentLanguage,\r\n      this.config.entity.entityGuid);\r\n\r\n    this.refreshControlConfig(attributeKey);\r\n  }\r\n\r\n  translateAll() {\r\n    this.setTranslationState(TranslationLinkConstants.Translate, '');\r\n    Object.keys(this.attributes).forEach(attributeKey => {\r\n      this.translateUnlink(attributeKey);\r\n    });\r\n    this.languageInstanceService.triggerLocalizationWrapperMenuChange();\r\n  }\r\n\r\n  dontTranslateAll() {\r\n    this.setTranslationState(TranslationLinkConstants.DontTranslate, '');\r\n    Object.keys(this.attributes).forEach(attributeKey => {\r\n      this.linkToDefault(attributeKey);\r\n    });\r\n    this.languageInstanceService.triggerLocalizationWrapperMenuChange();\r\n  }\r\n\r\n  copyFromAll(languageKey: string) {\r\n    this.setTranslationState(TranslationLinkConstants.LinkCopyFrom, languageKey);\r\n    Object.keys(this.attributes).forEach(attributeKey => {\r\n      this.copyFrom(languageKey, attributeKey);\r\n    });\r\n    this.languageInstanceService.triggerLocalizationWrapperMenuChange();\r\n  }\r\n\r\n  /**\r\n   * Copy value where language is copyFromLanguageKey to value where language is current language.\r\n   * If value of current language don't exist then add new value\r\n   */\r\n  copyFrom(copyFromLanguageKey: string, attributeKey: string) {\r\n    if (this.isTranslateDisabled(attributeKey)) { return; }\r\n\r\n    const attributeValueTranslation: EavValue<any> = LocalizationHelper.getValueTranslation(this.attributes[attributeKey],\r\n      copyFromLanguageKey, this.defaultLanguage);\r\n\r\n    if (attributeValueTranslation) {\r\n      const valueAlreadyExist: boolean = this.attributes\r\n        ? LocalizationHelper.isEditableOrReadonlyTranslationExist(this.attributes[attributeKey], this.currentLanguage, this.defaultLanguage)\r\n        : false;\r\n\r\n      if (valueAlreadyExist) {\r\n        // Copy attribute value where language is languageKey to value where language is current language\r\n        this.itemService.updateItemAttributeValue(this.config.entity.entityId, attributeKey, attributeValueTranslation.value,\r\n          this.currentLanguage, this.defaultLanguage, false, this.config.entity.entityGuid);\r\n      } else {\r\n        // Copy attribute value where language is languageKey to new attribute with current language\r\n        this.itemService.addAttributeValue(this.config.entity.entityId, attributeKey, attributeValueTranslation.value,\r\n          this.currentLanguage, false, this.config.entity.entityGuid, this.config.field.type);\r\n      }\r\n    } else {\r\n      angularConsoleLog(`${this.currentLanguage}: Cant copy value from ${copyFromLanguageKey} because that value does not exist.`);\r\n    }\r\n\r\n    this.refreshControlConfig(attributeKey);\r\n  }\r\n\r\n  linkReadOnlyAll(languageKey: string) {\r\n    this.setTranslationState(TranslationLinkConstants.LinkReadOnly, languageKey);\r\n    Object.keys(this.attributes).forEach(attributeKey => {\r\n      this.linkReadOnly(languageKey, attributeKey);\r\n    });\r\n    this.languageInstanceService.triggerLocalizationWrapperMenuChange();\r\n  }\r\n\r\n  linkReadOnly(languageKey: string, attributeKey: string) {\r\n    if (this.isTranslateDisabled(attributeKey)) { return; }\r\n\r\n    this.setTranslationState(TranslationLinkConstants.LinkReadOnly, languageKey);\r\n    this.itemService.removeItemAttributeDimension(this.config.entity.entityId, attributeKey, this.currentLanguage,\r\n      this.config.entity.entityGuid);\r\n    this.itemService.addItemAttributeDimension(this.config.entity.entityId, attributeKey, this.currentLanguage,\r\n      languageKey, this.defaultLanguage, true, this.config.entity.entityGuid);\r\n    this.refreshControlConfig(attributeKey);\r\n  }\r\n\r\n  linkReadWriteAll(languageKey: string) {\r\n    this.setTranslationState(TranslationLinkConstants.LinkReadWrite, languageKey);\r\n    Object.keys(this.attributes).forEach(attributeKey => {\r\n      this.linkReadWrite(languageKey, attributeKey);\r\n    });\r\n    this.languageInstanceService.triggerLocalizationWrapperMenuChange();\r\n  }\r\n\r\n  linkReadWrite(languageKey: string, attributeKey: string) {\r\n    if (this.isTranslateDisabled(attributeKey)) { return; }\r\n\r\n    this.setTranslationState(TranslationLinkConstants.LinkReadWrite, languageKey);\r\n    this.itemService.removeItemAttributeDimension(this.config.entity.entityId, attributeKey, this.currentLanguage,\r\n      this.config.entity.entityGuid);\r\n    this.itemService.addItemAttributeDimension(this.config.entity.entityId, attributeKey, this.currentLanguage,\r\n      languageKey, this.defaultLanguage, false, this.config.entity.entityGuid);\r\n    this.refreshControlConfig(attributeKey);\r\n  }\r\n\r\n  getTranslationStateClass(linkType: string) {\r\n    switch (linkType) {\r\n      case TranslationLinkConstants.MissingDefaultLangValue:\r\n        return 'eav-localization-missing-default-lang-value';\r\n      case TranslationLinkConstants.Translate:\r\n      case TranslationLinkConstants.LinkCopyFrom:\r\n        return 'eav-localization-translate';\r\n      case TranslationLinkConstants.DontTranslate:\r\n        return '';\r\n      case TranslationLinkConstants.LinkReadOnly:\r\n        return 'eav-localization-link-read-only';\r\n      case TranslationLinkConstants.LinkReadWrite:\r\n        return 'eav-localization-link-read-write';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  private refreshControlConfig(attributeKey: string) {\r\n    if (this.fieldConfig.isParentGroup) { return; }\r\n    this.setControlDisable(this.attributes[attributeKey], attributeKey, this.currentLanguage, this.defaultLanguage);\r\n    this.readTranslationState(this.attributes[attributeKey], attributeKey, this.currentLanguage, this.defaultLanguage);\r\n    this.setInfoMessage(this.attributes[attributeKey], attributeKey, this.currentLanguage, this.defaultLanguage);\r\n  }\r\n\r\n  private triggerTranslation(actionResult: LinkToOtherLanguageData) {\r\n    if (!isEqual(this.translationState$.value, actionResult)) {\r\n      // need be sure that we have a language selected when a link option is clicked\r\n      switch (actionResult.linkType) {\r\n        case TranslationLinkConstants.Translate:\r\n          this.fieldConfig.isParentGroup ? this.translateAll() : this.translateUnlink(this.config.field.name);\r\n          break;\r\n        case TranslationLinkConstants.DontTranslate:\r\n          this.fieldConfig.isParentGroup ? this.dontTranslateAll() : this.linkToDefault(this.config.field.name);\r\n          break;\r\n        case TranslationLinkConstants.LinkReadOnly:\r\n          this.fieldConfig.isParentGroup\r\n            ? this.linkReadOnlyAll(actionResult.language)\r\n            : this.linkReadOnly(actionResult.language, this.config.field.name);\r\n          break;\r\n        case TranslationLinkConstants.LinkReadWrite:\r\n          this.fieldConfig.isParentGroup\r\n            ? this.linkReadWriteAll(actionResult.language)\r\n            : this.linkReadWrite(actionResult.language, this.config.field.name);\r\n          break;\r\n        case TranslationLinkConstants.LinkCopyFrom:\r\n          this.fieldConfig.isParentGroup\r\n            ? this.copyFromAll(actionResult.language)\r\n            : this.copyFrom(actionResult.language, this.config.field.name);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private setTranslationState(linkType: string, language: string) {\r\n    const newTranslationState = { ...this.translationState$.value, linkType, language };\r\n    this.translationState$.next(newTranslationState);\r\n  }\r\n\r\n  /** Determine is control disabled or enabled */\r\n  private setControlDisable(attributes: EavValues<any>, attributeKey: string, currentLanguage: string,\r\n    defaultLanguage: string) {\r\n    // Important! if control already disabled through settings then skip\r\n    if (!this.config.field.disabled) {\r\n      // if header group slot is empty disable control\r\n      if (this.headerGroupSlotIsEmpty) {\r\n        this.group.controls[attributeKey].disable({ emitEvent: false });\r\n        this.eavService.formDisabledChange$.next({ formId: this.config.form.formId, entityGuid: this.config.entity.entityGuid });\r\n      } else if (currentLanguage === defaultLanguage) {\r\n        this.group.controls[attributeKey].enable({ emitEvent: false });\r\n        this.eavService.formDisabledChange$.next({ formId: this.config.form.formId, entityGuid: this.config.entity.entityGuid });\r\n      } else { // else set enable/disable depending on editable translation exist\r\n        if (!LocalizationHelper.translationExistsInDefault(attributes, defaultLanguage)) {\r\n          this.group.controls[attributeKey].disable({ emitEvent: false });\r\n          this.eavService.formDisabledChange$.next({ formId: this.config.form.formId, entityGuid: this.config.entity.entityGuid });\r\n          this.defaultLanguageMissingValue$.next(true);\r\n        } else {\r\n          this.defaultLanguageMissingValue$.next(false);\r\n          if (this.isTranslateDisabled(attributeKey)) {\r\n            this.group.controls[attributeKey].disable({ emitEvent: false });\r\n            this.eavService.formDisabledChange$.next({ formId: this.config.form.formId, entityGuid: this.config.entity.entityGuid });\r\n          } else if (LocalizationHelper.isEditableTranslationExist(attributes, currentLanguage, defaultLanguage)) {\r\n            this.group.controls[attributeKey].enable({ emitEvent: false });\r\n            this.eavService.formDisabledChange$.next({ formId: this.config.form.formId, entityGuid: this.config.entity.entityGuid });\r\n          } else if (LocalizationHelper.isReadonlyTranslationExist(attributes, currentLanguage)) {\r\n            this.group.controls[attributeKey].disable({ emitEvent: false });\r\n            this.eavService.formDisabledChange$.next({ formId: this.config.form.formId, entityGuid: this.config.entity.entityGuid });\r\n          } else {\r\n            this.group.controls[attributeKey].disable({ emitEvent: false });\r\n            this.eavService.formDisabledChange$.next({ formId: this.config.form.formId, entityGuid: this.config.entity.entityGuid });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Translate a field configuration (labels, validation, ...) */\r\n  private translateAllConfiguration() {\r\n    const fieldSettings = LocalizationHelper.translateSettings(this.config.field.fullSettings,\r\n      this.currentLanguage, this.defaultLanguage);\r\n    this.config.field.settings = fieldSettings;\r\n    this.config.field.label = this.config.field.settings.Name || null;\r\n    this.config.field.validation = ValidationHelper.getValidations(this.config.field.settings);\r\n    this.config.field.required = ValidationHelper.isRequired(this.config.field.settings);\r\n    this.config.field.settings$?.next(fieldSettings); // must run after validations are recalculated\r\n  }\r\n\r\n  private subscribeToCurrentLanguageFromStore() {\r\n    this.subscription.add(\r\n      this.currentLanguage$.subscribe(currentLanguage => {\r\n        this.currentLanguage = currentLanguage;\r\n        this.translateAllConfiguration();\r\n        this.refreshControlConfig(this.config.field.name);\r\n      })\r\n    );\r\n  }\r\n\r\n  private subscribeToDefaultLanguageFromStore() {\r\n    this.subscription.add(\r\n      this.defaultLanguage$.subscribe(defaultLanguage => {\r\n        this.defaultLanguage = defaultLanguage;\r\n        this.translateAllConfiguration();\r\n        this.refreshControlConfig(this.config.field.name);\r\n      })\r\n    );\r\n  }\r\n\r\n  /** Subscribe to item attribute values */\r\n  private subscribeToAttributeValues() {\r\n    this.subscription.add(\r\n      this.attributes$.subscribe(attributes => {\r\n        this.attributes = attributes;\r\n      })\r\n    );\r\n  }\r\n\r\n  private subscribeToEntityHeaderFromStore() {\r\n    if (this.config.entity.header.Group && this.config.entity.header.Group.SlotCanBeEmpty) {\r\n      this.subscription.add(\r\n        this.itemService.selectHeaderByEntityId(this.config.entity.entityId, this.config.entity.entityGuid).subscribe(header => {\r\n          if (header.Group && !this.fieldConfig.isParentGroup) {\r\n            this.headerGroupSlotIsEmpty = header.Group.SlotIsEmpty;\r\n            this.setControlDisable(this.attributes[this.config.field.name], this.config.field.name,\r\n              this.currentLanguage, this.defaultLanguage);\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  /** Fetch current item */\r\n  private subscribeToItemFromStore() {\r\n    this.subscription.add(\r\n      this.itemService.selectItemById(this.config.entity.entityId).subscribe(item => {\r\n        this.item = item;\r\n      })\r\n    );\r\n  }\r\n\r\n  /** Fetch contentType of current item */\r\n  private subscribeToContentTypeFromStore() {\r\n    const contentTypeId = this.item.entity.type === null\r\n      ? this.item.header.ContentTypeName\r\n      : this.item.entity.type.id;\r\n    this.subscription.add(\r\n      this.contentTypeService.getContentTypeById(contentTypeId).subscribe(contentType => {\r\n        this.contentType = contentType;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Fetch inputType definition to check if input field of this type shouldn't be translated\r\n   * @param attributeType new attribute type defined in contentTypes\r\n   */\r\n  public isTranslateDisabled(attributeKey: string) {\r\n    if (!LocalizationHelper.translationExistsInDefault(this.attributes[attributeKey], this.defaultLanguage)) { return true; }\r\n    const attributeDef = this.contentType.contentType.attributes.find(attr => attr.name === attributeKey);\r\n    if (attributeDef == null) {\r\n      // since it's not defined it's not disabled. Happens when creating a new metadata entity, like settings for a field\r\n      return false;\r\n    }\r\n\r\n    const calculatedInputType = InputFieldHelper.calculateInputType(attributeDef, this.inputTypeService);\r\n    const disableI18n = LocalizationHelper.isI18nDisabled(this.inputTypeService, calculatedInputType, attributeDef.settings);\r\n    return disableI18n;\r\n  }\r\n\r\n  private readTranslationState(attributes: EavValues<any>, attributeKey: string, currentLanguage: string, defaultLanguage: string) {\r\n    // Determine is control disabled or enabled and info message\r\n    if (!LocalizationHelper.translationExistsInDefault(attributes, defaultLanguage)) {\r\n      this.setTranslationState(TranslationLinkConstants.MissingDefaultLangValue, '');\r\n    } else if (this.isTranslateDisabled(attributeKey)) {\r\n      this.setTranslationState(TranslationLinkConstants.DontTranslate, '');\r\n    } else if (LocalizationHelper.isEditableTranslationExist(attributes, currentLanguage, defaultLanguage)) {\r\n      const editableElements: EavDimensions<string>[] = LocalizationHelper.getValueTranslation(attributes,\r\n        currentLanguage, defaultLanguage)\r\n        .dimensions.filter(f => f.value !== currentLanguage);\r\n      if (editableElements.length > 0) {\r\n        this.setTranslationState(TranslationLinkConstants.LinkReadWrite, editableElements[0].value);\r\n      } else {\r\n        this.setTranslationState(TranslationLinkConstants.Translate, '');\r\n      }\r\n    } else if (LocalizationHelper.isReadonlyTranslationExist(attributes, currentLanguage)) {\r\n      const readOnlyElements: EavDimensions<string>[] = LocalizationHelper.getValueTranslation(attributes,\r\n        currentLanguage, defaultLanguage)\r\n        .dimensions.filter(f => f.value !== currentLanguage);\r\n      this.setTranslationState(TranslationLinkConstants.LinkReadOnly, readOnlyElements[0].value);\r\n    } else {\r\n      this.setTranslationState(TranslationLinkConstants.DontTranslate, '');\r\n    }\r\n  }\r\n\r\n  /** Subscribe triggered when changing all in menu (forAllFields) */\r\n  private subscribeMenuChange() {\r\n    this.subscription.add(\r\n      this.languageInstanceService.localizationWrapperMenuChange$.subscribe(s => {\r\n        if (!this.fieldConfig.isParentGroup) {\r\n          this.refreshControlConfig(this.config.field.name);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  /** Set info message */\r\n  private setInfoMessage(attributes: EavValues<any>, attributeKey: string, currentLanguage: string, defaultLanguage: string) {\r\n    // Determine whether control is disabled or enabled and info message\r\n    if (this.isTranslateDisabled(attributeKey)) {\r\n      this.infoMessage$.next('');\r\n      this.infoMessageLabel$.next('LangMenu.InAllLanguages');\r\n      return;\r\n    } else if (!LocalizationHelper.translationExistsInDefault(attributes, defaultLanguage)) {\r\n      this.infoMessage$.next(defaultLanguage);\r\n      this.infoMessageLabel$.next('LangMenu.MissingDefaultLangValue');\r\n      return;\r\n    }\r\n\r\n    const isEditableTranslationExist: boolean = LocalizationHelper.isEditableTranslationExist(attributes, currentLanguage, defaultLanguage);\r\n    const isReadonlyTranslationExist: boolean = LocalizationHelper.isReadonlyTranslationExist(attributes, currentLanguage);\r\n\r\n    if (isEditableTranslationExist || isReadonlyTranslationExist) {\r\n      let dimensions: string[] = LocalizationHelper.getValueTranslation(attributes, currentLanguage, defaultLanguage)\r\n        .dimensions.map(d => d.value);\r\n\r\n      dimensions = dimensions.filter(d => !d.includes(currentLanguage));\r\n\r\n      const isShared = dimensions.length > 0;\r\n      if (isShared) {\r\n        this.infoMessage$.next(TranslateGroupMenuHelpers.calculateSharedInfoMessage(dimensions, currentLanguage));\r\n\r\n        if (isEditableTranslationExist) {\r\n          this.infoMessageLabel$.next('LangMenu.In');\r\n        } else if (isReadonlyTranslationExist) {\r\n          this.infoMessageLabel$.next('LangMenu.From');\r\n        }\r\n      } else {\r\n        this.infoMessage$.next('');\r\n        this.infoMessageLabel$.next('');\r\n      }\r\n    } else {\r\n      this.infoMessage$.next('');\r\n      this.infoMessageLabel$.next('LangMenu.UseDefault');\r\n    }\r\n  }\r\n}\r\n","<mat-card class=\"shadow-bottom-z-1\" [ngClass]=\"{\r\n  'mat-card-group-parent': fieldConfig.isParentGroup,\r\n  'mat-card-group-child': !fieldConfig.isParentGroup,\r\n  'force-hide': !((visibleInEditUI$ | async) === true)\r\n}\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\"\r\n    [ngClass]=\"fieldConfig.isParentGroup ? 'mat-card-header-group-parent' : 'mat-card-header-group-child'\" *ngIf=\"{\r\n      collapse: collapse$ | async,\r\n      itemTitle: itemTitle$ | async,\r\n      currentLanguage: currentLanguage$ | async,\r\n      defaultLanguage: defaultLanguage$ | async,\r\n      slotCanBeEmpty: slotCanBeEmpty$ | async,\r\n      slotIsEmpty: slotIsEmpty$ | async\r\n    } as data\">\r\n\r\n    <div fxFlex=\"auto\" fxLayoutAlign=\"start center\" (click)=\"toggleCollapse()\">\r\n      <div fxLayoutAlign=\"start center\" class=\"mat-card-title-group\"\r\n        [ngClass]=\"fieldConfig.isParentGroup ? 'mat-display-1' : 'mat-body-1'\">\r\n        <mat-icon>\r\n          {{ data.collapse ? 'keyboard_arrow_down' : 'keyboard_arrow_up' }}\r\n        </mat-icon>\r\n        <span class=\"title\">\r\n          {{ data.itemTitle || ('ItemCard.DefaultTitle' | translate) }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <mat-slide-toggle fxLayoutAlign=\"start center\" *ngIf=\"data.slotCanBeEmpty\" (change)=\"toggleSlotIsEmpty()\"\r\n      [checked]=\"!data.slotIsEmpty\" [disabled]=\"data.currentLanguage !== data.defaultLanguage\"\r\n      [matTooltip]=\"(!data.slotIsEmpty ? 'ItemCard.SlotUsedTrue' : 'ItemCard.SlotUsedFalse') | translate\"\r\n      [matTooltipDisabled]=\"data.currentLanguage !== data.defaultLanguage\">\r\n    </mat-slide-toggle>\r\n    <app-translate-group-menu *ngIf=\"fieldConfig.isParentGroup\" fxLayoutAlign=\"end center\" [config]=\"config\"\r\n      [group]=\"group\">\r\n    </app-translate-group-menu>\r\n  </div>\r\n\r\n  <mat-card-content [ngStyle]=\"{ 'display': (collapse$ | async) ? 'none' : 'block' }\"\r\n    [ngClass]=\"fieldConfig.isParentGroup ? 'mat-card-content-group-parent' : 'mat-card-content-group-child'\">\r\n    <div class=\"mdc-layout-grid\">\r\n      <div class=\"mdc-layout-grid__inner\">\r\n        <div class=\"mdc-layout-grid__cell--span-12 mat-body-1\" align=\"start\" *ngIf=\"description$ | async\">\r\n          <div class=\"description\" appChangeAnchorTarget [innerHtml]=\"(description$ | async) | safeHtml\"></div>\r\n        </div>\r\n        <div class=\"mdc-layout-grid__cell--span-12\">\r\n          <ng-container #fieldComponent></ng-container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { FieldConfigGroup, FieldConfigSet } from '../../../eav-dynamic-form/model/field-config';\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { LocalizationHelper } from '../../../shared/helpers/localization-helper';\r\nimport { ContentType, EavHeader } from '../../../shared/models/eav';\r\nimport { ContentTypeService } from '../../../shared/store/ngrx-data/content-type.service';\r\nimport { ItemService } from '../../../shared/store/ngrx-data/item.service';\r\nimport { LanguageInstanceService } from '../../../shared/store/ngrx-data/language-instance.service';\r\nimport { ValidationHelper } from '../../validators/validation-helper';\r\n\r\n@Component({\r\n  selector: 'app-collapsible-wrapper',\r\n  templateUrl: './collapsible-wrapper.component.html',\r\n  styleUrls: ['./collapsible-wrapper.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CollapsibleWrapperComponent implements FieldWrapper, OnInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n  @Input() config: FieldConfigSet;\r\n  @Input() group: FormGroup;\r\n\r\n  fieldConfig: FieldConfigGroup;\r\n  visibleInEditUI$: Observable<boolean>;\r\n  collapse$ = new BehaviorSubject(false);\r\n  currentLanguage$: Observable<string>;\r\n  defaultLanguage$: Observable<string>;\r\n  itemTitle$: Observable<string>;\r\n  slotCanBeEmpty$: Observable<boolean>;\r\n  slotIsEmpty$: Observable<boolean>;\r\n  description$: Observable<string>;\r\n\r\n  private header$: Observable<EavHeader>;\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private itemService: ItemService,\r\n    private languageInstanceService: LanguageInstanceService,\r\n    private contentTypeService: ContentTypeService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fieldConfig = this.config.field as FieldConfigGroup;\r\n    this.visibleInEditUI$ = this.fieldConfig.settings$.pipe(map(settings => (settings.VisibleInEditUI === false) ? false : true));\r\n    this.header$ = this.itemService.selectHeaderByEntityId(this.config.entity.entityId, this.config.entity.entityGuid);\r\n\r\n    this.collapse$.next(this.fieldConfig.settings$.value.DefaultCollapsed || false);\r\n    this.currentLanguage$ = this.languageInstanceService.getCurrentLanguage(this.config.form.formId);\r\n    this.defaultLanguage$ = this.languageInstanceService.getDefaultLanguage(this.config.form.formId);\r\n    this.slotCanBeEmpty$ = this.header$.pipe(map(header => header?.Group?.SlotCanBeEmpty || false));\r\n    this.slotIsEmpty$ = this.header$.pipe(map(header => header?.Group?.SlotIsEmpty || false));\r\n\r\n    this.itemTitle$ = !this.fieldConfig.isParentGroup\r\n      ? this.fieldConfig.settings$.pipe(map(settings => settings.Name))\r\n      : this.currentLanguage$.pipe(map(currentLanguage => {\r\n        let contentType: ContentType;\r\n        this.contentTypeService.getContentTypeById(this.config.entity.contentTypeId).pipe(take(1)).subscribe(cType => {\r\n          contentType = cType;\r\n        });\r\n        let defaultLanguage: string;\r\n        this.defaultLanguage$.pipe(take(1)).subscribe(defaultLang => {\r\n          defaultLanguage = defaultLang;\r\n        });\r\n        let label: string;\r\n        try {\r\n          const type = contentType.contentType.metadata\r\n            // xx ContentType is a historic bug and should be fixed when JSONs are rechecked\r\n            .find(metadata => metadata.type.name === 'ContentType' || metadata.type.name === 'xx ContentType');\r\n          if (!!type) {\r\n            label = LocalizationHelper.getValueOrDefault(type.attributes.Label, currentLanguage, defaultLanguage)?.value;\r\n          }\r\n          label = label || contentType.contentType.name;\r\n        } catch (error) {\r\n          label = contentType.contentType.name;\r\n        }\r\n        return label;\r\n      }));\r\n\r\n    this.description$ = this.fieldConfig.settings$.pipe(map(settings => {\r\n      if (this.fieldConfig.isParentGroup) {\r\n        return settings.EditInstructions != null ? settings.EditInstructions : '';\r\n      }\r\n      return settings.Notes != null ? settings.Notes : '';\r\n    }));\r\n\r\n    this.subscription.add(\r\n      this.currentLanguage$.subscribe(currentLanguage => {\r\n        let defaultLanguage: string;\r\n        this.defaultLanguage$.pipe(take(1)).subscribe(defaultLang => {\r\n          defaultLanguage = defaultLang;\r\n        });\r\n        this.translateAllConfiguration(currentLanguage, defaultLanguage);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.collapse$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  toggleCollapse() {\r\n    this.collapse$.next(!this.collapse$.value);\r\n  }\r\n\r\n  toggleSlotIsEmpty() {\r\n    let header: EavHeader;\r\n    this.header$.pipe(take(1)).subscribe(hdr => {\r\n      header = hdr;\r\n    });\r\n    const newHeader: EavHeader = { ...header, Group: { ...header.Group, SlotIsEmpty: !header.Group.SlotIsEmpty } };\r\n    this.itemService.updateItemHeader(this.config.entity.entityId, this.config.entity.entityGuid, newHeader);\r\n  }\r\n\r\n  private translateAllConfiguration(currentLanguage: string, defaultLanguage: string) {\r\n    const fieldSettings = LocalizationHelper.translateSettings(this.fieldConfig.fullSettings, currentLanguage, defaultLanguage);\r\n    this.fieldConfig.settings = fieldSettings;\r\n    this.fieldConfig.label = this.fieldConfig.settings.Name || null;\r\n    this.fieldConfig.validation = ValidationHelper.getValidations(this.fieldConfig.settings);\r\n    this.fieldConfig.required = ValidationHelper.isRequired(this.fieldConfig.settings);\r\n    this.config.field.settings$?.next(fieldSettings); // must run after validations are recalculated\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { BaseComponent } from '../../input-types/base/base.component';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  selector: 'app-collapsible-field-wrapper',\r\n  templateUrl: './collapsible-field-wrapper.component.html',\r\n  styleUrls: ['./collapsible-field-wrapper.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CollapsibleFieldWrapperComponent extends BaseComponent<string[]> implements FieldWrapper, OnInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n\r\n  collapse$ = new BehaviorSubject(true);\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.collapse$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  toggleCollapse() {\r\n    this.collapse$.next(!this.collapse$.value);\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mat-card-header-group-child\">\r\n  <div fxFlex=\"auto\" fxLayoutAlign=\"start center\" (click)=\"toggleCollapse()\" class=\"mat-caption\">\r\n    <div fxLayoutAlign=\"start center\" class=\"mat-caption field-title\">\r\n      <mat-icon> {{ (collapse$ | async) ? 'keyboard_arrow_down' : 'keyboard_arrow_up' }}</mat-icon>\r\n      <span>{{ label$ | async }}&nbsp;{{ (required$ | async) ? '*': '' }}</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div style=\"padding-top: 8px;\" [ngStyle]=\"{ 'display': (collapse$ | async) ? 'none' : 'block' }\">\r\n  <ng-container #fieldComponent></ng-container>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { EditRoutingService } from '../../../shared/services/edit-routing.service';\r\nimport { LanguageInstanceService } from '../../../shared/store/ngrx-data/language-instance.service';\r\nimport { BaseComponent } from '../../input-types/base/base.component';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  selector: 'app-eav-localization-wrapper',\r\n  templateUrl: './eav-localization-wrapper.component.html',\r\n  styleUrls: ['./eav-localization-wrapper.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EavLocalizationComponent extends BaseComponent<any> implements FieldWrapper, OnInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n  currentLanguage$: Observable<string>;\r\n  defaultLanguage$: Observable<string>;\r\n  open$: Observable<boolean>;\r\n  toggleTranslateField$ = new BehaviorSubject(false);\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private languageInstanceService: LanguageInstanceService,\r\n    private editRoutingService: EditRoutingService,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.currentLanguage$ = this.languageInstanceService.getCurrentLanguage(this.config.form.formId);\r\n    this.defaultLanguage$ = this.languageInstanceService.getDefaultLanguage(this.config.form.formId);\r\n    this.open$ = this.editRoutingService.isExpanded(this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.toggleTranslateField$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  toggleTranslate() {\r\n    let open: boolean;\r\n    this.open$.pipe(take(1)).subscribe(isOpen => {\r\n      open = isOpen;\r\n    });\r\n    let currentLanguage: string;\r\n    this.currentLanguage$.pipe(take(1)).subscribe(lang => {\r\n      currentLanguage = lang;\r\n    });\r\n    let defaultLanguage: string;\r\n    this.defaultLanguage$.pipe(take(1)).subscribe(lang => {\r\n      defaultLanguage = lang;\r\n    });\r\n    const toggleEnabled = !open && currentLanguage !== defaultLanguage;\r\n    if (!toggleEnabled) { return; }\r\n\r\n    this.toggleTranslateField$.next(!this.toggleTranslateField$.value);\r\n  }\r\n}\r\n","<div class=\"language-wrap\">\r\n  <div class=\"language-wrap__field\" (dblclick)=\"toggleTranslate()\"\r\n    [ngClass]=\"{ 'language-wrap__field-short': (currentLanguage$ | async) !== (defaultLanguage$ | async) }\">\r\n    <ng-container #fieldComponent></ng-container>\r\n  </div>\r\n  <app-translate-group-menu class=\"language-wrap__translate\" [ngClass]=\"{\r\n    'language-wrap__translate--hidden': (currentLanguage$ | async) === (defaultLanguage$ | async)\r\n  }\" [config]=\"config\" [group]=\"group\" [toggleTranslateField]=\"toggleTranslateField$ | async\">\r\n  </app-translate-group-menu>\r\n</div>\r\n","import { animate, keyframes, state, style, transition, trigger } from '@angular/animations';\r\n\r\nexport const ContentExpandAnimation = [\r\n    trigger('itemShrinkAnimation', [\r\n        state('open', style({\r\n            height: '30vh'\r\n        })),\r\n        state('closed', style({\r\n            height: '0vh'\r\n        })),\r\n        transition('open => closed', [\r\n            animate('300ms cubic-bezier(0.4, 0.0, 0.2, 1)'),\r\n        ]),\r\n    ]),\r\n    trigger('contentExpandAnimation', [\r\n        state('closed', style({\r\n            height: '0',\r\n        })),\r\n        state('expanded', style({\r\n            height: 'calc(100vh - {{bottomPixels}})', // 100px on desktop, 50px on mobile\r\n            maxHeight: 'calc(100vh - {{bottomPixels}})',\r\n        }), { params: { bottomPixels: window.innerWidth > 600 ? '100px' : '50px' } }),\r\n        transition('closed => expanded', [\r\n            animate('300ms cubic-bezier(0.4, 0.0, 0.2, 1)', keyframes([\r\n                style({ height: '0vh', overflow: 'hidden' }),\r\n                style({ height: 'calc(100vh - {{bottomPixels}})', overflow: 'hidden' }),\r\n            ])),\r\n        ], { params: { bottomPixels: window.innerWidth > 600 ? '100px' : '50px' } }),\r\n    ]),\r\n];\r\n","<div [ngClass]=\"(dialogIsOpen$ | async) ? 'c-ew__container' : 'u-display-none'\">\r\n  <div class=\"c-ew__backdrop\" (click)=\"closeDialog()\"></div>\r\n  <div fxLayout=\"column\" class=\"c-ew__dialog mat-elevation-z24\">\r\n    <div [ngClass]=\"{ 'c-ew__dialog-header mat-elevation-z2': dialogIsOpen$ | async }\">\r\n      <mat-card class=\"mat-elevation-z0\" fxLayout=\"row\">\r\n        <button mat-icon-button class=\"back-arrow\" fxLayoutAlign=\"center center\"\r\n          [matTooltip]=\"'Form.Buttons.Return.Tip' | translate\" (click)=\"closeDialog()\">\r\n          <mat-icon>arrow_back</mat-icon>\r\n        </button>\r\n        <span fxLayoutAlign=\"center center\" class=\"title mat-display-1\">{{ label$ | async }}</span>\r\n      </mat-card>\r\n    </div>\r\n    <div>\r\n      <div [@itemShrinkAnimation]=\"(dialogIsOpen$ | async) ? 'closed' : 'open'\">\r\n      </div>\r\n      <div class=\"c-ew__dialog-content u-add-scrollbar u-hide-scrollbar\" [@contentExpandAnimation]=\"{\r\n        value: (dialogIsOpen$ | async) ? 'expanded' : 'closed',\r\n        params: { bottomPixels: calculateBottomPixels() }\r\n      }\">\r\n        <div class=\"mdc-layout-grid\">\r\n          <div class=\"mdc-layout-grid__inner\">\r\n            <mat-card class=\"mdc-layout-grid__cell--span-12 u-border-radius shadow-bottom-z-1\">\r\n              <ng-container #fieldComponent></ng-container>\r\n            </mat-card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"c-ew__preview-holder\" *ngIf=\"{\r\n  label: label$ | async,\r\n  required: required$ | async,\r\n  invalid: invalid$ | async,\r\n  touched: control.touched,\r\n  selectedEntities: (selectedEntities$ | async)?.slice(0, 9) || [],\r\n  entitiesNumber: (selectedEntities$ | async)?.length || 0,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n  <mat-label class=\"c-ew__preview-label\" [ngClass]=\"{\r\n    'mat-caption' : data.entitiesNumber,\r\n    'mat-empty' : !data.entitiesNumber,\r\n    'mat-error' : data.invalid && data.touched && !config.field.disabled,\r\n    'color__primary' : !(data.invalid && data.touched) && !config.field.disabled,\r\n    'color__label-disabled' : config.field.disabled\r\n  }\">\r\n    {{ data.label }} {{ data.required ? '*': '' }}\r\n  </mat-label>\r\n  <div matRipple [matRippleAnimation]=\"{ enterDuration: 360 }\" class=\"c-ew__preview mat-ripple\" (click)=\"expandDialog()\"\r\n    [ngClass]=\"{\r\n      'c-ew__preview--invalid' : data.invalid && data.touched,\r\n      'c-ew__preview--disabled': config.field.disabled\r\n    }\">\r\n    <div [ngClass]=\"data.entitiesNumber ? 'c-ew__preview-container' : 'c-ew__preview-container--empty'\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <mat-list *ngIf=\"data.entitiesNumber\" fxLayout=\"row\">\r\n          <mat-list-item role=\"listitem\" *ngFor=\"let item of data.selectedEntities; trackBy: trackByFn\">\r\n            <span mat-line>{{ item.label }}</span>\r\n          </mat-list-item>\r\n        </mat-list>\r\n        <span *ngIf=\"data.entitiesNumber > 5\" class=\"more-entities mat-body-1\">\r\n          {{ data.entitiesNumber }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n</div>\r\n","import { AfterViewInit, ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { ContentExpandAnimation } from '../../../shared/animations/content-expand-animation';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { EditRoutingService } from '../../../shared/services/edit-routing.service';\r\nimport { BaseComponent } from '../../input-types/base/base.component';\r\nimport { calculateSelectedEntities } from '../../input-types/entity/entity-default/entity-default.helpers';\r\nimport { SelectedEntity } from '../../input-types/entity/entity-default/entity-default.models';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  selector: 'app-entity-expandable-wrapper',\r\n  templateUrl: './entity-expandable-wrapper.component.html',\r\n  styleUrls: ['./entity-expandable-wrapper.component.scss'],\r\n  animations: [ContentExpandAnimation],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n// tslint:disable-next-line:max-line-length\r\nexport class EntityExpandableWrapperComponent extends BaseComponent<string | string[]> implements FieldWrapper, OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n\r\n  dialogIsOpen$: Observable<boolean>;\r\n  selectedEntities$: Observable<SelectedEntity[]>;\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private translate: TranslateService,\r\n    private editRoutingService: EditRoutingService,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.dialogIsOpen$ = this.editRoutingService.isExpanded(this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.selectedEntities$ = combineLatest([this.value$, this.settings$, this.config.entityCache$]).pipe(\r\n      map(([fieldValue, settings, availableEntities]) => {\r\n        const selected = calculateSelectedEntities(fieldValue, settings.Separator, availableEntities, this.translate);\r\n        return selected;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  calculateBottomPixels() {\r\n    return window.innerWidth > 600 ? '100px' : '50px';\r\n  }\r\n\r\n  trackByFn(index: number, item: SelectedEntity) {\r\n    return item.value;\r\n  }\r\n\r\n  expandDialog() {\r\n    if (this.config.field.disabled) { return; }\r\n    this.editRoutingService.expand(true, this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n\r\n  closeDialog() {\r\n    this.editRoutingService.expand(false, this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n}\r\n","<div [ngClass]=\"(open$ | async) ? 'c-ew__container' : 'u-display-none'\">\r\n  <div #backdrop class=\"c-ew__backdrop\" (click)=\"closeDialog()\"></div>\r\n  <div #dialog fxLayout=\"column\" class=\"c-ew__dialog mat-elevation-z24 u-border-radius\">\r\n    <div [ngClass]=\"{ 'c-ew__dialog-header mat-elevation-z2': (open$ | async) }\">\r\n      <mat-card class=\"mat-elevation-z0\" fxLayout=\"row\">\r\n        <button mat-icon-button class=\"back-arrow\" fxLayoutAlign=\"center center\"\r\n          [matTooltip]=\"'Form.Buttons.Return.Tip' | translate\" (click)=\"closeDialog()\">\r\n          <mat-icon>arrow_back</mat-icon>\r\n        </button>\r\n        <span fxLayoutAlign=\"center center\" class=\"title mat-display-1\">{{ label$ | async }}</span>\r\n      </mat-card>\r\n    </div>\r\n    <div>\r\n      <div [@itemShrinkAnimation]=\"(open$ | async) ? 'closed' : 'open'\">\r\n      </div>\r\n      <div class=\"c-ew__dialog-content u-border-radius-bottom u-add-scrollbar u-hide-scrollbar\"\r\n        [@contentExpandAnimation]=\"{\r\n          value: (open$ | async) ? 'expanded' : 'closed',\r\n          params: { bottomPixels: calculateBottomPixels() }\r\n        }\">\r\n        <ng-container #fieldComponent></ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"c-ew__preview-holder\" *ngIf=\"{\r\n  value: value$ | async,\r\n  label: label$ | async,\r\n  required: required$ | async,\r\n  invalid: invalid$ | async,\r\n  touched: control.touched,\r\n  dirty: control.dirty,\r\n  focused: config.field.focused$ | async,\r\n  disabled: disabled$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n  <mat-label class=\"c-ew__preview-label\" [ngClass]=\"{\r\n    'mat-caption' : data.value,\r\n    'mat-empty' : !data.value,\r\n    'mat-error' : data.invalid && data.touched && !data.disabled,\r\n    'color__primary' : !(data.invalid && data.touched) && !data.disabled,\r\n    'color__label-disabled' : data.disabled,\r\n    'c-ew__preview-label--focused': data.focused\r\n  }\">\r\n    {{ data.label }}\r\n    {{ data.required ? '*': '' }}\r\n  </mat-label>\r\n  <div class=\"c-ew__preview\" [ngClass]=\"{\r\n    'c-ew__preview--invalid' : data.invalid && (data.touched || data.dirty),\r\n    'c-ew__preview--disabled': data.disabled,\r\n    'c-ew__preview--focused': data.focused\r\n  }\">\r\n    <div class=\"c-ew__preview-container\">\r\n      <div #previewContainer class=\"c-ew__preview-content u-hide-scrollbar\" [ngClass]=\"{\r\n        'c-ew__preview-content--disabled': data.disabled\r\n      }\"></div>\r\n    </div>\r\n  </div>\r\n  <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n</div>\r\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, NgZone, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { angularConsoleLog } from '../../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { ContentExpandAnimation } from '../../../shared/animations/content-expand-animation';\r\nimport { DnnBridgeService } from '../../../shared/services/dnn-bridge.service';\r\nimport { DropzoneDraggingHelper } from '../../../shared/services/dropzone-dragging.helper';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { EditRoutingService } from '../../../shared/services/edit-routing.service';\r\nimport { ContentTypeService } from '../../../shared/store/ngrx-data/content-type.service';\r\nimport { FeatureService } from '../../../shared/store/ngrx-data/feature.service';\r\nimport { InputTypeService } from '../../../shared/store/ngrx-data/input-type.service';\r\nimport { BaseComponent } from '../../input-types/base/base.component';\r\nimport { ConnectorHelper } from '../../input-types/custom/external-web-component/connector/connector.helper';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  selector: 'app-expandable-wrapper',\r\n  templateUrl: './expandable-wrapper.component.html',\r\n  styleUrls: ['./expandable-wrapper.component.scss'],\r\n  animations: [ContentExpandAnimation],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ExpandableWrapperComponent extends BaseComponent<string> implements FieldWrapper, OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n  @ViewChild('previewContainer') previewContainerRef: ElementRef;\r\n  @ViewChild('backdrop') backdropRef: ElementRef;\r\n  @ViewChild('dialog') dialogRef: ElementRef;\r\n\r\n  open$: Observable<boolean>;\r\n\r\n  private connectorCreator: ConnectorHelper;\r\n  private dropzoneDraggingHelper: DropzoneDraggingHelper;\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private translateService: TranslateService,\r\n    private contentTypeService: ContentTypeService,\r\n    private inputTypeService: InputTypeService,\r\n    private featureService: FeatureService,\r\n    private editRoutingService: EditRoutingService,\r\n    private dnnBridgeService: DnnBridgeService,\r\n    private zone: NgZone,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.open$ = this.editRoutingService.isExpanded(this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const componentTag = `field-${this.config.field.inputType}`;\r\n    angularConsoleLog('ExpandableWrapper created for:', componentTag);\r\n    this.connectorCreator = new ConnectorHelper(\r\n      this.config,\r\n      this.group,\r\n      this.previewContainerRef,\r\n      componentTag,\r\n      this.eavService,\r\n      this.translateService,\r\n      this.contentTypeService,\r\n      this.inputTypeService,\r\n      this.featureService,\r\n      this.editRoutingService,\r\n      this.dnnBridgeService,\r\n      this.zone,\r\n    );\r\n\r\n    this.dropzoneDraggingHelper = new DropzoneDraggingHelper(this.zone);\r\n    this.dropzoneDraggingHelper.attach(this.backdropRef.nativeElement);\r\n    this.dropzoneDraggingHelper.attach(this.dialogRef.nativeElement);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    angularConsoleLog('ExpandableWrapper destroyed');\r\n    this.connectorCreator.destroy();\r\n    this.dropzoneDraggingHelper.detach();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  expandDialog() {\r\n    this.editRoutingService.expand(true, this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n\r\n  closeDialog() {\r\n    this.editRoutingService.expand(false, this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n\r\n  calculateBottomPixels() {\r\n    return window.innerWidth > 600 ? '100px' : '50px';\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { BaseComponent } from '../../input-types/base/base.component';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  selector: 'app-hidden-wrapper',\r\n  templateUrl: './hidden-wrapper.component.html',\r\n  styleUrls: ['./hidden-wrapper.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HiddenWrapperComponent extends BaseComponent<any> implements FieldWrapper, OnInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n\r\n  visibleInEditUI$: Observable<boolean>;\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.visibleInEditUI$ = this.settings$.pipe(map(settings => (settings.VisibleInEditUI === false) ? false : true));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n}\r\n","<div [hidden]=\"!((visibleInEditUI$ | async) === true)\">\r\n  <ng-container #fieldComponent></ng-container>\r\n</div>\r\n","<!-- header -->\r\n<div [ngClass]=\"(open$ | async) ? 'c-ew__container' : 'u-display-none'\">\r\n  <div #backdrop class=\"c-ew__backdrop\" (click)=\"closeDialog()\"></div>\r\n  <div #dialog fxLayout=\"column\" class=\"c-ew__dialog mat-elevation-z24 u-border-radius\">\r\n    <div [ngClass]=\"{ 'c-ew__dialog-header mat-elevation-z2': (open$ | async) }\">\r\n      <mat-card class=\"mat-elevation-z0\" fxLayout=\"row\">\r\n        <button mat-icon-button class=\"back-arrow\" fxLayoutAlign=\"center center\"\r\n          [matTooltip]=\"'Form.Buttons.Return.Tip' | translate\" (click)=\"closeDialog()\">\r\n          <mat-icon>arrow_back</mat-icon>\r\n        </button>\r\n        <span fxLayoutAlign=\"center center\" class=\"title mat-display-1\">{{ label$ | async }}</span>\r\n      </mat-card>\r\n    </div>\r\n    <div>\r\n      <div [@itemShrinkAnimation]=\"(open$ | async) ? 'closed' : 'open'\">\r\n      </div>\r\n      <div class=\"c-ew__dialog-content u-border-radius-bottom u-add-scrollbar u-hide-scrollbar\"\r\n        [@contentExpandAnimation]=\"{\r\n          value: (open$ | async) ? 'expanded' : 'closed',\r\n          params: { bottomPixels: calculateBottomPixels() }\r\n        }\">\r\n        <ng-container #fieldComponent></ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- preview -->\r\n<div class=\"c-hyperlink-default-field-preview\" *ngIf=\"{\r\n  value: value$ | async,\r\n  preview: preview$ | async,\r\n  label: label$ | async,\r\n  placeholder: placeholder$ | async,\r\n  invalid: invalid$ | async,\r\n  touched: control.touched,\r\n  required: required$ | async,\r\n  disabled: disabled$ | async,\r\n  adamButton: adamButton$ | async,\r\n  pageButton: pageButton$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n  <div class=\"c-ew__preview\" fxLayout=\"row\" fxLayoutAlign=\"start start\" [ngClass]=\"{\r\n    'c-ew__preview--disabled': data.disabled,\r\n    'c-ew__preview--last-in-group': config.field.isLastInGroup\r\n  }\">\r\n    <!-- image / icon -->\r\n    <div class=\"thumbnail-before-input\" [matTooltip]=\"'Fields.Hyperlink.Default.Fullscreen' | translate\"\r\n      [matTooltipDisabled]=\"data.disabled\" [ngClass]=\"{\r\n      'icon-before-input': data.value && !data.preview.isImage,\r\n      'thumbnail-before-input--disabled': data.disabled\r\n    }\" [ngStyle]=\"{ 'background-image': data.value && data.preview.isImage ? data.preview.thumbnailUrl : '' }\"\r\n      (click)=\"expandDialog()\">\r\n      <mat-icon *ngIf=\"data.value && !data.preview.isImage && data.preview.isKnownType\" [matTooltip]=\"data.preview.url\"\r\n        matTooltipPosition=\"right\">\r\n        {{ data.preview.icon }}\r\n      </mat-icon>\r\n      <mat-icon *ngIf=\"data.value && !data.preview.isImage && !data.preview.isKnownType\" [matTooltip]=\"data.preview.url\"\r\n        matTooltipPosition=\"right\" [svgIcon]=\"data.preview.icon\">\r\n      </mat-icon>\r\n    </div>\r\n    <!-- field -->\r\n    <div class=\"c-ew__preview-field--short\" fxFlex=\"auto\">\r\n      <!-- input -->\r\n      <div class=\"hyperlink-input-link-wrapper\">\r\n        <mat-form-field appearance=\"standard\" color=\"accent\" [ngClass]=\"{\r\n          'mat-form-field-invalid': data.invalid && data.touched\r\n        }\">\r\n          <input matInput [matTooltip]=\"'Fields.Hyperlink.Default.Tooltip' | translate\" matTooltipPosition=\"above\"\r\n            [placeholder]=\"data.placeholder\" (change)=\"setValue($event)\" [disabled]=\"data.disabled\"\r\n            (blur)=\"control.markAsTouched()\" [value]=\"data.value\" (keyup)=\"setValue($event)\" appPasteClipboardImage\r\n            [config]=\"config\" [elementType]=\"'input'\">\r\n          <div matSuffix fxLayoutAlign=\"center center\" *ngIf=\"data.adamButton || data.pageButton\">\r\n            <div class=\"c-ew__preview-suffix-text\" fxHide fxShow.gt-xs [ngClass]=\"{\r\n              'c-ew__preview-suffix-text--disabled': data.disabled\r\n            }\">\r\n              {{ data.adamButton ? ('Fields.Hyperlink.AdamFileManager.Hint' | translate) : '' }}\r\n            </div>\r\n            <button mat-icon-button class=\"c-ew__preview-suffix-icon\"\r\n              [matTooltip]=\"'Fields.Hyperlink.Default.Fullscreen' | translate\" appClickStopPropagation\r\n              *ngIf=\"data.adamButton\" [disabled]=\"data.disabled\" (click)=\"expandDialog()\">\r\n              <mat-icon svgIcon=\"apple\"></mat-icon>\r\n            </button>\r\n            <button mat-icon-button class=\"c-ew__preview-suffix-icon\"\r\n              [matTooltip]=\"'Fields.Hyperlink.Default.PageTip' | translate\" appClickStopPropagation\r\n              *ngIf=\"data.pageButton\" [disabled]=\"data.disabled\" (click)=\"openPagePicker()\">\r\n              <mat-icon svgIcon=\"sitemap\"></mat-icon>\r\n            </button>\r\n          </div>\r\n          <mat-label [ngClass]=\"{ 'mat-error' : data.invalid && data.touched }\">\r\n            {{ data.label }}\r\n            {{ data.required ? '*': '' }}\r\n          </mat-label>\r\n        </mat-form-field>\r\n        <!-- link absolutely positioned above input -->\r\n        <div *ngIf=\"data.preview.floatingText\" class=\"hyperlink-floating\" fxHide fxShow.gt-xs>\r\n          <div class=\"hyperlink-floating__value\">{{ data.value }}</div>\r\n          <div class=\"hyperlink-floating__url-box\">\r\n            <a [href]=\"data.preview.url\" target=\"_blank\" tabindex=\"-1\" class=\"hyperlink-floating__url\"\r\n              [matTooltip]=\"data.preview.url\">\r\n              <span>{{ data.preview.floatingText }}</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- helper text and adam text -->\r\n      <div class=\"c__helper-wrapper\">\r\n        <app-field-helper-text class=\"c__helper-wrapper--left\" [config]=\"config\" [group]=\"group\"\r\n          [hyperlinkDefaultWrapperFix]=\"true\">\r\n        </app-field-helper-text>\r\n        <div *ngIf=\"data.adamButton\" align=\"end\" class=\"c-ew__preview-field-hint c__helper-wrapper--right\" fxHide\r\n          fxShow.gt-xs>\r\n          <span>{{ 'Fields.Hyperlink.Default.Sponsor' | translate }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, NgZone, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { ContentExpandAnimation } from '../../../shared/animations/content-expand-animation';\r\nimport { DnnBridgeService } from '../../../shared/services/dnn-bridge.service';\r\nimport { DropzoneDraggingHelper } from '../../../shared/services/dropzone-dragging.helper';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { EditRoutingService } from '../../../shared/services/edit-routing.service';\r\nimport { FileTypeService } from '../../../shared/services/file-type.service';\r\nimport { BaseComponent } from '../../input-types/base/base.component';\r\nimport { DnnBridgeConnectorParams, PagePickerResult } from '../../input-types/dnn-bridge/dnn-bridge.models';\r\nimport { Preview } from '../../input-types/hyperlink/hyperlink-default/hyperlink-default.models';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  selector: 'app-hyperlink-default-expandable-wrapper',\r\n  templateUrl: './hyperlink-default-expandable-wrapper.component.html',\r\n  styleUrls: ['./hyperlink-default-expandable-wrapper.component.scss'],\r\n  animations: [ContentExpandAnimation],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n// tslint:disable-next-line:max-line-length\r\nexport class HyperlinkDefaultExpandableWrapperComponent extends BaseComponent<string> implements FieldWrapper, OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n  @ViewChild('backdrop') backdropRef: ElementRef;\r\n  @ViewChild('dialog') dialogRef: ElementRef;\r\n\r\n  open$: Observable<boolean>;\r\n  adamButton$: Observable<boolean>;\r\n  pageButton$: Observable<boolean>;\r\n  preview$ = new BehaviorSubject<Preview>({\r\n    url: '',\r\n    thumbnailUrl: '',\r\n    thumbnailPreviewUrl: '',\r\n    floatingText: '',\r\n    isImage: false,\r\n    isKnownType: false,\r\n    icon: '',\r\n  });\r\n  private dropzoneDraggingHelper: DropzoneDraggingHelper;\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private fileTypeService: FileTypeService,\r\n    private dnnBridgeService: DnnBridgeService,\r\n    private zone: NgZone,\r\n    private editRoutingService: EditRoutingService,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.subscription.add(\r\n      this.value$.subscribe(value => {\r\n        this.setLink(value);\r\n      })\r\n    );\r\n    this.open$ = this.editRoutingService.isExpanded(this.config.field.index, this.config.entity.entityGuid);\r\n    this.adamButton$ = this.settings$.pipe(map(settings => settings.Buttons?.includes('adam')));\r\n    this.pageButton$ = this.settings$.pipe(map(settings => settings.Buttons?.includes('page')));\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dropzoneDraggingHelper = new DropzoneDraggingHelper(this.zone);\r\n    this.dropzoneDraggingHelper.attach(this.backdropRef.nativeElement);\r\n    this.dropzoneDraggingHelper.attach(this.dialogRef.nativeElement);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dropzoneDraggingHelper.detach();\r\n    this.preview$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  calculateBottomPixels() {\r\n    return window.innerWidth > 600 ? '100px' : '50px';\r\n  }\r\n\r\n  setValue(event: Event) {\r\n    const newValue = (event.target as HTMLInputElement).value;\r\n    if (this.control.value === newValue) { return; }\r\n    this.control.patchValue(newValue);\r\n    this.control.markAsDirty();\r\n  }\r\n\r\n  expandDialog() {\r\n    if (this.control.disabled) { return; }\r\n    this.editRoutingService.expand(true, this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n\r\n  closeDialog() {\r\n    this.editRoutingService.expand(false, this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n\r\n  openPagePicker() {\r\n    const settings = this.settings$.value;\r\n    const params: DnnBridgeConnectorParams = {\r\n      CurrentValue: this.control.value,\r\n      FileFilter: (settings.FileFilter != null) ? settings.FileFilter : '',\r\n      Paths: (settings.Paths != null) ? settings.Paths : '',\r\n    };\r\n    this.dnnBridgeService.open('pagepicker', params, this.pagePickerCallback.bind(this));\r\n  }\r\n\r\n  private pagePickerCallback(value: PagePickerResult) {\r\n    // Convert to page:xyz format (if it wasn't cancelled)\r\n    if (!value) { return; }\r\n    this.control.patchValue(`page:${value.id}`);\r\n  }\r\n\r\n  private setLink(value: string) {\r\n    if (!value) { return; }\r\n\r\n    // handle short-ID links like file:17\r\n    const contentType = this.config.entity.header.ContentTypeName;\r\n    const entityGuid = this.config.entity.header.Guid;\r\n    const field = this.config.field.name;\r\n    this.dnnBridgeService.getUrlOfId(value, contentType, entityGuid, field).subscribe(path => {\r\n      if (!path) { return; }\r\n      const urlLowered = path.toLowerCase();\r\n      const isFileOrPage = urlLowered.includes('file:') || urlLowered.includes('page:');\r\n      const preview: Preview = {\r\n        url: path,\r\n        floatingText: isFileOrPage ? `.../${path.substring(path.lastIndexOf('/') + 1, path.length)}` : '',\r\n        thumbnailUrl: this.thumbnailUrl(path, 1, true),\r\n        thumbnailPreviewUrl: this.thumbnailUrl(path, 2, false),\r\n        isImage: this.fileTypeService.isImage(path),\r\n        isKnownType: this.fileTypeService.isKnownType(path),\r\n        icon: this.fileTypeService.getIconClass(path),\r\n      };\r\n      this.preview$.next(preview);\r\n    });\r\n  }\r\n\r\n  private thumbnailUrl(url: string, size: number, quote: boolean): string {\r\n    if (size === 1) {\r\n      url = url + '?w=80&h=80&mode=crop';\r\n    }\r\n    if (size === 2) {\r\n      url = url + '?w=500&h=400&mode=max';\r\n    }\r\n    const qt = quote ? '\"' : '';\r\n    return 'url(' + qt + url + qt + ')';\r\n  }\r\n}\r\n","<!-- dialog -->\r\n<div [ngClass]=\"(open$ | async) ? 'c-ew__container' : 'u-display-none'\">\r\n  <div #backdrop class=\"c-ew__backdrop\" (click)=\"closeDialog()\"></div>\r\n  <div #dialog fxLayout=\"column\" class=\"c-ew__dialog mat-elevation-z24 u-border-radius\">\r\n    <div [ngClass]=\"{ 'c-ew__dialog-header mat-elevation-z2': (open$ | async) }\">\r\n      <mat-card class=\"mat-elevation-z0\" fxLayout=\"row\">\r\n        <button mat-icon-button class=\"back-arrow\" fxLayoutAlign=\"center center\"\r\n          [matTooltip]=\"'Form.Buttons.Return.Tip' | translate\" (click)=\"closeDialog()\">\r\n          <mat-icon>arrow_back</mat-icon>\r\n        </button>\r\n        <span fxLayoutAlign=\"center center\" class=\"title mat-display-1\">{{ label$ | async }}</span>\r\n      </mat-card>\r\n    </div>\r\n    <div>\r\n      <div [@itemShrinkAnimation]=\"(open$ | async) ? 'closed' : 'open'\">\r\n      </div>\r\n      <div\r\n        class=\"c-ew__dialog-content c-ew__dialog-content--empty u-border-radius-bottom u-add-scrollbar u-hide-scrollbar\"\r\n        [@contentExpandAnimation]=\"{\r\n          value: (open$ | async) ? 'expanded' : 'closed',\r\n          params: { bottomPixels: calculateBottomPixels() }\r\n        }\">\r\n        <ng-container #fieldComponent></ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- preview -->\r\n<div class=\"c-ew__preview-holder\" *ngIf=\"{\r\n  value: value$ | async,\r\n  label: label$ | async,\r\n  required: required$ | async,\r\n  invalid: invalid$ | async,\r\n  items: (adamItems$ | async).slice(0, 9),\r\n  itemsNumber: (adamItems$ | async).length,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n  <mat-label class=\"c-ew__preview-label c-ew__color--primary\" [ngClass]=\"{\r\n    'mat-caption' : data.itemsNumber > 0,\r\n    'mat-empty' : data.itemsNumber === 0,\r\n    'mat-error' : data.invalid && !config.field.disabled,\r\n    'color__primary' : !data.invalid && !config.field.disabled,\r\n    'color__label-disabled' : config.field.disabled\r\n  }\">\r\n    {{ data.label }} {{ data.required ? '*': '' }}\r\n  </mat-label>\r\n  <div matRipple class=\"c-ew__preview mat-ripple\" [matRippleAnimation]=\"{ enterDuration: 360 }\" (click)=\"expandDialog()\"\r\n    [ngClass]=\"{\r\n      'c-ew__preview--invalid': data.invalid,\r\n      'c-ew__preview--disabled': config.field.disabled\r\n    }\">\r\n    <div [ngClass]=\"data.value ? 'c-ew__preview-container' : 'c-ew__preview-container--empty'\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"2px\" class=\"c-ew__preview-content\">\r\n        <ng-container *ngFor=\"let item of data.items; trackBy: trackByFn\">\r\n          <!-- folders -->\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start start\" *ngIf=\"item.IsFolder\">\r\n            <div class=\"adam-browse-background-icon\">\r\n              <mat-icon svgIcon=\"folder\"></mat-icon>\r\n              <div class=\"adam-short-label mat-caption\">{{ item.Name }}</div>\r\n            </div>\r\n          </div>\r\n          <!-- files -->\r\n          <div *ngIf=\"!item.IsFolder\">\r\n            <div *ngIf=\"item.Type !== 'image'\" class=\"adam-browse-background-icon\">\r\n              <mat-icon *ngIf=\"item._isMaterialIcon\">{{ item._icon }}</mat-icon>\r\n              <mat-icon *ngIf=\"!item._isMaterialIcon\" [svgIcon]=\"item._icon\"></mat-icon>\r\n              <div class=\"adam-short-label mat-caption\">{{ item.Name }}</div>\r\n            </div>\r\n            <div *ngIf=\"item.Type === 'image'\" class=\"adam-browse-background-image\">\r\n              <img data-dz-thumbnail=\"\" alt=\"{{ item.Id }}:{{ item.Name }}\"\r\n                src=\"{{ item.FullPath }}?w=78&h=78&mode=crop\">\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- hints -->\r\n  <div class=\"mat-caption c-ew__preview-hint\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n    <div class=\"c__helper-wrapper--left\">\r\n      <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n    </div>\r\n    <div class=\"c__helper-wrapper--right c-ew__preview-hint-text\" fxHide fxShow.gt-xs>\r\n      <span>{{ 'Fields.Hyperlink.Default.Sponsor' | translate }}</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, NgZone, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { AdamItem } from '../../../../edit-types';\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { ContentExpandAnimation } from '../../../shared/animations/content-expand-animation';\r\nimport { DropzoneDraggingHelper } from '../../../shared/services/dropzone-dragging.helper';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { EditRoutingService } from '../../../shared/services/edit-routing.service';\r\nimport { BaseComponent } from '../../input-types/base/base.component';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  selector: 'app-hyperlink-library-expandable-wrapper',\r\n  templateUrl: './hyperlink-library-expandable-wrapper.component.html',\r\n  styleUrls: ['./hyperlink-library-expandable-wrapper.component.scss'],\r\n  animations: [ContentExpandAnimation],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n// tslint:disable-next-line:max-line-length\r\nexport class HyperlinkLibraryExpandableWrapperComponent extends BaseComponent<null> implements FieldWrapper, OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n  @ViewChild('backdrop') backdropRef: ElementRef;\r\n  @ViewChild('dialog') dialogRef: ElementRef;\r\n\r\n  open$: Observable<boolean>;\r\n  adamItems$ = new BehaviorSubject<AdamItem[]>([]);\r\n  private dropzoneDraggingHelper: DropzoneDraggingHelper;\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private zone: NgZone,\r\n    private editRoutingService: EditRoutingService,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.open$ = this.editRoutingService.isExpanded(this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dropzoneDraggingHelper = new DropzoneDraggingHelper(this.zone);\r\n    this.dropzoneDraggingHelper.attach(this.backdropRef.nativeElement);\r\n    this.dropzoneDraggingHelper.attach(this.dialogRef.nativeElement);\r\n    this.subscription.add(\r\n      this.config.adam.items$.subscribe(items => {\r\n        this.adamItems$.next(items);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dropzoneDraggingHelper.detach();\r\n    this.adamItems$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  calculateBottomPixels() {\r\n    return window.innerWidth > 600 ? '100px' : '50px';\r\n  }\r\n\r\n  trackByFn(index: number, item: AdamItem) {\r\n    return item.Id;\r\n  }\r\n\r\n  expandDialog() {\r\n    if (this.config.field.disabled) { return; }\r\n    this.editRoutingService.expand(true, this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n\r\n  closeDialog() {\r\n    this.editRoutingService.expand(false, this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n}\r\n","import { ComponentFactoryResolver, ComponentRef, Directive, Input, OnInit, Type, ViewContainerRef } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { InputTypeConstants } from '../../../../ng-dialogs/src/app/content-type-fields/constants/input-type.constants';\r\nimport { angularConsoleLog } from '../../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\nimport { AdamAttachWrapperComponent } from '../../../eav-material-controls/adam/adam-attach-wrapper/adam-attach-wrapper.component';\r\nimport { DropzoneWrapperComponent } from '../../../eav-material-controls/adam/dropzone-wrapper/dropzone-wrapper.component';\r\nimport { BooleanDefaultComponent } from '../../../eav-material-controls/input-types/boolean/boolean-default/boolean-default.component';\r\nimport { BooleanTristateComponent } from '../../../eav-material-controls/input-types/boolean/boolean-tristate/boolean-tristate.component';\r\nimport { CustomDefaultComponent } from '../../../eav-material-controls/input-types/custom/custom-default/custom-default.component';\r\nimport { CustomJsonEditorComponent } from '../../../eav-material-controls/input-types/custom/custom-json-editor/custom-json-editor.component';\r\nimport { ExternalWebComponentComponent } from '../../../eav-material-controls/input-types/custom/external-web-component/external-web-component.component';\r\nimport { DatetimeDefaultComponent } from '../../../eav-material-controls/input-types/datetime/datetime-default/datetime-default.component';\r\nimport { EmptyDefaultComponent } from '../../../eav-material-controls/input-types/empty/empty-default/empty-default.component';\r\nimport { EntityContentBlockComponent } from '../../../eav-material-controls/input-types/entity/entity-content-blocks/entity-content-blocks.component';\r\nimport { EntityDefaultComponent } from '../../../eav-material-controls/input-types/entity/entity-default/entity-default.component';\r\nimport { EntityQueryComponent } from '../../../eav-material-controls/input-types/entity/entity-query/entity-query.component';\r\nimport { HyperlinkDefaultComponent } from '../../../eav-material-controls/input-types/hyperlink/hyperlink-default/hyperlink-default.component';\r\nimport { HyperlinkLibraryComponent } from '../../../eav-material-controls/input-types/hyperlink/hyperlink-library/hyperlink-library.component';\r\nimport { NumberDefaultComponent } from '../../../eav-material-controls/input-types/number/number-default/number-default.component';\r\nimport { StringDefaultComponent } from '../../../eav-material-controls/input-types/string/string-default/string-default.component';\r\nimport { StringDropdownQueryComponent } from '../../../eav-material-controls/input-types/string/string-dropdown-query/string-dropdown-query.component';\r\nimport { StringDropdownComponent } from '../../../eav-material-controls/input-types/string/string-dropdown/string-dropdown.component';\r\nimport { StringFontIconPickerComponent } from '../../../eav-material-controls/input-types/string/string-font-icon-picker/string-font-icon-picker.component';\r\nimport { StringTemplatePickerComponent } from '../../../eav-material-controls/input-types/string/string-template-picker/string-template-picker.component';\r\nimport { StringUrlPathComponent } from '../../../eav-material-controls/input-types/string/string-url-path/string-url-path.component';\r\nimport { CollapsibleWrapperComponent } from '../../../eav-material-controls/wrappers';\r\nimport { CollapsibleFieldWrapperComponent } from '../../../eav-material-controls/wrappers/collapsible-field-wrapper/collapsible-field-wrapper.component';\r\nimport { EavLocalizationComponent } from '../../../eav-material-controls/wrappers/eav-localization-wrapper/eav-localization-wrapper.component';\r\nimport { EntityExpandableWrapperComponent } from '../../../eav-material-controls/wrappers/entity-expandable-wrapper/entity-expandable-wrapper.component';\r\nimport { ExpandableWrapperComponent } from '../../../eav-material-controls/wrappers/expandable-wrapper/expandable-wrapper.component';\r\nimport { HiddenWrapperComponent } from '../../../eav-material-controls/wrappers/hidden-wrapper/hidden-wrapper.component';\r\nimport { HyperlinkDefaultExpandableWrapperComponent } from '../../../eav-material-controls/wrappers/hyperlink-default-expandable-wrapper/hyperlink-default-expandable-wrapper.component';\r\nimport { HyperlinkLibraryExpandableWrapperComponent } from '../../../eav-material-controls/wrappers/hyperlink-library-expandable-wrapper/hyperlink-library-expandable-wrapper.component';\r\nimport { FieldConfigGroup, FieldConfigSet } from '../../model/field-config';\r\nimport { FieldWrapper } from '../../model/field-wrapper';\r\n\r\n@Directive({ selector: '[appEavField]' })\r\nexport class EavFieldDirective implements OnInit {\r\n  @Input() private config: FieldConfigSet[];\r\n  @Input() private group: FormGroup;\r\n\r\n  private components: { [key: string]: Type<any> } = {\r\n    'app-adam-attach-wrapper': AdamAttachWrapperComponent,\r\n    'app-collapsible-field-wrapper': CollapsibleFieldWrapperComponent,\r\n    'app-collapsible-wrapper': CollapsibleWrapperComponent,\r\n    'app-dropzone-wrapper': DropzoneWrapperComponent,\r\n    'app-eav-localization-wrapper': EavLocalizationComponent,\r\n    'app-entity-expandable-wrapper': EntityExpandableWrapperComponent,\r\n    'app-expandable-wrapper': ExpandableWrapperComponent,\r\n    'app-hidden-wrapper': HiddenWrapperComponent,\r\n    'app-hyperlink-default-expandable-wrapper': HyperlinkDefaultExpandableWrapperComponent,\r\n    'app-hyperlink-library-expandable-wrapper': HyperlinkLibraryExpandableWrapperComponent,\r\n    'boolean-default': BooleanDefaultComponent,\r\n    'boolean-tristate': BooleanTristateComponent,\r\n    'custom-default': CustomDefaultComponent,\r\n    'custom-json-editor': CustomJsonEditorComponent,\r\n    'datetime-default': DatetimeDefaultComponent,\r\n    'empty-default': EmptyDefaultComponent,\r\n    'entity-content-blocks': EntityContentBlockComponent,\r\n    'entity-default': EntityDefaultComponent,\r\n    'entity-query': EntityQueryComponent,\r\n    'external-web-component': ExternalWebComponentComponent,\r\n    'hyperlink-default': HyperlinkDefaultComponent,\r\n    'hyperlink-library': HyperlinkLibraryComponent,\r\n    'number-default': NumberDefaultComponent,\r\n    'string-default': StringDefaultComponent,\r\n    'string-dropdown': StringDropdownComponent,\r\n    'string-dropdown-query': StringDropdownQueryComponent,\r\n    'string-font-icon-picker': StringFontIconPickerComponent,\r\n    'string-template-picker': StringTemplatePickerComponent,\r\n    'string-url-path': StringUrlPathComponent,\r\n  };\r\n\r\n  constructor(private resolver: ComponentFactoryResolver, private container: ViewContainerRef) { }\r\n\r\n  ngOnInit() {\r\n    // Clear container\r\n    this.container.clear();\r\n\r\n    this.config.forEach(controlConfiguration => {\r\n      angularConsoleLog('create controlConfiguration', controlConfiguration);\r\n      this.createFieldOrGroup(this.container, controlConfiguration);\r\n    });\r\n  }\r\n\r\n  /** Create all child fields and groups from fieldConfig in container */\r\n  private createFieldOrGroup(container: ViewContainerRef, fieldConfig: FieldConfigSet) {\r\n    const field = fieldConfig.field as FieldConfigGroup;\r\n    if (field.fieldGroup) {\r\n      this.createGroupComponents(container, fieldConfig);\r\n    } else {\r\n      angularConsoleLog('create createFieldOrGroup:', fieldConfig.field.inputType);\r\n      this.createComponent(container, fieldConfig);\r\n    }\r\n  }\r\n\r\n  /** Create group components with group wrappers in container */\r\n  private createGroupComponents(container: ViewContainerRef, fieldConfig: FieldConfigSet) {\r\n    if (fieldConfig.field.wrappers) {\r\n      container = this.createComponentWrappers(container, fieldConfig, fieldConfig.field.wrappers);\r\n    }\r\n    const field = fieldConfig.field as FieldConfigGroup;\r\n    field.fieldGroup.forEach(controlConfiguration => {\r\n      this.createFieldOrGroup(container, controlConfiguration);\r\n    });\r\n  }\r\n\r\n  /** Create component and component wrappers if component exist */\r\n  private createComponent(container: ViewContainerRef, fieldConfig: FieldConfigSet): ComponentRef<any> {\r\n    if (fieldConfig.field.wrappers) {\r\n      container = this.createComponentWrappers(container, fieldConfig, fieldConfig.field.wrappers);\r\n    }\r\n    angularConsoleLog('EavFieldDirective createComponent inputType:', fieldConfig.field.inputType);\r\n    let componentType: Type<any>;\r\n    if (fieldConfig.field.isExternal) {\r\n      componentType = this.readComponentType(InputTypeConstants.ExternalWebComponent);\r\n    } else {\r\n      componentType = this.readComponentType(fieldConfig.field.inputType);\r\n    }\r\n\r\n    // if inputTypeAnnotations of componentType exist then create component\r\n    const inputTypeAnnotations = Reflect.getMetadata('inputTypeAnnotations', componentType);\r\n    if (inputTypeAnnotations) {\r\n      if (inputTypeAnnotations.wrapper) {\r\n        container = this.createComponentWrappers(container, fieldConfig, inputTypeAnnotations.wrapper);\r\n      }\r\n\r\n      const factory = this.resolver.resolveComponentFactory(componentType);\r\n      const ref = container.createComponent(factory);\r\n\r\n      Object.assign(ref.instance, {\r\n        group: this.group,\r\n        config: fieldConfig\r\n      });\r\n\r\n      return ref;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /** Read component type by selector with ComponentFactoryResolver */\r\n  private readComponentType(selector: string): Type<any> {\r\n    // const factories = Array.from((this.resolver as any)._factories.values());\r\n    // const componentType = (factories.find((x: any) => x.selector === selector) as any).componentType;\r\n    const componentType = this.components[selector];\r\n    if (componentType === undefined) {\r\n      console.error(`Missing component class for: ${selector}`);\r\n      return CustomDefaultComponent;\r\n    }\r\n    return componentType;\r\n  }\r\n\r\n  /** Create wrappers in container */\r\n  private createComponentWrappers(container: ViewContainerRef, fieldConfig: FieldConfigSet, wrappers: string[]): ViewContainerRef {\r\n    wrappers.forEach(wrapperName => {\r\n      container = this.createWrapper(container, fieldConfig, wrapperName);\r\n    });\r\n    return container;\r\n  }\r\n\r\n  /** Create wrapper in container */\r\n  private createWrapper(container: ViewContainerRef, fieldConfig: FieldConfigSet, wrapper: string): ViewContainerRef {\r\n    const componentType = this.readComponentType(wrapper);\r\n\r\n    // create component from component type\r\n    const componentFactory = this.resolver.resolveComponentFactory(componentType);\r\n    const ref: ComponentRef<FieldWrapper> = container.createComponent(componentFactory);\r\n\r\n    Object.assign(ref.instance, {\r\n      group: this.group, // this only need if we have form groups\r\n      config: fieldConfig\r\n    });\r\n\r\n    return ref.instance.fieldComponent;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { angularConsoleLog } from '../../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\nimport { FieldConfigGroup, FieldConfigSet } from '../../model/field-config';\r\n\r\n@Component({\r\n  selector: 'app-eav-form',\r\n  templateUrl: './eav-form.component.html',\r\n  styleUrls: ['./eav-form.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EavFormComponent implements OnInit, OnDestroy {\r\n  @Input() config: FieldConfigSet[] = [];\r\n  @Output() private formSubmit = new EventEmitter<void>();\r\n  @Output() private formValueChange = new EventEmitter<any>();\r\n\r\n  form: FormGroup = new FormGroup({});\r\n  private subscription = new Subscription();\r\n\r\n  constructor(private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.createControlsInFormGroup(this.config);\r\n\r\n    this.subscription.add(\r\n      this.form.valueChanges.subscribe(val => {\r\n        this.formValueChange.emit(val);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  submitOutside() {\r\n    angularConsoleLog('form save');\r\n    // Use this to emit value out\r\n    this.formSubmit.emit();\r\n  }\r\n\r\n  /**\r\n   * Patch values to formGroup. It accepts an object with control names as keys and will do it's best to\r\n   * match the values to the correct controls in the group.\r\n   * If emitEvent is true, this change will cause a valueChanges event on the FormGroup to be emitted.\r\n   * This defaults to true (as it falls through to updateValueAndValidity)\r\n   */\r\n  patchValue(values: { [key: string]: any }, emitEvent: boolean) {\r\n    this.form.patchValue(values, { emitEvent });\r\n  }\r\n\r\n  /** Check if value in form changed */\r\n  valueIsChanged(values: { [key: string]: any }) {\r\n    let valueIsChanged = false;\r\n\r\n    const valueKeys = Object.keys(values);\r\n    for (const valueKey of valueKeys) {\r\n      if (values[valueKey] !== this.form.value[valueKey]) {\r\n        valueIsChanged = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    // spm isn't this always true? Something could be wrong here\r\n    angularConsoleLog('VALUECHANGED:', valueIsChanged, 'VALUES:', values, 'FORM VALUES:', this.form.value);\r\n    return valueIsChanged;\r\n  }\r\n\r\n  /** Create form from configuration */\r\n  private createControlsInFormGroup(fieldConfigArray: FieldConfigSet[]) {\r\n    try {\r\n      fieldConfigArray.forEach(fieldConfig => {\r\n        const field = fieldConfig.field as FieldConfigGroup;\r\n        if (field.fieldGroup) {\r\n          this.createControlsInFormGroup(field.fieldGroup);\r\n        } else {\r\n          this.form.addControl(fieldConfig.field.name, this.createControl(fieldConfig));\r\n        }\r\n      });\r\n      return this.form;\r\n    } catch (error) {\r\n      console.error(`Error creating form controls: ${error}\\nFieldConfig: ${fieldConfigArray}`);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /** Create form control */\r\n  private createControl(config: FieldConfigSet) {\r\n    try {\r\n      const { disabled, validation, initialValue } = config.field;\r\n      return this.formBuilder.control({ disabled, value: initialValue }, validation);\r\n    } catch (error) {\r\n      console.error(`Error creating form control: ${error}\\nConfig: ${config}`);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n}\r\n","<form class=\"dynamic-form\" [formGroup]=\"form\">\r\n  <ng-container appEavField [config]=\"config\" [group]=\"form\">\r\n  </ng-container>\r\n</form>\r\n","<div *ngIf=\"contentType$ | async\">\r\n  <app-eav-form [config]=\"itemFields$ | async\" (formSubmit)=\"submit()\" (formValueChange)=\"formValueChange($event)\">\r\n  </app-eav-form>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport { Action } from '@ngrx/store';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { EavFormComponent } from '../../eav-dynamic-form/components/eav-form/eav-form.component';\r\nimport { FieldConfigSet } from '../../eav-dynamic-form/model/field-config';\r\nimport { InputFieldHelper } from '../../shared/helpers/input-field-helper';\r\nimport { LocalizationHelper } from '../../shared/helpers/localization-helper';\r\nimport { ContentType, Item } from '../../shared/models/eav';\r\nimport { EavService } from '../../shared/services/eav.service';\r\nimport * as fromItems from '../../shared/store/actions/item.actions';\r\nimport { ContentTypeService } from '../../shared/store/ngrx-data/content-type.service';\r\nimport { ItemService } from '../../shared/store/ngrx-data/item.service';\r\nimport { LanguageInstanceService } from '../../shared/store/ngrx-data/language-instance.service';\r\nimport { BuildFieldsService } from './build-fields.service';\r\n\r\n@Component({\r\n  selector: 'app-item-edit-form',\r\n  templateUrl: './item-edit-form.component.html',\r\n  styleUrls: ['./item-edit-form.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ItemEditFormComponent implements OnInit, OnDestroy, OnChanges {\r\n  @ViewChild(EavFormComponent) form: EavFormComponent;\r\n  @Input() item: Item;\r\n  @Input() private formId: number;\r\n  @Output() private itemFormValueChange = new EventEmitter<void>();\r\n\r\n  contentType$: Observable<ContentType>;\r\n  itemFields$: Observable<FieldConfigSet[]>;\r\n  currentLanguage: string;\r\n\r\n  private defaultLanguage: string;\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private languageInstanceService: LanguageInstanceService,\r\n    private itemService: ItemService,\r\n    private contentTypeService: ContentTypeService,\r\n    private eavService: EavService,\r\n    private actions$: Actions,\r\n    private buildFieldsService: BuildFieldsService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.languageInstanceService.getDefaultLanguage(this.formId).subscribe(defaultLang => {\r\n        this.defaultLanguage = defaultLang;\r\n      })\r\n    );\r\n\r\n    this.subscription.add(\r\n      this.languageInstanceService.getCurrentLanguage(this.formId).subscribe(currentLang => {\r\n        this.currentLanguage = currentLang;\r\n        this.setFormValues();\r\n      })\r\n    );\r\n\r\n    // create input fields from content type\r\n    const contentTypeId = InputFieldHelper.getContentTypeId(this.item);\r\n    this.contentType$ = this.contentTypeService.getContentTypeById(contentTypeId);\r\n    this.itemFields$ = this.buildFieldsService.buildFields(\r\n      this.contentType$,\r\n      this.item,\r\n      this.formId,\r\n      this.currentLanguage,\r\n      this.defaultLanguage,\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.item != null) {\r\n      this.setFormValues();\r\n    }\r\n  }\r\n\r\n  /** Observe is item form is saved */\r\n  formSaveObservable() {\r\n    return this.actions$.pipe(\r\n      ofType(fromItems.SAVE_ITEM_ATTRIBUTES_VALUES),\r\n      filter((action: fromItems.SaveItemAttributesValuesAction) =>\r\n        this.item.entity.id === 0 ? this.item.entity.guid === action.item.entity.guid : this.item.entity.id === action.item.entity.id\r\n      ),\r\n    ) as Observable<Action>;\r\n  }\r\n\r\n  /**\r\n   * Update NGRX/store on form value change\r\n   * @param values key:value list of fields from form\r\n   */\r\n  formValueChange(values: { [key: string]: any }) {\r\n    this.itemService.updateItemAttributesValues(\r\n      this.item.entity.id,\r\n      values,\r\n      this.currentLanguage,\r\n      this.defaultLanguage,\r\n      this.item.entity.guid,\r\n    );\r\n\r\n    this.itemFormValueChange.emit();\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.form.valid || this.checkAreAllControlsDisabled() || (this.item.header.Group && this.item.header.Group.SlotCanBeEmpty)) {\r\n      this.eavService.saveItem(this.item);\r\n    }\r\n  }\r\n\r\n  checkAreAllControlsDisabled() {\r\n    let allDisabled = true;\r\n    const controlKeys = Object.keys(this.form.form.controls);\r\n    for (const key of controlKeys) {\r\n      if (!this.form.form.controls[key].disabled) {\r\n        allDisabled = false;\r\n        break;\r\n      }\r\n    }\r\n    return allDisabled;\r\n  }\r\n\r\n  private setFormValues() {\r\n    if (!this.form) { return; }\r\n\r\n    const formValues: { [name: string]: any } = {};\r\n    Object.keys(this.item.entity.attributes).forEach(attributeKey => {\r\n      formValues[attributeKey] = LocalizationHelper.translate(\r\n        this.currentLanguage,\r\n        this.defaultLanguage,\r\n        this.item.entity.attributes[attributeKey],\r\n        null,\r\n      );\r\n    });\r\n\r\n    // spm true only on language change?\r\n    if (this.form.valueIsChanged(formValues)) {\r\n      // set new values to form\r\n      this.form.patchValue(formValues, false);\r\n    }\r\n    // important to be after patchValue\r\n    this.eavService.formValueChange$.next({\r\n      formId: this.formId,\r\n      entityGuid: this.item.entity.guid,\r\n      entityValues: formValues,\r\n    });\r\n  }\r\n\r\n}\r\n","export type PublishMode = 'branch' | 'show' | 'hide';\r\n\r\nexport class PublishModeConstants {\r\n  public static readonly Show = 'show';\r\n  public static readonly Hide = 'hide';\r\n  public static readonly Branch = 'branch';\r\n}\r\n","import { ActivatedRoute } from '@angular/router';\r\nimport { Language } from '../../shared/models/eav';\r\n\r\nexport function calculateIsParentDialog(route: ActivatedRoute) {\r\n  let editDialogCount = 0;\r\n  for (const path of route.snapshot.pathFromRoot) {\r\n    if (path.url.length <= 0) { continue; }\r\n    for (const urlSegment of path.url) {\r\n      if (urlSegment.path !== 'edit') { continue; }\r\n      editDialogCount++;\r\n    }\r\n  }\r\n  return editDialogCount === 1;\r\n}\r\n\r\nexport function sortLanguages(primaryLangKey: string, languages: Language[]) {\r\n  if (languages.length === 0) { return languages; }\r\n\r\n  let primaryLang: Language;\r\n  const sameLangs: Language[] = [];\r\n  const otherLangs: Language[] = [];\r\n  for (const language of languages) {\r\n    if (language.key === primaryLangKey) {\r\n      primaryLang = language;\r\n    } else if (language.key.startsWith(primaryLangKey.split('-')[0])) {\r\n      sameLangs.push(language);\r\n    } else {\r\n      otherLangs.push(language);\r\n    }\r\n  }\r\n  sameLangs.sort(alphabetCompare);\r\n  otherLangs.sort(alphabetCompare);\r\n\r\n  if (!primaryLang) {\r\n    return [...sameLangs, ...otherLangs];\r\n  } else {\r\n    return [primaryLang, ...sameLangs, ...otherLangs];\r\n  }\r\n}\r\n\r\nfunction alphabetCompare(a: Language, b: Language) {\r\n  if (a.key < b.key) { return -1; }\r\n  if (a.key > b.key) { return 1; }\r\n  return 0;\r\n}\r\n","import { ChangeDetectionStrategy, Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { PublishMode, PublishModeConstants } from '../../../eav-item-dialog/multi-item-edit-form/multi-item-edit-form.constants';\r\n\r\n@Component({\r\n  selector: 'app-save-status-dialog',\r\n  templateUrl: './save-status-dialog.component.html',\r\n  styleUrls: ['./save-status-dialog.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SaveStatusDialogComponent implements OnInit {\r\n  publishMode: PublishMode;\r\n  Modes = PublishModeConstants;\r\n\r\n  constructor(private dialogRef: MatDialogRef<SaveStatusDialogComponent>, @Inject(MAT_DIALOG_DATA) private data: PublishMode) { }\r\n\r\n  ngOnInit() {\r\n    this.publishMode = this.data;\r\n  }\r\n\r\n  setMode(mode: PublishMode) {\r\n    this.dialogRef.close(mode);\r\n  }\r\n}\r\n","<mat-card>\r\n  <div class=\"mat-card__header\">\r\n    <div class=\"mat-card__title\">{{ 'SaveMode.Dialog.Title' | translate }}</div>\r\n    <div class=\"mat-card__description\">{{ 'SaveMode.Dialog.Intro' | translate }}</div>\r\n  </div>\r\n\r\n  <mat-nav-list toggle>\r\n\r\n    <mat-list-item (click)=\"setMode(Modes.Show)\" [ngClass]=\"{ 'mat-list-item-focus': publishMode === Modes.Show }\">\r\n      <mat-icon matListIcon color=\"accent\">visibility</mat-icon>\r\n      <div matLine class=\"mat-list-item__title\">{{ 'SaveMode.Dialog.Show.Title' | translate }}</div>\r\n      <div matLine class=\"mat-list-item__body\">{{ 'SaveMode.Dialog.Show.Body' | translate }}</div>\r\n    </mat-list-item>\r\n\r\n    <mat-list-item (click)=\"setMode(Modes.Hide)\" [ngClass]=\"{ 'mat-list-item-focus': publishMode === Modes.Hide }\">\r\n      <mat-icon matListIcon color=\"accent\">visibility_off</mat-icon>\r\n      <div matLine class=\"mat-list-item__title\">{{ 'SaveMode.Dialog.Hide.Title' | translate }}</div>\r\n      <div matLine class=\"mat-list-item__body\">{{ 'SaveMode.Dialog.Hide.Body' | translate }}</div>\r\n    </mat-list-item>\r\n\r\n    <mat-list-item (click)=\"setMode(Modes.Branch)\" [ngClass]=\"{ 'mat-list-item-focus': publishMode === Modes.Branch }\">\r\n      <mat-icon matListIcon color=\"accent\" svgIcon=\"draft-branch\"></mat-icon>\r\n      <div matLine class=\"mat-list-item__title\">{{ 'SaveMode.Dialog.Branch.Title' | translate }}</div>\r\n      <div matLine class=\"mat-list-item__body\">{{ 'SaveMode.Dialog.Branch.Body' | translate }}</div>\r\n    </mat-list-item>\r\n\r\n  </mat-nav-list>\r\n</mat-card>\r\n","import { NgZone } from '@angular/core';\r\nimport { ElementEventListener } from '../../../../../shared/element-event-listener.model';\r\n\r\nexport class CenterSelectedHelper {\r\n  private positionX: number;\r\n  private positionY: number;\r\n  private moveThreshold = 2; // Pixels for which header can be scrolled while clicking to still register as click\r\n  private stopClick = false;\r\n  private eventListeners: ElementEventListener[] = [];\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private header: HTMLElement,\r\n  ) {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      const checkIfMouseMoved = this.checkIfMouseMoved.bind(this);\r\n      document.addEventListener('mouseup', checkIfMouseMoved, { passive: true });\r\n      this.eventListeners.push({ element: document, type: 'mouseup', listener: checkIfMouseMoved });\r\n    });\r\n  }\r\n\r\n  lngButtonDown(event: MouseEvent) {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.saveInitialPosition(event);\r\n    });\r\n  }\r\n\r\n  lngButtonClick(event: MouseEvent) {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.doMove(event);\r\n    });\r\n  }\r\n\r\n  stopClickIfMouseMoved() {\r\n    return this.stopClick;\r\n  }\r\n\r\n  destroy() {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.eventListeners.forEach(evList => {\r\n        evList.element.removeEventListener(evList.type, evList.listener);\r\n        evList = null;\r\n      });\r\n      this.eventListeners = null;\r\n    });\r\n  }\r\n\r\n  private saveInitialPosition(event: MouseEvent) {\r\n    this.stopClick = false;\r\n    this.positionX = event.pageX;\r\n    this.positionY = event.pageY;\r\n  }\r\n\r\n  private checkIfMouseMoved(event: MouseEvent) {\r\n    if (!this.positionX || !this.positionY) {\r\n      this.stopClick = false;\r\n      return;\r\n    }\r\n    const newPositionX = event.pageX;\r\n    const newPositionY = event.pageY;\r\n\r\n    const newTotal = newPositionX + newPositionY;\r\n    const oldTotal = this.positionX + this.positionY;\r\n\r\n    this.stopClick = Math.abs(oldTotal - newTotal) > this.moveThreshold;\r\n    this.positionX = null;\r\n    this.positionY = null;\r\n  }\r\n\r\n  private doMove(event: MouseEvent) {\r\n    if (this.stopClick) { return; }\r\n\r\n    const button = event.target as HTMLButtonElement;\r\n    const buttonOffset = button.getBoundingClientRect().left;\r\n    const buttonWidth = button.getBoundingClientRect().width;\r\n    const headerOffset = this.header.getBoundingClientRect().left;\r\n    const headerWidth = this.header.getBoundingClientRect().width;\r\n\r\n    const currentPosition = buttonOffset + buttonWidth / 2;\r\n    const moveTo = headerOffset + headerWidth / 2;\r\n\r\n    this.header.scrollLeft += currentPosition - moveTo;\r\n  }\r\n}\r\n","import { Language } from '../../../../shared/models/eav';\r\n\r\nexport interface LanguageButton extends Language {\r\n  buttonText: string;\r\n}\r\n\r\n/** Calculates properties of language buttons, e.g. name to be desplayed */\r\nexport function calculateLanguageButtons(languages: Language[]): LanguageButton[] {\r\n  const languageButtons: LanguageButton[] = [];\r\n  const regionlessNamesCount: { [key: string]: number } = {};\r\n\r\n  // count the number of repetitions of the same language without region key\r\n  // e.g. English (United States) and English (Australia) are both English\r\n  languages.forEach(language => {\r\n    const regionlessName = removeRegionName(language.name);\r\n    if (regionlessNamesCount[regionlessName]) {\r\n      regionlessNamesCount[regionlessName]++;\r\n    } else {\r\n      regionlessNamesCount[regionlessName] = 1;\r\n    }\r\n  });\r\n\r\n  // if language repeats, append language key to name which will be displayed\r\n  languages.forEach(language => {\r\n    const regionlessName = removeRegionName(language.name);\r\n\r\n    languageButtons.push({\r\n      name: language.name,\r\n      key: language.key,\r\n      buttonText: (regionlessNamesCount[regionlessName] > 1) ? `${regionlessName} (${language.key})` : regionlessName,\r\n    });\r\n  });\r\n\r\n  return languageButtons;\r\n}\r\n\r\n/** Returns name without region, e.g. ENGLISH from English (United Stated) */\r\nfunction removeRegionName(languageName: string): string {\r\n  return languageName.substring(0, languageName.indexOf('(') > 0 ? languageName.indexOf('(') - 1 : 100).toLocaleUpperCase();\r\n}\r\n","import { NgZone } from '@angular/core';\r\nimport { ElementEventListener } from '../../../../../shared/element-event-listener.model';\r\n\r\nexport class MouseScrollHelper {\r\n  private oldScrollBehavior: string;\r\n  private positionX: number;\r\n  private headerDownListener: ElementEventListener;\r\n  private eventListeners: ElementEventListener[] = [];\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private header: HTMLElement,\r\n    private areButtonsDisabled: () => boolean\r\n  ) {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      const registerScroll = this.registerScroll.bind(this);\r\n      this.header.addEventListener('pointerdown', registerScroll, { passive: true });\r\n      this.headerDownListener = { element: this.header, type: 'pointerdown', listener: registerScroll };\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.headerDownListener.element.removeEventListener(this.headerDownListener.type, this.headerDownListener.listener);\r\n      this.headerDownListener = null;\r\n      this.eventListeners.forEach(evList => {\r\n        evList.element.removeEventListener(evList.type, evList.listener);\r\n        evList = null;\r\n      });\r\n      this.eventListeners = null;\r\n    });\r\n    this.ngZone = null;\r\n    this.header = null;\r\n    this.areButtonsDisabled = null;\r\n  }\r\n\r\n  private registerScroll(event: MouseEvent) {\r\n    const disabled = this.areButtonsDisabled();\r\n    if (disabled || event.button !== 0) { return; }\r\n\r\n    window.getSelection().removeAllRanges();\r\n    this.oldScrollBehavior = getComputedStyle(this.header).getPropertyValue('scroll-behavior');\r\n\r\n    this.header.style.scrollBehavior = 'auto';\r\n    this.positionX = event.pageX;\r\n\r\n    const doScroll = this.doScroll.bind(this);\r\n    const removeScroll = this.removeScroll.bind(this);\r\n    document.addEventListener('pointermove', doScroll, { passive: true });\r\n    document.addEventListener('pointerup', removeScroll, { passive: true });\r\n    document.addEventListener('pointerleave', removeScroll, { passive: true });\r\n    this.eventListeners.push(\r\n      { element: document, type: 'pointermove', listener: doScroll },\r\n      { element: document, type: 'pointerup', listener: removeScroll },\r\n      { element: document, type: 'pointerleave', listener: removeScroll },\r\n    );\r\n  }\r\n\r\n  private removeScroll() {\r\n    this.header.style.scrollBehavior = this.oldScrollBehavior;\r\n\r\n    this.eventListeners.forEach(evList => {\r\n      evList.element.removeEventListener(evList.type, evList.listener);\r\n      evList = null;\r\n    });\r\n    this.eventListeners.splice(0, this.eventListeners.length);\r\n  }\r\n\r\n  private doScroll(event: MouseEvent) {\r\n    const newPositionX = event.pageX;\r\n    if (newPositionX < this.positionX) {\r\n      this.header.scrollLeft += this.positionX - newPositionX;\r\n    } else if (newPositionX > this.positionX) {\r\n      this.header.scrollLeft += -(newPositionX - this.positionX);\r\n    }\r\n    this.positionX = newPositionX;\r\n  }\r\n}\r\n","import { NgZone } from '@angular/core';\r\nimport { ElementEventListener } from '../../../../../shared/element-event-listener.model';\r\n\r\nexport class ShowShadowsHelper {\r\n  private maxScrollLeft: number;\r\n  private hidden = 'hidden'; // CSS class which hides shadows\r\n  private eventListeners: ElementEventListener[] = [];\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private header: HTMLElement,\r\n    private leftShadow: HTMLElement,\r\n    private rightShadow: HTMLElement,\r\n  ) {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.calculateShadows();\r\n\r\n      const calculateShadows = this.calculateShadows.bind(this);\r\n      this.header.addEventListener('scroll', calculateShadows, { passive: true });\r\n      window.addEventListener('resize', calculateShadows, { passive: true });\r\n      this.eventListeners.push(\r\n        { element: this.header, type: 'scroll', listener: calculateShadows },\r\n        { element: window, type: 'resize', listener: calculateShadows },\r\n      );\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.eventListeners.forEach(evList => {\r\n        evList.element.removeEventListener(evList.type, evList.listener);\r\n        evList = null;\r\n      });\r\n      this.eventListeners = null;\r\n    });\r\n    this.ngZone = null;\r\n    this.header = null;\r\n    this.leftShadow = null;\r\n    this.rightShadow = null;\r\n  }\r\n\r\n  private calculateShadows() {\r\n    this.maxScrollLeft = this.header.scrollWidth - this.header.clientWidth;\r\n\r\n    if (this.maxScrollLeft === 0) {\r\n      this.hideBoth();\r\n    } else if (this.header.scrollLeft === 0) {\r\n      this.hideLeft();\r\n    } else if (this.header.scrollLeft === this.maxScrollLeft) {\r\n      this.hideRight();\r\n    } else {\r\n      this.showBoth();\r\n    }\r\n  }\r\n\r\n  private hideBoth() {\r\n    this.leftShadow.classList.add(this.hidden);\r\n    this.rightShadow.classList.add(this.hidden);\r\n  }\r\n\r\n  private hideLeft() {\r\n    this.leftShadow.classList.add(this.hidden);\r\n    this.rightShadow.classList.remove(this.hidden);\r\n  }\r\n\r\n  private hideRight() {\r\n    this.leftShadow.classList.remove(this.hidden);\r\n    this.rightShadow.classList.add(this.hidden);\r\n  }\r\n\r\n  private showBoth() {\r\n    this.leftShadow.classList.remove(this.hidden);\r\n    this.rightShadow.classList.remove(this.hidden);\r\n  }\r\n}\r\n","<div class=\"scrollable__overlay\" *ngIf=\"{\r\n  currentLanguage: currentLanguage$ | async\r\n} as data\">\r\n  <div #leftShadow class=\"scrollable__overlay--left-shadow\"></div>\r\n  <div #rightShadow class=\"scrollable__overlay--right-shadow\"></div>\r\n  <div #scrollable class=\"scrollable lang-switch\" [matTooltip]=\"'Message.CantSwitchLanguage' | translate\"\r\n    [matTooltipDisabled]=\"!disabled\">\r\n    <button mat-flat-button class=\"lang-switch__button\" *ngFor=\"let langButton of (languageButtons$ | async)\"\r\n      [disabled]=\"disabled && data.currentLanguage !== langButton.key\"\r\n      [color]=\"data.currentLanguage === langButton.key ? 'accent' : 'white'\" (mousedown)=\"lngButtonMouseDown($event)\"\r\n      (click)=\"lngButtonClick($event, langButton)\" [matTooltip]=\"langButton.name\" [matTooltipDisabled]=\"disabled\">\r\n      {{ langButton.buttonText }}\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, Input, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Language } from '../../../shared/models/eav';\r\nimport { LanguageInstanceService } from '../../../shared/store/ngrx-data/language-instance.service';\r\nimport { LanguageService } from '../../../shared/store/ngrx-data/language.service';\r\nimport { CenterSelectedHelper } from './eav-language-switcher-services/center-selected-helper';\r\nimport { calculateLanguageButtons, LanguageButton } from './eav-language-switcher-services/eav-language-switcher.helpers';\r\nimport { MouseScrollHelper } from './eav-language-switcher-services/mouse-scroll-helper';\r\nimport { ShowShadowsHelper } from './eav-language-switcher-services/show-shadows-helper';\r\n\r\n@Component({\r\n  selector: 'app-eav-language-switcher',\r\n  templateUrl: './eav-language-switcher.component.html',\r\n  styleUrls: ['./eav-language-switcher.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EavLanguageSwitcherComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('scrollable') private headerRef: ElementRef;\r\n  @ViewChild('leftShadow') private leftShadowRef: ElementRef;\r\n  @ViewChild('rightShadow') private rightShadowRef: ElementRef;\r\n  @Input() private formId: number;\r\n  @Input() disabled: boolean;\r\n\r\n  languageButtons$: Observable<LanguageButton[]>;\r\n  currentLanguage$: Observable<string>;\r\n\r\n  private centerSelectedService: CenterSelectedHelper;\r\n  private mouseScrollHelper: MouseScrollHelper;\r\n  private showShadowsService: ShowShadowsHelper;\r\n\r\n  constructor(\r\n    private languageService: LanguageService,\r\n    private languageInstanceService: LanguageInstanceService,\r\n    private ngZone: NgZone,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.languageButtons$ = this.languageService.entities$.pipe(map(langs => calculateLanguageButtons(langs)));\r\n    this.currentLanguage$ = this.languageInstanceService.getCurrentLanguage(this.formId);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.showShadowsService = new ShowShadowsHelper(this.ngZone, this.headerRef.nativeElement,\r\n      this.leftShadowRef.nativeElement, this.rightShadowRef.nativeElement);\r\n    this.mouseScrollHelper = new MouseScrollHelper(this.ngZone, this.headerRef.nativeElement, this.areButtonsDisabled.bind(this));\r\n    this.centerSelectedService = new CenterSelectedHelper(this.ngZone, this.headerRef.nativeElement);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.centerSelectedService.destroy();\r\n    this.mouseScrollHelper.destroy();\r\n    this.showShadowsService.destroy();\r\n  }\r\n\r\n  lngButtonMouseDown(event: MouseEvent) {\r\n    this.centerSelectedService.lngButtonDown(event);\r\n  }\r\n\r\n  lngButtonClick(event: MouseEvent, language: Language) {\r\n    if (this.disabled) { return; }\r\n    this.centerSelectedService.lngButtonClick(event);\r\n\r\n    if (!this.centerSelectedService.stopClickIfMouseMoved()) {\r\n      this.languageInstanceService.updateCurrentLanguage(this.formId, language.key);\r\n    }\r\n  }\r\n\r\n  private areButtonsDisabled() {\r\n    return this.disabled;\r\n  }\r\n}\r\n","<mat-card class=\"header\">\r\n  <button mat-icon-button class=\"header__exit-button\" (click)=\"close()\"\r\n    [matTooltip]=\"(isParentDialog ? 'Form.Buttons.Exit.Tip' : 'Form.Buttons.Return.Tip') | translate\">\r\n    <mat-icon>{{ isParentDialog ? 'clear' : 'arrow_back' }}</mat-icon>\r\n  </button>\r\n\r\n  <div *ngIf=\"isCopy\" class=\"header__copy\">{{ 'ItemCard.CopyHint' | translate }}</div>\r\n\r\n  <div class=\"header__langs\">\r\n    <app-eav-language-switcher *ngIf=\"hasLanguages$ | async\" [formId]=\"formId\"\r\n      [disabled]=\"!formsAreValid && !allControlsAreDisabled\">\r\n    </app-eav-language-switcher>\r\n  </div>\r\n\r\n  <button mat-button class=\"header__publish-button\" (click)=\"openSaveStatusDialog()\"\r\n    [matTooltip]=\"'SaveMode.' + publishMode + '.Tip' | translate\">\r\n    <span class=\"header__publish-mode\">\r\n      {{ 'SaveMode.Label' | translate }}\r\n      <b>{{ ('SaveMode.' + publishMode | translate: '').toUpperCase() }}</b>\r\n    </span>\r\n  </button>\r\n</mat-card>\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { map } from 'rxjs/operators';\r\nimport { SaveStatusDialogComponent } from '../../eav-material-controls/dialogs/save-status-dialog/save-status-dialog.component';\r\nimport { LanguageService } from '../../shared/store/ngrx-data/language.service';\r\nimport { PublishMode } from '../multi-item-edit-form/multi-item-edit-form.constants';\r\n\r\n@Component({\r\n  selector: 'app-multi-item-edit-form-header',\r\n  templateUrl: './multi-item-edit-form-header.component.html',\r\n  styleUrls: ['./multi-item-edit-form-header.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MultiItemEditFormHeaderComponent implements OnInit {\r\n  @Input() formId: number;\r\n  @Input() isCopy: boolean;\r\n  @Input() formsAreValid: boolean;\r\n  @Input() allControlsAreDisabled: boolean;\r\n  @Input() isParentDialog: boolean;\r\n  @Input() publishMode: PublishMode;\r\n  @Output() private closeDialog = new EventEmitter<null>();\r\n  @Output() private setPublishMode = new EventEmitter<PublishMode>();\r\n\r\n  hasLanguages$ = this.languageService.entities$.pipe(map(languages => languages.length > 0));\r\n\r\n  constructor(private dialog: MatDialog, private languageService: LanguageService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  close() {\r\n    this.closeDialog.emit();\r\n  }\r\n\r\n  openSaveStatusDialog() {\r\n    const dialogRef = this.dialog.open(SaveStatusDialogComponent, {\r\n      panelClass: 'c-save-status-dialog',\r\n      autoFocus: false,\r\n      width: '350px',\r\n      data: this.publishMode\r\n    });\r\n    dialogRef.keydownEvents().subscribe(e => {\r\n      const CTRL_S = e.keyCode === 83 && (navigator.platform.match('Mac') ? e.metaKey : e.ctrlKey);\r\n      if (!CTRL_S) { return; }\r\n      e.preventDefault();\r\n    });\r\n    dialogRef.afterClosed().subscribe((res: PublishMode) => {\r\n      if (res == null) { return; }\r\n      this.setPublishMode.emit(res);\r\n    });\r\n  }\r\n}\r\n","<ng-container *ngIf=\"{\r\n  showDebugInfo: showDebugInfo$ | async,\r\n  items: items$ | async\r\n} as data\">\r\n\r\n  <mat-card fxLayout=\"column\" fxLayoutAlign=\"center start\" [ngClass]=\"{ 'debug-enabled': data.showDebugInfo }\">\r\n    <div class=\"debug-buttons-container\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n      <button mat-icon-button [matTooltip]=\"'General.Buttons.Debug' | translate\" (click)=\"toggleDebugInfo()\">\r\n        <mat-icon>offline_bolt</mat-icon>\r\n      </button>\r\n      <div>2sxc {{ sxcVer }}</div>\r\n      <!-- copy of the button to keep 2sxc version text correctly aligned in the middle -->\r\n      <button mat-icon-button class=\"hidden\">\r\n        <mat-icon>offline_bolt</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div *ngIf=\"data.showDebugInfo\" class=\"debug-info-container\">\r\n      <textarea readonly class=\"debug-dump\">{{ data.items | json }}</textarea>\r\n    </div>\r\n  </mat-card>\r\n</ng-container>\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Item } from '../../shared/models/eav';\r\nimport { ItemService } from '../../shared/store/ngrx-data/item.service';\r\n\r\ndeclare const sxcVersion: string;\r\n\r\n@Component({\r\n  selector: 'app-multi-item-edit-form-debug',\r\n  templateUrl: './multi-item-edit-form-debug.component.html',\r\n  styleUrls: ['./multi-item-edit-form-debug.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MultiItemEditFormDebugComponent implements OnInit, OnDestroy {\r\n  @Output() debugInfoOpened = new EventEmitter<boolean>();\r\n\r\n  sxcVer = sxcVersion.substring(0, sxcVersion.lastIndexOf('\\.'));\r\n  showDebugInfo$ = new BehaviorSubject(false);\r\n  items$: Observable<Item[]>;\r\n\r\n  constructor(private itemService: ItemService) { }\r\n\r\n  ngOnInit() {\r\n    this.items$ = this.itemService.selectAllItems();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.showDebugInfo$.complete();\r\n  }\r\n\r\n  toggleDebugInfo() {\r\n    this.showDebugInfo$.next(!this.showDebugInfo$.value);\r\n    this.debugInfoOpened.emit(this.showDebugInfo$.value);\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n<ng-container *ngIf=\"{\r\n  items: items$ | async,\r\n  isCopy: isCopy$ | async,\r\n  formsAreValid: formsAreValid$ | async,\r\n  allControlsAreDisabled: allControlsAreDisabled$ | async,\r\n  publishMode: publishMode$ | async,\r\n  reduceSaveButton: reduceSaveButton$ | async,\r\n  debugEnabled: debugEnabled$ | async,\r\n  debugInfoIsOpen: debugInfoIsOpen$ | async,\r\n  hideHeader: hideHeader$ | async,\r\n  slide: slide$ | async,\r\n  eavConfigLoaded: eavConfigLoaded$ | async\r\n} as data\">\r\n\r\n  <div mat-dialog-container style=\"position: relative\" appToggleDebug *ngIf=\"data.eavConfigLoaded\">\r\n    <div mat-dialog-actions class=\"form-header-container\" [ngClass]=\"{ 'u-display-none': data.hideHeader }\">\r\n      <app-multi-item-edit-form-header class=\"multi-item-edit-form-header\" [formId]=\"formId\" [isCopy]=\"data.isCopy\"\r\n        [formsAreValid]=\"data.formsAreValid\" [allControlsAreDisabled]=\"data.allControlsAreDisabled\"\r\n        [isParentDialog]=\"isParentDialog\" [publishMode]=\"data.publishMode\" (closeDialog)=\"closeDialog()\"\r\n        (setPublishMode)=\"setPublishMode($event)\">\r\n      </app-multi-item-edit-form-header>\r\n    </div>\r\n    <div style=\"position: relative\">\r\n      <div mat-dialog-content class=\"u-hide-scrollbar\" [ngClass]=\"{\r\n        'debug-enabled': data.debugEnabled,\r\n        'debug-info-is-open': data.debugInfoIsOpen,\r\n        'hide-header-height-fix': data.hideHeader\r\n      }\">\r\n        <div class=\"mdc-layout-grid\">\r\n          <div class=\"mdc-layout-grid__inner\">\r\n            <div #slideable class=\"mdc-layout-grid__cell--span-12\" [ngClass]=\"data.slide\">\r\n              <div *ngFor=\"let item of data.items; trackBy: trackByFn\">\r\n                <app-item-edit-form [item]=\"item\" [formId]=\"formId\" (itemFormValueChange)=\"formValueChange()\">\r\n                </app-item-edit-form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"c-multi-item-dialog__save-container\">\r\n          <div class=\"c-multi-item-dialog__save-button\">\r\n            <button mat-fab class=\"mat-elevation-z24\" [matTooltip]=\"'Form.Buttons.Save.Tip' | translate\" [ngClass]=\"{\r\n              'mat-fab--compact' : data.reduceSaveButton,\r\n              'mat-fab--extended' : !data.reduceSaveButton,\r\n              'mat-fab--disabled' : !data.formsAreValid && !data.allControlsAreDisabled\r\n            }\" (click)=\"saveAll(true)\">\r\n              <mat-icon>done</mat-icon>\r\n              {{ data.reduceSaveButton ? '' : ('Form.Buttons.Save' | translate).toUpperCase() }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <app-multi-item-edit-form-debug mat-dialog-actions *ngIf=\"data.debugEnabled\"\r\n      (debugInfoOpened)=\"debugInfoOpened($event)\">\r\n    </app-multi-item-edit-form-debug>\r\n  </div>\r\n</ng-container>\r\n","// tslint:disable-next-line:max-line-length\r\nimport { AfterViewChecked, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport { Action } from '@ngrx/store';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport 'reflect-metadata';\r\nimport { BehaviorSubject, fromEvent, merge, Observable, of, Subscription, zip } from 'rxjs';\r\nimport { catchError, delay, filter, map, pairwise, switchMap, take, tap } from 'rxjs/operators';\r\nimport { angularConsoleLog } from '../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\nimport { convertUrlToForm } from '../../../ng-dialogs/src/app/shared/helpers/url-prep.helper';\r\nimport { SnackBarSaveErrorsComponent } from '../../eav-material-controls/dialogs/snack-bar-save-errors/snack-bar-save-errors.component';\r\nimport { SaveErrorsSnackData } from '../../eav-material-controls/dialogs/snack-bar-save-errors/snack-bar-save-errors.models';\r\nimport { SnackBarUnsavedChangesComponent } from '../../eav-material-controls/dialogs/snack-bar-unsaved-changes/snack-bar-unsaved-changes.component';\r\nimport { UnsavedChangesSnackData } from '../../eav-material-controls/dialogs/snack-bar-unsaved-changes/snack-bar-unsaved-changes.models';\r\nimport { ValidationMessagesService } from '../../eav-material-controls/validators/validation-messages-service';\r\nimport { EditParams } from '../../edit-matcher.models';\r\nimport { Item, Language } from '../../shared/models/eav';\r\nimport { FieldErrorMessage } from '../../shared/models/eav/field-error-message';\r\nimport { JsonItem1 } from '../../shared/models/json-format-v1';\r\nimport { EavService } from '../../shared/services/eav.service';\r\nimport { EditRoutingService } from '../../shared/services/edit-routing.service';\r\nimport { GlobalConfigService } from '../../shared/services/global-configuration.service';\r\nimport { LoadIconsService } from '../../shared/services/load-icons.service';\r\nimport * as fromItems from '../../shared/store/actions/item.actions';\r\nimport { ContentTypeService } from '../../shared/store/ngrx-data/content-type.service';\r\nimport { FeatureService } from '../../shared/store/ngrx-data/feature.service';\r\nimport { InputTypeService } from '../../shared/store/ngrx-data/input-type.service';\r\nimport { ItemService } from '../../shared/store/ngrx-data/item.service';\r\nimport { LanguageInstanceService } from '../../shared/store/ngrx-data/language-instance.service';\r\nimport { LanguageService } from '../../shared/store/ngrx-data/language.service';\r\nimport { ItemEditFormComponent } from '../item-edit-form/item-edit-form.component';\r\nimport { PublishMode, PublishModeConstants } from './multi-item-edit-form.constants';\r\nimport { calculateIsParentDialog, sortLanguages } from './multi-item-edit-form.helpers';\r\n\r\n@Component({\r\n  selector: 'app-multi-item-edit-form',\r\n  templateUrl: './multi-item-edit-form.component.html',\r\n  styleUrls: ['./multi-item-edit-form.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MultiItemEditFormComponent implements OnInit, OnDestroy, AfterViewChecked {\r\n  @ViewChildren(ItemEditFormComponent) private itemEditFormRefs: QueryList<ItemEditFormComponent>;\r\n  @ViewChild('slideable') private slideableRef: ElementRef<HTMLDivElement>;\r\n\r\n  isParentDialog = calculateIsParentDialog(this.route);\r\n  formId = Math.floor(Math.random() * 99999);\r\n  isCopy$ = new BehaviorSubject(false);\r\n  formsAreValid$ = new BehaviorSubject(false);\r\n  allControlsAreDisabled$ = new BehaviorSubject(true);\r\n  items$: Observable<Item[]>;\r\n\r\n  publishMode$ = new BehaviorSubject<PublishMode>('hide');\r\n  reduceSaveButton$ = new BehaviorSubject(false);\r\n  hideHeader$ = this.languageInstanceService.getHideHeader(this.formId);\r\n  debugEnabled$ = this.globalConfigService.getDebugEnabled().pipe(\r\n    tap(debugEnabled => {\r\n      if (this.debugInfoIsOpen$.value && !debugEnabled) {\r\n        this.debugInfoIsOpen$.next(false);\r\n      }\r\n    })\r\n  );\r\n  debugInfoIsOpen$ = new BehaviorSubject(false);\r\n  slide$: Observable<string>;\r\n  eavConfigLoaded$ = new BehaviorSubject(false);\r\n\r\n  private formErrors: { [key: string]: string }[] = [];\r\n  private formsAreDirty: { [key: string]: boolean } = {};\r\n  private formSaveAllObservables$: Observable<Action>[] = [];\r\n  private createMode = false;\r\n  private formIsSaved = false;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<MultiItemEditFormComponent>,\r\n    private actions$: Actions,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private contentTypeService: ContentTypeService,\r\n    private globalConfigService: GlobalConfigService,\r\n    private eavService: EavService,\r\n    private featureService: FeatureService,\r\n    private inputTypeService: InputTypeService,\r\n    private itemService: ItemService,\r\n    private languageService: LanguageService,\r\n    private languageInstanceService: LanguageInstanceService,\r\n    private snackBar: MatSnackBar,\r\n    private translate: TranslateService,\r\n    private validationMessagesService: ValidationMessagesService,\r\n    private loadIconsService: LoadIconsService,\r\n    private route: ActivatedRoute,\r\n    private editRoutingService: EditRoutingService,\r\n  ) {\r\n    this.editRoutingService.init(this.route, this.formId);\r\n    this.loadIconsService.load();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchFormData();\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.attachAllSaveFormObservables();\r\n    this.changeDetectorRef.detectChanges(); // 2020-06-19 SPM TODO: remove when form is stable. ATM a whole lot of stuff breaks without it\r\n    this.initSlider();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.isCopy$.complete();\r\n    this.reduceSaveButton$.complete();\r\n    this.debugInfoIsOpen$.complete();\r\n    this.formsAreValid$.complete();\r\n    this.allControlsAreDisabled$.complete();\r\n    this.publishMode$.complete();\r\n    this.eavConfigLoaded$.complete();\r\n    this.subscriptions.forEach(subscription => { subscription.unsubscribe(); });\r\n    this.languageInstanceService.removeLanguageInstance(this.formId);\r\n\r\n    if (this.isParentDialog) {\r\n      // clear the rest of the store\r\n      this.languageInstanceService.clearCache();\r\n      this.languageService.clearCache();\r\n      this.itemService.clearCache();\r\n      this.inputTypeService.clearCache();\r\n      this.featureService.clearCache();\r\n      this.contentTypeService.clearCache();\r\n    }\r\n  }\r\n\r\n  /** Close form dialog or if close is disabled show a message */\r\n  closeDialog(saveResult?: any) {\r\n    if (this.dialogRef.disableClose) {\r\n      this.snackBarYouHaveUnsavedChanges();\r\n    } else {\r\n      this.dialogRef.close(this.createMode ? saveResult : undefined);\r\n    }\r\n  }\r\n\r\n  setPublishMode(publishMode: PublishMode) {\r\n    // if publish mode is prohibited, revert to default\r\n    if (this.eavService.eavConfig.versioningOptions[publishMode] == null) {\r\n      publishMode = Object.keys(this.eavService.eavConfig.versioningOptions)[0] as PublishMode;\r\n    }\r\n    this.publishMode$.next(publishMode);\r\n  }\r\n\r\n  trackByFn(index: number, item: Item) {\r\n    return item.entity.id === 0 ? item.entity.guid : item.entity.id;\r\n  }\r\n\r\n  formValueChange() {\r\n    this.checkFormsState();\r\n    this.formErrors = [];\r\n  }\r\n\r\n  /** Save all forms */\r\n  saveAll(close: boolean) {\r\n    this.eavService.forceConnectorSave$.next();\r\n    // start gathering submit data with a timeout to let custom components which run outside Angular zone to save their values\r\n    setTimeout(() => {\r\n      if (this.formsAreValid$.value || this.allControlsAreDisabled$.value) {\r\n        this.itemEditFormRefs.forEach(itemEditFormComponent => {\r\n          itemEditFormComponent.form.submitOutside();\r\n        });\r\n        angularConsoleLog('saveAll', close);\r\n        this.snackBar.open(this.translate.instant('Message.Saving'), null, { duration: 2000 });\r\n        if (close) { this.formIsSaved = true; }\r\n      } else {\r\n        this.calculateAllValidationMessages();\r\n        const fieldErrors: FieldErrorMessage[] = [];\r\n        this.formErrors.forEach(formError => {\r\n          Object.keys(formError).forEach(key => {\r\n            fieldErrors.push({ field: key, message: formError[key] });\r\n          });\r\n        });\r\n        const data: SaveErrorsSnackData = {\r\n          fieldErrors,\r\n        };\r\n        this.snackBar.openFromComponent(SnackBarSaveErrorsComponent, {\r\n          data,\r\n          duration: 5000,\r\n        });\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  debugInfoOpened(opened: boolean) {\r\n    this.debugInfoIsOpen$.next(opened);\r\n  }\r\n\r\n  private fetchFormData() {\r\n    const form = convertUrlToForm((this.route.snapshot.params as EditParams).items);\r\n    const editItems = JSON.stringify(form.items);\r\n    this.eavService.fetchFormData(editItems).subscribe(formData => {\r\n      setTimeout(() => { this.reduceSaveButton$.next(true); }, 5000);\r\n      this.itemService.loadItems(formData.Items);\r\n      // we assume that input type and content type data won't change between loading parent and child forms\r\n      this.inputTypeService.addInputTypes(formData.InputTypes);\r\n      this.contentTypeService.addContentTypes(formData.ContentTypes);\r\n      this.featureService.loadFeatures(formData.Features);\r\n\r\n      this.eavService.setEavConfig(formData.Context);\r\n      this.eavConfigLoaded$.next(true);\r\n      const isoLangCode = this.eavService.eavConfig.lang.split('-')[0];\r\n      this.translate.use(isoLangCode);\r\n      // Load language data only for parent dialog to not overwrite languages when opening child dialogs\r\n      if (this.isParentDialog) {\r\n        const langs = this.eavService.eavConfig.langs;\r\n        const eavLangs: Language[] = Object.keys(langs).map(key => ({ key, name: langs[key] }));\r\n        const sortedLanguages = sortLanguages(this.eavService.eavConfig.langPri, eavLangs);\r\n        this.languageService.loadLanguages(sortedLanguages);\r\n      }\r\n      this.languageInstanceService.addLanguageInstance(this.formId, this.eavService.eavConfig.lang,\r\n        this.eavService.eavConfig.langPri, this.eavService.eavConfig.lang, false);\r\n\r\n      const publishMode: PublishMode = formData.DraftShouldBranch\r\n        ? PublishModeConstants.Branch\r\n        : formData.IsPublished ? PublishModeConstants.Show : PublishModeConstants.Hide;\r\n      this.setPublishMode(publishMode);\r\n\r\n      // if current language !== default language check whether default language has value in all items\r\n      if (this.eavService.eavConfig.lang !== this.eavService.eavConfig.langPri) {\r\n        const valuesExistInDefaultLanguage = this.itemService.valuesExistInDefaultLanguage(\r\n          formData.Items.map(item => (item.Entity.Id === 0 ? item.Entity.Guid : item.Entity.Id)),\r\n          this.eavService.eavConfig.langPri,\r\n          this.inputTypeService,\r\n          this.contentTypeService,\r\n        );\r\n        if (!valuesExistInDefaultLanguage) {\r\n          this.languageInstanceService.updateCurrentLanguage(this.formId, this.eavService.eavConfig.langPri);\r\n          const message = this.translate.instant('Message.SwitchedLanguageToDefault', { language: this.eavService.eavConfig.langPri });\r\n          this.snackBar.open(message, null, { duration: 5000 });\r\n        }\r\n      }\r\n\r\n      this.items$ = this.itemService\r\n        .selectItemsByIdList(formData.Items.map(item => (item.Entity.Id === 0 ? item.Entity.Guid : item.Entity.Id)))\r\n        // spm TODO: added a small delay to calculate fields a bit later than languages to make form opening feel smoother.\r\n        // Remove if calculating fields gets faster\r\n        .pipe(delay(0));\r\n      this.items$.pipe(take(1)).subscribe(items => {\r\n        if (items?.[0].entity.id === 0) {\r\n          this.createMode = true;\r\n          if (items[0].header.DuplicateEntity != null) {\r\n            this.isCopy$.next(true);\r\n          }\r\n        }\r\n      });\r\n\r\n      this.languageChangeSubscribe();\r\n      this.dialogBackdropClickSubscribe();\r\n      this.saveFormMessagesSubscribe();\r\n      this.formSetValueChangeSubscribe();\r\n    });\r\n  }\r\n\r\n  private initSlider() {\r\n    if (this.slideableRef == null || this.slide$ != null) { return; }\r\n    this.slide$ = merge(\r\n      this.languageInstanceService.getCurrentLanguage(this.formId).pipe(\r\n        pairwise(),\r\n        map(([previousLang, currentLang]) => {\r\n          let languages: Language[];\r\n          this.languageService.entities$.pipe(take(1)).subscribe(langs => {\r\n            languages = langs;\r\n          });\r\n          const previousLangIndex = languages.findIndex(lang => lang.key === previousLang);\r\n          const currentLangIndex = languages.findIndex(lang => lang.key === currentLang);\r\n          const slide = (previousLangIndex > currentLangIndex) ? 'previous' : 'next';\r\n          return slide;\r\n        }),\r\n      ),\r\n      fromEvent(this.slideableRef.nativeElement, 'animationend').pipe(\r\n        filter((event: AnimationEvent) => event.animationName === 'move-next' || event.animationName === 'move-previous'),\r\n        map(() => ''),\r\n        delay(0), // small delay because animationend fires a bit too early\r\n      ),\r\n    );\r\n  }\r\n\r\n  private languageChangeSubscribe() {\r\n    this.subscriptions.push(\r\n      this.languageInstanceService.getCurrentLanguage(this.formId).subscribe(language => {\r\n        this.formErrors = []; // on current language change reset form errors\r\n      }),\r\n    );\r\n  }\r\n\r\n  private dialogBackdropClickSubscribe() {\r\n    this.subscriptions.push(\r\n      fromEvent(window, 'beforeunload').subscribe((event: BeforeUnloadEvent) => {\r\n        if (!this.dialogRef.disableClose) { return; }\r\n        event.preventDefault();\r\n        event.returnValue = ''; // fix for Chrome\r\n        this.snackBarYouHaveUnsavedChanges();\r\n      })\r\n    );\r\n\r\n    this.dialogRef.backdropClick().subscribe(event => {\r\n      this.closeDialog();\r\n    });\r\n\r\n    this.dialogRef.keydownEvents().subscribe(event => {\r\n      const ESCAPE = event.keyCode === 27;\r\n      if (ESCAPE) {\r\n        this.closeDialog();\r\n        return;\r\n      }\r\n      const CTRL_S = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.keyCode === 83;\r\n      if (CTRL_S) {\r\n        event.preventDefault();\r\n        this.saveAll(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Display form messages on form success or form error.\r\n   * Imortant: this is subscribed to an all open dialogs, a forms are distinguished by this.formIsSaved variable.\r\n   * TODO: need to distinguished form by forms data\r\n   */\r\n  private saveFormMessagesSubscribe() {\r\n    this.subscriptions.push(\r\n      this.actions$\r\n        .pipe(ofType(fromItems.SAVE_ITEM_ATTRIBUTES_VALUES_SUCCESS))\r\n        .subscribe((action: fromItems.SaveItemAttributesValuesSuccessAction) => {\r\n          this.itemService.updateItemId(action.data);\r\n          angularConsoleLog('success END: ', action.data);\r\n          this.snackBar.open(this.translate.instant('Message.Saved'), null, { duration: 2000 });\r\n          this.dialogRef.disableClose = false;\r\n          if (this.formIsSaved) {\r\n            this.closeDialog(action.data);\r\n          }\r\n        })\r\n    );\r\n    this.subscriptions.push(\r\n      this.actions$\r\n        .pipe(ofType(fromItems.SAVE_ITEM_ATTRIBUTES_VALUES_ERROR))\r\n        .subscribe((action: fromItems.SaveItemAttributesValuesErrorAction) => {\r\n          angularConsoleLog('error END', action.error);\r\n          this.snackBar.open('Error', null, { duration: 2000 });\r\n        })\r\n    );\r\n  }\r\n\r\n  private formSetValueChangeSubscribe() {\r\n    this.subscriptions.push(\r\n      this.eavService.formValueChange$.pipe(\r\n        filter(formSet => formSet.formId === this.formId)\r\n      ).subscribe(formSet => {\r\n        this.checkFormsState();\r\n      })\r\n    );\r\n  }\r\n\r\n  private checkFormsState() {\r\n    if (this.itemEditFormRefs?.length > 0 && this.itemEditFormRefs?.first.currentLanguage) {\r\n      let formsAreValid = true;\r\n      let allControlsAreDisabled = true;\r\n      this.formsAreDirty[this.itemEditFormRefs.first.currentLanguage] = false;\r\n\r\n      this.itemEditFormRefs.forEach(itemEditFormComponent => {\r\n        if (\r\n          itemEditFormComponent.form.form.invalid === true\r\n          && (!itemEditFormComponent.item.header.Group || itemEditFormComponent.item.header.Group.SlotCanBeEmpty === false)\r\n        ) {\r\n          formsAreValid = false;\r\n        }\r\n        if (itemEditFormComponent.form.form.dirty) {\r\n          this.formsAreDirty[itemEditFormComponent.currentLanguage] = true;\r\n        }\r\n        if (!itemEditFormComponent.checkAreAllControlsDisabled()) {\r\n          allControlsAreDisabled = false;\r\n        }\r\n      });\r\n\r\n      if (this.formsAreValid$.value !== formsAreValid) {\r\n        this.formsAreValid$.next(formsAreValid);\r\n      }\r\n\r\n      if (this.allControlsAreDisabled$.value !== allControlsAreDisabled) {\r\n        this.allControlsAreDisabled$.next(allControlsAreDisabled);\r\n      }\r\n    }\r\n    this.dialogRef.disableClose = this.areFormsDirtyAnyLanguage();\r\n  }\r\n\r\n  /** Determine is from is dirty on any language. If any form is dirty we need to ask to save */\r\n  private areFormsDirtyAnyLanguage() {\r\n    let isDirty = false;\r\n    const langKeys = Object.keys(this.formsAreDirty);\r\n    for (const langKey of langKeys) {\r\n      if (this.formsAreDirty[langKey] === true) {\r\n        isDirty = true;\r\n        break;\r\n      }\r\n    }\r\n    return isDirty;\r\n  }\r\n\r\n  /** Fill in all error validation messages from all forms */\r\n  private calculateAllValidationMessages() {\r\n    this.formErrors = [];\r\n    this.itemEditFormRefs?.forEach(itemEditFormComponent => {\r\n      if (!itemEditFormComponent.form.form.invalid) { return; }\r\n      this.formErrors.push(this.validationMessagesService.validateForm(itemEditFormComponent.form.form, false));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach all save form observables from child itemEditFormComponent and\r\n   * subscribe to all observables with one subscribe (observable zip function).\r\n   * It also initially checks the status of the form (invalid, dirty ...)\r\n   */\r\n  private attachAllSaveFormObservables() {\r\n    if (this.formSaveAllObservables$.length === 0) {\r\n      this.itemEditFormRefs?.forEach(itemEditFormComponent => {\r\n        this.formSaveAllObservables$.push(itemEditFormComponent.formSaveObservable());\r\n      });\r\n\r\n      // only called once when a formSaveAllObservables array is filled\r\n      if (this.formSaveAllObservables$.length > 0) {\r\n        this.saveFormSubscribe();\r\n        this.checkFormsState();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** With zip function look all forms submit observables and when all finish save all data */\r\n  private saveFormSubscribe() {\r\n    this.subscriptions.push(\r\n      zip(...this.formSaveAllObservables$)\r\n        .pipe(\r\n          switchMap((actions: fromItems.SaveItemAttributesValuesAction[]) => {\r\n            angularConsoleLog('ZIP ACTIONS ITEM: ', JsonItem1.create(actions[0].item));\r\n            const allItems: JsonItem1[] = [];\r\n            actions.forEach(action => {\r\n              const item = JsonItem1.create(action.item);\r\n              // do not try to save item which doesn't have any fields, nothing could have changed about it\r\n              if (Object.keys(item.Entity.Attributes).length > 0) {\r\n                allItems.push(item);\r\n              }\r\n            });\r\n            const body = {\r\n              Items: allItems,\r\n              IsPublished: this.publishMode$.value === PublishModeConstants.Show,\r\n              DraftShouldBranch: this.publishMode$.value === PublishModeConstants.Branch,\r\n            };\r\n            return this.eavService.saveFormData(JSON.stringify(body)).pipe(\r\n              map(data => {\r\n                this.eavService.saveItemSuccess(data);\r\n              }),\r\n              tap(data => angularConsoleLog('working'))\r\n            );\r\n          }),\r\n          catchError(err => of(this.eavService.saveItemError(err)))\r\n        )\r\n        .subscribe()\r\n    );\r\n  }\r\n\r\n  /** Open snackbar when snack bar not saved */\r\n  public snackBarYouHaveUnsavedChanges() {\r\n    const data: UnsavedChangesSnackData = {\r\n      save: false,\r\n    };\r\n    const snackBarRef = this.snackBar.openFromComponent(SnackBarUnsavedChangesComponent, {\r\n      data,\r\n      duration: 5000,\r\n    });\r\n\r\n    snackBarRef.onAction().subscribe(() => {\r\n      if (snackBarRef.containerInstance.snackBarConfig.data.save) {\r\n        this.saveAll(true);\r\n      } else {\r\n        this.dialogRef.disableClose = false;\r\n        this.closeDialog();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgZone } from '@angular/core';\r\nimport { ElementEventListener } from '../../../shared/element-event-listener.model';\r\ndeclare const draggingClass: string;\r\ndeclare const windowBodyTimeouts: number[];\r\n\r\nexport class DropzoneDraggingHelper {\r\n  private eventListeners: ElementEventListener[] = [];\r\n\r\n  constructor(private zone: NgZone) { }\r\n\r\n  /** Starts listening for dragover and drop events on a given element */\r\n  attach(htmlEl: HTMLElement) {\r\n    this.zone.runOutsideAngular(() => {\r\n      htmlEl.addEventListener('dragover', dragoverListener, { passive: true });\r\n      htmlEl.addEventListener('drop', dropListener, { passive: true });\r\n\r\n      this.eventListeners.push(\r\n        { element: htmlEl, type: 'dragover', listener: dragoverListener },\r\n        { element: htmlEl, type: 'drop', listener: dropListener },\r\n      );\r\n\r\n      function dragoverListener() {\r\n        clearTimeouts(windowBodyTimeouts); // clear timeouts from global array of timeouts which clear draggingClass from body\r\n        document.body.classList.add(draggingClass);\r\n      }\r\n      function dropListener() {\r\n        document.body.classList.remove(draggingClass);\r\n      }\r\n      function clearTimeouts(timeoutsArray: number[]) {\r\n        for (const timeout of timeoutsArray) {\r\n          clearTimeout(timeout);\r\n        }\r\n        timeoutsArray.splice(0, timeoutsArray.length);\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Removes event listeners from registered elements */\r\n  detach() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.eventListeners.forEach(eventListener => {\r\n        const element = eventListener.element;\r\n        const type = eventListener.type;\r\n        const listener = eventListener.listener;\r\n        element.removeEventListener(type, listener);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n"],"sourceRoot":"webpack:///"}