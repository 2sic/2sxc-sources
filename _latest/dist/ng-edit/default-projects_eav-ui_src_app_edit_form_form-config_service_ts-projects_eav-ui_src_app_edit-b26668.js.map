{"version":3,"file":"default-projects_eav-ui_src_app_edit_form_form-config_service_ts-projects_eav-ui_src_app_edit-b26668.js","mappings":"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","sources":["./projects/eav-ui/src/app/edit/fields/field-state.ts","./projects/eav-ui/src/app/edit/fields/page-picker/page-picker.component.ts","./projects/eav-ui/src/app/edit/fields/page-picker/page-picker.component.html","./projects/eav-ui/src/app/edit/fields/page-picker/page-picker.helper.ts","./projects/eav-ui/src/app/edit/fields/page-picker/page-picker.helpers.ts","./projects/eav-ui/src/app/edit/form/form-config.service.ts","./projects/eav-ui/src/app/edit/form/form-language.service.ts","./projects/eav-ui/src/app/edit/form/form-languages.model.ts","./projects/eav-ui/src/app/edit/localization/dimension-reader.ts","./projects/eav-ui/src/app/edit/localization/field-reader.ts","./projects/eav-ui/src/app/edit/shared/adam/file-type.helpers.ts","./projects/eav-ui/src/app/edit/shared/helpers/entity-reader.ts","./projects/eav-ui/src/app/edit/shared/helpers/field-mask.helper.ts","./projects/eav-ui/src/app/edit/shared/helpers/index.ts","./projects/eav-ui/src/app/edit/shared/helpers/sanitize.helper.ts","./projects/eav-ui/src/app/edit/shared/input-types/input-field.helpers.ts","./projects/eav-ui/src/app/edit/shared/store/signal-store-base.ts","./projects/eav-ui/src/app/edit/shared/store/signal-store-observable-base.ts","./projects/eav-ui/src/app/edit/state/fields-settings.helpers.ts","./projects/eav-ui/src/app/shared/fields/input-type-catalog.ts","./projects/eav-ui/src/app/shared/helpers/array.helpers.ts","./projects/eav-ui/src/app/shared/rxJs/mapUntilChanged.ts"],"sourcesContent":["import { effect, Injector, Signal } from '@angular/core';\r\nimport { UntypedFormGroup } from '@angular/forms';\r\nimport { Of } from '../../../../../core';\r\nimport { BasicControlSettings } from '../../../../../edit-types/src/BasicControlSettings';\r\nimport { FieldSettings } from '../../../../../edit-types/src/FieldSettings';\r\nimport { FieldValue } from '../../../../../edit-types/src/FieldValue';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { FeaturesScopedService } from '../../features/features-scoped.service';\r\nimport { computedObj, signalObj } from '../../shared/signals/signal.utilities';\r\nimport { TranslationState } from '../localization/translate-state.model';\r\nimport { UiControl } from '../shared/controls/ui-control';\r\nimport { FieldConfigSet } from './field-config-set.model';\r\nimport { PickerData } from './picker/picker-data';\r\n\r\n/**\r\n * This is provided / injected at the fields-builder for every single field.\r\n * So any control or service within that field, which requests this service, will get one containing exactly that fields.\r\n */\r\nexport class FieldState<TValue extends FieldValue = FieldValue, TSettings extends FieldSettings = FieldSettings> {\r\n  constructor(\r\n    /** The fields technical name to access settings etc. */\r\n    public name: string,\r\n\r\n    /** Field configuration, incl. a lot of unchanging values and access to adam, dropzone etc. */\r\n    public config: FieldConfigSet,\r\n\r\n    /** The form group containing the field - rarely relevant, as you should use the control in most cases */\r\n    public group: UntypedFormGroup,\r\n\r\n    // TODO: @2pp try to find out where this is used just to create a signal for a property\r\n    /** The settings as a signal - use this for most cases */\r\n    public settings: Signal<TSettings>,\r\n\r\n    /** The basic settings - use this for most cases as it will change less than the settings signal */\r\n    public basics: Signal<BasicControlSettings>,\r\n\r\n    /**\r\n     * The UI control (actually it's the virtual UI control), since it's a reactive form control.\r\n     * Note: e just introduced uiValue below, which should be used in most cases\r\n     */\r\n    public ui: Signal<UiControl>,\r\n\r\n    /** The value of the field in the UI control as a signal */\r\n    public uiValue: Signal<TValue>,\r\n\r\n    public translationState: Signal<TranslationState>,\r\n\r\n    /** Signal if a dialog (popup) of this field is open, like a hyperlink-dialog */\r\n    public isOpen: Signal<boolean>,\r\n\r\n    pickerData: PickerData,\r\n\r\n    featuresSvc: FeaturesScopedService,\r\n\r\n    injectorForEffects: Injector,\r\n  ) {\r\n    this.#pickerData = pickerData;\r\n\r\n    // Required Features Transfer\r\n    effect(() => {\r\n      const reqFeaturesFromSettings = this.requiredFeatures();\r\n      if (reqFeaturesFromSettings.length == 0)\r\n        return;\r\n      for (const feature of reqFeaturesFromSettings)\r\n        featuresSvc.requireFeature(feature, `Used in field ${this.name}`);\r\n    }, { injector: injectorForEffects });\r\n\r\n  }\r\n\r\n  /**\r\n   * Picker Data - will throw an error if accessed on a field which doesn't have PickerData\r\n   * @readonly\r\n   * @type {PickerData}\r\n   */\r\n  get pickerData(): PickerData {\r\n    if (this.#pickerData)\r\n      return this.#pickerData;\r\n    throw new Error(`PickerData was not initialized for the field: ${this.name}`);\r\n  }\r\n  #pickerData: PickerData;\r\n\r\n  /**\r\n   * Cool helper to just get a single value-signal from the settings.\r\n   * It will automatically\r\n   * - ensure that you only use valid keys\r\n   * - return a signal with that name\r\n   * - the signal will be correctly typed as the setting value is typed\r\n   * @param name property name of a FieldSettings\r\n   * @returns the signal for that property, with isEqual change detection and name\r\n   */\r\n  setting<K extends keyof FieldSettings>(name: K): Signal<FieldSettings[K]> {\r\n    return computedObj(name as string, () => this.settings()[name]);\r\n  }\r\n\r\n  settingExt<K extends keyof TSettings>(name: K): Signal<TSettings[K]> {\r\n    return computedObj(name as string, () => this.settings()[name]);\r\n  }\r\n\r\n  // settingExt<TSet extends FieldSettings, K extends keyof TSet>(name: K): Signal<TSet[K]> {\r\n  //   return computedObj(name as string, () => (this.settings() as unknown as TSet)[name]);\r\n  // }\r\n\r\n  //#region Required Features\r\n\r\n  #reqFeaturesMy = signalObj<Of<typeof FeatureNames>[]>('requiredFeatures', []);\r\n  #reqFeaturesFromSettings = this.setting('requiredFeatures');\r\n\r\n  requiredFeatures = computedObj('requiredFeatures', () => {\r\n    const merged = [\r\n      ...this.#reqFeaturesMy(),\r\n      ...this.#reqFeaturesFromSettings() ?? [],\r\n    ];\r\n    // make distinct\r\n    return Array.from(new Set(merged));\r\n  });\r\n\r\n  requireFeature(feature: Of<typeof FeatureNames>) {\r\n    const current = this.#reqFeaturesMy();\r\n    if (!current.includes(feature))\r\n      this.#reqFeaturesMy.set([...current, feature]);\r\n  }\r\n\r\n  //#endregion\r\n}\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, computed, Inject, OnInit, signal } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { transient } from '../../../../../../core';\r\nimport { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport { PagePickerResult } from '../../../../../../edit-types/src/PagePickerResult';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { ArrayHelpers } from '../../../shared/helpers/array.helpers';\r\nimport { QueryService } from '../../../shared/services/query.service';\r\nimport { buildPageSearch, buildPageTree } from './page-picker.helpers';\r\nimport { PageEntity, PagePickerDialogData, PageSearchItem, PageTreeItem } from './page-picker.models';\r\n\r\n@Component({\r\n    selector: 'app-page-picker',\r\n    templateUrl: './page-picker.component.html',\r\n    styleUrls: ['./page-picker.component.scss'],\r\n    imports: [\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        FormsModule,\r\n        NgTemplateOutlet,\r\n        NgClass,\r\n        MatIconModule,\r\n        MatDialogActions,\r\n        TranslateModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class PagePickerComponent implements OnInit {\r\n  selected: number;\r\n  toggled: number[];\r\n\r\n  filterText = signal<string>('');\r\n  searchItems = signal<PageSearchItem[]>([]);\r\n  tree = signal<PageTreeItem[]>([]);\r\n\r\n  filteredSearch = computed(() => {\r\n    const filterText = this.filterText();\r\n    const searchItems = this.searchItems();\r\n    return searchItems.filter(item => item.name.toLocaleLowerCase().includes(filterText.toLocaleLowerCase()));\r\n  });\r\n\r\n  private queryService = transient(QueryService);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: PagePickerDialogData,\r\n    private dialog: MatDialogRef<PagePickerComponent>,\r\n    private translate: TranslateService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.selected = this.parseSelectedPageId();\r\n    this.toggled = [];\r\n\r\n    this.fetchPages();\r\n  }\r\n\r\n  setFilter(filterText: string): void {\r\n    this.filterText.set(filterText);\r\n  }\r\n\r\n  select(page: PageTreeItem | PageSearchItem): void {\r\n    // filters out pages without parent (broken)\r\n    if (page.id == null) return;\r\n    if (!page.isClickable || !page.isVisible) {\r\n      const ok = window.confirm(this.translate.instant('Fields.Hyperlink.PagePicker.HiddenOrSystemPageWarning'));\r\n      if (!ok) return;\r\n    }\r\n    this.closeDialog(page.id);\r\n  }\r\n\r\n  toggle(pageId: number): void {\r\n    ArrayHelpers.toggleInArray(pageId, this.toggled);\r\n  }\r\n\r\n  private closeDialog(pageId?: number): void {\r\n    if (pageId == null) {\r\n      this.dialog.close();\r\n      return;\r\n    }\r\n\r\n    const page = this.searchItems().find(i => i.id === pageId);\r\n    const result: PagePickerResult = {\r\n      id: page.id.toString(),\r\n      name: page.name,\r\n    };\r\n    this.dialog.close(result);\r\n  }\r\n\r\n  private fetchPages(): void {\r\n    const stream = 'Default';\r\n    const params = 'includehidden=true';\r\n    this.queryService.getFromQuery(`System.Pages/Default`, params, null).subscribe({\r\n      next: (data) => {\r\n        if (!data) {\r\n          console.error(this.translate.instant('Fields.Picker.QueryErrorNoData'));\r\n          return;\r\n        }\r\n        if (!data[stream]) {\r\n          console.error(this.translate.instant('Fields.Picker.QueryStreamNotFound') + ' ' + stream);\r\n          return;\r\n        }\r\n        const pages = data[stream] as PageEntity[];\r\n        const searchItems = buildPageSearch(pages);\r\n        this.searchItems.set(searchItems);\r\n        const tree = buildPageTree(pages);\r\n        this.tree.set(tree);\r\n      },\r\n      error: (error) => {\r\n        console.error(error);\r\n        console.error(`${this.translate.instant('Fields.Picker.QueryError')} - ${error.data}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  private parseSelectedPageId(): number {\r\n    const prefix = 'page:';\r\n    let fieldValue: FieldValue = this.dialogData.group.controls[this.dialogData.config.fieldName].value;\r\n    if (typeof fieldValue !== 'string') return;\r\n\r\n    fieldValue = fieldValue.trim().toLocaleLowerCase();\r\n    if (!fieldValue.startsWith(prefix)) return;\r\n\r\n    try {\r\n      const id = parseInt(fieldValue.split(prefix)[1], 10);\r\n      return id;\r\n    } catch {\r\n      return;\r\n    }\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">{{ 'Fields.Hyperlink.PagePicker.Title' | translate }}</div>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <div class=\"page-search-box\">\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Search</mat-label>\r\n        <input matInput [ngModel]=\"filterText()\" (ngModelChange)=\"setFilter($event)\">\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"page-tree-box\">\r\n      @if (!filterText()) {\r\n      <ul>\r\n        @for (page of tree(); track page) {\r\n        <ng-container *ngTemplateOutlet=\"pageAndChildren; context: {page: page}\"></ng-container>\r\n        }\r\n      </ul>\r\n      }\r\n      @if (filterText()) {\r\n      <ul>\r\n        @if (filteredSearch().length === 0) {\r\n        <li>\r\n          <div class=\"page-row\">\r\n            <div class=\"no-toggle\"></div>\r\n            <div>No results</div>\r\n          </div>\r\n        </li>\r\n        }\r\n        @for (page of filteredSearch(); track page) {\r\n        <li>\r\n          <div class=\"page-row\">\r\n            <div class=\"no-toggle\"></div>\r\n            <div class=\"page-label\" [ngClass]=\"page.id === selected ? 'selected' : ''\" (click)=\"select(page)\">\r\n              <div class=\"page-icon-and-text\">\r\n                <mat-icon class=\"page-icon\" svgIcon=\"file\"></mat-icon>\r\n                @if (page.path) {\r\n                <span class=\"page-path\" [tippy]=\"page.path\">{{ page.path }}&nbsp;>&nbsp;</span>\r\n                }\r\n                <span class=\"page-name\" [tippy]=\"page.name\">{{ page.name }}</span>\r\n              </div>\r\n              <div class=\"page-icons\">\r\n                @if (!page.isVisible) {\r\n                <mat-icon class=\"page-visible-clickable-icon\">visibility_off</mat-icon>\r\n                }\r\n                @if (!page.isClickable) {\r\n                <mat-icon class=\"page-visible-clickable-icon\">cancel</mat-icon>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </li>\r\n        }\r\n      </ul>\r\n      }\r\n    </div>\r\n    <ng-template #pageAndChildren let-page=\"page\">\r\n      <li>\r\n        <div class=\"page-row\">\r\n          @if (page.children.length === 0) {\r\n          <div class=\"no-toggle\"></div>\r\n          }\r\n          @if (page.children.length > 0) {\r\n          <mat-icon class=\"page-toggle\" (click)=\"toggle(page.id)\">\r\n            {{ toggled.includes(page.id) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n          </mat-icon>\r\n          }\r\n          <div class=\"page-label\" [ngClass]=\"page.id === selected ? 'selected' : ''\" (click)=\"select(page)\">\r\n            <div class=\"page-icon-and-text\">\r\n              <mat-icon class=\"page-icon\" svgIcon=\"file\"></mat-icon>\r\n              <span>{{ page.name }}</span>\r\n            </div>\r\n            <div class=\"page-icons\">\r\n              @if (!page.isVisible) {\r\n              <mat-icon class=\"page-visible-clickable-icon\">visibility_off</mat-icon>\r\n              }\r\n              @if (!page.isClickable) {\r\n              <mat-icon class=\"page-visible-clickable-icon\">cancel</mat-icon>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        @if (page.children.length > 0 && toggled.includes(page.id)) {\r\n        <ul>\r\n          @for (child of page.children; track child) {\r\n          <ng-container *ngTemplateOutlet=\"pageAndChildren; context: {page: child}\"></ng-container>\r\n          }\r\n        </ul>\r\n        }\r\n      </li>\r\n    </ng-template>\r\n  </div>\r\n  <mat-dialog-actions>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { ChangeDetectorRef, ViewContainerRef } from '@angular/core';\r\nimport { UntypedFormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { take } from 'rxjs';\r\nimport { PagePickerResult } from '../../../../../../edit-types/src/PagePickerResult';\r\nimport { FieldConfigSet } from '../field-config-set.model';\r\nimport { PagePickerComponent } from './page-picker.component';\r\nimport { PagePickerDialogData } from './page-picker.models';\r\n\r\nexport class PagePicker {\r\n  static open(\r\n    config: FieldConfigSet,\r\n    group: UntypedFormGroup,\r\n    matDialog: MatDialog,\r\n    viewContainerRef: ViewContainerRef,\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    callback: (value: PagePickerResult) => void,\r\n  ): void {\r\n    const dialogData: PagePickerDialogData = {\r\n      config,\r\n      group,\r\n    };\r\n    const dialogRef = matDialog.open(PagePickerComponent, {\r\n      autoFocus: false,\r\n      data: dialogData,\r\n      viewContainerRef,\r\n      height: '80%',\r\n      width: '650px',\r\n    });\r\n\r\n    dialogRef.afterClosed().pipe(take(1)).subscribe((value: PagePickerResult) => {\r\n      callback(value);\r\n    });\r\n\r\n    changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","import { PageEntity, PageSearchItem, PageTreeItem } from './page-picker.models';\r\n\r\nexport function buildPageSearch(pages: PageEntity[]): PageSearchItem[] {\r\n  if (!pages) { return []; }\r\n\r\n  const items = pages.map(page => {\r\n    let path = page.Path.trim().replace(/\\\\/g, '/').replace(/\\/\\//g, '/');\r\n    if (path.startsWith('/')) {\r\n      path = path.substring(1);\r\n    }\r\n    path = path.split('/').slice(0, -1).join(' > ');\r\n\r\n    const item: PageSearchItem = {\r\n      id: page.Id,\r\n      name: page.Name,\r\n      path,\r\n      isVisible: page.Visible,\r\n      isClickable: page.Clickable,\r\n    };\r\n    return item;\r\n  });\r\n\r\n  return items;\r\n}\r\n\r\nexport function buildPageTree(pages: PageEntity[]): PageTreeItem[] {\r\n  if (!pages) { return []; }\r\n\r\n  const items = pages.map(page => {\r\n    const item: PageTreeItem = {\r\n      children: [],\r\n      id: page.Id,\r\n      name: page.Name,\r\n      parentId: page.ParentId,\r\n      isVisible: page.Visible,\r\n      isClickable: page.Clickable,\r\n    };\r\n    return item;\r\n  });\r\n\r\n  const tree: PageTreeItem[] = [];\r\n  for (const item of items) {\r\n    if (item.parentId === -1) {\r\n      tree.push(item);\r\n      continue;\r\n    }\r\n\r\n    const parent = items.find(i => i.id === item.parentId);\r\n    if (!parent) {\r\n      tree.push(item);\r\n    } else {\r\n      parent.children.push(item);\r\n    }\r\n  }\r\n\r\n  return tree;\r\n}\r\n","import { Injectable, Signal, inject, signal } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { DialogContext } from '../../app-administration/models';\r\nimport { keyPartOfPage, keyPublishing, partOfPageDefault } from '../../shared/constants/session.constants';\r\nimport { classLog } from '../../shared/logging';\r\nimport { Context } from '../../shared/services/context';\r\nimport { EditSettings } from '../dialog/main/edit-dialog-main.models';\r\nimport { FormConfiguration, VersioningOptions } from './form-configuration.model';\r\nimport { FormLanguageService } from './form-language.service';\r\nimport { FormLanguageComplete, FormLanguagesConfig } from './form-languages.model';\r\n\r\n/**\r\n * Service which tell us about a single edit-form configuration.\r\n * It contains multiple entities.\r\n *\r\n * Things such as language, IDs shown on it, edit-settings etc.\r\n */\r\n@Injectable()\r\nexport class FormConfigService {\r\n  \r\n  log = classLog({FormConfigService});\r\n  \r\n  /** no constructor */\r\n  constructor() { }\r\n\r\n  /**\r\n   * Important! These are constants that form was loaded with.\r\n   * They are initialized in the main edit-form.\r\n   * They do not change while form is running\r\n   */\r\n  config: FormConfiguration;\r\n\r\n  // WIP, null at first\r\n  configSignal = signal<FormConfiguration>(null);\r\n\r\n  /**\r\n   * Current form language information\r\n   */\r\n  language: Signal<FormLanguageComplete>;\r\n\r\n  /**\r\n   * Current edit settings\r\n   * Note: Clean use - only used by classes that inject this themselves\r\n   */\r\n  settings: EditSettings;\r\n\r\n  /**\r\n   * Form language configuration, not meant to change during runtime...\r\n   */\r\n  languages: FormLanguagesConfig;\r\n\r\n  /** Used to fetch form data and fill up eavConfig. Do not use anywhere else */\r\n  private context = inject(Context);\r\n  private languageService = inject(FormLanguageService);\r\n\r\n  /** Create EavConfiguration from sessionStorage */\r\n  initFormConfig(\r\n    dialogContext: DialogContext,\r\n    formId: number,\r\n    isParentDialog: boolean,\r\n    itemGuids: string[],\r\n    createMode: boolean,\r\n    isCopy: boolean,\r\n    enableHistory: boolean,\r\n    settings: EditSettings\r\n  ) {\r\n    this.settings = settings;\r\n    this.languages = {\r\n      initial: dialogContext.Language.Current,\r\n      primary: dialogContext.Language.Primary,\r\n      list: dialogContext.Language.List,\r\n    };\r\n    this.config = {\r\n      zoneId: this.context.zoneId,\r\n      appId: this.context.appId,\r\n      appRoot: dialogContext.App.Url,\r\n      appSharedRoot: dialogContext.App.SharedUrl,\r\n      moduleId: this.context.moduleId?.toString(),\r\n      partOfPage: sessionStorage.getItem(keyPartOfPage) ?? partOfPageDefault,\r\n      portalRoot: dialogContext.Site.Url,\r\n      tabId: this.context.tabId?.toString(),\r\n      systemRoot: window.location.pathname.split('/dist/')[0] + '/',\r\n      versioningOptions: this.getVersioningOptions(\r\n        sessionStorage.getItem(keyPartOfPage) === 'true',\r\n        sessionStorage.getItem(keyPublishing)\r\n      ),\r\n      formId,\r\n      isParentDialog,\r\n      itemGuids,\r\n      createMode,\r\n      isCopy,\r\n      enableHistory,\r\n      enableFormulaSave: dialogContext.Enable.FormulaSave ?? false,\r\n      removeEditRestrictions: dialogContext.Enable.OverrideEditRestrictions ?? false,\r\n      dialogContext,\r\n      settings,\r\n    };\r\n    this.configSignal.set(this.config);\r\n    this.language = this.languageService.getSignal(this.config.formId);\r\n  }\r\n\r\n  private getVersioningOptions(\r\n    partOfPage: boolean,\r\n    publishing: string\r\n  ): VersioningOptions {\r\n\r\n    const allowAll: VersioningOptions = { show: true, hide: true, branch: true };\r\n\r\n    if (!partOfPage)\r\n      return allowAll;\r\n\r\n    const publish = publishing || '';\r\n    switch (publish) {\r\n      case '':\r\n      case 'DraftOptional':\r\n        return allowAll;\r\n      case 'DraftRequired':\r\n        // Note: the key 'show' should not be added, as the code later picks the first property to set the default\r\n        // Branch should also be first, as it's the preferred option\r\n        return { branch: true, hide: true };\r\n      case 'DraftForbidden':\r\n        return { show: true };\r\n      default: {\r\n        console.error(`Invalid versioning requirements: ${publish}`);\r\n        return {};\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the language observable for the form - it will keep track of the current language as it changes.\r\n   * TODO: try to use the signal as much as possible\r\n    // TODO:: @2dg Question Languages as Signal\r\n   */\r\n  get language$(): Observable<FormLanguageComplete> {\r\n    return this._language$ ??= this.languageService.getLanguage$(this.config.formId);\r\n  }\r\n  private _language$: Observable<FormLanguageComplete>;\r\n\r\n}\r\n","import { Injectable, Signal } from '@angular/core';\r\nimport { map, Observable, shareReplay } from 'rxjs';\r\nimport { classLog } from '../../shared/logging';\r\nimport { mapUntilChanged } from '../../shared/rxJs/mapUntilChanged';\r\nimport { ComputedCacheHelper } from '../../shared/signals/computed-cache';\r\nimport { EntityReader } from '../shared/helpers';\r\nimport { SignalStoreObservableBase } from '../shared/store/signal-store-observable-base';\r\nimport { FormLanguage, FormLanguageComplete } from './form-languages.model';\r\n\r\nconst logSpecs = {\r\n  getReader: false,\r\n  getLanguage: false,\r\n  getReaderSignal: false,\r\n};\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FormLanguageService extends SignalStoreObservableBase<number, FormLanguageInStore> {\r\n\r\n  constructor() {\r\n    super(classLog({FormLanguageService}, logSpecs));\r\n  }\r\n\r\n  protected override getId = (item: FormLanguageInStore) => item.formId;\r\n\r\n  protected override sanitizeAdd = (item: FormLanguageInStore) => ({\r\n    ...FormLanguage.empty,\r\n    initial: item.current,\r\n    ...item\r\n  });\r\n\r\n  addForm(formId: number, primary: string, current: string, hideHeader: boolean): void {\r\n    this.add({\r\n      formId,\r\n      current,\r\n      initial: current,\r\n      primary,\r\n      hideHeader,\r\n    } satisfies FormLanguageInStore);\r\n  }\r\n\r\n  setCurrent(formId: number, newLanguage: string): void {\r\n    this.update(formId, { current: newLanguage } satisfies Partial<FormLanguageInStore>);\r\n  }\r\n\r\n  /**\r\n   * Get an EntityReader for the current form.\r\n   * ATM used in fields settings service.\r\n   * \r\n   * If the form doesn't exist, the reader returned will not have the correct languages specified.\r\n   * This is to avoid errors when the form is not yet loaded or is being unloaded.\r\n   */\r\n  getEntityReader(formId: number): Signal<EntityReader> {\r\n    const l = this.log.fnIf('getReader', { formId });\r\n    // Place creation of the language signal here to avoid creating it multiple times\r\n    const sig = this.#entityReaderCache.getOrCreateWithInfo(formId, () => {\r\n      const language = this.getSignal(formId)() ?? FormLanguage.empty();\r\n      const l2 = this.log.fnIf('getReaderSignal', { language });\r\n      return new EntityReader(language);\r\n    });\r\n    return l.rSilent(sig.signal, `isNew: ${sig.isNew}`);\r\n  }\r\n  #entityReaderCache = new ComputedCacheHelper<number, EntityReader>('entityReader');\r\n\r\n  // use in form config service for language$()\r\n  getLanguage$(formId: number): Observable<FormLanguageComplete> {\r\n    return this.cache$.pipe(\r\n      map(languageInstances => languageInstances[formId]),\r\n      mapUntilChanged(m => m),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  /** Get hideHeader for the form. Fix for safari and mobile browsers */\r\n  getHideHeaderSignal(formId: number): Signal<boolean> {\r\n    return this.#signalsHideHeaderCache.getOrCreate(formId, () => this.cache()[formId]?.hideHeader ?? false);\r\n  }\r\n  #signalsHideHeaderCache = new ComputedCacheHelper<number, boolean>('hideHeader');\r\n\r\n\r\n  /** Update hideHeader for the form. Fix for safari and mobile browsers */\r\n  updateHideHeader(formId: number, hideHeader: boolean): void {\r\n    this.update(formId, { hideHeader } satisfies Partial<FormLanguageInStore>);\r\n  }\r\n}\r\n\r\nexport interface FormLanguageInStore extends FormLanguageComplete {\r\n  formId: number;\r\n  hideHeader: boolean;\r\n}\r\n","import { Language } from '../../shared/models/language.model';\r\n\r\nexport { Language } from '../../shared/models/language.model';\r\n\r\nexport class FormLanguage\r\n{\r\n  /** The current language of the system / UI. */\r\n  current: string;\r\n\r\n  /** The primary language of the system.\r\n   * Important, because the primary language must be filled in before all other languages.\r\n   */\r\n  primary: string;\r\n\r\n  /**\r\n   * In some cases we want both to be primary, but it's not clear why.\r\n   * I think it's just because we want certain tests to only use one value, but the test is meant for 2 values.\r\n   */\r\n  static bothPrimary(original: FormLanguage): FormLanguage {\r\n    return {\r\n      current: original.primary,\r\n      primary: original.primary\r\n    };\r\n  }\r\n\r\n  static diffCurrent(original: FormLanguage, current: string): FormLanguage {\r\n    return {\r\n      current: current,\r\n      primary: original.primary\r\n    };\r\n  }\r\n\r\n  static empty(): FormLanguageComplete {\r\n    return {\r\n      current: '',\r\n      primary: '',\r\n      initial: '',\r\n    };\r\n  }\r\n}\r\n\r\nexport class FormLanguageComplete extends FormLanguage {\r\n  /** initial language of the UI */\r\n  initial: string;\r\n}\r\n\r\nexport interface FormLanguagesConfig\r\n{\r\n  initial: string;\r\n  primary: string;\r\n  list: Language[];\r\n}\r\n\r\n","import { FormLanguage } from '../form/form-languages.model';\r\nimport { EavDimension } from '../shared/models/eav';\r\n\r\n\r\nexport class DimensionReader {\r\n  constructor(private dimensions: EavDimension[], private language: FormLanguage) { }\r\n\r\n  get hasCurrentWrite(): boolean {\r\n    const match = this.dimensions.find(d => d.Value === this.language.current\r\n      || (this.language.current === this.language.primary && d.Value === '*'));\r\n    return !!match;\r\n  }\r\n\r\n  get hasCurrentReadOnly(): boolean {\r\n    const currentRO = `~${this.language.current}`;\r\n    return this.dimensions.find(d => d.Value === currentRO) !== undefined;\r\n  }\r\n\r\n  get hasCurrent(): boolean {\r\n    const match = this.dimensions.find(d => d.Value === this.language.current\r\n      || d.Value === `~${this.language.current}`\r\n      || (this.language.current === this.language.primary && d.Value === '*'));\r\n    return !!match;\r\n  }\r\n}\r\n","import { FormLanguage } from '../form/form-languages.model';\r\nimport { EavField, EavValue } from '../shared/models/eav';\r\nimport { DimensionReader } from './dimension-reader';\r\nimport { classLog } from '../../shared/logging';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  constructor: false,\r\n};\r\n\r\nexport class FieldReader<T = any> {\r\n  \r\n  log = classLog({FieldReader}, logSpecs);\r\n\r\n  constructor(field: EavField<T>, language: string);\r\n  constructor(field: EavField<T>, language: FormLanguage);\r\n  constructor(field: EavField<T>, language: FormLanguage | string) {\r\n    this.log.fnIf('constructor', { field, language });\r\n    this.#field = field;\r\n    this.#language = typeof language === 'string' ? { current: language, primary: language } : language;\r\n    this.#values = field?.Values ?? [];\r\n    this.#noData = !field || !field.Values || field.Values.length === 0;\r\n  }\r\n\r\n  #noData = true;\r\n\r\n  #field: EavField<T>;\r\n  /** Values - never empty for read-safety */\r\n  #values: EavValue<T>[];\r\n  #language: FormLanguage;\r\n\r\n  get current(): EavValue<T> | null {\r\n    return this.ofLanguage(this.#language); // first match if any is the one we're looking for\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Priority:\r\n   * 1. value for current language\r\n   * 2. value for all languages\r\n   * 3. value for default language\r\n   *\r\n   * @readonly\r\n   * @type {EavValue<T>}\r\n   * @memberof FieldReader\r\n   */\r\n  get currentOrDefault(): EavValue<T> {\r\n    if (this.#noData) return null;\r\n    return this.current\r\n      // note that having both languages primary will also result in checking the '*' dimension\r\n      ?? this.ofLanguage(FormLanguage.bothPrimary(this.#language));\r\n  }\r\n\r\n  /**\r\n   * Priority:\r\n   * 1. value for current language\r\n   * 2. value for all languages\r\n   * 3. value for default language\r\n   * 4. first/any value in the system\r\n   */\r\n  get currentOrDefaultOrAny(): EavValue<T> | null {\r\n    if (this.#noData) return null;\r\n    return this.currentOrDefault ?? this.#values[0] ?? null;\r\n  }\r\n\r\n\r\n  ofLanguage(language: FormLanguage): EavValue<T> | null {\r\n    if (this.#noData) return null;\r\n    return this.#values.filter(val => new DimensionReader(val.Dimensions, language).hasCurrent)[0] ?? null;\r\n  }\r\n\r\n  /** Check if there is a value on the specified primary language or on the '*' dimension */\r\n  get hasPrimary(): boolean {\r\n    if (this.#noData) return false;\r\n    const primary = this.#language.primary;\r\n    return this.#values.filter(val => val.Dimensions.find(d => d.Value === primary || d.Value === '*')).length > 0;\r\n  }\r\n\r\n  get hasCurrentReadonly(): boolean {\r\n    if (this.#noData) return false;\r\n    return this.#values.filter(val => new DimensionReader(val.Dimensions, this.#language).hasCurrentReadOnly).length > 0;\r\n  }\r\n\r\n  /** A value in specified Language is editable, if assigned to current language or to '*' (but only when on default-language) */\r\n  get hasEditableValues(): boolean {\r\n    if (this.#noData) return false;\r\n    return this.#valuesEditableOf().length > 0;\r\n  }\r\n\r\n  /** Number of editable translatable fields that */\r\n  countEditable(): number {\r\n    return this.#valuesEditableOf().length;\r\n  }\r\n\r\n  /** Number of editable translatable fields that have some content (not empty/null) */\r\n  countEditableWithContents(): number {\r\n    return this.#valuesEditableOf().filter(v => v.Value != \"\" && v.Value != null)?.length;\r\n  }\r\n\r\n  /**\r\n   * Values of a field are for the current language,\r\n   * if they are assigned to the current language or to '*' (but only when the current-language is also the primary-language)\r\n   */\r\n  #valuesEditableOf(language?: FormLanguage): EavValue<T>[] {\r\n    if (this.#noData) return [];\r\n    language ??= this.#language;\r\n    return this.#values.filter(val => new DimensionReader(val.Dimensions, language).hasCurrentWrite);\r\n  }\r\n\r\n  /** Value of current language which is editable. `null` if not found. */\r\n  get currentEditable(): EavValue<T> {\r\n    if (this.#noData) return null;\r\n    const dimension = this.#language.current;\r\n    return this.#values.find(v => v.Dimensions.find(x => x.Value === dimension)) ?? null;\r\n  }\r\n\r\n  isEditableOrReadonlyTranslationExist(): boolean {\r\n    if (this.#noData) return false;\r\n    return this.#valuesEditableOf().length > 0;\r\n  }\r\n\r\n}\r\n","export class FileTypeHelpers {\r\n  private static defaultIcon = 'file';\r\n  private static customExtensions: Record<string, string> = {\r\n    doc: 'file-word',\r\n    docx: 'file-word',\r\n    xls: 'file-excel',\r\n    xlsx: 'file-excel',\r\n    ppt: 'file-powerpoint',\r\n    pptx: 'file-powerpoint',\r\n    pdf: 'file-pdf',\r\n    mp3: 'file-audio',\r\n    avi: 'file-video',\r\n    mpg: 'file-video',\r\n    mpeg: 'file-video',\r\n    mov: 'file-video',\r\n    mp4: 'file-video',\r\n    zip: 'file-archive',\r\n    rar: 'file-archive',\r\n    txt: 'file-text',\r\n    html: 'file-code',\r\n    css: 'file-code',\r\n    xml: 'file-code',\r\n    xsl: 'file-code',\r\n  };\r\n  private static matExtensions: Record<string, string> = {\r\n    vcf: 'person',\r\n  };\r\n\r\n  static getExtension(filename: string) {\r\n    return filename.substring(filename.lastIndexOf('.') + 1).toLocaleLowerCase();\r\n  }\r\n\r\n  static getIconClass(filename: string) {\r\n    const ext = this.getExtension(filename);\r\n    return this.matExtensions[ext] || this.customExtensions[ext] || this.defaultIcon;\r\n  }\r\n\r\n  static isKnownType(filename: string) {\r\n    return this.matExtensions[this.getExtension(filename)] != null;\r\n  }\r\n\r\n  static isImage(filename: string) {\r\n    return this.isImgRegex().test(filename);\r\n  }\r\n\r\n  private static isImgRegex() {\r\n    return /(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*\\.(?:jpg|jpeg|gif|png|webp))(?:\\?([^#]*))?(?:#(.*))?/i;\r\n  }\r\n}\r\n","import { classLog } from '../../../shared/logging';\r\nimport { FormLanguage } from '../../form/form-languages.model';\r\nimport { FieldReader } from '../../localization/field-reader';\r\nimport { ItemValuesOfLanguage } from '../../state/item-values-of-language.model';\r\nimport { EavEntity, EavEntityAttributes, EavField } from '../models/eav';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  constructor: false,\r\n};\r\n\r\nexport class EntityReader implements FormLanguage {\r\n  \r\n  log = classLog({EntityReader}, logSpecs);\r\n\r\n  /** @inheritdoc */\r\n  public current: string;\r\n  /** @inheritdoc */\r\n  public primary: string;\r\n\r\n  constructor(formLanguage: FormLanguage);\r\n  constructor(current: string, primary: string);\r\n  constructor(current: FormLanguage | string, primary?: string) {\r\n    this.log.fnIf('constructor', { current, primary });\r\n    if (typeof current === 'string') {\r\n      this.current = current;\r\n      this.primary = primary;\r\n    } else {\r\n      this.current = current.current;\r\n      this.primary = current.primary;\r\n    }\r\n  }\r\n\r\n  // WIP - to make code clearer, this is what should be used from now on\r\n  // But we'll probably end up calling this from the EntityReader only, so it should be straight forward\r\n  getBestValue<T>(attributeValues: EavField<T>, defaultValue: T = null): T {\r\n    const fieldReader = new FieldReader<T>(attributeValues, this);\r\n    return fieldReader.currentOrDefaultOrAny?.Value ?? defaultValue;\r\n    // return LocalizationHelpers.translate<T>(this, attributeValues as EavField<T>, defaultValue);\r\n  }\r\n\r\n  public flatten<T>(metadata: EavEntity | EavEntity[]): T {\r\n    if (metadata == null)\r\n      return {} as T;\r\n\r\n    const metadataItems = Array.isArray(metadata) ? metadata : [metadata];\r\n    if (metadataItems.length === 0 || metadataItems[0] == null)\r\n      return {} as T;\r\n\r\n    const merged: Record<string, any> = {};\r\n    // copy metadata settings which are not @All\r\n    for (const item of metadataItems) {\r\n      if (item.Type.Id === '@All') continue;\r\n\r\n      for (const [name, values] of Object.entries(item.Attributes)) {\r\n        const value = this.getBestValue(values);\r\n        merged[name] = value;\r\n      }\r\n    }\r\n\r\n    // copy @All metadata settings, overwriting previous settings\r\n    for (const item of metadataItems) {\r\n      if (item.Type.Id !== '@All') continue;\r\n\r\n      for (const [name, values] of Object.entries(item.Attributes)) {\r\n        const value = this.getBestValue(values);\r\n        // do not overwrite previous settings if @All is empty\r\n        const exists = merged[name] != null;\r\n        const emptyAll = value == null || value === '';\r\n        if (exists && emptyAll) continue;\r\n\r\n        merged[name] = value;\r\n      }\r\n    }\r\n\r\n    return merged as T;\r\n  }\r\n\r\n  currentValues(itemAttributes: EavEntityAttributes): ItemValuesOfLanguage {\r\n\r\n    const formValues: ItemValuesOfLanguage = Object.entries(itemAttributes)\r\n      .reduce((acc, [name, values]) => {\r\n        acc[name] = this.getBestValue(values);\r\n        return acc;\r\n      }, {} as ItemValuesOfLanguage);\r\n\r\n    return formValues;\r\n  }\r\n\r\n}\r\n","import { Injectable, Injector, Signal, computed, effect, inject, signal } from '@angular/core';\r\nimport { IFieldMask } from '../../../../../../edit-types/src/IFieldMask';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { ServiceBase } from '../../../shared/services/service-base';\r\nimport { FieldState } from '../../fields/field-state';\r\nimport { FormConfigService } from '../../form/form-config.service';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  initSignal: false,\r\n  watchAllFields: true,\r\n}\r\n\r\nconst dataPrefix = 'data';\r\nconst FieldsFindNoPrefix = /\\[.*?\\]/ig;\r\nconst FieldsFindPrefix = /\\[[a-zA-Z]+\\:.*?\\]/ig;\r\nconst FieldUnwrap = /[\\[\\]]/ig;\r\n\r\n/**\r\n * Create a new FieldMask instance and access result with resolve\r\n * @example\r\n * const mask = new FieldMask(\"[FirstName]\", formGroup.controls);\r\n * const maskValue = mask.resolve();\r\n *\r\n * @param mask a string like \"[FirstName] [LastName]\"\r\n * @param model usually FormGroup controls, passed into here\r\n * @param overloadPreCleanValues a function which will \"scrub\" the found field-values\r\n */\r\n\r\n@Injectable()\r\nexport class FieldMask extends ServiceBase implements IFieldMask /* for field-change subscription */ {\r\n  \r\n  log = classLog({FieldMask}, logSpecs);\r\n\r\n  #fieldState = inject(FieldState);\r\n  #formConfig = inject(FormConfigService);\r\n\r\n  constructor(private injector: Injector) {\r\n    super();\r\n    this.log.a('constructor');\r\n  }\r\n\r\n  /**\r\n   * The result of the mask as a signal, for external use/subscribing.\r\n   */\r\n  public result = signal<string>('');\r\n\r\n  #controls = this.#fieldState.group.controls;\r\n  #fieldConfig = this.#fieldState.config;\r\n  #requirePrefix = false;\r\n\r\n  /**\r\n   * The mask as a signal.\r\n   * This allows us to use a simple value or a possibly runtime-changing mask. \r\n   */\r\n  #maskSignal = signal<Signal<string>>(signal<string>(''));\r\n\r\n  /**\r\n   * The final mask to use - either picking the signal or the text\r\n   * TODO: we should be able to simplify this to just use a signal\r\n   */\r\n  #mask = computed(() => this.#maskSignal()());\r\n\r\n  /** Fields used in the mask */\r\n  #fieldsUsedInMask = computed(() => this.#extractFieldNames(this.#mask()));\r\n\r\n  // #fieldValuesSignals = inject(FieldsSettingsService).fieldValues;\r\n\r\n  // // TODO create a multi-field signal?\r\n\r\n  // public result2 = computed(() => {\r\n  //   // listen to all the fields for changes\r\n  //   this.#fieldsUsedInMask().forEach(field => {\r\n\r\n  //   });\r\n  // });\r\n\r\n\r\n  /**\r\n   * Attach any processing events before the mask is resolved the first time\r\n   */\r\n  public initPreClean(overloadPreCleanValues: (key: string, value: string) => string): this {\r\n    this.log.a('initPreClean');\r\n    this.preClean = overloadPreCleanValues;\r\n    return this;\r\n  }\r\n\r\n  public init(name: string, mask: string, requirePrefix: boolean = false): this {\r\n    return this.initSignal(name, signal(mask));\r\n  }\r\n\r\n  public initSignal(name: string, mask: Signal<string>): this {\r\n    this.log.extendName(`-${name}`);\r\n    const l = this.log.fnIf('initSignal', { name, mask });\r\n    this.#maskSignal.set(mask);\r\n    this.#updateMaskFinal();\r\n    return l.r(this, 'first result:' + this.result());\r\n  }\r\n\r\n  /**\r\n   * Activate an aggressive change logger to debug what's happening.\r\n   * Should only be used in development, as it will log a lot of data to the console.\r\n   */\r\n  public logChanges(): this {\r\n    // use logger, but if not enabled, create new just for this\r\n    const l = this.log.enabled ? this.log : classLog({FieldMask});\r\n    effect(() => l.a(`Mask '${this.#mask()}' value changed to: ${this.result()}`), { injector: this.injector });\r\n    return this;\r\n  }\r\n\r\n  #updateMaskFinal() {\r\n    // bind auto-watch only if needed...\r\n    // otherwise it's just on-demand\r\n    this.#watchAllFields();\r\n    this.#onChange();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Process a mask to the get the final value\r\n   */\r\n  #process(): string {\r\n\r\n    // if no mask, exit early\r\n    if (!hasPlaceholders(this.#mask()))\r\n      return this.#mask();\r\n\r\n    let value = lowercaseInsideSquareBrackets(this.#mask());\r\n\r\n    // If we have form info (which we usually do), replace the placeholders\r\n    if (this.#formConfig != null)\r\n      value = value\r\n        .replace('[app:appid]', this.#formConfig.config.appId.toString())\r\n        .replace('[app:zoneid]', this.#formConfig.config.zoneId.toString());\r\n\r\n    // If we have field info (which we usually do), replace the placeholders\r\n    if (this.#fieldConfig != null)\r\n      value = value\r\n        .replace('[guid]', this.#fieldConfig.entityGuid)\r\n        .replace('[data:guid]', this.#fieldConfig.entityGuid)\r\n        .replace('[id]', this.#fieldConfig.entityId.toString())\r\n        .replace('[data:id]', this.#fieldConfig.entityId.toString());\r\n\r\n    const dataPlaceholders = this.#fieldsUsedInMask().data;\r\n    if (!dataPlaceholders)\r\n      return value;\r\n\r\n    dataPlaceholders.forEach((e, i) => {\r\n      const replaceValue = this.#controls?.[e]?.value ?? '';\r\n      const cleaned = this.preClean(e, replaceValue);\r\n      // New with prefix 'data:'\r\n      value = value.replace('[data:' + e.toLowerCase() + ']', cleaned);\r\n      // Old without prefix - only if allowed (for compatibility)\r\n      value = value.replace('[' + e.toLowerCase() + ']', cleaned);\r\n    });\r\n    return value;\r\n  }\r\n\r\n  /** Retrieves a list of all fields used in the mask */\r\n  #extractFieldNames(mask: string): Record<string, string[]> {\r\n    // exit early if mask very simple or not a mask\r\n    if (!mask || !hasPlaceholders(mask))\r\n      return {};\r\n\r\n    const matches = mask.match(FieldsFindNoPrefix);\r\n    \r\n    if (!matches)\r\n      return {};\r\n    \r\n    const fields: string[] = matches.map(token => token.replace(FieldUnwrap, ''));\r\n    return { data: fields };\r\n  }\r\n\r\n  /**\r\n   * Default preClean function, if no other function was specified for this\r\n   * Will be replaced if need be.\r\n   */\r\n  private preClean(key: string, value: string): string { return value; }\r\n\r\n  /** Change-event - will only fire if it really changes */\r\n  #onChange() {\r\n    const maybeNew = this.#process();\r\n    this.result.set(maybeNew);\r\n  }\r\n\r\n  /**\r\n   * Add watcher and execute onChange.\r\n   * Uses observables, since that's what angular provides on valueChanges.\r\n   */\r\n  #watchAllFields() {\r\n    const l = this.log.fnIf('watchAllFields');\r\n    const dataPlaceholders = this.#fieldsUsedInMask().data;\r\n    if (!dataPlaceholders)\r\n      return l.end('no data placeholders');\r\n\r\n    // add a watch for each field in the field-mask\r\n    const controls = dataPlaceholders\r\n      .map(f => this.#controls[f])\r\n      .filter(f => f != null);\r\n\r\n    if (controls.length == 0)\r\n      return l.end('no fields to watch');\r\n\r\n    controls.forEach(c => this.subscriptions.add(c.valueChanges.subscribe(_ => this.#onChange())));\r\n    l.end();\r\n  }\r\n}\r\n\r\n\r\nfunction hasPlaceholders(mask: string): boolean {\r\n  return (mask ?? '').includes('[');\r\n}\r\n\r\n/** used for query parameters */\r\nfunction lowercaseInsideSquareBrackets(value: string) {\r\n  return value.replace(/\\[([^\\]]+)\\]/g, (_, group) => `[${group.toLowerCase()}]`);\r\n}\r\n","export * from './field-mask.helper';\r\nexport * from '../../state/fields-settings.helpers';\r\nexport * from './entity-reader';\r\nexport * from '../adam/file-type.helpers';\r\nexport * from '../input-types/input-field.helpers';\r\nexport * from '../../fields/page-picker/page-picker.helper';\r\nexport * from './sanitize.helper';\r\nexport * from './url.helpers';\r\n","export class SanitizeHelper {\r\n\r\n  private static removeFromStart(sanitized: string, charToRemove: string): string {\r\n    // check for undefined\r\n    if (!sanitized) { return sanitized; }\r\n\r\n    while (sanitized.substring(0, 1) === charToRemove) {\r\n      sanitized = sanitized.substring(1);\r\n    }\r\n    return sanitized;\r\n  }\r\n\r\n  private static removeFromEnd(sanitized: string, charToRemove: string): string {\r\n    // check for undefined\r\n    if (!sanitized) { return sanitized; }\r\n\r\n    while (sanitized.substring(sanitized.length - 1, sanitized.length) === charToRemove) {\r\n      sanitized = sanitized.substring(0, sanitized.length - 1);\r\n    }\r\n    return sanitized;\r\n  }\r\n\r\n  private static cleanBadPath(sanitized: string): string {\r\n    // check for undefined\r\n    if (!sanitized) { return sanitized; }\r\n\r\n    const goodChar = '_';\r\n    const illegalRe = /[\\?<>\\\\:\\*\\|\":]/g;\r\n    const controlRe = /[\\x00-\\x1f\\x80-\\x9f]/g;\r\n    const reservedRe = /^\\.+$/;\r\n    const windowsReservedRe = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\\..*)?$/i;\r\n    const windowsTrailingRe = /[\\. ]+$/;\r\n    return sanitized\r\n      .replace(illegalRe, goodChar)\r\n      .replace(controlRe, goodChar)\r\n      .replace(reservedRe, goodChar)\r\n      .replace(windowsReservedRe, goodChar)\r\n      .replace(windowsTrailingRe, goodChar);\r\n  }\r\n\r\n  // sanitize path\r\n  static sanitizePath(sanitized: string): string {\r\n    // check for undefined\r\n    if (!sanitized) { return sanitized; }\r\n\r\n    // remove slashes form start of path\r\n    sanitized = this.removeFromStart(sanitized, '\\/');\r\n\r\n    // remove slashed form end of path\r\n    sanitized = this.removeFromEnd(sanitized, '\\/');\r\n\r\n    // remove backslashes form start of path\r\n    sanitized = this.removeFromStart(sanitized, '\\\\');\r\n\r\n    // remove backslashes form end of path\r\n    sanitized = this.removeFromEnd(sanitized, '\\\\');\r\n\r\n    // replace bad\r\n    sanitized = this.cleanBadPath(sanitized);\r\n\r\n    return sanitized;\r\n  }\r\n\r\n  // sanitize file or folder name\r\n  static sanitizeName(sanitized: string): string {\r\n    // check for undefined\r\n    if (!sanitized) { return sanitized; }\r\n\r\n    // in addition to all path validation rules\r\n    // slashes are not valid in file or folder name\r\n    const replacement = '_';\r\n    const illegalRe = /\\//g;\r\n    return this.sanitizePath(sanitized).replace(illegalRe, replacement);\r\n  }\r\n}\r\n","import { Of } from '../../../../../../core';\r\nimport { FieldSettings } from '../../../../../../edit-types/src/FieldSettings';\r\nimport { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport { InputTypeCatalog } from '../../../shared/fields/input-type-catalog';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { ItemIdentifierShared } from '../../../shared/models/edit-form.model';\r\n\r\n/**\r\n * Get the field initial / default value, incl. the prefilled value if available.\r\n */\r\nexport class FieldDefaults {\r\n\r\n  log = classLog({FieldDefaults});\r\n\r\n  constructor(\r\n    private name: string,\r\n    private inputType: Of<typeof InputTypeCatalog>,\r\n    private settings: FieldSettings,\r\n    private itemHeader?: Pick<ItemIdentifierShared, \"Prefill\">,\r\n  ) { }\r\n\r\n  /** Include itemHeader if you need data from prefill, and set onlyPrefill if you only need parsed prefill */\r\n  getDefaultOrPrefillValue(onlyPrefill?: boolean): FieldValue {\r\n\r\n    const inputType = this.inputType;\r\n    const name = this.name;\r\n    const settings = this.settings;\r\n    const itemHeader = this.itemHeader;\r\n    const l = this.log.fn('parseDefaultValue', { name, inputType, settings, itemHeader, onlyPrefill });\r\n\r\n    const prefillRaw = itemHeader?.Prefill?.[name];\r\n    if (onlyPrefill && prefillRaw === undefined)\r\n      return l.rNull('only prefill, but no prefill data found');\r\n\r\n    let defaultValue = prefillRaw?.toString() ?? settings.DefaultValue;\r\n\r\n    l.values({ defaultValue });\r\n\r\n    switch (inputType) {\r\n      case InputTypeCatalog.BooleanDefault:\r\n        return defaultValue?.toLowerCase() === 'true';\r\n      case InputTypeCatalog.BooleanTristate:\r\n        return defaultValue != null && defaultValue !== ''\r\n          ? defaultValue.toLowerCase() === 'true'\r\n          : null;\r\n      case InputTypeCatalog.DateTimeDefault:\r\n        return defaultValue != null && defaultValue !== ''\r\n          ? new Date(defaultValue).toJSON()\r\n          : null;\r\n      case InputTypeCatalog.NumberDefault:\r\n      case InputTypeCatalog.NumberDropdown:\r\n      case InputTypeCatalog.NumberPicker:\r\n        return defaultValue != null && defaultValue !== ''\r\n          ? !isNaN(Number(defaultValue)) ? Number(defaultValue) : null\r\n          : null;\r\n      case InputTypeCatalog.EntityDefault:\r\n      case InputTypeCatalog.EntityQuery:\r\n      case InputTypeCatalog.EntityContentBlocks:\r\n      case InputTypeCatalog.EntityPicker:\r\n        // Empty - return []\r\n        if (defaultValue == null || defaultValue === '')\r\n          return [];\r\n\r\n        // string has { } characters, we must switch them to quotes for parsing below\r\n        // 2024-06-01 2dm not sure why this is an option..., maybe some interim encoding?\r\n        if (defaultValue.includes('{'))\r\n          defaultValue = defaultValue.replace(/[\\{\\}]/g, '\\\"');\r\n\r\n        // list but no array, add brackets\r\n        if (defaultValue.includes(',') && !defaultValue.includes('[')) {\r\n          const guids = defaultValue.split(',').map(guid => guid.trim());\r\n          defaultValue = JSON.stringify(guids);\r\n        }\r\n\r\n        // Finally parse\r\n        return defaultValue.startsWith('[') // an array with guid strings\r\n          ? JSON.parse(defaultValue) // if it's a string containing an array\r\n          : [defaultValue.replace(/\"/g, '')]; // just a guid string, but might have quotes\r\n      default:\r\n        return defaultValue ?? '';\r\n    }\r\n  }\r\n}\r\n","import { Signal } from '@angular/core';\r\nimport { ComputedCacheHelper } from '../../../shared/signals/computed-cache';\r\nimport { computedObj, signalObj } from '../../../shared/signals/signal.utilities';\r\nimport { classLog, ClassLogger } from '../../../shared/logging';\r\n\r\n/**\r\n * Signal based store for any kind of data which is accessed by a key.\r\n * - The data type is generic.\r\n * - The key type can be customized.\r\n * - Standard get/add/remove methods exist, and can be augmented by the inheriting store.\r\n */\r\nexport abstract class SignalStoreBase<TKey extends string | number, TValue> {\r\n  \r\n  protected log: ClassLogger;\r\n\r\n  constructor(log: ClassLogger) {\r\n    this.log = log ?? classLog({SignalStoreBase});\r\n    this.log.a('SignalStoreBase created');\r\n    this.name = this.log.name;\r\n  }\r\n  \r\n  /** Main Cache */\r\n  #cache = signalObj<Record<TKey, TValue>>('cache', {} as Record<TKey, TValue>);\r\n\r\n  /** Cached version of the list, with the latest object-values */\r\n  #list = computedObj('list', () => Object.values(this.#cache()) as TValue[]);\r\n\r\n  /** Cache for the inheriting classes, but as read-only */\r\n  protected get cache(): Signal<Record<TKey, TValue>> { return this.#cache; }\r\n\r\n  /** List for the inheriting classes, but as read-only */\r\n  protected get list(): Signal<TValue[]> { return this.#list; }\r\n\r\n  /**\r\n   * Function to get the key / id for storing in the cache.\r\n   * Default is to get the 'id' property of the item.\r\n   * This should be overriden in the inheriting class.\r\n   */\r\n  protected getId: (item: TValue) => TKey = (item) => (item as any).id as TKey;\r\n\r\n  protected sanitizeAdd: (item: TValue) => TValue = (item) => item;\r\n\r\n  name: string;\r\n\r\n\r\n  //#region Add / Update / Remove / Clear Cache\r\n\r\n  add(item: TValue): void {\r\n    const l = this.log.fn('add', { item });\r\n    if (!item)\r\n      return l.end('item is null');\r\n\r\n    // add to signal\r\n    this.#cache.set({\r\n      ...this.#cache(),\r\n      [this.getId(item)]: this.sanitizeAdd(item)\r\n    });\r\n    l.end('added');\r\n  }\r\n\r\n  addMany(items: TValue[]): void {\r\n    var l = this.log.fn('addMany', { items });\r\n    if (!items || items.length == 0)\r\n      return l.end('items is null or empty');\r\n\r\n    // also add to signal, but in one go\r\n    const result = items.reduce((acc, item) => ({\r\n      ...acc,\r\n      [this.getId(item)]: this.sanitizeAdd(item)\r\n    }), { ...this.#cache() });\r\n    \r\n    this.#cache.set(result);\r\n    l.end('added');\r\n  }\r\n\r\n  update(id: TKey, item: Partial<TValue>): void {\r\n    const l = this.log.fn('update', { id, item });\r\n    if (!id || !item)\r\n      return l.end('id or item is null');\r\n\r\n    const before = this.get(id);\r\n    if (!before)\r\n      return l.end(`Item with id ${id} not found in store`);\r\n\r\n    // merge\r\n    const newItem = { ...before, ...item };\r\n\r\n    // add to signal\r\n    this.#cache.set({\r\n      ...this.#cache(),\r\n      [id]: newItem\r\n    });\r\n    l.end('updated');\r\n  }\r\n\r\n  remove(id: TKey): void {\r\n    const l = this.log.fn('remove', { id });\r\n    const { [id]: _, ...updatedStore } = this.#cache();\r\n    this.#cache.set(updatedStore as Record<TKey, TValue>);\r\n    l.end('removed');\r\n  }\r\n\r\n  clearCache(): void {\r\n    const l = this.log.fn('clearCache');\r\n    this.#cache.set({} as Record<TKey, TValue>);\r\n    l.end('cleared');\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Now-Getters\r\n\r\n  get(id: TKey): TValue {\r\n    const result = this.#cache()[id];\r\n    this.log.a(`get(${id}) - ` + (result == null ? 'not' : '') + 'found');\r\n    return result;\r\n  }\r\n\r\n  getAll(): TValue[] {\r\n    const result = this.#list();\r\n    this.log.a('getAll() - ' + `found ${result.length} items`);\r\n    return result;\r\n  }\r\n\r\n  getMany(ids: TKey[]): TValue[] {\r\n    const l = this.log.fn('getMany', { ids });\r\n    const result = ids\r\n      .map(id => this.#cache()[id])\r\n      .filter(item => item != null);\r\n    return l.r(result, `found ${result.length} items`);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Signal Getters\r\n\r\n  getSignal(id: TKey): Signal<TValue> {\r\n    const result = this.#itemSignalsCache.getOrCreateWithInfo(id, () => this.get(id));\r\n    this.log.a(`getSignal(${id})`, { isNew: result.isNew });\r\n    return result.signal;\r\n  }\r\n  #itemSignalsCache = new ComputedCacheHelper<TKey, TValue>('item');\r\n\r\n\r\n  getManySignal(ids: TKey[]): Signal<TValue[]> {\r\n    const sig = computedObj('getMany', () => ids.map(id => this.get(id)).filter(item => item != null));\r\n    this.log.a('getManySignal()', { ids });\r\n    return sig;\r\n  }\r\n\r\n  getAllSignal(): Signal<TValue[]> {\r\n    const list = this.#list;\r\n    this.log.a(`getAllSignal() - found ${list().length} items`);\r\n    return list;\r\n  }\r\n\r\n  //#endregion\r\n\r\n}\r\n","import { toObservable } from '@angular/core/rxjs-interop';\r\nimport { SignalStoreBase } from './signal-store-base';\r\nimport { Observable } from 'rxjs';\r\nimport { mapUntilChanged } from '../../../shared/rxJs/mapUntilChanged';\r\n\r\nexport abstract class SignalStoreObservableBase<TKey extends string | number, TValue> extends SignalStoreBase<TKey, TValue> {\r\n\r\n  /** Old / existing functionality with observables */\r\n  #cache$ = toObservable(this.cache);\r\n\r\n  #list$ = toObservable(this.list);\r\n\r\n  // publish only as a read-only signal\r\n  protected get cache$(): Observable<Record<TKey, TValue>> {\r\n    return this.#cache$;\r\n  }\r\n\r\n  protected get list$(): Observable<TValue[]> {\r\n    return this.#list$;\r\n  }\r\n\r\n  getList$(): Observable<TValue[]> {\r\n    return this.list$;\r\n  }\r\n\r\n  getMany$(ids?: TKey[]): Observable<TValue[]> {\r\n    return this.cache$.pipe(\r\n      mapUntilChanged(obj => ids.map(id => obj[id]).filter(m => m != null)),\r\n    );\r\n  }\r\n\r\n}","import { ItemIdentifierEditConfig } from '../../shared/models/edit-form.model';\r\nimport { FormLanguage } from '../form/form-languages.model';\r\nimport { FieldReader } from '../localization/field-reader';\r\nimport { EntityReader } from '../shared/helpers';\r\nimport { EavContentType } from '../shared/models/eav';\r\nimport { ContentTypeSettings } from './content-type-settings.model';\r\n\r\nexport class ContentTypeSettingsHelpers {\r\n\r\n  /**\r\n   * Initialize the default settings of a ContentType to ensure everything is set or empty-string etc.\r\n   * @returns \r\n   */\r\n  static getDefaultSettings(reader: EntityReader, contentType: EavContentType, itemHeader: ItemIdentifierEditConfig): ContentTypeSettings {\r\n    const metadata = reader.flatten<ContentTypeSettings>(contentType.Metadata);\r\n    const defaultSettings = { ...metadata };\r\n    defaultSettings.Description ??= '';\r\n    defaultSettings.EditInstructions ??= '';\r\n    defaultSettings.Features ??= '';\r\n    defaultSettings.Label ??= '';\r\n    defaultSettings.ListInstructions ??= '';\r\n    defaultSettings.Notes ??= '';\r\n    defaultSettings.Icon ??= '';\r\n    defaultSettings.Link ??= '';\r\n    defaultSettings._itemTitle = this.getTitle(contentType, reader);\r\n    defaultSettings._slotCanBeEmpty = itemHeader.IsEmptyAllowed ?? false;\r\n    defaultSettings._slotIsEmpty = itemHeader.IsEmpty ?? false;\r\n    return defaultSettings;\r\n  }\r\n\r\n  static getTitle(contentType: EavContentType, language: FormLanguage): string {\r\n    try {\r\n      // xx ContentType is a historic bug and should be fixed when JSONs are rechecked\r\n      const type = contentType.Metadata.find(metadata => metadata.Type.Name === 'ContentType' || metadata.Type.Name === 'xx ContentType');\r\n      let label = (type)\r\n        ? new FieldReader(type.Attributes.Label, language).currentOrDefault?.Value\r\n        : null;\r\n      label = label || contentType.Name;\r\n      return label;\r\n    } catch (error) {\r\n      return contentType.Name;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n","export const InputTypeCatalog = {\r\n  // Boolean\r\n  BooleanDefault: 'boolean-default',\r\n  BooleanTristate: 'boolean-tristate',\r\n\r\n  // Custom\r\n  CustomDefault: 'custom-default',\r\n  CustomGps: 'custom-gps',\r\n  CustomJsonEditor: 'custom-json-editor',\r\n\r\n  // Date / Time\r\n  DateTimeDefault: 'datetime-default',\r\n\r\n  DefaultSuffix: '-default',\r\n\r\n  // Empty\r\n  EmptyDefault: 'empty-default',\r\n  EmptyEnd: 'empty-end',\r\n  EmptyMessage: 'empty-message',\r\n\r\n  // Entity - all pickers\r\n  EntityContentBlocks: 'entity-content-blocks',\r\n  EntityDefault: 'entity-default',\r\n  EntityQuery: 'entity-query',\r\n\r\n  // External\r\n  ExternalWebComponent: 'external-web-component',\r\n\r\n  // Hyperlink / File\r\n  HyperlinkDefault: 'hyperlink-default',\r\n  HyperlinkLibrary: 'hyperlink-library',\r\n\r\n  // Numbers\r\n  NumberDefault: 'number-default',\r\n  NumberDropdown: 'number-dropdown', // picker\r\n\r\n  // String\r\n  StringDefault: 'string-default',\r\n  StringDropdown: 'string-dropdown', // picker\r\n  StringDropdownQuery: 'string-dropdown-query', // picker\r\n  StringFontIconPicker: 'string-font-icon-picker',\r\n  StringJson: 'string-json',\r\n  StringTemplatePicker: 'string-template-picker', // picker\r\n  StringUrlPath: 'string-url-path',\r\n  StringWysiwyg: 'string-wysiwyg',\r\n\r\n  /** New Pickers v17.x */\r\n  EntityPicker: 'entity-picker',\r\n  StringPicker: 'string-picker',\r\n  NumberPicker: 'number-picker',\r\n\r\n  /** for all situations where we need a fallback; new v16.04 */\r\n  Unknown: 'unknown',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","export class ArrayHelpers {\r\n  /**\r\n   * Toggles an item in an array. If the item is not in the array, it is added. If it is in the array, it is removed.\r\n   * @param item The item to toggle\r\n   * @param array The array to toggle the item in\r\n   */\r\n  static toggleInArray<T>(item: T, array: T[]): void {\r\n    const index = array.indexOf(item);\r\n    if (index === -1) {\r\n      array.push(item);\r\n    } else {\r\n      array.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  // probably better: Array.from(new Set(merged));\r\n  // static distinct<T extends unknown>(array: T[]): T[] {\r\n  //   return array.filter(onlyUnique);\r\n  // }\r\n\r\n}\r\n\r\n\r\n// function onlyUnique<T extends unknown>(value: T, index: number, array: T[]): boolean {\r\n//   return array.indexOf(value) === index;\r\n// }","import { Observable, pipe, UnaryFunction } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport isEqual from 'lodash-es/isEqual';\r\n\r\n/**\r\n * Combine map and distinctUntilChanged, as this is a very common pattern.\r\n * @param fn the mapping function\r\n * @returns\r\n */\r\nexport function mapUntilChanged<T, R>(\r\n  fn: (state: T) => R\r\n): UnaryFunction<Observable<T>, Observable<R>> {\r\n  return pipe(\r\n    distinctUntilChanged(),\r\n    map(fn),\r\n    distinctUntilChanged(),\r\n  );\r\n}\r\n\r\nexport function mapUntilObjChanged<T, R>(\r\n  fn: (state: T) => R\r\n): UnaryFunction<Observable<T>, Observable<R>> {\r\n  return pipe(\r\n    distinctUntilChanged(isEqual),\r\n    map(fn),\r\n    distinctUntilChanged(isEqual),\r\n  );\r\n}\r\n"],"names":["effect","computedObj","signalObj","FieldState","constructor","name","config","group","settings","basics","ui","uiValue","translationState","isOpen","pickerData","featuresSvc","injectorForEffects","reqFeaturesMy","reqFeaturesFromSettings","setting","requiredFeatures","merged","Array","from","Set","length","feature","requireFeature","injector","Error","settingExt","current","includes","set","NgClass","NgTemplateOutlet","computed","signal","FormsModule","MAT_DIALOG_DATA","MatDialogActions","MatDialogRef","MatFormFieldModule","MatIconModule","MatInputModule","TranslateModule","TranslateService","transient","TippyDirective","ArrayHelpers","QueryService","buildPageSearch","buildPageTree","i0","ɵɵelementContainer","ɵɵtemplate","PagePickerComponent_Conditional_12_For_2_ng_container_0_Template","ɵɵproperty","pageAndChildren_r3","ɵɵpureFunction1","_c0","page_r2","ɵɵelementStart","ɵɵrepeaterCreate","PagePickerComponent_Conditional_12_For_2_Template","ɵɵrepeaterTrackByIdentity","ɵɵelementEnd","ɵɵadvance","ɵɵrepeater","ctx_r3","tree","ɵɵelement","ɵɵtext","page_r6","path","ɵɵtextInterpolate1","ɵɵlistener","PagePickerComponent_Conditional_13_For_3_Template_div_click_3_listener","ɵɵrestoreView","_r5","$implicit","ɵɵnextContext","ɵɵresetView","select","PagePickerComponent_Conditional_13_For_3_Conditional_6_Template","PagePickerComponent_Conditional_13_For_3_Conditional_10_Template","PagePickerComponent_Conditional_13_For_3_Conditional_11_Template","id","selected","ɵɵconditional","ɵɵtextInterpolate","isVisible","isClickable","PagePickerComponent_Conditional_13_Conditional_1_Template","PagePickerComponent_Conditional_13_For_3_Template","filteredSearch","PagePickerComponent_ng_template_14_Conditional_3_Template_mat_icon_click_0_listener","_r8","page_r9","page","toggle","toggled","PagePickerComponent_ng_template_14_Conditional_12_For_2_ng_container_0_Template","child_r10","PagePickerComponent_ng_template_14_Conditional_12_For_2_Template","children","PagePickerComponent_ng_template_14_Conditional_2_Template","PagePickerComponent_ng_template_14_Conditional_3_Template","PagePickerComponent_ng_template_14_Template_div_click_4_listener","_r7","PagePickerComponent_ng_template_14_Conditional_10_Template","PagePickerComponent_ng_template_14_Conditional_11_Template","PagePickerComponent_ng_template_14_Conditional_12_Template","PagePickerComponent","dialogData","dialog","translate","filterText","searchItems","filter","item","toLocaleLowerCase","queryService","ngOnInit","parseSelectedPageId","fetchPages","setFilter","ok","window","confirm","instant","closeDialog","pageId","toggleInArray","close","find","i","result","toString","stream","params","getFromQuery","subscribe","next","data","console","error","pages","prefix","fieldValue","controls","fieldName","value","trim","startsWith","parseInt","split","ɵɵdirectiveInject","i1","i2","selectors","decls","vars","consts","template","PagePickerComponent_Template","rf","ctx","PagePickerComponent_Template_input_ngModelChange_10_listener","$event","_r1","PagePickerComponent_Conditional_12_Template","PagePickerComponent_Conditional_13_Template","PagePickerComponent_ng_template_14_Template","ɵɵtemplateRefExtractor","ɵɵpipeBind1","i3","MatFormField","MatLabel","i4","MatInput","i5","DefaultValueAccessor","NgControlStatus","NgModel","i6","MatIcon","TranslatePipe","styles","take","PagePicker","open","matDialog","viewContainerRef","changeDetectorRef","callback","dialogRef","autoFocus","height","width","afterClosed","pipe","markForCheck","items","map","Path","replace","substring","slice","join","Id","Name","Visible","Clickable","parentId","ParentId","push","parent","Signal","inject","keyPartOfPage","keyPublishing","partOfPageDefault","classLog","Context","FormLanguageService","FormConfigService","log","configSignal","context","languageService","initFormConfig","dialogContext","formId","isParentDialog","itemGuids","createMode","isCopy","enableHistory","languages","initial","Language","Current","primary","Primary","list","List","zoneId","appId","appRoot","App","Url","appSharedRoot","SharedUrl","moduleId","partOfPage","sessionStorage","getItem","portalRoot","Site","tabId","systemRoot","location","pathname","versioningOptions","getVersioningOptions","enableFormulaSave","Enable","FormulaSave","removeEditRestrictions","OverrideEditRestrictions","language","getSignal","publishing","allowAll","show","hide","branch","publish","language$","_language$","getLanguage$","factory","ɵfac","shareReplay","mapUntilChanged","ComputedCacheHelper","EntityReader","SignalStoreObservableBase","FormLanguage","logSpecs","getReader","getLanguage","getReaderSignal","getId","sanitizeAdd","empty","entityReaderCache","signalsHideHeaderCache","addForm","hideHeader","add","setCurrent","newLanguage","update","getEntityReader","l","fnIf","sig","getOrCreateWithInfo","l2","rSilent","isNew","cache$","languageInstances","m","getHideHeaderSignal","getOrCreate","cache","updateHideHeader","providedIn","bothPrimary","original","diffCurrent","FormLanguageComplete","DimensionReader","dimensions","hasCurrentWrite","match","d","Value","hasCurrentReadOnly","currentRO","undefined","hasCurrent","all","FieldReader","field","noData","values","Values","ofLanguage","currentOrDefault","currentOrDefaultOrAny","val","Dimensions","hasPrimary","hasCurrentReadonly","hasEditableValues","valuesEditableOf","countEditable","countEditableWithContents","v","#valuesEditableOf","currentEditable","dimension","x","isEditableOrReadonlyTranslationExist","FileTypeHelpers","defaultIcon","customExtensions","doc","docx","xls","xlsx","ppt","pptx","pdf","mp3","avi","mpg","mpeg","mov","mp4","zip","rar","txt","html","css","xml","xsl","matExtensions","vcf","getExtension","filename","lastIndexOf","getIconClass","ext","isKnownType","isImage","isImgRegex","test","getBestValue","attributeValues","defaultValue","fieldReader","flatten","metadata","metadataItems","isArray","Type","Object","entries","Attributes","exists","emptyAll","currentValues","itemAttributes","formValues","reduce","acc","Injector","ServiceBase","initSignal","watchAllFields","dataPrefix","FieldsFindNoPrefix","FieldsFindPrefix","FieldUnwrap","FieldMask","fieldState","formConfig","fieldConfig","requirePrefix","maskSignal","mask","fieldsUsedInMask","extractFieldNames","a","initPreClean","overloadPreCleanValues","preClean","init","extendName","updateMaskFinal","r","logChanges","enabled","#updateMaskFinal","onChange","process","#process","hasPlaceholders","lowercaseInsideSquareBrackets","entityGuid","entityId","dataPlaceholders","forEach","e","replaceValue","cleaned","toLowerCase","#extractFieldNames","matches","fields","token","key","#onChange","maybeNew","#watchAllFields","end","f","c","subscriptions","valueChanges","_","ɵɵinject","SanitizeHelper","removeFromStart","sanitized","charToRemove","removeFromEnd","cleanBadPath","goodChar","illegalRe","controlRe","reservedRe","windowsReservedRe","windowsTrailingRe","sanitizePath","sanitizeName","replacement","InputTypeCatalog","FieldDefaults","inputType","itemHeader","getDefaultOrPrefillValue","onlyPrefill","fn","prefillRaw","Prefill","rNull","DefaultValue","BooleanDefault","BooleanTristate","DateTimeDefault","Date","toJSON","NumberDefault","NumberDropdown","NumberPicker","isNaN","Number","EntityDefault","EntityQuery","EntityContentBlocks","EntityPicker","guids","guid","JSON","stringify","parse","SignalStoreBase","itemSignalsCache","addMany","before","get","newItem","remove","updatedStore","clearCache","getAll","getMany","ids","getManySignal","getAllSignal","toObservable","list$","getList$","getMany$","obj","ContentTypeSettingsHelpers","getDefaultSettings","reader","contentType","Metadata","defaultSettings","Description","EditInstructions","Features","Label","ListInstructions","Notes","Icon","Link","_itemTitle","getTitle","_slotCanBeEmpty","IsEmptyAllowed","_slotIsEmpty","IsEmpty","type","label","CustomDefault","CustomGps","CustomJsonEditor","DefaultSuffix","EmptyDefault","EmptyEnd","EmptyMessage","ExternalWebComponent","HyperlinkDefault","HyperlinkLibrary","StringDefault","StringDropdown","StringDropdownQuery","StringFontIconPicker","StringJson","StringTemplatePicker","StringUrlPath","StringWysiwyg","StringPicker","Unknown","array","index","indexOf","splice","distinctUntilChanged","isEqual","mapUntilObjChanged"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}