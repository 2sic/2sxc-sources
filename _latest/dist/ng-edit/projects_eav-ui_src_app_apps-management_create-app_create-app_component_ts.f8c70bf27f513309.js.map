{"version":3,"file":"projects_eav-ui_src_app_apps-management_create-app_create-app_component_ts.f8c70bf27f513309.js","mappings":"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","names":["AppInstallSettingsService","constructor","http","this","installSettingsSubject","Subject","settings$","asObservable","pipe","map","startWith","subscribe","loadGettingStarted","isContentApp","get","json","next","static","__ngFactoryType__","i0","i1","_angular_core__WEBPACK_IMPORTED_MODULE_3__","jDH","factory","Éµfac","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","fromEvent","target","eventName","options","resultSelector","isFunction","undefined","mapOneOrManyArgs","add","remove","isEventTarget","addEventListener","removeEventListener","methodName","handler","isNodeStyleEventEmitter","addListener","removeListener","toCommonHandlerRegistry","isJQueryStyleEventEmitter","on","off","isArrayLike","mergeMap","subTarget","innerFrom","TypeError","Observable","subscriber","args","length","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","FieldHintComponent","isError","input","isShort","toggleIsShort","_angular_core__WEBPACK_IMPORTED_MODULE_0__","VBU","selectors","inputs","ngContentSelectors","_c0","decls","vars","consts","template","rf","ctx","_r1","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c1","tmp_2_0","MatFormFieldModule","NgClass","NgTemplateOutlet","styles","appNamePattern","ctx_r0","appNameError","CreateAppComponent_Conditional_13_Conditional_0_Template","CreateAppComponent_Conditional_13_Conditional_1_Template","form","controls","name","errors","required","pattern","remoteInstallerUrl","CreateAppComponent_Conditional_20_Conditional_0_Template","ready","CreateAppComponent","dialog","snackBar","sanitizer","hostClass","loading","signal","showAppCatalog","alreadyProcessing","appsListService","transient","AppsListService","installSettingsService","packageUrl","canCreate","messages$","window","filter","evt","origin","x","JSON","parse","data","set","packages","url","buildForm","updateCanCreate","valueChanges","settings","remoteUrl","includes","bypassSecurityTrustResourceUrl","effect","ngOnInit","create","createObservable","disable","open","duration","appTemplateId","Number","value","trim","replace","createTemplate","error","handleCreateError","handleCreateSuccess","enable","closeDialog","close","UntypedFormGroup","UntypedFormControl","Validators","onTemplateChange","event","i2","i3","debug_node_JnOYh9kg","viewQuery","CreateAppComponent_Conditional_13_Template","$event","CreateAppComponent_Conditional_20_Template","touched","RouterOutlet","FormsModule","i4","ReactiveFormsModule","i5","MatInputModule","i6","MatSelectModule","MatOptionModule","MatDialogActions","MatButtonModule","i7","MatRadioModule","i8"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/services/getting-started.service.ts","./node_modules/rxjs/dist/esm/internal/observable/fromEvent.js","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/apps-management/constants/app.patterns.ts","./projects/eav-ui/src/app/apps-management/create-app/create-app.component.html","./projects/eav-ui/src/app/apps-management/create-app/create-app.component.ts"],"sourcesContent":["\r\nimport { startWith, map, tap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { InstallSettings } from '../models/installer-models';\r\n\r\n// copied from 2sxc-ui app/installer\r\n@Injectable()\r\nexport class AppInstallSettingsService {\r\n\r\n  private installSettingsSubject: Subject<InstallSettings> = new Subject<InstallSettings>();\r\n  settings$: Observable<InstallSettings> = this.installSettingsSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n    const ready$ = this.settings$.pipe(\r\n      map(() => true),\r\n      startWith(false));\r\n\r\n    ready$.subscribe();\r\n  }\r\n\r\n  public loadGettingStarted(isContentApp: boolean): void {\r\n    this.http.get<InstallSettings>(`sys/install/InstallSettings?isContentApp=${isContentApp}`)\r\n      .subscribe(json => this.installSettingsSubject.next(json));\r\n  }\r\n}\r\n","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'];\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'];\nconst jqueryMethods = ['on', 'off'];\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));\n    }\n    const [add, remove] = isEventTarget(target)\n        ? eventTargetMethods.map((methodName) => (handler) => target[methodName](eventName, handler, options))\n        :\n            isNodeStyleEventEmitter(target)\n                ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n                : isJQueryStyleEventEmitter(target)\n                    ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n                    : [];\n    if (!add) {\n        if (isArrayLike(target)) {\n            return mergeMap((subTarget) => fromEvent(subTarget, eventName, options))(innerFrom(target));\n        }\n    }\n    if (!add) {\n        throw new TypeError('Invalid event target');\n    }\n    return new Observable((subscriber) => {\n        const handler = (...args) => subscriber.next(1 < args.length ? args : args[0]);\n        add(handler);\n        return () => remove(handler);\n    });\n}\nfunction toCommonHandlerRegistry(target, eventName) {\n    return (methodName) => (handler) => target[methodName](eventName, handler);\n}\nfunction isNodeStyleEventEmitter(target) {\n    return isFunction(target.addListener) && isFunction(target.removeListener);\n}\nfunction isJQueryStyleEventEmitter(target) {\n    return isFunction(target.on) && isFunction(target.off);\n}\nfunction isEventTarget(target) {\n    return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError()) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n    selector: 'app-field-hint',\r\n    templateUrl: './field-hint.component.html',\r\n    styleUrls: ['./field-hint.component.scss'],\r\n    imports: [\r\n        MatFormFieldModule,\r\n        NgClass,\r\n        NgTemplateOutlet\r\n    ]\r\n})\r\nexport class FieldHintComponent {\r\n  isError = input<boolean>(false);\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","export const appNamePattern = /^[A-Za-z](?:[A-Za-z0-9\\s\\(\\)-]+)*$/;\r\nexport const appNameError = 'Standard letters, numbers, spaces, hyphens and round brackets are allowed. Must start with a letter.';\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Create App</div>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <router-outlet></router-outlet>\r\n    <form [formGroup]=\"form\">\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput type=\"text\" formControlName=\"name\" />\r\n      </mat-form-field>\r\n      <app-field-hint> App name will also be used for the folder </app-field-hint>\r\n      @if (form.controls.name.touched) {\r\n        @if (form.controls.name.errors?.required) {\r\n          <app-field-hint [isError]=\"true\"> Required </app-field-hint>\r\n        }\r\n        @if (form.controls.name.errors?.pattern) {\r\n          <app-field-hint [isError]=\"true\">\r\n            {{ appNameError }}\r\n          </app-field-hint>\r\n        }\r\n      }\r\n      <br />\r\n      <mat-radio-group formControlName=\"appTemplateId\" required (change)=\"onTemplateChange($event)\">\r\n        <mat-radio-button [value]=\"0\">Complete Naked / Raw App</mat-radio-button>\r\n        <mat-radio-button [value]=\"1\">Use Template</mat-radio-button>\r\n      </mat-radio-group>\r\n    </form>\r\n\r\n    @if (showAppCatalog()) {\r\n      @if (ready()) {\r\n        <iframe #installerWindow class=\"eav-app-catalog-iframe\" [src]=\"remoteInstallerUrl\"></iframe>\r\n      }\r\n    }\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button type=\"button\" mat-raised-button [disabled]=\"loading()\" (click)=\"closeDialog()\">Cancel</button>\r\n    <button\r\n      type=\"button\"\r\n      mat-raised-button\r\n      color=\"accent\"\r\n      [disabled]=\"loading() || !canCreate()\"\r\n      (click)=\"create()\"\r\n    >\r\n      Create\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>","import { Component, effect, ElementRef, HostBinding, signal, ViewChild } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { filter, fromEvent, map, Observable } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { CrossWindowMessage, InstallSettings } from '../../shared/models/installer-models';\r\nimport { AppInstallSettingsService } from '../../shared/services/getting-started.service';\r\nimport { appNameError, appNamePattern } from '../constants/app.patterns';\r\nimport { AppsListService } from '../services/apps-list.service';\r\n\r\n@Component({\r\n  selector: 'app-create-app',\r\n  templateUrl: './create-app.component.html',\r\n  styleUrls: ['./create-app.component.scss'],\r\n  imports: [\r\n    RouterOutlet,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatDialogActions,\r\n    MatButtonModule,\r\n    FieldHintComponent,\r\n    MatRadioModule\r\n  ]\r\n})\r\nexport class CreateAppComponent {\r\n  // Add a CSS class to the host element for consistent dialog styling\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n  // Reference to the installer iframe element (for cross-window messaging)\r\n  @ViewChild('installerWindow') installerWindow: ElementRef;\r\n\r\n  // Reactive form group for app creation fields\r\n  form: UntypedFormGroup;\r\n\r\n  // Signal to control loading spinner and disable UI during app creation\r\n  loading = signal<boolean>(false);\r\n  // Error message for invalid app names, used in template validation\r\n  appNameError = appNameError;\r\n  // URL for the remote app catalog iframe, sanitized for Angular\r\n  remoteInstallerUrl = '';\r\n  // Signal to indicate when the iframe is ready to be shown\r\n  ready = signal(false);\r\n  // Signal to toggle visibility of the app catalog iframe\r\n  showAppCatalog = signal(true);\r\n  // Prevents double-processing of installations via window messages\r\n  private alreadyProcessing = false;\r\n\r\n  // App and settings service instances (using custom transient DI)\r\n  private appsListService = transient(AppsListService);\r\n  private installSettingsService = transient(AppInstallSettingsService);\r\n\r\n  // Holds the URL of the package selected in the app catalog (reactive signal)\r\n  private packageUrl = signal<string>(null);\r\n\r\n  // Holds installer settings loaded from service\r\n  settings: InstallSettings;\r\n\r\n  // Signal controlling Create button state (enabled/disabled)\r\n  canCreate = signal<boolean>(false);\r\n\r\n  // Reactive observable for cross-window installer messages\r\n  private messages$ = fromEvent(window, 'message').pipe(\r\n    // Ignore messages if already processing an installation\r\n    filter(() => !this.alreadyProcessing),\r\n    // Only accept messages from the trusted installer domain\r\n    filter((evt: MessageEvent) => evt.origin === \"https://2sxc.org\"),\r\n    // Parse the incoming message and update packageUrl signal\r\n    map((evt: MessageEvent) => {\r\n      const x = JSON.parse(evt.data) as CrossWindowMessage;\r\n      this.packageUrl.set(x.packages?.[0]?.url || null);\r\n    }),\r\n  );\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<CreateAppComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private sanitizer: DomSanitizer,\r\n  ) {\r\n    // Initialize the reactive form with validation\r\n    this.form = this.buildForm();\r\n\r\n    // Set Create button state initially\r\n    this.updateCanCreate();\r\n\r\n    // Re-calculate Create button state on any form value change\r\n    this.form.valueChanges.subscribe(() => this.updateCanCreate());\r\n\r\n    // Load installer settings and set up the iframe URL for the app catalog\r\n    this.installSettingsService.loadGettingStarted(false);\r\n    this.installSettingsService.settings$.subscribe(settings => {\r\n      let url = settings.remoteUrl;\r\n      // Add query param to ensure template mode in the installer\r\n      url += (url.includes('?') ? '&' : '?') + 'isTemplate=true';\r\n\r\n      this.remoteInstallerUrl = <string>this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n      this.ready.set(true);\r\n    });\r\n\r\n    // React to changes in packageUrl and update Create button accordingly\r\n    effect(() => {\r\n      this.packageUrl();\r\n      this.updateCanCreate();\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Ensure installer settings are loaded (redundant if already done in constructor)\r\n    this.installSettingsService.loadGettingStarted(false);\r\n\r\n    // Listen for messages from the app catalog iframe (e.g., package selection)\r\n    this.messages$.subscribe();\r\n  }\r\n\r\n  /**\r\n   * Handles the app creation logic. Disables the form and shows feedback messages.\r\n   * Decides whether to create a raw app or use a selected template.\r\n   */\r\n  create(): void {\r\n    if (!this.canCreate()) return;\r\n    this.form.disable();\r\n    this.loading.set(true);\r\n    this.snackBar.open('Creating app...', undefined, { duration: 2000 });\r\n\r\n    let createObservable: Observable<any>;\r\n    const appTemplateId = Number(this.form.controls.appTemplateId.value);\r\n    const name = this.form.controls.name.value?.trim().replace(/\\s\\s+/g, ' ');\r\n\r\n    // Use the selected template if applicable, otherwise create a raw app\r\n    if (appTemplateId === 1 && this.packageUrl() && this.packageUrl().length > 0) {\r\n      createObservable = this.appsListService.createTemplate(this.packageUrl(), name);\r\n    } else {\r\n      createObservable = this.appsListService.create(name, null, 0);\r\n    }\r\n\r\n    // Subscribe to creation result and show success/error feedback\r\n    createObservable.subscribe({\r\n      error: () => this.handleCreateError(),\r\n      next: () => this.handleCreateSuccess()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles errors that occur during app creation.\r\n   * Re-enables the form and displays a failure message.\r\n   */\r\n  private handleCreateError(): void {\r\n    this.form.enable();\r\n    this.loading.set(false);\r\n    this.snackBar.open('Failed to create app. Please check console for more information', undefined, { duration: 3000 });\r\n  }\r\n\r\n  /**\r\n   * Handles successful app creation by enabling the form,\r\n   * showing a success message, and closing the dialog.\r\n   */\r\n  private handleCreateSuccess(): void {\r\n    this.form.enable();\r\n    this.loading.set(false);\r\n    this.snackBar.open('Created app', undefined, { duration: 2000 });\r\n    this.closeDialog();\r\n  }\r\n\r\n  /**\r\n   * Closes the create app dialog.\r\n   */\r\n  closeDialog(): void {\r\n    this.dialog.close();\r\n  }\r\n\r\n  /**\r\n   * Builds and returns the reactive form group with validation.\r\n   */\r\n  private buildForm(): UntypedFormGroup {\r\n    return new UntypedFormGroup({\r\n      name: new UntypedFormControl(null, [Validators.required, Validators.pattern(appNamePattern)]),\r\n      appTemplateId: new UntypedFormControl(1, Validators.required),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Updates the canCreate signal based on form and packageUrl state.\r\n   * Enables the Create button only if conditions are met.\r\n   */\r\n  private updateCanCreate(): void {\r\n    const name = this.form.controls.name.value?.trim();\r\n    const appTemplateId = Number(this.form.controls.appTemplateId.value);\r\n    const packageUrl = this.packageUrl();\r\n\r\n    // Enable Create if: \r\n    // - name is present and appTemplateId is 0, OR\r\n    // - name, appTemplateId=1, and packageUrl are all present\r\n    const valid =\r\n      !!name &&\r\n      (\r\n        appTemplateId === 0 ||\r\n        (appTemplateId === 1 && !!packageUrl)\r\n      );\r\n    this.canCreate.set(valid);\r\n  }\r\n\r\n  /**\r\n   * Handles changes to the template selection radio group.\r\n   * Shows or hides the app catalog iframe and updates Create button state.\r\n   */\r\n  onTemplateChange(event: any) {\r\n    if (event.value == 1)\r\n      this.showAppCatalog.set(true);\r\n    else\r\n      this.showAppCatalog.set(false);\r\n\r\n    this.updateCanCreate();\r\n  }\r\n}"],"x_google_ignoreList":[1]}