{"version":3,"file":"projects_eav-ui_src_app_visual-query_visual-query_component_ts-node_modules_lodash-es__arrayE-b0a38f.1638fd65b06a7734.js","mappings":"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","names":["ExportAppPartsService","constructor","http","context","dnnContext","this","getContentInfo","scope","get","$2sxc","apiUrl","webApiAppPartsRoot","params","appid","appId","toString","zoneId","exportParts","contentTypeIds","entityIds","templateIds","url","join","window","open","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_2__","jDH","factory","ɵfac","ExportAppService","getAppInfo","webApiAppRoot","exportAppUrl","exportForVersionControl","includeContentGroups","resetAppGuid","withFiles","withPortalFiles","ImportAppPartsService","importAppParts","file","formData","FormData","append","post","resetApp","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","contentType","webApiEntityList","importQuery","from","toBase64","pipe","switchMap","fileBase64","AppId","ContentBase64","map","success","Success","Messages","clonePipeline","id","Id","delete","_angular_core__WEBPACK_IMPORTED_MODULE_6__","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","import","export","getPolymorphism","getUsage","guid","_angular_core__WEBPACK_IMPORTED_MODULE_1__","isEscape","event","key","isCtrlS","ctrlKey","metaKey","ImportAppService","importApp","changedName","retryOnDuplicate","result","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","of","_angular_core__WEBPACK_IMPORTED_MODULE_4__","MousedownStopPropagationDirective","onMousedown","stopPropagation","_angular_core__WEBPACK_IMPORTED_MODULE_0__","FsC","selectors","hostBindings","rf","ctx","$event","ArrayHelpers","toggleInArray","item","array","index","indexOf","push","splice","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","split","onerror","error","readAsText","mapUntilChanged","fn","distinctUntilChanged","mapUntilObjChanged","isEqual","QueryDefinitionService","fetchPipeline","pipelineEntityId","dataSources","pipelineModel","DataSources","length","buildDefaultModel","fixPipelineDataSources","templateDataSources","eavConstants","pipelineDesigner","defaultPipeline","templateDS","dataSource","find","ds","PartAssemblyAndType","Description","EntityGuid","EntityId","undefined","Name","VisualDesignerData","Pipeline","StreamWiring","streamWiring","pipelineDataSources","some","pipelineDS","outDataSource","outDs","pipelineDataSource","Top","Left","fetchDataSources","ContentType","Difficulty","dataSourceDifficulties","default","DynamicIn","DynamicOut","EnableConfig","HelpLink","Icon","In","Out","PrimaryType","TypeNameForUi","UiHint","typeNameFilter","input","format","globalParts","classFullNameParts","savePipeline","pipeline","newPipelineModel","runPipeline","top","debugStream","source","sourceOut","out","core","ctx_r0","name","sourceName","option_r3","_r2","$implicit","show","QueryResultComponent_For_18_Conditional_2_Template","QueryResultComponent_For_18_Conditional_3_Template","param_r4","QueryResultComponent_Conditional_22_div_1_Template","QueryResultComponent_Conditional_22_For_5_Template","parameters","source_r5","value","Definition","config_r6","QueryResultComponent_For_37_Conditional_2_Template","QueryResultComponent_For_37_For_10_Template","Guid","Type","Configuration","Error","stream_r7","Source","SourceOut","Target","TargetIn","Count","QueryResultComponent","dialogData","dialogRef","visualQueryService","ngOnInit","pipelineModel$","Params","filter","el","testParams","TestParameters","concat","timeUsed","QueryTimer","Milliseconds","ticksUsed","Ticks","optionsForTop","Query","sources","Sources","streams","Streams","closeDialog","close","original","MAT_DIALOG_DATA","VBU","standalone","features","decls","vars","consts","template","QueryResultComponent_Conditional_4_Template","QueryResultComponent_div_13_Template","QueryResultComponent_Conditional_15_Template","QueryResultComponent_Conditional_16_Template","QueryResultComponent_For_18_Template","QueryResultComponent_Conditional_22_Template","QueryResultComponent_div_24_Template","QueryResultComponent_For_37_Template","QueryResultComponent_div_40_Template","QueryResultComponent_For_53_Template","MatButtonModule","MatIconModule","i4","MatTabsModule","i5","JsonPipe","KeyValuePipe","styles","StreamErrorResultComponent","errorData","openInsights","MatDialogActions","VisualQueryStateService","ServiceBase","#contentTypesSvc","#metadataSvc","#queryDefSvc","#dialogRoute","#titleSvc","#pipelineId","#refreshPipeline","#refreshDataSourceConfigs","snackBar","dialog","viewContainerRef","zone","changeDetectorRef","super","transient","ContentTypesService","MetadataService","DialogRoutingService","Title","BehaviorSubject","dataSources$","putEntityCountOnConnections$","Subject","dataSourceConfigs$","parseInt","getParam","ngOnDestroy","complete","init","attachKeyboardSave","doOnDialogClosed","editPipelineEntity","form","items","EditPrep","editId","formUrl","convertFormToUrl","navRelative","saveAndRun","save","run","showDataSourceDetails","showDetails","cloneDeep","visualDesignerData","JsonHelpers","tryParse","ShowDataSourceDetails","JSON","stringify","next","addDataSource","removeDataSource","pipelineDataSourceGuid","connections","streamsOut","StreamsOut","renameDataSource","changeDataSourceDescription","description","changeConnections","changeDataSourcePosition","position","calculateDataSourceConfigs","dataSourceConfigs","forEach","Metadata","metadataItem","Object","entries","attributeName","attributeValue","includes","Array","isArray","editDataSource","contentTypeName","getMetadata","metadata","entity","targetType","keyType","subscribe","Items","retrieveContentType","duration","newMetadata","callback","pipelineResult","showQueryResult","console","warn","setTimeout","stream","showStreamErrorResult","streamResult","refreshPipeline","refreshDataSourceConfigs","showSnackBar","setTitle","autoFocus","backdropClass","closeOnNavigation","data","panelClass","markForCheck","ErrorData","runOutsideAngular","subscriptions","add","fromEvent","snapshot","firstChild","preventDefault","guiTypes","App","Label","Cache","Filter","Logic","Lookup","Modify","Security","Sort","Unknown","Debug","System","calculateTypeInfos","typeInfos","typeInfo","RenameStreamComponent_Conditional_9_Conditional_4_Template","RenameStreamComponent_Conditional_9_Conditional_5_Template","isSource","pipelineResultExists","controls","label","touched","errors","required","scopeOption_r3","RenameStreamComponent_Conditional_10_Conditional_0_For_5_Template","scopeOptions","labelOption_r4","RenameStreamComponent_Conditional_10_Conditional_4_For_2_Template","labelOptions","RenameStreamComponent_Conditional_10_Conditional_0_Template","RenameStreamComponent_Conditional_10_Conditional_4_Template","RenameStreamComponent_Conditional_10_Conditional_5_Template","toggleGuidedLabel","RenameStreamComponent_Conditional_10_Conditional_13_Template","advancedMode","guidedLabel","_c0","_r5","toggleAdvancedMode","RenameStreamComponent","BaseComponent","hostClass","contentTypesService","buildForm","checked","rename","formValue","getRawValue","UntypedFormGroup","UntypedFormControl","Validators","scopes","valueChanges","startWith","values","Scope","patchValue","getScopes","filtered","s","o","hostVars","RenameStreamComponent_Conditional_9_Template","RenameStreamComponent_Conditional_10_Template","RenameStreamComponent_Conditional_13_Template","valid","FormsModule","ReactiveFormsModule","MatFormFieldModule","i6","MatInputModule","i7","MatSelectModule","i8","i9","MatOptionModule","NgClass","MatSlideToggleModule","i10","FieldHintComponent","ClickStopPropagationDirective","dataSrcIdPrefix","Plumber","jsPlumbRoot","onConnectionsChanged","onDragend","onDebugStream","log","classLog","lineCount","linePaintDefault","stroke","strokeWidth","outlineStroke","outlineWidth","lineColors","maxCols","uuidColorMap","bulkDelete","instance","jsPlumb","getInstance","getInstanceDefaults","batch","initDomDataSources","initWirings","bindEvents","repaintEverything","destroy","reset","unbindContainer","removeEndpointsOnDataSource","elementId","selectEndpoints","element","getAllConnections","connection","From","sourceId","replace","endpoints","getOverlay","To","targetId","getStreamsOut","target","each","endpoint","putEntityCountOnConnections","sourceElementId","targetElementId","fromUuid","toUuid","getEndpoint","getUuid","setLabel","cssClass","events","click","overlay","AllowEdit","nextLinePaintStyle","uuid","assign","container","Container","Connector","curviness","PaintStyle","HoverPaintStyle","l","fnCond","domDataSource","querySelector","draggable","grid","stop","finalPos","outCount","a","addEndpoint","inCount","in","targetEndpointUnlimited","buildTargetEndpoint","maxConnections","makeTarget","makeSource","buildSourceEndpoint","end","wirings","inGroups","groupBy","wire","outGroups","pipeDataSource","connect","uuids","paintStyle","message","to","endpointName","isIn","count","d","connectionList","isDynamic","getEndpointInfo","endpointInfo","style","angled","model","enabled","addClass","fill","radius","anchor","faces","overlays","getEndpointOverlays","endpointOrOverlay","onChangeLabel","isTarget","dropOptions","hoverClass","activeClass","location","width","afterClosed","newLabel","bind","info","targetEndpoint","deleteEndpoint","deleteConnection","fireEvent","endpointLabel","labelPrompt","getLabel","getEndpoints","canvas","classList","contains","Math","floor","random","trimmed","trim","endsWith","substring","arr","reduce","groups","dataSource_r3","ctx_r3","configureDataSource","vm_r6","openHelp","_r7","remove","config_r8","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_For_3_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_5_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_6_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_8_Template","_r1","allowEdit","editName","editDescription","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_24_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_25_Template","_c2","Width","_c3","isOutDataSource","getTypeName","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Template","PlumbEditorComponent_Conditional_0_Conditional_2_Template","hardReset","PlumbEditorComponent","scriptLoaded$","queryDefinitionService","loadScripts","test","src","plumber","pipelineDesignerData$","m","viewModel$","combineLatest","pipelineDesignerData","detectChanges","ngAfterViewInit","domDataSourcesLoaded$","domDataSourcesRef","changes","scriptLoaded","domDataSourcesLoaded","domRootRef","nativeElement","partAssemblyAndType","confirm","newName","newDescription","viewQuery","PlumbEditorComponent_Conditional_0_Template","tmp_0_0","NgStyle","AsyncPipe","dataSource_r6","ctx_r1","AddExplorerComponent_Conditional_0_For_6_Conditional_5_For_2_Template","trackDataSources","group_r4","_r3","toggleItem","AddExplorerComponent_Conditional_0_For_6_Conditional_5_Template","tmp_14_0","toggledItems","toggleDifficulty","AddExplorerComponent_Conditional_0_For_6_Template","trackGroups","sorted","AddExplorerComponent","difficulties","difficulty$","difficulty","filterAndSortDataSources","maxDifficulty","sort","b","toLocaleLowerCase","localeCompare","type","advanced","AddExplorerComponent_Conditional_0_Template","TippyDirective","param_r3","RunExplorerComponent_Conditional_0_Conditional_20_For_2_Template","pipelineModel_r4","param_r5","RunExplorerComponent_Conditional_0_Conditional_24_For_2_Template","_r6","RunExplorerComponent_Conditional_0_Conditional_27_Conditional_0_For_8_Template","warnings_r8","RunExplorerComponent_Conditional_0_Conditional_27_Conditional_0_Template","saveAndRunQuery","editPipeline","openParamsHelp","RunExplorerComponent_Conditional_0_Conditional_20_Template","RunExplorerComponent_Conditional_0_Conditional_24_Template","RunExplorerComponent_Conditional_0_Conditional_25_Template","RunExplorerComponent_Conditional_0_Conditional_27_Template","RunExplorerComponent_Conditional_0_Conditional_29_Template","openRestApi","tmp_4_0","visualDesignerData$","tmp_5_0","warnings$","RunExplorerComponent","#dialogRouter","asObservable","calculateWarnings","warnings","queryParams","param","midMatch","exec","testMid","urlMid","moduleId","GoToDevRest","getUrlQueryDialog","RunExplorerComponent_Conditional_0_Template","VisualQueryComponent","route","explorer","activeExplorer","toggleExplorer","RouterOutlet","__WEBPACK_DEFAULT_EXPORT__","arrayEach","iteratee","_defineProperty","func","getNative","_baseAssignValue","baseAssignValue","object","defineProperty","configurable","enumerable","writable","objectCreate","create","proto","isObject","prototype","getPrototype","overArg","getPrototypeOf"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/edit/dialog/main/keyboard-shortcuts.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/shared/directives/mousedown-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/helpers/array.helpers.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts","./projects/eav-ui/src/app/shared/rxJs/mapUntilChanged.ts","./projects/eav-ui/src/app/visual-query/services/query-definition.service.ts","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.html","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.html","./projects/eav-ui/src/app/visual-query/services/visual-query.service.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.helpers.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumber.helper.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.html","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.html","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.html","./node_modules/lodash-es/_arrayEach.js","./node_modules/lodash-es/_defineProperty.js","./node_modules/lodash-es/_baseAssignValue.js","./node_modules/lodash-es/_baseCreate.js","./node_modules/lodash-es/_getPrototype.js"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\n\r\n@Injectable()\r\nexport class ExportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getContentInfo(scope: string) {\r\n    return this.http.get<ContentInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Get'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString(), scope },\r\n    });\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.context.appId.toString()\r\n      + '&zoneId=' + this.context.zoneId.toString()\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AppInfo } from '../models/app-info.model';\r\n\r\n@Injectable()\r\nexport class ExportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAppInfo() {\r\n    return this.http.get<AppInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Statistics'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString() },\r\n    });\r\n  }\r\n\r\n  /** Generate the export app path. It can be extended with additional parameters */\r\n  exportAppUrl() {\r\n    return `${this.dnnContext.$2sxc.http.apiUrl(`${webApiAppRoot}Export`)}?appId=${this.context.appId}&zoneId=${this.context.zoneId}`;\r\n  }\r\n\r\n  exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'SaveData'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Query } from '../models/query.model';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get<Query[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryImport), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViews), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.context.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.dnnContext.$2sxc.http.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.context.appId.toString(), guid }\r\n    });\r\n  }\r\n}\r\n","\r\nexport function isEscape(event: KeyboardEvent): boolean {\r\n  return event.key === 'Escape';\r\n}\r\n\r\nexport function isCtrlS(event: KeyboardEvent): boolean {\r\n  return event.key === 's' && (event.ctrlKey || event.metaKey);\r\n}","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appMousedownStopPropagation]',\r\n  standalone: true\r\n})\r\nexport class MousedownStopPropagationDirective {\r\n  @HostListener('mousedown', ['$event'])\r\n  onMousedown(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","export class ArrayHelpers {\r\n  /**\r\n   * Toggles an item in an array. If the item is not in the array, it is added. If it is in the array, it is removed.\r\n   * @param item The item to toggle\r\n   * @param array The array to toggle the item in\r\n   */\r\n  static toggleInArray<T>(item: T, array: T[]): void {\r\n    const index = array.indexOf(item);\r\n    if (index === -1) {\r\n      array.push(item);\r\n    } else {\r\n      array.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  // probably better: Array.from(new Set(merged));\r\n  // static distinct<T extends unknown>(array: T[]): T[] {\r\n  //   return array.filter(onlyUnique);\r\n  // }\r\n\r\n}\r\n\r\n\r\n// function onlyUnique<T extends unknown>(value: T, index: number, array: T[]): boolean {\r\n//   return array.indexOf(value) === index;\r\n// }","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","import { Observable, pipe, UnaryFunction } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport isEqual from 'lodash-es/isEqual';\r\n\r\n/**\r\n * Combine map and distinctUntilChanged, as this is a very common pattern.\r\n * @param fn the mapping function\r\n * @returns\r\n */\r\nexport function mapUntilChanged<T, R>(\r\n  fn: (state: T) => R\r\n): UnaryFunction<Observable<T>, Observable<R>> {\r\n  return pipe(\r\n    distinctUntilChanged(),\r\n    map(fn),\r\n    distinctUntilChanged(),\r\n  );\r\n}\r\n\r\nexport function mapUntilObjChanged<T, R>(\r\n  fn: (state: T) => R\r\n): UnaryFunction<Observable<T>, Observable<R>> {\r\n  return pipe(\r\n    distinctUntilChanged(isEqual),\r\n    map(fn),\r\n    distinctUntilChanged(isEqual),\r\n  );\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { webApiQueryDataSources, webApiQueryDebugStream, webApiQueryGet, webApiQueryRun, webApiQuerySave } from '../../app-administration/services';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult } from '../models';\r\n\r\n@Injectable()\r\nexport class QueryDefinitionService {\r\n  constructor(private http: HttpClient, private context: Context) { }\r\n\r\n  fetchPipeline(pipelineEntityId: number, dataSources: DataSource[]) {\r\n    return this.http.get<PipelineModel>(webApiQueryGet, {\r\n      params: { appId: this.context.appId.toString(), id: pipelineEntityId.toString() }\r\n    }).pipe(\r\n      map(pipelineModel => {\r\n        // if pipeline is new, populate it with default model\r\n        if (!pipelineModel.DataSources.length) {\r\n          this.buildDefaultModel(pipelineModel, dataSources);\r\n        }\r\n        this.fixPipelineDataSources(pipelineModel.DataSources);\r\n        return pipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  private buildDefaultModel(pipelineModel: PipelineModel, dataSources: DataSource[]) {\r\n    const templateDataSources = eavConstants.pipelineDesigner.defaultPipeline.dataSources;\r\n    for (const templateDS of templateDataSources) {\r\n      const dataSource = dataSources.find(ds => ds.PartAssemblyAndType === templateDS.PartAssemblyAndType);\r\n      const pipelineDataSource: PipelineDataSource = {\r\n        Description: '',\r\n        EntityGuid: templateDS.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: dataSource.Name,\r\n        PartAssemblyAndType: templateDS.PartAssemblyAndType,\r\n        VisualDesignerData: templateDS.VisualDesignerData,\r\n      };\r\n      pipelineModel.DataSources.push(pipelineDataSource);\r\n    }\r\n\r\n    pipelineModel.Pipeline.StreamWiring = eavConstants.pipelineDesigner.defaultPipeline.streamWiring;\r\n  }\r\n\r\n  private fixPipelineDataSources(pipelineDataSources: PipelineDataSource[]) {\r\n    const outDataSourceExists = pipelineDataSources.some(\r\n      pipelineDS => pipelineDS.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    );\r\n    if (!outDataSourceExists) {\r\n      const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n      const outDsConst: PipelineDataSource = {\r\n        Description: outDs.Description,\r\n        EntityGuid: outDs.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: outDs.Name,\r\n        PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n        VisualDesignerData: outDs.VisualDesignerData,\r\n      };\r\n      pipelineDataSources.push(outDsConst);\r\n    }\r\n\r\n    for (const pipelineDataSource of pipelineDataSources) {\r\n      pipelineDataSource.VisualDesignerData ??= { Top: 50, Left: 50 };\r\n    }\r\n  }\r\n\r\n  fetchDataSources() {\r\n    return this.http.get<DataSource[]>(webApiQueryDataSources, {\r\n      params: {\r\n        appid: this.context.appId,\r\n        zoneId: this.context.zoneId,\r\n      },\r\n    }).pipe(\r\n      map(dataSources => {\r\n        const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n        const outDsConst: DataSource = {\r\n          ContentType: undefined,\r\n          Difficulty: eavConstants.pipelineDesigner.dataSourceDifficulties.default,\r\n          DynamicIn: true,\r\n          DynamicOut: false,\r\n          EnableConfig: undefined,\r\n          HelpLink: undefined,\r\n          Icon: undefined,\r\n          In: outDs.In,\r\n          Name: outDs.Name,\r\n          Out: undefined,\r\n          PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n          PrimaryType: outDs.PrimaryType,\r\n          TypeNameForUi: undefined,\r\n          UiHint: undefined,\r\n        };\r\n        dataSources.push(outDsConst);\r\n        return dataSources;\r\n      }),\r\n    );\r\n  }\r\n\r\n  typeNameFilter(input: string, format: 'className' | 'classFullName') {\r\n    const globalParts = input.split(', ');\r\n\r\n    switch (format) {\r\n      case 'classFullName':\r\n        const classFullName = globalParts[0];\r\n        return classFullName;\r\n      case 'className':\r\n        const classFullNameParts = globalParts[0].split('.');\r\n        const className = classFullNameParts[classFullNameParts.length - 1];\r\n        return className;\r\n      default:\r\n        return input;\r\n    }\r\n  }\r\n\r\n  /** Save the current query and reload entire definition as returned from server */\r\n  savePipeline(pipelineModel: PipelineModel) {\r\n    const pipeline = pipelineModel.Pipeline;\r\n    const dataSources = pipelineModel.DataSources;\r\n\r\n    return this.http.post<PipelineModel>(\r\n      webApiQuerySave,\r\n      { pipeline, dataSources },\r\n      { params: { appId: this.context.appId.toString(), Id: pipeline.EntityId.toString() } }\r\n    ).pipe(\r\n      map(newPipelineModel => {\r\n        this.fixPipelineDataSources(newPipelineModel.DataSources);\r\n        return newPipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  runPipeline(id: number, top: number) {\r\n    return this.http.get<PipelineResult>(webApiQueryRun, {\r\n      params: { appId: this.context.appId.toString(), id: id.toString(), top: top.toString() }\r\n    });\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  debugStream(id: number, source: string, sourceOut: string, top: number) {\r\n    return this.http.get<PipelineResult>(webApiQueryDebugStream, {\r\n      params: { appId: this.context.appId.toString(), id: id.toString(), from: source, out: sourceOut, top: top.toString() }\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      Query Results\r\n      @if (debugStream) {\r\n        for Stream: \"{{ debugStream.name }}\" on Source: \"{{ debugStream.sourceName }}\"\r\n      }\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <p>\r\n      The Full result was logged to the Browser Console. Further down you'll find more debug-infos.\r\n      Executed in {{ timeUsed }}ms ({{ ticksUsed }} ticks)\r\n    </p>\r\n    <mat-tab-group dynamicHeight color=\"accent\" class=\"eav-tab-group\">\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Results\">\r\n          <span>Results</span>\r\n        </div>\r\n\r\n        <p class=\"eav-tab-description\">\r\n          @if (top === 0) {\r\n            Showing All results\r\n          }\r\n          @if (top !== 0) {\r\n            Showing top {{ top }} results\r\n          }\r\n          @for (option of optionsForTop; track option) {\r\n            <button mat-button (click)=\"show(option)\">\r\n              Show\r\n              @if (option === 0) {\r\n                All\r\n              }\r\n              @if (option !== 0) {\r\n                {{ option }}\r\n              }\r\n            </button>\r\n          }\r\n        </p>\r\n        <pre>{{ result | json }}</pre>\r\n      </mat-tab>\r\n\r\n      @if (parameters?.length) {\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Parameters\">\r\n            <span>Parameters</span>\r\n          </div>\r\n          <br />\r\n          <ul>\r\n            @for (param of parameters; track param) {\r\n              <li>{{ param }}</li>\r\n            }\r\n          </ul>\r\n        </mat-tab>\r\n      }\r\n\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Sources\">\r\n          <span>Sources</span>\r\n        </div>\r\n\r\n        <br />\r\n        <table>\r\n          <tr>\r\n            <th>Name and Guid</th>\r\n            <th>Type</th>\r\n            <th>Configuration</th>\r\n            <th>Error</th>\r\n          </tr>\r\n          @for (source of sources | keyvalue; track source) {\r\n            <tr>\r\n              <td>\r\n                @if (source.value.Definition?.Name) {\r\n                  <div>{{ source.value.Definition?.Name }}</div>\r\n                }\r\n                <pre>{{ source.value.Guid }}</pre>\r\n              </td>\r\n              <td>{{ source.value.Type }}</td>\r\n              <td>\r\n                <ol>\r\n                  @for (config of source.value.Configuration | keyvalue; track config) {\r\n                    <li>\r\n                      <b>{{ config.key }}</b>=<em>{{ config.value }}</em>\r\n                    </li>\r\n                  }\r\n                </ol>\r\n              </td>\r\n              <td>{{ source.value.Error }}</td>\r\n            </tr>\r\n          }\r\n        </table>\r\n      </mat-tab>\r\n\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Streams\">\r\n          <span>Streams</span>\r\n        </div>\r\n\r\n        <br />\r\n        <table>\r\n          <tr>\r\n            <th>Source</th>\r\n            <th>Target</th>\r\n            <th>Items</th>\r\n            <th>Error</th>\r\n          </tr>\r\n          @for (stream of streams; track stream) {\r\n            <tr>\r\n              <td>\r\n                <pre>{{ stream.Source + \":\" + stream.SourceOut }}</pre>\r\n              </td>\r\n              <td>\r\n                <pre>{{ stream.Target + \":\" + stream.TargetIn }}</pre>\r\n              </td>\r\n              <td>{{ stream.Count }}</td>\r\n              <td>{{ stream.Error }}</td>\r\n            </tr>\r\n          }\r\n        </table>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DebugStreamInfo, PipelineResultQuery, PipelineResultSources, PipelineResultStream } from '../models';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { QueryResultDialogData } from './query-result.models';\r\nimport { JsonPipe, KeyValuePipe } from '@angular/common';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@Component({\r\n  selector: 'app-query-result',\r\n  templateUrl: './query-result.component.html',\r\n  styleUrls: ['./query-result.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTabsModule,\r\n    JsonPipe,\r\n    KeyValuePipe,\r\n  ],\r\n})\r\nexport class QueryResultComponent implements OnInit {\r\n  parameters: string[];\r\n  timeUsed: number;\r\n  ticksUsed: number;\r\n  top: number;\r\n  optionsForTop: number[];\r\n  result: PipelineResultQuery;\r\n  debugStream: DebugStreamInfo;\r\n  sources: PipelineResultSources;\r\n  streams: PipelineResultStream[];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: QueryResultDialogData,\r\n    private dialogRef: MatDialogRef<QueryResultComponent>,\r\n    private visualQueryService: VisualQueryStateService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const pipeline = this.visualQueryService.pipelineModel$.value.Pipeline;\r\n    const params = (pipeline.Params?.split('\\n') ?? []).filter(el => !!el);\r\n    const testParams = (pipeline.TestParameters?.split('\\n') ?? []).filter(el => !!el);\r\n    this.parameters = [].concat(params, testParams);\r\n    this.timeUsed = this.dialogData.result.QueryTimer.Milliseconds;\r\n    this.ticksUsed = this.dialogData.result.QueryTimer.Ticks;\r\n    this.top = this.dialogData.top;\r\n    this.optionsForTop = [25, 100, 1000, 0];\r\n    this.result = this.dialogData.result.Query;\r\n    this.debugStream = this.dialogData.debugStream;\r\n    this.sources = this.dialogData.result.Sources;\r\n    this.streams = this.dialogData.result.Streams;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  show(top: number) {\r\n    if (top === this.top) return;\r\n\r\n    if (this.debugStream) {\r\n      this.visualQueryService.debugStream(this.debugStream.original, top);\r\n    } else {\r\n      this.visualQueryService.runPipeline(top);\r\n    }\r\n\r\n    this.closeDialog();\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogActions } from '@angular/material/dialog';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { StreamErrorData } from '../models';\r\nimport { StreamErrorResultDialogData } from './stream-error-result.models';\r\nimport { JsonPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-stream-error-result',\r\n  templateUrl: './stream-error-result.component.html',\r\n  styleUrls: ['./stream-error-result.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogActions,\r\n    JsonPipe,\r\n  ],\r\n})\r\nexport class StreamErrorResultComponent implements OnInit {\r\n  errorData: StreamErrorData;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: StreamErrorResultDialogData,\r\n    private dialogRef: MatDialogRef<StreamErrorResultComponent>,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.errorData = this.dialogData.errorData;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/logs?key=web-api-query'), '_blank');\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Stream Error Results</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <pre>{{ errorData | json }}</pre>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button class=\"eav-button__with-icon\" tippy=\"Open 2sxc Insights\" (click)=\"openInsights()\">\r\n      <mat-icon class=\"eav-icon\">speed</mat-icon>\r\n      <span>Insights</span>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Injectable, NgZone, OnDestroy, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { BehaviorSubject, filter, fromEvent, Subject } from 'rxjs';\r\nimport { ContentTypesService } from '../../app-administration/services/content-types.service';\r\nimport { MetadataService } from '../../permissions/services/metadata.service';\r\nimport { QueryDefinitionService } from './query-definition.service';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep } from '../../shared/models/edit-form.model';\r\n// tslint:disable-next-line:max-line-length\r\nimport { DataSource, DataSourceConfig, DataSourceConfigs, DebugStreamInfo, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { QueryResultComponent } from '../query-result/query-result.component';\r\nimport { QueryResultDialogData } from '../query-result/query-result.models';\r\nimport { StreamErrorResultComponent } from '../stream-error-result/stream-error-result.component';\r\nimport { StreamErrorResultDialogData } from '../stream-error-result/stream-error-result.models';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { transient } from '../../core';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { ServiceBase } from '../../shared/services/service-base';\r\nimport { isCtrlS } from '../../edit/dialog/main/keyboard-shortcuts';\r\n\r\n/**\r\n * Service containing the state for the visual query.\r\n * It's shared, so should not be used with transient(...);\r\n */\r\n@Injectable()\r\nexport class VisualQueryStateService extends ServiceBase implements OnDestroy {\r\n\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n  #metadataSvc = transient(MetadataService);\r\n  #queryDefSvc = transient(QueryDefinitionService);\r\n  #dialogRoute = transient(DialogRoutingService);\r\n  #titleSvc = transient(Title);\r\n\r\n\r\n  pipelineModel$ = new BehaviorSubject<PipelineModel>(null);\r\n  dataSources$ = new BehaviorSubject<DataSource[]>(null);\r\n  putEntityCountOnConnections$ = new Subject<PipelineResult>();\r\n  dataSourceConfigs$ = new BehaviorSubject<DataSourceConfigs>({});\r\n  pipelineResult?: PipelineResult;\r\n\r\n  #pipelineId = parseInt(this.#dialogRoute.getParam('pipelineId'), 10);\r\n  #refreshPipeline = false;\r\n  #refreshDataSourceConfigs = false;\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private zone: NgZone,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.pipelineModel$.complete();\r\n    this.dataSources$.complete();\r\n    this.putEntityCountOnConnections$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  init() {\r\n    this.fetchDataSources(() => this.fetchPipeline(true, true, false));\r\n    this.attachKeyboardSave();\r\n    this.#dialogRoute.doOnDialogClosed(() => {\r\n      if (this.#refreshPipeline || this.#refreshDataSourceConfigs)\r\n        this.fetchPipeline(this.#refreshPipeline, this.#refreshDataSourceConfigs, this.#refreshPipeline);\r\n      this.#refreshPipeline = false;\r\n      this.#refreshDataSourceConfigs = false;\r\n    });\r\n  }\r\n\r\n  editPipelineEntity() {\r\n    // save Pipeline, then open Edit Dialog\r\n    this.savePipeline(() => {\r\n      const form: EditForm = {\r\n        items: [EditPrep.editId(this.pipelineModel$.value.Pipeline.EntityId)],\r\n      };\r\n      const formUrl = convertFormToUrl(form);\r\n      this.#dialogRoute.navRelative([`edit/${formUrl}`]);\r\n      this.#refreshPipeline = true;\r\n    });\r\n  }\r\n\r\n  saveAndRun(save: boolean, run: boolean) {\r\n    if (save && run) {\r\n      this.savePipeline(() => { this.runPipeline(); });\r\n    } else if (save) {\r\n      this.savePipeline();\r\n    } else if (run) {\r\n      this.runPipeline();\r\n    }\r\n  }\r\n\r\n  showDataSourceDetails(showDetails: boolean) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const visualDesignerData: Record<string, any> = JsonHelpers.tryParse(pipelineModel.Pipeline.VisualDesignerData) ?? {};\r\n    visualDesignerData.ShowDataSourceDetails = showDetails;\r\n    pipelineModel.Pipeline.VisualDesignerData = JSON.stringify(visualDesignerData);\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const newPipelineDataSource: PipelineDataSource = {\r\n      Description: '',\r\n      EntityGuid: 'unsaved' + (pipelineModel.DataSources.length + 1),\r\n      EntityId: undefined,\r\n      Name: dataSource.Name,\r\n      PartAssemblyAndType: dataSource.PartAssemblyAndType,\r\n      VisualDesignerData: { Top: 100, Left: 100 },\r\n    };\r\n    pipelineModel.DataSources.push(newPipelineDataSource);\r\n    this.pipelineModel$.next(pipelineModel);\r\n    this.savePipeline();\r\n  }\r\n\r\n  removeDataSource(pipelineDataSourceGuid: string, connections: StreamWire[], streamsOut: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    pipelineModel.DataSources = pipelineModel.DataSources.filter(pipelineDS => pipelineDS.EntityGuid !== pipelineDataSourceGuid);\r\n    pipelineModel.Pipeline.StreamWiring = connections;\r\n    pipelineModel.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  renameDataSource(pipelineDataSourceGuid: string, name: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    pipelineDataSource.Name = name;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeDataSourceDescription(pipelineDataSourceGuid: string, description: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    pipelineDataSource.Description = description;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeConnections(connections: StreamWire[], streamsOut: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    pipelineModel.Pipeline.StreamWiring = connections;\r\n    pipelineModel.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeDataSourcePosition(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    if (!pipelineDataSource) {\r\n      // spm NOTE: fixes problem where dataSource position can't be updated if dataSource with guid unsavedXX gets saved while dragging.\r\n      // Can happen if dataSource is just added and user drags it and save happens.\r\n      return;\r\n    }\r\n    pipelineDataSource.VisualDesignerData = { ...pipelineDataSource.VisualDesignerData, ...position };\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  private calculateDataSourceConfigs(dataSources: PipelineDataSource[]) {\r\n    const dataSourceConfigs: DataSourceConfigs = {};\r\n    dataSources.forEach(dataSource => {\r\n      if (dataSource.EntityId == null) return;\r\n      dataSourceConfigs[dataSource.EntityId] = [];\r\n      dataSource.Metadata?.forEach(metadataItem => {\r\n        Object.entries(metadataItem).forEach(([attributeName, attributeValue]) => {\r\n          if (attributeValue == null || attributeValue === '') return;\r\n          if (['Created', 'Guid', 'Id', 'Modified', 'Title', '_Type'].includes(attributeName)) return;\r\n          if (Array.isArray(attributeValue) && attributeValue[0]?.Title != null && attributeValue[0]?.Id != null) {\r\n            attributeValue = `${attributeValue[0].Title} (${attributeValue[0].Id})`;\r\n          }\r\n          const dataSourceConfig: DataSourceConfig = {\r\n            name: attributeName,\r\n            value: attributeValue,\r\n          };\r\n          dataSourceConfigs[dataSource.EntityId].push(dataSourceConfig);\r\n        });\r\n      });\r\n    });\r\n    this.dataSourceConfigs$.next(dataSourceConfigs);\r\n  }\r\n\r\n  editDataSource(pipelineDataSource: PipelineDataSource) {\r\n    const dataSource = this.dataSources$.value.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    const contentTypeName = dataSource.ContentType;\r\n    const targetType = eavConstants.metadata.entity.targetType;\r\n    const keyType = eavConstants.metadata.entity.keyType;\r\n    const key = pipelineDataSource.EntityGuid;\r\n\r\n    // query for existing Entity\r\n    this.#metadataSvc.getMetadata(targetType, keyType, key, contentTypeName).subscribe(metadata => {\r\n      // edit existing Entity\r\n      if (metadata.Items.length) {\r\n        const form: EditForm = {\r\n          items: [EditPrep.editId(metadata.Items[0].Id)],\r\n        };\r\n        const formUrl = convertFormToUrl(form);\r\n        this.#dialogRoute.navRelative([`edit/${formUrl}`]);\r\n        this.#refreshDataSourceConfigs = true;\r\n        return;\r\n      }\r\n\r\n      // Check if the type exists, and if yes, create new Entity\r\n      this.#contentTypesSvc.retrieveContentType(contentTypeName).subscribe({\r\n        next: contentType => {\r\n          if (contentType == null) {\r\n            this.snackBar.open('DataSource doesn\\'t have any configuration', undefined, { duration: 3000 });\r\n            return;\r\n          }\r\n          const form: EditForm = {\r\n            items: [ EditPrep.newMetadata(key, contentTypeName, eavConstants.metadata.entity) ],\r\n          };\r\n          const formUrl = convertFormToUrl(form);\r\n          this.#dialogRoute.navRelative([`edit/${formUrl}`]);\r\n          this.#refreshDataSourceConfigs = true;\r\n        },\r\n        error: (error: HttpErrorResponse) => {\r\n          const message = 'Server reports error - this usually means that this DataSource doesn\\'t have any configuration';\r\n          this.snackBar.open(message, undefined, { duration: 3000 });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private savePipeline(callback?: () => void) {\r\n    this.snackBar.open('Saving...');\r\n    this.#queryDefSvc.savePipeline(this.pipelineModel$.value).subscribe({\r\n      next: pipelineModel => {\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n        this.pipelineModel$.next(pipelineModel);\r\n        if (callback != null) { callback(); }\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Save Pipeline failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  runPipeline(top = 25) {\r\n    this.snackBar.open('Running query...');\r\n    this.#queryDefSvc.runPipeline(this.pipelineModel$.value.Pipeline.EntityId, top).subscribe({\r\n      next: pipelineResult => {\r\n        this.snackBar.open('Query worked', null, { duration: 2000 });\r\n        this.pipelineResult = pipelineResult;\r\n        this.showQueryResult(pipelineResult, top);\r\n        console.warn(pipelineResult);\r\n        // push cloned pipelineModel to reset jsPlumb\r\n        this.pipelineModel$.next(cloneDeep(this.pipelineModel$.value));\r\n        setTimeout(() => { this.putEntityCountOnConnections$.next(pipelineResult); });\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Query failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  debugStream(stream: PipelineResultStream, top = 25) {\r\n    if (stream.Error) {\r\n      this.showStreamErrorResult(stream);\r\n      return;\r\n    }\r\n\r\n    if (stream.Count === 0) return;\r\n\r\n    this.snackBar.open('Running stream...');\r\n    const pipelineId = this.pipelineModel$.value.Pipeline.EntityId;\r\n    this.#queryDefSvc.debugStream(pipelineId, stream.Source, stream.SourceOut, top).subscribe({\r\n      next: streamResult => {\r\n        this.snackBar.open('Stream worked', null, { duration: 2000 });\r\n        const pipelineDataSource = this.pipelineModel$.value.DataSources.find(ds => ds.EntityGuid === stream.Source);\r\n        const debugStream: DebugStreamInfo = {\r\n          name: stream.SourceOut,\r\n          source: stream.Source,\r\n          sourceName: pipelineDataSource.Name,\r\n          original: stream,\r\n        };\r\n        this.showQueryResult(streamResult, top, debugStream);\r\n        console.warn(streamResult);\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Stream failed', null, { duration: 2000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  private fetchPipeline(refreshPipeline: boolean, refreshDataSourceConfigs: boolean, showSnackBar: boolean) {\r\n    if (showSnackBar) {\r\n      this.snackBar.open('Reloading query, please wait...');\r\n    }\r\n    this.#queryDefSvc.fetchPipeline(this.#pipelineId, this.dataSources$.value).subscribe(pipelineModel => {\r\n      if (showSnackBar) {\r\n        this.snackBar.open('Query reloaded', null, { duration: 2000 });\r\n      }\r\n      this.#titleSvc.setTitle(`${pipelineModel.Pipeline.Name} - Visual Query`);\r\n      if (refreshPipeline) {\r\n        this.pipelineModel$.next(pipelineModel);\r\n      }\r\n      if (refreshDataSourceConfigs) {\r\n        this.calculateDataSourceConfigs(pipelineModel.DataSources);\r\n      }\r\n    });\r\n  }\r\n\r\n  private showQueryResult(result: PipelineResult, top: number, debugStream?: DebugStreamInfo) {\r\n    const dialogData: QueryResultDialogData = {\r\n      result,\r\n      debugStream,\r\n      top,\r\n    };\r\n    this.dialog.open(QueryResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private showStreamErrorResult(stream: PipelineResultStream) {\r\n    const dialogData: StreamErrorResultDialogData = {\r\n      errorData: stream.ErrorData,\r\n    };\r\n    this.dialog.open(StreamErrorResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private fetchDataSources(callback?: () => void) {\r\n    this.#queryDefSvc.fetchDataSources().subscribe(dataSources => {\r\n      this.dataSources$.next(dataSources);\r\n      callback();\r\n    });\r\n  }\r\n\r\n  private attachKeyboardSave() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown').pipe(\r\n          filter(() => !this.#dialogRoute.snapshot.firstChild),\r\n          filter(event => isCtrlS(event)),\r\n        ).subscribe(event => {\r\n          event.preventDefault();\r\n          this.zone.run(() => { this.savePipeline(); });\r\n        })\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { DataSource, PipelineDataSource } from '../models';\r\nimport { GuiTypes, TypeInfo, TypeInfos } from './plumb-editor.models';\r\n\r\nexport const guiTypes: GuiTypes = {\r\n  App: { Name: 'App', Label: 'App DataSources', Icon: 'star', UiHint: 'DataSources from the current App' },\r\n  Cache: { Name: 'Cache', Icon: 'history', UiHint: 'Caching of data' },\r\n  Filter: { Name: 'Filter', Icon: 'filter_list', UiHint: 'Filter data - usually returning less items than came in' },\r\n  Logic: { Name: 'Logic', Icon: 'share', UiHint: 'Logic operations - usually choosing between different streams' },\r\n  Lookup: { Name: 'Lookup', Icon: 'search', UiHint: 'Lookup operation - usually looking for other data based on a criteria' },\r\n  Modify: { Name: 'Modify', Icon: 'edit_attributes', UiHint: 'Modify data - usually changing, adding or removing values' },\r\n  Security: { Name: 'Security', Icon: 'account_circle', UiHint: 'Security - usually limit what the user sees based on his identity' },\r\n  Sort: { Name: 'Sort', Icon: 'sort', UiHint: 'Sort the items' },\r\n  Source: { Name: 'Source', Icon: 'cloud_upload', UiHint: 'Source of new data - usually SQL, CSV or similar' },\r\n  Target: { Name: 'Target', Icon: 'adjust', UiHint: 'Target - usually just a destination of data' },\r\n  Unknown: { Name: 'Unknown', Icon: 'fiber_manual_record', UiHint: 'Unknown type' },\r\n  Debug: { Name: 'Debug', Icon: 'bug_report', UiHint: 'Debugging Tools'},\r\n  System: { Name: 'System', Icon: 'military_tech', UiHint: 'System Data' },\r\n};\r\n\r\nexport function calculateTypeInfos(pipelineDataSources: PipelineDataSource[], dataSources: DataSource[]) {\r\n  const typeInfos: TypeInfos = {};\r\n\r\n  for (const pipelineDataSource of pipelineDataSources) {\r\n    let typeInfo: TypeInfo;\r\n    const dataSource = dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    if (dataSource) {\r\n      typeInfo = { ...(dataSource.PrimaryType ? guiTypes[dataSource.PrimaryType] : guiTypes.Unknown) };\r\n      if (dataSource.Icon != null) { typeInfo.Icon = dataSource.Icon; }\r\n      if (dataSource.DynamicIn != null) { typeInfo.DynamicIn = dataSource.DynamicIn; }\r\n      if (dataSource.DynamicOut != null) { typeInfo.DynamicOut = dataSource.DynamicOut; }\r\n      if (dataSource.HelpLink != null) { typeInfo.HelpLink = dataSource.HelpLink; }\r\n      if (dataSource.EnableConfig != null) { typeInfo.EnableConfig = dataSource.EnableConfig; }\r\n      if (dataSource.UiHint != null) { typeInfo.UiHint = dataSource.UiHint; }\r\n    }\r\n    if (!typeInfo) { typeInfo = { ...guiTypes.Unknown }; }\r\n    typeInfos[pipelineDataSource.EntityGuid] = typeInfo;\r\n  }\r\n\r\n  return typeInfos;\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Rename stream</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <form [formGroup]=\"form\">\r\n      <!-- Simple form -->\r\n      @if (!isSource || !pipelineResultExists) {\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"label\" required>\r\n        </mat-form-field>\r\n        @if (isSource && !pipelineResultExists) {\r\n          <app-field-hint>\r\n            You will get suggestions for out-streams after you run query\r\n          </app-field-hint>\r\n        }\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n\r\n      <!-- Rich form -->\r\n      @if (isSource && pipelineResultExists) {\r\n        <!-- Scope -->\r\n        @if (advancedMode && guidedLabel) {\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Scope</mat-label>\r\n            <mat-select formControlName=\"scope\" [placeholder]=\"!scopeOptions.length ? 'No items found' : ''\">\r\n              @for (scopeOption of scopeOptions; track scopeOption) {\r\n                <mat-option [value]=\"scopeOption.value\">\r\n                  {{ scopeOption.name }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <app-field-hint>\r\n            The scope should almost never be changed -\r\n            <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n          </app-field-hint>\r\n        }\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          @if (guidedLabel) {\r\n            <mat-select formControlName=\"label\" required\r\n              [placeholder]=\"!labelOptions.length ? 'No items found' : ''\">\r\n              @for (labelOption of labelOptions; track labelOption) {\r\n                <mat-option [value]=\"labelOption\">\r\n                  {{ labelOption }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          }\r\n          @if (!guidedLabel) {\r\n            <input matInput type=\"text\" formControlName=\"label\" required>\r\n          }\r\n          <div matTextSuffix class=\"eav-selection-suffix\">\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': guidedLabel }\" tippy=\"Pick existing value\"\r\n              (click)=\"toggleGuidedLabel(true)\">\r\n              <mat-icon class=\"eav-icon\">search</mat-icon>\r\n            </button>\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': !guidedLabel }\" tippy=\"Manual entry\"\r\n              (click)=\"toggleGuidedLabel(false)\">\r\n              <mat-icon class=\"eav-icon\">text_fields</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-form-field>\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n    </form>\r\n  </div>\r\n  <mat-dialog-actions class=\"eav-dialog-actions\">\r\n    <!-- Extra button for rich form -->\r\n    <div>\r\n      @if (isSource && pipelineResultExists) {\r\n        <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n          {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n        </mat-slide-toggle>\r\n      }\r\n    </div>\r\n    <div>\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\" [disabled]=\"!form.valid\" (click)=\"rename()\">\r\n        Rename\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { ChangeDetectorRef, Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { distinctUntilChanged, startWith } from 'rxjs';\r\nimport { ContentTypesService } from '../../../app-administration/services';\r\nimport { BaseComponent } from '../../../shared/components/base.component';\r\nimport { eavConstants, ScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { VisualQueryStateService } from '../../services/visual-query.service';\r\nimport { RenameStreamDialogControls, RenameStreamDialogData, RenameStreamDialogFormValue } from './rename-stream.models';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FieldHintComponent } from '../../../shared/components/field-hint/field-hint.component';\r\nimport { ClickStopPropagationDirective } from '../../../shared/directives/click-stop-propagation.directive';\r\nimport { transient } from '../../../core';\r\n\r\n@Component({\r\n  selector: 'app-rename-stream',\r\n  templateUrl: './rename-stream.component.html',\r\n  styleUrls: ['./rename-stream.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    NgClass,\r\n    MatDialogActions,\r\n    MatSlideToggleModule,\r\n    FieldHintComponent,\r\n    ClickStopPropagationDirective,\r\n  ],\r\n})\r\nexport class RenameStreamComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  controls: RenameStreamDialogControls;\r\n  isSource = this.dialogData.isSource;\r\n  pipelineResultExists = this.visualQueryService.pipelineResult != null;\r\n  scopeOptions: ScopeOption[] = [];\r\n  labelOptions: string[] = [];\r\n  guidedLabel = true;\r\n  advancedMode = false;\r\n\r\n  private contentTypesService = transient(ContentTypesService);\r\n  \r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: RenameStreamDialogData,\r\n    private dialogRef: MatDialogRef<RenameStreamComponent>,\r\n    private visualQueryService: VisualQueryStateService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(label?: string): void {\r\n    this.dialogRef.close(label);\r\n  }\r\n\r\n  toggleGuidedLabel(guidedLabel: boolean): void {\r\n    this.guidedLabel = guidedLabel;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  rename(): void {\r\n    const formValue: RenameStreamDialogFormValue = this.form.getRawValue();\r\n    this.closeDialog(formValue.label);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({\r\n      label: new UntypedFormControl(this.dialogData.label, Validators.required),\r\n      scope: new UntypedFormControl(eavConstants.scopes.default.value),\r\n    });\r\n    this.controls = this.form.controls as any;\r\n\r\n    if (!this.isSource || !this.pipelineResultExists) return;\r\n\r\n    this.subscriptions.add(\r\n      this.controls.scope.valueChanges.pipe(\r\n        startWith<string>(this.controls.scope.value),\r\n        distinctUntilChanged(),\r\n      ).subscribe(scope => {\r\n        this.labelOptions = Object.values(this.visualQueryService.pipelineResult.Sources)\r\n          .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out\r\n          .filter(out => out.Scope === scope)\r\n          .map(out => out.Name);\r\n        if (!this.labelOptions.includes(this.controls.label.value) && this.controls.label.value != null) {\r\n          this.controls.label.patchValue(null);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.contentTypesService.getScopes().subscribe(scopes => {\r\n      const sourceOut = Object.values(this.visualQueryService.pipelineResult.Sources)\r\n        .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out;\r\n      const filtered = scopes.filter(s => sourceOut.some(o => o.Scope === s.value));\r\n      this.scopeOptions = filtered;\r\n      this.changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectorRef, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { EndpointInfo, PlumbType } from './plumb-editor.models';\r\nimport { RenameStreamComponent } from './rename-stream/rename-stream.component';\r\nimport { RenameStreamDialogData } from './rename-stream/rename-stream.models';\r\nimport { classLog } from '../../shared/logging';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport const dataSrcIdPrefix = 'dataSource_';\r\n\r\nconst endPointsWhereWeRotate = 3;\r\n\r\nexport class Plumber {\r\n\r\n  log = classLog({Plumber});\r\n\r\n  private instance: PlumbType;\r\n  private lineCount = 0;\r\n  private linePaintDefault = {\r\n    stroke: '#61B7CF',\r\n    strokeWidth: 4,\r\n    outlineStroke: 'white',\r\n    outlineWidth: 2,\r\n  };\r\n  private lineColors = [\r\n    '#009688', '#00bcd4', '#3f51b5', '#9c27b0', '#e91e63',\r\n    '#db4437', '#ff9800', '#60a917', '#60a917', '#008a00',\r\n    '#00aba9', '#1ba1e2', '#0050ef', '#6a00ff', '#aa00ff',\r\n    '#f472d0', '#d80073', '#a20025', '#e51400', '#fa6800',\r\n    '#f0a30a', '#e3c800', '#825a2c', '#6d8764', '#647687',\r\n    '#76608a', '#a0522d',\r\n  ];\r\n  private maxCols = this.lineColors.length - 1;\r\n  private uuidColorMap: Record<string, any> = {};\r\n  private bulkDelete = false;\r\n  private dialogRef: MatDialogRef<RenameStreamComponent>;\r\n\r\n  constructor(\r\n    private jsPlumbRoot: HTMLElement,\r\n    private pipelineModel: PipelineModel,\r\n    private dataSources: DataSource[],\r\n    private onConnectionsChanged: () => void,\r\n    private onDragend: (pipelineDataSourceGuid: string, position: VisualDesignerData) => void,\r\n    private onDebugStream: (stream: PipelineResultStream) => void,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    this.instance = window.jsPlumb.getInstance(this.getInstanceDefaults(this.jsPlumbRoot));\r\n    this.instance.batch(() => {\r\n      this.initDomDataSources();\r\n      this.initWirings();\r\n      this.bindEvents();\r\n    });\r\n    // spm NOTE: repaint after initial paint fixes:\r\n    // Error: <svg> attribute width: Expected length, \"-Infinity\".\r\n    this.instance.repaintEverything();\r\n  }\r\n\r\n  destroy() {\r\n    this.dialogRef?.close();\r\n    this.instance.reset();\r\n    this.instance.unbindContainer();\r\n  }\r\n\r\n  removeEndpointsOnDataSource(pipelineDataSourceGuid: string) {\r\n    const elementId = dataSrcIdPrefix + pipelineDataSourceGuid;\r\n    this.bulkDelete = true;\r\n    this.instance.batch(() => {\r\n      this.instance.selectEndpoints({ element: elementId }).delete();\r\n    });\r\n    this.bulkDelete = false;\r\n  }\r\n\r\n  getAllConnections() {\r\n    const connectionInfos: StreamWire[] = this.instance.getAllConnections().map((connection: PlumbType) => {\r\n      const wire: StreamWire = {\r\n        From: connection.sourceId.replace(dataSrcIdPrefix, ''),\r\n        Out: connection.endpoints[0].getOverlay('endpointLabel').label,\r\n        To: connection.targetId.replace(dataSrcIdPrefix, ''),\r\n        In: connection.endpoints[1].getOverlay('endpointLabel').label,\r\n      };\r\n      return wire;\r\n    });\r\n    return connectionInfos;\r\n  }\r\n\r\n  getStreamsOut() {\r\n    const streamsOut: string[] = [];\r\n    this.instance.selectEndpoints({ target: dataSrcIdPrefix + 'Out' }).each((endpoint: PlumbType) => {\r\n      streamsOut.push(endpoint.getOverlay('endpointLabel').label);\r\n    });\r\n    const streamsOutStr = streamsOut.join(',');\r\n    return streamsOutStr;\r\n  }\r\n\r\n  putEntityCountOnConnections(result: PipelineResult) {\r\n    result.Streams?.forEach(stream => {\r\n      const sourceElementId = dataSrcIdPrefix + stream.Source;\r\n      const outTargets = ['00000000-0000-0000-0000-000000000000', this.pipelineModel.Pipeline.EntityGuid];\r\n      const targetElementId = outTargets.includes(stream.Target) ? dataSrcIdPrefix + 'Out' : dataSrcIdPrefix + stream.Target;\r\n\r\n      const fromUuid = sourceElementId + '_out_' + stream.SourceOut;\r\n      const toUuid = targetElementId + '_in_' + stream.TargetIn;\r\n\r\n      const sEndp: PlumbType = this.instance.getEndpoint(fromUuid);\r\n      sEndp?.connections\r\n        ?.filter((connection: PlumbType) => connection.endpoints[1].getUuid() === toUuid)\r\n        ?.forEach((connection: PlumbType) => {\r\n          const label = !stream.Error ? stream.Count.toString() : '';\r\n          const cssClass = 'streamEntitiesCount ' + (!stream.Error ? '' : 'streamEntitiesError');\r\n          connection.setLabel({\r\n            label,\r\n            cssClass,\r\n            events: {\r\n              click: (overlay: PlumbType) => {\r\n                if (!this.pipelineModel.Pipeline.AllowEdit) return;\r\n                this.onDebugStream(stream);\r\n              },\r\n            },\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  private nextLinePaintStyle(uuid: string) {\r\n    return (\r\n      this.uuidColorMap[uuid] ||\r\n      (this.uuidColorMap[uuid] = Object.assign({}, this.linePaintDefault, { stroke: this.lineColors[this.lineCount++ % this.maxCols] }))\r\n    );\r\n  }\r\n\r\n  private getInstanceDefaults(container: HTMLElement) {\r\n    const defaults = {\r\n      Container: container,\r\n      Connector: ['Bezier', { curviness: 70 }],\r\n      PaintStyle: this.nextLinePaintStyle('dummy'),\r\n      HoverPaintStyle: {\r\n        stroke: '#216477',\r\n        strokeWidth: 4,\r\n        outlineStroke: 'white',\r\n        outlineWidth: 2,\r\n      },\r\n    };\r\n    return defaults;\r\n  }\r\n\r\n  /** Create sources, targets and endpoints */\r\n  private initDomDataSources() {\r\n    const l = this.log.fnCond(false, 'initDomDataSources');\r\n    for (const pipelineDataSource of this.pipelineModel.DataSources) {\r\n      const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + dataSrcIdPrefix + pipelineDataSource.EntityGuid);\r\n      if (!domDataSource) continue;\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      if (!dataSource) continue;\r\n\r\n      if (this.pipelineModel.Pipeline.AllowEdit) {\r\n        // WARNING! Must happen before instance.makeSource()\r\n        this.instance.draggable(domDataSource, {\r\n          grid: [20, 20], stop: (event: PlumbType) => {\r\n            const element: HTMLElement = event.el;\r\n            const pipelineDataSourceGuid: string = element.id.replace(dataSrcIdPrefix, '');\r\n            const position: VisualDesignerData = {\r\n              Top: event.finalPos[1],\r\n              Left: event.finalPos[0],\r\n            };\r\n            setTimeout(() => { this.onDragend(pipelineDataSourceGuid, position); });\r\n          }\r\n        });\r\n      }\r\n\r\n      // Add Out-Endpoints from Definition\r\n      const outCount = dataSource.Out?.length ?? 0;\r\n      l.a('dataSource.Out', { outCount, out: dataSource.Out });\r\n      dataSource.Out?.forEach(name => {\r\n        this.addEndpoint(domDataSource, name, false, pipelineDataSource, outCount);\r\n      });\r\n\r\n      // Add In-Endpoints from Definition\r\n      const inCount = dataSource.In?.length ?? 0;\r\n      l.a('dataSource.In', { inCount, in: dataSource.In });\r\n      dataSource.In?.forEach(name => {\r\n        this.addEndpoint(domDataSource, name, true, pipelineDataSource, inCount);\r\n      });\r\n\r\n      // Make DataSource a Target for new Endpoints (if .In is an Array)\r\n      if (dataSource.In) {\r\n        const targetEndpointUnlimited = this.buildTargetEndpoint(pipelineDataSource.EntityGuid);\r\n        targetEndpointUnlimited.maxConnections = -1;\r\n        this.instance.makeTarget(domDataSource, targetEndpointUnlimited);\r\n      }\r\n\r\n      if (dataSource.DynamicOut)\r\n        this.instance.makeSource(domDataSource, this.buildSourceEndpoint(pipelineDataSource.EntityGuid), { filter: '.add-endpoint' });\r\n    }\r\n    l.end();\r\n  }\r\n\r\n  /** Create wires */\r\n  private initWirings() {\r\n    const l = this.log.fn('initWirings');\r\n    const wirings = this.pipelineModel.Pipeline.StreamWiring;\r\n    if (!wirings) return l.end('no wirings');\r\n\r\n    const inGroups = groupBy(wirings, wire => wire.To);\r\n    const outGroups = groupBy(wirings, wire => wire.From);\r\n\r\n    l.values({ inGroups, outGroups });\r\n\r\n    wirings.forEach(wire => {\r\n      // read connections from Pipeline\r\n      const sourceElementId = dataSrcIdPrefix + wire.From;\r\n      const fromUuid = sourceElementId + '_out_' + wire.Out;\r\n      const targetElementId = dataSrcIdPrefix + wire.To;\r\n      const toUuid = targetElementId + '_in_' + wire.In;\r\n\r\n      // Ensure In-Endpoint exist\r\n      if (!this.instance.getEndpoint(fromUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + sourceElementId);\r\n        if (!domDataSource) return;\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const dataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n        this.addEndpoint(domDataSource, wire.Out, false, dataSource, outGroups[wire.From].length);\r\n      }\r\n\r\n      // Ensure Out-Endpoint exist\r\n      if (!this.instance.getEndpoint(toUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + targetElementId);\r\n        if (!domDataSource) return;\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const dataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n        \r\n        // if (wire.In === \"DEBUG\") debugger;\r\n\r\n        this.addEndpoint(domDataSource, wire.In, true, dataSource, inGroups[wire.To].length);\r\n      }\r\n\r\n      try {\r\n        this.instance.connect({\r\n          uuids: [fromUuid, toUuid],\r\n          paintStyle: this.nextLinePaintStyle(fromUuid),\r\n        });\r\n      } catch (e) {\r\n        console.error({ message: 'Connection failed', from: fromUuid, to: toUuid });\r\n      }\r\n    });\r\n    l.end();\r\n  }\r\n\r\n  private addEndpoint(domDataSource: HTMLElement, endpointName: string, isIn: boolean, pipelineDataSource: PipelineDataSource, count: number = 0) {\r\n    const l = this.log.fnCond(false, 'addEndpoint', { endpointName, isIn, pipelineDataSource });\r\n    const dataSource = this.dataSources.find(d => d.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    const connectionList = isIn ? dataSource.In : dataSource.Out;\r\n    const isDynamic = connectionList?.some(name => this.getEndpointInfo(name, false));\r\n    // const count = connectionList?.length ?? -1;\r\n    const endpointInfo = this.getEndpointInfo(endpointName, isDynamic);\r\n    \r\n    l.a(`endpointInfo ${count}`, { dataSource, connectionList, isDynamic, count, endpointInfo });\r\n\r\n    // if (endpointName === \"DEBUG\") debugger;\r\n\r\n    let style: string;\r\n    if (isDynamic)\r\n      style = 'dynamic';\r\n    else if (!endpointInfo.required)\r\n      style = '';\r\n    else {\r\n      const wireExists = this.pipelineModel.Pipeline.StreamWiring?.some(wire => {\r\n        const targetElementId = dataSrcIdPrefix + wire.To;\r\n        const targetEndpointName = wire.In;\r\n\r\n        return targetElementId === domDataSource.id && targetEndpointName === endpointInfo.name;\r\n      });\r\n      style = wireExists ? '' : 'required';\r\n    }\r\n\r\n    const uuid = domDataSource.id + (isIn ? '_in_' : '_out_') + endpointInfo.name;\r\n    const angled = count > endPointsWhereWeRotate;\r\n    const model = isIn\r\n      ? this.buildTargetEndpoint(pipelineDataSource.EntityGuid, style)\r\n      : this.buildSourceEndpoint(pipelineDataSource.EntityGuid, style);\r\n    // Endpoints on Out-DataSource must be always enabled\r\n    const params = {\r\n      uuid,\r\n      enabled: this.pipelineModel.Pipeline.AllowEdit\r\n        || pipelineDataSource.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    };\r\n\r\n    const endpoint: PlumbType = this.instance.addEndpoint(domDataSource, model, params);\r\n    const overlay = endpoint.getOverlay('endpointLabel');\r\n    overlay.setLabel(endpointInfo.name);\r\n    if (angled)\r\n      overlay.addClass('angled');\r\n    l.end(\"end\", {count, angled, overlay});\r\n  }\r\n\r\n  private buildSourceEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const isSource = true;\r\n    const sourceEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'sourceEndpoint ' + style ?? '',\r\n      maxConnections: -1,\r\n      isSource,\r\n      anchor: ['Continuous', { faces: ['top'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => {\r\n          this.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid);\r\n        },\r\n      },\r\n    };\r\n    return sourceEndpoint;\r\n  }\r\n\r\n  private buildTargetEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const isSource = false;\r\n    const targetEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'targetEndpoint ' + (style ?? ' '), // + (angled ? 'angled' : ''),\r\n      maxConnections: 1,\r\n      isTarget: !isSource,\r\n      anchor: ['Continuous', { faces: ['bottom'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      dropOptions: { hoverClass: 'hover', activeClass: 'active' },\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => {\r\n          this.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid);\r\n        },\r\n      },\r\n    };\r\n    return targetEndpoint;\r\n  }\r\n\r\n  private getEndpointOverlays(isSource: boolean) {\r\n    return [\r\n      [\r\n        'Label', {\r\n          id: 'endpointLabel',\r\n          location: [0.5, isSource ? 0 : 1],\r\n          label: 'Default',\r\n          cssClass: isSource ? 'endpointSourceLabel' : 'endpointTargetLabel',\r\n        },\r\n      ],\r\n    ];\r\n  }\r\n\r\n  private onChangeLabel(endpointOrOverlay: PlumbType, isSource: boolean, pipelineDataSourceGuid: string) {\r\n    if (!this.pipelineModel.Pipeline.AllowEdit) return;\r\n\r\n    const overlay: PlumbType = endpointOrOverlay.getOverlay ? endpointOrOverlay.getOverlay('endpointLabel') : endpointOrOverlay;\r\n    const data: RenameStreamDialogData = {\r\n      pipelineDataSourceGuid,\r\n      isSource,\r\n      label: overlay.label,\r\n    };\r\n    this.dialogRef = this.dialog.open(RenameStreamComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    this.dialogRef.afterClosed().subscribe(newLabel => {\r\n      if (!newLabel) return;\r\n      overlay.setLabel(newLabel);\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private bindEvents() {\r\n    this.instance.bind('connectionDetached', (info: PlumbType) => {\r\n      if (this.bulkDelete) return;\r\n      const domDataSource: HTMLElement = info.target;\r\n      const pipelineDataSource = this.pipelineModel.DataSources.find(\r\n        pipelineDS => pipelineDS.EntityGuid === domDataSource.id.replace(dataSrcIdPrefix, '')\r\n      );\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      const label: string = info.targetEndpoint.getOverlay('endpointLabel').label;\r\n      const isDynamic = !dataSource.In.some(name => this.getEndpointInfo(name, false).name === label);\r\n      if (isDynamic) {\r\n        this.instance.deleteEndpoint(info.targetEndpoint);\r\n        setTimeout(() => { this.onConnectionsChanged(); });\r\n      } else {\r\n        setTimeout(() => { this.onConnectionsChanged(); });\r\n      }\r\n    });\r\n\r\n    this.instance.bind('connection', (info: PlumbType) => {\r\n      if (info.sourceId === info.targetId) {\r\n        setTimeout(() => {\r\n          this.instance.deleteConnection(info.connection, { fireEvent: false });\r\n          setTimeout(() => { this.onConnectionsChanged(); });\r\n        });\r\n        return;\r\n      }\r\n      const endpointLabel: PlumbType = info.targetEndpoint.getOverlay('endpointLabel');\r\n      const labelPrompt: string = endpointLabel.getLabel();\r\n      const endpoints: PlumbType[] = this.instance.getEndpoints(info.target.id);\r\n      const targetEndpointHasSameLabel = endpoints.some(endpoint => {\r\n        const label: string = endpoint.getOverlay('endpointLabel').getLabel();\r\n        return label === labelPrompt &&\r\n          info.targetEndpoint.id !== endpoint.id &&\r\n          (endpoint.canvas as HTMLCanvasElement).classList.contains('targetEndpoint');\r\n      });\r\n      if (targetEndpointHasSameLabel) {\r\n        endpointLabel.setLabel(`PleaseRename${Math.floor(Math.random() * 99999)}`);\r\n      }\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n  }\r\n\r\n  private getEndpointInfo(endpointName: string, isDynamic: boolean): EndpointInfo {\r\n    let name: string;\r\n    let required: boolean;\r\n\r\n    if (isDynamic) {\r\n      name = endpointName;\r\n      required = false;\r\n    } else {\r\n      const trimmed = endpointName.trim();\r\n      required = trimmed.endsWith('*');\r\n      name = !required ? trimmed : trimmed.substring(0, trimmed.length - 1);\r\n    }\r\n\r\n    const endpointInfo: EndpointInfo = {\r\n      name,\r\n      required,\r\n    };\r\n    return endpointInfo;\r\n  }\r\n}\r\n\r\n// https://stackoverflow.com/questions/14446511/most-efficient-method-to-groupby-on-an-array-of-objects\r\nconst groupBy = <T, K extends keyof any>(arr: T[], key: (i: T) => K) =>\r\n  arr.reduce((groups, item) => {\r\n    (groups[key(item)] ||= []).push(item);\r\n    return groups;\r\n  }, {} as Record<K, T[]>);","@if ((viewModel$ | async); as vm) {\r\n<div #domRoot id=\"pipeline-root\">\r\n  <!-- do not use trackBy, jsPlumb drag stops working properly after delete -->\r\n  @if (!hardReset) {\r\n  @for (dataSource of vm.pipelineDataSources; track dataSource) {\r\n  <div #domDataSource [id]=\"dataSrcIdPrefix + dataSource.EntityGuid\" class=\"dataSource\" [ngStyle]=\"{\r\n          'top': dataSource.VisualDesignerData.Top + 'px',\r\n          'left': dataSource.VisualDesignerData.Left + 'px',\r\n          'min-width': dataSource.VisualDesignerData.Width ? dataSource.VisualDesignerData.Width + 'px' : null\r\n          }\" [ngClass]=\"{\r\n          'show-details': vm.showDataSourceDetails && vm.dataSourceConfigs[dataSource.EntityId]?.length\r\n          }\">\r\n    <div class=\"actions left\">\r\n      <mat-icon class=\"type-info\" [title]=\"vm.typeInfos[dataSource.EntityGuid].UiHint\">\r\n        {{ vm.typeInfos[dataSource.EntityGuid].Icon }}\r\n      </mat-icon>\r\n      @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].EnableConfig) {\r\n      <mat-icon class=\"configure\" title=\"Configure data source\" appMousedownStopPropagation\r\n        (click)=\"configureDataSource(dataSource)\">\r\n        settings\r\n      </mat-icon>\r\n      }\r\n      @if (vm.typeInfos[dataSource.EntityGuid].HelpLink) {\r\n      <mat-icon class=\"help\" title=\"Help for this data source\" appMousedownStopPropagation\r\n        (click)=\"openHelp(vm.typeInfos[dataSource.EntityGuid].HelpLink)\">\r\n        help_outline\r\n      </mat-icon>\r\n      }\r\n    </div>\r\n    <div class=\"actions right\">\r\n      @if (vm.allowEdit && !isOutDataSource(dataSource)) {\r\n      <mat-icon class=\"delete\" title=\"Delete\" appMousedownStopPropagation (click)=\"remove(dataSource)\">\r\n        delete\r\n      </mat-icon>\r\n      }\r\n    </div>\r\n    <div class=\"name\" title=\"Click to edit name\" appMousedownStopPropagation\r\n      (click)=\"vm.allowEdit && editName(dataSource)\">\r\n      <span>{{ dataSource.Name || '(no name)' }}</span>\r\n      <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n    </div>\r\n    <br>\r\n    <div class=\"description\" title=\"Click to edit description\" appMousedownStopPropagation\r\n      (click)=\"vm.allowEdit && editDescription(dataSource)\">\r\n      <span>{{ dataSource.Description }}</span>\r\n      <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n    </div>\r\n    <br>\r\n    @if (vm.showDataSourceDetails && vm.dataSourceConfigs[dataSource.EntityId]?.length) {\r\n    <hr style=\"margin: 0\">\r\n    <table class=\"configs\">\r\n      @for (config of vm.dataSourceConfigs[dataSource.EntityId]; track config) {\r\n      <tr class=\"config\">\r\n        <td class=\"config-name\" [title]=\"config.name\">{{ config.name }}</td>\r\n        <td class=\"config-value\" [title]=\"config.value\">{{ config.value }}</td>\r\n      </tr>\r\n      }\r\n    </table>\r\n    }\r\n    <div class=\"typename\" [title]=\"dataSource.PartAssemblyAndType\">\r\n      Type: {{ getTypeName(dataSource.PartAssemblyAndType) }}\r\n    </div>\r\n    @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].DynamicOut) {\r\n    <div class=\"add-endpoint sourceEndpoint dynamic\" title=\"Drag a new Out-Connection\">\r\n    </div>\r\n    }\r\n    @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].DynamicIn) {\r\n    <div class=\"many-in targetEndpoint dynamic\" title=\"This data source supports multiple In-Connections\">\r\n    </div>\r\n    }\r\n  </div>\r\n  }\r\n  }\r\n</div>\r\n}","// tslint:disable-next-line:max-line-length\r\nimport { AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { BaseComponent } from '../../shared/components/base.component';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { loadScripts } from '../../shared/helpers/load-scripts.helper';\r\nimport { PipelineDataSource, PipelineResultStream, VisualDesignerData } from '../models';\r\nimport { QueryDefinitionService } from '../services/query-definition.service';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { calculateTypeInfos } from './plumb-editor.helpers';\r\nimport { PlumbEditorViewModel } from './plumb-editor.models';\r\nimport { dataSrcIdPrefix, Plumber } from './plumber.helper';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgStyle, NgClass, AsyncPipe } from '@angular/common';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { MousedownStopPropagationDirective } from '../../shared/directives/mousedown-stop-propagation.directive';\r\nimport { classLog } from '../../shared/logging';\r\nimport { mapUntilObjChanged } from '../../shared/rxJs/mapUntilChanged';\r\nimport { transient } from '../../core';\r\n\r\nconst jsPlumbUrl = 'https://cdnjs.cloudflare.com/ajax/libs/jsPlumb/2.14.5/js/jsplumb.min.js';\r\n\r\n@Component({\r\n  selector: 'app-plumb-editor',\r\n  templateUrl: './plumb-editor.component.html',\r\n  styles: [':host { display: block; width: 100%; height: 100%; }'],\r\n  styleUrls: ['./plumb-editor.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgStyle,\r\n    NgClass,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    MousedownStopPropagationDirective,\r\n  ],\r\n})\r\nexport class PlumbEditorComponent extends BaseComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  \r\n  log = classLog({PlumbEditorComponent});\r\n\r\n  @ViewChild('domRoot') private domRootRef: ElementRef<HTMLDivElement>;\r\n  @ViewChildren('domDataSource') private domDataSourcesRef: QueryList<ElementRef<HTMLDivElement>>;\r\n\r\n  dataSrcIdPrefix = dataSrcIdPrefix;\r\n  hardReset = false;\r\n\r\n  private plumber: Plumber;\r\n  private scriptLoaded$ = new BehaviorSubject(false);\r\n\r\n  viewModel$: Observable<PlumbEditorViewModel>;\r\n  \r\n  private queryDefinitionService = transient(QueryDefinitionService);\r\n\r\n  constructor(\r\n    private visualQueryService: VisualQueryStateService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) { super();}\r\n\r\n  ngOnInit() {\r\n    loadScripts([{ test: 'jsPlumb', src: jsPlumbUrl }], () => {\r\n      this.scriptLoaded$.next(true);\r\n    });\r\n\r\n    this.subscriptions.add(\r\n      this.visualQueryService.putEntityCountOnConnections$.subscribe(result => {\r\n        this.plumber.putEntityCountOnConnections(result);\r\n      })\r\n    );\r\n\r\n    const pipelineDesignerData$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => JsonHelpers.tryParse(pipelineModel?.Pipeline.VisualDesignerData) ?? {}),\r\n      mapUntilObjChanged(m => m),\r\n      // distinctUntilChanged(RxHelpers.objectsEqual),\r\n    );\r\n\r\n    this.viewModel$ = combineLatest([\r\n      this.visualQueryService.pipelineModel$,\r\n      this.visualQueryService.dataSources$,\r\n      pipelineDesignerData$,\r\n      this.visualQueryService.dataSourceConfigs$,\r\n    ]).pipe(\r\n      map(([pipelineModel, dataSources, pipelineDesignerData, dataSourceConfigs]) => {\r\n        if (pipelineModel == null || dataSources == null) return;\r\n\r\n        // workaround for jsPlumb not working with dom elements which it initialized on previously.\r\n        // This wipes dom entirely and gives us new elements\r\n        this.hardReset = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        this.hardReset = false;\r\n        const viewModel: PlumbEditorViewModel = {\r\n          pipelineDataSources: pipelineModel.DataSources,\r\n          typeInfos: calculateTypeInfos(pipelineModel.DataSources, dataSources),\r\n          allowEdit: pipelineModel.Pipeline.AllowEdit,\r\n          showDataSourceDetails: pipelineDesignerData.ShowDataSourceDetails ?? false,\r\n          dataSourceConfigs,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const l = this.log.fn('ngAfterViewInit');\r\n    // https://stackoverflow.com/questions/37087864/execute-a-function-when-ngfor-finished-in-angular-2/37088348#37088348\r\n    const domDataSourcesLoaded$ = this.domDataSourcesRef.changes.pipe(map(() => true));\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([this.scriptLoaded$, domDataSourcesLoaded$]).subscribe(([scriptLoaded, domDataSourcesLoaded]) => {\r\n        if (!scriptLoaded || !domDataSourcesLoaded)\r\n          return;\r\n\r\n        this.log.a('scriptLoaded and domDataSourcesLoaded', { scriptLoaded, domDataSourcesLoaded });\r\n\r\n        this.plumber?.destroy();\r\n        this.plumber = new Plumber(\r\n          this.domRootRef.nativeElement,\r\n          this.visualQueryService.pipelineModel$.value,\r\n          this.visualQueryService.dataSources$.value,\r\n          this.onConnectionsChanged.bind(this),\r\n          this.onDragend.bind(this),\r\n          this.onDebugStream.bind(this),\r\n          this.dialog,\r\n          this.viewContainerRef,\r\n          this.changeDetectorRef,\r\n        );\r\n      })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.plumber?.destroy();\r\n    this.scriptLoaded$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  onConnectionsChanged() {\r\n    const connections = this.plumber.getAllConnections();\r\n    const streamsOut = this.plumber.getStreamsOut();\r\n    this.visualQueryService.changeConnections(connections, streamsOut);\r\n  }\r\n\r\n  onDragend(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    this.visualQueryService.changeDataSourcePosition(pipelineDataSourceGuid, position);\r\n  }\r\n\r\n  onDebugStream(stream: PipelineResultStream) {\r\n    this.visualQueryService.debugStream(stream);\r\n  }\r\n\r\n  configureDataSource(dataSource: PipelineDataSource) {\r\n    // ensure dataSource entity is saved\r\n    if (dataSource.EntityGuid.includes('unsaved')) {\r\n      this.visualQueryService.saveAndRun(true, false);\r\n    } else {\r\n      this.visualQueryService.editDataSource(dataSource);\r\n    }\r\n  }\r\n\r\n  getTypeName(partAssemblyAndType: string) {\r\n    const dataSource = this.visualQueryService.dataSources$.value.find(ds => ds.PartAssemblyAndType === partAssemblyAndType);\r\n    return this.queryDefinitionService.typeNameFilter(dataSource?.TypeNameForUi || partAssemblyAndType, 'className');\r\n  }\r\n\r\n  isOutDataSource(pipelineDataSource: PipelineDataSource) {\r\n    return pipelineDataSource.PartAssemblyAndType === eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType;\r\n  }\r\n\r\n  remove(pipelineDataSource: PipelineDataSource) {\r\n    if (!confirm(`Delete ${pipelineDataSource.Name} data source?`)) return;\r\n\r\n    this.plumber.removeEndpointsOnDataSource(pipelineDataSource.EntityGuid);\r\n    const connections = this.plumber.getAllConnections();\r\n    const streamsOut = this.plumber.getStreamsOut();\r\n    this.visualQueryService.removeDataSource(pipelineDataSource.EntityGuid, connections, streamsOut);\r\n  }\r\n\r\n  openHelp(url: string) {\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  editName(dataSource: PipelineDataSource) {\r\n    const newName = prompt('Rename data source', dataSource.Name)?.trim();\r\n    if (newName == null || newName === '') return;\r\n\r\n    this.visualQueryService.renameDataSource(dataSource.EntityGuid, newName);\r\n  }\r\n\r\n  editDescription(dataSource: PipelineDataSource) {\r\n    const newDescription = prompt('Edit description', dataSource.Description)?.trim();\r\n    if (newDescription == null) return;\r\n\r\n    this.visualQueryService.changeDataSourceDescription(dataSource.EntityGuid, newDescription);\r\n  }\r\n\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"eav-show-advanced\">\r\n      <span class=\"eav-slide-toggle-label\">Show Advanced</span>\r\n      <mat-slide-toggle color=\"primary\" (change)=\"toggleDifficulty($event)\" />\r\n    </div>\r\n    @for (group of vm.sorted | keyvalue; track trackGroups($index, group)) {\r\n      <div class=\"collapsible\" [tippy]=\"guiTypes[group.key].UiHint || group.key\" tippyShowDelay=\"750\"\r\n        (click)=\"toggleItem(group.key)\">\r\n        <mat-icon>{{ guiTypes[group.key].Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n        <span>{{ guiTypes[group.key].Label ?? guiTypes[group.key].Name ?? group.key }}</span>\r\n      </div>\r\n      @if (toggledItems.includes(group.key)) {\r\n        <div class=\"list\">\r\n          @for (dataSource of group.value; track trackDataSources($index, dataSource)) {\r\n            <div class=\"list-item\"\r\n              [tippy]=\"dataSource.UiHint || dataSource.Name\" tippyShowDelay=\"750\" (click)=\"addDataSource(dataSource)\">\r\n              <mat-icon>{{ dataSource.Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n              <span>{{ dataSource.Name }}</span>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n  </div>\r\n}\r\n","import { KeyValue, AsyncPipe, KeyValuePipe } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\nimport { guiTypes } from '../plumb-editor/plumb-editor.helpers';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { filterAndSortDataSources } from './add-explorer.helpers';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-add-explorer',\r\n  templateUrl: './add-explorer.component.html',\r\n  styleUrls: ['./add-explorer.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatSlideToggleModule,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    KeyValuePipe,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class AddExplorerComponent implements OnInit, OnDestroy {\r\n  toggledItems: string[] = [];\r\n  guiTypes = guiTypes;\r\n\r\n  private difficulties = eavConstants.pipelineDesigner.dataSourceDifficulties;\r\n  private difficulty$ = new BehaviorSubject(this.difficulties.default);\r\n\r\n  viewModel$: Observable<AddExplorerViewModel>;\r\n\r\n  constructor(private visualQueryService: VisualQueryStateService) { }\r\n\r\n  ngOnInit() {\r\n    this.viewModel$ = combineLatest([\r\n      combineLatest([this.visualQueryService.dataSources$, this.difficulty$]).pipe(\r\n        map(([dataSources, difficulty]) => filterAndSortDataSources(dataSources, difficulty)),\r\n      )\r\n    ]).pipe(map(([sorted]) => ({ sorted })));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.difficulty$.complete();\r\n  }\r\n\r\n  toggleDifficulty(event: MatSlideToggleChange) {\r\n    const difficulty = event.checked ? this.difficulties.advanced : this.difficulties.default;\r\n    this.difficulty$.next(difficulty);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    this.visualQueryService.addDataSource(dataSource);\r\n  }\r\n\r\n  toggleItem(item: string) {\r\n    ArrayHelpers.toggleInArray(item, this.toggledItems);\r\n  }\r\n\r\n  trackGroups(index: number, type: KeyValue<string, DataSource[]>) {\r\n    return type.key;\r\n  }\r\n\r\n  trackDataSources(index: number, dataSource: DataSource) {\r\n    return dataSource.PartAssemblyAndType;\r\n  }\r\n}\r\n\r\ninterface AddExplorerViewModel {\r\n  sorted: SortedDataSources;\r\n}\r\n","import cloneDeep from 'lodash-es/cloneDeep';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\n\r\nexport function filterAndSortDataSources(dataSources: DataSource[], maxDifficulty: number) {\r\n  if (!dataSources) return;\r\n\r\n  const cloned = cloneDeep(dataSources);\r\n\r\n  const filtered = cloned.filter(dataSource =>\r\n    dataSource.Difficulty <= maxDifficulty\r\n    && dataSource.PartAssemblyAndType !== eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType\r\n  );\r\n\r\n  filtered.sort((a, b) => a.Name.toLocaleLowerCase().localeCompare(b.Name.toLocaleLowerCase()));\r\n\r\n  const sorted: SortedDataSources = {};\r\n  for (const dataSource of filtered) {\r\n    const type = dataSource.PrimaryType;\r\n    if (sorted[type]) {\r\n      sorted[type].push(dataSource);\r\n    } else {\r\n      sorted[type] = [dataSource];\r\n    }\r\n  }\r\n\r\n  return sorted;\r\n}\r\n","@if ((pipelineModel$ | async); as pipelineModel) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"wrapper\">\r\n      <div class=\"actions\">\r\n        <button mat-raised-button class=\"action\" color=\"accent\" (click)=\"saveAndRunQuery(true, true)\">\r\n          Save and run\r\n        </button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(false, true)\">\r\n          Run\r\n        </button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(true, false)\">\r\n          Save\r\n        </button>\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">\r\n          <div>Query Parameters</div>\r\n          <div>\r\n            <button mat-icon-button tippy=\"Edit parameters\" (click)=\"editPipeline()\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button mat-icon-button tippy=\"Query Params Docs\" (click)=\"openParamsHelp()\">\r\n              <mat-icon>info</mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        @if (pipelineModel.Pipeline.Params?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of pipelineModel.Pipeline.Params?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">Test Parameters</div>\r\n        @if (pipelineModel.Pipeline.TestParameters?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of pipelineModel.Pipeline.TestParameters?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      @if (visualDesignerData$ | async; as visualDesignerData) {\r\n        <div class=\"parameters\">\r\n          <span class=\"eav-slide-toggle-label\">Show DataSource Params</span>\r\n          <mat-slide-toggle color=\"primary\" [checked]=\"visualDesignerData.ShowDataSourceDetails\"\r\n            (change)=\"showDataSourceDetails($event)\"/>\r\n          </div>\r\n        }\r\n      @if ((warnings$ | async); as warnings) {\r\n        @if (warnings.length) {\r\n          <div class=\"warnings\">\r\n            <div class=\"title\">\r\n              <span>Warnings</span>\r\n              <mat-icon style=\"color: red\">warning</mat-icon>\r\n            </div>\r\n            <ol class=\"values\">\r\n              @for (warning of warnings; track warning) {\r\n                <li [innerHTML]=\"warning\">\r\n                </li>\r\n              }\r\n            </ol>\r\n          </div>\r\n        }\r\n      }\r\n      @if (pipelineModel.Pipeline.Description) {\r\n        <div class=\"description\">\r\n          <div class=\"title\">Query Description</div>\r\n          <div>{{ pipelineModel.Pipeline.Description }}</div>\r\n        </div>\r\n      }\r\n      <div class=\"footer-actions\">\r\n        <button mat-raised-button class=\"action\" (click)=\"openRestApi()\">\r\n          <span>Use in JSON / REST API</span>\r\n          <mat-icon>code_curly</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { map, Observable } from 'rxjs';\r\nimport { GoToDevRest } from '../../dev-rest';\r\nimport { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { calculateWarnings } from './run-explorer.helpers';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { transient } from '../../core';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\n\r\n@Component({\r\n  selector: 'app-run-explorer',\r\n  templateUrl: './run-explorer.component.html',\r\n  styleUrls: ['./run-explorer.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSlideToggleModule,\r\n    AsyncPipe,\r\n  ],\r\n})\r\nexport class RunExplorerComponent implements OnInit {\r\n  pipelineModel$: Observable<PipelineModel>;\r\n  warnings$: Observable<string[]>;\r\n  visualDesignerData$: Observable<Record<string, any>>;\r\n\r\n  #dialogRouter = transient(DialogRoutingService);\r\n  \r\n  constructor(\r\n    private context: Context,\r\n    private visualQueryService: VisualQueryStateService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.pipelineModel$ = this.visualQueryService.pipelineModel$.asObservable();\r\n    this.warnings$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => calculateWarnings(pipelineModel, this.context)),\r\n    );\r\n    this.visualDesignerData$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => JsonHelpers.tryParse(pipelineModel.Pipeline.VisualDesignerData) ?? {}),\r\n    );\r\n  }\r\n\r\n  editPipeline() {\r\n    this.visualQueryService.editPipelineEntity();\r\n  }\r\n\r\n  openParamsHelp() {\r\n    window.open('https://go.2sxc.org/QueryParams', '_blank');\r\n  }\r\n\r\n  saveAndRunQuery(save: boolean, run: boolean) {\r\n    this.visualQueryService.saveAndRun(save, run);\r\n  }\r\n\r\n  showDataSourceDetails(event: MatSlideToggleChange): void {\r\n    this.visualQueryService.showDataSourceDetails(event.checked);\r\n  }\r\n\r\n  openRestApi() {\r\n    const queryGuid = this.visualQueryService.pipelineModel$.value.Pipeline.EntityGuid;\r\n    this.#dialogRouter.navRelative([GoToDevRest.getUrlQueryDialog(queryGuid)]);\r\n  }\r\n}\r\n","import { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\n\r\n/**\r\n * Check if there are special warnings the developer should know.\r\n * Typically when the test ModuleId is different from the one we're currently working on\r\n */\r\nexport function calculateWarnings(pipelineModel: PipelineModel, context: Context) {\r\n  const warnings: string[] = [];\r\n\r\n  try {\r\n    const queryParams = pipelineModel.Pipeline.Params?.split(/\\r?\\n/) || [];\r\n    const testParams = pipelineModel.Pipeline.TestParameters?.split(/\\r?\\n/) || [];\r\n\r\n    queryParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) return;\r\n\r\n      // Check if the syntax on Query Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const paramSyntax = /^[a-zA-Z0-9]+=(.*)$/gmi;\r\n      const matched = paramSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Query Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>key=value</code> <br>\r\n          or resolve to a token like: <br>\r\n          <code>key=[source:key]</code>\r\n        `);\r\n      }\r\n    });\r\n\r\n    testParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) return;\r\n\r\n      // Check if the syntax on Test Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const testParamSyntax = /^\\[[a-zA-Z]+:[a-zA-Z0-9]+\\]=(.*)$/gmi;\r\n      const matched = testParamSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Test Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>[source:key]=value</code>\r\n        `);\r\n      }\r\n\r\n      // Check if we should show the warning about the test ModuleId.\r\n      // This is because in the old days, the ModuleId wasn't auto-filled, so people had to add it as a test value.\r\n      // Now it's not necessary any more\r\n      const midRegex = /^\\[module:id\\]=([0-9]*)$/gmi;\r\n      const midMatch = midRegex.exec(param);\r\n      if (midMatch) {\r\n        const testMid = midMatch[1];\r\n        const urlMid = context.moduleId?.toString();\r\n        if (testMid !== urlMid) {\r\n          warnings.push(`\r\n            Your test ModuleId (${testMid}) is different from the current ModuleId (${urlMid}).<br>\r\n            Note that 2sxc automatically provides the ModuleId - so you usually do not need to set it\r\n          `);\r\n        }\r\n      }\r\n\r\n      const oldMidRegex = /^\\[module:moduleid\\]=([0-9]*)$/gmi;\r\n      const oldMidMatch = oldMidRegex.exec(param);\r\n      if (oldMidMatch) {\r\n        warnings.push(`\r\n          You are using deprecated [Module:ModuleId] test parameter.<br>\r\n          Please use [Module:Id]\r\n        `);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Something went wrong in calculateWarnings for params', error);\r\n  }\r\n\r\n  return warnings;\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, RouterOutlet } from '@angular/router';\r\nimport { Context } from '../shared/services/context';\r\nimport { PlumbEditorComponent } from './plumb-editor/plumb-editor.component';\r\nimport { VisualQueryStateService } from './services/visual-query.service';\r\nimport { AddExplorerComponent } from './add-explorer/add-explorer.component';\r\nimport { RunExplorerComponent } from './run-explorer/run-explorer.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgClass } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-visual-query',\r\n  templateUrl: './visual-query.component.html',\r\n  styleUrls: ['./visual-query.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    RouterOutlet,\r\n    NgClass,\r\n    MatIconModule,\r\n    RunExplorerComponent,\r\n    AddExplorerComponent,\r\n    PlumbEditorComponent,\r\n  ],\r\n  providers: [\r\n    VisualQueryStateService,  // Shared State for the entire Visual Query, - init run here\r\n  ],\r\n})\r\nexport class VisualQueryComponent implements OnInit {\r\n  @ViewChild(PlumbEditorComponent) plumbEditor: PlumbEditorComponent;\r\n\r\n  explorer = {\r\n    run: 'run',\r\n    add: 'add'\r\n  };\r\n  activeExplorer = this.explorer.run;\r\n\r\n  constructor(\r\n    private context: Context,\r\n    private route: ActivatedRoute,\r\n    private visualQueryService: VisualQueryStateService\r\n  ) {\r\n    this.context.init(this.route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.visualQueryService.init();\r\n  }\r\n\r\n  toggleExplorer(explorer: string) {\r\n    this.activeExplorer = (this.activeExplorer === explorer) ? null : explorer;\r\n  }\r\n\r\n  openHelp() {\r\n    window.open('https://go.2sxc.org/visual-query', '_blank');\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n<div class=\"editor-root\">\r\n  <div class=\"editor-side-toolbar\">\r\n    <div class=\"button\" tippy=\"Run\" [ngClass]=\"{ 'active': activeExplorer === explorer.run }\"\r\n      (click)=\"toggleExplorer(explorer.run)\">\r\n      <mat-icon>play_arrow</mat-icon>\r\n    </div>\r\n    <div class=\"button\" tippy=\"Add\" [ngClass]=\"{ 'active': activeExplorer === explorer.add }\"\r\n      (click)=\"toggleExplorer(explorer.add)\">\r\n      <mat-icon>add</mat-icon>\r\n    </div>\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"button\" tippy=\"Help\" (click)=\"openHelp()\">\r\n      <mat-icon>help_outline</mat-icon>\r\n    </div>\r\n  </div>\r\n\r\n  <app-run-explorer [hidden]=\"activeExplorer !== explorer.run\"></app-run-explorer>\r\n\r\n  <app-add-explorer [hidden]=\"activeExplorer !== explorer.add\"></app-add-explorer>\r\n\r\n  <app-plumb-editor></app-plumb-editor>\r\n</div>\r\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n"],"x_google_ignoreList":[31,32,33,34,35]}