{"version":3,"file":"default-projects_eav-ui_src_app_app-administration_app-administration_module_ts.4f08b7329594f7af.js","mappings":"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","names":["appAdministrationDialog","name","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","AppAdministrationNavComponent","Promise","all","__webpack_require__","e","then","bind","analyzeSettingsDialog","AnalyzeSettingsComponent","settingsItemDetailsDialog","SettingsItemDetailsComponent","editContentTypeDialog","EditContentTypeComponent","exportAppPartsDialog","ExportAppPartsComponent","exportAppDialog","ExportAppComponent","importAppPartsDialog","ImportAppPartsComponent","importContentTypeDialog","ImportContentTypeComponent","importQueryDialog","ImportQueryComponent","importViewDialog","ImportViewComponent","languagePermissionsDialog","LanguagePermissionsComponent","viewsUsageDialog","ViewsUsageComponent","appAdministrationRoutes","path","component","DialogEntryComponent","data","dialog","children","redirectTo","pathMatch","EmptyRouteComponent","title","breadcrumb","loadChildren","m","ContentItemsModule","matcher","edit","EditModule","refreshEdit","RefreshEditModule","GoToMetadata","getRoutes","GoToDevRest","route","ContentTypeFieldsModule","ContentExportModule","ContentImportModule","GoToPermissions","history","AppAdministrationRoutingModule","static","this","t","fesm2022_core","oAB","cJS","RouterModule","forChild","AppAdministrationModule","Context","AppDialogConfigService","AppInternalsService","ContentTypesService","PipelinesService","ViewsService","ContentExportService","SourceService","ContentItemsService","ExportAppService","ExportAppPartsService","ImportAppPartsService","DialogService","AnalyzeSettingsService","ContentTypesFieldsService","MetadataService","ZoneService","provide","MAT_SELECT_CONFIG","useValue","hideSingleSelectionIndicator","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","hideIcon","imports","SharedComponentsModule","MatDialogModule","CommonModule","MatButtonModule","MatIconModule","SxcGridModule","MatTabsModule","FormsModule","MatInputModule","MatSelectModule","MatRadioModule","MatProgressSpinnerModule","MatCheckboxModule","MatExpansionModule","MatCardModule","MatRippleModule","MatSlideToggleModule","MatSnackBarModule","MatMenuModule","MatBadgeModule","CreateFileDialogModule","FeaturesModule","MatToolbarModule","MatSidenavModule","constructor","http","context","dnnContext","getStack","part","key","view","stringifyValue","get","$2sxc","apiUrl","webApiAppRoot","params","appId","toString","pipe","map","stack","stackItem","_value","JSON","stringify","Value","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_3__","Yz7","factory","ɵfac","getAppInternals","targetType","keyType","contentTypeName","contentType","_angular_core__WEBPACK_IMPORTED_MODULE_1__","exportContent","values","selectedIds","selectedIdsString","join","url","webApiEntityRoot","language","defaultLanguage","contentTypeStaticName","recordExport","resourcesReferences","languageReferences","window","open","exportJson","typeName","webApiTypeRoot","exportEntity","id","prefix","metadata","getAll","webApiEntityList","getColumns","webApiFieldsAll","staticName","importItem","file","from","toBase64","switchMap","fileBase64","post","AppId","ContentBase64","success","Success","Messages","_angular_core__WEBPACK_IMPORTED_MODULE_7__","webApiFieldsRoot","webApiFieldsGetShared","typeListRetrieve","appid","getInputTypesList","inputConfigs","config","dataType","Type","substring","indexOf","inputType","label","Label","description","Description","isDefault","IsDefault","isObsolete","IsObsolete","isRecommended","IsRecommended","obsoleteMessage","ObsoleteMessage","icon","getReservedNames","getFields","fields","fld","Metadata","md","merged","All","InputType","getShareableFields","getShareableFieldsFor","attributeId","addInheritedField","targetContentTypeId","sourceContentTypeStaticName","sourceFieldGuid","newName","ContentTypeId","SourceType","SourceField","share","inherit","inheritMetadataOf","reOrder","idArray","contentTypeId","Id","order","setTitle","item","rename","fieldId","delete","IsTitle","Error","add","newField","StaticName","Index","SortOrder","updateInputType","field","defaultRoute","MetadataModule","getUrl","dialogTitle","encodeURIComponent","getUrlApp","eavConstants","app","getUrlAttribute","attribute","getUrlContentType","getUrlEntity","guid","entity","_c0","_c1","_c2","MAT_CHECKBOX_DEFAULT_OPTIONS","InjectionToken","providedIn","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","color","clickAction","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","useExisting","forwardRef","MatCheckbox","multi","MatCheckboxChange","nextUniqueId","defaults","focus","_inputElement","nativeElement","_createChangeEvent","isChecked","event","source","checked","_getAnimationTargetElement","inputId","_uniqueId","_elementRef","_changeDetectorRef","_ngZone","tabIndex","_animationMode","_options","_animationClasses","uncheckedToChecked","uncheckedToIndeterminate","checkedToUnchecked","checkedToIndeterminate","indeterminateToChecked","indeterminateToUnchecked","ariaLabel","ariaLabelledby","labelPosition","change","EventEmitter","indeterminateChange","_onTouched","_currentAnimationClass","_currentCheckState","_controlValueAccessorChangeFn","_checked","_disabled","_indeterminate","parseInt","ngAfterViewInit","_syncIndeterminate","value","markForCheck","disabled","indeterminate","changed","_transitionCheckState","emit","_isRippleDisabled","disableRipple","_onLabelTextChange","detectChanges","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","newState","oldState","element","classList","remove","_getAnimationClassForCheckStateTransition","length","animationClass","runOutsideAngular","setTimeout","_emitChangeEvent","toggle","_handleInputClick","resolve","_onInteractionEvent","stopPropagation","_onBlur","nativeCheckbox","_onInputClick","_onTouchTargetClick","_preventBubblingFromLabel","target","_labelElement","contains","ANIMATION_MODULE_TYPE","ɵcmp","type","selectors","viewQuery","rf","ctx","MatRipple","_t","first","ripple","hostAttrs","hostVars","hostBindings","inputs","ariaDescribedby","required","booleanAttribute","undefined","numberAttribute","outputs","exportAs","features","ngContentSelectors","decls","vars","consts","template","$event","_r0","dependencies","styles","encapsulation","changeDetection","_MatCheckboxRequiredValidatorModule","ɵmod","ɵinj","MatCommonModule","MatDrawerContainer_Conditional_0_Template","_r3","ctx_r2","_onBackdropClicked","ctx_r0","_isShowingBackdrop","MatDrawerContainer_Conditional_3_Template","_c3","MatSidenavContainer_Conditional_0_Template","MatSidenavContainer_Conditional_3_Template","_c4","_c5","matDrawerAnimations","transformDrawer","trigger","state","style","transform","visibility","transition","animate","MAT_DRAWER_DEFAULT_AUTOSIZE","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","CdkScrollable","_container","elementRef","scrollDispatcher","ngZone","super","ngAfterContentInit","_contentMarginChanges","subscribe","MatDrawerContainer","_contentMargins","left","right","MatDrawer","position","_position","_isAttached","_updatePositionInParent","onPositionChanged","mode","_mode","_updateFocusTrapState","_modeChanged","next","disableClose","_disableClose","coerceBooleanProperty","autoFocus","_autoFocus","opened","_opened","_focusTrapFactory","_focusMonitor","_platform","_interactivityChecker","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_animationStarted","Subject","_animationEnd","_animationState","openedChange","_openedStream","filter","o","openedStart","fromState","toState","mapTo","_closedStream","closedStart","_destroyed","activeElement","_takeFocus","_isFocusWithinDrawer","_restoreFocus","_openedVia","fromEvent","keyCode","ESCAPE","hasModifierKey","takeUntil","run","close","preventDefault","distinctUntilChanged","x","y","_forceFocus","options","isFocusable","callback","removeEventListener","removeAttribute","addEventListener","_focusByCssSelector","selector","elementToFocus","querySelector","_focusTrap","focusInitialElementWhenReady","hasMovedFocus","focusOrigin","focusVia","blur","activeEl","create","ngAfterContentChecked","isBrowser","ngOnDestroy","destroy","_anchor","complete","openedVia","_closeViaBackdropClick","_setOpen","isOpen","result","restoreFocus","take","_getWidth","offsetWidth","enabled","hasBackdrop","newPosition","parent","parentNode","createComment","insertBefore","appendChild","DOCUMENT","_content","animation","start","_start","end","_end","autosize","_autosize","_drawerHasBackdrop","_backdropOverride","scrollable","_userContent","_dir","_element","viewportRuler","defaultAutosize","_drawers","QueryList","backdropClick","_doCheckSubject","_validateDrawers","updateContentMargins","_allDrawers","changes","startWith","drawer","reset","notifyOnChanges","forEach","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","debounceTime","_left","width","_right","ngDoCheck","_isPushed","_setContainerClass","onMicrotaskEmpty","merge","isAdd","className","_closeModalDrawersViaBackdrop","i4","contentQueries","dirIndex","MatSidenavContent","changeDetectorRef","container","MatSidenavContainer","MatSidenav","arguments","_fixedInViewport","_fixedTopGap","_fixedBottomGap","fixedInViewport","fixedTopGap","coerceNumberProperty","fixedBottomGap","ɵMatSidenav_BaseFactory","ɵMatSidenavContainer_BaseFactory","CdkScrollableModule","_MatToolbarBase","mixinColor","MatToolbarRow","ɵdir","MatToolbar","document","_document","_checkToolbarMixedModes","_toolbarRows"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/app-administration-nav/app-administration-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/settings-item-details/settings-item-details.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/edit-content-type/edit-content-type-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/export-app-parts/export-app-parts-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/export-app/export-app-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-app-parts/import-app-parts-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-content-type/import-content-type-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-query/import-query-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-view/import-view-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/language-permissions/language-permissions-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-dialog.config.ts","./projects/eav-ui/src/app/app-administration/app-administration-routing.module.ts","./projects/eav-ui/src/app/app-administration/app-administration.module.ts","./projects/eav-ui/src/app/app-administration/services/analyze-settings.service.ts","./projects/eav-ui/src/app/app-administration/services/app-internals.service.ts","./projects/eav-ui/src/app/content-export/services/content-export.service.ts","./projects/eav-ui/src/app/content-items/services/content-items.service.ts","./projects/eav-ui/src/app/content-type-fields/services/content-types-fields.service.ts","./projects/eav-ui/src/app/metadata/go-to-metadata.ts","./node_modules/@angular/material/fesm2022/checkbox.mjs","./node_modules/@angular/material/fesm2022/sidenav.mjs","./node_modules/@angular/material/fesm2022/toolbar.mjs"],"sourcesContent":["import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const appAdministrationDialog: DialogConfig = {\r\n  name: 'APP_ADMINISTRATION_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { AppAdministrationNavComponent } = await import('./app-administration-nav.component');\r\n    return AppAdministrationNavComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const analyzeSettingsDialog: DialogConfig = {\r\n  name: 'ANALYZE_SETTINGS',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { AnalyzeSettingsComponent } = await import('./analyze-settings.component');\r\n    return AnalyzeSettingsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../../shared/models/dialog-config.model';\r\n\r\nexport const settingsItemDetailsDialog: DialogConfig = {\r\n  name: 'SETTINGS_ITEM_DETAILS',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { SettingsItemDetailsComponent } = await import('./settings-item-details.component');\r\n    return SettingsItemDetailsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const editContentTypeDialog: DialogConfig = {\r\n  name: 'EDIT_CONTENT_TYPE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'small',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { EditContentTypeComponent } = await import('./edit-content-type.component');\r\n    return EditContentTypeComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const exportAppPartsDialog: DialogConfig = {\r\n  name: 'EXPORT_APP_PARTS',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ExportAppPartsComponent } = await import('./export-app-parts.component');\r\n    return ExportAppPartsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const exportAppDialog: DialogConfig = {\r\n  name: 'EXPORT_APP',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ExportAppComponent } = await import('./export-app.component');\r\n    return ExportAppComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importAppPartsDialog: DialogConfig = {\r\n  name: 'IMPORT_APP_PARTS',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportAppPartsComponent } = await import('./import-app-parts.component');\r\n    return ImportAppPartsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importContentTypeDialog: DialogConfig = {\r\n  name: 'IMPORT_CONTENT_TYPE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportContentTypeComponent } = await import('./import-content-type.component');\r\n    return ImportContentTypeComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importQueryDialog: DialogConfig = {\r\n  name: 'IMPORT_QUERY_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportQueryComponent } = await import('./import-query.component');\r\n    return ImportQueryComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importViewDialog: DialogConfig = {\r\n  name: 'IMPORT_VIEW_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportViewComponent } = await import('./import-view.component');\r\n    return ImportViewComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const languagePermissionsDialog: DialogConfig = {\r\n  name: 'LANGUAGE_PERMISSIONS',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { LanguagePermissionsComponent } = await import('./language-permissions.component');\r\n    return LanguagePermissionsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const viewsUsageDialog: DialogConfig = {\r\n  name: 'VIEWS_USAGE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ViewsUsageComponent } = await import('./views-usage.component');\r\n    return ViewsUsageComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { GoToDevRest } from '../dev-rest';\r\nimport { edit, refreshEdit } from '../edit/edit.matcher';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { GoToPermissions } from '../permissions/go-to-permissions';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { EmptyRouteComponent } from '../shared/components/empty-route/empty-route.component';\r\nimport { appAdministrationDialog } from './app-administration-nav/app-administration-dialog.config';\r\nimport { analyzeSettingsDialog } from './sub-dialogs/analyze-settings/analyze-settings-dialog.config';\r\nimport { settingsItemDetailsDialog } from './sub-dialogs/analyze-settings/settings-item-details/settings-item-details.config';\r\nimport { editContentTypeDialog } from './sub-dialogs/edit-content-type/edit-content-type-dialog.config';\r\nimport { exportAppPartsDialog } from './sub-dialogs/export-app-parts/export-app-parts-dialog.config';\r\nimport { exportAppDialog } from './sub-dialogs/export-app/export-app-dialog.config';\r\nimport { importAppPartsDialog } from './sub-dialogs/import-app-parts/import-app-parts-dialog.config';\r\nimport { importContentTypeDialog } from './sub-dialogs/import-content-type/import-content-type-dialog.config';\r\nimport { importQueryDialog } from './sub-dialogs/import-query/import-query-dialog.config';\r\nimport { importViewDialog } from './sub-dialogs/import-view/import-view-dialog.config';\r\nimport { languagePermissionsDialog } from './sub-dialogs/language-permissions/language-permissions-dialog.config';\r\nimport { viewsUsageDialog } from './sub-dialogs/views-usage/views-usage-dialog.config';\r\n\r\nconst appAdministrationRoutes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: appAdministrationDialog }, children: [\r\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n      { path: 'home', component: EmptyRouteComponent, data: { title: 'App Home', breadcrumb: 'Info', } },\r\n      {\r\n        path: 'data/:scope', component: EmptyRouteComponent, children: [\r\n          {\r\n            path: 'import',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importContentTypeDialog, title: 'Import Content Type' },\r\n          },\r\n          {\r\n            path: 'items/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-items/content-items.module').then(m => m.ContentItemsModule)\r\n          },\r\n          {\r\n            matcher: edit,\r\n            loadChildren: () => import('../edit/edit.module').then(m => m.EditModule)\r\n          },\r\n          {\r\n            matcher: refreshEdit,\r\n            loadChildren: () => import('../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n          },\r\n          {\r\n            path: 'add',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: editContentTypeDialog, title: 'Add Content Type' },\r\n          },\r\n          {\r\n            path: ':contentTypeStaticName/edit',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: editContentTypeDialog, title: 'Edit Content Type' },\r\n          },\r\n          ...GoToMetadata.getRoutes(),\r\n          GoToDevRest.route,\r\n          {\r\n            path: 'fields/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-type-fields/content-type-fields.module').then(m => m.ContentTypeFieldsModule),\r\n            data: { title: 'Content Type Fields' },\r\n          },\r\n          {\r\n            path: 'export/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-export/content-export.module').then(m => m.ContentExportModule),\r\n            data: { title: 'Export Items' },\r\n          },\r\n          {\r\n            path: ':contentTypeStaticName/import',\r\n            loadChildren: () => import('../content-import/content-import.module').then(m => m.ContentImportModule),\r\n            data: { title: 'Import Items' },\r\n          },\r\n          GoToPermissions.route,\r\n        ],\r\n        data: { title: 'App Data', breadcrumb: \"Data\" },\r\n      },\r\n      {\r\n        path: 'queries', component: EmptyRouteComponent, children: [\r\n          {\r\n            path: 'import',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importQueryDialog, title: 'Import Query' }\r\n          },\r\n          {\r\n            matcher: edit,\r\n            loadChildren: () => import('../edit/edit.module').then(m => m.EditModule),\r\n            data: { title: 'Edit Query Name and Description', history: false },\r\n          },\r\n          ...GoToMetadata.getRoutes(),\r\n          { ...GoToPermissions.route, data: { title: 'Query Permissions' } },\r\n          GoToDevRest.route,\r\n        ],\r\n        data: { title: 'App Queries' , breadcrumb: \"Queries\" },\r\n      },\r\n      {\r\n        path: 'views', component: EmptyRouteComponent, children: [\r\n          {\r\n            path: 'import',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importViewDialog, title: 'Import View' },\r\n          },\r\n          { path: 'usage/:guid', component: DialogEntryComponent, data: { dialog: viewsUsageDialog } },\r\n          {\r\n            matcher: edit,\r\n            loadChildren: () => import('../edit/edit.module').then(m => m.EditModule),\r\n            data: { title: 'Edit View' },\r\n          },\r\n          {\r\n            matcher: refreshEdit,\r\n            loadChildren: () => import('../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n          },\r\n          { ...GoToPermissions.route, data: { title: 'View Permissions' } },\r\n          ...GoToMetadata.getRoutes(),\r\n        ],\r\n        data: { title: 'App Views', breadcrumb: \"Views\" },\r\n      },\r\n      {\r\n        path: 'web-api', component: EmptyRouteComponent, data: { title: 'App WebApi', breadcrumb: \"WebApi\"  }, children: [\r\n          GoToDevRest.route,\r\n        ],\r\n      },\r\n      {\r\n        path: 'app', component: EmptyRouteComponent, data: { title: 'Manage App', breadcrumb: \"Manage App\" }, children: [\r\n          ...GoToMetadata.getRoutes(),\r\n          {\r\n            matcher: edit,\r\n            loadChildren: () => import('../edit/edit.module').then(m => m.EditModule),\r\n            data: { title: 'Edit App Properties' },\r\n          },\r\n          {\r\n            matcher: refreshEdit,\r\n            loadChildren: () => import('../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n          },\r\n          {\r\n            path: 'fields/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-type-fields/content-type-fields.module').then(m => m.ContentTypeFieldsModule),\r\n            data: { title: 'Edit Fields of App Settings & Resources' },\r\n          },\r\n          {\r\n            path: 'language-permissions', component: DialogEntryComponent, data: { dialog: languagePermissionsDialog, title: 'Language Permissions' }, children: [\r\n              { ...GoToPermissions.route, data: { title: 'Language Permissions' } },\r\n            ],\r\n          },\r\n          { ...GoToPermissions.route, data: { title: 'App Permissions' } },\r\n          {\r\n            path: 'analyze/:part', component: DialogEntryComponent, data: { dialog: analyzeSettingsDialog, title: 'Analyze Settings / Resources' }, children: [\r\n              {\r\n                path: 'details/:view/:settingsItemKey',\r\n                component: DialogEntryComponent,\r\n                data: { dialog: settingsItemDetailsDialog, title: 'Settings / Resources Item Details' },\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        path: 'sync', component: EmptyRouteComponent, data: { title: 'Sync', breadcrumb:\"Sync\" }, children: [\r\n          ...GoToMetadata.getRoutes(),\r\n          { path: 'export', component: DialogEntryComponent, data: { dialog: exportAppDialog, title: 'Export App' } },\r\n          { path: 'export/parts', component: DialogEntryComponent, data: { dialog: exportAppPartsDialog, title: 'Export App Parts' } },\r\n          { path: 'import/parts', component: DialogEntryComponent, data: { dialog: importAppPartsDialog, title: 'Import App Parts' } },\r\n        ],\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(appAdministrationRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppAdministrationRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MAT_SELECT_CONFIG, MatSelectModule } from '@angular/material/select';\r\nimport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { ZoneService } from '../apps-management/services/zone.service';\r\nimport { SourceService } from '../code-editor/services/source.service';\r\nimport { ContentExportService } from '../content-export/services/content-export.service';\r\nimport { ContentItemsService } from '../content-items/services/content-items.service';\r\nimport { ContentTypesFieldsService } from '../content-type-fields/services/content-types-fields.service';\r\nimport { CreateFileDialogModule } from '../create-file-dialog';\r\nimport { FeaturesModule } from '../features/features.module';\r\nimport { MetadataService } from '../permissions';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { Context } from '../shared/services/context';\r\nimport { DialogService } from '../shared/services/dialog.service';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { AppAdministrationNavComponent } from './app-administration-nav/app-administration-nav.component';\r\nimport { AppAdministrationRoutingModule } from './app-administration-routing.module';\r\nimport { AppConfigurationComponent } from './app-configuration/app-configuration.component';\r\nimport { SyncConfigurationComponent } from './sync-configuration/sync-configuration.component';\r\nimport { DataActionsComponent } from './data/data-actions/data-actions.component';\r\nimport { DataFieldsComponent } from './data/data-fields/data-fields.component';\r\nimport { DataItemsComponent } from './data/data-items/data-items.component';\r\nimport { DataComponent } from './data/data.component';\r\nimport { GettingStartedComponent } from './getting-started/getting-started.component';\r\nimport { QueriesActionsComponent } from './queries/queries-actions/queries-actions.component';\r\nimport { QueriesComponent } from './queries/queries.component';\r\nimport { AnalyzeSettingsService } from './services/analyze-settings.service';\r\nimport { AppDialogConfigService } from './services/app-dialog-config.service';\r\nimport { AppInternalsService } from './services/app-internals.service';\r\nimport { ContentTypesService } from './services/content-types.service';\r\nimport { ExportAppPartsService } from './services/export-app-parts.service';\r\nimport { ExportAppService } from './services/export-app.service';\r\nimport { ImportAppPartsService } from './services/import-app-parts.service';\r\nimport { PipelinesService } from './services/pipelines.service';\r\nimport { ViewsService } from './services/views.service';\r\nimport { AnalyzeSettingsKeyComponent } from './sub-dialogs/analyze-settings/analyze-settings-key/analyze-settings-key.component';\r\nimport { AnalyzeSettingsTotalResultsComponent } from './sub-dialogs/analyze-settings/analyze-settings-total-results/analyze-settings-total-results.component';\r\nimport { AnalyzeSettingsValueComponent } from './sub-dialogs/analyze-settings/analyze-settings-value/analyze-settings-value.component';\r\nimport { AnalyzeSettingsComponent } from './sub-dialogs/analyze-settings/analyze-settings.component';\r\nimport { SettingsItemDetailsComponent } from './sub-dialogs/analyze-settings/settings-item-details/settings-item-details.component';\r\nimport { EditContentTypeComponent } from './sub-dialogs/edit-content-type/edit-content-type.component';\r\nimport { ExportAppPartsComponent } from './sub-dialogs/export-app-parts/export-app-parts.component';\r\nimport { ExportAppComponent } from './sub-dialogs/export-app/export-app.component';\r\nimport { ImportAppPartsComponent } from './sub-dialogs/import-app-parts/import-app-parts.component';\r\nimport { ImportContentTypeComponent } from './sub-dialogs/import-content-type/import-content-type.component';\r\nimport { ImportQueryComponent } from './sub-dialogs/import-query/import-query.component';\r\nimport { ImportViewComponent } from './sub-dialogs/import-view/import-view.component';\r\nimport { LanguagePermissionsComponent } from './sub-dialogs/language-permissions/language-permissions.component';\r\nimport { LanguagesPermissionsActionsComponent } from './sub-dialogs/language-permissions/languages-permissions-actions/languages-permissions-actions.component';\r\nimport { ViewsUsageIdComponent } from './sub-dialogs/views-usage/views-usage-id/views-usage-id.component';\r\nimport { ViewsUsageStatusFilterComponent } from './sub-dialogs/views-usage/views-usage-status-filter/views-usage-status-filter.component';\r\nimport { ViewsUsageComponent } from './sub-dialogs/views-usage/views-usage.component';\r\nimport { ViewsActionsComponent } from './views/views-actions/views-actions.component';\r\nimport { ViewsShowComponent } from './views/views-show/views-show.component';\r\nimport { ViewsTypeComponent } from './views/views-type/views-type.component';\r\nimport { ViewsComponent } from './views/views.component';\r\nimport { WebApiActionsComponent } from './web-api/web-api-actions/web-api-actions.component';\r\nimport { WebApiTypeComponent } from './web-api/web-api-type/web-api-type.component';\r\nimport { WebApiComponent } from './web-api/web-api.component';\r\nimport { AppConfigurationCardComponent } from './app-configuration/app-configuration-card/app-configuration-card.component';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GettingStartedComponent,\r\n    AppAdministrationNavComponent,\r\n    DataComponent,\r\n    QueriesComponent,\r\n    ViewsComponent,\r\n    WebApiComponent,\r\n    AppConfigurationComponent,\r\n    AppConfigurationCardComponent,\r\n    SyncConfigurationComponent,\r\n    DataItemsComponent,\r\n    DataFieldsComponent,\r\n    DataActionsComponent,\r\n    QueriesActionsComponent,\r\n    ViewsTypeComponent,\r\n    ViewsShowComponent,\r\n    ViewsActionsComponent,\r\n    EditContentTypeComponent,\r\n    ImportQueryComponent,\r\n    ExportAppComponent,\r\n    ExportAppPartsComponent,\r\n    ImportAppPartsComponent,\r\n    WebApiActionsComponent,\r\n    ViewsUsageComponent,\r\n    ViewsUsageIdComponent,\r\n    ViewsUsageStatusFilterComponent,\r\n    ImportContentTypeComponent,\r\n    ImportViewComponent,\r\n    AnalyzeSettingsComponent,\r\n    AnalyzeSettingsKeyComponent,\r\n    AnalyzeSettingsValueComponent,\r\n    AnalyzeSettingsTotalResultsComponent,\r\n    SettingsItemDetailsComponent,\r\n    LanguagePermissionsComponent,\r\n    LanguagesPermissionsActionsComponent,\r\n    WebApiTypeComponent,\r\n  ],\r\n  imports: [\r\n    AppAdministrationRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    SxcGridModule,\r\n    MatTabsModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatProgressSpinnerModule,\r\n    MatCheckboxModule,\r\n    MatExpansionModule,\r\n    MatCardModule,\r\n    MatRippleModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatMenuModule,\r\n    MatBadgeModule,\r\n    CreateFileDialogModule,\r\n    FeaturesModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule\r\n  ],\r\n  providers: [\r\n    Context,\r\n    AppDialogConfigService,\r\n    AppInternalsService,\r\n    ContentTypesService,\r\n    PipelinesService,\r\n    ViewsService,\r\n    ContentExportService,\r\n    SourceService,\r\n    ContentItemsService,\r\n    ExportAppService,\r\n    ExportAppPartsService,\r\n    ImportAppPartsService,\r\n    DialogService,\r\n    AnalyzeSettingsService,\r\n    ContentTypesFieldsService,\r\n    MetadataService,\r\n    ZoneService,\r\n    { provide: MAT_SELECT_CONFIG, useValue: { hideSingleSelectionIndicator: true } },\r\n    { provide: MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, useValue: { hideIcon: true } }\r\n  ],\r\n})\r\nexport class AppAdministrationModule { }\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AnalyzePart, SettingsStackItem } from '../sub-dialogs/analyze-settings/analyze-settings.models';\r\n\r\n@Injectable()\r\nexport class AnalyzeSettingsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getStack(part: AnalyzePart, key?: string, view?: string, stringifyValue = false): Observable<SettingsStackItem[]> {\r\n    return this.http.get<SettingsStackItem[]>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'GetStack'), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        part,\r\n        ...(key && { key }),\r\n        ...(view && { view }),\r\n      },\r\n    }).pipe(\r\n      map(stack => {\r\n        if (!stringifyValue) { return stack; }\r\n\r\n        for (const stackItem of stack) {\r\n          stackItem._value = JSON.stringify(stackItem.Value);\r\n        }\r\n        return stack;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AppInternals } from '../../app-administration/models/app-internals.model';\r\nimport { MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nconst webApiRoot = 'admin/appinternals/get';\r\n\r\n@Injectable()\r\nexport class AppInternalsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /**\r\n   * Fetches AppInternals for given key\r\n   * @param targetType type of target metadata item is for, e.g. for Entity, or ContentType\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of target metadata item is for\r\n   * @param contentTypeName name of content type where permissions are stored. If blank, backend returns all metadata except permissions\r\n   */\r\n  getAppInternals(targetType: number, keyType: MetadataKeyType, key: string | number, contentTypeName?: string): Observable<AppInternals> {\r\n    return this.http.get<AppInternals>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        targetType: targetType.toString(),\r\n        keyType,\r\n        key: key.toString(),\r\n        ...(contentTypeName && { contentType: contentTypeName }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiTypeRoot } from '../../app-administration/services/content-types.service';\r\nimport { webApiEntityRoot } from '../../edit/shared/services';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentExport } from '../models/content-export.model';\r\n\r\n@Injectable()\r\nexport class ContentExportService {\r\n  constructor(private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  exportContent(values: ContentExport, selectedIds: number[]) {\r\n    const selectedIdsString = selectedIds ? '&selectedids=' + selectedIds.join() : '';\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'Download')\r\n      + '?appId=' + this.context.appId\r\n      + '&language=' + values.language\r\n      + '&defaultLanguage=' + values.defaultLanguage\r\n      + '&contentType=' + values.contentTypeStaticName\r\n      + '&recordExport=' + values.recordExport\r\n      + '&resourcesReferences=' + values.resourcesReferences\r\n      + '&languageReferences=' + values.languageReferences\r\n      + selectedIdsString;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportJson(typeName: string) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiTypeRoot + 'Json')\r\n      + '?appId=' + this.context.appId\r\n      + '&name=' + typeName;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportEntity(id: number, prefix: string, metadata: boolean) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'Json')\r\n      + '?appId=' + this.context.appId\r\n      + '&id=' + id\r\n      + '&prefix=' + prefix\r\n      + '&withMetadata=' + metadata;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { Field } from '../../content-type-fields/models/field.model';\r\nimport { webApiFieldsAll } from '../../content-type-fields/services/content-types-fields.service';\r\nimport { webApiEntityList, webApiEntityRoot } from '../../edit/shared/services';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentItem } from '../models/content-item.model';\r\n\r\n@Injectable()\r\nexport class ContentItemsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentTypeStaticName: string) {\r\n    return this.http.get<ContentItem[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  getColumns(contentTypeStaticName: string) {\r\n    return this.http.get<Field[]>(this.dnnContext.$2sxc.http.apiUrl(webApiFieldsAll), {\r\n      params: { appId: this.context.appId.toString(), staticName: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  importItem(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'upload'), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { ContentType } from '../../app-administration/models/content-type.model';\r\nimport { webApiTypeRoot } from '../../app-administration/services/content-types.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Field, FieldInputTypeOption } from '../models/field.model';\r\nimport { InputType } from '../models/input-type.model';\r\nimport { ReservedNames } from '../models/reserved-names.model';\r\nimport { InputTypeStrict } from '../constants/input-type.constants';\r\n\r\nexport const webApiFieldsRoot = 'admin/field/';\r\nexport const webApiFieldsAll = 'admin/field/all';\r\nexport const webApiFieldsGetShared = 'admin/field/GetSharedFields';\r\n\r\n@Injectable()\r\nexport class ContentTypesFieldsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  typeListRetrieve() {\r\n    return this.http.get<string[]>(this.apiUrl(webApiFieldsRoot + 'DataTypes'), {\r\n      params: { appid: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getInputTypesList() {\r\n    return this.http\r\n      .get<InputType[]>(this.apiUrl(webApiFieldsRoot + 'InputTypes'), { params: { appid: this.context.appId.toString() } })\r\n      .pipe(\r\n        map(inputConfigs => {\r\n          const inputTypeOptions = inputConfigs.map(config => {\r\n            const option: FieldInputTypeOption = {\r\n              dataType: config.Type.substring(0, config.Type.indexOf('-')),\r\n              inputType: config.Type,\r\n              label: config.Label,\r\n              description: config.Description,\r\n              isDefault: config.IsDefault,\r\n              isObsolete: config.IsObsolete,\r\n              isRecommended: config.IsRecommended,\r\n              obsoleteMessage: config.ObsoleteMessage,\r\n              icon: config.IsDefault ? 'star' : config.IsRecommended ? 'star_outline' : null,\r\n            };\r\n            return option;\r\n          });\r\n          return inputTypeOptions;\r\n        }),\r\n      );\r\n  }\r\n\r\n  getReservedNames() {\r\n    return this.http.get<ReservedNames>(this.apiUrl(webApiFieldsRoot + 'ReservedNames'));\r\n  }\r\n\r\n  /** Get all fields for some content type */\r\n  getFields(contentTypeStaticName: string) {\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsAll), {\r\n        params: { appid: this.context.appId.toString(), staticName: contentTypeStaticName },\r\n      })\r\n      .pipe(\r\n        map(fields => {\r\n          if (fields) {\r\n            for (const fld of fields) {\r\n              if (!fld.Metadata) { continue; }\r\n              const md = fld.Metadata;\r\n              const allMd = md.All;\r\n              const typeMd = md[fld.Type];\r\n              const inputMd = md[fld.InputType];\r\n              md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n            }\r\n          }\r\n          return fields;\r\n        }),\r\n      );\r\n  }\r\n\r\n  /** Get all possible sharable fields for a new sharing */\r\n  getShareableFields() {\r\n    return this.http.get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString() },\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Get sharable fields which are possible for this attribute.\r\n   * \r\n   * Reason is that eg. a bool-attribute can only receive metadata from a bool attribute, etc.\r\n   * \r\n   * @param attributeId the existing attributeId which will receive the new metadata\r\n   */\r\n  getShareableFieldsFor(attributeId: number) {\r\n    // TODO: @SDV - do the same as in getShareableFields()\r\n    // but add parameter attributeId to the webapi call\r\n    // I'll create the backend afterwards\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString(), attributeId: attributeId.toString() },\r\n      });\r\n  }\r\n\r\n  addInheritedField(targetContentTypeId: number, sourceContentTypeStaticName: string, sourceFieldGuid: string, newName: string) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'AddInheritedField'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: targetContentTypeId.toString(),\r\n        SourceType: sourceContentTypeStaticName,\r\n        SourceField: sourceFieldGuid,\r\n        name: newName,\r\n      }\r\n    });\r\n  }\r\n\r\n  share(attributeId: number, share: boolean = true) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Share'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        share,\r\n      },\r\n    });\r\n  }\r\n\r\n  inherit(attributeId: number, sourceFieldGuid: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Inherit'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        inheritMetadataOf: sourceFieldGuid,\r\n      },\r\n    });\r\n  }\r\n\r\n  reOrder(idArray: number[], contentType: ContentType) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'Sort'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        order: JSON.stringify(idArray),\r\n      },\r\n    });\r\n  }\r\n\r\n  setTitle(item: Field, contentType: ContentType) {\r\n    return this.http.post<null>(this.apiUrl(webApiTypeRoot + 'SetTitle'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  rename(fieldId: number, contentTypeId: number, newName: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Rename'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentTypeId.toString(),\r\n        attributeId: fieldId.toString(),\r\n        newName,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(item: Field, contentType: ContentType) {\r\n    if (item.IsTitle) {\r\n      throw new Error('Can\\'t delete Title');\r\n    }\r\n\r\n    return this.http.delete<boolean>(this.apiUrl(webApiFieldsRoot + 'Delete'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  add(newField: Partial<Field>, contentTypeId: number) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'Add'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: contentTypeId.toString(),\r\n        Id: newField.Id.toString(),\r\n        Type: newField.Type,\r\n        InputType: newField.InputType,\r\n        StaticName: newField.StaticName,\r\n        IsTitle: newField.IsTitle.toString(),\r\n        Index: newField.SortOrder.toString(),\r\n      }\r\n    });\r\n  }\r\n\r\n  updateInputType(id: number, staticName: string, inputType: InputTypeStrict) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'InputType'), null, {\r\n      params: { appId: this.context.appId.toString(), attributeId: id.toString(), field: staticName, inputType }\r\n    });\r\n  }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\n\r\nexport class GoToMetadata {\r\n\r\n  static getRoutes(): Route[] {\r\n    const defaultRoute: Route = {\r\n      path: 'metadata/:targetType/:keyType/:key',\r\n      loadChildren: () => import('./metadata.module').then(m => m.MetadataModule),\r\n      data: { title: 'Metadata' },\r\n    };\r\n    const routes: Route[] = [\r\n      defaultRoute,\r\n      {\r\n        ...defaultRoute,\r\n        path: `${defaultRoute.path}/title/:title`,\r\n      },\r\n      {\r\n        ...defaultRoute,\r\n        path: `${defaultRoute.path}/contentType/:contentTypeStaticName`,\r\n      },\r\n      {\r\n        ...defaultRoute,\r\n        path: `${defaultRoute.path}/title/:title/contentType/:contentTypeStaticName`,\r\n      }\r\n    ];\r\n    return routes;\r\n  }\r\n\r\n  static getUrl(targetType: number, keyType: MetadataKeyType, key: string, dialogTitle?: string, contentTypeStaticName?: string): string {\r\n    let url = `metadata/${targetType}/${keyType}/${key}`;\r\n    if (dialogTitle) {\r\n      url += `/title/${encodeURIComponent(dialogTitle)}`;\r\n    }\r\n    if (contentTypeStaticName) {\r\n      url += `/contentType/${contentTypeStaticName}`;\r\n    }\r\n    return url;\r\n  }\r\n\r\n  static getUrlApp(appId: number, dialogTitle?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.app.targetType,\r\n      eavConstants.metadata.app.keyType,\r\n      appId.toString(),\r\n      dialogTitle,\r\n    );\r\n  }\r\n\r\n  static getUrlAttribute(attributeId: number, dialogTitle?: string, contentTypeStaticName?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.attribute.targetType,\r\n      eavConstants.metadata.attribute.keyType,\r\n      attributeId.toString(),\r\n      dialogTitle,\r\n      contentTypeStaticName,\r\n    );\r\n  }\r\n\r\n  static getUrlContentType(staticName: string, dialogTitle?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.contentType.targetType,\r\n      eavConstants.metadata.contentType.keyType,\r\n      staticName,\r\n      dialogTitle,\r\n    );\r\n  }\r\n\r\n  static getUrlEntity(guid: string, dialogTitle?: string, contentTypeStaticName?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.entity.targetType,\r\n      eavConstants.metadata.entity.keyType,\r\n      guid,\r\n      dialogTitle,\r\n      contentTypeStaticName,\r\n    );\r\n  }\r\n\r\n}\r\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport * as i1 from '@angular/material/core';\nimport { MatRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatCheckbox),\n    multi: true,\n};\n/** Change event object emitted by checkbox. */\nclass MatCheckboxChange {\n}\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\nclass MatCheckbox {\n    /** Focuses the checkbox. */\n    focus() {\n        this._inputElement.nativeElement.focus();\n    }\n    /** Creates the change event that will be emitted by the checkbox. */\n    _createChangeEvent(isChecked) {\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = isChecked;\n        return event;\n    }\n    /** Gets the element on which to add the animation CSS classes. */\n    _getAnimationTargetElement() {\n        return this._inputElement?.nativeElement;\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    constructor(_elementRef, _changeDetectorRef, _ngZone, tabIndex, _animationMode, _options) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /** CSS classes to add when transitioning between the different checkbox states. */\n        this._animationClasses = {\n            uncheckedToChecked: 'mdc-checkbox--anim-unchecked-checked',\n            uncheckedToIndeterminate: 'mdc-checkbox--anim-unchecked-indeterminate',\n            checkedToUnchecked: 'mdc-checkbox--anim-checked-unchecked',\n            checkedToIndeterminate: 'mdc-checkbox--anim-checked-indeterminate',\n            indeterminateToChecked: 'mdc-checkbox--anim-indeterminate-checked',\n            indeterminateToUnchecked: 'mdc-checkbox--anim-indeterminate-unchecked',\n        };\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n        this.labelPosition = 'after';\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** Event emitted when the checkbox's `checked` value changes. */\n        this.change = new EventEmitter();\n        /** Event emitted when the checkbox's `indeterminate` value changes. */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* TransitionCheckState.Init */;\n        this._controlValueAccessorChangeFn = () => { };\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || defaults;\n        this.color = this._options.color || defaults.color;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.id = this._uniqueId = `mat-mdc-checkbox-${++nextUniqueId}`;\n    }\n    ngAfterViewInit() {\n        this._syncIndeterminate(this._indeterminate);\n    }\n    /** Whether the checkbox is checked. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the checkbox is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value !== this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    get indeterminate() {\n        return this._indeterminate;\n    }\n    set indeterminate(value) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* TransitionCheckState.Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* TransitionCheckState.Checked */ : 2 /* TransitionCheckState.Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _transitionCheckState(newState) {\n        let oldState = this._currentCheckState;\n        let element = this._getAnimationTargetElement();\n        if (oldState === newState || !element) {\n            return;\n        }\n        if (this._currentAnimationClass) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    element.classList.remove(animationClass);\n                }, 1000);\n            });\n        }\n    }\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(this._createChangeEvent(this.checked));\n        // Assigning the value again here is redundant, but we have to do it in case it was\n        // changed inside the `change` listener which will cause the input to be out of sync.\n        if (this._inputElement) {\n            this._inputElement.nativeElement.checked = this.checked;\n        }\n    }\n    /** Toggles the `checked` state of the checkbox. */\n    toggle() {\n        this.checked = !this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n    }\n    _handleInputClick() {\n        const clickAction = this._options?.clickAction;\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && clickAction !== 'check') {\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n            this._checked = !this._checked;\n            this._transitionCheckState(this._checked ? 1 /* TransitionCheckState.Checked */ : 2 /* TransitionCheckState.Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    _onBlur() {\n        // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n        // Angular does not expect events to be raised during change detection, so any state change\n        // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n        // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n        // telling the form control it has been touched until the next tick.\n        Promise.resolve().then(() => {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        switch (oldState) {\n            case 0 /* TransitionCheckState.Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* TransitionCheckState.Checked */) {\n                    return this._animationClasses.uncheckedToChecked;\n                }\n                else if (newState == 3 /* TransitionCheckState.Indeterminate */) {\n                    return this._checked\n                        ? this._animationClasses.checkedToIndeterminate\n                        : this._animationClasses.uncheckedToIndeterminate;\n                }\n                break;\n            case 2 /* TransitionCheckState.Unchecked */:\n                return newState === 1 /* TransitionCheckState.Checked */\n                    ? this._animationClasses.uncheckedToChecked\n                    : this._animationClasses.uncheckedToIndeterminate;\n            case 1 /* TransitionCheckState.Checked */:\n                return newState === 2 /* TransitionCheckState.Unchecked */\n                    ? this._animationClasses.checkedToUnchecked\n                    : this._animationClasses.checkedToIndeterminate;\n            case 3 /* TransitionCheckState.Indeterminate */:\n                return newState === 1 /* TransitionCheckState.Checked */\n                    ? this._animationClasses.indeterminateToChecked\n                    : this._animationClasses.indeterminateToUnchecked;\n        }\n        return '';\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     */\n    _syncIndeterminate(value) {\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n    _onInputClick() {\n        this._handleInputClick();\n    }\n    _onTouchTargetClick() {\n        this._handleInputClick();\n        if (!this.disabled) {\n            // Normally the input should be focused already, but if the click\n            // comes from the touch target, then we might have to focus it ourselves.\n            this._inputElement.nativeElement.focus();\n        }\n    }\n    /**\n     *  Prevent click events that come from the `<label/>` element from bubbling. This prevents the\n     *  click handler on the host from triggering twice when clicking on the `<label/>` element. After\n     *  the click event on the `<label/>` propagates, the browsers dispatches click on the associated\n     *  `<input/>`. By preventing clicks on the label by bubbling, we ensure only one click event\n     *  bubbles when the label is clicked.\n     */\n    _preventBubblingFromLabel(event) {\n        if (!!event.target && this._labelElement.nativeElement.contains(event.target)) {\n            event.stopPropagation();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatCheckbox, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: 'tabindex', attribute: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_CHECKBOX_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"17.0.4\", type: MatCheckbox, selector: \"mat-checkbox\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], id: \"id\", required: [\"required\", \"required\", booleanAttribute], labelPosition: \"labelPosition\", name: \"name\", value: \"value\", disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? undefined : numberAttribute(value))], color: \"color\", checked: [\"checked\", \"checked\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute], indeterminate: [\"indeterminate\", \"indeterminate\", booleanAttribute] }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, host: { properties: { \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"class._mat-animation-noopable\": \"_animationMode === 'NoopAnimations'\", \"class.mdc-checkbox--disabled\": \"disabled\", \"id\": \"id\", \"class.mat-mdc-checkbox-disabled\": \"disabled\", \"class.mat-mdc-checkbox-checked\": \"checked\", \"class\": \"color ? \\\"mat-\\\" + color : \\\"mat-accent\\\"\" }, classAttribute: \"mat-mdc-checkbox\" }, providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"_inputElement\", first: true, predicate: [\"input\"], descendants: true }, { propertyName: \"_labelElement\", first: true, predicate: [\"label\"], descendants: true }, { propertyName: \"ripple\", first: true, predicate: MatRipple, descendants: true }], exportAs: [\"matCheckbox\"], ngImport: i0, template: \"<div class=\\\"mdc-form-field\\\"\\n     [class.mdc-form-field--align-end]=\\\"labelPosition == 'before'\\\"\\n     (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"disabled ? -1 : tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\"\\n         #label\\n         [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-touch-target-wrapper{display:inline}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:mdc-animation-deceleration-curve-timing-function;transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom}.mdc-checkbox[hidden]{display:none}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{border-color:CanvasText}}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{border-color:CanvasText}}@media all and (-ms-high-contrast: none){.mdc-checkbox .mdc-checkbox__focus-ring{display:none}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--upgraded .mdc-checkbox__checkmark{opacity:1}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear 0s;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear 0s;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background{transition:border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit}.mdc-checkbox__native-control:disabled{cursor:default;pointer-events:none}.mdc-checkbox--touch{margin:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2)}.mdc-checkbox--touch .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);right:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);width:var(--mdc-checkbox-state-layer-size);height:var(--mdc-checkbox-state-layer-size)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark-path,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__mixedmark{transition:none}.mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mdc-checkbox{padding:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2);margin:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2)}.mdc-checkbox .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color);background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control[disabled]:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[disabled]:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true][disabled]~.mdc-checkbox__background{border-color:transparent;background-color:var(--mdc-checkbox-disabled-selected-icon-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}@keyframes mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}}@keyframes mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}}.mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}@keyframes mdc-checkbox-fade-in-background-FF212121FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}}@keyframes mdc-checkbox-fade-out-background-FF212121FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}}.mdc-checkbox:hover.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:hover.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-FF212121FFF4433600000000FFF44336}.mdc-checkbox:hover.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:hover.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-FF212121FFF4433600000000FFF44336}.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}@keyframes mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}}@keyframes mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}}.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox .mdc-checkbox__background{top:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2)}.mdc-checkbox .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);right:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);width:var(--mdc-checkbox-state-layer-size);height:var(--mdc-checkbox-state-layer-size)}.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:focus:not(:checked):not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color);background-color:var(--mdc-checkbox-selected-focus-icon-color)}.mdc-checkbox:hover .mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-hover-state-layer-color)}.mdc-checkbox:hover .mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-focus-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity);background-color:var(--mdc-checkbox-selected-hover-state-layer-color)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity);background-color:var(--mdc-checkbox-selected-focus-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity);background-color:var(--mdc-checkbox-selected-pressed-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color)}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox .mdc-checkbox__background{-webkit-print-color-adjust:exact;color-adjust:exact}.mat-mdc-checkbox._mat-animation-noopable *,.mat-mdc-checkbox._mat-animation-noopable *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default}.mat-mdc-checkbox label:empty{display:none}.cdk-high-contrast-active .mat-mdc-checkbox.mat-mdc-checkbox-disabled{opacity:.5}.cdk-high-contrast-active .mat-mdc-checkbox .mdc-checkbox__checkmark{--mdc-checkbox-selected-checkmark-color: CanvasText;--mdc-checkbox-disabled-selected-checkmark-color: CanvasText}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: i1.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatCheckbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-checkbox', host: {\n                        'class': 'mat-mdc-checkbox',\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                        '[class.mdc-checkbox--disabled]': 'disabled',\n                        '[id]': 'id',\n                        // Add classes that users can use to more easily target disabled or checked checkboxes.\n                        '[class.mat-mdc-checkbox-disabled]': 'disabled',\n                        '[class.mat-mdc-checkbox-checked]': 'checked',\n                        '[class]': 'color ? \"mat-\" + color : \"mat-accent\"',\n                    }, providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR], exportAs: 'matCheckbox', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mdc-form-field\\\"\\n     [class.mdc-form-field--align-end]=\\\"labelPosition == 'before'\\\"\\n     (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"disabled ? -1 : tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\"\\n         #label\\n         [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-touch-target-wrapper{display:inline}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:mdc-animation-deceleration-curve-timing-function;transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom}.mdc-checkbox[hidden]{display:none}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{border-color:CanvasText}}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{border-color:CanvasText}}@media all and (-ms-high-contrast: none){.mdc-checkbox .mdc-checkbox__focus-ring{display:none}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--upgraded .mdc-checkbox__checkmark{opacity:1}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear 0s;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear 0s;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background{transition:border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit}.mdc-checkbox__native-control:disabled{cursor:default;pointer-events:none}.mdc-checkbox--touch{margin:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2)}.mdc-checkbox--touch .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);right:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);width:var(--mdc-checkbox-state-layer-size);height:var(--mdc-checkbox-state-layer-size)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark-path,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__mixedmark{transition:none}.mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mdc-checkbox{padding:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2);margin:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2)}.mdc-checkbox .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color);background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control[disabled]:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[disabled]:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true][disabled]~.mdc-checkbox__background{border-color:transparent;background-color:var(--mdc-checkbox-disabled-selected-icon-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}@keyframes mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}}@keyframes mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}}.mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}@keyframes mdc-checkbox-fade-in-background-FF212121FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}}@keyframes mdc-checkbox-fade-out-background-FF212121FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}}.mdc-checkbox:hover.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:hover.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-FF212121FFF4433600000000FFF44336}.mdc-checkbox:hover.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:hover.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-FF212121FFF4433600000000FFF44336}.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}@keyframes mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}}@keyframes mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}}.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox .mdc-checkbox__background{top:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2)}.mdc-checkbox .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);right:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);width:var(--mdc-checkbox-state-layer-size);height:var(--mdc-checkbox-state-layer-size)}.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:focus:not(:checked):not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color);background-color:var(--mdc-checkbox-selected-focus-icon-color)}.mdc-checkbox:hover .mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-hover-state-layer-color)}.mdc-checkbox:hover .mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-focus-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity);background-color:var(--mdc-checkbox-selected-hover-state-layer-color)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity);background-color:var(--mdc-checkbox-selected-focus-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity);background-color:var(--mdc-checkbox-selected-pressed-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color)}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox .mdc-checkbox__background{-webkit-print-color-adjust:exact;color-adjust:exact}.mat-mdc-checkbox._mat-animation-noopable *,.mat-mdc-checkbox._mat-animation-noopable *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default}.mat-mdc-checkbox label:empty{display:none}.cdk-high-contrast-active .mat-mdc-checkbox.mat-mdc-checkbox-disabled{opacity:.5}.cdk-high-contrast-active .mat-mdc-checkbox .mdc-checkbox__checkmark{--mdc-checkbox-selected-checkmark-color: CanvasText;--mdc-checkbox-disabled-selected-checkmark-color: CanvasText}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n                }] }], propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], id: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], labelPosition: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], indeterminateChange: [{\n                type: Output\n            }], value: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], _inputElement: [{\n                type: ViewChild,\n                args: ['input']\n            }], _labelElement: [{\n                type: ViewChild,\n                args: ['label']\n            }], tabIndex: [{\n                type: Input,\n                args: [{ transform: (value) => (value == null ? undefined : numberAttribute(value)) }]\n            }], color: [{\n                type: Input\n            }], ripple: [{\n                type: ViewChild,\n                args: [MatRipple]\n            }], checked: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], indeterminate: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n    multi: true,\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatCheckboxRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.4\", type: MatCheckboxRequiredValidator, selector: \"mat-checkbox[required][formControlName],\\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]\", providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatCheckboxRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                    providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR],\n                }]\n        }] });\n\n/** This module is used by both original and MDC-based checkbox implementations. */\nclass _MatCheckboxRequiredValidatorModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [MatCheckboxRequiredValidator],\n                    declarations: [MatCheckboxRequiredValidator],\n                }]\n        }] });\nclass MatCheckboxModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: MatCheckboxModule, declarations: [MatCheckbox], imports: [MatCommonModule, MatRippleModule, _MatCheckboxRequiredValidatorModule], exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatCheckboxModule, imports: [MatCommonModule, MatRippleModule, _MatCheckboxRequiredValidatorModule, MatCommonModule, _MatCheckboxRequiredValidatorModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatRippleModule, _MatCheckboxRequiredValidatorModule],\n                    exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                    declarations: [MatCheckbox],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n","import * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollable, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, EventEmitter, Optional, Input, Output, ViewChild, QueryList, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i2 from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i3 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nconst matDrawerAnimations = {\n    /** Animation that slides a drawer in and out. */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n    ]),\n};\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatDrawerContent, deps: [{ token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatDrawerContainer) }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.4\", type: MatDrawerContent, selector: \"mat-drawer-content\", host: { attributes: { \"ngSkipHydration\": \"\" }, properties: { \"style.margin-left.px\": \"_container._contentMargins.left\", \"style.margin-right.px\": \"_container._contentMargins.right\" }, classAttribute: \"mat-drawer-content\" }, providers: [\n            {\n                provide: CdkScrollable,\n                useExisting: MatDrawerContent,\n            },\n        ], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatDrawerContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-drawer-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                        'ngSkipHydration': '',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        {\n                            provide: CdkScrollable,\n                            useExisting: MatDrawerContent,\n                        },\n                    ],\n                }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatDrawerContainer)]\n                }] }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.NgZone }] });\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    /** The side that the drawer is attached to. */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value !== this._position) {\n            // Static inputs in Ivy are set before the element is in the DOM.\n            if (this._isAttached) {\n                this._updatePositionInParent(value);\n            }\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n    get mode() {\n        return this._mode;\n    }\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n    get disableClose() {\n        return this._disableClose;\n    }\n    set disableClose(value) {\n        this._disableClose = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or AutoFocusTarget\n     * instead.\n     */\n    get autoFocus() {\n        const value = this._autoFocus;\n        // Note that usually we don't allow autoFocus to be set to `first-tabbable` in `side` mode,\n        // because we don't know how the sidenav is being used, but in some cases it still makes\n        // sense to do it. The consumer can explicitly set `autoFocus`.\n        if (value == null) {\n            if (this.mode === 'side') {\n                return 'dialog';\n            }\n            else {\n                return 'first-tabbable';\n            }\n        }\n        return value;\n    }\n    set autoFocus(value) {\n        if (value === 'true' || value === 'false' || value == null) {\n            value = coerceBooleanProperty(value);\n        }\n        this._autoFocus = value;\n    }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n    get opened() {\n        return this._opened;\n    }\n    set opened(value) {\n        this.toggle(coerceBooleanProperty(value));\n    }\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _interactivityChecker, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._interactivityChecker = _interactivityChecker;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /** Whether the drawer is initialized. Used for disabling the initial animation. */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /** Emits whenever the drawer has started animating. */\n        this._animationStarted = new Subject();\n        /** Emits whenever the drawer is done animating. */\n        this._animationEnd = new Subject();\n        /** Current state of the sidenav animation. */\n        this._animationState = 'void';\n        /** Event emitted when the drawer open state is changed. */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /** Event emitted when the drawer has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the drawer has started opening. */\n        this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n        /** Event emitted when the drawer has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the drawer has started closing. */\n        this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Event emitted when the drawer's position changes. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n                }\n                this._takeFocus();\n            }\n            else if (this._isFocusWithinDrawer()) {\n                this._restoreFocus(this._openedVia || 'program');\n            }\n        });\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular(() => {\n            fromEvent(this._elementRef.nativeElement, 'keydown')\n                .pipe(filter(event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            }), takeUntil(this._destroyed))\n                .subscribe(event => this._ngZone.run(() => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }));\n        });\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe((event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        });\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                const callback = () => {\n                    element.removeEventListener('blur', callback);\n                    element.removeEventListener('mousedown', callback);\n                    element.removeAttribute('tabindex');\n                };\n                element.addEventListener('blur', callback);\n                element.addEventListener('mousedown', callback);\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n    _takeFocus() {\n        if (!this._focusTrap) {\n            return;\n        }\n        const element = this._elementRef.nativeElement;\n        // When autoFocus is not on the sidenav, if the element cannot be focused or does\n        // not exist, focus the sidenav itself so the keyboard navigation still works.\n        // We need to check that `focus` is a function due to Universal.\n        switch (this.autoFocus) {\n            case false:\n            case 'dialog':\n                return;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n                    if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                        element.focus();\n                    }\n                });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this.autoFocus);\n                break;\n        }\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n    _restoreFocus(focusOrigin) {\n        if (this.autoFocus === 'dialog') {\n            return;\n        }\n        if (this._elementFocusedBeforeDrawerWasOpened) {\n            this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, focusOrigin);\n        }\n        else {\n            this._elementRef.nativeElement.blur();\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n    }\n    /** Whether focus is currently within the drawer. */\n    _isFocusWithinDrawer() {\n        const activeEl = this._doc.activeElement;\n        return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n    ngAfterViewInit() {\n        this._isAttached = true;\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n        // Only update the DOM position when the sidenav is positioned at\n        // the end since we project the sidenav before the content by default.\n        if (this._position === 'end') {\n            this._updatePositionInParent('end');\n        }\n    }\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._anchor?.remove();\n        this._anchor = null;\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n    close() {\n        return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n    _closeViaBackdropClick() {\n        // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n        // don't need to check whether focus is currently in the drawer, as clicking on the\n        // backdrop causes blurs the active element.\n        return this._setOpen(/* isOpen */ false, /* restoreFocus */ true, 'mouse');\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    toggle(isOpen = !this.opened, openedVia) {\n        // If the focus is currently inside the drawer content and we are closing the drawer,\n        // restore the focus to the initially focused element (when the drawer opened).\n        if (isOpen && openedVia) {\n            this._openedVia = openedVia;\n        }\n        const result = this._setOpen(isOpen, \n        /* restoreFocus */ !isOpen && this._isFocusWithinDrawer(), this._openedVia || 'program');\n        if (!isOpen) {\n            this._openedVia = null;\n        }\n        return result;\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param focusOrigin Origin to use when restoring focus.\n     */\n    _setOpen(isOpen, restoreFocus, focusOrigin) {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n        }\n        else {\n            this._animationState = 'void';\n            if (restoreFocus) {\n                this._restoreFocus(focusOrigin);\n            }\n        }\n        this._updateFocusTrapState();\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    _getWidth() {\n        return this._elementRef.nativeElement ? this._elementRef.nativeElement.offsetWidth || 0 : 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // Trap focus only if the backdrop is enabled. Otherwise, allow end user to interact with the\n            // sidenav content.\n            this._focusTrap.enabled = !!this._container?.hasBackdrop;\n        }\n    }\n    /**\n     * Updates the position of the drawer in the DOM. We need to move the element around ourselves\n     * when it's in the `end` position so that it comes after the content and the visual order\n     * matches the tab order. We also need to be able to move it back to `start` if the sidenav\n     * started off as `end` and was changed to `start`.\n     */\n    _updatePositionInParent(newPosition) {\n        const element = this._elementRef.nativeElement;\n        const parent = element.parentNode;\n        if (newPosition === 'end') {\n            if (!this._anchor) {\n                this._anchor = this._doc.createComment('mat-drawer-anchor');\n                parent.insertBefore(this._anchor, element);\n            }\n            parent.appendChild(element);\n        }\n        else if (this._anchor) {\n            this._anchor.parentNode.insertBefore(element, this._anchor);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatDrawer, deps: [{ token: i0.ElementRef }, { token: i2.FocusTrapFactory }, { token: i2.FocusMonitor }, { token: i3.Platform }, { token: i0.NgZone }, { token: i2.InteractivityChecker }, { token: DOCUMENT, optional: true }, { token: MAT_DRAWER_CONTAINER, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.4\", type: MatDrawer, selector: \"mat-drawer\", inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\", onPositionChanged: \"positionChanged\" }, host: { attributes: { \"tabIndex\": \"-1\", \"ngSkipHydration\": \"\" }, listeners: { \"@transform.start\": \"_animationStarted.next($event)\", \"@transform.done\": \"_animationEnd.next($event)\" }, properties: { \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"class.mat-drawer-opened\": \"opened\", \"@transform\": \"_animationState\" }, classAttribute: \"mat-drawer\" }, viewQueries: [{ propertyName: \"_content\", first: true, predicate: [\"content\"], descendants: true }], exportAs: [\"matDrawer\"], ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", dependencies: [{ kind: \"directive\", type: i1.CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], animations: [matDrawerAnimations.transformDrawer], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatDrawer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer', exportAs: 'matDrawer', animations: [matDrawerAnimations.transformDrawer], host: {\n                        'class': 'mat-drawer',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        '[class.mat-drawer-opened]': 'opened',\n                        'tabIndex': '-1',\n                        '[@transform]': '_animationState',\n                        '(@transform.start)': '_animationStarted.next($event)',\n                        '(@transform.done)': '_animationEnd.next($event)',\n                        'ngSkipHydration': '',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i2.FocusTrapFactory }, { type: i2.FocusMonitor }, { type: i3.Platform }, { type: i0.NgZone }, { type: i2.InteractivityChecker }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: MatDrawerContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DRAWER_CONTAINER]\n                }] }], propDecorators: { position: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], disableClose: [{\n                type: Input\n            }], autoFocus: [{\n                type: Input\n            }], opened: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], openedStart: [{\n                type: Output\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], closedStart: [{\n                type: Output\n            }], onPositionChanged: [{\n                type: Output,\n                args: ['positionChanged']\n            }], _content: [{\n                type: ViewChild,\n                args: ['content']\n            }] } });\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    /** The drawer child with the `start` position. */\n    get start() {\n        return this._start;\n    }\n    /** The drawer child with the `end` position. */\n    get end() {\n        return this._end;\n    }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n    get autosize() {\n        return this._autosize;\n    }\n    set autosize(value) {\n        this._autosize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n    get hasBackdrop() {\n        return this._drawerHasBackdrop(this._start) || this._drawerHasBackdrop(this._end);\n    }\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** Drawers that belong to this container. */\n        this._drawers = new QueryList();\n        /** Event emitted when the drawer backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Emits on every ngDoCheck. Used for debouncing reflows. */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            });\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateContentMargins());\n        this._autosize = defaultAutosize;\n    }\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((drawer) => {\n            this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n            this._drawers.notifyOnChanges();\n        });\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        // Avoid hitting the NgZone through the debounce timeout.\n        this._ngZone.runOutsideAngular(() => {\n            this._doCheckSubject\n                .pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n            takeUntil(this._destroyed))\n                .subscribe(() => this.updateContentMargins());\n        });\n    }\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /** Calls `close` of both start and end drawers */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        let left = 0;\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._getWidth();\n            }\n            else if (this._left.mode == 'push') {\n                const width = this._left._getWidth();\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._getWidth();\n            }\n            else if (this._right.mode == 'push') {\n                const width = this._right._getWidth();\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || null;\n        right = right || null;\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n        }\n    }\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted\n            .pipe(filter((event) => event.fromState !== event.toState), takeUntil(this._drawers.changes))\n            .subscribe((event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange\n                .pipe(takeUntil(this._drawers.changes))\n                .subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n                this._validateDrawers();\n            });\n        });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged\n                .pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe(() => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    _setContainerClass(isAdd) {\n        const classList = this._element.nativeElement.classList;\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /** Validate the state of the drawer children components. */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    _isPushed() {\n        return ((this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over'));\n    }\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawersViaBackdrop();\n    }\n    _closeModalDrawersViaBackdrop() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && this._drawerHasBackdrop(drawer))\n            .forEach(drawer => drawer._closeViaBackdropClick());\n    }\n    _isShowingBackdrop() {\n        return ((this._isDrawerOpen(this._start) && this._drawerHasBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._drawerHasBackdrop(this._end)));\n    }\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n    // Whether argument drawer should have a backdrop when it opens\n    _drawerHasBackdrop(drawer) {\n        if (this._backdropOverride == null) {\n            return !!drawer && drawer.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatDrawerContainer, deps: [{ token: i4.Directionality, optional: true }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1.ViewportRuler }, { token: MAT_DRAWER_DEFAULT_AUTOSIZE }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.0.4\", type: MatDrawerContainer, selector: \"mat-drawer-container\", inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, host: { attributes: { \"ngSkipHydration\": \"\" }, properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container\" }, providers: [\n            {\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer,\n            },\n        ], queries: [{ propertyName: \"_content\", first: true, predicate: MatDrawerContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatDrawer, descendants: true }], viewQueries: [{ propertyName: \"_userContent\", first: true, predicate: MatDrawerContent, descendants: true }], exportAs: [\"matDrawerContainer\"], ngImport: i0, template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-drawer-content>\\n    <ng-content></ng-content>\\n  </mat-drawer-content>\\n}\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"], dependencies: [{ kind: \"component\", type: MatDrawerContent, selector: \"mat-drawer-content\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatDrawerContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer-container', exportAs: 'matDrawerContainer', host: {\n                        'class': 'mat-drawer-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                        'ngSkipHydration': '',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatDrawerContainer,\n                        },\n                    ], template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-drawer-content>\\n    <ng-content></ng-content>\\n  </mat-drawer-content>\\n}\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"] }]\n        }], ctorParameters: () => [{ type: i4.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1.ViewportRuler }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatDrawer, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatDrawerContent]\n            }], _userContent: [{\n                type: ViewChild,\n                args: [MatDrawerContent]\n            }], autosize: [{\n                type: Input\n            }], hasBackdrop: [{\n                type: Input\n            }], backdropClick: [{\n                type: Output\n            }] } });\n\nclass MatSidenavContent extends MatDrawerContent {\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSidenavContent, deps: [{ token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatSidenavContainer) }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.4\", type: MatSidenavContent, selector: \"mat-sidenav-content\", host: { attributes: { \"ngSkipHydration\": \"\" }, properties: { \"style.margin-left.px\": \"_container._contentMargins.left\", \"style.margin-right.px\": \"_container._contentMargins.right\" }, classAttribute: \"mat-drawer-content mat-sidenav-content\" }, providers: [\n            {\n                provide: CdkScrollable,\n                useExisting: MatSidenavContent,\n            },\n        ], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSidenavContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-sidenav-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content mat-sidenav-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                        'ngSkipHydration': '',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        {\n                            provide: CdkScrollable,\n                            useExisting: MatSidenavContent,\n                        },\n                    ],\n                }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatSidenavContainer)]\n                }] }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.NgZone }] });\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /** Whether the sidenav is fixed in the viewport. */\n    get fixedInViewport() {\n        return this._fixedInViewport;\n    }\n    set fixedInViewport(value) {\n        this._fixedInViewport = coerceBooleanProperty(value);\n    }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n    get fixedTopGap() {\n        return this._fixedTopGap;\n    }\n    set fixedTopGap(value) {\n        this._fixedTopGap = coerceNumberProperty(value);\n    }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n    get fixedBottomGap() {\n        return this._fixedBottomGap;\n    }\n    set fixedBottomGap(value) {\n        this._fixedBottomGap = coerceNumberProperty(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSidenav, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.4\", type: MatSidenav, selector: \"mat-sidenav\", inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, host: { attributes: { \"tabIndex\": \"-1\", \"ngSkipHydration\": \"\" }, properties: { \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"class.mat-drawer-opened\": \"opened\", \"class.mat-sidenav-fixed\": \"fixedInViewport\", \"style.top.px\": \"fixedInViewport ? fixedTopGap : null\", \"style.bottom.px\": \"fixedInViewport ? fixedBottomGap : null\" }, classAttribute: \"mat-drawer mat-sidenav\" }, exportAs: [\"matSidenav\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", dependencies: [{ kind: \"directive\", type: i1.CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], animations: [matDrawerAnimations.transformDrawer], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSidenav, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav', exportAs: 'matSidenav', animations: [matDrawerAnimations.transformDrawer], host: {\n                        'class': 'mat-drawer mat-sidenav',\n                        'tabIndex': '-1',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        '[class.mat-drawer-opened]': 'opened',\n                        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null',\n                        'ngSkipHydration': '',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], propDecorators: { fixedInViewport: [{\n                type: Input\n            }], fixedTopGap: [{\n                type: Input\n            }], fixedBottomGap: [{\n                type: Input\n            }] } });\nclass MatSidenavContainer extends MatDrawerContainer {\n    constructor() {\n        super(...arguments);\n        this._allDrawers = undefined;\n        // We need an initializer here to avoid a TS error.\n        this._content = undefined;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSidenavContainer, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.0.4\", type: MatSidenavContainer, selector: \"mat-sidenav-container\", host: { attributes: { \"ngSkipHydration\": \"\" }, properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container mat-sidenav-container\" }, providers: [\n            {\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer,\n            },\n        ], queries: [{ propertyName: \"_content\", first: true, predicate: MatSidenavContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatSidenav, descendants: true }], exportAs: [\"matSidenavContainer\"], usesInheritance: true, ngImport: i0, template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-sidenav-content>\\n    <ng-content></ng-content>\\n  </mat-sidenav-content>\\n}\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"], dependencies: [{ kind: \"component\", type: MatSidenavContent, selector: \"mat-sidenav-content\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSidenavContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav-container', exportAs: 'matSidenavContainer', host: {\n                        'class': 'mat-drawer-container mat-sidenav-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                        'ngSkipHydration': '',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatSidenavContainer,\n                        },\n                    ], template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-sidenav-content>\\n    <ng-content></ng-content>\\n  </mat-sidenav-content>\\n}\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"] }]\n        }], propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatSidenav, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatSidenavContent]\n            }] } });\n\nclass MatSidenavModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSidenavModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSidenavModule, declarations: [MatDrawer,\n            MatDrawerContainer,\n            MatDrawerContent,\n            MatSidenav,\n            MatSidenavContainer,\n            MatSidenavContent], imports: [MatCommonModule, CdkScrollableModule], exports: [CdkScrollableModule,\n            MatCommonModule,\n            MatDrawer,\n            MatDrawerContainer,\n            MatDrawerContent,\n            MatSidenav,\n            MatSidenavContainer,\n            MatSidenavContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSidenavModule, imports: [MatCommonModule, CdkScrollableModule, CdkScrollableModule,\n            MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSidenavModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, CdkScrollableModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCommonModule,\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                    declarations: [\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.4\", type: MatToolbarRow, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatToolbar, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.4\", type: MatToolbar, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".mat-toolbar{background:var(--mat-toolbar-container-background-color);color:var(--mat-toolbar-container-text-color)}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font-family:var(--mat-toolbar-title-text-font);font-size:var(--mat-toolbar-title-text-size);line-height:var(--mat-toolbar-title-text-line-height);font-weight:var(--mat-toolbar-title-text-weight);letter-spacing:var(--mat-toolbar-title-text-tracking);margin:0}.cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar .mat-mdc-button-base.mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap;height:var(--mat-toolbar-standard-height)}@media(max-width: 599px){.mat-toolbar-row,.mat-toolbar-single-row{height:var(--mat-toolbar-mobile-height)}}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%;min-height:var(--mat-toolbar-standard-height)}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:var(--mat-toolbar-mobile-height)}}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', inputs: ['color'], host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".mat-toolbar{background:var(--mat-toolbar-container-background-color);color:var(--mat-toolbar-container-text-color)}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font-family:var(--mat-toolbar-title-text-font);font-size:var(--mat-toolbar-title-text-size);line-height:var(--mat-toolbar-title-text-line-height);font-weight:var(--mat-toolbar-title-text-weight);letter-spacing:var(--mat-toolbar-title-text-tracking);margin:0}.cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar .mat-mdc-button-base.mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap;height:var(--mat-toolbar-standard-height)}@media(max-width: 599px){.mat-toolbar-row,.mat-toolbar-single-row{height:var(--mat-toolbar-mobile-height)}}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%;min-height:var(--mat-toolbar-standard-height)}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:var(--mat-toolbar-mobile-height)}}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }], propDecorators: { _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\nclass MatToolbarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: MatToolbarModule, declarations: [MatToolbar, MatToolbarRow], imports: [MatCommonModule], exports: [MatToolbar, MatToolbarRow, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatToolbarModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n"],"x_google_ignoreList":[20,21,22]}