{"version":3,"file":"projects_eav-ui_src_app_app-administration_sync-configuration_sync-configuration_component_ts-0e6134.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAE0D;AACa;AACiC;AAEtC;AACW;AACE;AACyB;AAC3D;AACyB;AACX;AACJ;AACA;AAChB;;;;;;;;;;;;ICiE7Be,4DAAA,QAAG;IACDA,uDAAA,SAAI;IACFA,oDAAA,uHACuC;IAAAA,4DAAA,WAAM;IAAAA,oDAAA,eAAQ;IAAAA,0DAAA,EAAO;IAACA,oDAAA,2DAC/D;IAAAA,0DAAA,EAAI;;;;;IAINA,uDAAA,+BAAwF;;;IAAjEA,wDAAA,yCAAwC;;;;;;IAK7DA,4DAAA,gBAA+E;IAA9BA,wDAAA,mBAAAO,2EAAA;MAAAP,2DAAA,CAAAS,GAAA;MAAA,MAAAC,MAAA,GAAAV,2DAAA;MAAA,OAAAA,yDAAA,CAASU,MAAA,CAAAG,YAAA,CAAa,KAAK,CAAC;IAAA,EAAC;IAC5Eb,4DAAA,kBAA2B;IAAAA,oDAAA,gBAAS;IAAAA,0DAAA,EAAW;IAC/CA,4DAAA,WAAM;IAAAA,oDAAA,iBAAU;IAClBA,0DADkB,EAAO,EAChB;IACTA,4DAAA,gBAA2E;IAA1BA,wDAAA,mBAAAc,2EAAA;MAAAd,2DAAA,CAAAS,GAAA;MAAA,MAAAC,MAAA,GAAAV,2DAAA;MAAA,OAAAA,yDAAA,CAASU,MAAA,CAAAK,QAAA,CAAS,KAAK,CAAC;IAAA,EAAC;IACxEf,4DAAA,kBAA2B;IAAAA,oDAAA,cAAO;IAAAA,0DAAA,EAAW;IAC7CA,4DAAA,WAAM;IAAAA,oDAAA,oBAAa;IACrBA,0DADqB,EAAO,EACnB;;;;;;IAGTA,4DAAA,gBAA8E;IAA7BA,wDAAA,mBAAAgB,2EAAA;MAAAhB,2DAAA,CAAAiB,GAAA;MAAA,MAAAP,MAAA,GAAAV,2DAAA;MAAA,OAAAA,yDAAA,CAASU,MAAA,CAAAG,YAAA,CAAa,IAAI,CAAC;IAAA,EAAC;IAC3Eb,4DAAA,kBAA2B;IAAAA,oDAAA,gBAAS;IAAAA,0DAAA,EAAW;IAC/CA,4DAAA,WAAM;IAAAA,oDAAA,uBAAgB;IACxBA,0DADwB,EAAO,EACtB;IACTA,4DAAA,gBAA0E;IAAzBA,wDAAA,mBAAAkB,2EAAA;MAAAlB,2DAAA,CAAAiB,GAAA;MAAA,MAAAP,MAAA,GAAAV,2DAAA;MAAA,OAAAA,yDAAA,CAASU,MAAA,CAAAK,QAAA,CAAS,IAAI,CAAC;IAAA,EAAC;IACvEf,4DAAA,kBAA2B;IAAAA,oDAAA,cAAO;IAAAA,0DAAA,EAAW;IAC7CA,4DAAA,WAAM;IAAAA,oDAAA,0BAAmB;IAC3BA,0DAD2B,EAAO,EACzB;;;AD9Ef,MAAOmB,0BAA2B,SAAQ9B,6GAA4B;EAQ1E+B,YACYC,MAAc,EACdC,KAAqB,EACvBC,QAAqB,EACrBC,sBAA8C;IAEtD,KAAK,CAACH,MAAM,EAAEC,KAAK,CAAC;IALV,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,KAAK,GAALA,KAAK;IACP,KAAAC,QAAQ,GAARA,QAAQ;IACR,KAAAC,sBAAsB,GAAtBA,sBAAsB;IATxB,KAAAC,qBAAqB,GAAG1B,gDAAS,CAACR,qFAAqB,CAAC;IACxD,KAAAmC,gBAAgB,GAAG3B,gDAAS,CAACT,0EAAgB,CAAC;IAE/C,KAAAqC,gBAAgB,GAAG,KAAK;EAS/B;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACJ,sBAAsB,CAACK,WAAW,EAAE,CAACC,SAAS,CAAEC,cAAc,IAAI;MACrE,IAAI,CAACA,cAAc,GAAGA,cAAc;IACtC,CAAC,CAAC;EACJ;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACT,QAAQ,CAACU,OAAO,EAAE;IACvB,KAAK,CAACD,WAAW,EAAE;EACrB;EAEAE,SAASA,CAAA;IACP,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;MAAEC,UAAU,EAAE,IAAI,CAACd,KAAK,CAACe,MAAM,CAACC;IAAU,CAAE,CAAC;EAChF;EAEAC,WAAWA,CAAA;IACT,IAAI,CAAClB,MAAM,CAACc,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE;MAAEC,UAAU,EAAE,IAAI,CAACd,KAAK,CAACe,MAAM,CAACC;IAAU,CAAE,CAAC;EACtF;EAEAE,WAAWA,CAAA;IACT,IAAI,CAACnB,MAAM,CAACc,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE;MAAEC,UAAU,EAAE,IAAI,CAACd,KAAK,CAACe,MAAM,CAACC;IAAU,CAAE,CAAC;EACtF;EAEAzB,YAAYA,CAAC4B,SAAkB;IAC7B,IAAI,CAAClB,QAAQ,CAACmB,IAAI,CAAC,cAAc,CAAC;IAClC,IAAI,CAAChB,gBAAgB,CAACiB,uBAAuB,CAAC;MAAEC,oBAAoB,EAAE,IAAI;MAAEC,YAAY,EAAE,KAAK;MAAEJ;IAAS,CAAE,CAAC,CAACX,SAAS,CAAC;MACtHgB,IAAI,EAAEC,MAAM,IAAG;QACb,IAAI,CAACxB,QAAQ,CAACmB,IAAI,CAAC,gDAAgD,EAAE,IAAI,EAAE;UAAEM,QAAQ,EAAE;QAAI,CAAE,CAAC;MAChG,CAAC;MACDC,KAAK,EAAGA,KAAwB,IAAI;QAClC,IAAI,CAAC1B,QAAQ,CAACmB,IAAI,CAAC,0DAA0D,EAAE,IAAI,EAAE;UAAEM,QAAQ,EAAE;QAAI,CAAE,CAAC;MAC1G;KACD,CAAC;EACJ;EAEAjC,QAAQA,CAAC0B,SAAkB;IACzB,IAAI,CAACS,OAAO,CAAC,8DAA8D,CAAC,EAAE;MAAE;;IAChF,IAAI,CAAC3B,QAAQ,CAACmB,IAAI,CAAC,cAAc,CAAC;IAClC,IAAI,CAACjB,qBAAqB,CAACV,QAAQ,CAAC0B,SAAS,CAAC,CAACX,SAAS,CAAC;MACvDgB,IAAI,EAAEC,MAAM,IAAG;QACb,IAAI,CAACxB,QAAQ,CAACmB,IAAI,CAChB,8GAA8G,EAC9G,IAAI,EACJ;UAAEM,QAAQ,EAAE;QAAK,CAAE,CACpB;MACH,CAAC;MACDC,KAAK,EAAGA,KAAwB,IAAI;QAClC,IAAI,CAAC1B,QAAQ,CAACmB,IAAI,CAAC,yDAAyD,EAAE,IAAI,EAAE;UAAEM,QAAQ,EAAE;QAAI,CAAE,CAAC;MACzG;KACD,CAAC;EACJ;EAAC,QAAAG,CAAA;qBAnEUhC,0BAA0B,EAAAnB,+DAAA,CAAAqD,mDAAA,GAAArD,+DAAA,CAAAqD,2DAAA,GAAArD,+DAAA,CAAAsD,oEAAA,GAAAtD,+DAAA,CAAAuD,uFAAA;EAAA;EAAA,QAAAC,EAAA;UAA1BrC,0BAA0B;IAAAsC,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAA3D,wEAAA,EAAAA,iEAAA;IAAA8D,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,oCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QChCvCnE,qEAAA,GAAc;QAINA,4DAHN,aAA2B,kBACE,yBACgB,qBACvB;QAAAA,oDAAA,6CAAsC;QAAAA,0DAAA,EAAiB;QACvEA,4DAAA,eAAU;QAAAA,oDAAA,WAAI;QAChBA,0DADgB,EAAW,EACT;QAEhBA,4DADF,uBAAkB,QACb;QACDA,oDAAA,gLAGF;QAAAA,0DAAA,EAAI;QACJA,4DAAA,SAAG;QACDA,oDAAA,0FACF;QAGNA,0DAHM,EAAI,EACa,EACV,EACP;QAKAA,4DAHN,cAA2B,mBACE,0BACgB,sBACvB;QAAAA,oDAAA,8BAAsB;QAAAA,0DAAA,EAAiB;QACvDA,4DAAA,gBAAU;QAAAA,oDAAA,sBAAc;QAC1BA,0DAD0B,EAAW,EACnB;QAEhBA,4DADF,wBAAkB,SACb;QACDA,oDAAA,yEACF;QACFA,0DADE,EAAI,EACa;QACnBA,uDAAA,cAAsC;QAEpCA,4DADF,2BAAgC,iBACyC;QAAtBA,wDAAA,mBAAAsE,6DAAA;UAAA,OAASF,GAAA,CAAAlC,SAAA,EAAW;QAAA,EAAC;QACpElC,4DAAA,mBAA2B;QAAAA,oDAAA,sBAAc;QAAAA,0DAAA,EAAW;QACpDA,4DAAA,YAAM;QAAAA,oDAAA,kBAAU;QAGtBA,0DAHsB,EAAO,EAChB,EACQ,EACV;QAIPA,4DAFJ,mBAA2B,0BACgB,sBACvB;QAAAA,oDAAA,0CAAkC;QAAAA,0DAAA,EAAiB;QACnEA,4DAAA,gBAAU;QAAAA,oDAAA,qBAAa;QACzBA,0DADyB,EAAW,EAClB;QAEhBA,4DADF,wBAAkB,SACb;QACDA,oDAAA,6HAEF;QACFA,0DADE,EAAI,EACa;QACnBA,uDAAA,cAAsC;QAEpCA,4DADF,2BAAgC,iBAC2C;QAAxBA,wDAAA,mBAAAuE,6DAAA;UAAA,OAASH,GAAA,CAAA7B,WAAA,EAAa;QAAA,EAAC;QACtEvC,4DAAA,mBAA2B;QAAAA,oDAAA,sBAAc;QAAAA,0DAAA,EAAW;QACpDA,4DAAA,YAAM;QAAAA,oDAAA,oBAAY;QACpBA,0DADoB,EAAO,EAClB;QACTA,4DAAA,iBAAyE;QAAxBA,wDAAA,mBAAAwE,6DAAA;UAAA,OAASJ,GAAA,CAAA5B,WAAA,EAAa;QAAA,EAAC;QACtExC,4DAAA,mBAA2B;QAAAA,oDAAA,oBAAY;QAAAA,0DAAA,EAAW;QAClDA,4DAAA,YAAM;QAAAA,oDAAA,oBAAY;QAI1BA,0DAJ0B,EAAO,EAClB,EACQ,EACV,EACP;QAMEA,4DAJR,cAA2B,mBACE,0BACgB,cACG,sBACxB;QAAAA,oDAAA,4BAAoB;QAAAA,0DAAA,EAAiB;QACrDA,4DAAA,2BAAgF;QAA/BA,8DAAA,2BAAA0E,+EAAAC,MAAA;UAAA3E,gEAAA,CAAAoE,GAAA,CAAAzC,gBAAA,EAAAgD,MAAA,MAAAP,GAAA,CAAAzC,gBAAA,GAAAgD,MAAA;UAAA,OAAAA,MAAA;QAAA,EAA8B;QAAC3E,oDAAA,IAA6C;QAC/HA,0DAD+H,EAAmB,EAC5I;QACNA,4DAAA,gBAAU;QAAAA,oDAAA,0BAAkB;QAC9BA,0DAD8B,EAAW,EACvB;QAEhBA,4DADF,wBAAkB,SACb;QACDA,oDAAA,uEAA8D;QAAAA,4DAAA,YAAM;QAAAA,oDAAA,qBAAa;QAAAA,0DAAA,EAAO;QAAAA,oDAAA,0DAE1F;QAAAA,0DAAA,EAAI;QACJA,wDAAA,KAAA8E,kDAAA,YAAwB;QAOxB9E,0DAAA,EAAmB;QACnBA,wDAAA,KAAA+E,kDAAA,mCAAwB;QAGxB/E,uDAAA,cAAsC;QACtCA,4DAAA,2BAAgC;QAW9BA,wDAVA,KAAAgF,kDAAA,QAAyB,KAAAC,kDAAA,QAUD;QAY9BjF,0DAFI,EAAmB,EACV,EACP;;QAEVA,uDAAA,qBAA+B;;;QA9C4BA,uDAAA,IAA8B;QAA9BA,8DAAA,YAAAoE,GAAA,CAAAzC,gBAAA,CAA8B;QAAC3B,uDAAA,EAA6C;QAA7CA,+DAAA,CAAAoE,GAAA,CAAAzC,gBAAA,wBAA6C;QAS/H3B,uDAAA,GAMG;QANHA,2DAAA,KAAAoE,GAAA,CAAAzC,gBAAA,WAMG;QAEH3B,uDAAA,EAEC;QAFDA,2DAAA,KAAAoE,GAAA,CAAAzC,gBAAA,WAEC;QAGC3B,uDAAA,GASC;QATDA,2DAAA,MAAAoE,GAAA,CAAAzC,gBAAA,WASC;QACD3B,uDAAA,EASC;QATDA,2DAAA,KAAAoE,GAAA,CAAAzC,gBAAA,WASC;;;mBDxFP7B,iEAAa,EAAAwF,2DAAA,EAAAA,kEAAA,EAAAA,kEAAA,EAAAA,iEAAA,EAAAA,gEAAA,EACbzF,kEAAa,EAAA+F,4DAAA,EACbhG,sEAAe,EAAAkG,gEAAA,EACfnG,iFAAoB,EAAAqG,2EAAA,EACpBtG,wDAAW,EAAAwG,4DAAA,EAAAA,oDAAA,EACXzG,6GAAwB,EACxBL,yDAAY;IAAAiH,MAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AE5ByD;AACf;AAEsB;AAEN;AACpB;AACV;AACW;AACI;AACJ;AACkB;AACR;;;;;;;;;;;;ICEvDrG,4DADF,aAA0B,aACS;IAAAA,oDAAA,UAAG;IAAAA,0DAAA,EAAM;IAExCA,4DADF,aAA2C,cACQ;IAA9BA,wDAAA,mBAAA8G,uFAAA;MAAA,MAAAC,KAAA,GAAA/G,2DAAA,CAAAgH,GAAA;MAAA,MAAAC,MAAA,GAAAjH,2DAAA;MAAA,OAAAA,yDAAA,CAASiH,MAAA,CAAAT,eAAA,CAAAO,KAAA,CAAmB;IAAA,EAAC;IAAC/G,oDAAA,GAAQ;IAE7DA,0DAF6D,EAAO,EAC5D,EACF;;;;IAFIA,uDAAA,GAAY;IAAZA,wDAAA,UAAA+G,KAAA,CAAY;IAA+B/G,uDAAA,EAAQ;IAARA,+DAAA,CAAA+G,KAAA,CAAQ;;;;;;IAd/D/G,4DAFJ,eAAU,sBACS,qBACC;IAAAA,oDAAA,GAAkB;IACpCA,0DADoC,EAAiB,EACnC;IAClBA,4DAAA,uBAAkB;IAChBA,uDAAA,WAAoD;;IAElDA,4DADF,aAA0B,aACS;IAAAA,oDAAA,GAAoC;;IAAAA,0DAAA,EAAM;IAEzEA,4DADF,cAAiC,YACzB;IAAAA,oDAAA,IAAgF;;IAE1FA,0DAF0F,EAAO,EACzF,EACF;IACNA,wDAAA,KAAAkH,gEAAA,iBAA6B;IAQ/BlH,0DAAA,EAAmB;IAEjBA,4DADF,2BAA8B,iBAEyC;IAApCA,wDAAA,mBAAAmH,2EAAA;MAAA,MAAAC,UAAA,GAAApH,2DAAA,CAAAS,GAAA;MAAA,MAAAwG,MAAA,GAAAjH,2DAAA;MAAA,OAAAA,yDAAA,CAASiH,MAAA,CAAAI,WAAA,CAAAD,UAAA,CAAAE,IAAA,CAAyB;IAAA,EAAC;IAClEtH,4DAAA,gBAAU;IAAAA,oDAAA,mBAAW;IAAAA,0DAAA,EAAW;IAChCA,oDAAA,IACF;;IAAAA,0DAAA,EAAS;IACTA,4DAAA,iBAAiF;IAAxBA,wDAAA,mBAAAuH,2EAAA;MAAAvH,2DAAA,CAAAS,GAAA;MAAA,MAAAwG,MAAA,GAAAjH,2DAAA;MAAA,OAAAA,yDAAA,CAASiH,MAAA,CAAAO,WAAA,EAAa;IAAA,EAAC;IAC9ExH,oDAAA,IACF;;IAEJA,0DAFI,EAAS,EACQ,EACV;;;;;IA7BSA,uDAAA,GAAkB;IAAlBA,+DAAA,CAAAoH,UAAA,CAAAK,IAAA,CAAkB;IAG/BzH,uDAAA,GAA4C;IAA5CA,wDAAA,cAAAA,yDAAA,OAAAoH,UAAA,CAAAO,WAAA,GAAA3H,4DAAA,CAA4C;IAEZA,uDAAA,GAAoC;IAApCA,gEAAA,KAAAA,yDAAA,gCAAoC;IAE7DA,uDAAA,GAAgF;IAAhFA,+DAAA,CAAAA,yDAAA,SAAAoH,UAAA,CAAAU,SAAA,6CAAgF;IAG1F9H,uDAAA,GAOC;IAPDA,2DAAA,MAAA+H,OAAA,GAAAX,UAAA,CAAAY,MAAA,aAAAD,OAAA,CAOC;IAMC/H,uDAAA,GACF;IADEA,gEAAA,MAAAA,yDAAA,sCACF;IAEEA,uDAAA,GACF;IADEA,gEAAA,MAAAA,yDAAA,gCACF;;;ADAA,MAAOiI,0BAA0B;EAGrC7G,YACkC8G,UAAkB,EAC1CC,SAAmD,EACnD5G,QAAqB,EACrB6G,oBAA0C;IAHlB,KAAAF,UAAU,GAAVA,UAAU;IAClC,KAAAC,SAAS,GAATA,SAAS;IACT,KAAA5G,QAAQ,GAARA,QAAQ;IACR,KAAA6G,oBAAoB,GAApBA,oBAAoB;EAC1B;EAEJxG,QAAQA,CAAA;IACN,IAAI,CAACyG,UAAU,GAAG,IAAI,CAACD,oBAAoB,CAACE,iBAAiB,CAAC,IAAI,CAACJ,UAAU,CAAC;EAChF;EAEA1B,eAAeA,CAAC+B,IAAY;IAC1B/B,yFAAe,CAAC+B,IAAI,CAAC;IACrB,IAAI,CAAChH,QAAQ,CAACmB,IAAI,CAAC,qBAAqB,EAAE,IAAI,EAAE;MAAEM,QAAQ,EAAE;IAAI,CAAE,CAAC;EACrE;EAEAqE,WAAWA,CAACC,IAAY;IACtBkB,MAAM,CAAC9F,IAAI,CAAC4E,IAAI,EAAE,QAAQ,CAAC;EAC7B;EAEAE,WAAWA,CAAA;IACT,IAAI,CAACW,SAAS,CAACM,KAAK,EAAE;EACxB;EAAC,QAAAtF,CAAA;qBAzBU8E,0BAA0B,EAAAjI,+DAAA,CAI3BuG,qEAAe,GAAAvG,+DAAA,CAAAqD,kEAAA,GAAArD,+DAAA,CAAAsD,oEAAA,GAAAtD,+DAAA,CAAAuD,kFAAA;EAAA;EAAA,QAAAC,EAAA;UAJdyE,0BAA0B;IAAAxE,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAA3D,iEAAA;IAAA8D,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAyE,oCAAAvE,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QC9BvCnE,wDAAA,IAAA2I,iDAAA,qBAAsC;;;;;QAAtC3I,2DAAA,KAAA4I,OAAA,GAAA5I,yDAAA,OAAAoE,GAAA,CAAAiE,UAAA,aAAAO,OAAA,CAiCC;;;mBDZG9I,iEAAa,EAAAwF,2DAAA,EAAAA,kEAAA,EAAAA,kEAAA,EAAAA,iEAAA,EAAAA,gEAAA,EACb1F,qEAAe,EAAAgG,+DAAA,EACf/F,iEAAa,EAAAiG,2DAAA,EACba,uDAAS,EACTD,iEAAe,EAAAV,+DAAA,EACfY,8EAAc,EACdC,sEAAY;IAAAR,MAAA;EAAA;;;;;;;;;;;;;;;;;;;AE3B8C;AACZ;;;;AAK3C,MAAM4C,UAAU,GAAG,gBAAgB;AAGpC,MAAOxC,oBAAoB;EAC/BrF,YACU8H,IAAgB,EAChBC,UAAsB;IADtB,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,UAAU,GAAVA,UAAU;EAChB;EAEJb,iBAAiBA,CAACc,aAAqB;IACrC,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACF,UAAU,CAACG,KAAK,CAACJ,IAAI,CAACK,MAAM,CAACN,UAAU,GAAG,SAAS,CAAC,EAAE;MACvFO,MAAM,EAAE;QAAExB,MAAM,EAAEoB;MAAa;KAChC,CAAC;EACJ;EAAC,QAAAjG,CAAA;qBAVUsD,oBAAoB,EAAAzG,sDAAA,CAAAqD,4DAAA,GAAArD,sDAAA,CAAAsD,0DAAA;EAAA;EAAA,QAAAE,EAAA;WAApBiD,oBAAoB;IAAAiD,OAAA,EAApBjD,oBAAoB,CAAAkD;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACT6D;AACzC;AACoB;AACyB;AAChB;AAER;;AAEnE,MAAMU,yBAAyB,GAAG,CACvC5D,kFAAoB,CACrB;AAGK,MAAO6D,oBAAoB;EAC/B;EACA,IACWlB,aAAaA,CAACmB,KAAa;IAAI,IAAI,CAACC,cAAc,CAAC1H,IAAI,CAACyH,KAAK,CAAC;EAAE;EAG3E;EACA,IACWE,MAAMA,CAACF,KAAc;IAAI,IAAI,CAACG,OAAO,CAAC5H,IAAI,CAACyH,KAAK,IAAI,IAAI,CAAC;EAAE;EAatEnJ,YAAA;IAjBU,KAAAoJ,cAAc,GAAG,IAAIP,iDAAe,CAAS,IAAI,CAAC;IAKlD,KAAAS,OAAO,GAAG,IAAIT,iDAAe,CAAU,KAAK,CAAC;IAO/C,KAAAU,MAAM,GAAGb,qDAAM,CAACC,+DAAS,CAAC;IAC1B,KAAAa,gBAAgB,GAAGd,qDAAM,CAACD,2DAAgB,CAAC;IAC3C,KAAAgB,iBAAiB,GAAGf,qDAAM,CAACF,4DAAiB,CAAC;IAC3C,KAAAkB,eAAe,GAAGhB,qDAAM,CAACE,8EAAe,CAAC;IAGjD,IAAI,CAACe,QAAQ,GAAG,IAAI,CAACP,cAAc,CAACQ,IAAI,CACtCd,+CAAS,CAACe,QAAQ,IAAI,IAAI,CAACH,eAAe,CAACI,IAAI,CAACD,QAAQ,CAAC,CAC1D,CAAC;IACF,IAAI,CAACE,KAAK,GAAGf,mDAAa,CAAC,CAAC,IAAI,CAACW,QAAQ,EAAE,IAAI,CAACL,OAAO,CAAC,CAAC,CAACM,IAAI;IAC5D;IACAb,yCAAG,CAAC,CAAC,CAACiB,IAAI,EAACX,MAAM,CAAC,KAAKA,MAAM,KAAKW,IAAI,EAAEtD,SAAS,IAAI,KAAK,CAAC,CAAC,CAC7D;EACH;EAEAuD,UAAUA,CAAA;IACRC,iBAAiB,CAAC,IAAI,CAACX,MAAM,EAAE,IAAI,CAACH,cAAc,CAACD,KAAK,EAAE,IAAI,CAACK,gBAAgB,EAAE,IAAI,CAACC,iBAAiB,CAAC;EAC1G;EAAC,QAAA1H,CAAA;qBAjCUmH,oBAAoB;EAAA;EAAA,QAAA9G,EAAA;UAApB8G,oBAAoB;IAAAiB,MAAA;MAAAnC,aAAA;MAAAqB,MAAA;IAAA;EAAA;;AAqC3B,SAAUa,iBAAiBA,CAACX,MAAiB,EAAEa,SAAiB,EAAEZ,gBAAkC,EAAEC,iBAAoC;EAC9IF,MAAM,CAACjI,IAAI,CAACuF,0GAA0B,EAAE;IACtCwD,SAAS,EAAE,KAAK;IAChBC,IAAI,EAAEF,SAAS;IACfZ,gBAAgB,EAAEA,gBAAgB;IAClCe,KAAK,EAAE;GACR,CAAC;EAEFd,iBAAiB,CAACe,YAAY,EAAE;AAClC","sources":["./projects/eav-ui/src/app/app-administration/sync-configuration/sync-configuration.component.ts","./projects/eav-ui/src/app/app-administration/sync-configuration/sync-configuration.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { BaseWithChildDialogComponent } from '../../shared/components/base-with-child-dialog.component';\r\nimport { DialogSettings } from '../../shared/models/dialog-settings.model';\r\nimport { ExportAppService } from '../services/export-app.service';\r\nimport { ImportAppPartsService } from '../services/import-app-parts.service';\r\nimport { AppDialogConfigService } from '../services/app-dialog-config.service';\r\nimport { FeatureTextInfoComponent } from '../../features/feature-text-info/feature-text-info.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { transient } from '../../core';\r\n\r\n@Component({\r\n  selector: 'app-sync-configuration',\r\n  templateUrl: './sync-configuration.component.html',\r\n  styleUrls: ['./sync-configuration.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSlideToggleModule,\r\n    FormsModule,\r\n    FeatureTextInfoComponent,\r\n    RouterOutlet,\r\n  ],\r\n})\r\nexport class SyncConfigurationComponent extends BaseWithChildDialogComponent implements OnInit, OnDestroy {\r\n  dialogSettings: DialogSettings;\r\n\r\n  private importAppPartsService = transient(ImportAppPartsService);\r\n  private exportAppService = transient(ExportAppService);\r\n\r\n  public appStateAdvanced = false;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n    private appDialogConfigService: AppDialogConfigService\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.appDialogConfigService.getCurrent$().subscribe((dialogSettings) => {\r\n      this.dialogSettings = dialogSettings;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.snackBar.dismiss();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  exportApp() {\r\n    this.router.navigate([`export`], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n\r\n  exportParts() {\r\n    this.router.navigate([`export/parts`], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n\r\n  importParts() {\r\n    this.router.navigate([`import/parts`], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n\r\n  exportAppXml(withFiles: boolean) {\r\n    this.snackBar.open('Exporting...');\r\n    this.exportAppService.exportForVersionControl({ includeContentGroups: true, resetAppGuid: false, withFiles }).subscribe({\r\n      next: result => {\r\n        this.snackBar.open('Export completed into the \\'App_Data\\' folder.', null, { duration: 3000 });\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Export failed. Please check console for more information', null, { duration: 3000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  resetApp(withFiles: boolean) {\r\n    if (!confirm('Are you sure? All changes since last xml export will be lost')) { return; }\r\n    this.snackBar.open('Resetting...');\r\n    this.importAppPartsService.resetApp(withFiles).subscribe({\r\n      next: result => {\r\n        this.snackBar.open(\r\n          'Reset worked! Since this is a complex operation, please restart the Website to ensure all caches are correct',\r\n          null,\r\n          { duration: 30000 },\r\n        );\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Reset failed. Please check console for more information', null, { duration: 3000 });\r\n      },\r\n    });\r\n  }\r\n}\r\n","<ng-container>\r\n  <div class=\"eav-cards-box\">\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header class=\"eav-card-header\">\r\n        <mat-card-title>Instructions for Sync or Export/Import</mat-card-title>\r\n        <mat-icon>info</mat-icon>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <p>\r\n          This section is for export/import of the entire App,\r\n          for synchronizing with the file storage (eg. for Git)\r\n          or to export parts of the App for re-import in another App.\r\n        </p>\r\n        <p>\r\n          To export/import Content-Types, Queries, Views or Data, use the respective tabs.\r\n        </p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div class=\"eav-cards-box\">\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header class=\"eav-card-header\">\r\n        <mat-card-title>Export this entire App</mat-card-title>\r\n        <mat-icon>cloud_download</mat-icon>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <p>\r\n          Create an package (zip) which can be installed in another site.\r\n        </p>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <button mat-button class=\"eav-button__with-icon\" (click)=\"exportApp()\">\r\n          <mat-icon class=\"eav-icon\">cloud_download</mat-icon>\r\n          <span>Export App</span>\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header class=\"eav-card-header\">\r\n        <mat-card-title>Export or Import parts of this App</mat-card-title>\r\n        <mat-icon>import_export</mat-icon>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <p>\r\n          Create an xml containing parts of the app, e.g. content and templates.\r\n          Import parts from such an xml into this app.\r\n        </p>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <button mat-button class=\"eav-button__with-icon\" (click)=\"exportParts()\">\r\n          <mat-icon class=\"eav-icon\">cloud_download</mat-icon>\r\n          <span>Export Parts</span>\r\n        </button>\r\n        <button mat-button class=\"eav-button__with-icon\" (click)=\"importParts()\">\r\n          <mat-icon class=\"eav-icon\">cloud_upload</mat-icon>\r\n          <span>Import Parts</span>\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div class=\"eav-cards-box\">\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header class=\"eav-card-header\">\r\n        <div class=\"eav-card-header-title-toggle\">\r\n          <mat-card-title>App-State Versioning</mat-card-title>\r\n          <mat-slide-toggle class=\"eav-card-header-toggle\" [(ngModel)]=\"appStateAdvanced\">{{ appStateAdvanced ? \"advanced\" : \"basic\" }}</mat-slide-toggle>\r\n        </div>\r\n        <mat-icon>history_toggle_off</mat-icon>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <p>\r\n          You can save / restore the app with data and configuration in <code>.data/app.xml</code>.\r\n          This file can then also be versioned using git.\r\n        </p>\r\n        @if (appStateAdvanced) {\r\n          <p>\r\n            <br>\r\n              In Advanced mode you can also sync all the site files used by this app.\r\n              They will be placed in a folder inside <code>App_Data</code> and allow sync/restore with git or another server.\r\n            </p>\r\n          }\r\n        </mat-card-content>\r\n        @if (appStateAdvanced) {\r\n          <app-feature-text-info [featureNameId]=\"'AppSyncWithSiteFiles'\"></app-feature-text-info>\r\n        }\r\n        <div class=\"eav-card-space-div\"></div>\r\n        <mat-card-actions align=\"start\">\r\n          @if (!appStateAdvanced) {\r\n            <button mat-button class=\"eav-button__with-icon\" (click)=\"exportAppXml(false)\">\r\n              <mat-icon class=\"eav-icon\">more_time</mat-icon>\r\n              <span>Save state</span>\r\n            </button>\r\n            <button mat-button class=\"eav-button__with-icon\" (click)=\"resetApp(false)\">\r\n              <mat-icon class=\"eav-icon\">restore</mat-icon>\r\n              <span>Restore state</span>\r\n            </button>\r\n          }\r\n          @if (appStateAdvanced) {\r\n            <button mat-button class=\"eav-button__with-icon\" (click)=\"exportAppXml(true)\">\r\n              <mat-icon class=\"eav-icon\">more_time</mat-icon>\r\n              <span>Save with Assets</span>\r\n            </button>\r\n            <button mat-button class=\"eav-button__with-icon\" (click)=\"resetApp(true)\">\r\n              <mat-icon class=\"eav-icon\">restore</mat-icon>\r\n              <span>Restore with Assets</span>\r\n            </button>\r\n          }\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n  </ng-container>\r\n<router-outlet></router-outlet>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable } from 'rxjs';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { Feature } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\n\r\n@Component({\r\n  selector: 'app-feature-info-dialog',\r\n  templateUrl: './feature-info-dialog.component.html',\r\n  styleUrls: ['./feature-info-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n    TippyDirective,\r\n    SafeHtmlPipe,\r\n  ]\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  viewModel$: Observable<Feature>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    private dialogRef: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private featureDetailService: FeatureDetailService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.viewModel$ = this.featureDetailService.getFeatureDetails(this.dialogData);\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  findOutMore(link: string): void {\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","@if (viewModel$ | async; as feature) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ feature.name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"feature.description | safeHtml\"></p>\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ \"Features.Status\" | translate }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ (feature.isEnabled ? \"Features.Active\" : \"Features.NotActive\") | translate }}</span>\r\n        </div>\r\n      </div>\r\n      @if (feature.nameId; as id) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">ID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      <button mat-raised-button color=\"accent\"\r\n        class=\"eav-card-action-button\" (click)=\"findOutMore(feature.link)\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        {{ \"Features.FindOutMore\" | translate }}\r\n      </button>\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">\r\n        {{ \"Features.Close\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Feature } from '../models';\r\n\r\nexport const webApiRoot = \"admin/feature/\";\r\n\r\n@Injectable()\r\nexport class FeatureDetailService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private dnnContext: DnnContext\r\n  ) { }\r\n\r\n  getFeatureDetails(featureNameId: string): Observable<Feature> {\r\n    return this.http.get<Feature>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot + 'details'), {\r\n      params: { nameId: featureNameId }\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Directive, Input, ViewContainerRef, inject } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { BehaviorSubject, switchMap, Observable, map, combineLatest } from 'rxjs';\r\nimport { FeatureSummary } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\n\r\nexport const FeatureComponentProviders = [\r\n  FeatureDetailService,\r\n];\r\n\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n  /** Feature NameId to check */\r\n  @Input()\r\n  public set featureNameId(value: string) { this.featureNameId$.next(value); }\r\n  protected featureNameId$ = new BehaviorSubject<string>(null);\r\n\r\n  /** By default, it will show if it's false - here we can change it to show if true */\r\n  @Input()\r\n  public set showIf(value: boolean) { this.showIf$.next(value == true); }\r\n  protected showIf$ = new BehaviorSubject<boolean>(false);\r\n\r\n  // TODO: @SDV - MAKE REACTIVE - SEE text-info-component example\r\n  // featureOn: boolean = true;\r\n  feature$: Observable<FeatureSummary>;\r\n  show$: Observable<boolean>;\r\n\r\n  private dialog = inject(MatDialog);\r\n  private viewContainerRef = inject(ViewContainerRef);\r\n  private changeDetectorRef = inject(ChangeDetectorRef);\r\n  protected featuresService = inject(FeaturesService);\r\n\r\n  constructor() {\r\n    this.feature$ = this.featureNameId$.pipe(\r\n      switchMap(featName => this.featuresService.get$(featName)\r\n    ));\r\n    this.show$ = combineLatest([this.feature$, this.showIf$]).pipe(\r\n      // tap(data => console.log('2dm - show$', data)),\r\n      map(([feat,showIf]) => showIf == (feat?.isEnabled ?? false))\r\n    );\r\n  }\r\n\r\n  openDialog() {\r\n    openFeatureDialog(this.dialog, this.featureNameId$.value, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n}\r\n\r\n\r\nexport function openFeatureDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n  dialog.open(FeatureInfoDialogComponent, {\r\n    autoFocus: false,\r\n    data: featureId,\r\n    viewContainerRef: viewContainerRef,\r\n    width: '400px',\r\n  });\r\n\r\n  changeDetectorRef.markForCheck();\r\n}"],"names":["MatSnackBar","ActivatedRoute","Router","RouterOutlet","BaseWithChildDialogComponent","ExportAppService","ImportAppPartsService","AppDialogConfigService","FeatureTextInfoComponent","FormsModule","MatSlideToggleModule","MatButtonModule","MatIconModule","MatCardModule","transient","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵlistener","SyncConfigurationComponent_Conditional_71_Template_button_click_0_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","exportAppXml","SyncConfigurationComponent_Conditional_71_Template_button_click_5_listener","resetApp","SyncConfigurationComponent_Conditional_72_Template_button_click_0_listener","_r3","SyncConfigurationComponent_Conditional_72_Template_button_click_5_listener","SyncConfigurationComponent","constructor","router","route","snackBar","appDialogConfigService","importAppPartsService","exportAppService","appStateAdvanced","ngOnInit","getCurrent$","subscribe","dialogSettings","ngOnDestroy","dismiss","exportApp","navigate","relativeTo","parent","firstChild","exportParts","importParts","withFiles","open","exportForVersionControl","includeContentGroups","resetAppGuid","next","result","duration","error","confirm","_","ɵɵdirectiveInject","i1","i2","i3","_2","selectors","standalone","features","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","decls","vars","consts","template","SyncConfigurationComponent_Template","rf","ctx","ɵɵelementContainerStart","SyncConfigurationComponent_Template_button_click_25_listener","SyncConfigurationComponent_Template_button_click_41_listener","SyncConfigurationComponent_Template_button_click_46_listener","ɵɵtwoWayListener","SyncConfigurationComponent_Template_mat_slide_toggle_ngModelChange_57_listener","$event","ɵɵtwoWayBindingSet","ɵɵtemplate","SyncConfigurationComponent_Conditional_67_Template","SyncConfigurationComponent_Conditional_68_Template","SyncConfigurationComponent_Conditional_71_Template","SyncConfigurationComponent_Conditional_72_Template","ɵɵadvance","ɵɵtwoWayProperty","ɵɵtextInterpolate","ɵɵconditional","i4","MatCard","MatCardActions","MatCardContent","MatCardHeader","MatCardTitle","i5","MatIcon","i6","MatButton","i7","MatSlideToggle","i8","NgControlStatus","NgModel","styles","MatDialogRef","MAT_DIALOG_DATA","copyToClipboard","FeatureDetailService","TranslateModule","AsyncPipe","TippyDirective","SafeHtmlPipe","FeatureInfoDialogComponent_Conditional_0_Conditional_15_Template_span_click_4_listener","id_r3","_r2","ctx_r3","FeatureInfoDialogComponent_Conditional_0_Conditional_15_Template","FeatureInfoDialogComponent_Conditional_0_Template_button_click_17_listener","feature_r5","findOutMore","link","FeatureInfoDialogComponent_Conditional_0_Template_button_click_22_listener","closeDialog","name","ɵɵpipeBind1","description","ɵɵsanitizeHtml","ɵɵtextInterpolate1","isEnabled","tmp_6_0","nameId","FeatureInfoDialogComponent","dialogData","dialogRef","featureDetailService","viewModel$","getFeatureDetails","text","window","close","FeatureInfoDialogComponent_Template","FeatureInfoDialogComponent_Conditional_0_Template","tmp_0_0","TranslatePipe","Context","DnnContext","HttpClient","webApiRoot","http","dnnContext","featureNameId","get","$2sxc","apiUrl","params","ɵɵinject","factory","ɵfac","ChangeDetectorRef","ViewContainerRef","inject","MatDialog","FeaturesService","BehaviorSubject","switchMap","map","combineLatest","FeatureComponentProviders","FeatureComponentBase","value","featureNameId$","showIf","showIf$","dialog","viewContainerRef","changeDetectorRef","featuresService","feature$","pipe","featName","get$","show$","feat","openDialog","openFeatureDialog","inputs","featureId","autoFocus","data","width","markForCheck"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}