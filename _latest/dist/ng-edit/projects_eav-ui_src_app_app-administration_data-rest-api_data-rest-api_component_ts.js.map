{"version":3,"file":"projects_eav-ui_src_app_app-administration_data-rest-api_data-rest-api_component_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/app-administration/data-rest-api/data-rest-api.component.ts","./projects/eav-ui/src/app/app-administration/data-rest-api/data-rest-api.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ContentTypesService } from '../services';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ContentType } from '../models';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { DevRestDataComponent } from '../../dev-rest/data/data.component';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { MetadataService } from '../../permissions';\r\nimport { transient } from '../../core';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\n\r\n@Component({\r\n  selector: 'app-data-rest-api',\r\n  standalone: true,\r\n  imports: [\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    ReactiveFormsModule,\r\n    AsyncPipe,\r\n    DevRestDataComponent,\r\n    RouterOutlet,\r\n    SxcGridModule,\r\n  ],\r\n  templateUrl: './data-rest-api.component.html',\r\n  styleUrl: './data-rest-api.component.scss'\r\n})\r\nexport class DataRestApiComponent {\r\n  private contentTypesService = transient(ContentTypesService);\r\n  contentTypes$ = new BehaviorSubject<ContentType[]>(undefined);\r\n  contentTypes: ContentType[] = [];\r\n\r\n  contentTypeForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchData();\r\n    this.contentTypeForm = this.fb.group({\r\n      contentType: ['']\r\n    });\r\n  }\r\n\r\n  fetchData() {\r\n    this.contentTypesService.retrieveContentTypes(\"Default\").subscribe(\r\n      (contentTypes: ContentType[]) => {\r\n        this.contentTypes$.next(contentTypes);\r\n        // When Route are reload and have some StaticName in the Route\r\n        const urlSegments = this.router.url.split('/');\r\n        const urlStaticName = urlSegments[urlSegments.length - 1]\r\n\r\n        const selectedContentType = contentTypes.find(contentType => contentType.StaticName === urlStaticName);\r\n        if (selectedContentType)\r\n          this.contentTypeForm.get('contentType').setValue(selectedContentType.StaticName);\r\n      }\r\n    );\r\n  }\r\n\r\n  openRestApi(event: string): void {\r\n    if (!event) return;\r\n    this.router.navigate([`${event}`], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n}\r\n","<form [formGroup]=\"contentTypeForm\">\r\n  <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n    <mat-label>Content-Type</mat-label>\r\n    <mat-select formControlName=\"contentType\" (valueChange)=\"openRestApi($event)\">\r\n      @if (contentTypes$ | async; as contentTypes) {\r\n        @for (contentType of contentTypes.sort() ; track contentType) {\r\n        <mat-option [value]=\"contentType.StaticName\" >\r\n          {{ contentType.Label }}\r\n        </mat-option>\r\n        }\r\n      }\r\n    </mat-select>\r\n  </mat-form-field>\r\n</form>\r\n\r\n<router-outlet></router-outlet>\r\n"],"names":["ContentTypesService","BehaviorSubject","MatSelectModule","AsyncPipe","FormBuilder","ReactiveFormsModule","MatButtonModule","MatCardModule","MatIconModule","ActivatedRoute","Router","RouterOutlet","transient","SxcGridModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","contentType_r1","StaticName","ɵɵadvance","ɵɵtextInterpolate1","Label","ɵɵrepeaterCreate","DataRestApiComponent_Conditional_5_For_1_Template","ɵɵrepeaterTrackByIdentity","ɵɵrepeater","ctx","sort","DataRestApiComponent","constructor","fb","router","route","contentTypesService","contentTypes$","undefined","contentTypes","ngOnInit","fetchData","contentTypeForm","group","contentType","retrieveContentTypes","subscribe","next","urlSegments","url","split","urlStaticName","length","selectedContentType","find","get","setValue","openRestApi","event","navigate","relativeTo","parent","firstChild","_","ɵɵdirectiveInject","i1","i2","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","DataRestApiComponent_Template","rf","ɵɵlistener","DataRestApiComponent_Template_mat_select_valueChange_4_listener","$event","ɵɵtemplate","DataRestApiComponent_Conditional_5_Template","ɵɵelement","ɵɵconditional","tmp_1_0","ɵɵpipeBind1","i3","MatFormField","MatLabel","i4","MatSelect","i5","MatOption","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}