{"version":3,"file":"projects_eav-ui_src_app_app-administration_data-rest-api_data-rest-api_component_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/app-administration/data-rest-api/data-rest-api.component.ts","./projects/eav-ui/src/app/app-administration/data-rest-api/data-rest-api.component.html","./projects/eav-ui/src/app/app-administration/services/index.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts"],"sourcesContent":["import { AsyncPipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { DevRestDataComponent } from '../../dev-rest/data/data.component';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { ContentType } from '../models';\r\nimport { ContentTypesService } from '../services';\r\n\r\n@Component({\r\n  selector: 'app-data-rest-api',\r\n  standalone: true,\r\n  imports: [\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    ReactiveFormsModule,\r\n    AsyncPipe,\r\n    DevRestDataComponent,\r\n    RouterOutlet,\r\n    SxcGridModule,\r\n  ],\r\n  templateUrl: './data-rest-api.component.html',\r\n})\r\nexport class DataRestApiComponent {\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  contentTypes$ = new BehaviorSubject<ContentType[]>(undefined);\r\n  contentTypes: ContentType[] = [];\r\n\r\n  contentTypeForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchData();\r\n    this.contentTypeForm = this.fb.group({\r\n      contentType: ['']\r\n    });\r\n  }\r\n\r\n  fetchData() {\r\n    this.#contentTypesSvc.retrieveContentTypes(\"Default\").subscribe(\r\n      (contentTypes: ContentType[]) => {\r\n        this.contentTypes$.next(contentTypes);\r\n        // When Route are reload and have some StaticName in the Route\r\n        const urlSegments = this.#dialogRouter.url.split('/');\r\n        const urlStaticName = urlSegments[urlSegments.length - 1]\r\n\r\n        const selectedContentType = contentTypes.find(contentType => contentType.StaticName === urlStaticName);\r\n        if (selectedContentType)\r\n          this.contentTypeForm.get('contentType').setValue(selectedContentType.StaticName);\r\n      }\r\n    );\r\n  }\r\n\r\n  openRestApi(event: string): void {\r\n    if (!event) return;\r\n    this.#dialogRouter.navParentFirstChild([`${event}`]);\r\n  }\r\n}\r\n","<form [formGroup]=\"contentTypeForm\">\r\n  <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n    <mat-label>Content-Type</mat-label>\r\n    <mat-select formControlName=\"contentType\" (valueChange)=\"openRestApi($event)\">\r\n      @if (contentTypes$ | async; as contentTypes) {\r\n        @for (contentType of contentTypes.sort() ; track contentType) {\r\n        <mat-option [value]=\"contentType.StaticName\" >\r\n          {{ contentType.Label }}\r\n        </mat-option>\r\n        }\r\n      }\r\n    </mat-select>\r\n  </mat-form-field>\r\n</form>\r\n\r\n<router-outlet></router-outlet>\r\n","export * from './dialog-config-global.service';\r\nexport * from './content-types.service';\r\nexport * from './export-app-parts.service';\r\nexport * from './export-app.service';\r\nexport * from './import-app-parts.service';\r\nexport * from './pipelines.service';\r\nexport * from './views.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Query } from '../models/query.model';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService extends HttpServiceBase {\r\n\r\n  getAll(contentType: string) {\r\n    return this.getHttpApiUrl<Query[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiQueryImport), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.getHttpApiUrl<null>(webApiQueryClone, {\r\n      params: { Id: id.toString(), appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService extends HttpServiceBase {\r\n\r\n  getAll() {\r\n    return this.getHttpApiUrl<View[]>(webApiViews, {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.getHttpApiUrl<boolean>(webApiViewDelete, {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.getHttpApiUrl<Polymorphism>(webApiViewPolymorph, {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.getHttpApiUrl<ViewUsage[]>(webApiViewUsage, {\r\n      params: { appId: this.appId, guid }\r\n    });\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n"],"names":["AsyncPipe","FormBuilder","ReactiveFormsModule","MatButtonModule","MatCardModule","MatIconModule","MatSelectModule","RouterOutlet","BehaviorSubject","transient","SxcGridModule","DialogRoutingService","ContentTypesService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","contentType_r1","StaticName","ɵɵadvance","ɵɵtextInterpolate1","Label","ɵɵrepeaterCreate","DataRestApiComponent_Conditional_5_For_1_Template","ɵɵrepeaterTrackByIdentity","ɵɵrepeater","ctx","sort","DataRestApiComponent","contentTypesSvc","dialogRouter","constructor","fb","contentTypes$","undefined","contentTypes","ngOnInit","fetchData","contentTypeForm","group","contentType","retrieveContentTypes","subscribe","next","urlSegments","url","split","urlStaticName","length","selectedContentType","find","get","setValue","openRestApi","event","navParentFirstChild","ɵɵdirectiveInject","i1","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","DataRestApiComponent_Template","rf","ɵɵlistener","DataRestApiComponent_Template_mat_select_valueChange_4_listener","$event","ɵɵtemplate","DataRestApiComponent_Conditional_5_Template","ɵɵelement","ɵɵconditional","tmp_1_0","ɵɵpipeBind1","i2","MatFormField","MatLabel","i3","MatSelect","i4","MatOption","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","encapsulation","from","map","switchMap","toBase64","webApiEntityList","HttpServiceBase","webApiQueryImport","webApiQueryClone","webApiQueryDelete","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","getHttpApiUrl","params","appId","importQuery","file","pipe","fileBase64","http","post","apiUrl","AppId","ContentBase64","success","result","Success","Messages","clonePipeline","id","Id","toString","delete","__ngFactoryType__","factory","ɵfac","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","import","formData","FormData","append","zoneId","export","window","open","getPolymorphism","getUsage","guid","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","error","readAsText"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}