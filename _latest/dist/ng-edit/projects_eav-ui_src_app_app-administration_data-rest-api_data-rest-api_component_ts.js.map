{"version":3,"file":"projects_eav-ui_src_app_app-administration_data-rest-api_data-rest-api_component_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/app-administration/data-rest-api/data-rest-api.component.ts","./projects/eav-ui/src/app/app-administration/data-rest-api/data-rest-api.component.html"],"sourcesContent":["import { Component, computed } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { transient } from '../../../../../core';\r\nimport { DevRestDataComponent } from '../../dev-rest/data/data.component';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { ContentTypesService } from '../services';\r\n\r\n@Component({\r\n  selector: 'app-data-rest-api',\r\n  standalone: true,\r\n  imports: [\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    ReactiveFormsModule,\r\n    DevRestDataComponent,\r\n    RouterOutlet,\r\n    SxcGridModule,\r\n  ],\r\n  templateUrl: './data-rest-api.component.html',\r\n})\r\nexport class DataRestApiComponent {\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  #getAllContentTypes = this.#contentTypesSvc.retrieveContentTypesSig(\"Default\", undefined);\r\n\r\n  contentTypes = computed(() => {\r\n    const contentTypes = this.#getAllContentTypes();\r\n\r\n    const urlSegments = this.#dialogRouter.url.split('/');\r\n    const urlStaticName = urlSegments[urlSegments.length - 1]\r\n\r\n    const selectedContentType = contentTypes?.find(contentType => contentType.NameId === urlStaticName);\r\n    if (selectedContentType)\r\n      this.contentTypeForm.get('contentType').setValue(selectedContentType.NameId);\r\n\r\n    return contentTypes;\r\n  });\r\n\r\n  contentTypeForm: FormGroup = this.fb.group({\r\n    contentType: ['']\r\n  });\r\n\r\n  constructor(private fb: FormBuilder,) { }\r\n\r\n  openRestApi(event: string): void {\r\n    if (!event) return;\r\n    this.#dialogRouter.navRelative([`${event}`]);\r\n  }\r\n}\r\n","<form [formGroup]=\"contentTypeForm\">\r\n  <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n    <mat-label>Content-Type</mat-label>\r\n    <mat-select formControlName=\"contentType\" (valueChange)=\"openRestApi($event)\">\r\n      @if (contentTypes()) {\r\n        @for (contentType of contentTypes().sort() ; track contentType) {\r\n        <mat-option [value]=\"contentType.NameId\" >\r\n          {{ contentType.Label }}\r\n        </mat-option>\r\n        }\r\n      }\r\n    </mat-select>\r\n  </mat-form-field>\r\n</form>\r\n\r\n<router-outlet></router-outlet>\r\n"],"names":["computed","FormBuilder","ReactiveFormsModule","MatButtonModule","MatCardModule","MatIconModule","MatSelectModule","RouterOutlet","transient","SxcGridModule","DialogRoutingService","ContentTypesService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","contentType_r1","NameId","ɵɵadvance","ɵɵtextInterpolate1","Label","ɵɵrepeaterCreate","DataRestApiComponent_Conditional_5_For_1_Template","ɵɵrepeaterTrackByIdentity","ɵɵrepeater","ctx_r1","contentTypes","sort","DataRestApiComponent","contentTypesSvc","dialogRouter","getAllContentTypes","constructor","fb","retrieveContentTypesSig","undefined","urlSegments","url","split","urlStaticName","length","selectedContentType","find","contentType","contentTypeForm","get","setValue","group","openRestApi","event","navRelative","ɵɵdirectiveInject","i1","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","DataRestApiComponent_Template","rf","ctx","ɵɵlistener","DataRestApiComponent_Template_mat_select_valueChange_4_listener","$event","ɵɵtemplate","DataRestApiComponent_Conditional_5_Template","ɵɵelement","ɵɵconditional","i2","MatFormField","MatLabel","i3","MatSelect","i4","MatOption","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","encapsulation"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}