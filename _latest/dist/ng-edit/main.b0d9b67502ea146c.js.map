{"version":3,"file":"main.b0d9b67502ea146c.js","mappings":"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AAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC5FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,KAAMC,OAAG,IAC5FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC5FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC5FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,QAAI,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC5FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,KAAMC,OAAG,KAC5FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC5FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC7FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC5FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,KAAMC,OAAG,KAAMC,OAAG,IAAKC,OAAG,KAC7FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,KAAMC,OAAG,IAAKC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC7FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC5FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IACnBC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,KAAMC,OAAG,KAAMC,OAAG,KAAMC,OAAG,KAAMC,OAAG,KAAMC,OAAG,KAAMC,OAAG,KAAMC,OAAG,KAC1FC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC5FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,KAAMC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC7FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC5FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAC5FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAC5FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC5FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC5FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC5FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,KAAMC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC9FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC5FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC3FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,KAAMC,OAAG,IAAKC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC7FC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,KAAMC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,OAAG,IAC5FC,OAAG,KAAMC,O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","names":["InputTypeConstants","BooleanDefault","BooleanTristate","CustomDefault","CustomGps","CustomJsonEditor","DateTimeDefault","DefaultSuffix","EmptyDefault","EmptyEnd","EmptyMessage","EntityContentBlocks","EntityDefault","EntityQuery","ExternalWebComponent","HyperlinkDefault","HyperlinkLibrary","NumberDefault","NumberDropdown","StringDefault","StringDropdown","StringDropdownQuery","StringFontIconPicker","StringJson","StringTemplatePicker","StringUrlPath","StringWysiwyg","EntityPicker","StringPicker","NumberPicker","Unknown","transient","token","injector","inject","Injector","create","providers","parent","get","undefined","self","PublishModes","Show","Hide","Branch","prefetchItemToPickerItem","item","id","Id","label","Text","value","Value","editDialog","name","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","EditEntryComponent","Promise","all","__webpack_require__","e","then","bind","logger","EavLogger","editRouteMatcherSubEdit","url","l","fn","length","path","rNull","hasDetails","hasUpdate","posParams","items","detailsEntityGuid","detailsFieldId","updateEntityGuid","updateFieldId","match","consumed","slice","r","EditRoutesSubItems","matcher","loadChildren","a","EditRoutes","editRouteMatcherSubEditRefresh","m","RefreshEditModule","EditRoutesSubItemsNoHistory","data","history","component","DialogEntryComponent","dialog","children","historyRoutes","EditRoutesRoot","editRouteMatcherRoot","zoneId","appId","editRouteMatcherRootRefresh","empty","ends","EmptyFieldHelpers","isEmptyField","inputType","this","isEmptyInputType","includes","endsPreviousGroup","isGroupStart","isGroupEnd","isMessage","FieldState","constructor","config","group","control","settings$","settings","basics","controlStatus","nameOfThis","FieldLogicBase","logThis","canAutoTranslate","_log","log","add","logic","logicInstance","FieldLogicManager","singleton","importMe","isValueEmpty","isCreateMode","emptyEntityField","Array","isArray","findAndMergeAdvanced","tools","possibleGuid","defaults","wysiwygConfig","eavConfig","Entities","find","Guid","advanced","entityReader","flatten","UnknownLogic","update","logics","window","eavFieldLogicManager","inputTypeName","getOrUnknown","i0","PagePickerComponent_Conditional_0_Conditional_12_For_2_ng_container_0_Template","pageAndChildren_r4","_c0","page_r3","PagePickerComponent_Conditional_0_Conditional_12_For_2_Template","vm_r5","tree","page_r7","_r6","$implicit","ctx_r1","select","PagePickerComponent_Conditional_0_Conditional_13_For_3_Conditional_6_Template","PagePickerComponent_Conditional_0_Conditional_13_For_3_Conditional_10_Template","PagePickerComponent_Conditional_0_Conditional_13_For_3_Conditional_11_Template","selected","isVisible","isClickable","PagePickerComponent_Conditional_0_Conditional_13_Conditional_1_Template","PagePickerComponent_Conditional_0_Conditional_13_For_3_Template","filteredSearch","_r9","page_r10","page","toggle","toggled","PagePickerComponent_Conditional_0_ng_template_14_Conditional_12_For_2_ng_container_0_Template","child_r11","PagePickerComponent_Conditional_0_ng_template_14_Conditional_12_For_2_Template","PagePickerComponent_Conditional_0_ng_template_14_Conditional_2_Template","PagePickerComponent_Conditional_0_ng_template_14_Conditional_3_Template","_r8","PagePickerComponent_Conditional_0_ng_template_14_Conditional_10_Template","PagePickerComponent_Conditional_0_ng_template_14_Conditional_11_Template","PagePickerComponent_Conditional_0_ng_template_14_Conditional_12_Template","$event","_r1","setFilter","PagePickerComponent_Conditional_0_Conditional_12_Template","PagePickerComponent_Conditional_0_Conditional_13_Template","PagePickerComponent_Conditional_0_ng_template_14_Template","filterText","PagePickerComponent","dialogData","dialogRef","translate","queryService","QueryService","ngOnInit","parseSelectedPageId","filterText$","BehaviorSubject","searchItems$","tree$","filteredSearch$","combineLatest","pipe","map","searchItems","filter","toLocaleLowerCase","viewModel$","fetchPages","ngOnDestroy","complete","next","confirm","instant","closeDialog","pageId","ArrayHelpers","toggleInArray","close","i","result","toString","stream","getAvailableEntities","subscribe","console","error","pages","buildPageSearch","Path","trim","replace","startsWith","substring","split","join","Name","Visible","Clickable","buildPageTree","parentId","ParentId","push","prefix","fieldValue","controls","fieldName","parseInt","static","t","MAT_DIALOG_DATA","i1","i2","core","VBU","selectors","standalone","features","decls","vars","consts","template","rf","ctx","PagePickerComponent_Conditional_0_Template","tmp_0_0","MatFormFieldModule","i3","MatInputModule","i4","FormsModule","i5","NgTemplateOutlet","NgClass","ExtendedModule","i6","MatIconModule","i7","MatDialogActions","AsyncPipe","TranslateModule","TippyDirective","styles","PagePicker","open","viewContainerRef","changeDetectorRef","callback","autoFocus","height","width","afterClosed","take","markForCheck","TranslateMenuHelpers","getTranslationStateClass","linkType","TranslationLinks","MissingDefaultLangValue","Translate","LinkCopyFrom","DontTranslate","LinkReadOnly","LinkReadWrite","calculateSharedInfoMessage","dimensions","currentLanguage","calculateShortDimensions","calculateEditAndReadDimensions","editableDimensions","readOnlyDimensions","infoMessage","editableExist","readOnlyExist","dimensionsMap","shortCurrentLanguage","indexOf","forEach","dimension","shortNoReadOnly","shortDimension","BestValueModes","Default","Strict","LocalizationHelpers","language","attributeValues","defaultValue","translation","getValueTranslation","translationDefault","FormLanguage","bothPrimary","Values","getValueOrDefault","field","valuesOfLanguage","val","valueHasLanguage","Dimensions","d","current","primary","isEditableOrReadonlyTranslationExist","valuesEditableOfCurrent","langs","hasEditableValue","countEditableValues","countEditableValuesWithContent","v","hasReadonlyValue","hasValueOnPrimary","defaultLanguage","updateAttribute","oldAttributes","attributeKey","attribute","newAttributes","Object","keys","attributeCopy","key","updateAttributesValues","allFields","updateValues","eavAttributes","newItemValue","newValues","newEavValue","EavValue","EavDimension","newAttribute","updateAttributeValue","allAttributes","updateValue","isReadOnly","newLanguageValue","addAttributeValue","attributeValue","attributeType","Type","addAttributeDimension","newDimensionValue","existingDimensionValue","eavValue","concat","removeAttributeDimension","attributes","validDimensions","some","getBestValue","eavValues","mode","bestDimensions","bestValue","findValueForDimensions","findOfExactDimension","x","ControlHelpers","getFormChanges","oldValues","changes","newValue","controlValuesEqual","markControlTouched","touched","markAsTouched","updateValueAndValidity","patchControlValue","dirty","markAsDirty","patchValue","disableControl","disable","disabled","enable","y","isNaN","RxHelpers","arraysEqual","FieldsFind","FieldUnwrap","FieldMask","ServiceBase","super","signal","watch","fieldsUsedInMask","fieldState","fieldConfig","formConfig","FormConfigService","destroy","initPreClean","overloadPreCleanValues","preClean","initCallback","init","mask","rename","updateMask","logChanges","enabled","effect","latest","extractFieldNames","watchAllFields","onChange","resolve","hasPlaceholders","lowercaseInsideSquareBrackets","toLowerCase","entityGuid","entityId","replaceValue","hasOwnProperty","cleaned","matches","staticName","maybeNew","set","valueSub","valueChanges","_","subscriptions","_angular_core__WEBPACK_IMPORTED_MODULE_3__","jDH","factory","ɵfac","EntityReader","metadataItem","flattenAll","metadataItems","merged","values","entries","Attributes","currentValues","itemAttributes","formValues","FileTypeHelpers","defaultIcon","customExtensions","doc","docx","xls","xlsx","ppt","pptx","pdf","mp3","avi","mpg","mpeg","mov","mp4","zip","rar","txt","html","css","xml","xsl","matExtensions","vcf","getExtension","filename","lastIndexOf","getIconClass","ext","isKnownType","isImage","isImgRegex","test","FieldHelper","getDefaultOrPrefillValue","itemHeader","onlyPrefill","prefillRaw","Prefill","DefaultValue","Date","toJSON","Number","guids","guid","JSON","stringify","parse","SanitizeHelper","removeFromStart","sanitized","charToRemove","removeFromEnd","cleanBadPath","goodChar","sanitizePath","sanitizeName","UrlHelpers","stripNonUrlCharacters","controlValue","allowPath","trimEnd","rexSeparators","latinizeText","input","latinMap","Á","Ă","Ắ","Ặ","Ằ","Ẳ","Ẵ","Ǎ","Â","Ấ","Ậ","Ầ","Ẩ","Ẫ","Ä","Ǟ","Ȧ","Ǡ","Ạ","Ȁ","À","Ả","Ȃ","Ā","Ą","Å","Ǻ","Ḁ","Ⱥ","Ã","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ḃ","Ḅ","Ɓ","Ḇ","Ƀ","Ƃ","Ć","Č","Ç","Ḉ","Ĉ","Ċ","Ƈ","Ȼ","Ď","Ḑ","Ḓ","Ḋ","Ḍ","Ɗ","Ḏ","ǲ","ǅ","Đ","Ƌ","Ǳ","Ǆ","É","Ĕ","Ě","Ȩ","Ḝ","Ê","Ế","Ệ","Ề","Ể","Ễ","Ḙ","Ë","Ė","Ẹ","Ȅ","È","Ẻ","Ȇ","Ē","Ḗ","Ḕ","Ę","Ɇ","Ẽ","Ḛ","Ꝫ","Ḟ","Ƒ","Ǵ","Ğ","Ǧ","Ģ","Ĝ","Ġ","Ɠ","Ḡ","Ǥ","Ḫ","Ȟ","Ḩ","Ĥ","Ⱨ","Ḧ","Ḣ","Ḥ","Ħ","Í","Ĭ","Ǐ","Î","Ï","Ḯ","İ","Ị","Ȉ","Ì","Ỉ","Ȋ","Ī","Į","Ɨ","Ĩ","Ḭ","Ꝺ","Ꝼ","Ᵹ","Ꞃ","Ꞅ","Ꞇ","Ꝭ","Ĵ","Ɉ","Ḱ","Ǩ","Ķ","Ⱪ","Ꝃ","Ḳ","Ƙ","Ḵ","Ꝁ","Ꝅ","Ĺ","Ƚ","Ľ","Ļ","Ḽ","Ḷ","Ḹ","Ⱡ","Ꝉ","Ḻ","Ŀ","Ɫ","ǈ","Ł","Ǉ","Ḿ","Ṁ","Ṃ","Ɱ","Ń","Ň","Ņ","Ṋ","Ṅ","Ṇ","Ǹ","Ɲ","Ṉ","Ƞ","ǋ","Ñ","Ǌ","Ó","Ŏ","Ǒ","Ô","Ố","Ộ","Ồ","Ổ","Ỗ","Öe","Ȫ","Ȯ","Ȱ","Ọ","Ő","Ȍ","Ò","Ỏ","Ơ","Ớ","Ợ","Ờ","Ở","Ỡ","Ȏ","Ꝋ","Ꝍ","Ō","Ṓ","Ṑ","Ɵ","Ǫ","Ǭ","Ø","Ǿ","Õ","Ṍ","Ṏ","Ȭ","Ƣ","Ꝏ","Ɛ","Ɔ","Ȣ","Ṕ","Ṗ","Ꝓ","Ƥ","Ꝕ","Ᵽ","Ꝑ","Ꝙ","Ꝗ","Ŕ","Ř","Ŗ","Ṙ","Ṛ","Ṝ","Ȑ","Ȓ","Ṟ","Ɍ","Ɽ","Ꜿ","Ǝ","Ś","Ṥ","Š","Ṧ","Ş","Ŝ","Ș","Ṡ","Ṣ","Ṩ","Ť","Ţ","Ṱ","Ț","Ⱦ","Ṫ","Ṭ","Ƭ","Ṯ","Ʈ","Ŧ","Ɐ","Ꞁ","Ɯ","Ʌ","Ꜩ","Ú","Ŭ","Ǔ","Û","Ṷ","Ü","Ǘ","Ǚ","Ǜ","Ǖ","Ṳ","Ụ","Ű","Ȕ","Ù","Ủ","Ư","Ứ","Ự","Ừ","Ử","Ữ","Ȗ","Ū","Ṻ","Ų","Ů","Ũ","Ṹ","Ṵ","Ꝟ","Ṿ","Ʋ","Ṽ","Ꝡ","Ẃ","Ŵ","Ẅ","Ẇ","Ẉ","Ẁ","Ⱳ","Ẍ","Ẋ","Ý","Ŷ","Ÿ","Ẏ","Ỵ","Ỳ","Ƴ","Ỷ","Ỿ","Ȳ","Ɏ","Ỹ","Ź","Ž","Ẑ","Ⱬ","Ż","Ẓ","Ȥ","Ẕ","Ƶ","Ĳ","Œ","ᴀ","ᴁ","ʙ","ᴃ","ᴄ","ᴅ","ᴇ","ꜰ","ɢ","ʛ","ʜ","ɪ","ʁ","ᴊ","ᴋ","ʟ","ᴌ","ᴍ","ɴ","ᴏ","ɶ","ᴐ","ᴕ","ᴘ","ʀ","ᴎ","ᴙ","ꜱ","ᴛ","ⱻ","ᴚ","ᴜ","ᴠ","ᴡ","ʏ","ᴢ","á","ă","ắ","ặ","ằ","ẳ","ẵ","ǎ","â","ấ","ậ","ầ","ẩ","ẫ","ä","ǟ","ȧ","ǡ","ạ","ȁ","à","ả","ȃ","ā","ą","ᶏ","ẚ","å","ǻ","ḁ","ⱥ","ã","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ḃ","ḅ","ɓ","ḇ","ᵬ","ᶀ","ƀ","ƃ","ɵ","ć","č","ç","ḉ","ĉ","ɕ","ċ","ƈ","ȼ","ď","ḑ","ḓ","ȡ","ḋ","ḍ","ɗ","ᶑ","ḏ","ᵭ","ᶁ","đ","ɖ","ƌ","ı","ȷ","ɟ","ʄ","ǳ","ǆ","é","ĕ","ě","ȩ","ḝ","ê","ế","ệ","ề","ể","ễ","ḙ","ë","ė","ẹ","ȅ","è","ẻ","ȇ","ē","ḗ","ḕ","ⱸ","ę","ᶒ","ɇ","ẽ","ḛ","ꝫ","ḟ","ƒ","ᵮ","ᶂ","ǵ","ğ","ǧ","ģ","ĝ","ġ","ɠ","ḡ","ᶃ","ǥ","ḫ","ȟ","ḩ","ĥ","ⱨ","ḧ","ḣ","ḥ","ɦ","ẖ","ħ","ƕ","í","ĭ","ǐ","î","ï","ḯ","ị","ȉ","ì","ỉ","ȋ","ī","į","ᶖ","ɨ","ĩ","ḭ","ꝺ","ꝼ","ᵹ","ꞃ","ꞅ","ꞇ","ꝭ","ǰ","ĵ","ʝ","ɉ","ḱ","ǩ","ķ","ⱪ","ꝃ","ḳ","ƙ","ḵ","ᶄ","ꝁ","ꝅ","ĺ","ƚ","ɬ","ľ","ļ","ḽ","ȴ","ḷ","ḹ","ⱡ","ꝉ","ḻ","ŀ","ɫ","ᶅ","ɭ","ł","ǉ","ſ","ẜ","ẛ","ẝ","ḿ","ṁ","ṃ","ɱ","ᵯ","ᶆ","ń","ň","ņ","ṋ","ȵ","ṅ","ṇ","ǹ","ɲ","ṉ","ƞ","ᵰ","ᶇ","ɳ","ñ","ǌ","ó","ŏ","ǒ","ô","ố","ộ","ồ","ổ","ỗ","ö","ȫ","ȯ","ȱ","ọ","ő","ȍ","ò","ỏ","ơ","ớ","ợ","ờ","ở","ỡ","ȏ","ꝋ","ꝍ","ⱺ","ō","ṓ","ṑ","ǫ","ǭ","ø","ǿ","õ","ṍ","ṏ","ȭ","ƣ","ꝏ","ɛ","ᶓ","ɔ","ᶗ","ȣ","ṕ","ṗ","ꝓ","ƥ","ᵱ","ᶈ","ꝕ","ᵽ","ꝑ","ꝙ","ʠ","ɋ","ꝗ","ŕ","ř","ŗ","ṙ","ṛ","ṝ","ȑ","ɾ","ᵳ","ȓ","ṟ","ɼ","ᵲ","ᶉ","ɍ","ɽ","ↄ","ꜿ","ɘ","ɿ","ß","ś","ṥ","š","ṧ","ş","ŝ","ș","ṡ","ṣ","ṩ","ʂ","ᵴ","ᶊ","ȿ","ɡ","ᴑ","ᴓ","ᴝ","ť","ţ","ṱ","ț","ȶ","ẗ","ⱦ","ṫ","ṭ","ƭ","ṯ","ᵵ","ƫ","ʈ","ŧ","ᵺ","ɐ","ᴂ","ǝ","ᵷ","ɥ","ʮ","ʯ","ᴉ","ʞ","ꞁ","ɯ","ɰ","ᴔ","ɹ","ɻ","ɺ","ⱹ","ʇ","ʌ","ʍ","ʎ","ꜩ","ú","ŭ","ǔ","û","ṷ","ü","ǘ","ǚ","ǜ","ǖ","ṳ","ụ","ű","ȕ","ù","ủ","ư","ứ","ự","ừ","ử","ữ","ȗ","ū","ṻ","ų","ᶙ","ů","ũ","ṹ","ṵ","ᵫ","ꝸ","ⱴ","ꝟ","ṿ","ʋ","ᶌ","ⱱ","ṽ","ꝡ","ẃ","ŵ","ẅ","ẇ","ẉ","ẁ","ⱳ","ẘ","ẍ","ẋ","ᶍ","ý","ŷ","ÿ","ẏ","ỵ","ỳ","ƴ","ỷ","ỿ","ȳ","ẙ","ɏ","ỹ","ź","ž","ẑ","ʑ","ⱬ","ż","ẓ","ȥ","ẕ","ᵶ","ᶎ","ʐ","ƶ","ɀ","ﬀ","ﬃ","ﬄ","ﬁ","ﬂ","ĳ","œ","ﬆ","ₐ","ₑ","ᵢ","ⱼ","ₒ","ᵣ","ᵤ","ᵥ","ₓ","readQueryStringParameters","queryParams","f","decodeURIComponent","getUrlParams","qs","params","tokens","re","exec","replaceUrlParam","paramName","paramValue","pattern","RegExp","search","getUrlPrefix","area","systemRoot","portalRoot","appRoot","appSharedRoot","endsWith","calculatePathFromRoot","route","lastChild","firstChild","pathFromRoot","snapshot","urlSegment","EavContentTypeAttribute","convertOne","ctAttributeDto","metadata","EavEntity","convertMany","Metadata","EavEntityAttributes","mergeSettings","InputType","IsTitle","Settings","ctAttributesDto","attribute1","EavContentType","contentTypeDto","Description","Scope","contentTypesDto","EavField","convert","valueDto","type","attributesDto","typeName","attributeDto","attributeName","copy","entityDto","Owner","Version","For","entitiesDto","EavItem","entityBundleDto","Entity","Header","valuesDto","lang","BaseDataService","EntityCollectionServiceBase","cacheName","serviceElementsFactory","cache","cache$","entities$","AdamCacheService","loadPrefetch","prefetchAdams","snapshots","upsertManyInCache","getAdamSnapshot","adamSnapshot","providedIn","ContentTypeItemService","addContentTypeItems","contentTypeItems1","contentTypeItems","getContentTypeItem","contentTypeItem","getContentTypeItems","ContentTypeService","addContentTypes","contentTypes1","contentTypes","addManyToCache","getContentType","contentType","getContentType$","mapUntilChanged","entityConfig","entityMetadata","GlobalConfig","Item","selectId","itemSelectId","Feature","featureSelectId","feature","Language","languageSelectId","NameId","FormLanguageInStore","languageInstanceSelectId","languageInstance","formId","ContentType","contentTypeSelectId","ContentTypeItem","contentTypeItemSelectId","inputTypeSelectId","PublishStatus","publishStatusSelectId","publishStatus","Prefetch","prefetchSelectId","entity","_guid","EntityCache","useLowerCaseId","AdamCache","adamCacheSelectId","LinkCache","linkCacheSelectId","link","pluralNames","InputTypeService","addInputTypes","inputTypes","getInputType","getInputTypes","getInputTypes$","getInputTypeNames","calculatedInputType","calculateInputTypeInt","calculateInputType","isExternal","AngularAssets","LanguageService","loadLanguages","languages","addAllToCache","getLanguages","getLanguages$","asObservable","LinkCacheService","prefetchLinks","prefetchAdam","links","linkInfo","prefetchFields","adamLinks","adamToLinks","loadAdam","loadLink","Adam","upsertOneInCache","getLinkInfo","linkCache","IsFolder","ReferenceId","Url","PublishStatusService","setPublishStatus","removePublishStatus","removeOneFromCache","getPublishStatus","getPublishStatus$","mapUntilObjChanged","publishStatuses","asPublishMode","isPublished","draftShouldBranch","setPublishMode","publishMode","eavService","versioningOptions","DraftShouldBranch","IsPublished","getPublishMode$","ItemService","#itemCache","#itemAttributesCache","loadItems","dtoItems","updateItemId","itemData","oldItem","EntityId","newItem","updateOneInCache","updateItemMetadata","addItemAttributeValue","isTransaction","transactionItem","updateItemAttributeValue","updateItemAttributesValues","addItemAttributeDimension","shareWithLanguage","removeItemAttributeDimension","delayUpsert","updateItemHeader","header","end","getItem","computed","equal","objectsEqual","getItemAttributes","getItemAttributes$","getItemFor","getItemNote","eavConstants","notes","getItemHeader","getItemHeader$","slotIsEmpty","IsEmptyAllowed","IsEmpty","getItems","entityGuids","getItems$","setDefaultValue","ctAttribute","defaultLanguageValue","languageCode","DisableI18n","_angular_core__WEBPACK_IMPORTED_MODULE_10__","LanguageInstanceService","addToStore","hideHeader","addOneToCache","initial","removeFromStore","setCurrent","newLanguage","getEntityReader$","getLanguage$","shareReplay","getEntityReader","toSignal","languageInstances","found","getHideHeader$","updateHideHeader","_angular_core__WEBPACK_IMPORTED_MODULE_2__","ContentTypeSettingsHelpers","initDefaultSettings","reader","defaultSettings","EditInstructions","Features","Label","ListInstructions","Notes","Icon","Link","_itemTitle","getContentTypeTitle","_slotCanBeEmpty","_slotIsEmpty","FieldsSettingsHelpers","setDefaultFieldSettings","AllDeprecated","moveDeprecatedSettings","Placeholder","Required","Disabled","DisableTranslation","DefaultCollapsed","Collapsed","Formulas","DisableAutoTranslation","findDisableTranslation","contentTypeMetadata","attributeMetadata","MetadataDecorators","LanguagesDecorator","Enabled","findIsLastInGroup","index","findIndex","getDisabledBecauseTranslations","disableTranslation","getTranslationState","infoLabel","editableTranslationExists","readonlyTranslationExists","state","getTranslationStateCore","editableElements","asDeprecated","VisibleInEditUI","configSignal","context","Context","languageService","initFormConfig","dialogContext","isParentDialog","itemGuids","createMode","isCopy","enableHistory","Current","Primary","list","List","App","SharedUrl","moduleId","partOfPage","sessionStorage","keyPartOfPage","partOfPageDefault","Site","tabId","location","pathname","getVersioningOptions","keyPublishing","enableFormulaSave","Enable","FormulaSave","overrideEditRestrictions","OverrideEditRestrictions","language$","publishing","allowAll","show","hide","branch","publish","_language$","_angular_core__WEBPACK_IMPORTED_MODULE_4__","original","diffCurrent","SaveEmptyDecorator","BaseComponent","Subscription","unsubscribe","encapsulation","router","navigation","getCurrentNavigation","extras","dialogConfig","Error","_dialogAnimatingOpen","_lastDialogRef","afterOpened","openDialogComponent","svcId","backdropClass","closeOnNavigation","showScrollbar","position","top","navRes","navigateUrl","$2sxc","totalPopup","navigate","relativeTo","DialogTypeConstants","Zone","Apps","AppImport","ContentItems","Edit","ItemHistory","Develop","PipelineDesigner","Replace","InstanceList","SystemSettingsScopes","EditApiKeyPaths","GoogleTranslate","GoogleMaps","targetType","target","keyType","app","zone","cmsObject","hint","appMetadata","LightSpeed","ContentTypeName","keyTypes","string","number","scopes","default","configuration","appConfiguration","permissions","query","resources","systemSettings","systemResources","customSettings","customResources","formulas","imageDecorator","pipelineDesigner","dataSourceDifficulties","outDataSource","EntityGuid","In","PartAssemblyAndType","PrimaryType","VisualDesignerData","Top","Left","Width","defaultPipeline","dataSources","streamWiring","From","Out","To","testParameters","keyZoneId","keyContentBlockId","keyModuleId","keyAppId","keyDebug","keyDialog","keyContentType","keyItems","keyFilters","keyPipelineId","keyUrl","keyIsShared","keyExtras","elementRef","ngOnChanges","tooltip","tippy","nativeElement","animation","arrow","tippyArrow","duration","placement","theme","allowHTML","tippyAllowHtml","setContent","tippyDisabled","tippyPlacement","setProps","tippyShowDelay","showDelay","delay","_angular_core__WEBPACK_IMPORTED_MODULE_1__","FsC","inputs","array","splice","enableLogging","always","dev","store","editForm","warningNoLogShown","consoleLogStore","message","optionalParams","consoleLogInternal","segment","callStack","environment","production","segmentUpper","toUpperCase","groupCollapsed","trace","groupEnd","logMain","consoleLogObject","PREFILL_PREFIX","GROUP_PREFIX","FIELDS_PREFIX","PARAM_PREFIX","ITEM_SEPARATOR","VAL_SEPARATOR","LIST_SEPARATOR","toOrderedParams","convertFormToUrl","form","formUrl","asGroup","asItem","asInboundParams","fields","UiFields","ClientData","parameters","Parameters","Parent","Field","Index","Add","prefill2UrlParams","fields2UrlParams","obj2UrlParams","addItem","getParamForMetadata","DuplicateEntity","buildForSuffix","itemFor","Target","TargetType","Singleton","String","paramEncode","getParamForOldMetadata","prefill","obj","prefillFromUrlParams","addTo","prefillParams","paramDecode","isNumber","maybeNumber","convertUrlToForm","innerItem","options","option","parms","addParamToItemIdentifier","parts","editItem","part","newParams","forParams","forKeyType","forKey","forTarget","forTargetType","forSingleton","copyParams","formParams","text","EavLoggerFn","fnName","intro","nameWithSvcId","RxTapDebug","jsonify","generateFn","subName","source","counter","tap","showData","rxTap","distinctUntilChanged","start","step","num","read","enableChildren","Math","random","inherit","fnCond","condition","boolEquals","stringEquals","valueEquals","manyEquals","typeOfX","obj1","obj2","keys1","keys2","every","key1","distinct","parentContext","ready","contextId","_zoneId","routeNum","_appId","env","contentBlockId","_contentBlockId","_moduleId","routeSnapshot","clearCachedValues","initRoot","sessionNumber","paramMap","AppInstallSettingsService","http","installSettingsSubject","Subject","startWith","loadGettingStarted","isContentApp","json","InstallerService","installPackages","packages","reduce","c","switchMap","post","of","queryUrl","entitiesFilter","hasParams","urlParams","Guids","getEntities","itemIds","iconsFontAwesome","AppIconsService","matIconRegistry","domSanitizer","load","setDefaultFontSetClass","svg","addSvgIconLiteral","bypassSecurityTrustHtml","AppComponent","SxcAppComponent","el","dnnContext","titleService","activatedRoute","appIconsService","preConfigure","subscription","appTitle","getTitle","events","event","NavigationEnd","child","title","setTitle","RouterModule","changeDetection","routes","appsManagementRoutes","importRoutes","appAdministrationRoutes","codeEditorRoutes","visualQueryRoutes","replaceContentRoutes","manageContentRoutes","contentItemsRoutes","contentTypeFieldsRoutes","HandleErrorsInterceptor","excludedUrls","intercept","req","handle","catchError","checkIfExcluded","showDetailedHttpError","throwError","excludedUrl","infoText","status","srvResp","msg","Message","msgDet","MessageDetail","ExceptionMessage","alert","SetHeadersInterceptor","modified","body","FormData","clone","setHeaders","metaReducers","reducer","action","TranslateLoaderWithErrorHandling","suffix","getTranslation","warn","appConfig","provideRouter","importProvidersFrom","BrowserModule","BrowserAnimationsModule","HttpClientModule","StoreModule","forRoot","runtimeChecks","strictStateImmutability","strictActionImmutability","EffectsModule","StoreDevtoolsModule","instrument","maxAge","EntityDataModule","forChild","buildTranslateConfiguration","loader","provide","TranslateLoader","useFactory","deps","HttpClient","isolate","translateLoaderFactory","sxcVersion","SxcHttpInterceptorProvider","Title","APP_INITIALIZER","paramsInitFactory","eavKeys","hash","href","removeItem","setItem","urlHash","queryParametersFromUrl","paramKey","Router","extrasZone","tab","extrasApp","scope","historyItems","pipelineId","repItem","grpItem","multi","LocationStrategy","useClass","HashLocationStrategy","HTTP_INTERCEPTORS","MAT_FORM_FIELD_DEFAULT_OPTIONS","useValue","subscriptSizing","enableProdMode","bootstrapApplication","catch","err"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/content-type-fields/constants/input-type.constants.ts","./projects/eav-ui/src/app/core/transient.ts","./projects/eav-ui/src/app/edit/dialog/main/edit-dialog-main.models.ts","./projects/eav-ui/src/app/edit/edit-dialog.config.ts","./projects/eav-ui/src/app/edit/edit.matcher.ts","./projects/eav-ui/src/app/edit/edit.routing.ts","./projects/eav-ui/src/app/edit/fields/basic/empty-field-helpers.ts","./projects/eav-ui/src/app/edit/fields/field-state.ts","./projects/eav-ui/src/app/edit/fields/logic/field-logic-base.ts","./projects/eav-ui/src/app/edit/fields/logic/field-logic-unknown.ts","./projects/eav-ui/src/app/edit/fields/logic/field-logic-manager.ts","./projects/eav-ui/src/app/edit/fields/page-picker/page-picker.component.html","./projects/eav-ui/src/app/edit/fields/page-picker/page-picker.component.ts","./projects/eav-ui/src/app/edit/fields/page-picker/page-picker.helpers.ts","./projects/eav-ui/src/app/edit/fields/page-picker/page-picker.helper.ts","./projects/eav-ui/src/app/edit/fields/wrappers/localization/translate-menu/translate-menu.helpers.ts","./projects/eav-ui/src/app/edit/localization/localization.constants.ts","./projects/eav-ui/src/app/edit/localization/localization.helpers.ts","./projects/eav-ui/src/app/edit/localization/translation-link.constants.ts","./projects/eav-ui/src/app/edit/shared/helpers/control.helpers.ts","./projects/eav-ui/src/app/edit/shared/helpers/field-mask.helper.ts","./projects/eav-ui/src/app/edit/shared/helpers/entity-reader.ts","./projects/eav-ui/src/app/edit/shared/helpers/file-type.helpers.ts","./projects/eav-ui/src/app/edit/shared/helpers/input-field.helpers.ts","./projects/eav-ui/src/app/edit/shared/helpers/sanitize.helper.ts","./projects/eav-ui/src/app/edit/shared/helpers/url.helpers.ts","./projects/eav-ui/src/app/edit/shared/models/eav/eav-content-type-attribute.ts","./projects/eav-ui/src/app/edit/shared/models/eav/eav-content-type.ts","./projects/eav-ui/src/app/edit/shared/models/eav/eav-dimension.ts","./projects/eav-ui/src/app/edit/shared/models/eav/eav-values.ts","./projects/eav-ui/src/app/edit/shared/models/eav/eav-entity-attributes.ts","./projects/eav-ui/src/app/edit/shared/models/eav/eav-entity.ts","./projects/eav-ui/src/app/edit/shared/models/eav/eav-item.ts","./projects/eav-ui/src/app/edit/shared/models/eav/eav-value.ts","./projects/eav-ui/src/app/edit/shared/store/ngrx-data/base-data.service.ts","./projects/eav-ui/src/app/edit/shared/store/ngrx-data/adam-cache.service.ts","./projects/eav-ui/src/app/edit/shared/store/ngrx-data/content-type-item.service.ts","./projects/eav-ui/src/app/edit/shared/store/ngrx-data/content-type.service.ts","./projects/eav-ui/src/app/edit/shared/store/ngrx-data/entity-metadata.ts","./projects/eav-ui/src/app/edit/shared/store/ngrx-data/input-type.service.ts","./projects/eav-ui/src/app/edit/shared/store/ngrx-data/language.service.ts","./projects/eav-ui/src/app/edit/shared/store/ngrx-data/link-cache.service.ts","./projects/eav-ui/src/app/edit/shared/store/ngrx-data/publish-status.service.ts","./projects/eav-ui/src/app/edit/shared/store/ngrx-data/item.service.ts","./projects/eav-ui/src/app/edit/shared/store/ngrx-data/language-instance.service.ts","./projects/eav-ui/src/app/edit/state/fields-settings.helpers.ts","./projects/eav-ui/src/app/edit/state/form-config.service.ts","./projects/eav-ui/src/app/edit/state/form-languages.model.ts","./projects/eav-ui/src/app/edit/state/metadata-decorators.constants.ts","./projects/eav-ui/src/app/shared/components/base.component.ts","./projects/eav-ui/src/app/shared/components/dialog-entry/dialog-entry.component.ts","./projects/eav-ui/src/app/shared/constants/dialog-type.constants.ts","./projects/eav-ui/src/app/shared/constants/eav.constants.ts","./projects/eav-ui/src/app/shared/constants/session.constants.ts","./projects/eav-ui/src/app/shared/directives/tippy.directive.ts","./projects/eav-ui/src/app/shared/helpers/array.helpers.ts","./projects/eav-ui/src/app/shared/helpers/console-log-angular.helper.ts","./projects/eav-ui/src/app/shared/helpers/url-prep.helper.ts","./projects/eav-ui/src/app/shared/logging/eav-logger-fn.ts","./projects/eav-ui/src/app/shared/logging/rx-debug-dbg.ts","./projects/eav-ui/src/app/shared/logging/eav-logger.ts","./projects/eav-ui/src/app/shared/rxJs/mapUntilChanged.ts","./projects/eav-ui/src/app/shared/rxJs/rx.helpers.ts","./projects/eav-ui/src/app/shared/services/context.ts","./projects/eav-ui/src/app/shared/services/getting-started.service.ts","./projects/eav-ui/src/app/shared/services/installer.service.ts","./projects/eav-ui/src/app/shared/services/query.service.ts","./projects/eav-ui/src/app/shared/services/service-base.ts","./projects/eav-ui/src/environments/environment.prod.ts","./projects/eav-ui/src/app/shared/icons/index.ts","./projects/eav-ui/src/app/assets/icons/code-curly.svg","./projects/eav-ui/src/app/shared/icons/app-icons.service.ts","./projects/eav-ui/src/app/app.component.ts","./projects/eav-ui/src/app/app.component.html","./projects/eav-ui/src/app/app.routes.ts","./projects/eav-ui/src/app/shared/interceptors/handle-errors.interceptor.ts","./projects/eav-ui/src/app/shared/interceptors/set-headers.interceptor.ts","./projects/eav-ui/src/app/edit/shared/store/reducers/index.ts","./projects/eav-ui/src/app/shared/translation/translate-loader-with-error-handling.ts","./projects/eav-ui/src/app/app.config.ts","./projects/eav-ui/src/app/shared/translation/translate-configuration.ts","./projects/eav-ui/src/app/shared/translation/translate-loader-factory.ts","./projects/eav-ui/src/app/params-init.factory.ts","./projects/eav-ui/src/main.ts"],"sourcesContent":["export const InputTypeConstants = {\r\n  BooleanDefault: 'boolean-default',\r\n  BooleanTristate: 'boolean-tristate',\r\n  CustomDefault: 'custom-default',\r\n  CustomGps: 'custom-gps',\r\n  CustomJsonEditor: 'custom-json-editor',\r\n  DateTimeDefault: 'datetime-default',\r\n  DefaultSuffix: '-default',\r\n  EmptyDefault: 'empty-default',\r\n  EmptyEnd: 'empty-end',\r\n  EmptyMessage: 'empty-message',\r\n  EntityContentBlocks: 'entity-content-blocks',\r\n  EntityDefault: 'entity-default',\r\n  EntityQuery: 'entity-query',\r\n  ExternalWebComponent: 'external-web-component',\r\n  HyperlinkDefault: 'hyperlink-default',\r\n  HyperlinkLibrary: 'hyperlink-library',\r\n  NumberDefault: 'number-default',\r\n  NumberDropdown: 'number-dropdown',\r\n  StringDefault: 'string-default',\r\n  StringDropdown: 'string-dropdown',\r\n  StringDropdownQuery: 'string-dropdown-query',\r\n  StringFontIconPicker: 'string-font-icon-picker',\r\n  StringJson: 'string-json',\r\n  StringTemplatePicker: 'string-template-picker',\r\n  StringUrlPath: 'string-url-path',\r\n  StringWysiwyg: 'string-wysiwyg',\r\n\r\n  /** New Pickers v17.x */\r\n  EntityPicker: 'entity-picker',\r\n  StringPicker: 'string-picker',\r\n  NumberPicker: 'number-picker',\r\n\r\n  /** for all situations where we need a fallback; new v16.04 */\r\n  Unknown: 'unknown',\r\n} as const;\r\n\r\nexport type InputTypeStrict = typeof InputTypeConstants[keyof typeof InputTypeConstants];\r\n","import { Injector, ProviderToken, TypeProvider, inject } from '@angular/core';\r\n\r\n/**\r\n * Transient dependency injection provider.\r\n * This will create a new instance of the provided token,\r\n * without making it available in sub-components\r\n * as would happen with providers in a component.\r\n * \r\n * @param token the class which is injectable\r\n * @param injector the injector to use, if not provided, the current injector will be used.\r\n *     Not not necessary when using transient in the class properties construction or in the constructor,\r\n *     as the injector will be available in the constructor.\r\n *     But necessary when using transient inside anything else.\r\n * @returns \r\n */\r\nexport function transient<T>(token: ProviderToken<T>, injector?: Injector): T {\r\n  // make sure we have an injector\r\n  // this will throw an error, if transient is used outside of construction and without providing an injector\r\n  injector ??= inject(Injector);\r\n\r\n  // create a new injector which is only meant to be used for this transient instance\r\n  const subInjector = Injector.create({\r\n    providers: [\r\n      token as TypeProvider\r\n    ],\r\n    parent: injector\r\n  });\r\n\r\n  // return the instance\r\n  return subInjector.get(token, undefined, { self: true });\r\n}\r\n","import { AdamItem, PickerItem } from '../../../../../../edit-types';\r\nimport { DialogContext } from '../../../app-administration/models';\r\nimport { InputType } from '../../../content-type-fields/models/input-type.model';\r\nimport { Feature } from '../../../features/models/feature.model';\r\nimport { EavContentType, EavEntity, EavItem } from '../../shared/models/eav';\r\nimport { EavContentTypeDto, EavEntityBundleDto, EavEntityDto } from '../../shared/models/json-format-v1';\r\n\r\n\r\nexport interface EavPublishStatus {\r\n  DraftShouldBranch: boolean;\r\n  IsPublished: boolean;\r\n}\r\n\r\nexport interface PublishStatus extends EavPublishStatus {\r\n  formId: number;\r\n}\r\n\r\n/** PublishMode is short version of PublishStatus */\r\nexport const PublishModes = {\r\n  Show: 'show',\r\n  Hide: 'hide',\r\n  Branch: 'branch',\r\n} as const;\r\n\r\nexport type PublishMode = typeof PublishModes[keyof typeof PublishModes];\r\n\r\n\r\nexport interface EavEditLoadDto extends EavPublishStatus {\r\n  ContentTypeItems: EavEntityDto[];\r\n  ContentTypes: EavContentTypeDto[];\r\n  Context: DialogContext;\r\n  Features: Feature[];\r\n  InputTypes: InputType[];\r\n  Items: EavEntityBundleDto[];\r\n  Prefetch?: Prefetch;\r\n  Settings: EditSettingsDto;\r\n}\r\n\r\nexport interface EditSettings {\r\n  Values: Record<string, unknown>;\r\n  // note: added by 2dm 2023-01-21 but not used yet\r\n  // will probably contain special wysiwyg-edit configs and similar...\r\n  Entities: EavEntity[];\r\n  /**\r\n   * ContentTypes which are additional settings.\r\n   * New v17 to help Pickers figure out the best title for new-entities.\r\n   * TODO: @SDV\r\n   */\r\n  ContentTypes: EavContentType[];\r\n}\r\n\r\nexport interface EditSettingsDto {\r\n  Values: Record<string, unknown>;\r\n  Entities: EavEntityDto[];\r\n  /**\r\n   * ContentTypes which are additional settings.\r\n   * New v17 to help Pickers figure out the best title for new-entities.\r\n   * TODO: @SDV\r\n   */\r\n  ContentTypes: EavContentTypeDto[];\r\n}\r\n\r\nexport interface SaveEavFormData extends EavPublishStatus {\r\n  Items: EavEntityBundleDto[];\r\n}\r\n\r\nexport interface EditDialogMainViewModel {\r\n  items: EavItem[];\r\n  formsValid: boolean;\r\n  delayForm: boolean;\r\n  viewInitiated: boolean;\r\n  hideHeader: boolean;\r\n  saveButtonDisabled: boolean;\r\n}\r\n\r\nexport interface Prefetch {\r\n  Adam: PrefetchAdams;\r\n  Entities: PrefetchEntity[];\r\n  Links: PrefetchLinks;\r\n\r\n  /** NgRx store helper */\r\n  _guid?: string;\r\n}\r\n\r\n/**\r\n * temporary interface till backend is updated again to match latest requirements.\r\n * Should then be replaced with EntityBasic\r\n */\r\nexport interface PrefetchEntity {\r\n  Id: number,\r\n  Value: string,\r\n  Text: string,\r\n}\r\n\r\n/** Temporary till the models are somehow in sync again */\r\nexport function prefetchItemToPickerItem(item: PrefetchEntity): PickerItem {\r\n  return {\r\n    id: item.Id,\r\n    label: item.Text,\r\n    value: item.Value,\r\n  };\r\n}\r\n\r\nexport interface PrefetchAdams {\r\n  [entityGuid: string]: {\r\n    [fieldName: string]: AdamItem[];\r\n  };\r\n}\r\n\r\nexport interface PrefetchLinks {\r\n  [key: string]: LinkInfo;\r\n}\r\n\r\n\r\nexport interface LinkInfo {\r\n  /** Null if URL doesn't resolve to ADAM file (is page, external url or blocked by permissions) */\r\n  Adam?: AdamItem;\r\n  /** Resolved or original URL */\r\n  Value: string;\r\n}\r\n\r\n\r\n/** TODO: this we can probably discard once we remove the rxStore */\r\nexport interface LinkCache {\r\n  key: string;\r\n  linkInfo: LinkInfo;\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const editDialog: DialogConfig = {\r\n  name: 'ITEMS_EDIT_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'custom',\r\n  panelClass: ['c-multi-item-dialog'],\r\n\r\n  async getComponent() {\r\n    const { EditEntryComponent } = await import('./dialog/entry/edit-entry.component');\r\n    return EditEntryComponent;\r\n  }\r\n};\r\n","import { UrlMatchResult, UrlSegment } from '@angular/router';\r\nimport { EditPosParams } from './edit-matcher.models';\r\nimport { EavLogger } from '../shared/logging/eav-logger';\r\n\r\nconst logThis = false;\r\nconst logger = new EavLogger('EditRouteMatchers', logThis);\r\n\r\n/**\r\n * ':zoneId/:appId/edit/:items'\r\n * ':zoneId/:appId/edit/:items/details/:detailsEntityGuid/:detailsFieldId'\r\n * ':zoneId/:appId/edit/:items/update/:updateEntityGuid/:updateFieldId'\r\n */\r\nexport function editRouteMatcherRoot(url: UrlSegment[]): UrlMatchResult {\r\n  const l = logger.fn('editRouteMatcherRoot', { url });\r\n  if (url.length < 4) return l.rNull();\r\n  if (url[2].path !== 'edit') return l.rNull();\r\n  const hasDetails = url[4] != null && url[4].path === 'details' && url[5] != null && url[6] != null;\r\n  const hasUpdate = url[4] != null && url[4].path === 'update' && url[5] != null && url[6] != null;\r\n  const posParams: EditPosParams = {\r\n    zoneId: url[0],\r\n    appId: url[1],\r\n    items: url[3],\r\n    ...(hasDetails && { detailsEntityGuid: url[5], detailsFieldId: url[6] }),\r\n    ...(hasUpdate && { updateEntityGuid: url[5], updateFieldId: url[6] }),\r\n  };\r\n  const match: UrlMatchResult = {\r\n    consumed: url.slice(0, (hasDetails || hasUpdate) ? 7 : 4),\r\n    posParams: posParams as any,\r\n  };\r\n  return l.r(match, '✅');\r\n}\r\n\r\n/** ':zoneId/:appId/edit/refresh/:items' */\r\nexport function editRouteMatcherRootRefresh(url: UrlSegment[]): UrlMatchResult {\r\n  const l = logger.fn('editRouteMatcherRootRefresh', { url });\r\n  if (url.length < 5) return l.rNull();\r\n  if (url[2].path !== 'edit' || url[3].path !== 'refresh') { return null; }\r\n  const posParams: EditPosParams = {\r\n    zoneId: url[0],\r\n    appId: url[1],\r\n    items: url[4],\r\n  };\r\n  const match: UrlMatchResult = {\r\n    consumed: url.slice(0, 5),\r\n    posParams: posParams as any,\r\n  };\r\n  return l.r(match, '✅');\r\n}\r\n\r\n/**\r\n * 'edit/:items'\r\n * 'edit/:items/details/:detailsEntityGuid/:detailsFieldId'\r\n * 'edit/:items/update/:updateEntityGuid/:updateFieldId'\r\n */\r\nexport function editRouteMatcherSubEdit(url: UrlSegment[]): UrlMatchResult {\r\n  const l = logger.fn('editRouteMatcherSubEdit', { url });\r\n  if (url.length < 2) return l.rNull();\r\n  if (url[0].path !== 'edit') return l.rNull();\r\n  const hasDetails = url[2] != null && url[2].path === 'details' && url[3] != null && url[4] != null;\r\n  const hasUpdate = url[2] != null && url[2].path === 'update' && url[3] != null && url[4] != null;\r\n  const posParams: EditPosParams = {\r\n    items: url[1],\r\n    ...(hasDetails && { detailsEntityGuid: url[3], detailsFieldId: url[4] }),\r\n    ...(hasUpdate && { updateEntityGuid: url[3], updateFieldId: url[4] }),\r\n  };\r\n  const match: UrlMatchResult = {\r\n    consumed: url.slice(0, (hasDetails || hasUpdate) ? 5 : 2),\r\n    posParams: posParams as any,\r\n  };\r\n  return l.r(match, '✅');\r\n}\r\n\r\n/** 'edit/refresh/:items' */\r\nexport function editRouteMatcherSubEditRefresh(url: UrlSegment[]): UrlMatchResult {\r\n  const l = logger.fn('editRouteMatcherSubEditRefresh', { url });\r\n  if (url.length < 3) return l.rNull();\r\n  if (url[0].path !== 'edit' || url[1].path !== 'refresh') return l.rNull();\r\n  const posParams: EditPosParams = {\r\n    items: url[2],\r\n  };\r\n  const match: UrlMatchResult = {\r\n    consumed: url.slice(0, 3),\r\n    posParams: posParams as any,\r\n  };\r\n  return l.r(match, '✅');\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { editDialog } from './edit-dialog.config';\r\nimport { editRouteMatcherRoot, editRouteMatcherRootRefresh, editRouteMatcherSubEdit, editRouteMatcherSubEditRefresh } from './edit.matcher';\r\nimport { EavLogger } from '../shared/logging/eav-logger';\r\n\r\nconst logThis = false;\r\nconst logger = new EavLogger('EditRoutingModule', logThis);\r\n\r\n\r\nexport const EditRoutesSubItems: Routes = [\r\n  {\r\n    matcher: editRouteMatcherSubEdit,\r\n    loadChildren: () => {\r\n      // Recursively use these routes again.\r\n      logger.a('loadChildren - matcher: sub-edit');\r\n      return EditRoutes;\r\n    },\r\n  },\r\n  {\r\n    matcher: editRouteMatcherSubEditRefresh,\r\n    loadChildren: () => import('./refresh-edit.module').then(m => m.RefreshEditModule)\r\n  },\r\n];\r\n\r\n/**\r\n * In some cases the history could cause trouble, eg. in VisualQuery, where there are many hidden fields which\r\n * build the query, and if someone goes back in time thinking they are just changing the labels, the query would break.\r\n */\r\nexport const EditRoutesSubItemsNoHistory: Routes = [\r\n  {\r\n    matcher: editRouteMatcherSubEdit,\r\n    loadChildren: () => EditRoutes,\r\n    data: { history: false },\r\n  },\r\n  // 2024-07-01 2dm: not sure why the refresh-part was never on this, but leave until I know better.\r\n  // {\r\n  //   matcher: editRouteMatcherSubEditRefresh,\r\n  //   loadChildren: () => import('./refresh-edit.module').then(m => m.RefreshEditModule)\r\n  // },\r\n];\r\n\r\nexport const EditRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: editDialog },\r\n    children: [\r\n      ...EditRoutesSubItems,\r\n      {\r\n        path: 'versions/:itemId',\r\n        loadChildren: () => import('../item-history/item-history.routing').then(m => m.historyRoutes),\r\n      }\r\n    ],\r\n  },\r\n];\r\n\r\n/**\r\n * Root routes only meant for the entry points of the application, \"App\" and \"Apps\"\r\n */\r\nexport const EditRoutesRoot: Routes = [\r\n  {\r\n    matcher: editRouteMatcherRoot,\r\n    loadChildren: () => EditRoutes,\r\n  },\r\n  {\r\n    matcher: editRouteMatcherRootRefresh,\r\n    loadChildren: () => import('../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n  },\r\n];","import { CalculatedInputType } from '../../state/fields-configs.model';\r\nimport { InputTypeConstants, InputTypeStrict } from './../../../content-type-fields/constants/input-type.constants';\r\n\r\nconst empty: InputTypeStrict[] = [InputTypeConstants.EmptyDefault, InputTypeConstants.EmptyEnd, InputTypeConstants.EmptyMessage];\r\n\r\nconst ends: InputTypeStrict[] = [InputTypeConstants.EmptyDefault, InputTypeConstants.EmptyEnd];\r\n\r\nexport class EmptyFieldHelpers {\r\n  static isEmptyField(inputType: CalculatedInputType): boolean {\r\n    return this.isEmptyInputType(inputType.inputType);\r\n    // const itName = inputType.inputType;\r\n    // return itName === InputTypeConstants.EmptyDefault || itName === InputTypeConstants.EmptyEnd || itName === InputTypeConstants.EmptyMessage;\r\n  }\r\n\r\n  static isEmptyInputType(inputType: InputTypeStrict): boolean {\r\n    return empty.includes(inputType);\r\n  }\r\n\r\n  static endsPreviousGroup(inputType: InputTypeStrict): boolean {\r\n    return ends.includes(inputType);\r\n  }\r\n\r\n  // static isGroup(inputType: CalculatedInputType): boolean {\r\n  //   return this.endsPreviousGroup(inputType.inputType);\r\n  //   // const itName = inputType.inputType;\r\n  //   // return itName === InputTypeConstants.EmptyDefault || itName === InputTypeConstants.EmptyEnd;\r\n  // }\r\n\r\n  static isGroupStart(inputType: InputTypeStrict): boolean {\r\n    return inputType === InputTypeConstants.EmptyDefault;\r\n  }\r\n  static isGroupEnd(inputType: InputTypeStrict): boolean {\r\n    return inputType === InputTypeConstants.EmptyEnd;\r\n  }\r\n  static isMessage(inputType: InputTypeStrict): boolean {\r\n    return inputType === InputTypeConstants.EmptyMessage;\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { FieldSettings } from '../../../../../edit-types';\r\nimport { AbstractControl, UntypedFormGroup } from '@angular/forms';\r\nimport { Signal } from '@angular/core';\r\nimport { FieldConfigSet } from './field-config-set.model';\r\nimport { BasicControlSettings } from '../../../../../edit-types/src/BasicControlSettings';\r\nimport { ControlStatus } from '../shared/models/control-status.model';\r\n\r\n/**\r\n * This is provided / injected at the fields-builder for every single field.\r\n * So any control or service within that field, which requests this service, will get one containing exactly that fields.\r\n */\r\nexport class FieldState {\r\n  constructor(\r\n    /** The fields technical name to access settings etc. */\r\n    public name: string,\r\n\r\n    /** Field configuration, incl. a lot of unchanging values and access to adam, dropzone etc. */\r\n    public config: FieldConfigSet,\r\n\r\n    /** The form group containing the field - rarely relevant, as you should use the control in most cases */\r\n    public group: UntypedFormGroup,\r\n\r\n    /** The control of the field in the form group */\r\n    public control: AbstractControl,\r\n\r\n    /** The settings as an observable - where possible, try to use the signal instead */\r\n    public settings$: Observable<FieldSettings>,\r\n\r\n    /** The settings as a signal - use this for most cases */\r\n    public settings: Signal<FieldSettings>,\r\n\r\n    /** The basic settings - use this for most cases as it will change less than the settings signal */\r\n    public basics: Signal<BasicControlSettings>,\r\n\r\n    public controlStatus: Signal<ControlStatus<unknown>>,\r\n  ) { }\r\n}\r\n","import { FieldSettings, FieldValue } from '../../../../../../edit-types';\r\nimport { EavLogger } from '../../../shared/logging/eav-logger';\r\nimport { FieldLogicManager } from './field-logic-manager';\r\nimport { FieldLogicTools } from './field-logic-tools';\r\n\r\n/** LogThis will apply, if the inheriting class isn't specifying it in the constructor */\r\nconst logThis = false;\r\nconst nameOfThis = 'FieldLogic';\r\n\r\ntype LogicConstructor = new (...args: any[]) => FieldLogicBase;\r\n\r\nexport abstract class FieldLogicBase {\r\n\r\n  constructor(name?: string, logThis?: boolean) {\r\n    if (name) {\r\n      this.name = name;\r\n      this._log = new EavLogger(`${nameOfThis}[${name}]`, logThis);\r\n      this.log.a(`constructor for ${name}`);\r\n    }\r\n  }\r\n\r\n\r\n  /** Input type name */\r\n  name: string;\r\n\r\n  /** If this field supports AutoTranslate (new v15.x) */\r\n  public canAutoTranslate = false;\r\n\r\n  /** Adds Logic to FieldLogicManager */\r\n  static add(logic: LogicConstructor) {\r\n    const logicInstance = new logic();\r\n    FieldLogicManager.singleton().add(logicInstance);\r\n  }\r\n\r\n  /** Run this dummy method from component to make sure Logic files are not tree shaken */\r\n  static importMe(): void { }\r\n\r\n  get log() { return this._log ??= new EavLogger(`${nameOfThis}[${this.name}]`, logThis) };\r\n  private _log: EavLogger;\r\n\r\n  /**\r\n   * Entity fields for empty items are prefilled on the backend with []\r\n   * so I can never know if entity field is brand new, or just emptied out by the user\r\n   * \r\n   * Note: 2dm 2023-08-31 moved from InputFieldHelpers; in future, each logic can override this\r\n   */\r\n  isValueEmpty(value: FieldValue, isCreateMode: boolean): boolean {\r\n    const l = this.log.fn('isValueEmpty', { value, isCreateMode });\r\n    const emptyEntityField = Array.isArray(value) && value.length === 0 && isCreateMode;\r\n    return l.r(value === undefined || emptyEntityField);\r\n  }\r\n\r\n  /** \r\n   * Update field settings - typically used on init and in every formula cycle\r\n   */\r\n  abstract update(updateSpecs: FieldLogicUpdate): FieldSettings;\r\n\r\n  /**\r\n   * Lookup advanced (external) configuration.\r\n   * These are usually stored in the eavConfig.settings.\r\n   * Needs defaults to merge for anything that is not defined in the external config.\r\n   * @param possibleGuid - guid of the external config, if empty, return defaults\r\n   * @param defaults - defaults to merge with external config\r\n   */\r\n  findAndMergeAdvanced<T>(tools: FieldLogicTools, possibleGuid: string, defaults: T): T {\r\n    if (!possibleGuid) return defaults;\r\n\r\n    const wysiwygConfig = tools.eavConfig.settings.Entities.find(e => e.Guid === possibleGuid);\r\n    if (!wysiwygConfig) return defaults;\r\n\r\n    const advanced = tools.entityReader.flatten(wysiwygConfig) as T;\r\n    return { ...defaults, ...advanced };\r\n  }\r\n}\r\n\r\nexport interface FieldLogicUpdate<T = FieldValue> {\r\n  /** Settings before logic update */\r\n  settings: FieldSettings;\r\n\r\n  /** Tools for doing various kind of work in the logic, which is singleton and may need context-specific tools */\r\n  tools: FieldLogicTools;\r\n\r\n  /** The field value which the settings-update sometimes needs to know, eg. to indicated selected option in a dropdown */\r\n  value?: T;\r\n}","import { InputTypeConstants } from '../../../content-type-fields/constants/input-type.constants';\r\nimport { FieldLogicBase, FieldLogicUpdate } from './field-logic-base';\r\nimport { FieldSettings } from '../../../../../../edit-types/src/FieldSettings';\r\n\r\nexport class UnknownLogic extends FieldLogicBase {\r\n  name = InputTypeConstants.Unknown;\r\n\r\n  canAutoTranslate = false;\r\n\r\n  update({ settings }: FieldLogicUpdate): FieldSettings {\r\n    return settings;\r\n  }\r\n}\r\n\r\n// Don't register here, the manager will register it as a fallback\r\n// FieldLogicBase.add(UnknownLogic);\r\n\r\n","import { InputTypeConstants } from '../../../content-type-fields/constants/input-type.constants';\r\nimport { EavWindow } from '../../../shared/models/eav-window.model';\r\nimport { FieldLogicBase } from './field-logic-base';\r\nimport { UnknownLogic } from './field-logic-unknown';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport class FieldLogicManager {\r\n  private logics: Record<string, FieldLogicBase> = {};\r\n\r\n  private constructor() {\r\n    // add unknown as a fallback for all scenarios\r\n    this.add(new UnknownLogic());\r\n  }\r\n\r\n  static singleton(): FieldLogicManager {\r\n    return window.eavFieldLogicManager ??= new FieldLogicManager();\r\n  }\r\n\r\n  /** Add settings logic */\r\n  add(logic: FieldLogicBase): void {\r\n    this.logics[logic.name] = logic;\r\n  }\r\n\r\n  /** Get settings logic for input type */\r\n  get(inputTypeName: string): FieldLogicBase {\r\n    return this.logics[inputTypeName] ?? null;\r\n  }\r\n\r\n  /** Get or use unknown - temporary solution v16.04 to prevent any scenario where there is none */\r\n  getOrUnknown(inputTypeName: string): FieldLogicBase {\r\n    return this.get(inputTypeName) ?? this.get(InputTypeConstants.Unknown);\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">{{ 'Fields.Hyperlink.PagePicker.Title' | translate }}</div>\r\n    </div>\r\n    <div class=\"eav-dialog-content\">\r\n      <div class=\"page-search-box\">\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Search</mat-label>\r\n          <input matInput [ngModel]=\"vm.filterText\" (ngModelChange)=\"setFilter($event)\">\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"page-tree-box\">\r\n        @if (!vm.filterText) {\r\n          <ul>\r\n            @for (page of vm.tree; track page) {\r\n              <ng-container *ngTemplateOutlet=\"pageAndChildren; context: {page: page}\"></ng-container>\r\n            }\r\n          </ul>\r\n        }\r\n        @if (vm.filterText) {\r\n          <ul>\r\n            @if (vm.filteredSearch.length === 0) {\r\n              <li>\r\n                <div class=\"page-row\">\r\n                  <div class=\"no-toggle\"></div>\r\n                  <div>No results</div>\r\n                </div>\r\n              </li>\r\n            }\r\n            @for (page of vm.filteredSearch; track page) {\r\n              <li>\r\n                <div class=\"page-row\">\r\n                  <div class=\"no-toggle\"></div>\r\n                  <div class=\"page-label\" [ngClass]=\"page.id === selected ? 'selected' : ''\" (click)=\"select(page)\">\r\n                    <div class=\"page-icon-and-text\">\r\n                      <mat-icon class=\"page-icon\" svgIcon=\"file\"></mat-icon>\r\n                      @if (page.path) {\r\n                        <span class=\"page-path\" [tippy]=\"page.path\">{{ page.path }}&nbsp;>&nbsp;</span>\r\n                      }\r\n                      <span class=\"page-name\" [tippy]=\"page.name\">{{ page.name }}</span>\r\n                    </div>\r\n                    <div class=\"page-icons\">\r\n                      @if (!page.isVisible) {\r\n                        <mat-icon class=\"page-visible-clickable-icon\">visibility_off</mat-icon>\r\n                      }\r\n                      @if (!page.isClickable) {\r\n                        <mat-icon class=\"page-visible-clickable-icon\">cancel</mat-icon>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      <ng-template #pageAndChildren let-page=\"page\">\r\n        <li>\r\n          <div class=\"page-row\">\r\n            @if (page.children.length === 0) {\r\n              <div class=\"no-toggle\"></div>\r\n            }\r\n            @if (page.children.length > 0) {\r\n              <mat-icon class=\"page-toggle\" (click)=\"toggle(page.id)\">\r\n                {{ toggled.includes(page.id) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n              </mat-icon>\r\n            }\r\n            <div class=\"page-label\" [ngClass]=\"page.id === selected ? 'selected' : ''\" (click)=\"select(page)\">\r\n              <div class=\"page-icon-and-text\">\r\n                <mat-icon class=\"page-icon\" svgIcon=\"file\"></mat-icon>\r\n                <span>{{ page.name }}</span>\r\n              </div>\r\n              <div class=\"page-icons\">\r\n                @if (!page.isVisible) {\r\n                  <mat-icon class=\"page-visible-clickable-icon\">visibility_off</mat-icon>\r\n                }\r\n                @if (!page.isClickable) {\r\n                  <mat-icon class=\"page-visible-clickable-icon\">cancel</mat-icon>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n          @if (page.children.length > 0 && toggled.includes(page.id)) {\r\n            <ul>\r\n              @for (child of page.children; track child) {\r\n                <ng-container *ngTemplateOutlet=\"pageAndChildren; context: {page: child}\"></ng-container>\r\n              }\r\n            </ul>\r\n          }\r\n        </li>\r\n      </ng-template>\r\n    </div>\r\n    <mat-dialog-actions>\r\n    </mat-dialog-actions>\r\n  </div>\r\n}\r\n","import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogActions } from '@angular/material/dialog';\r\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { FieldValue, PagePickerResult } from '../../../../../../edit-types';\r\nimport { buildPageSearch, buildPageTree } from './page-picker.helpers';\r\nimport { PageEntity, PagePickerDialogData, PagePickerViewModel, PageSearchItem, PageTreeItem } from './page-picker.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ExtendedModule } from '@angular/flex-layout/extended';\r\nimport { NgTemplateOutlet, NgClass, AsyncPipe } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ArrayHelpers } from '../../../shared/helpers/array.helpers';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { transient } from '../../../core';\r\nimport { QueryService } from '../../../shared/services/query.service';\r\n\r\n@Component({\r\n  selector: 'app-page-picker',\r\n  templateUrl: './page-picker.component.html',\r\n  styleUrls: ['./page-picker.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    NgTemplateOutlet,\r\n    NgClass,\r\n    ExtendedModule,\r\n    MatIconModule,\r\n    MatDialogActions,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class PagePickerComponent implements OnInit, OnDestroy {\r\n  selected: number;\r\n  toggled: number[];\r\n  viewModel$: Observable<PagePickerViewModel>;\r\n\r\n  private filterText$: BehaviorSubject<string>;\r\n  private searchItems$: BehaviorSubject<PageSearchItem[]>;\r\n  private tree$: BehaviorSubject<PageTreeItem[]>;\r\n\r\n  private queryService = transient(QueryService);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: PagePickerDialogData,\r\n    private dialogRef: MatDialogRef<PagePickerComponent>,\r\n    private translate: TranslateService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.selected = this.parseSelectedPageId();\r\n    this.toggled = [];\r\n    this.filterText$ = new BehaviorSubject('');\r\n    this.searchItems$ = new BehaviorSubject([]);\r\n    this.tree$ = new BehaviorSubject([]);\r\n\r\n    const filteredSearch$ = combineLatest([this.filterText$, this.searchItems$]).pipe(\r\n      map(([filterText, searchItems]) =>\r\n        searchItems.filter(item => item.name.toLocaleLowerCase().includes(filterText.toLocaleLowerCase()))\r\n      ),\r\n    );\r\n    this.viewModel$ = combineLatest([this.filterText$, filteredSearch$, this.tree$]).pipe(\r\n      map(([filterText, filteredSearch, tree]) => {\r\n        const viewModel: PagePickerViewModel = {\r\n          filterText,\r\n          filteredSearch,\r\n          tree,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n\r\n    this.fetchPages();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.filterText$.complete();\r\n    this.searchItems$.complete();\r\n    this.tree$.complete();\r\n  }\r\n\r\n  setFilter(filterText: string): void {\r\n    this.filterText$.next(filterText);\r\n  }\r\n\r\n  select(page: PageTreeItem | PageSearchItem): void {\r\n    // filters out pages without parent (broken)\r\n    if (page.id == null) { return; }\r\n    if (!page.isClickable || !page.isVisible) {\r\n      const ok = window.confirm(this.translate.instant('Fields.Hyperlink.PagePicker.HiddenOrSystemPageWarning'));\r\n      if (!ok) { return; }\r\n    }\r\n    this.closeDialog(page.id);\r\n  }\r\n\r\n  toggle(pageId: number): void {\r\n    ArrayHelpers.toggleInArray(pageId, this.toggled);\r\n  }\r\n\r\n  private closeDialog(pageId?: number): void {\r\n    if (pageId == null) {\r\n      this.dialogRef.close();\r\n      return;\r\n    }\r\n\r\n    const page = this.searchItems$.value.find(i => i.id === pageId);\r\n    const result: PagePickerResult = {\r\n      id: page.id.toString(),\r\n      name: page.name,\r\n    };\r\n    this.dialogRef.close(result);\r\n  }\r\n\r\n  private fetchPages(): void {\r\n    const stream = 'Default';\r\n    const params = 'includehidden=true';\r\n    this.queryService.getAvailableEntities(`System.Pages/Default`, params, null).subscribe({\r\n      next: (data) => {\r\n        if (!data) {\r\n          console.error(this.translate.instant('Fields.Picker.QueryErrorNoData'));\r\n          return;\r\n        }\r\n        if (!data[stream]) {\r\n          console.error(this.translate.instant('Fields.Picker.QueryStreamNotFound') + ' ' + stream);\r\n          return;\r\n        }\r\n        const pages = data[stream] as PageEntity[];\r\n        const searchItems = buildPageSearch(pages);\r\n        this.searchItems$.next(searchItems);\r\n        const tree = buildPageTree(pages);\r\n        this.tree$.next(tree);\r\n      },\r\n      error: (error) => {\r\n        console.error(error);\r\n        console.error(`${this.translate.instant('Fields.Picker.QueryError')} - ${error.data}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  private parseSelectedPageId(): number {\r\n    const prefix = 'page:';\r\n    let fieldValue: FieldValue = this.dialogData.group.controls[this.dialogData.config.fieldName].value;\r\n    if (typeof fieldValue !== 'string') { return; }\r\n\r\n    fieldValue = fieldValue.trim().toLocaleLowerCase();\r\n    if (!fieldValue.startsWith(prefix)) { return; }\r\n\r\n    try {\r\n      const id = parseInt(fieldValue.split(prefix)[1], 10);\r\n      return id;\r\n    } catch {\r\n      return;\r\n    }\r\n  }\r\n}\r\n","import { PageEntity, PageSearchItem, PageTreeItem } from './page-picker.models';\r\n\r\nexport function buildPageSearch(pages: PageEntity[]): PageSearchItem[] {\r\n  if (!pages) { return []; }\r\n\r\n  const items = pages.map(page => {\r\n    let path = page.Path.trim().replace(/\\\\/g, '/').replace(/\\/\\//g, '/');\r\n    if (path.startsWith('/')) {\r\n      path = path.substring(1);\r\n    }\r\n    path = path.split('/').slice(0, -1).join(' > ');\r\n\r\n    const item: PageSearchItem = {\r\n      id: page.Id,\r\n      name: page.Name,\r\n      path,\r\n      isVisible: page.Visible,\r\n      isClickable: page.Clickable,\r\n    };\r\n    return item;\r\n  });\r\n\r\n  return items;\r\n}\r\n\r\nexport function buildPageTree(pages: PageEntity[]): PageTreeItem[] {\r\n  if (!pages) { return []; }\r\n\r\n  const items = pages.map(page => {\r\n    const item: PageTreeItem = {\r\n      children: [],\r\n      id: page.Id,\r\n      name: page.Name,\r\n      parentId: page.ParentId,\r\n      isVisible: page.Visible,\r\n      isClickable: page.Clickable,\r\n    };\r\n    return item;\r\n  });\r\n\r\n  const tree: PageTreeItem[] = [];\r\n  for (const item of items) {\r\n    if (item.parentId === -1) {\r\n      tree.push(item);\r\n      continue;\r\n    }\r\n\r\n    const parent = items.find(i => i.id === item.parentId);\r\n    if (!parent) {\r\n      tree.push(item);\r\n    } else {\r\n      parent.children.push(item);\r\n    }\r\n  }\r\n\r\n  return tree;\r\n}\r\n","import { ChangeDetectorRef, ViewContainerRef } from '@angular/core';\r\nimport { UntypedFormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { take } from 'rxjs';\r\nimport { PagePickerResult } from '../../../../../../edit-types';\r\nimport { PagePickerComponent } from './page-picker.component';\r\nimport { PagePickerDialogData } from './page-picker.models';\r\nimport { FieldConfigSet } from '../field-config-set.model';\r\n\r\nexport class PagePicker {\r\n  static open(\r\n    config: FieldConfigSet,\r\n    group: UntypedFormGroup,\r\n    dialog: MatDialog,\r\n    viewContainerRef: ViewContainerRef,\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    callback: (value: PagePickerResult) => void,\r\n  ): void {\r\n    const dialogData: PagePickerDialogData = {\r\n      config,\r\n      group,\r\n    };\r\n    const dialogRef = dialog.open(PagePickerComponent, {\r\n      autoFocus: false,\r\n      data: dialogData,\r\n      viewContainerRef,\r\n      height: '80%',\r\n      width: '650px',\r\n    });\r\n\r\n    dialogRef.afterClosed().pipe(take(1)).subscribe((value: PagePickerResult) => {\r\n      callback(value);\r\n    });\r\n\r\n    changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","import { TranslationLink, TranslationLinks } from '../../../../localization/translation-link.constants';\r\n\r\nexport class TranslateMenuHelpers {\r\n\r\n  static getTranslationStateClass(linkType: TranslationLink) {\r\n    switch (linkType) {\r\n      case TranslationLinks.MissingDefaultLangValue:\r\n        return 'localization-missing-default-lang-value';\r\n      case TranslationLinks.Translate:\r\n      case TranslationLinks.LinkCopyFrom:\r\n        return 'localization-translate';\r\n      case TranslationLinks.DontTranslate:\r\n        return '';\r\n      case TranslationLinks.LinkReadOnly:\r\n        return 'localization-link-read-only';\r\n      case TranslationLinks.LinkReadWrite:\r\n        return 'localization-link-read-write';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static calculateSharedInfoMessage(dimensions: string[], currentLanguage: string): string {\r\n    dimensions = TranslateMenuHelpers.calculateShortDimensions(dimensions, currentLanguage);\r\n    const result = TranslateMenuHelpers.calculateEditAndReadDimensions(dimensions);\r\n    const editableDimensions = result.editableDimensions;\r\n    const readOnlyDimensions = result.readOnlyDimensions;\r\n    let infoMessage = '';\r\n\r\n    const editableExist = editableDimensions.length > 0;\r\n    const readOnlyExist = readOnlyDimensions.length > 0;\r\n    if (editableExist && readOnlyExist) {\r\n      infoMessage = `${editableDimensions.join(', ')}, (${readOnlyDimensions.join(', ')})`;\r\n    } else if (editableExist) {\r\n      infoMessage = editableDimensions.join(', ');\r\n    } else if (readOnlyExist) {\r\n      infoMessage = `(${readOnlyDimensions.join(', ')})`;\r\n    }\r\n\r\n    return infoMessage;\r\n  }\r\n\r\n  private static calculateShortDimensions(dimensions: string[], currentLanguage: string): string[] {\r\n    const dimensionsMap: Record<string, string[]> = {};\r\n    const shortCurrentLanguage = currentLanguage.slice(0, currentLanguage.indexOf('-'));\r\n\r\n    dimensionsMap[shortCurrentLanguage] = [];\r\n    dimensionsMap[shortCurrentLanguage].push(shortCurrentLanguage);\r\n\r\n    dimensions.forEach(dimension => {\r\n      const shortDimension = dimension.slice(0, dimension.indexOf('-'));\r\n      const shortNoReadOnly = shortDimension.replace('~', '');\r\n\r\n      if (!dimensionsMap[shortNoReadOnly]) {\r\n        dimensionsMap[shortNoReadOnly] = [];\r\n        dimensionsMap[shortNoReadOnly].push(dimension);\r\n      } else {\r\n        dimensionsMap[shortNoReadOnly].push(dimension);\r\n      }\r\n    });\r\n\r\n    dimensions = dimensions.map(dimension => {\r\n      const shortDimension = dimension.slice(0, dimension.indexOf('-'));\r\n      const shortNoReadOnly = shortDimension.replace('~', '');\r\n\r\n      if (dimensionsMap[shortNoReadOnly].length > 1) {\r\n        return dimension;\r\n      } else {\r\n        return shortDimension;\r\n      }\r\n    });\r\n\r\n    return dimensions;\r\n  }\r\n\r\n  private static calculateEditAndReadDimensions(dimensions: string[]) {\r\n    const editableDimensions: string[] = [];\r\n    const readOnlyDimensions: string[] = [];\r\n\r\n    dimensions.forEach(dimension => {\r\n      if (!dimension.includes('~')) {\r\n        editableDimensions.push(dimension);\r\n      } else {\r\n        readOnlyDimensions.push(dimension.replace('~', ''));\r\n      }\r\n    });\r\n\r\n    return {\r\n      editableDimensions,\r\n      readOnlyDimensions\r\n    };\r\n  }\r\n}\r\n","export const BestValueModes = {\r\n  Default: 'Default',\r\n  Strict: 'Strict',\r\n} as const;\r\n\r\nexport type BestValueMode = typeof BestValueModes[keyof typeof BestValueModes];\r\n","import { FieldValue } from '../../../../../edit-types';\r\nimport { EavLogger } from '../../shared/logging/eav-logger';\r\nimport { EavDimension, EavEntityAttributes, EavValue, EavField } from '../shared/models/eav';\r\nimport { FormLanguage } from '../state/form-languages.model';\r\nimport { ItemValuesOfLanguage } from '../state/item-values-of-language.model';\r\nimport { BestValueMode, BestValueModes } from './localization.constants';\r\n\r\nconst logThis = false;\r\nconst nameOfThis = 'LocalizationHelpers';\r\n\r\nconst log = new EavLogger(nameOfThis, logThis);\r\n\r\nexport class LocalizationHelpers {\r\n  /**\r\n   * Get translated value for currentLanguage,\r\n   * if not exist return default language translation,\r\n   * if default language also not exist return first value\r\n   */\r\n  static translate<T>(language: FormLanguage, attributeValues: EavField<T>, defaultValue: T): T | null {\r\n    if (!attributeValues)\r\n      return defaultValue;\r\n\r\n    const translation: EavValue<T> = this.getValueTranslation(attributeValues, language);\r\n    if (translation)\r\n      return translation.Value;\r\n\r\n    const translationDefault: EavValue<T> = this.getValueTranslation(attributeValues, FormLanguage.bothPrimary(language));\r\n    if (translationDefault)\r\n      return translationDefault.Value;\r\n\r\n    // TODO: maybe return value with *\r\n    return attributeValues.Values[0]?.Value ?? null;\r\n  }\r\n\r\n  static getValueOrDefault(field: EavField<any>, language: FormLanguage): EavValue<any> {\r\n    let translation = this.getValueTranslation(field, language);\r\n    return translation\r\n      ?? this.getValueTranslation(field, FormLanguage.bothPrimary(language));\r\n  }\r\n\r\n  /**\r\n   * Find all values which are of the current language.\r\n   * 1. either directly assigned\r\n   * 2. or read-only assigned\r\n   * 3. or assigned to '*' when the current language is the default language\r\n   */\r\n  private static valuesOfLanguage<T>(field: EavField<T>, language: FormLanguage): EavValue<T>[] {\r\n    if (!field) return [];\r\n    return field.Values.filter(val => this.valueHasLanguage(val, language));\r\n  }\r\n\r\n  private static valueHasLanguage<T>(val: EavValue<T>, language: FormLanguage): EavDimension | undefined {\r\n    return val.Dimensions.find(d =>\r\n      d.Value === language.current\r\n      || d.Value === `~${language.current}`\r\n      || (language.current === language.primary && d.Value === '*'));\r\n  }\r\n\r\n\r\n  static getValueTranslation<T>(field: EavField<T>, language: FormLanguage): EavValue<T> {\r\n    // first match if any is the one we're looking for\r\n    return this.valuesOfLanguage(field, language)[0];\r\n  }\r\n\r\n  static isEditableOrReadonlyTranslationExist(field: EavField<any>, language: FormLanguage): boolean {\r\n    if (!field) return false;\r\n    return this.valuesEditableOfCurrent(field, language).length > 0;\r\n  }\r\n\r\n  /**\r\n   * Values of a field are for the current language,\r\n   * if they are assigned to the current language or to '*' (but only when the current-language is also the primary-language)\r\n   */\r\n  private static valuesEditableOfCurrent<T>(field: EavField<T>, langs: FormLanguage): EavValue<T>[] {\r\n    if (!field) return [];\r\n    return field.Values\r\n      .filter(val => val.Dimensions.find(d => (d.Value === langs.current) || (d.Value === '*' && langs.current === langs.primary)));\r\n  }\r\n\r\n\r\n  /** A value in specified Language is editable, if assigned to current language or to '*' (but only when on default-language) */\r\n  static hasEditableValue(field: EavField<any>, language: FormLanguage): boolean {\r\n    return this.valuesEditableOfCurrent(field, language).length > 0;\r\n  }\r\n\r\n  // Number of editable translatable fields that\r\n  static countEditableValues(field: EavField<any>, language: FormLanguage): number {\r\n    return this.valuesEditableOfCurrent(field, language).length;\r\n  }\r\n\r\n  // Number of editable translatable fields that have some content\r\n  static countEditableValuesWithContent(field: EavField<any>, language: FormLanguage): number {\r\n    if (!field) return 0;\r\n    return this.valuesEditableOfCurrent(field, language).filter(v => v.Value != \"\" && v.Value != null)?.length\r\n  }\r\n\r\n  static hasReadonlyValue(field: EavField<any>, language: string): boolean {\r\n    if (!field) return false;\r\n    return field.Values.filter(val => val.Dimensions.find(d => d.Value === `~${language}`)).length > 0;\r\n  }\r\n\r\n  static hasValueOnPrimary(field: EavField<any>, defaultLanguage: string): boolean {\r\n    if (!field) return false;\r\n    return field.Values.filter(val => val.Dimensions.find(d => d.Value === defaultLanguage || d.Value === '*')).length > 0;\r\n  }\r\n\r\n  /** Copy attributes from item */\r\n  private static updateAttribute(\r\n    oldAttributes: EavEntityAttributes,\r\n    attributeKey: string,\r\n    attribute: EavField<any>,\r\n  ): EavEntityAttributes {\r\n    const newAttributes: EavEntityAttributes = {};\r\n    if (Object.keys(oldAttributes).length === 0) {\r\n      const attributeCopy: EavField<any> = { ...attribute };\r\n      newAttributes[attributeKey] = attributeCopy;\r\n      return newAttributes;\r\n    }\r\n\r\n    for (const key of Object.keys(oldAttributes)) {\r\n      if (key === attributeKey) {\r\n        const attributeCopy: EavField<any> = { ...attribute };\r\n        newAttributes[key] = attributeCopy;\r\n      } else {\r\n        const attributeCopy: EavField<any> = { ...oldAttributes[key] };\r\n        newAttributes[key] = attributeCopy;\r\n      }\r\n    }\r\n\r\n    if (oldAttributes[attributeKey] == null) {\r\n      const attributeCopy: EavField<any> = { ...attribute };\r\n      newAttributes[attributeKey] = attributeCopy;\r\n    }\r\n    return newAttributes;\r\n  }\r\n\r\n  /** Update values for languageKey */\r\n  static updateAttributesValues(\r\n    allFields: EavEntityAttributes,\r\n    updateValues: ItemValuesOfLanguage,\r\n    language: FormLanguage,\r\n  ): EavEntityAttributes {\r\n    const l = log.fn('updateAttributesValues', { allFields, updateValues, language });\r\n    // copy attributes from item\r\n    const eavAttributes: EavEntityAttributes = {};\r\n    Object.keys(allFields).forEach(attributeKey => {\r\n      const newItemValue = updateValues[attributeKey];\r\n      // if new value exist update attribute for languageKey\r\n      // if (newItemValue !== null && newItemValue !== undefined) {\r\n      if (newItemValue !== undefined) {\r\n        const valueWithLanguageExist = this.isEditableOrReadonlyTranslationExist(allFields[attributeKey], language);\r\n\r\n        // if valueWithLanguageExist update value for languageKey\r\n        if (valueWithLanguageExist) {\r\n          const newValues: EavField<any> = {\r\n            ...allFields[attributeKey],\r\n            Values: allFields[attributeKey].Values.map(val => {\r\n              const hasLanguage = !!this.valueHasLanguage(val, language);\r\n              const newValue: EavValue<any> = hasLanguage\r\n                // Update value for languageKey\r\n                ? {\r\n                  ...val,\r\n                  Value: newItemValue,\r\n                }\r\n                : val;\r\n              return newValue;\r\n            })\r\n          };\r\n          eavAttributes[attributeKey] = newValues;\r\n        } else { // else add new value with dimension languageKey\r\n          l.a('saveAttributeValues add values ', { newItemValue });\r\n          const newEavValue = EavValue.create(newItemValue, [EavDimension.create(language.current)]);\r\n          const newAttribute: EavField<any> = {\r\n            ...allFields[attributeKey],\r\n            Values: [...allFields[attributeKey].Values, newEavValue]\r\n          };\r\n          eavAttributes[attributeKey] = newAttribute;\r\n        }\r\n      } else { // else copy item attributes\r\n        const attributeCopy: EavField<any> = { ...allFields[attributeKey] };\r\n        eavAttributes[attributeKey] = attributeCopy;\r\n      }\r\n    });\r\n    return eavAttributes;\r\n  }\r\n\r\n  /** update attribute value, and change language readonly state if needed */\r\n  static updateAttributeValue(\r\n    allAttributes: EavEntityAttributes,\r\n    attributeKey: string,\r\n    updateValue: FieldValue,\r\n    language: FormLanguage,\r\n    isReadOnly: boolean,\r\n  ): EavEntityAttributes {\r\n    // copy attributes from item\r\n    let eavAttributes: EavEntityAttributes = {};\r\n    let newLanguageValue = language.current;\r\n\r\n    if (isReadOnly)\r\n      newLanguageValue = `~${language.current}`;\r\n\r\n    const attribute: EavField<any> = {\r\n      ...allAttributes[attributeKey], Values: allAttributes[attributeKey].Values.map(val => {\r\n        const hasLanguage = !!this.valueHasLanguage(val, language);\r\n        const newValue: EavValue<any> = hasLanguage\r\n          // Update value and dimension\r\n          ? {\r\n            ...val,\r\n            // update value\r\n            Value: updateValue,\r\n            // update languageKey with newLanguageValue\r\n            Dimensions: val.Dimensions.map(d => {\r\n              const dimensionIsForLanguage = (d.Value === language.current\r\n                || d.Value === `~${language.current}`\r\n                || (language.current === language.primary && d.Value === '*'));\r\n              return dimensionIsForLanguage\r\n                ? { Value: newLanguageValue } satisfies EavDimension\r\n                : d;\r\n            })\r\n          }\r\n          : val;\r\n        return newValue;\r\n      })\r\n    };\r\n    eavAttributes = this.updateAttribute(allAttributes, attributeKey, attribute);\r\n    return eavAttributes;\r\n  }\r\n\r\n  static addAttributeValue(\r\n    allAttributes: EavEntityAttributes,\r\n    attributeValue: EavValue<any>,\r\n    attributeKey: string,\r\n    attributeType: string,\r\n  ): EavEntityAttributes {\r\n    // copy attributes from item\r\n    let eavAttributes: EavEntityAttributes = {};\r\n    const attribute: EavField<any> =\r\n      Object.keys(allAttributes).length === 0 || !allAttributes[attributeKey]\r\n        ? {\r\n          ...allAttributes[attributeKey],\r\n          Values: [attributeValue],\r\n          Type: attributeType\r\n        }\r\n        : {\r\n          ...allAttributes[attributeKey],\r\n          Values: [...allAttributes[attributeKey].Values, attributeValue],\r\n          Type: attributeType\r\n        };\r\n    eavAttributes = this.updateAttribute(allAttributes, attributeKey, attribute);\r\n    return eavAttributes;\r\n  }\r\n\r\n  /** Add dimension to value with existing dimension */\r\n  static addAttributeDimension(\r\n    allAttributes: EavEntityAttributes,\r\n    attributeKey: string,\r\n    newDimensionValue: string,\r\n    existingDimensionValue: string,\r\n    defaultLanguage: string,\r\n    isReadOnly: boolean,\r\n  ): EavEntityAttributes {\r\n    // copy attributes from item\r\n    let eavAttributes: EavEntityAttributes = {};\r\n    let newLanguageValue = newDimensionValue;\r\n\r\n    if (isReadOnly) {\r\n      newLanguageValue = `~${newDimensionValue}`;\r\n    }\r\n\r\n    const attribute: EavField<any> = {\r\n      ...allAttributes[attributeKey], Values: allAttributes[attributeKey].Values.map(eavValue => {\r\n        const newValue: EavValue<any> = eavValue.Dimensions.find(d => d.Value === existingDimensionValue\r\n          || (existingDimensionValue === defaultLanguage && d.Value === '*'))\r\n          // Update dimension for current language\r\n          ? {\r\n            ...eavValue,\r\n            // if languageKey already exist\r\n            Dimensions: eavValue.Dimensions.concat({ Value: newLanguageValue })\r\n          }\r\n          : eavValue;\r\n        return newValue;\r\n      })\r\n    };\r\n    eavAttributes = this.updateAttribute(allAttributes, attributeKey, attribute);\r\n    return eavAttributes;\r\n  }\r\n\r\n  /** Removes dimension (language) from attribute. If multiple dimensions exist, delete only dimension, else delete value and dimension */\r\n  static removeAttributeDimension(attributes: EavEntityAttributes, attributeKey: string, language: string): EavEntityAttributes {\r\n    const oldAttributes = attributes;\r\n    const validDimensions = [language, `~${language}`];\r\n\r\n    const value = oldAttributes[attributeKey].Values.find(eavValue => {\r\n      const dimensionExists = eavValue.Dimensions.some(dimension => validDimensions.includes(dimension.Value));\r\n      return dimensionExists;\r\n    });\r\n\r\n    // given dimension doesn't exist for this attribute so no change is needed\r\n    if (!value) {\r\n      const attributesCopy: EavEntityAttributes = { ...oldAttributes };\r\n      return attributesCopy;\r\n    }\r\n\r\n    let newAttribute: EavField<any>;\r\n    if (value.Dimensions.length > 1) {\r\n      // if multiple dimensions exist delete only dimension\r\n      newAttribute = {\r\n        ...oldAttributes[attributeKey],\r\n        Values: oldAttributes[attributeKey].Values.map(eavValue => {\r\n          const dimensionExists = eavValue.Dimensions.some(dimension => validDimensions.includes(dimension.Value));\r\n          if (!dimensionExists) return eavValue;\r\n\r\n          return {\r\n            ...eavValue,\r\n            Dimensions: eavValue.Dimensions.filter(dimension => !validDimensions.includes(dimension.Value)),\r\n          } satisfies EavValue<any>;\r\n        })\r\n      };\r\n    } else if (value.Dimensions.length === 1) {\r\n      // if only one dimension exists delete value and dimension\r\n      newAttribute = {\r\n        ...oldAttributes[attributeKey],\r\n        Values: oldAttributes[attributeKey].Values.filter(eavValue => {\r\n          const dimensionExists = eavValue.Dimensions.some(dimension => validDimensions.includes(dimension.Value));\r\n          return !dimensionExists;\r\n        })\r\n      };\r\n    }\r\n\r\n    const newAttributes = this.updateAttribute(oldAttributes, attributeKey, newAttribute);\r\n    return newAttributes;\r\n  }\r\n\r\n  /**\r\n   * Default mode priority:\r\n   * 1. value for current language\r\n   * 2. value for all languages\r\n   * 3. value for default language\r\n   * 4. first value\r\n   *\r\n   * Strict mode priority:\r\n   * 1. value for current language\r\n   * 2. value for all languages\r\n   * 3. value for default language\r\n   *\r\n   * Very strict mode priority:\r\n   * 1. value for current language\r\n   * 2. value for all languages\r\n   */\r\n  static getBestValue(eavValues: EavField<any>, currentLanguage: string, defaultLanguage: string, mode: BestValueMode): FieldValue {\r\n    if (eavValues == null) { return; }\r\n\r\n    let bestDimensions = [currentLanguage, `~${currentLanguage}`];\r\n    let bestValue = this.findValueForDimensions(eavValues, bestDimensions);\r\n    if (bestValue !== undefined) { return bestValue; }\r\n\r\n    bestDimensions = ['*'];\r\n    bestValue = this.findValueForDimensions(eavValues, bestDimensions);\r\n    if (bestValue !== undefined) { return bestValue; }\r\n\r\n    if (mode === BestValueModes.Strict) { return; }\r\n\r\n    bestDimensions = [defaultLanguage, `~${defaultLanguage}`];\r\n    bestValue = this.findValueForDimensions(eavValues, bestDimensions);\r\n    if (bestValue !== undefined) { return bestValue; }\r\n\r\n    bestValue = eavValues.Values[0]?.Value;\r\n    return bestValue;\r\n  }\r\n\r\n  static findOfExactDimension<T>(eavValues: EavValue<T>[], dimension: string): EavValue<T> {\r\n    return eavValues.find(v => v.Dimensions.find(x => x.Value === dimension));\r\n  }\r\n\r\n  private static findValueForDimensions(eavValues: EavField<any>, dimensions: string[]): FieldValue {\r\n    const value = eavValues.Values.find(\r\n      eavValue => !!eavValue.Dimensions.find(dimension => dimensions.includes(dimension.Value)),\r\n    )?.Value;\r\n    return value;\r\n  }\r\n}\r\n","export const TranslationLinks = {\r\n  Translate: 'Translate',\r\n  DontTranslate: 'DontTranslate',\r\n  MissingDefaultLangValue: 'MissingDefaultLangValue',\r\n  LinkReadOnly: 'LinkReadOnly',\r\n  LinkReadWrite: 'LinkReadWrite',\r\n  LinkCopyFrom: 'LinkCopyFrom',\r\n} as const;\r\n\r\nexport type TranslationLink = typeof TranslationLinks[keyof typeof TranslationLinks];\r\n","import { RxHelpers } from '../../../shared/rxJs/rx.helpers';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { ItemValuesOfLanguage } from '../../state/item-values-of-language.model';\r\nimport { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\n\r\nexport class ControlHelpers {\r\n\r\n\r\n  /** Searches where newValues has values different from oldValues */\r\n  static getFormChanges(oldValues: ItemValuesOfLanguage, newValues: ItemValuesOfLanguage): ItemValuesOfLanguage {\r\n    const changes: ItemValuesOfLanguage = {};\r\n    for (const key of Object.keys(newValues)) {\r\n      const newValue = newValues[key];\r\n      const oldValue = oldValues[key];\r\n      if (this.controlValuesEqual(newValue, oldValue)) { continue; }\r\n\r\n      changes[key] = newValue;\r\n    }\r\n    return Object.keys(changes).length === 0 ? undefined : changes;\r\n  }\r\n\r\n  /** TODO: Try to remove this by assigning controls [formControlName] in [formGroup] */\r\n  static markControlTouched(control: AbstractControl): void {\r\n    if (control.touched) { return; }\r\n\r\n    control.markAsTouched();\r\n    control.updateValueAndValidity();\r\n  }\r\n\r\n\r\n  /** Use to update form controls value */\r\n  static patchControlValue(control: AbstractControl, newValue: FieldValue): void {\r\n    if (!control.touched) {\r\n      control.markAsTouched();\r\n    }\r\n    if (!control.dirty && !this.controlValuesEqual(control.value, newValue)) {\r\n      control.markAsDirty();\r\n    }\r\n    control.patchValue(newValue);\r\n  }\r\n\r\n\r\n  /** Disables/enables control if not already disabled/enabled. Use this helper to trigger fewer events on the form */\r\n  static disableControl(control: AbstractControl, disable: boolean) {\r\n    if (control.disabled === disable) return;\r\n\r\n    if (disable)\r\n      control.disable();\r\n    else\r\n      control.enable();\r\n  }\r\n\r\n  private static controlValuesEqual(x: FieldValue, y: FieldValue): boolean {\r\n    if (x === y) return true;\r\n    if (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y)) return true;\r\n    if (Array.isArray(x) && Array.isArray(y) && RxHelpers.arraysEqual(x, y)) return true;\r\n    return false;\r\n  }\r\n}\r\n","import { ServiceBase } from '../../../shared/services/service-base';\r\nimport { EavLogger } from '../../../shared/logging/eav-logger';\r\nimport { Injectable, inject, signal, Injector, OnDestroy, effect } from '@angular/core';\r\nimport { FieldState } from '../../fields/field-state';\r\nimport { FormConfigService } from '../../state/form-config.service';\r\n\r\nconst logThis = false;\r\nconst nameOfThis = 'FieldMask';\r\n\r\nconst FieldsFind = /\\[.*?\\]/ig;\r\nconst FieldUnwrap = /[\\[\\]]/ig;\r\n/**\r\n * Create a new FieldMask instance and access result with resolve\r\n * @example\r\n * const mask = new FieldMask(\"[FirstName]\", formGroup.controls);\r\n * const maskValue = mask.resolve();\r\n *\r\n * @param mask a string like \"[FirstName] [LastName]\"\r\n * @param model usually FormGroup controls, passed into here\r\n * @param overloadPreCleanValues a function which will \"scrub\" the found field-values\r\n */\r\n@Injectable()\r\nexport class FieldMask extends ServiceBase implements OnDestroy {\r\n  public signal = signal<string>('');\r\n\r\n  public watch = false;\r\n\r\n  /** Fields used in the mask */\r\n  private fieldsUsedInMask: string[] = [];\r\n\r\n  private fieldState = inject(FieldState);\r\n\r\n  private controls = this.fieldState.group.controls;\r\n  private fieldConfig = this.fieldState.config;\r\n\r\n  protected formConfig = inject(FormConfigService);\r\n\r\n  private callback?: (newValue: string) => void;\r\n\r\n  private mask: string | null;\r\n\r\n  constructor(private injector: Injector) {\r\n    super(new EavLogger(nameOfThis, logThis));\r\n    this.log.a('constructor');\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy();\r\n  }\r\n\r\n  /** Attach any processing events before the mask is resolved the first time */\r\n  public initPreClean(overloadPreCleanValues: (key: string, value: string) => string): this {\r\n    this.log.a('initPreClean');\r\n    this.preClean = overloadPreCleanValues;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * attach a callback.\r\n   * Someday should simply be replaced to use the signal instead.\r\n   * @param callback\r\n   * @returns\r\n   */\r\n  public initCallback(callback: (newValue: string) => void): this {\r\n    this.log.a('initCallback');\r\n    this.callback = callback;\r\n    this.watch = true;\r\n    return this;\r\n  }\r\n\r\n  public init(name: string, mask: string, watch?: boolean): this {\r\n    this.log.rename(`${this.log.name}-${name}`);\r\n    // mut happen before updateMask\r\n    if (watch != null)\r\n      this.watch = watch;\r\n    this.updateMask(mask);\r\n    return this;\r\n  }\r\n\r\n  public logChanges(): this {\r\n    // use logger, but if not enabled, create new just for this\r\n    const l = this.log.enabled ? this.log : new EavLogger(nameOfThis, true);\r\n    effect(() => {\r\n      const latest = this.signal();\r\n      l.a(`Mask '${this.mask}' value changed to: ${latest}`);\r\n    }, { injector: this.injector });\r\n    return this;\r\n  }\r\n\r\n\r\n  public updateMask(mask: string) {\r\n    this.mask = mask ?? '';\r\n    this.fieldsUsedInMask = this.extractFieldNames(this.mask);\r\n\r\n    // bind auto-watch only if needed...\r\n    // otherwise it's just on-demand\r\n    if (this.watch || this.callback)\r\n      this.watchAllFields();\r\n\r\n    this.onChange();\r\n  }\r\n\r\n\r\n\r\n  /** Resolves a mask to the final value */\r\n  resolve(): string {\r\n\r\n    // if no mask, exit early\r\n    if (!hasPlaceholders(this.mask))\r\n      return this.mask;\r\n\r\n    let value = lowercaseInsideSquareBrackets(this.mask);\r\n    if (this.formConfig != null)\r\n      value = value\r\n        .replace('[app:appid]', this.formConfig.config.appId.toString())\r\n        .replace('[app:zoneid]', this.formConfig.config.zoneId.toString());\r\n\r\n    if (this.fieldConfig != null)\r\n      value = value\r\n        .replace('[guid]', this.fieldConfig.entityGuid)\r\n        .replace('[id]', this.fieldConfig.entityId.toString());\r\n\r\n    this.fieldsUsedInMask.forEach((e, i) => {\r\n      const replaceValue = this.controls.hasOwnProperty(e) && this.controls[e] && this.controls[e].value ? this.controls[e].value : '';\r\n      const cleaned = this.preClean(e, replaceValue);\r\n      value = value.replace('[' + e.toLowerCase() + ']', cleaned);\r\n    });\r\n    return value;\r\n  }\r\n\r\n  /** Retrieves a list of all fields used in the mask */\r\n  private extractFieldNames(mask: string): string[] {\r\n    // exit early if mask very simple or not a mask\r\n    if (!mask || !hasPlaceholders(mask))\r\n      return [];\r\n\r\n    const result: string[] = [];\r\n    const matches = mask.match(FieldsFind);\r\n    if (matches)\r\n      matches.forEach((fieldName) => {\r\n        const staticName = fieldName.replace(FieldUnwrap, '');\r\n        result.push(staticName);\r\n      });\r\n    else\r\n      // TODO: ask is this good\r\n      result.push(this.mask);\r\n    return result;\r\n  }\r\n\r\n  /** Default preClean function, if no other function was specified for this */\r\n  private preClean(key: string, value: string): string {\r\n    return value;\r\n  }\r\n\r\n  /** Change-event - will only fire if it really changes */\r\n  private onChange() {\r\n    const maybeNew = this.resolve();\r\n    if (this.signal() !== maybeNew) {\r\n      this.signal.set(maybeNew);\r\n      this.callback?.(maybeNew);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add watcher and execute onChange.\r\n   * Uses observables, since that's what angular provides on valueChanges.\r\n   */\r\n  private watchAllFields() {\r\n    // add a watch for each field in the field-mask\r\n    this.fieldsUsedInMask.forEach(field => {\r\n      const control = this.controls[field];\r\n      if (!control) return;\r\n      const valueSub = control.valueChanges.subscribe(_ => this.onChange());\r\n      this.subscriptions.add(valueSub);\r\n    });\r\n  }\r\n}\r\n\r\n\r\nfunction hasPlaceholders(mask: string): boolean {\r\n  return (mask ?? '').includes('[');\r\n}\r\n\r\n/** used for query parameters */\r\nfunction lowercaseInsideSquareBrackets(value: string) {\r\n  return value.replace(/\\[([^\\]]+)\\]/g, (match, group) => `[${group.toLowerCase()}]`);\r\n}\r\n","import { EavEntity, EavEntityAttributes, EavField } from '../models/eav';\r\nimport { LocalizationHelpers } from '../../localization/localization.helpers';\r\nimport { ItemValuesOfLanguage } from '../../state/item-values-of-language.model';\r\nimport { FormLanguage } from '../../state/form-languages.model';\r\n\r\nexport class EntityReader implements FormLanguage {\r\n  constructor(public current: string, public primary: string) { }\r\n\r\n  // WIP - to make code clearer, this is what should be used from now on\r\n  // But we'll probably end up calling this from the EntityReader only, so it should be straight forward\r\n  getBestValue<T>(attributeValues: EavField<unknown>, defaultValue: T): T {\r\n    return LocalizationHelpers.translate<T>(this, attributeValues as EavField<T>, defaultValue);\r\n  }\r\n\r\n  public flatten<T>(metadataItem: EavEntity): T {\r\n    return this.flattenAll<T>([metadataItem]);\r\n  }\r\n\r\n  public flattenAll<T>(metadataItems: EavEntity[]): T {\r\n    if (metadataItems == null || metadataItems.length === 0 || metadataItems[0] == null)\r\n      return {} as T;\r\n\r\n    const merged: Record<string, any> = {};\r\n    // copy metadata settings which are not @All\r\n    for (const item of metadataItems) {\r\n      if (item.Type.Id === '@All') { continue; }\r\n\r\n      for (const [name, values] of Object.entries(item.Attributes)) {\r\n        const value = this.getBestValue(values, null);\r\n        merged[name] = value;\r\n      }\r\n    }\r\n\r\n    // copy @All metadata settings, overwriting previous settings\r\n    for (const item of metadataItems) {\r\n      if (item.Type.Id !== '@All') { continue; }\r\n\r\n      for (const [name, values] of Object.entries(item.Attributes)) {\r\n        const value = this.getBestValue(values, null);\r\n        // do not overwrite previous settings if @All is empty\r\n        const exists = merged[name] != null;\r\n        const emptyAll = value == null || value === '';\r\n        if (exists && emptyAll) { continue; }\r\n\r\n        merged[name] = value;\r\n      }\r\n    }\r\n\r\n    return merged as T;\r\n  }\r\n\r\n  currentValues(itemAttributes: EavEntityAttributes): ItemValuesOfLanguage {\r\n    const formValues: ItemValuesOfLanguage = {};\r\n    for (const [name, values] of Object.entries(itemAttributes))\r\n      formValues[name] = this.getBestValue(values, null);\r\n    return formValues;\r\n  }\r\n\r\n}\r\n","export class FileTypeHelpers {\r\n  private static defaultIcon = 'file';\r\n  private static customExtensions: Record<string, string> = {\r\n    doc: 'file-word',\r\n    docx: 'file-word',\r\n    xls: 'file-excel',\r\n    xlsx: 'file-excel',\r\n    ppt: 'file-powerpoint',\r\n    pptx: 'file-powerpoint',\r\n    pdf: 'file-pdf',\r\n    mp3: 'file-audio',\r\n    avi: 'file-video',\r\n    mpg: 'file-video',\r\n    mpeg: 'file-video',\r\n    mov: 'file-video',\r\n    mp4: 'file-video',\r\n    zip: 'file-archive',\r\n    rar: 'file-archive',\r\n    txt: 'file-text',\r\n    html: 'file-code',\r\n    css: 'file-code',\r\n    xml: 'file-code',\r\n    xsl: 'file-code',\r\n  };\r\n  private static matExtensions: Record<string, string> = {\r\n    vcf: 'person',\r\n  };\r\n\r\n  static getExtension(filename: string) {\r\n    return filename.substring(filename.lastIndexOf('.') + 1).toLocaleLowerCase();\r\n  }\r\n\r\n  static getIconClass(filename: string) {\r\n    const ext = this.getExtension(filename);\r\n    return this.matExtensions[ext] || this.customExtensions[ext] || this.defaultIcon;\r\n  }\r\n\r\n  static isKnownType(filename: string) {\r\n    return this.matExtensions[this.getExtension(filename)] != null;\r\n  }\r\n\r\n  static isImage(filename: string) {\r\n    return this.isImgRegex().test(filename);\r\n  }\r\n\r\n  private static isImgRegex() {\r\n    return /(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*\\.(?:jpg|jpeg|gif|png|webp))(?:\\?([^#]*))?(?:#(.*))?/i;\r\n  }\r\n}\r\n","import { FieldSettings, FieldValue } from '../../../../../../edit-types';\r\nimport { InputTypeStrict, InputTypeConstants } from '../../../content-type-fields/constants/input-type.constants';\r\nimport { EavLogger } from '../../../shared/logging/eav-logger';\r\nimport { ItemIdentifierShared } from '../../../shared/models/edit-form.model';\r\n\r\nconst logThis = false;\r\n\r\nexport class FieldHelper {\r\n\r\n  /** Include itemHeader if you need data from prefill, and set onlyPrefill if you only need parsed prefill */\r\n  static getDefaultOrPrefillValue(\r\n    name: string,\r\n    inputType: InputTypeStrict,\r\n    settings: FieldSettings,\r\n    itemHeader?: ItemIdentifierShared,\r\n    onlyPrefill?: boolean,\r\n  ): FieldValue {\r\n    const log = new EavLogger('InputFieldHelpers', logThis);\r\n    const l = log.fn('parseDefaultValue', { name, inputType, settings, itemHeader, onlyPrefill });\r\n\r\n    const prefillRaw = itemHeader?.Prefill?.[name];\r\n    if (onlyPrefill && prefillRaw === undefined)\r\n      return l.rNull('only prefill, but no prefill data found');\r\n\r\n    let defaultValue = prefillRaw?.toString() ?? settings.DefaultValue;\r\n\r\n    l.values({ defaultValue });\r\n\r\n    switch (inputType) {\r\n      case InputTypeConstants.BooleanDefault:\r\n        return defaultValue?.toLowerCase() === 'true';\r\n      case InputTypeConstants.BooleanTristate:\r\n        return defaultValue != null && defaultValue !== ''\r\n          ? defaultValue.toLowerCase() === 'true'\r\n          : null;\r\n      case InputTypeConstants.DateTimeDefault:\r\n        return defaultValue != null && defaultValue !== ''\r\n          ? new Date(defaultValue).toJSON()\r\n          : null;\r\n      case InputTypeConstants.NumberDefault:\r\n      case InputTypeConstants.NumberDropdown:\r\n      case InputTypeConstants.NumberPicker:\r\n        return defaultValue != null && defaultValue !== ''\r\n          ? !isNaN(Number(defaultValue)) ? Number(defaultValue) : null\r\n          : null;\r\n      case InputTypeConstants.EntityDefault:\r\n      case InputTypeConstants.EntityQuery:\r\n      case InputTypeConstants.EntityContentBlocks:\r\n      case InputTypeConstants.EntityPicker:\r\n        // Empty - return []\r\n        if (defaultValue == null || defaultValue === '')\r\n          return [];\r\n\r\n        // string has { } characters, we must switch them to quotes for parsing below\r\n        // 2024-06-01 2dm not sure why this is an option..., maybe some interim encoding?\r\n        if (defaultValue.includes('{'))\r\n          defaultValue = defaultValue.replace(/[\\{\\}]/g, '\\\"');\r\n\r\n        // list but no array, add brackets\r\n        if (defaultValue.includes(',') && !defaultValue.includes('[')) {\r\n          const guids = defaultValue.split(',').map(guid => guid.trim());\r\n          defaultValue = JSON.stringify(guids);\r\n        }\r\n\r\n        // Finally parse\r\n        return defaultValue.startsWith('[') // an array with guid strings\r\n          ? JSON.parse(defaultValue) // if it's a string containing an array\r\n          : [defaultValue.replace(/\"/g, '')]; // just a guid string, but might have quotes\r\n      default:\r\n        return defaultValue ?? '';\r\n    }\r\n  }\r\n}\r\n","export class SanitizeHelper {\r\n\r\n  private static removeFromStart(sanitized: string, charToRemove: string): string {\r\n    // check for undefined\r\n    if (!sanitized) { return sanitized; }\r\n\r\n    while (sanitized.substring(0, 1) === charToRemove) {\r\n      sanitized = sanitized.substring(1);\r\n    }\r\n    return sanitized;\r\n  }\r\n\r\n  private static removeFromEnd(sanitized: string, charToRemove: string): string {\r\n    // check for undefined\r\n    if (!sanitized) { return sanitized; }\r\n\r\n    while (sanitized.substring(sanitized.length - 1, sanitized.length) === charToRemove) {\r\n      sanitized = sanitized.substring(0, sanitized.length - 1);\r\n    }\r\n    return sanitized;\r\n  }\r\n\r\n  private static cleanBadPath(sanitized: string): string {\r\n    // check for undefined\r\n    if (!sanitized) { return sanitized; }\r\n\r\n    const goodChar = '_';\r\n    const illegalRe = /[\\?<>\\\\:\\*\\|\":]/g;\r\n    const controlRe = /[\\x00-\\x1f\\x80-\\x9f]/g;\r\n    const reservedRe = /^\\.+$/;\r\n    const windowsReservedRe = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\\..*)?$/i;\r\n    const windowsTrailingRe = /[\\. ]+$/;\r\n    return sanitized\r\n      .replace(illegalRe, goodChar)\r\n      .replace(controlRe, goodChar)\r\n      .replace(reservedRe, goodChar)\r\n      .replace(windowsReservedRe, goodChar)\r\n      .replace(windowsTrailingRe, goodChar);\r\n  }\r\n\r\n  // sanitize path\r\n  static sanitizePath(sanitized: string): string {\r\n    // check for undefined\r\n    if (!sanitized) { return sanitized; }\r\n\r\n    // remove slashes form start of path\r\n    sanitized = this.removeFromStart(sanitized, '\\/');\r\n\r\n    // remove slashed form end of path\r\n    sanitized = this.removeFromEnd(sanitized, '\\/');\r\n\r\n    // remove backslashes form start of path\r\n    sanitized = this.removeFromStart(sanitized, '\\\\');\r\n\r\n    // remove backslashes form end of path\r\n    sanitized = this.removeFromEnd(sanitized, '\\\\');\r\n\r\n    // replace bad\r\n    sanitized = this.cleanBadPath(sanitized);\r\n\r\n    return sanitized;\r\n  }\r\n\r\n  // sanitize file or folder name\r\n  static sanitizeName(sanitized: string): string {\r\n    // check for undefined\r\n    if (!sanitized) { return sanitized; }\r\n\r\n    // in addition to all path validation rules\r\n    // slashes are not valid in file or folder name\r\n    const replacement = '_';\r\n    const illegalRe = /\\//g;\r\n    return this.sanitizePath(sanitized).replace(illegalRe, replacement);\r\n  }\r\n}\r\n","import { ActivatedRoute } from '@angular/router';\r\nimport { FormConfiguration } from '../../state/form-configuration.model';\r\n\r\nexport class UrlHelpers {\r\n\r\n  static stripNonUrlCharacters(controlValue: string, allowPath: boolean, trimEnd: boolean) {\r\n    if (!controlValue) { return ''; }\r\n\r\n    const rexSeparators = allowPath ? /[^a-z0-9-_/]+/gi : /[^a-z0-9-_]+/gi;\r\n    const latinized = this.latinizeText(controlValue.toLowerCase());\r\n    const cleanInputValue = latinized\r\n      .replace(`'s `, 's ') // neutralize it's, daniel's etc. but only if followed by a space, to ensure we don't kill quotes\r\n      .replace('\\\\', '/') // neutralize slash representation\r\n      .replace(rexSeparators, '-') // replace everything we don't want with a -\r\n      .replace(/-+/gi, '-') // reduce multiple '-'\r\n      .replace(/\\/+/gi, '/') // reduce multiple slashes\r\n      .replace(/-*\\/-*/gi, '/') // reduce '-/' or '/-' combinations to a simple '/'\r\n      .replace(trimEnd ? /^-|-+$/gi : /^-/gi, ''); // trim front and maybe end '-'\r\n    return cleanInputValue;\r\n  }\r\n\r\n  static latinizeText(input: string) {\r\n    const latinMap: Record<string, string> = {\r\n      Á: 'A', Ă: 'A', Ắ: 'A', Ặ: 'A', Ằ: 'A', Ẳ: 'A', Ẵ: 'A', Ǎ: 'A', Â: 'A', Ấ: 'A', Ậ: 'A',\r\n      Ầ: 'A', Ẩ: 'A', Ẫ: 'A', Ä: 'Ae', Ǟ: 'A', Ȧ: 'A', Ǡ: 'A', Ạ: 'A', Ȁ: 'A', À: 'A', Ả: 'A', Ȃ: 'A',\r\n      Ā: 'A', Ą: 'A', Å: 'A', Ǻ: 'A', Ḁ: 'A', Ⱥ: 'A', Ã: 'A', Ꜳ: 'AA', Æ: 'AE', Ǽ: 'AE', Ǣ: 'AE',\r\n      Ꜵ: 'AO', Ꜷ: 'AU', Ꜹ: 'AV', Ꜻ: 'AV', Ꜽ: 'AY', Ḃ: 'B', Ḅ: 'B', Ɓ: 'B', Ḇ: 'B', Ƀ: 'B',\r\n      Ƃ: 'B', Ć: 'C', Č: 'C', Ç: 'C', Ḉ: 'C', Ĉ: 'C', Ċ: 'C', Ƈ: 'C', Ȼ: 'C', Ď: 'D', Ḑ: 'D',\r\n      Ḓ: 'D', Ḋ: 'D', Ḍ: 'D', Ɗ: 'D', Ḏ: 'D', ǲ: 'D', ǅ: 'D', Đ: 'D', Ƌ: 'D', Ǳ: 'DZ', Ǆ: 'DZ',\r\n      É: 'E', Ĕ: 'E', Ě: 'E', Ȩ: 'E', Ḝ: 'E', Ê: 'E', Ế: 'E', Ệ: 'E', Ề: 'E', Ể: 'E', Ễ: 'E', Ḙ: 'E',\r\n      Ë: 'E', Ė: 'E', Ẹ: 'E', Ȅ: 'E', È: 'E', Ẻ: 'E', Ȇ: 'E', Ē: 'E', Ḗ: 'E', Ḕ: 'E', Ę: 'E', Ɇ: 'E',\r\n      Ẽ: 'E', Ḛ: 'E', Ꝫ: 'ET', Ḟ: 'F', Ƒ: 'F', Ǵ: 'G', Ğ: 'G', Ǧ: 'G', Ģ: 'G', Ĝ: 'G', Ġ: 'G', Ɠ: 'G',\r\n      Ḡ: 'G', Ǥ: 'G', Ḫ: 'H', Ȟ: 'H', Ḩ: 'H', Ĥ: 'H', Ⱨ: 'H', Ḧ: 'H', Ḣ: 'H', Ḥ: 'H', Ħ: 'H', Í: 'I',\r\n      Ĭ: 'I', Ǐ: 'I', Î: 'I', Ï: 'I', Ḯ: 'I', İ: 'I', Ị: 'I', Ȉ: 'I', Ì: 'I', Ỉ: 'I', Ȋ: 'I', Ī: 'I',\r\n      Į: 'I', Ɨ: 'I', Ĩ: 'I', Ḭ: 'I', Ꝺ: 'D', Ꝼ: 'F', Ᵹ: 'G', Ꞃ: 'R', Ꞅ: 'S', Ꞇ: 'T', Ꝭ: 'IS', Ĵ: 'J',\r\n      Ɉ: 'J', Ḱ: 'K', Ǩ: 'K', Ķ: 'K', Ⱪ: 'K', Ꝃ: 'K', Ḳ: 'K', Ƙ: 'K', Ḵ: 'K', Ꝁ: 'K', Ꝅ: 'K', Ĺ: 'L',\r\n      Ƚ: 'L', Ľ: 'L', Ļ: 'L', Ḽ: 'L', Ḷ: 'L', Ḹ: 'L', Ⱡ: 'L', Ꝉ: 'L', Ḻ: 'L', Ŀ: 'L', Ɫ: 'L', ǈ: 'L',\r\n      Ł: 'L', Ǉ: 'LJ', Ḿ: 'M', Ṁ: 'M', Ṃ: 'M', Ɱ: 'M', Ń: 'N', Ň: 'N', Ņ: 'N', Ṋ: 'N', Ṅ: 'N', Ṇ: 'N',\r\n      Ǹ: 'N', Ɲ: 'N', Ṉ: 'N', Ƞ: 'N', ǋ: 'N', Ñ: 'N', Ǌ: 'NJ', Ó: 'O', Ŏ: 'O', Ǒ: 'O', Ô: 'O', Ố: 'O',\r\n      Ộ: 'O', Ồ: 'O', Ổ: 'O', Ỗ: 'O', Öe: 'O', Ȫ: 'O', Ȯ: 'O', Ȱ: 'O', Ọ: 'O', Ő: 'O', Ȍ: 'O', Ò: 'O',\r\n      Ỏ: 'O', Ơ: 'O', Ớ: 'O', Ợ: 'O', Ờ: 'O', Ở: 'O', Ỡ: 'O', Ȏ: 'O', Ꝋ: 'O', Ꝍ: 'O', Ō: 'O', Ṓ: 'O',\r\n      Ṑ: 'O', Ɵ: 'O', Ǫ: 'O', Ǭ: 'O', Ø: 'O', Ǿ: 'O', Õ: 'O', Ṍ: 'O', Ṏ: 'O', Ȭ: 'O', Ƣ: 'OI', Ꝏ: 'OO',\r\n      Ɛ: 'E', Ɔ: 'O', Ȣ: 'OU', Ṕ: 'P', Ṗ: 'P', Ꝓ: 'P', Ƥ: 'P', Ꝕ: 'P', Ᵽ: 'P', Ꝑ: 'P', Ꝙ: 'Q', Ꝗ: 'Q',\r\n      Ŕ: 'R', Ř: 'R', Ŗ: 'R', Ṙ: 'R', Ṛ: 'R', Ṝ: 'R', Ȑ: 'R', Ȓ: 'R', Ṟ: 'R', Ɍ: 'R', Ɽ: 'R', Ꜿ: 'C',\r\n      Ǝ: 'E', Ś: 'S', Ṥ: 'S', Š: 'S', Ṧ: 'S', Ş: 'S', Ŝ: 'S', Ș: 'S', Ṡ: 'S', Ṣ: 'S', Ṩ: 'S', Ť: 'T',\r\n      Ţ: 'T', Ṱ: 'T', Ț: 'T', Ⱦ: 'T', Ṫ: 'T', Ṭ: 'T', Ƭ: 'T', Ṯ: 'T', Ʈ: 'T', Ŧ: 'T', Ɐ: 'A', Ꞁ: 'L',\r\n      Ɯ: 'M', Ʌ: 'V', Ꜩ: 'TZ', Ú: 'U', Ŭ: 'U', Ǔ: 'U', Û: 'U', Ṷ: 'U', Ü: 'Ue', Ǘ: 'U', Ǚ: 'U', Ǜ: 'U',\r\n      Ǖ: 'U', Ṳ: 'U', Ụ: 'U', Ű: 'U', Ȕ: 'U', Ù: 'U', Ủ: 'U', Ư: 'U', Ứ: 'U', Ự: 'U', Ừ: 'U', Ử: 'U',\r\n      Ữ: 'U', Ȗ: 'U', Ū: 'U', Ṻ: 'U', Ų: 'U', Ů: 'U', Ũ: 'U', Ṹ: 'U', Ṵ: 'U', Ꝟ: 'V', Ṿ: 'V', Ʋ: 'V',\r\n      Ṽ: 'V', Ꝡ: 'VY', Ẃ: 'W', Ŵ: 'W', Ẅ: 'W', Ẇ: 'W', Ẉ: 'W', Ẁ: 'W', Ⱳ: 'W', Ẍ: 'X', Ẋ: 'X', Ý: 'Y',\r\n      Ŷ: 'Y', Ÿ: 'Y', Ẏ: 'Y', Ỵ: 'Y', Ỳ: 'Y', Ƴ: 'Y', Ỷ: 'Y', Ỿ: 'Y', Ȳ: 'Y', Ɏ: 'Y', Ỹ: 'Y', Ź: 'Z',\r\n      Ž: 'Z', Ẑ: 'Z', Ⱬ: 'Z', Ż: 'Z', Ẓ: 'Z', Ȥ: 'Z', Ẕ: 'Z', Ƶ: 'Z', Ĳ: 'IJ', Œ: 'OE', ᴀ: 'A', ᴁ: 'AE',\r\n      ʙ: 'B', ᴃ: 'B', ᴄ: 'C', ᴅ: 'D', ᴇ: 'E', ꜰ: 'F', ɢ: 'G', ʛ: 'G', ʜ: 'H', ɪ: 'I', ʁ: 'R', ᴊ: 'J',\r\n      ᴋ: 'K', ʟ: 'L', ᴌ: 'L', ᴍ: 'M', ɴ: 'N', ᴏ: 'O', ɶ: 'OE', ᴐ: 'O', ᴕ: 'OU', ᴘ: 'P', ʀ: 'R', ᴎ: 'N',\r\n      ᴙ: 'R', ꜱ: 'S', ᴛ: 'T', ⱻ: 'E', ᴚ: 'R', ᴜ: 'U', ᴠ: 'V', ᴡ: 'W', ʏ: 'Y', ᴢ: 'Z', á: 'a', ă: 'a',\r\n      ắ: 'a', ặ: 'a', ằ: 'a', ẳ: 'a', ẵ: 'a', ǎ: 'a', â: 'a', ấ: 'a', ậ: 'a', ầ: 'a', ẩ: 'a', ẫ: 'a',\r\n      ä: 'ae', ǟ: 'a', ȧ: 'a', ǡ: 'a', ạ: 'a', ȁ: 'a', à: 'a', ả: 'a', ȃ: 'a', ā: 'a', ą: 'a', ᶏ: 'a',\r\n      ẚ: 'a', å: 'a', ǻ: 'a',\r\n      ḁ: 'a', ⱥ: 'a', ã: 'a', ꜳ: 'aa', æ: 'ae', ǽ: 'ae', ǣ: 'ae', ꜵ: 'ao', ꜷ: 'au', ꜹ: 'av', ꜻ: 'av',\r\n      ꜽ: 'ay', ḃ: 'b', ḅ: 'b', ɓ: 'b', ḇ: 'b', ᵬ: 'b', ᶀ: 'b', ƀ: 'b', ƃ: 'b', ɵ: 'o', ć: 'c', č: 'c',\r\n      ç: 'c', ḉ: 'c', ĉ: 'c', ɕ: 'c', ċ: 'c', ƈ: 'c', ȼ: 'c', ď: 'd', ḑ: 'd', ḓ: 'd', ȡ: 'd', ḋ: 'd',\r\n      ḍ: 'd', ɗ: 'd', ᶑ: 'd', ḏ: 'd', ᵭ: 'd', ᶁ: 'd', đ: 'd', ɖ: 'd', ƌ: 'd', ı: 'i', ȷ: 'j', ɟ: 'j',\r\n      ʄ: 'j', ǳ: 'dz', ǆ: 'dz', é: 'e', ĕ: 'e', ě: 'e', ȩ: 'e', ḝ: 'e', ê: 'e', ế: 'e', ệ: 'e', ề: 'e',\r\n      ể: 'e', ễ: 'e', ḙ: 'e', ë: 'e', ė: 'e', ẹ: 'e', ȅ: 'e', è: 'e', ẻ: 'e', ȇ: 'e', ē: 'e', ḗ: 'e',\r\n      ḕ: 'e', ⱸ: 'e', ę: 'e', ᶒ: 'e', ɇ: 'e', ẽ: 'e', ḛ: 'e', ꝫ: 'et', ḟ: 'f', ƒ: 'f', ᵮ: 'f', ᶂ: 'f',\r\n      ǵ: 'g', ğ: 'g', ǧ: 'g', ģ: 'g', ĝ: 'g', ġ: 'g', ɠ: 'g', ḡ: 'g', ᶃ: 'g', ǥ: 'g', ḫ: 'h', ȟ: 'h',\r\n      ḩ: 'h', ĥ: 'h', ⱨ: 'h', ḧ: 'h', ḣ: 'h', ḥ: 'h', ɦ: 'h', ẖ: 'h', ħ: 'h', ƕ: 'hv', í: 'i', ĭ: 'i',\r\n      ǐ: 'i', î: 'i', ï: 'i', ḯ: 'i', ị: 'i', ȉ: 'i', ì: 'i', ỉ: 'i', ȋ: 'i', ī: 'i', į: 'i', ᶖ: 'i',\r\n      ɨ: 'i', ĩ: 'i', ḭ: 'i', ꝺ: 'd', ꝼ: 'f', ᵹ: 'g', ꞃ: 'r', ꞅ: 's', ꞇ: 't', ꝭ: 'is', ǰ: 'j', ĵ: 'j',\r\n      ʝ: 'j', ɉ: 'j', ḱ: 'k', ǩ: 'k', ķ: 'k', ⱪ: 'k', ꝃ: 'k', ḳ: 'k', ƙ: 'k', ḵ: 'k', ᶄ: 'k', ꝁ: 'k',\r\n      ꝅ: 'k', ĺ: 'l', ƚ: 'l', ɬ: 'l', ľ: 'l', ļ: 'l', ḽ: 'l', ȴ: 'l', ḷ: 'l', ḹ: 'l', ⱡ: 'l', ꝉ: 'l',\r\n      ḻ: 'l', ŀ: 'l', ɫ: 'l', ᶅ: 'l', ɭ: 'l', ł: 'l', ǉ: 'lj', ſ: 's', ẜ: 's', ẛ: 's', ẝ: 's', ḿ: 'm',\r\n      ṁ: 'm', ṃ: 'm', ɱ: 'm', ᵯ: 'm', ᶆ: 'm', ń: 'n', ň: 'n', ņ: 'n', ṋ: 'n', ȵ: 'n', ṅ: 'n', ṇ: 'n',\r\n      ǹ: 'n', ɲ: 'n', ṉ: 'n', ƞ: 'n', ᵰ: 'n', ᶇ: 'n', ɳ: 'n', ñ: 'n', ǌ: 'nj', ó: 'o', ŏ: 'o', ǒ: 'o',\r\n      ô: 'o', ố: 'o', ộ: 'o', ồ: 'o', ổ: 'o', ỗ: 'o', ö: 'oe', ȫ: 'o', ȯ: 'o', ȱ: 'o', ọ: 'o', ő: 'o',\r\n      ȍ: 'o', ò: 'o', ỏ: 'o', ơ: 'o', ớ: 'o', ợ: 'o', ờ: 'o', ở: 'o', ỡ: 'o', ȏ: 'o', ꝋ: 'o', ꝍ: 'o',\r\n      ⱺ: 'o', ō: 'o', ṓ: 'o', ṑ: 'o', ǫ: 'o', ǭ: 'o', ø: 'o', ǿ: 'o', õ: 'o', ṍ: 'o', ṏ: 'o', ȭ: 'o',\r\n      ƣ: 'oi', ꝏ: 'oo', ɛ: 'e', ᶓ: 'e', ɔ: 'o', ᶗ: 'o', ȣ: 'ou', ṕ: 'p', ṗ: 'p', ꝓ: 'p', ƥ: 'p', ᵱ: 'p',\r\n      ᶈ: 'p', ꝕ: 'p', ᵽ: 'p', ꝑ: 'p', ꝙ: 'q', ʠ: 'q', ɋ: 'q', ꝗ: 'q', ŕ: 'r', ř: 'r', ŗ: 'r', ṙ: 'r',\r\n      ṛ: 'r', ṝ: 'r', ȑ: 'r', ɾ: 'r', ᵳ: 'r', ȓ: 'r', ṟ: 'r', ɼ: 'r', ᵲ: 'r', ᶉ: 'r', ɍ: 'r', ɽ: 'r',\r\n      ↄ: 'c', ꜿ: 'c', ɘ: 'e', ɿ: 'r', ß: 'ss', ś: 's', ṥ: 's', š: 's', ṧ: 's', ş: 's', ŝ: 's', ș: 's',\r\n      ṡ: 's', ṣ: 's', ṩ: 's', ʂ: 's', ᵴ: 's', ᶊ: 's', ȿ: 's', ɡ: 'g', ᴑ: 'o', ᴓ: 'o', ᴝ: 'u', ť: 't',\r\n      ţ: 't', ṱ: 't', ț: 't', ȶ: 't', ẗ: 't', ⱦ: 't', ṫ: 't', ṭ: 't', ƭ: 't', ṯ: 't', ᵵ: 't', ƫ: 't',\r\n      ʈ: 't', ŧ: 't', ᵺ: 'th', ɐ: 'a', ᴂ: 'ae', ǝ: 'e', ᵷ: 'g', ɥ: 'h', ʮ: 'h', ʯ: 'h', ᴉ: 'i', ʞ: 'k',\r\n      ꞁ: 'l', ɯ: 'm', ɰ: 'm', ᴔ: 'oe', ɹ: 'r', ɻ: 'r', ɺ: 'r', ⱹ: 'r', ʇ: 't', ʌ: 'v', ʍ: 'w', ʎ: 'y',\r\n      ꜩ: 'tz', ú: 'u', ŭ: 'u', ǔ: 'u', û: 'u', ṷ: 'u', ü: 'ue', ǘ: 'u', ǚ: 'u', ǜ: 'u', ǖ: 'u', ṳ: 'u',\r\n      ụ: 'u', ű: 'u', ȕ: 'u', ù: 'u', ủ: 'u', ư: 'u', ứ: 'u', ự: 'u', ừ: 'u', ử: 'u', ữ: 'u', ȗ: 'u',\r\n      ū: 'u', ṻ: 'u', ų: 'u', ᶙ: 'u', ů: 'u', ũ: 'u', ṹ: 'u', ṵ: 'u', ᵫ: 'ue', ꝸ: 'um', ⱴ: 'v', ꝟ: 'v',\r\n      ṿ: 'v', ʋ: 'v', ᶌ: 'v', ⱱ: 'v', ṽ: 'v', ꝡ: 'vy', ẃ: 'w', ŵ: 'w', ẅ: 'w', ẇ: 'w', ẉ: 'w', ẁ: 'w',\r\n      ⱳ: 'w', ẘ: 'w', ẍ: 'x', ẋ: 'x', ᶍ: 'x', ý: 'y', ŷ: 'y', ÿ: 'y', ẏ: 'y', ỵ: 'y', ỳ: 'y', ƴ: 'y',\r\n      ỷ: 'y', ỿ: 'y', ȳ: 'y', ẙ: 'y', ɏ: 'y', ỹ: 'y', ź: 'z', ž: 'z', ẑ: 'z', ʑ: 'z', ⱬ: 'z', ż: 'z',\r\n      ẓ: 'z', ȥ: 'z', ẕ: 'z', ᵶ: 'z', ᶎ: 'z', ʐ: 'z', ƶ: 'z', ɀ: 'z', ﬀ: 'ff', ﬃ: 'ffi', ﬄ: 'ffl', ﬁ: 'fi',\r\n      ﬂ: 'fl', ĳ: 'ij', œ: 'oe', ﬆ: 'st', ₐ: 'a', ₑ: 'e', ᵢ: 'i', ⱼ: 'j', ₒ: 'o', ᵣ: 'r', ᵤ: 'u', ᵥ: 'v',\r\n      ₓ: 'x',\r\n    };\r\n    return input.replace(/[^A-Za-z0-9\\[\\] ]/g, (a) => (latinMap[a] || a));\r\n  }\r\n\r\n  static readQueryStringParameters(url: string): Record<string, string> {\r\n    const queryParams: Record<string, string> = {};\r\n    url.split('&').forEach(f => {\r\n      if (f.split('=').length === 2) {\r\n        queryParams[f.split('=')[0]] = decodeURIComponent(f.split('=')[1].replace(/\\+/g, ' '));\r\n      }\r\n    });\r\n    return queryParams;\r\n  }\r\n\r\n  /** https://stackoverflow.com/questions/979975/how-to-get-the-value-from-the-get-parameters/1099670#1099670 */\r\n  static getUrlParams(qs: string) {\r\n    qs = qs.split('+').join(' ');\r\n\r\n    const params: Record<string, string> = {};\r\n    let tokens;\r\n    const re = /[?&]?([^=]+)=([^&]*)/g;\r\n\r\n    // tslint:disable-next-line:no-conditional-assignment\r\n    while (tokens = re.exec(qs)) {\r\n      params[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  static replaceUrlParam(url: string, paramName: string, paramValue: string) {\r\n    if (paramValue === null) { paramValue = ''; }\r\n\r\n    const pattern = new RegExp('\\\\b(' + paramName + '=).*?(&|#|$)');\r\n    if (url.search(pattern) >= 0) { return url.replace(pattern, '$1' + paramValue + '$2'); }\r\n\r\n    url = url.replace(/[?#]$/, '');\r\n    return url + (url.indexOf('?') > 0 ? '&' : '?') + paramName + '=' + paramValue;\r\n  }\r\n\r\n  static getUrlPrefix(area: 'system' | 'zone' | 'app' | 'appShared', eavConfig: FormConfiguration) {\r\n    let result = '';\r\n\r\n    if (area === 'system') { result = eavConfig.systemRoot; } // used to link to JS-stuff and similar\r\n    if (area === 'zone') { result = eavConfig.portalRoot; } // used to link to the site-root (like an image)\r\n    if (area === 'app') { result = eavConfig.appRoot; } // used to find the app-root of something inside an app\r\n    if (area === 'appShared') { result = eavConfig.appSharedRoot; } // used to find the app-root of something inside an app\r\n    if (result.endsWith('/')) { result = result.substring(0, result.length - 1); }\r\n\r\n    return result;\r\n  }\r\n\r\n  static calculatePathFromRoot(route: ActivatedRoute) {\r\n    let lastChild = route;\r\n    while (lastChild.firstChild) {\r\n      lastChild = lastChild.firstChild;\r\n    }\r\n    let pathFromRoot = '';\r\n    for (const path of lastChild.snapshot.pathFromRoot) {\r\n      if (path.url.length <= 0) { continue; }\r\n      for (const urlSegment of path.url) {\r\n        if (!urlSegment.path) { continue; }\r\n        pathFromRoot += '/' + urlSegment.path;\r\n      }\r\n    }\r\n    return pathFromRoot;\r\n  }\r\n}\r\n","import { EavEntity, EavEntityAttributes } from '.';\r\nimport { EavContentTypeAttributesDto } from '../json-format-v1';\r\nimport { InputTypeStrict } from '../../../../content-type-fields/constants/input-type.constants';\r\n\r\nexport class EavContentTypeAttribute {\r\n  InputType: InputTypeStrict;\r\n  IsTitle: boolean;\r\n  Metadata: EavEntity[];\r\n  Name: string;\r\n  Settings: EavEntityAttributes;\r\n  Type: string;\r\n\r\n  private static convertOne(ctAttributeDto: EavContentTypeAttributesDto): EavContentTypeAttribute {\r\n    const metadata = EavEntity.convertMany(ctAttributeDto.Metadata);\r\n    const settings = EavEntityAttributes.mergeSettings(metadata);\r\n\r\n    const attribute: EavContentTypeAttribute = {\r\n      InputType: ctAttributeDto.InputType,\r\n      IsTitle: ctAttributeDto.IsTitle,\r\n      Metadata: metadata,\r\n      Name: ctAttributeDto.Name,\r\n      Settings: settings,\r\n      Type: ctAttributeDto.Type,\r\n    };\r\n    return attribute;\r\n  }\r\n\r\n  static convertMany(ctAttributesDto: EavContentTypeAttributesDto[]): EavContentTypeAttribute[] {\r\n    if (ctAttributesDto == null) { return []; }\r\n\r\n    const attributes = ctAttributesDto.map(attribute1 => EavContentTypeAttribute.convertOne(attribute1));\r\n    return attributes;\r\n  }\r\n}\r\n","import { EavContentTypeAttribute, EavEntity, EavEntityAttributes } from '.';\r\nimport { EavContentTypeDto } from '../json-format-v1';\r\n\r\nexport class EavContentType {\r\n  Attributes: EavContentTypeAttribute[];\r\n  Description: string;\r\n    /** The NameId / Guid of this Content-Type */\r\n  Id: string;\r\n  Metadata: EavEntity[];\r\n  Name: string;\r\n  Scope: string;\r\n  Settings: EavEntityAttributes;\r\n\r\n  static convertOne(contentTypeDto: EavContentTypeDto): EavContentType {\r\n    const attributes = EavContentTypeAttribute.convertMany(contentTypeDto.Attributes);\r\n    const metadata = EavEntity.convertMany(contentTypeDto.Metadata);\r\n    const settings = EavEntityAttributes.mergeSettings(metadata);\r\n\r\n    const contentType: EavContentType = {\r\n      Attributes: attributes,\r\n      Description: contentTypeDto.Description,\r\n      Id: contentTypeDto.Id,\r\n      Metadata: metadata,\r\n      Name: contentTypeDto.Name,\r\n      Scope: contentTypeDto.Scope,\r\n      Settings: settings,\r\n    };\r\n    return contentType;\r\n  }\r\n\r\n  static convertMany(contentTypesDto: EavContentTypeDto[]): EavContentType[] {\r\n    if (contentTypesDto == null) { return null; }\r\n\r\n    const contentTypes = contentTypesDto.map(contentTypeDto => EavContentType.convertOne(contentTypeDto));\r\n    return contentTypes;\r\n  }\r\n}\r\n","export class EavDimension {\r\n  Value: string;\r\n\r\n  static create(value: string): EavDimension {\r\n    return { Value: value, } satisfies EavDimension;\r\n  }\r\n}\r\n","import { EavValue } from '.';\r\nimport { EavValuesDto } from '../json-format-v1';\r\n\r\nexport class EavField<T> {\r\n  Values: EavValue<T>[];\r\n  Type: string;\r\n\r\n  static convert<T>(valueDto: EavValuesDto<T>, type: string): EavField<T> {\r\n    const values = EavValue.convert(valueDto);\r\n    return {\r\n      Values: values,\r\n      Type: type,\r\n    } satisfies EavField<T>;\r\n  }\r\n}\r\n","import { EavEntity, EavField } from '.';\r\nimport { EavAttributesDto } from '../json-format-v1';\r\n\r\nexport class EavEntityAttributes {\r\n  [attributeName: string]: EavField<any>;\r\n\r\n  static convert(attributesDto: EavAttributesDto): EavEntityAttributes {\r\n    const attributes: EavEntityAttributes = {};\r\n\r\n    // loop attribute types - String, Boolean, ...\r\n    for (const [typeName, attributeDto] of Object.entries(attributesDto)) {\r\n      // loop attribute names - Description, Name, ...\r\n      for (const [attributeName, valueDto] of Object.entries(attributeDto)) {\r\n        attributes[attributeName] = EavField.convert(valueDto, typeName);\r\n      }\r\n    }\r\n    return attributes;\r\n  }\r\n\r\n  static mergeSettings(metadataItems: EavEntity[]): EavEntityAttributes {\r\n    if (metadataItems == null) { return {}; }\r\n\r\n    const merged: EavEntityAttributes = {};\r\n    // copy metadata settings which are not @All\r\n    for (const item of metadataItems) {\r\n      if (item.Type.Id === '@All') { continue; }\r\n\r\n      for (const [name, value] of Object.entries(item.Attributes)) {\r\n        const copy: EavField<any> = { ...value };\r\n        merged[name] = copy;\r\n      }\r\n    }\r\n\r\n    // copy @All metadata settings, overwriting previous settings\r\n    for (const item of metadataItems) {\r\n      if (item.Type.Id !== '@All') { continue; }\r\n\r\n      for (const [name, value] of Object.entries(item.Attributes)) {\r\n        // do not overwrite previous settings if @All is empty\r\n        const exists = merged[name] != null;\r\n        const emptyAll = value.Values[0].Value === '';\r\n        if (exists && emptyAll) { continue; }\r\n\r\n        const copy: EavField<any> = { ...value };\r\n        merged[name] = copy;\r\n      }\r\n    }\r\n    return merged;\r\n  }\r\n}\r\n","import { EavEntityAttributes, EavFor, EavType } from '.';\r\nimport { EavEntityDto } from '../json-format-v1';\r\n\r\nexport class EavEntity {\r\n  Attributes: EavEntityAttributes;\r\n  Guid: string;\r\n  Id: number;\r\n  Owner: string;\r\n  Type: EavType;\r\n  Version: number;\r\n  For?: EavFor;\r\n  Metadata?: EavEntity[];\r\n\r\n  static convertOne(entityDto: EavEntityDto): EavEntity {\r\n    const attributes = EavEntityAttributes.convert(entityDto.Attributes);\r\n    const metadata = this.convertMany(entityDto.Metadata);\r\n\r\n    const entity: EavEntity = {\r\n      Attributes: attributes,\r\n      Guid: entityDto.Guid,\r\n      Id: entityDto.Id,\r\n      Owner: entityDto.Owner,\r\n      Type: entityDto.Type,\r\n      Version: entityDto.Version,\r\n      For: entityDto.For,\r\n      Metadata: metadata,\r\n    };\r\n    return entity;\r\n  }\r\n\r\n  static convertMany(entitiesDto: EavEntityDto[]): EavEntity[] {\r\n    if (entitiesDto == null) { return null; }\r\n\r\n    const entities = entitiesDto.map(entityDto => EavEntity.convertOne(entityDto));\r\n    return entities;\r\n  }\r\n}\r\n","import { EavEntity } from '.';\r\nimport { EavEntityBundleDto } from '../json-format-v1';\r\nimport { ItemIdentifierHeader } from '../../../../shared/models/edit-form.model';\r\n\r\nexport class EavItem {\r\n  Entity: EavEntity;\r\n  Header: ItemIdentifierHeader;\r\n\r\n  static convert(entityBundleDto: EavEntityBundleDto): EavItem {\r\n    const entity = EavEntity.convertOne(entityBundleDto.Entity);\r\n\r\n    const item: EavItem = {\r\n      Entity: entity,\r\n      Header: entityBundleDto.Header,\r\n    };\r\n    return item;\r\n  }\r\n}\r\n","import { EavDimension } from '.';\r\nimport { EavValuesDto } from '../json-format-v1';\r\n\r\nexport class EavValue<T> {\r\n  Value: T;\r\n  Dimensions: EavDimension[];\r\n\r\n  static create<T>(value: T, dimensions: EavDimension[]): EavValue<T> {\r\n    const eavValue: EavValue<T> = {\r\n      Value: value,\r\n      Dimensions: dimensions,\r\n    };\r\n    return eavValue;\r\n  }\r\n\r\n  static convert<T>(valuesDto: EavValuesDto<T>): EavValue<T>[] {\r\n    const values = Object.entries(valuesDto).map(([langs, value]) => {\r\n      const dimensions = langs.split(',').map(lang => EavDimension.create(lang));\r\n      return this.create(value, dimensions);\r\n    });\r\n    return values;\r\n  }\r\n}\r\n","import { signal } from '@angular/core';\r\nimport { EntityCollectionServiceBase, EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n/**\r\n * Creates BehaviorSubject for cached data to be accessible in both synchronous and asynchronous manner with cache$.\r\n * WARNING! Do not use entities$\r\n */\r\nexport class BaseDataService<T> extends EntityCollectionServiceBase<T> {\r\n  /**\r\n   * WIP trying to support signals and observables at the same time\r\n   */\r\n  cache = signal<T[]>([]); // wip signals\r\n\r\n  /** Old / existing functionality with observables */\r\n  cache$ = new BehaviorSubject<T[]>([]);\r\n\r\n  constructor(cacheName: string, serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super(cacheName, serviceElementsFactory);\r\n\r\n    // doesn't need to be completed because store services are singletons that live as long as the browser tab is open\r\n    this.entities$.subscribe(items => {\r\n      // wip signals; ATM I believe it must happen FIRST because the observable will usually trigger\r\n      // some effect, and then the data must already be updated\r\n      this.cache.set(items);\r\n\r\n      this.cache$.next(items);\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { AdamItem } from '../../../../../../../edit-types';\r\nimport { PrefetchAdams } from '../../../dialog/main/edit-dialog-main.models';\r\nimport { BaseDataService } from './base-data.service';\r\nimport { AbstractControl, ValidationErrors } from '@angular/forms';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AdamCacheService extends BaseDataService<AdamSnapshot> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('AdamCache', serviceElementsFactory);\r\n  }\r\n\r\n  loadPrefetch(prefetchAdams: PrefetchAdams): void {\r\n    if (prefetchAdams == null) { return; }\r\n\r\n    const snapshots = Object.entries(prefetchAdams).map(([entityGuid, attributes]) => {\r\n      const snapshot: AdamSnapshot = {\r\n        Guid: entityGuid,\r\n        Attributes: attributes,\r\n      };\r\n      return snapshot;\r\n    });\r\n    this.upsertManyInCache(snapshots);\r\n  }\r\n\r\n  getAdamSnapshot(entityGuid: string, fieldName: string): AdamItem[] {\r\n    return this.cache().find(adamSnapshot => adamSnapshot.Guid === entityGuid)?.Attributes[fieldName];\r\n  }\r\n}\r\n\r\n\r\n\r\nexport interface AdamSnapshot {\r\n  Guid: string;\r\n  Attributes: AdamSnapshotAttributes;\r\n}\r\n\r\ninterface AdamSnapshotAttributes {\r\n  [name: string]: AdamItem[];\r\n}\r\n\r\n\r\n/** Slightly enhanced standard Abstract Control with additional warnings */\r\nexport interface AbstractControlPro extends AbstractControl {\r\n  _warning$?: BehaviorSubject<ValidationErrors>;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { EavEntity } from '../../models/eav';\r\nimport { EavEntityDto } from '../../models/json-format-v1';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ContentTypeItemService extends BaseDataService<EavEntity> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('ContentTypeItem', serviceElementsFactory);\r\n  }\r\n\r\n  addContentTypeItems(contentTypeItems1: EavEntityDto[]): void {\r\n    const contentTypeItems = EavEntity.convertMany(contentTypeItems1);\r\n    this.upsertManyInCache(contentTypeItems);\r\n  }\r\n\r\n  getContentTypeItem(guid: string): EavEntity {\r\n    return this.cache().find(contentTypeItem => contentTypeItem.Guid === guid);\r\n  }\r\n\r\n  getContentTypeItems(guids: string[]): EavEntity[] {\r\n    return this.cache().filter(contentTypeItem => guids.includes(contentTypeItem.Guid));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { map, Observable } from 'rxjs';\r\nimport { EavContentType } from '../../models/eav';\r\nimport { EavContentTypeDto } from '../../models/json-format-v1';\r\nimport { BaseDataService } from './base-data.service';\r\nimport { mapUntilChanged } from '../../../../shared/rxJs/mapUntilChanged';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ContentTypeService extends BaseDataService<EavContentType> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('ContentType', serviceElementsFactory);\r\n  }\r\n\r\n  addContentTypes(contentTypes1: EavContentTypeDto[]): void {\r\n    const contentTypes = EavContentType.convertMany(contentTypes1);\r\n    this.addManyToCache(contentTypes);\r\n  }\r\n\r\n  getContentType(id: string): EavContentType {\r\n    return this.cache().find(contentType => contentType.Id === id);\r\n  }\r\n\r\n  getContentType$(id: string): Observable<EavContentType> {\r\n    return this.cache$.pipe(\r\n      map(contentTypes => contentTypes.find(contentType => contentType.Id === id)),\r\n      mapUntilChanged(m => m),\r\n    );\r\n  }\r\n}\r\n","import { EntityMetadataMap } from '@ngrx/data';\r\nimport { InputType } from '../../../../content-type-fields/models/input-type.model';\r\nimport { LinkCache, Prefetch, PublishStatus } from '../../../dialog/main/edit-dialog-main.models';\r\nimport { EavContentType, EavEntity, EavItem } from '../../models/eav';\r\nimport { Feature } from '../../../../features/models/feature.model';\r\nimport { Language } from '../../../state/form-languages.model';\r\nimport { FormLanguageInStore } from './language-instance.service';\r\nimport { AdamSnapshot } from './adam-cache.service';\r\n\r\nexport const entityMetadata: EntityMetadataMap = {\r\n  GlobalConfig: {},\r\n  Item: {\r\n    selectId: itemSelectId,\r\n  },\r\n  Feature: {\r\n    selectId: featureSelectId,\r\n  },\r\n  Language: {\r\n    selectId: languageSelectId,\r\n  },\r\n  FormLanguageInStore: {\r\n    selectId: languageInstanceSelectId,\r\n  },\r\n  ContentType: {\r\n    selectId: contentTypeSelectId,\r\n  },\r\n  ContentTypeItem: {\r\n    selectId: contentTypeItemSelectId,\r\n  },\r\n  InputType: {\r\n    selectId: inputTypeSelectId,\r\n  },\r\n  PublishStatus: {\r\n    selectId: publishStatusSelectId,\r\n  },\r\n  Prefetch: {\r\n    selectId: prefetchSelectId,\r\n  },\r\n  // Entity Cache is actually the PickerItem Cache, uses UpperCase Id\r\n  EntityCache: {\r\n    selectId: useLowerCaseId,\r\n  },\r\n  AdamCache: {\r\n    selectId: adamCacheSelectId,\r\n  },\r\n  LinkCache: {\r\n    selectId: linkCacheSelectId,\r\n  },\r\n};\r\n\r\nconst pluralNames = {\r\n  Feature: 'Features', // example\r\n  PublishStatus: 'PublishStatuses',\r\n};\r\n\r\nexport const entityConfig = {\r\n  entityMetadata,\r\n  pluralNames,\r\n};\r\n\r\nfunction itemSelectId(item: EavItem): string {\r\n  return item?.Entity?.Guid;\r\n}\r\n\r\nfunction featureSelectId(feature: Feature): string {\r\n  return feature?.guid;\r\n}\r\n\r\nfunction languageSelectId(language: Language): string {\r\n  return language?.NameId;\r\n}\r\n\r\nfunction languageInstanceSelectId(languageInstance: FormLanguageInStore): number {\r\n  return languageInstance?.formId;\r\n}\r\n\r\nfunction contentTypeSelectId(contentType: EavContentType): string {\r\n  return contentType?.Id;\r\n}\r\n\r\nfunction contentTypeItemSelectId(contentTypeItem: EavEntity): string {\r\n  return contentTypeItem?.Guid;\r\n}\r\n\r\nfunction inputTypeSelectId(inputType: InputType): string {\r\n  return inputType?.Type;\r\n}\r\n\r\nfunction publishStatusSelectId(publishStatus: PublishStatus): number {\r\n  return publishStatus?.formId;\r\n}\r\n\r\nfunction prefetchSelectId(entity: Prefetch): string {\r\n  return entity?._guid;\r\n}\r\n\r\nfunction useLowerCaseId(entity: { id: number } /* PickerItem */): number {\r\n  return entity?.id;\r\n}\r\n\r\nfunction adamCacheSelectId(adamSnapshot: AdamSnapshot): string {\r\n  return adamSnapshot?.Guid;\r\n}\r\n\r\nfunction linkCacheSelectId(link: LinkCache): string {\r\n  return link?.key;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { Observable } from 'rxjs';\r\nimport { InputType } from '../../../../content-type-fields/models/input-type.model';\r\nimport { BaseDataService } from './base-data.service';\r\nimport { EavContentTypeAttribute } from '../../models/eav';\r\nimport { InputTypeName } from '../../../../../../../edit-types/src/InputTypeName';\r\nimport { InputTypeStrict } from '../../../../content-type-fields/constants/input-type.constants';\r\nimport { CalculatedInputType } from '../../../state/fields-configs.model';\r\n\r\n\r\n// TODO: @2dm - try to get out of store, and make it provide signals\r\n@Injectable({ providedIn: 'root' })\r\nexport class InputTypeService extends BaseDataService<InputType> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('InputType', serviceElementsFactory);\r\n  }\r\n\r\n  addInputTypes(inputTypes: InputType[]): void {\r\n    this.addManyToCache(inputTypes);\r\n  }\r\n\r\n  getInputType(type: string): InputType {\r\n    return this.cache().find(i => i.Type === type);\r\n  }\r\n\r\n  getInputTypes(): InputType[] {\r\n    return this.cache();\r\n  }\r\n\r\n  getInputTypes$(): Observable<InputType[]> {\r\n    return this.cache$;\r\n  }\r\n\r\n  getInputTypeNames(attributes: EavContentTypeAttribute[]): InputTypeName[] {\r\n    const inputTypes = this.getInputTypes();\r\n    return attributes.map(attribute => {\r\n      const calculatedInputType = this.calculateInputTypeInt(attribute, inputTypes);\r\n      const inputTypeName: InputTypeName = {\r\n        name: attribute.Name,\r\n        inputType: calculatedInputType.inputType,\r\n      };\r\n      return inputTypeName;\r\n    });\r\n  }\r\n\r\n  calculateInputType(attribute: EavContentTypeAttribute): CalculatedInputType {\r\n    return this.calculateInputTypeInt(attribute, this.getInputTypes());\r\n  }\r\n  \r\n  private calculateInputTypeInt(attribute: EavContentTypeAttribute, inputTypes: InputType[]): CalculatedInputType {\r\n    const inputType = inputTypes.find(i => i.Type === attribute.InputType);\r\n    const calculated: CalculatedInputType = {\r\n      inputType: attribute.InputType as InputTypeStrict,\r\n      isExternal: inputType ? !!inputType.AngularAssets : false,\r\n    };\r\n    return calculated;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { Observable } from 'rxjs';\r\nimport { BaseDataService } from '.';\r\nimport { Language } from '../../../../shared/models/language.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LanguageService extends BaseDataService<Language> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('Language', serviceElementsFactory);\r\n  }\r\n\r\n  loadLanguages(languages: Language[]): void {\r\n    this.addAllToCache(languages);\r\n  }\r\n\r\n  getLanguages(): Language[] {\r\n    return this.cache();\r\n  }\r\n\r\n  getLanguages$(): Observable<Language[]> {\r\n    return this.cache$.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { AdamItem } from '../../../../../../../edit-types';\r\nimport { LinkCache, LinkInfo, PrefetchAdams, PrefetchLinks } from '../../../dialog/main/edit-dialog-main.models';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LinkCacheService extends BaseDataService<LinkCache> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('LinkCache', serviceElementsFactory);\r\n  }\r\n\r\n  loadPrefetch(prefetchLinks: PrefetchLinks, prefetchAdam: PrefetchAdams): void {\r\n    const links: LinkCache[] = [];\r\n\r\n    if (prefetchLinks != null) {\r\n      for (const [key, linkInfo] of Object.entries(prefetchLinks)) {\r\n        const link: LinkCache = {\r\n          key,\r\n          linkInfo,\r\n        };\r\n        links.push(link);\r\n      }\r\n    }\r\n\r\n    if (prefetchAdam != null) {\r\n      for (const [entityGuid, prefetchFields] of Object.entries(prefetchAdam)) {\r\n        for (const [fieldName, items] of Object.entries(prefetchFields)) {\r\n          const adamLinks = this.adamToLinks(items);\r\n          links.push(...adamLinks);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.upsertManyInCache(links);\r\n  }\r\n\r\n  loadAdam(items: AdamItem[]): void {\r\n    const adamLinks = this.adamToLinks(items);\r\n    this.upsertManyInCache(adamLinks);\r\n  }\r\n\r\n  loadLink(key: string, linkInfo: LinkInfo): void {\r\n    key = key.trim().toLocaleLowerCase();\r\n    const link: LinkCache = {\r\n      key,\r\n      linkInfo: {\r\n        ...linkInfo,\r\n        Adam: {\r\n          ...linkInfo.Adam,\r\n        },\r\n      },\r\n    };\r\n    this.upsertOneInCache(link);\r\n  }\r\n\r\n  getLinkInfo(key: string): LinkInfo {\r\n    key = key.trim().toLocaleLowerCase();\r\n    return this.cache().find(linkCache => linkCache.key.trim().toLocaleLowerCase() === key)?.linkInfo;\r\n  }\r\n\r\n  private adamToLinks(items: AdamItem[]): LinkCache[] {\r\n    const links: LinkCache[] = [];\r\n\r\n    for (const item of items) {\r\n      if (item.IsFolder) { continue; }\r\n\r\n      const link: LinkCache = {\r\n        key: item.ReferenceId,\r\n        linkInfo: {\r\n          Adam: { ...item },\r\n          Value: item.Url,\r\n        },\r\n      };\r\n      links.push(link);\r\n    }\r\n\r\n    return links;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { Observable } from 'rxjs';\r\nimport { BaseDataService } from './base-data.service';\r\nimport { mapUntilObjChanged } from '../../../../shared/rxJs/mapUntilChanged';\r\nimport { FormConfigService } from '../../../state/form-config.service';\r\nimport { PublishStatus, PublishMode, PublishModes } from '../../../dialog/main/edit-dialog-main.models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PublishStatusService extends BaseDataService<PublishStatus> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('PublishStatus', serviceElementsFactory);\r\n  }\r\n\r\n  private setPublishStatus(publishStatus: PublishStatus): void {\r\n    this.upsertOneInCache(publishStatus);\r\n  }\r\n\r\n  removePublishStatus(formId: number): void {\r\n    this.removeOneFromCache(formId);\r\n  }\r\n\r\n  getPublishStatus(formId: number): PublishStatus {\r\n    return this.cache().find(publishStatus => publishStatus.formId === formId);\r\n  }\r\n\r\n  private getPublishStatus$(formId: number): Observable<PublishStatus> {\r\n    return this.cache$.pipe(\r\n      mapUntilObjChanged(publishStatuses => publishStatuses.find(publishStatus => publishStatus.formId === formId)),\r\n    );\r\n  }\r\n\r\n  /** Convert the booleans to the appropriate \"verb\" */\r\n  asPublishMode(isPublished: boolean, draftShouldBranch: boolean): PublishMode {\r\n    return draftShouldBranch ? PublishModes.Branch : isPublished ? PublishModes.Show : PublishModes.Hide;\r\n  }\r\n\r\n  setPublishMode(publishMode: PublishMode, formId: number, eavService: FormConfigService): void {\r\n    // if publish mode is prohibited, set default\r\n    if (eavService.config.versioningOptions[publishMode] == null) {\r\n      publishMode = Object.keys(eavService.config.versioningOptions)[0] as PublishMode;\r\n    }\r\n    const publishStatus: PublishStatus = {\r\n      formId,\r\n      DraftShouldBranch: publishMode === PublishModes.Branch,\r\n      IsPublished: publishMode === PublishModes.Show,\r\n    };\r\n    this.setPublishStatus(publishStatus);\r\n  }\r\n\r\n  getPublishMode$(formId: number): Observable<PublishMode> {\r\n    return this.getPublishStatus$(formId).pipe(\r\n      mapUntilObjChanged(publishStatus => {\r\n        const publishMode: PublishMode = publishStatus.DraftShouldBranch\r\n          ? PublishModes.Branch\r\n          : publishStatus.IsPublished ? PublishModes.Show : PublishModes.Hide;\r\n        return publishMode;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { computed, Injectable, Injector, Signal } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { map, Observable } from 'rxjs';\r\nimport { FieldSettings, FieldValue } from '../../../../../../../edit-types';\r\nimport { InputType } from '../../../../content-type-fields/models/input-type.model';\r\nimport { eavConstants } from '../../../../shared/constants/eav.constants';\r\nimport { FieldHelper } from '../../helpers';\r\nimport { EavContentTypeAttribute, EavDimension, EavEntity, EavEntityAttributes, EavFor, EavItem, EavValue } from '../../models/eav';\r\nimport { EavEntityBundleDto } from '../../models/json-format-v1';\r\nimport { BaseDataService } from './base-data.service';\r\nimport { ControlHelpers } from '../../helpers/control.helpers';\r\nimport { LocalizationHelpers } from '../../../localization/localization.helpers';\r\nimport { ItemEditIdentifier, ItemIdentifierHeader } from '../../../../shared/models/edit-form.model';\r\nimport { EavLogger } from '../../../../shared/logging/eav-logger';\r\nimport { RxHelpers } from '../../../../shared/rxJs/rx.helpers';\r\nimport { mapUntilChanged, mapUntilObjChanged } from '../../../../shared/rxJs/mapUntilChanged';\r\nimport { BestValueModes } from '../../../localization/localization.constants';\r\nimport { Language } from 'projects/eav-ui/src/app/shared/models/language.model';\r\nimport { SaveResult } from '../../../state/save-result.model';\r\nimport { ItemValuesOfLanguage } from '../../../state/item-values-of-language.model';\r\nimport { FormLanguage } from '../../../state/form-languages.model';\r\n\r\nconst logThis = false;\r\nconst nameOfThis = 'ItemService';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ItemService extends BaseDataService<EavItem> {\r\n  log = new EavLogger(nameOfThis, logThis);\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('Item', serviceElementsFactory);\r\n  }\r\n\r\n  loadItems(dtoItems: EavEntityBundleDto[]): void {\r\n    const items = dtoItems.map(item => EavItem.convert(item));\r\n    this.upsertManyInCache(items);\r\n  }\r\n\r\n  updateItemId(itemData: SaveResult): void {\r\n    const entityGuid = Object.keys(itemData)[0];\r\n    const entityId = itemData[entityGuid];\r\n    const oldItem = this.cache().find(item => item.Entity.Guid === entityGuid);\r\n    if (!oldItem || ((oldItem.Header as ItemEditIdentifier).EntityId !== 0 && oldItem.Entity.Id !== 0))\r\n      return;\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Header: {\r\n        ...oldItem.Header,\r\n        EntityId: entityId,\r\n      },\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Id: entityId,\r\n      }\r\n    };\r\n    this.updateOneInCache(newItem);\r\n  }\r\n\r\n  updateItemMetadata(entityGuid: string, metadata: EavEntity[]): void {\r\n    const oldItem = this.cache().find(item => item.Entity.Guid === entityGuid);\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Metadata: metadata,\r\n      }\r\n    };\r\n    this.updateOneInCache(newItem);\r\n  }\r\n\r\n  addItemAttributeValue(\r\n    entityGuid: string,\r\n    attributeKey: string,\r\n    newValue: FieldValue,\r\n    currentLanguage: string,\r\n    isReadOnly: boolean,\r\n    attributeType: string,\r\n    isTransaction = false,\r\n    transactionItem?: EavItem,\r\n  ): EavItem {\r\n    const newValueDimension = isReadOnly ? `~${currentLanguage}` : currentLanguage;\r\n    const newEavValue = EavValue.create(newValue, [EavDimension.create(newValueDimension)]);\r\n    const oldItem = transactionItem ?? this.cache().find(item => item.Entity.Guid === entityGuid);\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Attributes: LocalizationHelpers.addAttributeValue(oldItem.Entity.Attributes, newEavValue, attributeKey, attributeType),\r\n      }\r\n    };\r\n\r\n    if (!isTransaction) { this.updateOneInCache(newItem); }\r\n    return newItem;\r\n  }\r\n\r\n  updateItemAttributeValue(\r\n    entityGuid: string,\r\n    attributeKey: string,\r\n    newValue: FieldValue,\r\n    language: FormLanguage,\r\n    isReadOnly: boolean,\r\n  ): void {\r\n    const oldItem = this.cache().find(item => item.Entity.Guid === entityGuid);\r\n    if (!oldItem) return;\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Attributes: LocalizationHelpers.updateAttributeValue(\r\n          oldItem.Entity.Attributes, attributeKey, newValue, language, isReadOnly,\r\n        ),\r\n      }\r\n    };\r\n    this.updateOneInCache(newItem);\r\n  }\r\n\r\n  updateItemAttributesValues(entityGuid: string, newValues: ItemValuesOfLanguage, language: FormLanguage): void {\r\n    const oldItem = this.cache().find(item => item.Entity.Guid === entityGuid);\r\n    if (!oldItem) return;\r\n\r\n    const oldValues: ItemValuesOfLanguage = {};\r\n    for (const [name, values] of Object.entries(oldItem.Entity.Attributes)) {\r\n      if (!newValues.hasOwnProperty(name))\r\n        continue;\r\n      oldValues[name] = LocalizationHelpers.translate(language, values, null);\r\n    }\r\n    const changes = ControlHelpers.getFormChanges(oldValues, newValues);\r\n    if (changes == null)\r\n      return;\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Attributes: LocalizationHelpers.updateAttributesValues(oldItem.Entity.Attributes, changes, language),\r\n      }\r\n    };\r\n    this.updateOneInCache(newItem);\r\n  }\r\n\r\n  /**\r\n   * Update entity attribute dimension. Add readonly languageKey to existing useFromLanguageKey.\r\n   * Example to useFrom en-us add fr-fr = \"en-us,-fr-fr\"\r\n   */\r\n  addItemAttributeDimension(\r\n    entityGuid: string,\r\n    attributeKey: string,\r\n    currentLanguage: string,\r\n    shareWithLanguage: string,\r\n    defaultLanguage: string,\r\n    isReadOnly: boolean,\r\n    transactionItem?: EavItem,\r\n  ): void {\r\n    const oldItem = transactionItem ?? this.cache().find(item => item.Entity.Guid === entityGuid);\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Attributes: LocalizationHelpers.addAttributeDimension(\r\n          oldItem.Entity.Attributes, attributeKey, currentLanguage, shareWithLanguage, defaultLanguage, isReadOnly,\r\n        ),\r\n      }\r\n    };\r\n    this.updateOneInCache(newItem);\r\n  }\r\n\r\n  removeItemAttributeDimension(\r\n    entityGuid: string,\r\n    fieldName: string,\r\n    current: string,\r\n    delayUpsert = false,\r\n    transactionItem?: EavItem,\r\n  ): EavItem {\r\n    const l = this.log.fn('removeItemAttributeDimension', { entityGuid, attributeKey: fieldName, currentLanguage: current, isTransaction: delayUpsert, transactionItem });\r\n    const oldItem = transactionItem ?? this.cache().find(item => item.Entity.Guid === entityGuid);\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Attributes: LocalizationHelpers.removeAttributeDimension(oldItem.Entity.Attributes, fieldName, current),\r\n      }\r\n    };\r\n\r\n    if (!delayUpsert)\r\n      this.updateOneInCache(newItem);\r\n    return l.r(newItem);\r\n  }\r\n\r\n  updateItemHeader(entityGuid: string, header: ItemIdentifierHeader): void {\r\n    const l = this.log.fn('updateItemHeader', { entityGuid, header });\r\n    const oldItem = this.cache().find(item => item.Entity.Guid === entityGuid);\r\n    if (!oldItem) return;\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Header: {\r\n        ...header\r\n      }\r\n    };\r\n    this.updateOneInCache(newItem);\r\n    l.end();\r\n  }\r\n\r\n  getItem(entityGuid: string): EavItem {\r\n    return this.cache().find(item => item.Entity.Guid === entityGuid);\r\n  }\r\n\r\n  item(entityGuid: string): Signal<EavItem> {\r\n    // try cached signal first\r\n    return this.#itemCache[entityGuid]\r\n      ? this.#itemCache[entityGuid]\r\n      : this.#itemCache[entityGuid] = computed(\r\n          () => this.cache().find(item => item.Entity.Guid === entityGuid),\r\n          { equal: RxHelpers.objectsEqual },\r\n        );\r\n  }\r\n  #itemCache: Record<string, Signal<EavItem>> = {};\r\n\r\n  itemAttributes(entityGuid: string): Signal<EavEntityAttributes> {\r\n    const l = this.log.fn('itemAttributes', { entityGuid });\r\n    // try cached signal first\r\n    return this.#itemAttributesCache[entityGuid]\r\n      ? l.r(this.#itemAttributesCache[entityGuid], 'cached')\r\n      : this.#itemAttributesCache[entityGuid] = computed(\r\n          () => this.item(entityGuid)()?.Entity.Attributes,\r\n          { equal: RxHelpers.objectsEqual },\r\n        );\r\n  }\r\n  #itemAttributesCache: Record<string, Signal<EavEntityAttributes>> = {};\r\n\r\n  getItemAttributes(entityGuid: string): EavEntityAttributes {\r\n    const l = this.log.fn('getItemAttributes', { entityGuid });\r\n    const result = this.cache().find(item => item.Entity.Guid === entityGuid)?.Entity.Attributes;\r\n    return l.r(result);\r\n  }\r\n\r\n  getItemAttributes$(entityGuid: string): Observable<EavEntityAttributes> {\r\n    return this.cache$.pipe(\r\n      map(items => items.find(item => item.Entity.Guid === entityGuid)?.Entity.Attributes),\r\n      mapUntilChanged(m => m),\r\n    );\r\n  }\r\n\r\n  /** Sync get-item-for info to show metadata-target info on an entity in the UI */\r\n  getItemFor(entityGuid: string): EavFor {\r\n    return this.cache().find(item => item.Entity.Guid === entityGuid)?.Entity.For;\r\n  }\r\n\r\n  getItemNote(entityGuid: string): EavEntity {\r\n    return this.cache()\r\n      .find(item => item.Entity.Guid === entityGuid)?.Entity.Metadata\r\n      ?.find(metadata => metadata.Type.Name === eavConstants.contentTypes.notes);\r\n  }\r\n\r\n  getItemHeader(entityGuid: string): ItemIdentifierHeader {\r\n    return this.cache().find(item => item.Entity.Guid === entityGuid)?.Header;\r\n  };\r\n\r\n  getItemHeader$(entityGuid: string): Observable<ItemIdentifierHeader> {\r\n    return this.cache$.pipe(\r\n      map(items => items.find(item => item.Entity.Guid === entityGuid)?.Header),\r\n      mapUntilObjChanged(m => m),\r\n    );\r\n  }\r\n\r\n  slotIsEmpty(entityGuid: string): Signal<boolean> {\r\n    // prepare signal before creating computed so it doesn't get recreated\r\n    const itemHeader = this.item(entityGuid);\r\n    return computed(() => {\r\n      const header = itemHeader()?.Header;\r\n      return header == null ? true : header.IsEmptyAllowed && header.IsEmpty;\r\n    });\r\n  }\r\n\r\n  getItems(entityGuids?: string[]): EavItem[] {\r\n    if (entityGuids == null) { return this.cache(); }\r\n\r\n    return this.cache().filter(item => entityGuids.includes(item.Entity.Guid));\r\n  }\r\n\r\n  getItems$(entityGuids?: string[]): Observable<EavItem[]> {\r\n    if (entityGuids == null) { return this.cache$.asObservable(); }\r\n\r\n    return this.cache$.pipe(\r\n      map(items => items.filter(item => entityGuids.includes(item.Entity.Guid))),\r\n      mapUntilObjChanged(m => m),\r\n      // distinctUntilChanged(RxHelpers.arraysEqual),\r\n    );\r\n  }\r\n\r\n  setDefaultValue(\r\n    item: EavItem,\r\n    ctAttribute: EavContentTypeAttribute,\r\n    inputType: InputType,\r\n    settings: FieldSettings,\r\n    languages: Language[],\r\n    defaultLanguage: string,\r\n  ): FieldValue {\r\n    const l = this.log.fn('setDefaultValue', { item, ctAttribute, inputType, settings, languages, defaultLanguage }, `Name: ${ctAttribute.Name}`);\r\n    const defaultValue = FieldHelper.getDefaultOrPrefillValue(ctAttribute.Name, inputType?.Type, settings, item.Header);\r\n\r\n    const defaultLanguageValue = LocalizationHelpers.getBestValue(\r\n      item.Entity.Attributes[ctAttribute.Name],\r\n      defaultLanguage,\r\n      defaultLanguage,\r\n      BestValueModes.Strict,\r\n    );\r\n    // 2023-08-31 2dm simplified; leave comments in till EOY in case I broke something\r\n    const languageCode = (languages.length === 0 || inputType?.DisableI18n) ? '*' : defaultLanguage;\r\n    if (defaultLanguageValue === undefined) {\r\n      this.addItemAttributeValue(item.Entity.Guid, ctAttribute.Name, defaultValue, languageCode, false, ctAttribute.Type);\r\n    } else {\r\n      // most likely used only for entity fields because we can never know if they were cleaned out or brand new\r\n      this.updateItemAttributeValue(item.Entity.Guid, ctAttribute.Name, defaultValue, { current: languageCode, primary: defaultLanguage }, false);\r\n    }\r\n\r\n    // return what was used, so it can be checked on form-init\r\n    return defaultValue;\r\n  }\r\n}\r\n","import { inject, Injectable, Injector, Signal } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { map, Observable, shareReplay } from 'rxjs';\r\nimport { EntityReader } from '../../helpers';\r\nimport { BaseDataService } from './base-data.service';\r\nimport { toSignal } from '@angular/core/rxjs-interop';\r\nimport { mapUntilChanged } from '../../../../shared/rxJs/mapUntilChanged';\r\nimport { FormLanguage, FormLanguageComplete } from '../../../state/form-languages.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LanguageInstanceService extends BaseDataService<FormLanguageInStore> {\r\n  private injector = inject(Injector);\r\n\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('FormLanguageInStore', serviceElementsFactory);\r\n  }\r\n\r\n  addToStore(formId: number, primary: string, current: string, hideHeader: boolean): void {\r\n    this.addOneToCache({\r\n      formId,\r\n      current,\r\n      initial: current,\r\n      primary,\r\n      hideHeader,\r\n    } satisfies FormLanguageInStore);\r\n  }\r\n\r\n  removeFromStore(formId: number): void {\r\n    this.removeOneFromCache(formId);\r\n  }\r\n\r\n  setCurrent(formId: number, newLanguage: string): void {\r\n    this.updateOneInCache({\r\n      formId,\r\n      current: newLanguage,\r\n    } satisfies Partial<FormLanguageInStore>);\r\n  }\r\n\r\n  /**\r\n   * Get an EntityReader for the current form\r\n   */\r\n  getEntityReader$(formId: number) {\r\n    return this.getLanguage$(formId)  // This is already distinctUntilChanged\r\n      .pipe(\r\n        map((language) => new EntityReader(language.current, language.primary)),\r\n        // Ensure the EntityReader is reused and not recreated every time\r\n        shareReplay(1)\r\n      );\r\n  }\r\n\r\n  getEntityReader(formId: number): Signal<EntityReader> {\r\n    return toSignal(this.getEntityReader$(formId), { injector: this.injector });\r\n  }\r\n\r\n  getLanguage$(formId: number): Observable<FormLanguageComplete> {\r\n    // if (this.get$Cache[formId])\r\n    //   return this.get$Cache[formId];\r\n\r\n    return /* this.get$Cache[formId] = */ this.cache$.pipe(\r\n      map(languageInstances => {\r\n        const found = languageInstances.find(l => l.formId === formId);\r\n        return {\r\n          ...FormLanguage.empty,\r\n          ...found,\r\n        } satisfies FormLanguageComplete;\r\n      }),\r\n      mapUntilChanged(m => m),\r\n      // distinctUntilChanged(),\r\n      // Ensure the EntityReader is reused and not recreated every time\r\n      // todo: this probably doesn't have a real effect...\r\n      shareReplay(1)\r\n    );\r\n  }\r\n  // private get$Cache: Record<number, Observable<FormLanguageComplete>> = {};\r\n\r\n  // getLanguageSignal(formId: number,): Signal<FormLanguageComplete> {\r\n  //   return toSignal(this.getLanguage$(formId));\r\n  // }\r\n\r\n\r\n  /** Get hideHeader for the form. Fix for safari and mobile browsers */\r\n  getHideHeader$(formId: number): Observable<boolean> {\r\n    return this.cache$.pipe(\r\n      map(languageInstances => languageInstances.find(languageInstance => languageInstance.formId === formId)?.hideHeader),\r\n      mapUntilChanged(m => m),\r\n      // distinctUntilChanged(),\r\n    );\r\n  }\r\n\r\n  /** Update hideHeader for the form. Fix for safari and mobile browsers */\r\n  updateHideHeader(formId: number, hideHeader: boolean): void {\r\n    const languageInstance: Partial<FormLanguageInStore> = { formId, hideHeader };\r\n    this.updateOneInCache(languageInstance);\r\n  }\r\n}\r\n\r\nexport interface FormLanguageInStore extends FormLanguageComplete {\r\n  formId: number;\r\n  hideHeader: boolean;\r\n}\r\n","import { EntityReader } from '../shared/helpers';\r\nimport { FieldSettings } from '../../../../../edit-types';\r\nimport { InputType } from '../../content-type-fields/models/input-type.model';\r\nimport { ItemIdentifierEditConfig } from '../../shared/models/edit-form.model';\r\nimport { FieldLogicManager } from '../fields/logic/field-logic-manager';\r\nimport { TranslateMenuHelpers } from '../fields/wrappers/localization/translate-menu/translate-menu.helpers';\r\nimport { TranslationStateCore } from '../fields/wrappers/localization/translate-menu/translate-menu.models';\r\nimport { EavContentType, EavContentTypeAttribute, EavEntity, EavField } from '../shared/models/eav';\r\nimport { EmptyFieldHelpers } from '../fields/basic/empty-field-helpers';\r\nimport { TranslationLinks } from '../localization/translation-link.constants';\r\nimport { LocalizationHelpers } from '../localization/localization.helpers';\r\nimport { MetadataDecorators } from './metadata-decorators.constants';\r\nimport { ContentTypeSettings } from './content-type-settings.model';\r\nimport { TranslationState } from './fields-configs.model';\r\nimport { FormLanguage } from './form-languages.model';\r\n\r\nexport class ContentTypeSettingsHelpers {\r\n\r\n  /**\r\n   * Initialize the default settings of a ContentType to ensure everything is set or empty-string etc.\r\n   * @returns \r\n   */\r\n  static initDefaultSettings(reader: EntityReader, contentType: EavContentType, itemHeader: ItemIdentifierEditConfig): ContentTypeSettings {\r\n    const metadata = reader.flattenAll<ContentTypeSettings>(contentType.Metadata);\r\n    const defaultSettings = { ...metadata };\r\n    defaultSettings.Description ??= '';\r\n    defaultSettings.EditInstructions ??= '';\r\n    defaultSettings.Features ??= '';\r\n    defaultSettings.Label ??= '';\r\n    defaultSettings.ListInstructions ??= '';\r\n    defaultSettings.Notes ??= '';\r\n    defaultSettings.Icon ??= '';\r\n    defaultSettings.Link ??= '';\r\n    defaultSettings._itemTitle = this.getContentTypeTitle(contentType, reader);\r\n    defaultSettings._slotCanBeEmpty = itemHeader.IsEmptyAllowed ?? false;\r\n    defaultSettings._slotIsEmpty = itemHeader.IsEmpty ?? false;\r\n    return defaultSettings;\r\n  }\r\n\r\n  static getContentTypeTitle(contentType: EavContentType, language: FormLanguage): string {\r\n    try {\r\n      // xx ContentType is a historic bug and should be fixed when JSONs are rechecked\r\n      const type = contentType.Metadata.find(metadata => metadata.Type.Name === 'ContentType' || metadata.Type.Name === 'xx ContentType');\r\n      let label = (type)\r\n        ? LocalizationHelpers.getValueOrDefault(type.Attributes.Label, language)?.Value\r\n        : null;\r\n      label = label || contentType.Name;\r\n      return label;\r\n    } catch (error) {\r\n      return contentType.Name;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport class FieldsSettingsHelpers {\r\n\r\n  static setDefaultFieldSettings(settings: FieldSettings): FieldSettings {\r\n    const defaultSettings = AllDeprecated.moveDeprecatedSettings({ ...settings });\r\n    // update @All settings\r\n    defaultSettings.Name ??= '';\r\n    defaultSettings.Placeholder ??= '';\r\n    defaultSettings.Notes ??= '';\r\n    // defaultSettings.VisibleInEditUI ??= true;\r\n    defaultSettings.Required ??= false;\r\n    defaultSettings.Disabled ??= false;\r\n    defaultSettings.DisableTranslation ??= false;\r\n    defaultSettings.Visible ??= true; // defaultSettings.VisibleInEditUI;\r\n    // delete defaultSettings.VisibleInEditUI;\r\n    if (defaultSettings.DefaultCollapsed != null) {\r\n      defaultSettings.Collapsed = defaultSettings.DefaultCollapsed;\r\n      delete defaultSettings.DefaultCollapsed;\r\n    }\r\n    defaultSettings.Formulas ??= [];\r\n    let logic = FieldLogicManager.singleton().get(settings.InputType);\r\n    defaultSettings.DisableAutoTranslation ??= !logic?.canAutoTranslate;\r\n    return defaultSettings;\r\n  }\r\n\r\n  /** Find if DisableTranslation is true in any setting and in any language */\r\n  static findDisableTranslation(\r\n    contentTypeMetadata: EavEntity[],\r\n    inputType: InputType,\r\n    attributeValues: EavField<any>,\r\n    defaultLanguage: string,\r\n    attributeMetadata: EavEntity[],\r\n  ): boolean {\r\n    // disable translation if LanguagesDecorator in ContentType is false in any language\r\n    const languagesDecorator = contentTypeMetadata.find(m => m.Type.Name === MetadataDecorators.LanguagesDecorator);\r\n    if (languagesDecorator?.Attributes.Enabled?.Values.some(eavValue => eavValue.Value === false))\r\n      return true;\r\n\r\n    if (inputType?.DisableI18n)\r\n      return true;\r\n\r\n    if (!LocalizationHelpers.hasValueOnPrimary(attributeValues, defaultLanguage))\r\n      return true;\r\n\r\n    // disable translation if DisableTranslation is true in any language in @All, @String, @string-default, etc...\r\n    for (const metadataItem of attributeMetadata ?? []) {\r\n      if (metadataItem.Attributes.DisableTranslation?.Values.some(eavValue => eavValue.Value === true))\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  static findIsLastInGroup(contentType: EavContentType, attribute: EavContentTypeAttribute): boolean {\r\n    const index = contentType.Attributes.indexOf(attribute);\r\n    if (contentType.Attributes[index + 1] == null) return true;\r\n\r\n    const indexOfFirstEmpty = contentType.Attributes.findIndex(a => EmptyFieldHelpers.isGroupStart(a.InputType));\r\n    if (index < indexOfFirstEmpty) return false;\r\n\r\n    if (EmptyFieldHelpers.isGroupEnd(attribute.InputType)) return true;\r\n\r\n    if (EmptyFieldHelpers.endsPreviousGroup(contentType.Attributes[index + 1].InputType)) return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  static getDisabledBecauseTranslations(\r\n    attributeValues: EavField<any>,\r\n    disableTranslation: boolean,\r\n    language: FormLanguage,\r\n  ): boolean {\r\n    if (language.current === language.primary) return false;\r\n    if (!LocalizationHelpers.hasValueOnPrimary(attributeValues, language.primary)) return true;\r\n    if (disableTranslation) return true;\r\n    if (LocalizationHelpers.hasEditableValue(attributeValues, language)) return false;\r\n    if (LocalizationHelpers.hasReadonlyValue(attributeValues, language.current)) return true;\r\n    return true;\r\n  }\r\n\r\n  static getTranslationState(\r\n    attributeValues: EavField<any>,\r\n    disableTranslation: boolean,\r\n    language: FormLanguage,\r\n  ): TranslationState {\r\n    let infoLabel: string;\r\n    let infoMessage: string;\r\n\r\n    if (disableTranslation) {\r\n      infoLabel = 'LangMenu.InAllLanguages';\r\n      infoMessage = '';\r\n    } else if (!LocalizationHelpers.hasValueOnPrimary(attributeValues, language.primary)) {\r\n      infoLabel = 'LangMenu.MissingDefaultLangValue';\r\n      infoMessage = language.primary;\r\n    } else {\r\n      const editableTranslationExists = LocalizationHelpers.hasEditableValue(attributeValues, language);\r\n      const readonlyTranslationExists = LocalizationHelpers.hasReadonlyValue(attributeValues, language.current);\r\n\r\n      if (editableTranslationExists || readonlyTranslationExists) {\r\n        const dimensions = LocalizationHelpers.getValueTranslation(attributeValues, language)\r\n          .Dimensions.map(dimension => dimension.Value)\r\n          .filter(dimension => !dimension.includes(language.current));\r\n\r\n        const isShared = dimensions.length > 0;\r\n        if (isShared) {\r\n          if (editableTranslationExists)\r\n            infoLabel = 'LangMenu.In';\r\n          else if (readonlyTranslationExists)\r\n            infoLabel = 'LangMenu.From';\r\n\r\n          infoMessage = TranslateMenuHelpers.calculateSharedInfoMessage(dimensions, language.current);\r\n        } else {\r\n          infoLabel = '';\r\n          infoMessage = '';\r\n        }\r\n      } else {\r\n        infoLabel = 'LangMenu.UseDefault';\r\n        infoMessage = '';\r\n      }\r\n    }\r\n    const state = this.getTranslationStateCore(attributeValues, disableTranslation, language);\r\n    const translationState: TranslationState = {\r\n      infoLabel,\r\n      infoMessage,\r\n      language: state.language,\r\n      linkType: state.linkType,\r\n    };\r\n    return translationState;\r\n  }\r\n\r\n  private static getTranslationStateCore(\r\n    attributeValues: EavField<any>,\r\n    disableTranslation: boolean,\r\n    language: FormLanguage,\r\n  ): TranslationStateCore {\r\n    // Determine is control disabled or enabled and info message\r\n    if (!LocalizationHelpers.hasValueOnPrimary(attributeValues, language.primary))\r\n      return { language: '', linkType: TranslationLinks.MissingDefaultLangValue }\r\n\r\n    if (disableTranslation)\r\n      return { language: '', linkType: TranslationLinks.DontTranslate }\r\n\r\n    if (LocalizationHelpers.hasEditableValue(attributeValues, language)) {\r\n      const editableElements = LocalizationHelpers.getValueTranslation(attributeValues, language)\r\n        .Dimensions.filter(dimension => dimension.Value !== language.current);\r\n\r\n      return (editableElements.length > 0)\r\n        ? { language: editableElements[0].Value, linkType: TranslationLinks.LinkReadWrite }\r\n        : { language: '', linkType: TranslationLinks.Translate }\r\n    }\r\n\r\n    if (LocalizationHelpers.hasReadonlyValue(attributeValues, language.current)) {\r\n      const readOnlyElements = LocalizationHelpers.getValueTranslation(attributeValues, language)\r\n        .Dimensions.filter(dimension => dimension.Value !== language.current);\r\n\r\n      return { language: readOnlyElements[0].Value, linkType: TranslationLinks.LinkReadOnly, }\r\n    }\r\n\r\n    return { language: '', linkType: TranslationLinks.DontTranslate, }\r\n  }\r\n}\r\n\r\nclass AllDeprecated {\r\n  /** @deprecated */\r\n  VisibleInEditUI: boolean;\r\n  /** VisibleInEditUi is copied Visible and then deleted */\r\n  static moveDeprecatedSettings(settings: FieldSettings): FieldSettings {\r\n    var asDeprecated = settings as unknown as AllDeprecated;\r\n    if (asDeprecated.VisibleInEditUI == null) return settings;\r\n    settings.Visible = asDeprecated.VisibleInEditUI;\r\n    delete asDeprecated.VisibleInEditUI;\r\n    return settings;\r\n  }\r\n}\r\n","import { Injectable, Injector, Signal, inject, signal } from '@angular/core';\r\nimport { DialogContext } from '../../app-administration/models';\r\nimport { keyPartOfPage, keyPublishing, partOfPageDefault } from '../../shared/constants/session.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { EditSettings } from '../dialog/main/edit-dialog-main.models';\r\nimport { Observable } from 'rxjs';\r\nimport { LanguageInstanceService } from '../shared/store/ngrx-data/language-instance.service';\r\nimport { EavLogger } from '../../shared/logging/eav-logger';\r\nimport { toSignal } from '@angular/core/rxjs-interop';\r\nimport { FormConfiguration, VersioningOptions } from './form-configuration.model';\r\nimport { FormLanguageComplete, FormLanguagesConfig } from './form-languages.model';\r\n\r\nconst logThis = false;\r\nconst nameOfThis = 'FormConfigService';\r\n\r\nexport const webApiEditRoot = 'cms/edit/';\r\n\r\n/**\r\n * Service which tell us about a single edit-form configuration.\r\n * \r\n * Things such as language, IDs shown on it, edit-settings etc.\r\n */\r\n@Injectable()\r\nexport class FormConfigService {\r\n  /** no constructor */\r\n  constructor() {}\r\n\r\n  log = new EavLogger(nameOfThis, logThis);\r\n\r\n  /**\r\n   * Important! These are constants that form was loaded with.\r\n   * They are initialized in the main edit-form.\r\n   * They do not change while form is running\r\n   */\r\n  config: FormConfiguration;\r\n\r\n  // WIP, null at first\r\n  configSignal = signal<FormConfiguration>(null);\r\n\r\n  /**\r\n   * Current form language information\r\n   */\r\n  language: Signal<FormLanguageComplete>;\r\n\r\n  /**\r\n   * Current edit settings\r\n   * Note: Clean use - only used by classes that inject this themselves\r\n   */\r\n  settings: EditSettings;\r\n\r\n  /**\r\n   * Form language configuration, not meant to change during runtime...\r\n   */\r\n  languages: FormLanguagesConfig;\r\n\r\n  /** Used to fetch form data and fill up eavConfig. Do not use anywhere else */\r\n  private context = inject(Context);\r\n  private languageService = inject(LanguageInstanceService);\r\n  private injector = inject(Injector);\r\n\r\n  /** Create EavConfiguration from sessionStorage */\r\n  initFormConfig(\r\n    dialogContext: DialogContext,\r\n    formId: number,\r\n    isParentDialog: boolean,\r\n    itemGuids: string[],\r\n    createMode: boolean,\r\n    isCopy: boolean,\r\n    enableHistory: boolean,\r\n    settings: EditSettings\r\n  ) {\r\n    this.settings = settings;\r\n    this.languages = {\r\n      initial: dialogContext.Language.Current,\r\n      primary: dialogContext.Language.Primary,\r\n      list: dialogContext.Language.List,\r\n    };\r\n    this.config = {\r\n      zoneId: this.context.zoneId,\r\n      appId: this.context.appId,\r\n      appRoot: dialogContext.App.Url,\r\n      appSharedRoot: dialogContext.App.SharedUrl,\r\n      moduleId: this.context.moduleId?.toString(),\r\n      partOfPage: sessionStorage.getItem(keyPartOfPage) ?? partOfPageDefault,\r\n      portalRoot: dialogContext.Site.Url,\r\n      tabId: this.context.tabId?.toString(),\r\n      systemRoot: window.location.pathname.split('/dist/')[0] + '/',\r\n      versioningOptions: this.getVersioningOptions(\r\n        sessionStorage.getItem(keyPartOfPage) === 'true',\r\n        sessionStorage.getItem(keyPublishing)\r\n      ),\r\n      formId,\r\n      isParentDialog,\r\n      itemGuids,\r\n      createMode,\r\n      isCopy,\r\n      enableHistory,\r\n      enableFormulaSave: dialogContext.Enable.FormulaSave ?? false,\r\n      overrideEditRestrictions: dialogContext.Enable.OverrideEditRestrictions ?? false,\r\n      dialogContext,\r\n      settings,\r\n    };\r\n    this.configSignal.set(this.config);\r\n    this.language = toSignal(this.language$, { injector: this.injector });\r\n  }\r\n\r\n  private getVersioningOptions(\r\n    partOfPage: boolean,\r\n    publishing: string\r\n  ): VersioningOptions {\r\n\r\n    const allowAll: VersioningOptions = { show: true, hide: true, branch: true };\r\n    \r\n    if (!partOfPage)\r\n      return allowAll;\r\n\r\n    const publish = publishing || '';\r\n    switch (publish) {\r\n      case '':\r\n      case 'DraftOptional':\r\n        return allowAll;\r\n      case 'DraftRequired':\r\n        // Note: the key 'show' should not be added, as the code later picks the first property to set the default\r\n        // Branch should also be first, as it's the preferred option\r\n        return { branch: true, hide: true };\r\n      case 'DraftForbidden':\r\n        return { show: true };\r\n      default: {\r\n        console.error(`Invalid versioning requirements: ${publish}`);\r\n        return {};\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the language observable for the form - it will keep track of the current language as it changes.\r\n   * TODO: try to use the signal as much as possible\r\n   */\r\n  get language$(): Observable<FormLanguageComplete> {\r\n    return this._language$ ??= this.languageService.getLanguage$(this.config.formId);\r\n  }\r\n  private _language$: Observable<FormLanguageComplete>;\r\n\r\n\r\n}\r\n","import { Language } from '../../shared/models/language.model';\r\n\r\nexport { Language } from '../../shared/models/language.model';\r\n\r\nexport class FormLanguage\r\n{\r\n  /** The current language of the system / UI. */\r\n  current: string;\r\n\r\n  /** The primary language of the system.\r\n   * Important, because the primary language must be filled in before all other languages.\r\n   */\r\n  primary: string;\r\n\r\n  /**\r\n   * In some cases we want both to be primary, but it's not clear why.\r\n   * I think it's just because we want certain tests to only use one value, but the test is meant for 2 values.\r\n   */\r\n  static bothPrimary(original: FormLanguage): FormLanguage {\r\n    return {\r\n      current: original.primary,\r\n      primary: original.primary\r\n    };\r\n  }\r\n\r\n  static diffCurrent(original: FormLanguage, current: string): FormLanguage {\r\n    return {\r\n      current: current,\r\n      primary: original.primary\r\n    };\r\n  }\r\n\r\n  static empty(): FormLanguageComplete {\r\n    return {\r\n      current: '',\r\n      primary: '',\r\n      initial: '',\r\n    };\r\n  }\r\n}\r\n\r\nexport class FormLanguageComplete extends FormLanguage {\r\n  /** initial language of the UI */\r\n  initial: string;\r\n}\r\n\r\nexport interface FormLanguagesConfig\r\n{\r\n  initial: string;\r\n  primary: string;\r\n  list: Language[];\r\n}\r\n\r\n","export const MetadataDecorators = {\r\n  LanguagesDecorator: 'LanguagesDecorator',\r\n  SaveEmptyDecorator: 'SaveEmptyDecorator',\r\n} as const;\r\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { EavLogger } from '../logging/eav-logger';\r\n\r\n// 2024-06-12 2dm experimental - remove comments if all is good mid of June\r\n// - previously had\r\n// @Directive()  // Needs the @Directive() so the compiler allows OnDestroy to be implemented\r\n@Component({\r\n  selector: 'app-base-component',\r\n  template: ''\r\n})\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class BaseComponent implements OnDestroy {\r\n  \r\n  /** Holds all subscriptions to be unsubscribed on destroy */\r\n  protected subscriptions = new Subscription();\r\n\r\n  constructor(public log?: EavLogger) {\r\n    this.log ??= new EavLogger('BaseComponent', false);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n}\r\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit, Type, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DialogConfig } from '../../models/dialog-config.model';\r\nimport { EavWindow } from '../../models/eav-window.model';\r\nimport { Context } from '../../services/context';\r\nimport { EavLogger } from '../../logging/eav-logger';\r\nimport { BaseComponent } from '../base.component';\r\nimport { NavigateFormResult } from '../../../edit/shared/services/edit-routing.service';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nconst logThis = false;\r\nconst nameOfThis = 'DialogEntryComponent';\r\n\r\n@Component({\r\n  selector: 'app-dialog-entry',\r\n  templateUrl: './dialog-entry.component.html',\r\n  styleUrls: ['./dialog-entry.component.scss'],\r\n  standalone: true,\r\n  imports: [],\r\n  providers: [\r\n    Context, // this is used in the dialog to get the correct App\r\n  ],\r\n})\r\nexport class DialogEntryComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  private dialogData: Record<string, any>;\r\n  private dialogRef: MatDialogRef<any>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super(new EavLogger(nameOfThis, logThis));\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.dialogData = navigation?.extras?.state || {};\r\n  }\r\n\r\n  // 2dm experimental - may improve readability where this is used\r\n  // static routeFor(dialog: DialogConfig, data?: Data): Partial<Route> {\r\n  //   return { component: DialogEntryComponent, data: { ...data, dialog: dialog } };\r\n  // }\r\n\r\n  ngOnInit() {\r\n    const l = this.log.fn('ngOnInit');\r\n    const dialogConfig: DialogConfig = this.route.snapshot.data.dialog;\r\n    if (dialogConfig == null)\r\n      throw new Error(`Could not find config for dialog. Did you forget to add DialogConfig to route data?`);\r\n\r\n    l.a('Open dialog: '+ dialogConfig.name, { id: this.context.id, context: this.context });\r\n\r\n    dialogConfig.getComponent().then(component => {\r\n      // spm Workaround for \"feature\" where you can't open new dialog while last one is still opening\r\n      // https://github.com/angular/components/commit/728cf1c8ebd49e089f4bae945511bb0918972c26\r\n      const dialog = (this.dialog as any);\r\n      if (dialog._dialogAnimatingOpen && dialog._lastDialogRef)\r\n        (dialog._lastDialogRef as MatDialogRef<any>).afterOpened()\r\n          .subscribe(() => this.openDialogComponent(dialogConfig, component));\r\n      else\r\n        this.openDialogComponent(dialogConfig, component);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dialogRef.close();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  private openDialogComponent(dialogConfig: DialogConfig, component: Type<any>) {\r\n    this.log.a(`Open dialog(initContext: ${dialogConfig.initContext})`, { name: dialogConfig.name, 'Contextid:': this.context.log.svcId, 'Context:': this.context });\r\n    if (dialogConfig.initContext)\r\n      this.context.init(this.route);\r\n\r\n    this.dialogRef = this.dialog.open(component, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: this.dialogData,\r\n      panelClass: [\r\n        'dialog-panel',\r\n        `dialog-panel-${dialogConfig.panelSize}`,\r\n        dialogConfig.showScrollbar ? 'show-scrollbar' : 'no-scrollbar',\r\n        ...(dialogConfig.panelClass ? dialogConfig.panelClass : []),\r\n      ],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n\r\n    this.dialogRef.afterClosed().subscribe((data: any) => {\r\n      this.log.a('Dialog was closed - name:' + dialogConfig.name, { data });\r\n\r\n      const navRes = data as NavigateFormResult;\r\n      if (navRes?.navigateUrl != null) {\r\n        this.router.navigate([navRes.navigateUrl]);\r\n        return;\r\n      }\r\n\r\n      if (this.route.pathFromRoot.length <= 3) {\r\n        try {\r\n          window.parent.$2sxc.totalPopup.close();\r\n        } catch (error) { }\r\n        return;\r\n      }\r\n\r\n      if (this.route.snapshot.url.length > 0)\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent, state: data });\r\n      else\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent.parent, state: data });\r\n    });\r\n\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","export const DialogTypeConstants = {\r\n  Zone: 'zone',\r\n  Apps: 'apps',\r\n  AppImport: 'app-import',\r\n  App: 'app',\r\n  ContentType: 'contenttype',\r\n  ContentItems: 'contentitems',\r\n  Edit: 'edit',\r\n  ItemHistory: 'item-history',\r\n  Develop: 'develop',\r\n  PipelineDesigner: 'pipeline-designer',\r\n  Replace: 'replace',\r\n  InstanceList: 'instance-list',\r\n} as const;\r\n\r\nexport type DialogTypeConstant = typeof DialogTypeConstants[keyof typeof DialogTypeConstants];\r\n","const MetadataKeyTypes = {\r\n  Guid: 'guid',\r\n  String: 'string',\r\n  Number: 'number',\r\n} as const;\r\nexport type MetadataKeyType = typeof MetadataKeyTypes[keyof typeof MetadataKeyTypes];\r\n\r\nexport interface ScopeOption {\r\n  name: string;\r\n  value: string;\r\n}\r\n\r\nexport const SystemSettingsScopes = {\r\n  App: 'app',\r\n  Site: 'site',\r\n} as const;\r\nexport type SystemSettingsScope = typeof SystemSettingsScopes[keyof typeof SystemSettingsScopes];\r\n\r\nexport const EditApiKeyPaths = {\r\n  GoogleTranslate: 'Settings.GoogleTranslate.ApiKey',\r\n  GoogleMaps: 'Settings.GoogleMaps.ApiKey',\r\n} as const;\r\n\r\nexport interface MetadataKeyDefinition {\r\n  targetType: number;\r\n  target: string;\r\n  label: string;\r\n  keyType: MetadataKeyType;\r\n  hint?: string;\r\n}\r\n\r\n\r\nexport const eavConstants = {\r\n  metadata: {\r\n    /** Metadata of Attribute */\r\n    // tslint:disable-next-line:max-line-length\r\n    attribute: { targetType: 2, target: 'EAV Field Properties', label: 'Content-Type Field/Attribute (2)', keyType: MetadataKeyTypes.Number },\r\n    /** Metadata of App */\r\n    app: { targetType: 3, target: 'App', label: 'App (3)', keyType: MetadataKeyTypes.Number },\r\n    /** Metadata of Entity */\r\n    entity: { targetType: 4, target: 'Entity', label: 'Entity (4)', keyType: MetadataKeyTypes.Guid },\r\n    /** Metadata of ContentType */\r\n    contentType: { targetType: 5, target: 'ContentType', label: 'Content-Type (5)', keyType: MetadataKeyTypes.String },\r\n    /** Metadata of Zone */\r\n    zone: { targetType: 6, target: 'Zone', label: 'Zone (6) - not used as of now', keyType: MetadataKeyTypes.Number },\r\n    /** Metadata of Language (a Dimension) */\r\n    language: { targetType: 8, target: 'Dimension', label: 'Language (8)', keyType: MetadataKeyTypes.String },\r\n    /** Metadata of CmsObject */\r\n    cmsObject: { targetType: 10, target: 'CmsObject', label: 'Cms Object (10)', keyType: MetadataKeyTypes.String, hint: 'Usually this is \"file:400\" or \"folder:4030\"' },\r\n  } satisfies Record<string, MetadataKeyDefinition>,\r\n\r\n  appMetadata: {\r\n    LightSpeed: { ContentTypeName: 'LightSpeedOutputDecorator' }\r\n  },\r\n\r\n  /** Lookup type for the metadata, e.g. key=80adb152-efad-4aa4-855e-74c5ef230e1f is keyType=guid */\r\n  keyTypes: {\r\n    guid: MetadataKeyTypes.Guid,\r\n    string: MetadataKeyTypes.String,\r\n    number: MetadataKeyTypes.Number,\r\n  },\r\n\r\n  /** Scopes */\r\n  scopes: {\r\n    /** This is the main schema and the data you usually see is from here */\r\n    default: { name: 'Default', value: 'Default' },\r\n    configuration: { name: 'Configuration (Views etc.)', value: 'System.Configuration' },\r\n  },\r\n\r\n  /** Content types where templates, permissions, etc. are stored */\r\n  contentTypes: {\r\n    /** Content type containing app's specifications */\r\n    appConfiguration: '2SexyContent-App',\r\n    /** Content type containing app's views */\r\n    template: '2SexyContent-Template',\r\n    /** Content type containing permissions */\r\n    permissions: 'PermissionConfiguration',\r\n    /** Content type containing queries */\r\n    query: 'DataPipeline',\r\n    /** Content type containing content type metadata */\r\n    contentType: 'ContentType',\r\n    /** Content type containing app's custom settings */\r\n    settings: 'App-Settings',\r\n    /** Content type containing app's custom resources */\r\n    resources: 'App-Resources',\r\n    /** Content type containing app's system settings */\r\n    systemSettings: 'SettingsSystem',\r\n    /** Content type containing app's system resources */\r\n    systemResources: 'ResourcesSystem',\r\n    /** Content type containing Primary and Global App custom settings */\r\n    customSettings: 'SettingsCustom',\r\n    /** Content type containing Primary and Global App custom resources */\r\n    customResources: 'ResourcesCustom',\r\n    /** Content type containing formulas */\r\n    formulas: 'UiFormula',\r\n    /** Content type containing notes */\r\n    notes: 'NoteDecorator',\r\n    /** Content type containing settings for image scaling */\r\n    imageDecorator: 'ImageDecorator',\r\n  },\r\n\r\n  pipelineDesigner: {\r\n    dataSourceDifficulties: {\r\n      default: 100,\r\n      advanced: 200,\r\n    },\r\n    outDataSource: {\r\n      Description: 'The template/script which will show this data',\r\n      EntityGuid: 'Out',\r\n      In: ['Default', 'Header'],\r\n      Name: '2sxc Target (View or API)',\r\n      PartAssemblyAndType: 'SexyContentTemplate',\r\n      PrimaryType: 'Target',\r\n      VisualDesignerData: { Top: 20, Left: 200, Width: 700 },\r\n    },\r\n    defaultPipeline: {\r\n      dataSources: [\r\n        {\r\n          EntityGuid: 'unsaved1',\r\n          PartAssemblyAndType: 'ToSic.Sxc.DataSources.CmsBlock, ToSic.Sxc',\r\n          VisualDesignerData: { Top: 170, Left: 440 },\r\n        }\r\n      ],\r\n      streamWiring: [\r\n        { From: 'unsaved1', Out: 'Header', To: 'Out', In: 'Header' },\r\n        { From: 'unsaved1', Out: 'Default', To: 'Out', In: 'Default' },\r\n      ],\r\n    },\r\n    testParameters: '[Demo:Demo]=true',\r\n  },\r\n};\r\n","export const prefix = 'eav-';\r\nexport const keyZoneId = prefix + 'zoneId';\r\nexport const keyContentBlockId = prefix + 'cbid';\r\nexport const keyModuleId = prefix + 'mid';\r\nexport const keyAppId = prefix + 'appId';\r\nexport const keyDebug = prefix + 'debug';\r\nexport const keyDialog = prefix + 'dialog';\r\nexport const keyContentType = prefix + 'contentType';\r\nexport const keyItems = prefix + 'items';\r\nexport const keyPartOfPage = prefix + 'partOfPage';\r\nexport const keyPublishing = prefix + 'publishing';\r\nexport const keyFilters = prefix + 'filters';\r\nexport const keyPipelineId = prefix + 'pipelineId';\r\n\r\n/** WIP v16.01 */\r\nexport const keyEditFields = prefix + 'uifields';\r\n\r\n/** Url which opened the dialog. Used for debugging */\r\nexport const keyUrl = prefix + 'url';\r\n\r\n/** This is used by file editor to determine if it's editing shared files or of that portal only */\r\nexport const keyIsShared = prefix + 'isshared';\r\n\r\n/** Contains extra options for dialogs */\r\nexport const keyExtras = prefix + 'extras';\r\n\r\n/** Fallback value in case it is missing in url */\r\nexport const partOfPageDefault = 'false';\r\n","import { Directive, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\r\nimport tippy, { Instance, Placement, Props } from 'tippy.js';\r\n\r\n// tslint:disable-next-line:directive-selector\r\n@Directive({ selector: '[tippy]', standalone: true })\r\nexport class TippyDirective implements OnChanges, OnDestroy {\r\n  /** Message to show in Tippy */\r\n  @Input() tippy: string | null | undefined;\r\n\r\n  /** disable Tippy */\r\n  @Input() tippyDisabled: string | boolean | null | undefined;\r\n\r\n  /**\r\n   * 'top' | 'top-start' | 'top-end' |\r\n   * 'right' | 'right-start' | 'right-end' |\r\n   * 'bottom' | 'bottom-start' | 'bottom-end' |\r\n   * 'left' | 'left-start' | 'left-end' |\r\n   * 'auto' | 'auto-start' | 'auto-end'\r\n   */\r\n  @Input() tippyPlacement: string | null | undefined;\r\n\r\n  /** delay showing Tippy in ms */\r\n  @Input() tippyShowDelay: string | number | null | undefined;\r\n\r\n  /** enable html in Tippy */\r\n  @Input() tippyAllowHtml: boolean | null | undefined;\r\n\r\n  /** show arrow in Tippy - only respected on setup, changes ATM not handled */\r\n  @Input() tippyArrow: boolean | null | undefined;\r\n\r\n  private tooltip: Instance<Props>;\r\n\r\n  constructor(private elementRef: ElementRef<HTMLElement>) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    // Init Tooltip on first round\r\n    if (this.tooltip == null)\r\n      this.tooltip = tippy(this.elementRef.nativeElement, {\r\n        animation: 'scale-subtle',\r\n        arrow: !!this.tippyArrow,\r\n        duration: [100, 50],\r\n        placement: 'bottom',\r\n        theme: '2sxc',\r\n        allowHTML: !!this.tippyAllowHtml,\r\n      });\r\n\r\n    if (changes['tippy'] != null)\r\n      this.tooltip.setContent(this.tippy);\r\n\r\n    if (changes['tippyDisabled'] != null)\r\n      this.tippyDisabled ? this.tooltip.disable() : this.tooltip.enable();\r\n\r\n    if (changes['tippyPlacement'] != null)\r\n      this.tooltip.setProps({ placement: this.tippyPlacement as Placement });\r\n\r\n    if (changes['tippyShowDelay'] != null) {\r\n      const showDelay = typeof this.tippyShowDelay === 'number' ? this.tippyShowDelay : parseInt(this.tippyShowDelay, 10);\r\n      this.tooltip.setProps({ delay: [showDelay, null] });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.tooltip?.destroy();\r\n  }\r\n}\r\n","export class ArrayHelpers {\r\n  /**\r\n   * Toggles an item in an array. If the item is not in the array, it is added. If it is in the array, it is removed.\r\n   * @param item The item to toggle\r\n   * @param array The array to toggle the item in\r\n   */\r\n  static toggleInArray<T>(item: T, array: T[]): void {\r\n    const index = array.indexOf(item);\r\n    if (index === -1) {\r\n      array.push(item);\r\n    } else {\r\n      array.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n","import { environment } from '../../../environments/environment';\r\n\r\n/**\r\n * Enable logging of different messages.\r\n *\r\n * When needed, add new keys for new \"segments\"\r\n */\r\nconst enableLogging = {\r\n  always: true, // always active\r\n  dev: false,\r\n  store: false,\r\n  editForm: false,\r\n};\r\n\r\nconst warningNoLogShown: Record<string, boolean> = {};\r\n\r\n\r\n/** Log Store changes */\r\nexport function consoleLogStore(message?: any, ...optionalParams: any[]): void {\r\n  consoleLogInternal({ segment: 'store', message, data: optionalParams })\r\n}\r\n\r\n/** Log to Dev lightweight (no stack) - always active */\r\nexport function logMain(message?: any, data?: Record<string, unknown>): void {\r\n  consoleLogObject({ segment: 'always', message, callStack: false, data: data })\r\n}\r\n\r\nfunction consoleLogInternal(\r\n  { segment, message, callStack, data = [] }\r\n    : { segment: keyof typeof enableLogging; message?: any; callStack?: boolean, data?: any[]; }\r\n): void {\r\n  // Skip on production\r\n  if (environment.production) return;\r\n\r\n  // Check if we've already logged a lot to then stop logging\r\n  const segmentUpper = `[${segment?.toUpperCase()}]`;\r\n  if (!enableLogging[segment]) {\r\n    if (warningNoLogShown[segment]) return;\r\n    console.log(`${segmentUpper}-logging disabled, no further messages will show for this segment.`)\r\n    warningNoLogShown[segment] = true;\r\n    return;\r\n  }\r\n\r\n  // Make prefix uppercase if not always\r\n  const prefix = segment === 'always' ? '' : segmentUpper;\r\n\r\n  // New lightweight log, without the entire trace / call stack\r\n  if (callStack == false) {\r\n    if (!data || data.length === 0) {\r\n      console.log(`${prefix} ${message}`)\r\n      return;\r\n    }\r\n\r\n    if (data.length === 1) {\r\n      const show = data[0]\r\n      const len = (typeof (show) === 'string') ? `:${show.length}` : '';\r\n      console.log(`${prefix} ${message} [${typeof (show)}${len}]`, show);\r\n      return;\r\n    }\r\n\r\n    console.log(`${prefix} ${message}`, ...data);\r\n    return;\r\n  }\r\n\r\n  console.groupCollapsed(`${prefix} ${message}`, ...data);\r\n\r\n  // tslint:disable-next-line:no-console\r\n  console.trace();\r\n  console.groupEnd();\r\n}\r\n\r\nfunction consoleLogObject(\r\n  { segment, message, callStack, data = null }\r\n    : { segment: keyof typeof enableLogging; message?: any; callStack?: boolean, data?: Record<string, unknown>; }\r\n): void {\r\n  // Skip on production\r\n  if (environment.production) return;\r\n\r\n  // Check if we've already logged a lot to then stop logging\r\n  const segmentUpper = `[${segment?.toUpperCase()}]`;\r\n  if (!enableLogging[segment]) {\r\n    if (warningNoLogShown[segment]) return;\r\n    console.log(`${segmentUpper}-logging disabled, no further messages will show for this segment.`)\r\n    warningNoLogShown[segment] = true;\r\n    return;\r\n  }\r\n\r\n  // Make prefix uppercase if not always\r\n  const prefix = segment === 'always' ? '' : segmentUpper;\r\n\r\n  // New lightweight log, without the entire trace / call stack\r\n  if (callStack == false) {\r\n    if (!data)\r\n      return console.log(`${prefix} ${message}`)\r\n\r\n    const keys = Object.keys(data);\r\n    if (keys.length === 0)\r\n      return console.log(`${prefix} ${message}`);\r\n\r\n    if (keys.length === 1) {\r\n      const key = keys[0];\r\n      const show = data[key];\r\n      if (typeof (show) === 'string')\r\n        return console.log(`${prefix} ${message} [string:${show.length}] '${key}'='${show}'`);\r\n      return console.log(`${prefix} ${message} [${typeof (show)}}] '${key}'=`, show);\r\n    }\r\n\r\n    console.log(`${prefix} ${message} [${keys.length} data-items]`, data);\r\n    return;\r\n  }\r\n\r\n  console.groupCollapsed(`${prefix} ${message}`, data);\r\n\r\n  // tslint:disable-next-line:no-console\r\n  console.trace();\r\n  console.groupEnd();\r\n}\r\n\r\n","import { EavFor } from '../../edit/shared/models/eav';\r\nimport { eavConstants } from '../constants/eav.constants';\r\nimport { EavLogger } from '../logging/eav-logger';\r\nimport { EditForm, ItemAddIdentifier, ItemEditIdentifier, ItemIdentifierInbound, ItemIdentifierShared, ItemInListIdentifier } from '../models/edit-form.model';\r\n\r\nconst logThis = false;\r\nconst nameOfThis = \"UrlPrepHelper\";\r\n\r\nconst log = new EavLogger(nameOfThis, logThis);\r\n\r\nconst PREFILL_PREFIX = 'prefill:';\r\nconst GROUP_PREFIX = 'group:';\r\nconst FIELDS_PREFIX = 'uifields:';\r\nconst PARAM_PREFIX = 'parameters:';\r\nconst ITEM_SEPARATOR = ',';\r\nconst VAL_SEPARATOR = '&';\r\nconst LIST_SEPARATOR = ':';\r\n\r\nfunction toOrderedParams(values: unknown[]): string {\r\n  return values.join(LIST_SEPARATOR);\r\n}\r\n\r\nexport function convertFormToUrl(form: EditForm) {\r\n  const l = log.fn('convertFormToUrl', { form });\r\n  let formUrl = '';\r\n\r\n  for (const item of form.items) {\r\n    // If we already have one, the next must be separated\r\n    if (formUrl) formUrl += ITEM_SEPARATOR;\r\n\r\n    const asGroup = item as ItemInListIdentifier;\r\n    const asItem = item as ItemEditIdentifier;\r\n    const asInboundParams = item as ItemIdentifierInbound;\r\n    // Fields/Parameters can come from two places\r\n    // When a link is inbound from the page, it will use UiFields/Parameters\r\n    // If it's from the Admin-UI itself, it should use the newer / deeper ClientData\r\n    const fields = asInboundParams.UiFields ?? item.ClientData?.fields;\r\n    const parameters = asInboundParams.Parameters ?? item.ClientData?.parameters;\r\n    // Group- or Inner-Item\r\n    if (asGroup.Parent) {\r\n      l.a(\"asGroup having parent\", {asGroup});\r\n      formUrl += GROUP_PREFIX + toOrderedParams([\r\n        asGroup.Parent,\r\n        asGroup.Field,\r\n        asGroup.Index,\r\n        asGroup.Add,\r\n        asGroup.EntityId\r\n      ]);\r\n      formUrl += prefill2UrlParams(asGroup.Prefill);\r\n      formUrl += fields2UrlParams(fields);\r\n      formUrl += obj2UrlParams(parameters, PARAM_PREFIX);\r\n\r\n    } else if (asItem.EntityId) {\r\n      l.a(\"asItem having entity id\", {asItem});\r\n      // Edit Item\r\n      formUrl += asItem.EntityId;\r\n\r\n      // New: fields\r\n      formUrl += fields2UrlParams(fields);\r\n      formUrl += obj2UrlParams(parameters, PARAM_PREFIX);\r\n\r\n      // 2023-05-11 in edit-id mode, prefill isn't supported, but we want the fields\r\n      // I actually think that prefill should be supported, because it can also transport more parameters\r\n      // formUrl += prefill2UrlParams(groupItem.Prefill, fields);\r\n\r\n      // 2024-05-30 2dm reactivating prefill on edit, for scenarios where new fields were added\r\n      // and for ephemeral control fields\r\n      // 2024-06-01 2dm re-disabled, since this also affects links coming in from the page\r\n      // so this could be an unexpected breaking change...\r\n      // formUrl += prefill2UrlParams(asItem.Prefill);\r\n\r\n    } else if ((item as ItemAddIdentifier).ContentTypeName) {\r\n      l.a(\"asItem having content type name\", {item});\r\n      // Add Item\r\n      const addItem = item as ItemAddIdentifier;\r\n      formUrl += 'new:' + addItem.ContentTypeName;\r\n\r\n      formUrl += getParamForMetadata(addItem);\r\n      formUrl += prefill2UrlParams(addItem.Prefill);\r\n      formUrl += fields2UrlParams(fields);\r\n      formUrl += obj2UrlParams(parameters, PARAM_PREFIX);\r\n\r\n      if (addItem.DuplicateEntity) formUrl += `${VAL_SEPARATOR}copy:` + addItem.DuplicateEntity;\r\n    }\r\n  }\r\n\r\n  return l.r(formUrl);\r\n}\r\n\r\nfunction getParamForMetadata(addItem: ItemAddIdentifier) {\r\n  const l = log.fn(\"getParamForMetadata\", {addItem});\r\n\r\n  // helper function\r\n  const buildForSuffix = (itemFor: EavFor) => toOrderedParams([\r\n    '', // empty string to ensure it will start with a \":\"\r\n    itemFor.Target,\r\n    itemFor.TargetType,\r\n    (itemFor.Singleton ? itemFor.Singleton.toString() : '')\r\n  ]);\r\n\r\n  if (addItem.For?.String)\r\n    return l.r(`${VAL_SEPARATOR}for:s~` + paramEncode(addItem.For.String) + buildForSuffix(addItem.For), \"for string\");\r\n  if (addItem.For?.Number)\r\n    return l.r(`${VAL_SEPARATOR}for:n~` + addItem.For.Number + buildForSuffix(addItem.For), \"for number\");\r\n  if (addItem.For?.Guid)\r\n    return l.r(`${VAL_SEPARATOR}for:g~` + addItem.For.Guid + buildForSuffix(addItem.For), \"for guid\");\r\n  if (addItem.Metadata)\r\n    return l.r(getParamForOldMetadata(addItem), \"metadata\");\r\n  return l.r('', \"other\");\r\n}\r\n\r\nfunction getParamForOldMetadata(addItem: ItemAddIdentifier) {\r\n  const l = log.fn(\"getParamForOldMetadata\", {addItem});\r\n  let keyType: string;\r\n  switch (addItem.Metadata.keyType.toLocaleLowerCase()) {\r\n    case eavConstants.keyTypes.string:\r\n      keyType = 's';\r\n      break;\r\n    case eavConstants.keyTypes.number:\r\n      keyType = 'n';\r\n      break;\r\n    case eavConstants.keyTypes.guid:\r\n      keyType = 'g';\r\n      break;\r\n  }\r\n  const target = Object.values(eavConstants.metadata)\r\n    .find(m => m.targetType === addItem.Metadata.targetType)?.target;\r\n  const result = `${VAL_SEPARATOR}for:` + keyType + '~' + toOrderedParams([\r\n    paramEncode(addItem.Metadata.key),\r\n    target,\r\n    addItem.Metadata.targetType\r\n  ]);\r\n  return l.r(result, result);\r\n}\r\n\r\nfunction prefill2UrlParams(prefill: Record<string, unknown>) {\r\n  return obj2UrlParams(prefill, PREFILL_PREFIX);\r\n}\r\n\r\nfunction obj2UrlParams(obj: Record<string, unknown>, prefix: string) {\r\n  let result = '';\r\n  if (!obj) return result;\r\n  for (const [key, value] of Object.entries(obj)) {\r\n    if (value == null) continue;\r\n    result += `${VAL_SEPARATOR}${prefix}${key}~${paramEncode(value.toString())}`;\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction prefillFromUrlParams(url: string, addTo: Record<string, unknown>): Record<string, unknown> {\r\n  const result = addTo ?? {} as Record<string, string>;\r\n  if (url == null) return result;\r\n  const prefillParams = url.split(LIST_SEPARATOR);\r\n  const key = prefillParams[1].split('~')[0];\r\n  const value = paramDecode(prefillParams[1].split('~')[1]);\r\n  result[key] = value;\r\n  return result;\r\n}\r\n\r\n// function objFromUrlParams(url: string, addTo: Record<string, string>, prefix: string): Record<string, string> {\r\n//   const result = addTo ?? {} as Record<string, string>;\r\n//   if (url == null) return result;\r\n//   const prefillParams = url.split(LIST_SEPARATOR);\r\n//   const key = prefillParams[1].split('~')[0];\r\n//   const value = paramDecode(prefillParams[1].split('~')[1]);\r\n//   result[key] = value;\r\n//   return result;\r\n// }\r\n\r\nfunction fields2UrlParams(fields: string) {\r\n  return fields ? `${VAL_SEPARATOR}${FIELDS_PREFIX}${paramEncode(fields)}` : '';\r\n}\r\n\r\nfunction isNumber(maybeNumber: string): boolean {\r\n  // The regex must be re-created for each test\r\n  return /^[0-9]*$/g.test(maybeNumber);\r\n}\r\n\r\nexport function convertUrlToForm(formUrl: string) {\r\n  const l = log.fn(\"convertUrlToForm\", { formUrl });\r\n  const form: EditForm = { items: [] };\r\n  const items = formUrl.split(ITEM_SEPARATOR);\r\n\r\n  for (const item of items) {\r\n    l.a(\"item\", {item});\r\n    if (item.startsWith(GROUP_PREFIX)) {\r\n      // Inner Item / Group Item\r\n      const innerItem = {} as ItemInListIdentifier;\r\n      const options = item.split(VAL_SEPARATOR);\r\n\r\n      for (const option of options) {\r\n        if (option.startsWith(GROUP_PREFIX)) {\r\n          const parms = option.split(LIST_SEPARATOR);\r\n          innerItem.Parent = parms[1];\r\n          innerItem.Field = parms[2];\r\n          innerItem.Index = parseInt(parms[3], 10);\r\n          innerItem.Add = parms[4] === 'true';\r\n          if (parms.length > 4 && parms[5] && isNumber(parms[5]))\r\n            innerItem.EntityId = parseInt(parms[5], 10);\r\n        } else\r\n          addParamToItemIdentifier(innerItem, option);\r\n      }\r\n      form.items.push(innerItem);\r\n    } else if (isNumber((item ?? '').split(VAL_SEPARATOR)[0])) {\r\n      // Edit Item\r\n      const parts = item.split(VAL_SEPARATOR);\r\n      const editItem: ItemEditIdentifier = { EntityId: parseInt(parts[0], 10) };\r\n      for (const part of parts)\r\n        addParamToItemIdentifier(editItem, part);\r\n      form.items.push(editItem);\r\n    } else if (item.startsWith('new:')) {\r\n      // Add Item\r\n      const addItem = {} as ItemAddIdentifier;\r\n      const options = item.split(VAL_SEPARATOR);\r\n\r\n      for (const option of options) {\r\n        if (option.startsWith('new:')) {\r\n          // Add Item ContentType\r\n          const newParams = option.split(LIST_SEPARATOR);\r\n          addItem.ContentTypeName = newParams[1];\r\n        } else if (option.startsWith('for:')) {\r\n          // Add Item For\r\n          const forParams = option.split(LIST_SEPARATOR);\r\n          const forKeyType = forParams[1].split('~')[0];\r\n          const forKey = forParams[1].split('~')[1];\r\n          const forTarget = forParams[2];\r\n          const forTargetType = parseInt(forParams[3], 10);\r\n          const forSingleton = forParams[4] != null ? forParams[4] === 'true' : undefined;\r\n          addItem.For = {\r\n            Target: forTarget,\r\n            TargetType: forTargetType,\r\n            ...(forKeyType === 'g' && { Guid: forKey }),\r\n            ...(forKeyType === 'n' && { Number: parseInt(forKey, 10) }),\r\n            ...(forKeyType === 's' && { String: paramDecode(forKey) }),\r\n            ...(forSingleton != null && { Singleton: forSingleton }),\r\n          };\r\n        } else if (option.startsWith('copy:')) {\r\n          // Add Item Copy\r\n          const copyParams = option.split(LIST_SEPARATOR);\r\n          addItem.DuplicateEntity = parseInt(copyParams[1], 10);\r\n        } else\r\n          addParamToItemIdentifier(addItem, option);\r\n      }\r\n      form.items.push(addItem);\r\n    }\r\n  }\r\n  return l.r(form);\r\n}\r\n\r\n/** add prefill and filter to url parameters */\r\nfunction addParamToItemIdentifier(item: ItemIdentifierShared, part: string): void {\r\n  const l = log.fn(\"addParamToItemIdentifier\", {item, part});\r\n  if (part.startsWith(FIELDS_PREFIX)) {\r\n    const fields = paramDecode(part.split(':')[1]);\r\n    // temp hacky workaround - put it prefill so it's still there after round-trip\r\n    // should later be on the re-added after the round-trip on the Fields property\r\n    item.Prefill = prefillFromUrlParams(part, { fields });\r\n    item.ClientData = { ...item.ClientData, fields };\r\n    return l.end();\r\n  }\r\n  // Add Item Prefill\r\n  if (part.startsWith(PREFILL_PREFIX)) {\r\n    item.Prefill = prefillFromUrlParams(part, item.Prefill);\r\n    return l.end();\r\n  }\r\n  // Add Item Form\r\n  if (part.startsWith(PARAM_PREFIX)) {\r\n    const formParams = prefillFromUrlParams(part, item.ClientData?.parameters);\r\n    item.ClientData = { ...item.ClientData, parameters: formParams };\r\n    return l.end();\r\n  }\r\n  l.end(null, 'no match');\r\n}\r\n\r\n/** Encodes characters in URL parameter to not mess up routing. Don't forget to decode it! :) */\r\nfunction paramEncode(text: string) {\r\n  return (text ?? '')\r\n    .replace(/\\//g, '%2F')\r\n    .replace(/\\:/g, '%3A')\r\n    .replace(/\\&/g, '%26')\r\n    .replace(/\\~/g, '%7E')\r\n    .replace(/\\,/g, '%2C');\r\n}\r\n\r\n/** Decodes characters in URL parameter */\r\nfunction paramDecode(text: string) {\r\n  return (text ?? '')\r\n    .replace(/%2F/g, '/')\r\n    .replace(/%3A/g, ':')\r\n    .replace(/%26/g, '&')\r\n    .replace(/%7E/g, '~')\r\n    .replace(/%2C/g, ',');\r\n}\r\n","import { logMain } from '../helpers/console-log-angular.helper';\r\nimport { EavLogger } from './eav-logger';\r\n\r\nexport class EavLoggerFn {\r\n  constructor(private parent: EavLogger, private fnName: string, message?: string, data?: Record<string, unknown>) {\r\n    this.parent.a(fnName + '() ' + (message ?? ''), data);\r\n  }\r\n\r\n  values(data: Record<string, unknown>, intro?: string): void {\r\n    if (!data) return;\r\n    if (!this.parent.enabled) return;\r\n    intro = intro ? ` ${intro} ` : '';\r\n    logMain(`[${this.parent.nameWithSvcId}.${this.fnName}()] ${intro} values:`, data);\r\n  }\r\n\r\n  a(message: string, data?: Record<string, unknown>): void {\r\n    this.parent.a(`${this.fnName}/${message}`, data);\r\n  }\r\n\r\n  /** Return */\r\n  r<TResult>(value: TResult, message?: string): TResult {\r\n    this.parent.a(`${this.fnName}/return${message ? ' ' + message : ''}`, { result: value });\r\n    return value;\r\n  }\r\n\r\n  rNull(message?: string): null {\r\n    this.parent.a(`${this.fnName}/return NULL ${message}`);\r\n    return null;\r\n  }\r\n\r\n  /** End without return */\r\n  end(data?: Record<string, unknown>, message?: string) {\r\n    this.parent.a(`${this.fnName}/end${message ? ' ' + message : ''}`, data);\r\n  }\r\n}\r\n","import { Observable, tap } from 'rxjs';\r\nimport { EavLogger } from './eav-logger';\r\n\r\n/**\r\n * Special debug helper for RxJS observables\r\n */\r\nexport class RxTapDebug {\r\n  /**\r\n   * Constructor which will know the context and name of the stream it's for\r\n   * @param logger the main objects logger with name etc.\r\n   * @param name name of the stream we're logging\r\n   * @param jsonify will JSON.stringify the data if true - this is much faster as the browser doesn't block the debugger as much\r\n   */\r\n  constructor(private logger: EavLogger, public name: string, private enabled = true, private jsonify: boolean = true) { }\r\n\r\n  /**\r\n   * Generate a rxjs tap function that logs the data with the current context\r\n   * Inspired by https://blog.angular-university.io/debug-rxjs/\r\n   * @param key\r\n   * @param subName\r\n   * @param message\r\n   * @returns\r\n   */\r\n  private generateFn<T>(key: string, subName?: unknown, message?: string): (source: Observable<T>) => Observable<T> {\r\n    // if not enabled, just return the original observable\r\n    if (!this.enabled || !this.logger.enabled) return (source: Observable<T>) => source;\r\n\r\n    const label = `${this.name}/${key}${subName ? `-${subName}` : ''}`;\r\n    let counter = 0;\r\n\r\n    // return a function that takes an observable and returns an observable\r\n    // and logs the data, and counts every access\r\n    return (source: Observable<T>) =>\r\n      source.pipe(\r\n        tap((data) => {\r\n          const showData = data == null\r\n            ? data  // if null or undefined, just show it\r\n            : this.jsonify ? JSON.parse(JSON.stringify(data)) : data;\r\n          return this.logger.a(label + ` #${counter++}`, { showData });\r\n        })\r\n      );\r\n  };\r\n\r\n  /** Create a sub-rx-tap (not yet tested as of 2024-06-11) */\r\n  rxTap(name: string, { enabled = true, jsonify = true }: { enabled?: boolean; jsonify?: boolean; } = { enabled: true, jsonify: true }) {\r\n    return new RxTapDebug(this.logger, `${this.name}-${name}`, enabled, jsonify);\r\n  }\r\n\r\n\r\n  /**\r\n   * Recommended to use at the beginning of a pipe to show when inbound signals came\r\n   * @param subName optional sub-name, to distinguish between different uses\r\n   */\r\n  pipe<T>(subName?: string) { return this.generateFn<T>('pipe', subName); }\r\n\r\n  /**\r\n   * Recommended after map to show what the map did\r\n   * @param subName optional sub-name, to distinguish between different uses\r\n   */\r\n  map<T>(subName?: string) { return this.generateFn<T>('map', subName); }\r\n\r\n  /**\r\n   * Recommended after filter to show what the filter did\r\n   * @param subName optional sub-name, to distinguish between different uses\r\n   */\r\n  filter<T>(subName?: string) { return this.generateFn<T>('filter', subName); }\r\n\r\n  /**\r\n   * Recommended after shareReplay\r\n   * @param subName optional sub-name, to distinguish between different uses\r\n   * @returns\r\n   */\r\n  shareReplay<T>(subName?: string) { return this.generateFn<T>('shareReplay', subName); }\r\n\r\n  /**\r\n   * Recommended after distinctUntilChanged\r\n   * @param subName optional sub-name, to distinguish between different uses\r\n   * @returns\r\n   */\r\n  distinctUntilChanged<T>(subName?: string) { return this.generateFn<T>('distinctUntilChanged', subName); }\r\n\r\n\r\n  start<T>() { return this.generateFn<T>('start'); }\r\n  end<T>() { return this.generateFn<T>('end'); }\r\n  step<T>(num: number) { return this.generateFn('step' + num); }\r\n  part<T>(subName?: string) { return this.generateFn<T>('part', subName); };\r\n  read<T>(subName?: string) { return this.generateFn<T>('read', subName); }\r\n}\r\n","import { logMain } from '../helpers/console-log-angular.helper';\r\nimport { EavLoggerFn } from './eav-logger-fn';\r\nimport { RxTapDebug } from './rx-debug-dbg';\r\n\r\nexport class EavLogger {\r\n  /** Special random ID to identify a specific service and detect reuse or separate instances  */\r\n  svcId = Math.random().toString(36).substring(7);\r\n\r\n  enableChildren: boolean;\r\n\r\n  constructor(public name: string, public enabled: boolean, enableChildren?: boolean) {\r\n    this.enableChildren = enableChildren ?? false;\r\n    this.nameWithSvcId = `${name}-${this.svcId}`;\r\n  }\r\n\r\n  public rename(name: string) {\r\n    this.name = name;\r\n    this.nameWithSvcId = `${name}-${this.svcId}`;\r\n  }\r\n\r\n  public nameWithSvcId: string;\r\n\r\n  inherit(parent: EavLogger) {\r\n    this.enabled = this.enabled || parent.enabled;\r\n\r\n    // if this results in log enabled, inform the console.\r\n    // otherwise it's really hard to find out why a log is on\r\n    if (parent.enabled)\r\n      this.a(`Enabled: Inheriting log settings from parent ${parent.nameWithSvcId}`);\r\n  }\r\n\r\n  /**\r\n   * Special 'a' = add log helper to better diagnose what is happening\r\n   */\r\n  a(message: string, data?: Record<string, unknown>): void {\r\n    if (!this.enabled) return;\r\n    logMain(`[${this.nameWithSvcId}] ${message}`, data);\r\n  }\r\n\r\n  /** Create a special logger for rx logging */\r\n  rxTap(name: string, { enabled = true, jsonify = true }: { enabled?: boolean; jsonify?: boolean; } = { enabled: true, jsonify: true }) {\r\n    return new RxTapDebug(this, name, enabled, jsonify);\r\n  }\r\n\r\n  val(name: string, value: unknown) {\r\n    if (!this.enabled) return;\r\n    logMain(`[${this.nameWithSvcId}] value of ${name}:`, { value });\r\n  }\r\n\r\n  values(data: Record<string, unknown>) {\r\n    if (!this.enabled) return;\r\n    logMain(`[${this.nameWithSvcId}] values:`, data);\r\n  }\r\n\r\n  fn(name: string, data?: Record<string, unknown>, message?: string): EavLoggerFn {\r\n    return new EavLoggerFn(this, name, message, data);\r\n  }\r\n\r\n  /**\r\n   * Create a logger function that will only log if the condition is true\r\n   */\r\n  fnCond(condition: boolean, name: string, data?: Record<string, unknown>, message?: string): EavLoggerFn {\r\n    // create real logger if condition is true, or if this logger is disabled anyhow\r\n    return condition || !this.enabled\r\n      ? this.fn(name, data, message)\r\n      : new EavLogger('noop', false).fn('noop', { condition });\r\n  }\r\n}\r\n","import { Observable, pipe, UnaryFunction } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { RxHelpers } from './rx.helpers';\r\n\r\n/**\r\n * Combine map and distinctUntilChanged, as this is a very common pattern.\r\n * @param fn the mapping function\r\n * @returns\r\n */\r\nexport function mapUntilChanged<T, R>(\r\n  fn: (state: T) => R\r\n): UnaryFunction<Observable<T>, Observable<R>> {\r\n  return pipe(\r\n    distinctUntilChanged(),\r\n    map(fn),\r\n    distinctUntilChanged(),\r\n  );\r\n}\r\n\r\nexport function mapUntilObjChanged<T, R>(\r\n  fn: (state: T) => R\r\n): UnaryFunction<Observable<T>, Observable<R>> {\r\n  return pipe(\r\n    distinctUntilChanged(),\r\n    map(fn),\r\n    distinctUntilChanged(RxHelpers.objectsEqual),\r\n  );\r\n}\r\n","\r\nexport class RxHelpers {\r\n\r\n  static boolEquals(x: boolean, y: boolean): boolean {\r\n    return x === y;\r\n  }\r\n\r\n  static stringEquals(x: string, y: string): boolean {\r\n    return x === y;\r\n  }\r\n\r\n  static valueEquals<T>(x: T, y: T): boolean {\r\n    return x === y;\r\n  }\r\n\r\n  static manyEquals<T>(x: T, y: T): boolean {\r\n    if (x == null || y == null) return x === y;\r\n    const typeOfX = typeof x;\r\n    if (typeOfX !== typeof y) return false;\r\n    if (typeOfX === 'string' || typeOfX === 'number' || typeOfX === 'boolean')\r\n      return x === y;\r\n\r\n    if (Array.isArray(x)) return RxHelpers.arraysEqual(x, y as []);\r\n\r\n    return RxHelpers.objectsEqual(x, y);\r\n  }\r\n\r\n  static objectsEqual<T>(x: T, y: T): boolean {\r\n    if (x == null || y == null) return x === y;\r\n\r\n    const obj1 = x as Record<string, any>;\r\n    const obj2 = y as Record<string, any>;\r\n\r\n    const keys1 = Object.keys(obj1);\r\n    const keys2 = Object.keys(obj2);\r\n    if (keys1.length !== keys2.length) return false;\r\n\r\n    const equal = keys1.every(key1 => {\r\n      if (!obj2.hasOwnProperty(key1)) return false;\r\n\r\n      return obj1[key1] === obj2[key1];\r\n    });\r\n\r\n    return equal;\r\n  }\r\n\r\n  static arraysEqual<T>(x: T[], y: T[]): boolean {\r\n    if (x == null || y == null) return x === y;\r\n\r\n    if (x.length !== y.length) return false;\r\n\r\n    const equal = x.every((item, index) => {\r\n      return x[index] === y[index];\r\n    });\r\n\r\n    return equal;\r\n  }\r\n\r\n  /** used as .filter(distinct), filters array to only have distinct values */\r\n  static distinct<T>(value: T, index: number, array: T[]): boolean {\r\n    return array.indexOf(value) === index;\r\n  }\r\n\r\n}\r\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { keyAppId, keyContentBlockId, keyModuleId, keyZoneId, prefix } from '../constants/session.constants';\r\nimport { EavWindow } from '../models/eav-window.model';\r\nimport { ServiceBase } from './service-base';\r\nimport { EavLogger } from '../logging/eav-logger';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nconst logThis = false;\r\nconst nameOfThis = 'RouteContext';\r\n\r\n/**\r\n * Context is used to display information about the current app in various depths.\r\n * In other words, if you open another app in a deeper dialog in the app on Apps Management\r\n * (the component is deeper), you get the information from this app and not the initial app.\r\n */\r\n\r\n@Injectable()\r\nexport class Context extends ServiceBase {\r\n\r\n  constructor(@Optional() @SkipSelf() parentContext: Context) {\r\n    super(new EavLogger(nameOfThis, logThis));\r\n    this.log.a(`constructor; hasParent: ${parentContext != null}`, { parentContext, 'parentId': parentContext?.id });\r\n    this.parent = parentContext;\r\n\r\n    // spm NOTE: I've given id to every context to make it easier to follow how things work\r\n    if (!window.contextId)\r\n      window.contextId = 0;\r\n    this.id = window.contextId++;\r\n    this.log.a('Context.constructor', { this: this });\r\n  }\r\n\r\n  /** Id of current context */\r\n  public id: number;\r\n\r\n  /** Determines if the context is ready to use, and everything is initialized */\r\n  public ready = false;\r\n\r\n  /** The parent, for hierarchical lookup */\r\n  private parent: Context;\r\n\r\n  private routeSnapshot: ActivatedRouteSnapshot;\r\n\r\n  /** The current Zone ID */\r\n  get zoneId(): number {\r\n    return this._zoneId || (this._zoneId = this.routeNum(keyZoneId) || this.parent?.zoneId);\r\n  }\r\n  private _zoneId: number;\r\n\r\n  /** The current App ID */\r\n  get appId(): number {\r\n    return (this._appId != null) ? this._appId : (this._appId = this.routeNum(keyAppId) || this.parent?.appId);\r\n  }\r\n  private _appId: number;\r\n\r\n\r\n  /** Tab Id is global */\r\n  get tabId(): number {\r\n    return window.$2sxc.env.page();\r\n  }\r\n\r\n  /** Content Block Id is global */\r\n  get contentBlockId(): number {\r\n    return this._contentBlockId || (this._contentBlockId = this.routeNum(keyContentBlockId) || this.parent?.contentBlockId);\r\n  }\r\n  private _contentBlockId: number;\r\n\r\n  /** Module Id is global */\r\n  get moduleId(): number {\r\n    return this._moduleId || (this._moduleId = this.routeNum(keyModuleId) || this.parent?.moduleId);\r\n  }\r\n  private _moduleId: number;\r\n\r\n  /**\r\n   * This is the initializer at entry-components of modules.\r\n   * It ensures that within that module, the context has the values given by the route.\r\n   *\r\n   * Note: 2024-07-01 2dm: a long time ago the context was recreated for every single component, so init was also called for every component.\r\n   * But after going standalone, thi doesn't happen any more, and the re-init seems to kill the context from previous,\r\n   * which is why we skip this if already ready.\r\n   * This is still a bit shaky, not sure if this should be the final implementation.\r\n   */\r\n  init(route: ActivatedRoute) {\r\n    const l = this.log.fn(`init - previously ready: '${this.ready}'`, { route });\r\n    // New prevent-multiple-init checks 2dm 2024-07-01\r\n    if (this.ready)\r\n      return l.r(this, 'Already ready, skipping init');\r\n    this.routeSnapshot = route?.snapshot;\r\n    this.clearCachedValues();\r\n    this.ready = route != null;\r\n    this.log.a('init done', { this: this, 'appId': this.appId, 'zoneId': this.zoneId, 'contentBlockId': this.contentBlockId, 'moduleId': this.moduleId });\r\n  }\r\n\r\n  initRoot(): void {\r\n    const l = this.log.fn('initRoot');\r\n    this._zoneId = this.sessionNumber(keyZoneId);\r\n    this._contentBlockId = this.sessionNumber(keyContentBlockId);\r\n    this._moduleId = this.sessionNumber(keyModuleId);\r\n    this._appId = this.sessionNumber(keyAppId);\r\n\r\n    if (!this._zoneId)\r\n      throw new Error('Context is missing some of the required parameters');\r\n\r\n    this.ready = true;\r\n    l.r(this);\r\n  }\r\n\r\n  private sessionNumber(name: string): number {\r\n    const result = sessionStorage.getItem(name);\r\n    if (result === null) return null;\r\n    const num = parseInt(result, 10);\r\n    return isNaN(num) ? null : num;\r\n  }\r\n\r\n  /**\r\n   * Get a number from the route, or optionally its parents.\r\n   * Returns value in route or null\r\n   */\r\n  private routeNum(name: string): number {\r\n    // catch case where state is null, like when the recursive parent is in use\r\n    if (this.routeSnapshot == null) { return null; }\r\n    const paramName = name.substring(prefix.length);\r\n    const result = this.routeSnapshot.paramMap.get(paramName);\r\n    if (result !== null) {\r\n      const num = parseInt(result, 10);\r\n      return isNaN(num) ? null : num;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears cached values. Required when one module instance is opened multiple times,\r\n   * e.g. Apps Management -> App Admin for appId 2 -> back -> App Admin for appId 17.\r\n   * Module is reused, and so is context and it contains values for previous appId.\r\n   */\r\n  private clearCachedValues() {\r\n    this._zoneId = null;\r\n    this._appId = null;\r\n    this._contentBlockId = null;\r\n    this._moduleId = null;\r\n  }\r\n}\r\n","\r\nimport { startWith, map, tap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { InstallSettings } from '../models/installer-models';\r\n\r\n// copied from 2sxc-ui app/installer\r\n@Injectable()\r\nexport class AppInstallSettingsService {\r\n\r\n  private installSettingsSubject: Subject<InstallSettings> = new Subject<InstallSettings>();\r\n  settings$: Observable<InstallSettings> = this.installSettingsSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n    const ready$ = this.settings$.pipe(\r\n      map(() => true),\r\n      startWith(false));\r\n\r\n    ready$.subscribe();\r\n  }\r\n\r\n  public loadGettingStarted(isContentApp: boolean): void {\r\n    this.http.get<InstallSettings>(`sys/install/InstallSettings?isContentApp=${isContentApp}`)\r\n      .subscribe(json => this.installSettingsSubject.next(json));\r\n  }\r\n}\r\n","import { of } from 'rxjs';\r\n\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { InstallPackage } from '../models/installer-models';\r\n\r\n// copied from 2sxc-ui app/installer\r\n@Injectable()\r\nexport class InstallerService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  installPackages(packages: InstallPackage[], step: (p: InstallPackage) => void): Observable<any> {\r\n    return packages.reduce(\r\n      (t: Observable<Response>, c) => t.pipe(\r\n        switchMap(() => {\r\n          if (!c.url) return of(true);\r\n          step(c);\r\n          return <Observable<any>>this.http.post(`sys/install/RemotePackage?packageUrl=${c.url}`, {});\r\n        })),\r\n      of(true));\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { QueryStreams } from '../../edit/shared/models/query-stream.model';\r\nimport { EavLogger } from '../logging/eav-logger';\r\nimport { ServiceBase } from './service-base';\r\nimport { Context } from './context';\r\n\r\nconst logThis = false;\r\n\r\n// TODO: @2dg also try to use transient only - should be possible\r\n\r\n@Injectable()\r\nexport class QueryService extends ServiceBase {\r\n\r\n  constructor(private http: HttpClient, private context: Context) {\r\n    super(new EavLogger('QueryService', logThis));\r\n  }\r\n\r\n  getAvailableEntities(queryUrl: string, params: string, fields: string, entitiesFilter?: string[]): Observable<QueryStreams> {\r\n    this.log.a('getAvailableEntities', {queryUrl, params, fields, entitiesFilter});\r\n    // Check if any params we should auto-add are already set (like in a query which has these params set in the configuration)\r\n    const hasParams = !!params;\r\n    const paramsLower = params?.toLocaleLowerCase() ?? '';\r\n    const hasAppId = paramsLower.includes('appid=') ?? false;\r\n    const allParams = ''\r\n      + (hasAppId ? '' : `&appId=${this.context.appId}`)\r\n      + (hasParams ? `&${params}` : '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(`app/auto/query/${queryUrl}?${urlParams}`,\r\n      {\r\n        Guids: entitiesFilter,\r\n      },\r\n    );\r\n  }\r\n\r\n  getEntities({ contentTypes, itemIds, fields, log }: { contentTypes: string[]; itemIds: string[]; fields: string; log: string }): Observable<QueryStreams> {\r\n    this.log.a(`getEntities(${log})`, {contentTypes, itemIds, fields});\r\n    const allParams =\r\n      '&typeNames=' + (contentTypes?.join(',') ?? '')\r\n      + `&appId=${this.context.appId}`\r\n      + '&itemIds=' + (itemIds?.join(',') ?? '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(\r\n      `app/auto/query/System.EntityPicker/Default?${urlParams}`,\r\n      {}\r\n    );\r\n  }\r\n}\r\n","import { Subscription } from 'rxjs';\r\nimport { EavLogger } from '../logging/eav-logger';\r\n\r\n/** Base class for services, with logging */\r\nexport class ServiceBase {\r\n  protected subscriptions = new Subscription();\r\n\r\n  constructor(public log: EavLogger) {\r\n  }\r\n\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n  // Note: we can't do this, because angular compiler complains about wanting to implement OnDestroy\r\n  // and if we do that, it will want a decorator, which we can't have here.\r\n  // ngOnDestroy() {\r\n  //   this.destroy();\r\n  // }\r\n\r\n}\r\n","export const environment = {\r\n  production: true\r\n};\r\n","// Font-Awesome\r\nimport codeCurly from '!raw-loader!../../assets/icons/code-curly.svg';\r\n\r\nexport const iconsFontAwesome: Record<string, string> = {\r\n  'code-curly': codeCurly,\r\n};\r\n","export default \"<svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n<path d=\\\"M2.98187 13.2188C3.38292 13.2083 3.70844 13.1016 3.95844 12.8984C4.21365 12.6901 4.38292 12.4062 4.46625 12.0469C4.54958 11.6875 4.59385 11.0729 4.59906 10.2031C4.60427 9.33333 4.6199 8.76042 4.64594 8.48438C4.69281 8.04688 4.77875 7.69531 4.90375 7.42969C5.03396 7.16406 5.19281 6.95312 5.38031 6.79688C5.56781 6.63542 5.8074 6.51302 6.09906 6.42969C6.29698 6.3776 6.6199 6.35156 7.06781 6.35156H7.50531V7.57812H7.26312C6.72146 7.57812 6.36208 7.67708 6.185 7.875C6.00792 8.06771 5.91937 8.5026 5.91937 9.17969C5.91937 10.5443 5.89073 11.4062 5.83344 11.7656C5.73969 12.3229 5.57823 12.7526 5.34906 13.0547C5.1251 13.3568 4.77094 13.625 4.28656 13.8594C4.85948 14.099 5.27354 14.4661 5.52875 14.9609C5.78917 15.4505 5.91937 16.2552 5.91937 17.375C5.91937 18.3906 5.92979 18.9948 5.95062 19.1875C5.99229 19.5417 6.09646 19.7891 6.26312 19.9297C6.435 20.0703 6.76833 20.1406 7.26312 20.1406H7.50531V21.3672H7.06781C6.5574 21.3672 6.1876 21.3255 5.95844 21.2422C5.6251 21.1224 5.34906 20.9271 5.13031 20.6562C4.91156 20.3906 4.76833 20.0521 4.70062 19.6406C4.63812 19.2292 4.60427 18.5547 4.59906 17.6172C4.59385 16.6797 4.54958 16.0312 4.46625 15.6719C4.38292 15.3125 4.21365 15.0286 3.95844 14.8203C3.70844 14.612 3.38292 14.5026 2.98187 14.4922V13.2188ZM8.05344 18V16.3984H9.655V18H8.05344ZM11.2266 18V16.3984H12.8281V18H11.2266ZM14.3997 18V16.3984H16.0012V18H14.3997ZM21.0103 13.2188V14.4922C20.6093 14.5026 20.2811 14.612 20.0259 14.8203C19.7759 15.0286 19.6093 15.3125 19.5259 15.6719C19.4426 16.026 19.3983 16.638 19.3931 17.5078C19.3879 18.3776 19.3723 18.9505 19.3462 19.2266C19.2994 19.6693 19.2108 20.0208 19.0806 20.2812C18.9556 20.5469 18.7994 20.7578 18.6119 20.9141C18.4244 21.0755 18.1848 21.1979 17.8931 21.2812C17.6952 21.3385 17.3723 21.3672 16.9244 21.3672H16.4869V20.1406H16.7291C17.2707 20.1406 17.6301 20.0417 17.8072 19.8438C17.9843 19.651 18.0728 19.2135 18.0728 18.5312C18.0728 17.2292 18.0962 16.4036 18.1431 16.0547C18.2265 15.4766 18.3931 15.0156 18.6431 14.6719C18.8931 14.3229 19.2473 14.0521 19.7056 13.8594C19.1067 13.5729 18.6848 13.1953 18.44 12.7266C18.1952 12.2526 18.0728 11.4557 18.0728 10.3359C18.0728 9.32031 18.0598 8.71354 18.0337 8.51562C17.9973 8.16667 17.8931 7.92448 17.7212 7.78906C17.5546 7.64844 17.2239 7.57812 16.7291 7.57812H16.4869V6.35156H16.9244C17.4348 6.35156 17.8046 6.39323 18.0337 6.47656C18.3671 6.59115 18.6431 6.78385 18.8619 7.05469C19.0806 7.32552 19.2212 7.66667 19.2837 8.07812C19.3515 8.48958 19.3879 9.16406 19.3931 10.1016C19.3983 11.0391 19.4426 11.6875 19.5259 12.0469C19.6093 12.401 19.7759 12.6823 20.0259 12.8906C20.2811 13.099 20.6093 13.2083 21.0103 13.2188Z\\\"/>\\r\\n</svg>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { iconsFontAwesome } from '.';\r\n\r\n@Injectable()\r\nexport class AppIconsService {\r\n  constructor(private matIconRegistry: MatIconRegistry, private domSanitizer: DomSanitizer) { }\r\n\r\n  load() {\r\n    // v18.01 - changing to Material Symbols\r\n    // this.matIconRegistry.setDefaultFontSetClass('material-icons-outlined');\r\n    this.matIconRegistry.setDefaultFontSetClass('material-symbols-outlined');\r\n\r\n    Object.entries(iconsFontAwesome).forEach(([name, svg]) => {\r\n      this.matIconRegistry.addSvgIconLiteral(name, this.domSanitizer.bypassSecurityTrustHtml(svg));\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext, SxcAppComponent } from '@2sic.com/sxc-angular';\r\nimport { ChangeDetectionStrategy, Component, ElementRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, NavigationEnd, Router, RouterModule } from '@angular/router';\r\nimport { filter, map, Subscription } from 'rxjs';\r\nimport { AppIconsService } from './shared/icons/app-icons.service';\r\nimport { keyContentBlockId, keyModuleId } from './shared/constants/session.constants';\r\nimport { Context } from './shared/services/context';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [\r\n    RouterModule,\r\n  ],\r\n})\r\nexport class AppComponent extends SxcAppComponent implements OnInit, OnDestroy {\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    el: ElementRef,\r\n    dnnContext: DnnContext,\r\n    private context: Context,\r\n    private titleService: Title,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private appIconsService: AppIconsService,\r\n  ) {\r\n    super(\r\n      el,\r\n      dnnContext.preConfigure({\r\n        moduleId: parseInt(sessionStorage.getItem(keyModuleId) || '-1234', 10),\r\n        contentBlockId: parseInt(sessionStorage.getItem(keyContentBlockId) || '-1234', 10),\r\n      }),\r\n    );\r\n    this.context.initRoot();\r\n    this.appIconsService.load();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Mostly copied from https://blog.bitsrc.io/dynamic-page-titles-in-angular-98ce20b5c334\r\n    // Routes need a data: { title: '...' } for this to work\r\n    const appTitle = this.titleService.getTitle(); // initial title when loading the page\r\n    this.subscription.add(\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        map(() => {\r\n          let child = this.activatedRoute.firstChild;\r\n          while (child?.firstChild) {\r\n            child = child.firstChild;\r\n          }\r\n          if (child?.snapshot.data['title']) {\r\n            return child.snapshot.data['title'];\r\n          }\r\n          return appTitle;\r\n        }),\r\n      ).subscribe((title: string) => {\r\n        this.titleService.setTitle(title);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Routes } from '@angular/router';\r\nimport { EditRoutesRoot } from './edit/edit.routing';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: ':zoneId/apps',\r\n    loadChildren: () => import('./apps-management/apps-management.routing').then(m => m.appsManagementRoutes),\r\n\r\n    data: { title: 'Apps' },\r\n  },\r\n  {\r\n    path: ':zoneId/import',\r\n    loadChildren: () => import('./import-app/import-app.routing').then(m => m.importRoutes),\r\n    data: { title: 'Import App' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/app',\r\n    loadChildren: () => import('./app-administration/app-administration.routing').then(m => m.appAdministrationRoutes),\r\n    data: { title: 'App' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/code',\r\n    loadChildren: () => import('./code-editor/code-editor.routing').then(m => m.codeEditorRoutes),\r\n\r\n    data: { title: 'Code Editor' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/query/:pipelineId',\r\n    loadChildren: () => import('./visual-query/visual-query.routing').then(m => m.visualQueryRoutes),\r\n    data: { title: 'Visual Query' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/:guid/:part/:index/replace',\r\n    loadChildren: () => import('./replace-content/replace-content.routing').then(m => m.replaceContentRoutes),\r\n\r\n    data: { title: 'Apps' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/:guid/:part/:index/reorder',\r\n    loadChildren: () => import('./manage-content-list/manage-content-list.routing').then(m => m.manageContentRoutes),\r\n    data: { title: 'Reorder Items' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/items/:contentTypeStaticName',\r\n    loadChildren: () => import('./content-items/content-items.routing').then(m => m.contentItemsRoutes),\r\n    data: { title: 'Items' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/fields/:contentTypeStaticName',\r\n    loadChildren: () => import('./content-type-fields/content-type-fields.routing').then(m => m.contentTypeFieldsRoutes),\r\n    data: { title: 'Fields' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/versions/:itemId',\r\n    loadChildren: () => import('./item-history/item-history.routing').then(m => m.historyRoutes),\r\n  },\r\n  ...EditRoutesRoot,\r\n];\r\n\r\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError, Observable, throwError } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class HandleErrorsInterceptor implements HttpInterceptor {\r\n  /** URLs excluded from detailed error alert  */\r\n  private excludedUrls = [\r\n    'dist/ng-edit/i18n',\r\n  ];\r\n\r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        if (!this.checkIfExcluded(error.url)) {\r\n          this.showDetailedHttpError(error);\r\n        }\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  private checkIfExcluded(url: string) {\r\n    for (const excludedUrl of this.excludedUrls) {\r\n      if (url.includes(excludedUrl)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private showDetailedHttpError(error: HttpErrorResponse) {\r\n    let infoText = 'Had an error talking to the server (status ' + error.status + ').';\r\n    const srvResp = error.error;\r\n    if (srvResp) {\r\n      const msg = srvResp.Message;\r\n      if (msg) { infoText += '\\nMessage: ' + msg; }\r\n      const msgDet = srvResp.MessageDetail || srvResp.ExceptionMessage;\r\n      if (msgDet) { infoText += '\\nDetail: ' + msgDet; }\r\n\r\n      if (msgDet && msgDet.indexOf('No action was found') === 0) {\r\n        if (msgDet.indexOf('that matches the name') > 0) {\r\n          infoText += '\\n\\nTip from 2sxc: you probably got the action-name wrong in your JS.';\r\n        } else if (msgDet.indexOf('that matches the request.') > 0) {\r\n          infoText += '\\n\\nTip from 2sxc: Seems like the parameters are the wrong amount or type.';\r\n        }\r\n      }\r\n\r\n      if (msg && msg.indexOf('Controller') === 0 && msg.indexOf('not found') > 0) {\r\n        infoText += '\\n\\nTip from 2sxc: you probably spelled the controller name wrong or forgot to remove the word \\'controller\\' from the call in JS. To call a controller called \\'DemoController\\' only use \\'Demo\\'.';\r\n      }\r\n      infoText += '\\n\\nif you are an advanced user you can learn more about what went wrong - discover how on 2sxc.org/help?tag=debug';\r\n    }\r\n\r\n    alert(infoText);\r\n  }\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class SetHeadersInterceptor implements HttpInterceptor {\r\n\r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let modified: HttpRequest<any>;\r\n    if (req.body instanceof FormData) {\r\n      // sending files. Do not set content type so browser can add delimiter boundary automatically\r\n      return next.handle(req);\r\n    } else {\r\n      modified = req.clone({\r\n        setHeaders: {\r\n          'Content-Type': 'application/json;charset=UTF-8',\r\n        }\r\n      });\r\n      return next.handle(modified);\r\n    }\r\n  }\r\n}\r\n","import { Action, ActionReducer, ActionReducerMap, MetaReducer, } from '@ngrx/store';\r\nimport { environment } from '../../../../../environments/environment';\r\nimport { consoleLogStore } from '../../../../shared/helpers/console-log-angular.helper';\r\n\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface EavState {\r\n}\r\n\r\n/** Console log all actions */\r\nexport function logger(reducer: ActionReducer<EavState>): ActionReducer<EavState> {\r\n  return (state: EavState, action: Action): EavState => {\r\n    consoleLogStore('state:', state, 'action:', action);\r\n    return reducer(state, action);\r\n  };\r\n}\r\n\r\n/**\r\n * By default, @ngrx/store uses combineReducers with the reducer map to compose\r\n * the root meta-reducer. To add more meta-reducers, provide an array of meta-reducers\r\n * that will be composed to form the root meta-reducer.\r\n */\r\nexport const metaReducers: MetaReducer[] = !environment.production\r\n  ? [logger]\r\n  : [];\r\n\r\nexport const reducers: ActionReducerMap<EavState> = {\r\n};\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader } from '@ngx-translate/core';\r\nimport { catchError, Observable, of } from 'rxjs';\r\n\r\n/**\r\n * This loader should catch a 404 if the file doesn't exist and not result in errors.\r\n * https://stackoverflow.com/questions/47391613/how-to-set-a-fallback-assets-i18n-en-json-when-url-is-not-available-ngx-trans\r\n */\r\nexport class TranslateLoaderWithErrorHandling implements TranslateLoader {\r\n  constructor(private http: HttpClient, private prefix: string, private suffix: string) { }\r\n\r\n  getTranslation(lang: string): Observable<Record<string, any>> {\r\n    return this.http.get<Record<string, any>>(`${this.prefix}${lang}${this.suffix}`).pipe(\r\n      catchError(error => {\r\n        console.warn(`Translation: Failed to get language '${lang}' from ${this.prefix}`, error);\r\n        return of({});\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { provideRouter } from '@angular/router';\r\nimport { routes } from './app.routes';\r\nimport { APP_INITIALIZER, ApplicationConfig, importProvidersFrom, Injector } from '@angular/core';\r\nimport { SxcHttpInterceptorProvider } from '@2sic.com/sxc-angular';\r\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { paramsInitFactory } from './params-init.factory';\r\nimport { AppIconsService } from './shared/icons/app-icons.service';\r\nimport { HandleErrorsInterceptor } from './shared/interceptors/handle-errors.interceptor';\r\nimport { SetHeadersInterceptor } from './shared/interceptors/set-headers.interceptor';\r\nimport { AppInstallSettingsService } from './shared/services/getting-started.service';\r\nimport { InstallerService } from './shared/services/installer.service';\r\nimport { Context } from './shared/services/context';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { metaReducers, reducers } from './edit/shared/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { EntityDataModule } from '@ngrx/data';\r\nimport { entityConfig } from './edit/shared/store/ngrx-data';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { buildTranslateConfiguration } from './shared/translation';\r\nimport { translateLoaderFactory } from './shared/translation/translate-loader-factory';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\r\n\r\nexport const appConfig: ApplicationConfig = {\r\n\r\n  providers: [\r\n    provideRouter(routes),\r\n    importProvidersFrom(\r\n      BrowserModule,\r\n      BrowserAnimationsModule,\r\n      HttpClientModule,\r\n      StoreModule.forRoot(reducers, { metaReducers, runtimeChecks: { strictStateImmutability: true, strictActionImmutability: true } }),\r\n      EffectsModule.forRoot([]),\r\n      StoreDevtoolsModule.instrument({ maxAge: 25 }),\r\n      EntityDataModule.forRoot(entityConfig),\r\n      TranslateModule.forRoot(),\r\n      TranslateModule.forChild(buildTranslateConfiguration(translateLoaderFactory)),\r\n    ),\r\n    SxcHttpInterceptorProvider,\r\n    Context,\r\n    Title,\r\n    AppIconsService,\r\n    AppInstallSettingsService,// copied from 2sxc-ui\r\n    InstallerService,// copied from 2sxc-ui\r\n    { provide: APP_INITIALIZER, useFactory: paramsInitFactory, deps: [Injector], multi: true },\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\r\n    { provide: HTTP_INTERCEPTORS, useClass: SetHeadersInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: HandleErrorsInterceptor, multi: true },\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { subscriptSizing: 'dynamic' } },\r\n  ],\r\n\r\n};\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader, TranslateModuleConfig } from '@ngx-translate/core';\r\n\r\nexport function buildTranslateConfiguration(factory: (http: HttpClient) => TranslateLoader): TranslateModuleConfig {\r\n  const config: TranslateModuleConfig = {\r\n    loader: {\r\n      provide: TranslateLoader,\r\n      useFactory: factory,\r\n      deps: [HttpClient],\r\n    },\r\n    defaultLanguage: 'en',\r\n    isolate: true,\r\n  };\r\n  return config;\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { TranslateLoader } from \"@ngx-translate/core\";\r\nimport { EavWindow } from \"../models/eav-window.model\";\r\nimport { TranslateLoaderWithErrorHandling } from \"./translate-loader-with-error-handling\";\r\n\r\ndeclare const window: EavWindow;\r\n\r\n// AoT requires an exported function for factories\r\n// at least according to https://github.com/ngx-translate/http-loader\r\nexport function translateLoaderFactory(http: HttpClient): TranslateLoader {\r\n  return new TranslateLoaderWithErrorHandling(http, './i18n/', `.js?${window.sxcVersion}`);\r\n}\r\n","import { Injector } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UrlHelpers } from './edit/shared/helpers/url.helpers';\r\nimport { DialogTypeConstant, DialogTypeConstants } from './shared/constants/dialog-type.constants';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyAppId, keyContentType, keyDialog, keyExtras, keyItems, keyPipelineId, keyUrl, keyZoneId, prefix } from './shared/constants/session.constants';\r\nimport { convertFormToUrl } from './shared/helpers/url-prep.helper';\r\nimport { ExtrasParam } from './shared/models/dialog-url-params.model';\r\nimport { EavWindow } from './shared/models/eav-window.model';\r\nimport { EditForm, ItemEditIdentifier, ItemInListIdentifier } from './shared/models/edit-form.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport function paramsInitFactory(injector: Injector): () => void {\r\n  return () => {\r\n    console.log('Setting parameters config and clearing route');\r\n    const eavKeys = Object.keys(sessionStorage).filter(key => key.startsWith(prefix));\r\n    const isParamsRoute = !window.location.hash.startsWith('#/');\r\n    if (isParamsRoute) {\r\n      console.log('Initial route:', window.location.href);\r\n      // clear our part of the session\r\n      for (const key of eavKeys) {\r\n        sessionStorage.removeItem(key);\r\n      }\r\n      sessionStorage.setItem(keyUrl, window.location.href); // save url which opened the dialog\r\n      sessionStorage.setItem(keyDialog, DialogTypeConstants.Edit); // set edit dialog as the default\r\n\r\n      // save params\r\n      const urlHash = window.location.hash.substring(1); // substring removes first # char\r\n      const queryParametersFromUrl = UrlHelpers.readQueryStringParameters(urlHash);\r\n\r\n      for (const [paramKey, paramValue] of Object.entries(queryParametersFromUrl)) {\r\n        if (paramValue == null) { continue; }\r\n        sessionStorage.setItem(prefix + paramKey, paramValue);\r\n      }\r\n\r\n      // redirect\r\n      const router = injector.get(Router);\r\n      const zoneId = sessionStorage.getItem(keyZoneId);\r\n      const appId = sessionStorage.getItem(keyAppId);\r\n      const dialog = sessionStorage.getItem(keyDialog) as DialogTypeConstant;\r\n      const contentType = sessionStorage.getItem(keyContentType);\r\n      const items = sessionStorage.getItem(keyItems);\r\n      switch (dialog) {\r\n        case DialogTypeConstants.Zone:\r\n          const extrasZone: ExtrasParam = JSON.parse(sessionStorage.getItem(keyExtras));\r\n          router.navigate([`${zoneId}/apps${extrasZone?.tab ? `/${extrasZone.tab}` : ''}`]);\r\n          break;\r\n        case DialogTypeConstants.Apps:\r\n          router.navigate([`${zoneId}/apps/list`]);\r\n          break;\r\n        case DialogTypeConstants.AppImport:\r\n          router.navigate([`${zoneId}/import`]);\r\n          break;\r\n        case DialogTypeConstants.App:\r\n          const extrasApp: ExtrasParam = JSON.parse(sessionStorage.getItem(keyExtras));\r\n          router.navigate([`${zoneId}/${appId}/app${extrasApp?.tab ? `/${extrasApp.tab}` : ''}${extrasApp?.scope ? `/${extrasApp.scope}` : ''}`]);\r\n          break;\r\n        case DialogTypeConstants.ContentType:\r\n          router.navigate([`${zoneId}/${appId}/fields/${contentType}`]);\r\n          break;\r\n        case DialogTypeConstants.ContentItems:\r\n          router.navigate([`${zoneId}/${appId}/items/${contentType}`]);\r\n          break;\r\n        case DialogTypeConstants.Edit:\r\n          const editItems: ItemEditIdentifier[] = JSON.parse(items);\r\n          const form: EditForm = { items: editItems };\r\n          // const fields = sessionStorage.getItem(keyEditFields);\r\n          const formUrl = convertFormToUrl(form);\r\n          router.navigate([`${zoneId}/${appId}/edit/${formUrl}`]);\r\n          break;\r\n        case DialogTypeConstants.ItemHistory:\r\n          const historyItems: ItemEditIdentifier[] = JSON.parse(items);\r\n          router.navigate([`${zoneId}/${appId}/versions/${historyItems[0].EntityId}`]);\r\n          break;\r\n        case DialogTypeConstants.Develop:\r\n          router.navigate([`${zoneId}/${appId}/code`]);\r\n          break;\r\n        case DialogTypeConstants.PipelineDesigner:\r\n          const pipelineId = sessionStorage.getItem(keyPipelineId);\r\n          router.navigate([`${zoneId}/${appId}/query/${pipelineId}`]);\r\n          break;\r\n        case DialogTypeConstants.Replace:\r\n          const repItem = (JSON.parse(items) as ItemInListIdentifier[])[0];\r\n          const rGuid = repItem.Parent;\r\n          const rPart = repItem.Field;\r\n          const rIndex = repItem.Index;\r\n          const add = repItem.Add;\r\n          const queryParams = add ? { add: true } : {};\r\n          router.navigate([`${zoneId}/${appId}/${rGuid}/${rPart}/${rIndex}/replace`], { queryParams });\r\n          break;\r\n        case DialogTypeConstants.InstanceList:\r\n          const grpItem = (JSON.parse(items) as ItemInListIdentifier[])[0];\r\n          const gGuid = grpItem.Parent;\r\n          const gPart = grpItem.Field;\r\n          const gIndex = grpItem.Index;\r\n          router.navigate([`${zoneId}/${appId}/${gGuid}/${gPart}/${gIndex}/reorder`]);\r\n          break;\r\n        default:\r\n          alert(`Cannot open unknown dialog \"${dialog}\"`);\r\n          try {\r\n            window.parent.$2sxc.totalPopup.close();\r\n          } catch (error) { }\r\n      }\r\n    } else if (eavKeys.length === 0) {\r\n      // if not params route and no params are saved, e.g. browser was reopened, throw error\r\n      alert('Missing required url parameters. Please reopen dialog.');\r\n      throw new Error('Missing required url parameters. Please reopen dialog.');\r\n    } else {\r\n      console.log('Initial route:', sessionStorage.getItem(keyUrl));\r\n    }\r\n  };\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { environment } from './environments/environment';\r\nimport { AppComponent } from './app/app.component';\r\nimport { appConfig } from './app/app.config';\r\nimport { bootstrapApplication } from '@angular/platform-browser';\r\n\r\nif (environment.production)\r\n  enableProdMode();\r\n\r\nbootstrapApplication(AppComponent, appConfig)\r\n  .catch((err) => console.error(err));\r\n"],"x_google_ignoreList":[]}