{"version":3,"file":"default-projects_eav-ui_src_app_app-administration_services_index_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/index.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts"],"sourcesContent":["import { computed, Injectable, Signal } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\n\r\n// We should list all the \"full\" paths here, so it's easier to find when searching for API calls\r\nexport const webApiTypeRoot = 'admin/type/';\r\nconst webApiTypeGet = 'admin/type/get';\r\nconst webApiTypes = 'admin/type/list';\r\nconst webApiTypeScopes = 'admin/type/scopes';\r\nconst webApiTypeSave = 'admin/type/save';\r\nconst webApiTypeDelete = 'admin/type/delete';\r\nconst webApiTypeImport = 'admin/type/import';\r\nconst webApiTypeAddGhost = 'admin/type/addghost';\r\n\r\n@Injectable()\r\nexport class ContentTypesService extends HttpServiceBase {\r\n\r\n  retrieveContentType(nameId: string) {\r\n    return this.getHttpApiUrl<ContentType>(webApiTypeGet, {\r\n      params: { appId: this.appId, contentTypeId: nameId }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypeSig(nameId: string, initial: undefined): Signal<ContentType> {\r\n    return this.getSignal<ContentType>(webApiTypeGet, {\r\n      params: { appId: this.appId, contentTypeId: nameId }\r\n    }, initial);\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.getHttpApiUrl<ContentType[]>(webApiTypes, {\r\n      params: { appId: this.appId, scope }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypesSig(scope: string, initial: undefined): Signal<ContentType[]> {\r\n    return this.getSignal<ContentType[]>(webApiTypes, {\r\n      params: { appId: this.appId, scope }\r\n    }, initial);\r\n  }\r\n\r\n  // TODO: remove this method after upgrade to V2\r\n  getScopes() {\r\n    return this.getHttpApiUrl<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(webApiTypeScopes, {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => {\r\n        // wip during upgrade:\r\n        const scopes = scopesData.old;\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getScopesSig(initial: undefined): Signal<ScopeOption[]> {\r\n    const scopesSignal = this.getSignal<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(\r\n      webApiTypeScopes,\r\n      { params: { appId: this.appId } }, initial,\r\n    );\r\n\r\n    const scopeOptionsSignal = computed(() => {\r\n      const scopesData = scopesSignal();\r\n\r\n      // Add null/undefined check here\r\n      if (!scopesData || !scopesData.old) {\r\n        return []; // Return an empty array or handle this case as appropriate\r\n      }\r\n\r\n      const scopes = scopesData.old;\r\n      return Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n    });\r\n\r\n    return scopeOptionsSignal;\r\n  }\r\n\r\n  getScopesV2() {\r\n    return this.getHttpApiUrl<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(webApiTypeScopes, {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => scopesData.scopes),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeSave), contentType, {\r\n      params: { appid: this.appId },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeDelete), {\r\n      params: { appid: this.appId, staticName: contentType.NameId }, // TODO: @2pp - replace staticName with NameId\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  createGhost(sourceNameId: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeAddGhost), null, {\r\n      params: { appid: this.appId, sourceNameId },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\n\r\nconst webApiAppPartsGet = 'admin/appParts/get';\r\n@Injectable()\r\nexport class ExportAppPartsService extends HttpServiceBase {\r\n\r\n  getContentInfo(scope: string, initial: ContentInfo) {\r\n    return this.getSignal<ContentInfo>(webApiAppPartsGet, {\r\n      params: { appid: this.appId, zoneId: this.zoneId, scope }\r\n    }, initial);\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.appId\r\n      + '&zoneId=' + this.zoneId\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { AppInfo } from '../models/app-info.model';\r\n\r\n const webApiAppRootStatistics = 'admin/app/Statistics';\r\n const webApiAppRootSaveData = 'admin/app/SaveData';\r\n\r\n\r\n@Injectable()\r\nexport class ExportAppService extends HttpServiceBase {\r\n\r\n  getAppInfo(initial: AppInfo) {\r\n    return this.getSignal<AppInfo>(webApiAppRootStatistics, {\r\n      params: { appid: this.appId, zoneId: this.zoneId },\r\n    }, initial);\r\n  }\r\n\r\n  /** Generate the export app path. It can be extended with additional parameters */\r\n  exportAppUrl() {\r\n    return `${this.apiUrl(`${webApiAppRoot}Export`)}?appId=${this.appId}&zoneId=${this.zoneId}`;\r\n  }\r\n\r\n  exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }) {\r\n    // return this.get<boolean>(webApiAppRoot + 'SaveData', {\r\n    return this.getHttpApiUrl<boolean>(webApiAppRootSaveData, {\r\n      params: {\r\n        appid: this.appId,\r\n        zoneId: this.zoneId,\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService extends HttpServiceBase {\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.appId,\r\n        zoneId: this.zoneId,\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","export * from './dialog-config-global.service';\r\nexport * from './content-types.service';\r\nexport * from './export-app-parts.service';\r\nexport * from './export-app.service';\r\nexport * from './import-app-parts.service';\r\nexport * from './pipelines.service';\r\nexport * from './views.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Query } from '../models/query.model';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService extends HttpServiceBase {\r\n\r\n  getAll(contentType: string) {\r\n    return this.getHttpApiUrl<Query[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType }\r\n    });\r\n  }\r\n\r\n  getAllSig(contentType: string, initial?: Query[]) {\r\n    return this.getSignal<Query[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType }\r\n    }, initial);\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiQueryImport), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.getHttpApiUrl<null>(webApiQueryClone, {\r\n      params: { Id: id.toString(), appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViews = 'admin/view/all';\r\nconst webApiViewDelete = 'admin/view/delete';\r\nconst webApiViewImport = 'admin/view/import';\r\nconst webApiViewPolymorph = 'admin/view/polymorphism';\r\nconst webApiViewUsage = 'admin/view/usage';\r\nconst webApiJson = 'admin/view/json';\r\n\r\n\r\n@Injectable()\r\nexport class ViewsService extends HttpServiceBase {\r\n\r\n  getAll() {\r\n    return this.getSignal<View[]>(webApiViews, {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.getHttpApiUrl<boolean>(webApiViewDelete, {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.apiUrl(webApiJson)\r\n      + '?appId=' + this.appId\r\n      + '&viewId=' + id;\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.getSignal<Polymorphism>(webApiViewPolymorph, {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.getSignal<ViewUsage[]>(webApiViewUsage, {\r\n      params: { appId: this.appId, guid }\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService extends HttpServiceBase {\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.zoneId }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n"],"names":["computed","Signal","map","HttpServiceBase","webApiTypeRoot","webApiTypeGet","webApiTypes","webApiTypeScopes","webApiTypeSave","webApiTypeDelete","webApiTypeImport","webApiTypeAddGhost","ContentTypesService","retrieveContentType","nameId","getHttpApiUrl","params","appId","contentTypeId","retrieveContentTypeSig","initial","getSignal","retrieveContentTypes","scope","retrieveContentTypesSig","getScopes","pipe","scopesData","scopes","old","scopeOptions","Object","keys","key","name","value","getScopesSig","scopesSignal","scopeOptionsSignal","getScopesV2","save","contentType","http","post","apiUrl","appid","delete","staticName","NameId","import","files","formData","FormData","file","append","zoneId","createGhost","sourceNameId","__ngFactoryType__","factory","ɵfac","webApiAppPartsRoot","webApiAppPartsGet","ExportAppPartsService","getContentInfo","exportParts","contentTypeIds","entityIds","templateIds","url","join","window","open","webApiAppRoot","webApiAppRootStatistics","webApiAppRootSaveData","ExportAppService","getAppInfo","exportAppUrl","exportForVersionControl","includeContentGroups","resetAppGuid","withFiles","toString","withPortalFiles","ImportAppPartsService","importAppParts","resetApp","from","switchMap","toBase64","webApiEntityList","webApiQueryImport","webApiQueryClone","webApiQueryDelete","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","getAllSig","importQuery","fileBase64","AppId","ContentBase64","success","result","Success","Messages","clonePipeline","id","Id","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","webApiJson","ViewsService","export","getPolymorphism","getUsage","guid","of","FileUploadMessageTypes","ImportAppService","importApp","changedName","retryOnDuplicate","MessageType","Warning","folderName","prompt","Text","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","split","onerror","error","readAsText"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}