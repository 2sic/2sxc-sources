{"version":3,"sources":["./projects/ng-dialogs/src/app/apps-management/constants/app.patterns.ts","./projects/ng-dialogs/src/app/apps-management/create-app/create-app.component.html","./projects/ng-dialogs/src/app/apps-management/create-app/create-app.component.ts","./projects/ng-dialogs/src/app/shared/components/field-hint/field-hint.component.html","./projects/ng-dialogs/src/app/shared/components/field-hint/field-hint.component.ts"],"names":["appNamePattern","dialogRef","appsListService","snackBar","hostClass","appNameError","this","form","buildForm","loading$","BehaviorSubject","ngOnInit","ngOnDestroy","complete","closeDialog","close","create","disable","next","name","controls","value","trim","replace","open","subscribe","error","enable","undefined","duration","CreateAppComponent","isError","isShort","toggleIsShort","FieldHintComponent"],"mappings":"iQAAaA,EAAiB,qC,0HCkBxB,6BACE,sBACF,S,KAF4D,oB,yBAG5D,6BACE,SACF,S,oBAF2D,oBACzD,wC,yBALJ,SACE,kCAGA,kCAGF,S,oBANmB,mGAGA,mG,sCArBvB,SAGE,iBACE,iBAA8B,sBAAU,QAC1C,QAEA,yBAEA,kBACE,4BACE,qBAAW,gBAAI,QACf,mBACF,QACA,2BACE,wDACF,QACA,iCAQF,QAEA,kBACE,qBAAkE,iEAChE,qBACF,QACA,qBAAgG,4DAC9F,qBACF,QACF,QACF,Q,+BA1BQ,mCAQW,oDAWyB,qCAGe,qD,qCCvB3D,aAYE,WACUC,EACAC,EACAC,GAFA,KAAAF,YACA,KAAAC,kBACA,KAAAC,WATgB,KAAAC,UAAY,mBAItC,KAAAC,aFjB0B,uGEwBxBC,KAAKC,KAAOD,KAAKE,YACjBF,KAAKG,SAAW,IAAIC,EAAA,GAAgB,G,OAGtC,YAAAC,SAAA,aAGA,YAAAC,YAAA,WACEN,KAAKG,SAASI,YAGhB,YAAAC,YAAA,WACER,KAAKL,UAAUc,SAGjB,YAAAC,OAAA,e,EAAA,OACEV,KAAKC,KAAKU,UACVX,KAAKG,SAASS,MAAK,GACnB,IAAMC,EAAoC,QAA7B,EAAAb,KAAKC,KAAKa,SAASD,KAAKE,aAAK,eAAEC,OAAOC,QAAQ,SAAU,KACrEjB,KAAKH,SAASqB,KAAK,mBACnBlB,KAAKJ,gBAAgBc,OAAOG,GAAMM,UAAU,CAC1CC,MAAO,WACL,EAAKnB,KAAKoB,SACV,EAAKlB,SAASS,MAAK,GACnB,EAAKf,SAASqB,KAAK,uEAAmEI,EAAW,CAAEC,SAAU,OAE/GX,KAAM,WACJ,EAAKX,KAAKoB,SACV,EAAKxB,SAASqB,KAAK,mBAAeI,EAAW,CAAEC,SAAU,MACzD,EAAKf,kBAKH,YAAAN,UAAR,WAIE,OAHa,IAAI,KAAU,CACzBW,KAAM,IAAI,KAAY,KAAM,CAAC,cAAqB,aAAmBnB,Q,sCAhD9D8B,GAAkB,qC,wBAAlBA,EAAkB,0E,kdDb/B,iC,uBAAe,gD,8GCQf,I,yHCNI,S,yBADF,oBACE,gCACF,S,4BADiB,sC,qBAIf,S,yBADF,qBACE,gCACF,S,4BADiB,sC,qBAKjB,S,uDCTF,aASE,aAHS,KAAAC,SAAU,EACnB,KAAAC,SAAU,E,OAIV,YAAAC,cAAA,WACE3B,KAAK0B,SAAW1B,KAAK0B,S,sCAPZE,I,wBAAAA,EAAkB,2O,QDP/B,iBAAsB,gCAAS,EAAAD,kBAC7B,4BAIA,6BAGF,QAEA,2C,MAVgD,sCAA0C,sBAC7E,kCAIC,oC,gcCHd","file":"projects_ng-dialogs_src_app_apps-management_create-app_create-app_component_ts.b0c8f6d788a418ea9dda.js","sourcesContent":["export const appNamePattern = /^[A-Za-z](?:[A-Za-z0-9\\s\\(\\)-]+)*$/;\r\nexport const appNameError = 'Standard letters, numbers, spaces, hyphens and round brackets are allowed. Must start with a letter.';\r\n","<ng-container *ngIf=\"{\r\n  loading: loading$ | async\r\n} as data\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">Create App</div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <form [formGroup]=\"form\">\r\n    <mat-form-field appearance=\"standard\" color=\"accent\">\r\n      <mat-label>Name</mat-label>\r\n      <input matInput type=\"text\" formControlName=\"name\">\r\n    </mat-form-field>\r\n    <app-field-hint>\r\n      App name will also be used for the folder\r\n    </app-field-hint>\r\n    <ng-container *ngIf=\"form.controls.name.touched\">\r\n      <app-field-hint *ngIf=\"form.controls.name.errors?.required\" [isError]=\"true\">\r\n        Required\r\n      </app-field-hint>\r\n      <app-field-hint *ngIf=\"form.controls.name.errors?.pattern\" [isError]=\"true\">\r\n        {{ appNameError }}\r\n      </app-field-hint>\r\n    </ng-container>\r\n  </form>\r\n\r\n  <div class=\"dialog-component-actions\">\r\n    <button type=\"button\" mat-raised-button [disabled]=\"data.loading\" (click)=\"closeDialog()\">\r\n      Cancel\r\n    </button>\r\n    <button type=\"button\" mat-raised-button color=\"accent\" [disabled]=\"data.loading || !form.valid\" (click)=\"create()\">\r\n      Create\r\n    </button>\r\n  </div>\r\n</ng-container>\r\n","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { appNameError, appNamePattern } from '../constants/app.patterns';\r\nimport { AppsListService } from '../services/apps-list.service';\r\n\r\n@Component({\r\n  selector: 'app-create-app',\r\n  templateUrl: './create-app.component.html',\r\n  styleUrls: ['./create-app.component.scss'],\r\n})\r\nexport class CreateAppComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: FormGroup;\r\n  loading$: BehaviorSubject<boolean>;\r\n  appNameError = appNameError;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<CreateAppComponent>,\r\n    private appsListService: AppsListService,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    this.form = this.buildForm();\r\n    this.loading$ = new BehaviorSubject(false);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.loading$.complete();\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  create(): void {\r\n    this.form.disable();\r\n    this.loading$.next(true);\r\n    const name = this.form.controls.name.value?.trim().replace(/\\s\\s+/g, ' '); // remove multiple white spaces and tabs;\r\n    this.snackBar.open('Creating app...');\r\n    this.appsListService.create(name).subscribe({\r\n      error: () => {\r\n        this.form.enable();\r\n        this.loading$.next(false);\r\n        this.snackBar.open('Failed to create app. Please check console for more information', undefined, { duration: 3000 });\r\n      },\r\n      next: () => {\r\n        this.form.enable();\r\n        this.snackBar.open('Created app', undefined, { duration: 2000 });\r\n        this.closeDialog();\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildForm(): FormGroup {\r\n    const form = new FormGroup({\r\n      name: new FormControl(null, [Validators.required, Validators.pattern(appNamePattern)]),\r\n    });\r\n    return form;\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\" [ngSwitch]=\"isError\">\r\n  <mat-hint *ngSwitchCase=\"false\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-hint>\r\n\r\n  <mat-error *ngSwitchCase=\"true\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-error>\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}