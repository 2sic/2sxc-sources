{"version":3,"file":"common.c86c498dacf0a5f0.js","mappings":"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","names":["i0","_r1","ctx_r1","openLightspeedFeatureInfo","_r3","openLightspeed","LightSpeedActionsComponent_Conditional_1_Conditional_1_Template","LightSpeedActionsComponent_Conditional_1_Conditional_2_Template","appHasLightSpeed","lightSpeed","Title","appLightSpeedEnabled","LightSpeedActionsComponent","constructor","this","features","inject","FeaturesService","lightSpeedEnabled","isEnabled","FeatureNames","LightSpeed","Id","IsEnabled","params","onOpenLightspeed","lightSpeedOwner","static","t","_angular_core__WEBPACK_IMPORTED_MODULE_2__","VBU","selectors","inputs","standalone","decls","vars","consts","template","rf","ctx","LightSpeedActionsComponent_Conditional_0_Template","LightSpeedActionsComponent_Conditional_1_Template","TippyDirective","MatIconModule","i1","MatBadgeModule","i2","MatRippleModule","i3","encapsulation","AppAdminHelpers","getLightSpeedEditParams","appId","items","ContentTypeName","eavConstants","appMetadata","For","Target","metadata","app","target","TargetType","targetType","Number","Singleton","AnalyzeSettingsService","http","context","dnnContext","getStack","part","key","view","stringifyValue","get","$2sxc","apiUrl","webApiAppRoot","toString","pipe","map","stack","stackItem","_value","JSON","stringify","Value","_angular_core__WEBPACK_IMPORTED_MODULE_3__","jDH","factory","ɵfac","AnalyzeSettingsValueComponent","snackBar","agInit","value","refresh","copy","text","JsonHelpers","tryParse","copyToClipboard","open","duration","styles","AppsListService","name","getAll","zoneId","getInheritable","getPendingApps","create","inheritAppId","templateId","post","installPendingApps","pendingApps","delete","flushCache","FeaturesConfigService","saveFeatures","featuresStates","getLicenses","uploadLicense","file","formData","FormData","append","info","Success","Messages","MessageType","FileUploadMessageTypes","Error","Text","Message","retrieveLicense","webApiLicense","webApiZoneRoot","ZoneService","getLanguages","toggleLanguage","code","enable","cultureCode","getSystemInfo","getLanguagesPermissions","ContentExportService","exportContent","values","selectedIds","selectedIdsString","join","url","webApiEntityRoot","language","defaultLanguage","contentTypeStaticName","recordExport","resourcesReferences","languageReferences","window","exportJson","typeName","webApiTypeRoot","exportEntity","id","prefix","importContentItemDialog","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","ImportContentItemComponent","Promise","all","__webpack_require__","e","then","bind","contentItemsDialog","ContentItemsComponent","contentItemsRoutes","path","component","DialogEntryComponent","data","dialog","children","GoToMetadata","getRoutes","loadChildren","m","ContentExportRoutes","contentImportRoutes","title","EditRoutesSubItems","ContentItemsService","webApiEntityList","contentType","getColumns","webApiFieldsAll","staticName","importItem","from","toBase64","switchMap","fileBase64","AppId","ContentBase64","success","_angular_core__WEBPACK_IMPORTED_MODULE_7__","contentTypeFieldsDialog","ContentTypeFieldsComponent","editContentTypeFieldsDialog","EditContentTypeFieldsComponent","contentTypeFieldsRoutes","GoToPermissions","route","openDialog","vm_r3","feature","icon","FeatureTextInfoComponent_Conditional_0_Conditional_0_Template","show","FeatureTextInfoComponent","FeatureComponentBase","asInfo","asInfo$","next","super","BehaviorSubject","viewModel$","combineLatest","feature$","show$","_angular_core__WEBPACK_IMPORTED_MODULE_1__","FeatureComponentProviders","FeatureDetailService","FeatureTextInfoComponent_Conditional_0_Template","FeatureTextInfoComponent_Conditional_2_Template","FeatureTextInfoComponent_ng_template_3_Template","tmp_1_0","AsyncPipe","TranslateModule","webApiContentGroup","ContentGroupService","getItems","item","guid","index","saveItem","entityId","add","removeItem","contentGroup","parent","fields","getList","saveList","resortedList","getHeader","defaultRoute","metadataRoutes","getUrl","keyType","dialogTitle","encodeURIComponent","getUrlApp","getUrlAttribute","attributeId","attribute","getUrlContentType","getUrlEntity","entity","dropdownInsertValue","guidRegex","input","parse","loadScripts","scriptObjects","callback","iteration","newCallback","length","scrObj","global","test","w","require","src","exportedVar","AppScopes","App","Site","Global","DialogService","openCodeFile","isShared","form","Path","EntityId","hashParams","buildHashParam","keyDialog","DialogTypeConstants","Develop","keyIsShared","keyItems","buildFullUrl","openQueryDesigner","queryId","PipelineDesigner","keyPipelineId","openAppsManagement","tab","extras","keyZoneId","Zone","Object","keys","keyExtras","openAppAdministration","scope","keyAppId","buildSharedHashParams","keyModuleId","moduleId","keyContentBlockId","contentBlockId","keyPartOfPage","sessionStorage","getItem","keyDebug","rawKey","replace","valueTemp","oldHref","keyUrl","oldUrl","URL","newHref","origin","pathname","search","allHashParams","entries","reduce","acc"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/admin-shared/lightspeed-action/lightspeed-action.component.html","./projects/eav-ui/src/app/admin-shared/lightspeed-action/lightspeed-action.component.ts","./projects/eav-ui/src/app/app-administration/app-admin-helpers.ts","./projects/eav-ui/src/app/app-administration/services/analyze-settings.service.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-value/analyze-settings-value.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-value/analyze-settings-value.component.html","./projects/eav-ui/src/app/apps-management/services/apps-list.service.ts","./projects/eav-ui/src/app/apps-management/services/features-config.service.ts","./projects/eav-ui/src/app/apps-management/services/zone.service.ts","./projects/eav-ui/src/app/content-export/services/content-export.service.ts","./projects/eav-ui/src/app/content-items/import-content-item/import-content-item-dialog.config.ts","./projects/eav-ui/src/app/content-items/content-items-dialog.config.ts","./projects/eav-ui/src/app/content-items/content-items.routing.ts","./projects/eav-ui/src/app/content-items/services/content-items.service.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields-dialog.config.ts","./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/edit-content-type-fields-dialog.config.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields.routing.ts","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.html","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.ts","./projects/eav-ui/src/app/manage-content-list/services/content-group.service.ts","./projects/eav-ui/src/app/metadata/go-to-metadata.ts","./projects/eav-ui/src/app/shared/constants/dropdown-insert-value.constant.ts","./projects/eav-ui/src/app/shared/constants/guid.constants.ts","./projects/eav-ui/src/app/shared/helpers/json.helpers.ts","./projects/eav-ui/src/app/shared/helpers/load-scripts.helper.ts","./projects/eav-ui/src/app/shared/models/dialog-context.models.ts","./projects/eav-ui/src/app/shared/services/dialog.service.ts"],"sourcesContent":["@if (!lightSpeedEnabled()) {\r\n  <div class=\"eav-grid-action-button disabled\" tippy=\"Lightspeed is disabled\"\r\n    (click)=\"openLightspeedFeatureInfo()\">\r\n    <mat-icon matBadgeSize=\"small\" matBadge=\"💎\" matBadgePosition=\"below after\" aria-hidden=\"false\">\r\n      bolt\r\n    </mat-icon>\r\n  </div>\r\n}\r\n@else {\r\n  <div class=\"eav-grid-action-button {{ appHasLightSpeed ? '' : 'disabled'}}\" matRipple\r\n    [tippy]=\"appHasLightSpeed ? lightSpeed.Title : 'Not yet configured for LightSpeed'\"\r\n    (click)=\"openLightspeed()\">\r\n    @if (appLightSpeedEnabled) {\r\n      <mat-icon matBadgeSize=\"small\" matBadge=\"✅\" matBadgePosition=\"below after\"\r\n        aria-hidden=\"false\">\r\n        bolt\r\n      </mat-icon>\r\n    }\r\n    @else {\r\n      <mat-icon matBadgeSize=\"small\" matBadge=\"⛔\" matBadgePosition=\"below after\"\r\n        aria-hidden=\"false\">\r\n        bolt\r\n      </mat-icon>\r\n    }\r\n  </div>\r\n}\r\n","import { Component, Input, inject } from '@angular/core';\r\nimport { LightSpeedInfo } from '../../apps-management/models/LightSpeedInfo';\r\nimport { LightSpeedActionsParams } from './lightspeed-actions.models';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n/**\r\n * LightSpeedActionsComponent\r\n *\r\n * Specially meant to be used inside an AGGrid action, and receive the parameters from it.\r\n *\r\n */\r\n@Component({\r\n  selector: 'app-lightspeed-action',\r\n  templateUrl: './lightspeed-action.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    TippyDirective,\r\n    MatIconModule,\r\n    MatBadgeModule,\r\n    MatRippleModule,\r\n  ],\r\n})\r\nexport class LightSpeedActionsComponent {\r\n  /** App needed for lightspeed checks */\r\n  @Input({ required: true }) lightSpeedOwner: unknown;\r\n\r\n  @Input({ required: true }) params: LightSpeedActionsParams;\r\n\r\n  @Input({ required: true }) lightSpeed: LightSpeedInfo | null;\r\n\r\n  public features: FeaturesService = inject(FeaturesService);\r\n  protected lightSpeedEnabled = this.features.isEnabled(FeatureNames.LightSpeed)\r\n\r\n  constructor() {}\r\n\r\n  public get appHasLightSpeed(): boolean {\r\n    return this.lightSpeed?.Id != null;\r\n  }\r\n\r\n  public get appLightSpeedEnabled(): boolean {\r\n    return this.lightSpeed?.IsEnabled == true;\r\n  }\r\n\r\n  openLightspeed(): void {\r\n    this.params.onOpenLightspeed(this.lightSpeedOwner);\r\n  }\r\n\r\n  openLightspeedFeatureInfo(): void {\r\n    this.params.openLightspeedFeatureInfo();\r\n  }\r\n}\r\n","import { eavConstants } from '../shared/constants/eav.constants';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\n\r\nexport class AppAdminHelpers {\r\n  public static getLightSpeedEditParams(appId: number) {\r\n    const form: EditForm = {\r\n      items: [\r\n        {\r\n          ContentTypeName: eavConstants.appMetadata.LightSpeed.ContentTypeName,\r\n          For: {\r\n            Target: eavConstants.metadata.app.target,\r\n            TargetType: eavConstants.metadata.app.targetType,\r\n            Number: appId,\r\n            Singleton: true,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    return form;\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AnalyzePart, SettingsStackItem } from '../sub-dialogs/analyze-settings/analyze-settings.models';\r\n\r\n@Injectable()\r\nexport class AnalyzeSettingsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getStack(part: AnalyzePart, key?: string, view?: string, stringifyValue = false): Observable<SettingsStackItem[]> {\r\n    return this.http.get<SettingsStackItem[]>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'GetStack'), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        part,\r\n        ...(key && { key }),\r\n        ...(view && { view }),\r\n      },\r\n    }).pipe(\r\n      map(stack => {\r\n        if (!stringifyValue) { return stack; }\r\n\r\n        for (const stackItem of stack) {\r\n          stackItem._value = JSON.stringify(stackItem.Value);\r\n        }\r\n        return stack;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../../../shared/helpers/copy-to-clipboard.helper';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { JsonHelpers } from 'projects/eav-ui/src/app/shared/helpers/json.helpers';\r\nimport { TippyDirective } from 'projects/eav-ui/src/app/shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings-value',\r\n  templateUrl: './analyze-settings-value.component.html',\r\n  styleUrls: ['./analyze-settings-value.component.scss'],\r\n  standalone: true,\r\n  imports: [MatRippleModule, TippyDirective,],\r\n})\r\nexport class AnalyzeSettingsValueComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(text: string) {\r\n    text = JsonHelpers.tryParse(text) ?? text;\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"value-box highlight\" [tippy]=\"value\" (click)=\"copy(value)\">\r\n  <span class=\"value\">{{ value }}</span>\r\n</div>\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { App, PendingApp } from '../models/app.model';\r\n\r\n@Injectable()\r\nexport class AppsListService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  getAll() {\r\n    return this.http.get<App[]>(this.apiUrl(webApiAppRoot + 'list'), {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  getInheritable() {\r\n    return this.http.get<App[]>(this.apiUrl(webApiAppRoot + 'InheritableApps'), {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  getPendingApps() {\r\n    return this.http.get<PendingApp[]>(this.apiUrl(webApiAppRoot + 'GetPendingApps'), {\r\n      params: { zoneId: this.context.zoneId.toString() },\r\n    });\r\n  }\r\n\r\n  create(name: string, inheritAppId?: number, templateId?: number) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRoot + 'app'), {}, {\r\n      params: {\r\n        zoneId: this.context.zoneId.toString(),\r\n        name,\r\n        ...(inheritAppId != null && { inheritAppId }),\r\n        ...(templateId != null && { templateId }),\r\n      },\r\n    });\r\n  }\r\n\r\n  installPendingApps(pendingApps: PendingApp[]) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRoot + 'InstallPendingApps'), pendingApps, {\r\n      params: {\r\n        zoneId: this.context.zoneId.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(appId: number) {\r\n    return this.http.delete<null>(this.apiUrl(webApiAppRoot + 'app'), {\r\n      params: { zoneId: this.context.zoneId.toString(), appId: appId.toString() },\r\n    });\r\n  }\r\n\r\n  flushCache(appId: number) {\r\n    return this.http.get<null>(this.apiUrl(webApiAppRoot + 'flushcache'), {\r\n      params: { zoneId: this.context.zoneId.toString(), appId: appId.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { FeatureState } from '../../features/models';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { License, LicenseDownloadInfo, LicenseUploadInfo } from '../models/license.model';\r\n\r\nconst webApiLicense = 'sys/license/';\r\nconst webApiFeatSaveNew = 'admin/feature/SaveNew';\r\nconst webApiLicSummary = 'sys/license/Summary';\r\nconst webApiUpload = 'sys/license/Upload';\r\n\r\n@Injectable()\r\nexport class FeaturesConfigService {\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext) { }\r\n\r\n  saveFeatures(featuresStates: FeatureState[]): Observable<null> {\r\n    return this.http.post<null>(this.dnnContext.$2sxc.http.apiUrl(webApiFeatSaveNew), featuresStates);\r\n  }\r\n\r\n  getLicenses(): Observable<License[]> {\r\n    return this.http.get<License[]>(this.dnnContext.$2sxc.http.apiUrl(webApiLicSummary));\r\n  }\r\n\r\n  uploadLicense(file: File): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http\r\n      .post<LicenseUploadInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiUpload), formData)\r\n      .pipe(\r\n        map(info => {\r\n          const result: FileUploadResult = {\r\n            Success: info.Success,\r\n            Messages: [{\r\n              MessageType: info.Success ? FileUploadMessageTypes.Success : FileUploadMessageTypes.Error,\r\n              Text: `License ${info.Success ? 'uploaded' : 'upload failed'}: ${info.Message}`,\r\n            }],\r\n          };\r\n          return result;\r\n        }),\r\n      );\r\n  }\r\n\r\n  retrieveLicense(): Observable<LicenseDownloadInfo> {\r\n    return this.http.get<LicenseDownloadInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiLicense + 'Retrieve'));\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { SiteLanguage, SiteLanguagePermissions } from '../models/site-language.model';\r\nimport { SystemInfoSet } from '../models/system-info.model';\r\n\r\nconst webApiZoneRoot = 'admin/zone/';\r\n\r\n@Injectable()\r\nexport class ZoneService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getLanguages() {\r\n    return this.http.get<SiteLanguage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiZoneRoot + 'GetLanguages'));\r\n  }\r\n\r\n  toggleLanguage(code: string, enable: boolean) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiZoneRoot + 'SwitchLanguage'), {\r\n      params: { cultureCode: code, enable: enable.toString() },\r\n    });\r\n  }\r\n\r\n  getSystemInfo() {\r\n    return this.http.get<SystemInfoSet>(this.dnnContext.$2sxc.http.apiUrl(webApiZoneRoot + 'GetSystemInfo'));\r\n  }\r\n\r\n  getLanguagesPermissions() {\r\n    return this.http.get<SiteLanguagePermissions[]>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'languages'), {\r\n      params: { appId: this.context.appId },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiTypeRoot } from '../../app-administration/services/content-types.service';\r\nimport { webApiEntityRoot } from '../../edit/shared/services';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentExport } from '../models/content-export.model';\r\n\r\n@Injectable()\r\nexport class ContentExportService {\r\n  constructor(private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  exportContent(values: ContentExport, selectedIds: number[]) {\r\n    const selectedIdsString = selectedIds ? '&selectedids=' + selectedIds.join() : '';\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'Download')\r\n      + '?appId=' + this.context.appId\r\n      + '&language=' + values.language\r\n      + '&defaultLanguage=' + values.defaultLanguage\r\n      + '&contentType=' + values.contentTypeStaticName\r\n      + '&recordExport=' + values.recordExport\r\n      + '&resourcesReferences=' + values.resourcesReferences\r\n      + '&languageReferences=' + values.languageReferences\r\n      + selectedIdsString;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportJson(typeName: string) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiTypeRoot + 'Json')\r\n      + '?appId=' + this.context.appId\r\n      + '&name=' + typeName;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportEntity(id: number, prefix: string, metadata: boolean) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'Json')\r\n      + '?appId=' + this.context.appId\r\n      + '&id=' + id\r\n      + '&prefix=' + prefix\r\n      + '&withMetadata=' + metadata;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const importContentItemDialog: DialogConfig = {\r\n  name: 'IMPORT_CONTENT_ITEM_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportContentItemComponent: ImportContentItemComponent } = await import('./import-content-item.component');\r\n    return ImportContentItemComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentItemsDialog: DialogConfig = {\r\n  name: 'CONTENT_ITEMS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentItemsComponent } = await import('./content-items.component');\r\n    return ContentItemsComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { importContentItemDialog } from './import-content-item/import-content-item-dialog.config';\r\nimport { contentItemsDialog } from './content-items-dialog.config';\r\nimport { EditRoutesSubItems } from '../edit/edit.routing';\r\n\r\nexport const contentItemsRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: contentItemsDialog },\r\n    children: [\r\n      ...GoToMetadata.getRoutes(),\r\n      {\r\n        path: 'export/:contentTypeStaticName',\r\n        loadChildren: () => import('../content-export/content-export.routing').then(m => m.ContentExportRoutes)\r\n      },\r\n      {\r\n        path: 'export/:contentTypeStaticName/:selectedIds',\r\n        loadChildren: () => import('../content-export/content-export.routing').then(m => m.ContentExportRoutes)\r\n      },\r\n      {\r\n        path: 'import',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: importContentItemDialog }\r\n      },\r\n      {\r\n        path: ':contentTypeStaticName/import',\r\n        loadChildren: () => import('../content-import/content-import.routing').then(m => m.contentImportRoutes),\r\n        data: { title: 'Import Items' },\r\n      },\r\n      ...EditRoutesSubItems,\r\n    ]\r\n  },\r\n];\r\n\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { Field } from '../../content-type-fields/models/field.model';\r\nimport { webApiFieldsAll } from '../../content-type-fields/services/content-types-fields.service';\r\nimport { webApiEntityList, webApiEntityRoot } from '../../edit/shared/services';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentItem } from '../models/content-item.model';\r\n\r\n@Injectable()\r\nexport class ContentItemsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentTypeStaticName: string) {\r\n    return this.http.get<ContentItem[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  getColumns(contentTypeStaticName: string) {\r\n    return this.http.get<Field[]>(this.dnnContext.$2sxc.http.apiUrl(webApiFieldsAll), {\r\n      params: { appId: this.context.appId.toString(), staticName: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  importItem(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'upload'), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentTypeFieldsDialog: DialogConfig = {\r\n  name: 'CONTENT_TYPE_FIELDS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentTypeFieldsComponent } = await import('./content-type-fields.component');\r\n    return ContentTypeFieldsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const editContentTypeFieldsDialog: DialogConfig = {\r\n  name: 'EDIT_CONTENT_TYPE_FIELDS_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { EditContentTypeFieldsComponent } = await import('./edit-content-type-fields.component');\r\n    return EditContentTypeFieldsComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { GoToPermissions } from '../permissions/go-to-permissions';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { contentTypeFieldsDialog } from './content-type-fields-dialog.config';\r\nimport { editContentTypeFieldsDialog } from './edit-content-type-fields/edit-content-type-fields-dialog.config';\r\nimport { EditRoutesSubItems } from '../edit/edit.routing';\r\n\r\nexport const contentTypeFieldsRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: contentTypeFieldsDialog },\r\n    children: [\r\n      {\r\n        path: 'add/:contentTypeStaticName',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: editContentTypeFieldsDialog }\r\n      },\r\n      {\r\n        path: 'update/:contentTypeStaticName/:id/:editMode',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: editContentTypeFieldsDialog },\r\n      },\r\n      ...GoToMetadata.getRoutes(),\r\n      GoToPermissions.route,\r\n      ...EditRoutesSubItems,\r\n    ]\r\n  }\r\n];\r\n\r\n","@if (viewModel$ | async; as vm) {\r\n  @if (vm.show) {\r\n    <div class=\"feature-text-info\" (click)=\"openDialog()\" [tippy]=\"'Features.Tooltip' | translate: vm.feature\">\r\n      <mat-icon class=\"icon icon-{{vm.icon}}\">{{ vm.icon }}</mat-icon>\r\n      <div class=\"feature-text-info-content\">\r\n        <div class=\"feature-text-info-title\">{{ 'Features.FeatureNotActivated' | translate }}</div>\r\n        <div class=\"feature-text-info-subtitle\">{{ 'Features.ClickToFindOutMore' | translate }}</div>\r\n      </div>\r\n    </div>\r\n  }\r\n} @else {\r\n  <div>loading...</div>\r\n}\r\n<ng-template #loading>\r\n  <div>loading...</div>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\nimport { FeatureSummary } from '../models';\r\nimport { FeatureComponentBase, FeatureComponentProviders } from '../shared/base-feature.component';\r\nimport { BehaviorSubject, map, Observable, combineLatest } from 'rxjs';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-feature-text-info',\r\n  templateUrl: './feature-text-info.component.html',\r\n  styleUrls: ['./feature-text-info.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n    TippyDirective,\r\n  ],\r\n  providers: [\r\n    ...FeatureComponentProviders,\r\n    FeatureDetailService,\r\n  ]\r\n})\r\nexport class FeatureTextInfoComponent extends FeatureComponentBase {\r\n  @Input()\r\n  public set asInfo(value: boolean) { this.asInfo$.next(value); }\r\n  asInfo$ = new BehaviorSubject<boolean>(false);\r\n\r\n  viewModel$: Observable<FeatureTextInfoViewModel>;\r\n\r\n  constructor() {\r\n    super();\r\n    this.viewModel$ = combineLatest([this.feature$, this.asInfo$, this.show$]).pipe(\r\n      map(([feature, asInfo, show]) =>\r\n      ({\r\n        feature,\r\n        icon: asInfo ? 'info' : 'warning',\r\n        show\r\n      }))\r\n    );\r\n  }\r\n\r\n}\r\n\r\ninterface FeatureTextInfoViewModel {\r\n  feature: FeatureSummary;\r\n  icon: string;\r\n  show: boolean;\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ReplaceConfig } from '../../replace-content/models/replace-config.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentGroup, ContentGroupAdd } from '../models/content-group.model';\r\nimport { GroupHeader } from '../models/group-header.model';\r\n\r\nconst webApiContentGroup = 'cms/contentgroup/';\r\n\r\n@Injectable()\r\nexport class ContentGroupService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getItems(item: ContentGroup) {\r\n    return this.http.get<ReplaceConfig>(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'replace'), {\r\n      params: { appId: this.context.appId.toString(), guid: item.guid, part: item.part, index: item.index.toString() }\r\n    });\r\n  }\r\n\r\n  saveItem(item: ContentGroupAdd) {\r\n    return this.http.post<null>(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'replace'), {}, {\r\n      params: { guid: item.guid, part: item.part, index: item.index.toString(), entityId: item.id.toString(), add: `${item.add}` }\r\n    });\r\n  }\r\n\r\n  removeItem(contentGroup: ContentGroup, index: number) {\r\n    // note: the server checks if the part == 'content' and will automatically treat it as a pair with presentation\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl('cms/list/delete'), {\r\n      params: { index: index, parent: contentGroup.guid, fields: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  getList(contentGroup: ContentGroup) {\r\n    return this.http.get<GroupHeader[]>(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'itemlist'), {\r\n      params: { appId: this.context.appId.toString(), guid: contentGroup.guid, part: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  saveList(contentGroup: ContentGroup, resortedList: GroupHeader[]) {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'itemlist'), resortedList, {\r\n      params: { appId: this.context.appId.toString(), guid: contentGroup.guid, part: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  getHeader(contentGroup: ContentGroup) {\r\n    return this.http.get<GroupHeader>(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'header'), {\r\n      params: { appId: this.context.appId.toString(), guid: contentGroup.guid }\r\n    });\r\n  }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\n\r\nexport class GoToMetadata {\r\n\r\n  static getRoutes(): Route[] {\r\n    const defaultRoute: Route = {\r\n      path: 'metadata/:targetType/:keyType/:key',\r\n      loadChildren: () => import('./metadata.routing').then(m => m.metadataRoutes),\r\n      data: { title: 'Metadata' },\r\n    };\r\n    const routes: Route[] = [\r\n      defaultRoute,\r\n      {\r\n        ...defaultRoute,\r\n        path: `${defaultRoute.path}/title/:title`,\r\n      },\r\n      {\r\n        ...defaultRoute,\r\n        path: `${defaultRoute.path}/contentType/:contentTypeStaticName`,\r\n      },\r\n      {\r\n        ...defaultRoute,\r\n        path: `${defaultRoute.path}/title/:title/contentType/:contentTypeStaticName`,\r\n      }\r\n    ];\r\n    return routes;\r\n  }\r\n\r\n  static getUrl(targetType: number, keyType: MetadataKeyType, key: string, dialogTitle?: string, contentTypeStaticName?: string): string {\r\n    let url = `metadata/${targetType}/${keyType}/${key}`;\r\n    if (dialogTitle) {\r\n      url += `/title/${encodeURIComponent(dialogTitle)}`;\r\n    }\r\n    if (contentTypeStaticName) {\r\n      url += `/contentType/${contentTypeStaticName}`;\r\n    }\r\n    return url;\r\n  }\r\n\r\n  static getUrlApp(appId: number, dialogTitle?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.app.targetType,\r\n      eavConstants.metadata.app.keyType,\r\n      appId.toString(),\r\n      dialogTitle,\r\n    );\r\n  }\r\n\r\n  static getUrlAttribute(attributeId: number, dialogTitle?: string, contentTypeStaticName?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.attribute.targetType,\r\n      eavConstants.metadata.attribute.keyType,\r\n      attributeId.toString(),\r\n      dialogTitle,\r\n      contentTypeStaticName,\r\n    );\r\n  }\r\n\r\n  static getUrlContentType(staticName: string, dialogTitle?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.contentType.targetType,\r\n      eavConstants.metadata.contentType.keyType,\r\n      staticName,\r\n      dialogTitle,\r\n    );\r\n  }\r\n\r\n  static getUrlEntity(guid: string, dialogTitle?: string, contentTypeStaticName?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.entity.targetType,\r\n      eavConstants.metadata.entity.keyType,\r\n      guid,\r\n      dialogTitle,\r\n      contentTypeStaticName,\r\n    );\r\n  }\r\n\r\n}\r\n","export const dropdownInsertValue = 'DROPDOWN_INSERT_VALUE' as const;\r\n","/**\r\n * Do not reuse regex:\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test#using_test_on_a_regex_with_the_global_flag\r\n */\r\nexport function guidRegex(): RegExp {\r\n  return /^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$/i;\r\n}\r\n","\r\nexport class JsonHelpers {\r\n\r\n  /** Tries to parse string as JSON */\r\n  static tryParse(input: string): any {\r\n    try {\r\n      return JSON.parse(input);\r\n    } catch { }\r\n  }\r\n}\r\n","import { EavWindow } from '../models/eav-window.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport function loadScripts(scriptObjects: ScriptObject[], callback: () => void, iteration = 0) {\r\n  const isLast = scriptObjects.length === iteration + 1;\r\n  const newCallback = isLast ? callback : loadScripts.bind(this, scriptObjects, callback, iteration + 1);\r\n  const scrObj = scriptObjects[iteration];\r\n\r\n  const global = typeof scrObj.test === 'string' ? scrObj.test : null;\r\n  const test = typeof scrObj.test === 'function' ? scrObj.test : null;\r\n  const w = window as Record<string, any>;\r\n\r\n  if (global != null && !!w[global]) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  if (test != null && test()) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  window.require([scrObj.src], (exportedVar: any) => {\r\n    if (exportedVar && !w[global]) {\r\n      w[global] = exportedVar;\r\n    }\r\n    newCallback();\r\n  });\r\n}\r\n\r\nexport interface ScriptObject {\r\n  /** window.xxx or a function that returns a boolean */\r\n  test: string | (() => boolean);\r\n  src: string;\r\n}\r\n","import { PermissionsCount } from '../../app-administration/models/permissions-count.model';\r\nimport { Language } from '../../edit/shared/models';\r\n\r\nexport interface DialogContextApp {\r\n  /** Root for app APIs and content/query */\r\n  Api: string;\r\n  Folder: string;\r\n  GettingStartedUrl: string;\r\n  Id: number;\r\n  Identifier: string;\r\n  IsContentApp: boolean;\r\n  IsGlobalApp: boolean;\r\n  IsInherited: boolean;\r\n  IsShared: boolean;\r\n  IsSiteApp: boolean;\r\n  Name: string;\r\n  Permissions: PermissionsCount;\r\n  SettingsScope: AppScope;\r\n  Url: string;\r\n  SharedUrl: string;\r\n\r\n  /** New app icon */\r\n  Icon: string;\r\n}\r\n\r\nexport interface ApiKeySpecs {\r\n  NameId: string;\r\n  ApiKey: string;\r\n  IsDemo: boolean;\r\n}\r\n\r\nexport const AppScopes = {\r\n  App: 'App',\r\n  Site: 'Site',\r\n  Global: 'Global',\r\n} as const;\r\nexport type AppScope = typeof AppScopes[keyof typeof AppScopes];\r\n\r\nexport interface DialogContextEnable {\r\n  /** Determines if app admin should show app-permissions (true for Apps, false for Content and Global) */\r\n  AppPermissions?: boolean;\r\n  /** Determines if Code editing should be enabled (true for super-users) */\r\n  CodeEditor?: boolean;\r\n  DebugMode: boolean;\r\n  /** True if saving of formulas should be enabled (for edit-ui) */\r\n  FormulaSave?: boolean;\r\n  /** While debug is enabled, this allows some Edit Ui actions even when they are disabled in fields settings */\r\n  OverrideEditRestrictions?: boolean;\r\n  /** Determines if Queries should be enabled (true for Apps) */\r\n  Query?: boolean;\r\n}\r\n\r\nexport interface DialogContextLanguage {\r\n  Current: string;\r\n  List: Language[];\r\n  Primary: string;\r\n}\r\n\r\nexport interface DialogContextPage {\r\n  Id: number;\r\n}\r\n\r\nexport interface DialogContextSite {\r\n  DefaultApp: DialogContextSiteApp;\r\n  Id: number;\r\n  PrimaryApp: DialogContextSiteApp;\r\n  Url: string;\r\n}\r\n\r\nexport interface DialogContextSystem {\r\n  DefaultApp: DialogContextSiteApp;\r\n  PrimaryApp: DialogContextSiteApp;\r\n  Url: string;\r\n}\r\n\r\nexport interface DialogContextSiteApp {\r\n  ZoneId: number;\r\n  AppId: number;\r\n}\r\n\r\nexport interface DialogContextUser {\r\n  Email: string;\r\n  Id: number;\r\n  Guid: string;\r\n  IsAnonymous: boolean;\r\n  IsSiteAdmin: boolean;\r\n  IsContentAdmin: boolean;\r\n  IsSystemAdmin: boolean;\r\n  Name: string;\r\n  Username: string;\r\n}\r\n\r\n// export interface DialogContextFeature {\r\n//   NameId: string;\r\n//   Enabled: boolean;\r\n// }\r\n","import { Injectable } from '@angular/core';\r\nimport { DialogTypeConstants } from '../constants/dialog-type.constants';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyAppId, keyContentBlockId, keyDebug, keyDialog, keyExtras, keyIsShared, keyItems, keyModuleId, keyPartOfPage, keyPipelineId, keyUrl, keyZoneId, prefix } from '../constants/session.constants';\r\nimport { DialogHashParams, ExtrasParam } from '../models/dialog-url-params.model';\r\nimport { EditForm, ViewOrFileIdentifier } from '../models/edit-form.model';\r\nimport { Context } from './context';\r\n\r\n@Injectable()\r\nexport class DialogService {\r\n  constructor(private context: Context) { }\r\n\r\n  openCodeFile(path: string, isShared: boolean, templateId?: number) {\r\n    const dialog = DialogTypeConstants.Develop;\r\n    const form = {\r\n      items: [{\r\n        Path: path,\r\n        ...(templateId != null && { EntityId: templateId }),\r\n      }] as ViewOrFileIdentifier[]\r\n    };\r\n\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyDialog, dialog),\r\n      ...this.buildHashParam(keyIsShared, isShared.toString()),\r\n      ...this.buildHashParam(keyItems, JSON.stringify(form.items)),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openQueryDesigner(queryId: number) {\r\n    const dialog = DialogTypeConstants.PipelineDesigner;\r\n    const form: EditForm = {\r\n      items: [{ EntityId: queryId }],\r\n    };\r\n\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyDialog, dialog),\r\n      ...this.buildHashParam(keyPipelineId, queryId.toString()),\r\n      ...this.buildHashParam(keyItems, JSON.stringify(form.items)),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openAppsManagement(zoneId: number, tab?: string) {\r\n    const extras: ExtrasParam = {\r\n      ...(tab && { tab }),\r\n    };\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyZoneId, zoneId.toString()),\r\n      ...this.buildHashParam(keyDialog, DialogTypeConstants.Zone),\r\n      ...(Object.keys(extras).length ? this.buildHashParam(keyExtras, JSON.stringify(extras)) : ''),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openAppAdministration(zoneId: number, appId: number, tab?: string, scope?: string) {\r\n    const extras: ExtrasParam = {\r\n      ...(tab && { tab }),\r\n      ...(scope && { scope }),\r\n    };\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyZoneId, zoneId.toString()),\r\n      ...this.buildHashParam(keyAppId, appId.toString()),\r\n      ...this.buildHashParam(keyDialog, DialogTypeConstants.App),\r\n      ...(Object.keys(extras).length ? this.buildHashParam(keyExtras, JSON.stringify(extras)) : ''),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  /** A lot of the link is identical when opening the admin-dialogs in a new window */\r\n  private buildSharedHashParams() {\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyZoneId, this.context.zoneId.toString()),\r\n      ...this.buildHashParam(keyAppId, this.context.appId.toString()),\r\n      ...this.buildHashParam(keyModuleId, this.context.moduleId?.toString()),\r\n      ...this.buildHashParam(keyContentBlockId, this.context.contentBlockId?.toString()),\r\n      ...this.buildHashParam(keyPartOfPage),\r\n      ...(sessionStorage.getItem(keyDebug) ? this.buildHashParam(keyDebug) : {}),\r\n    };\r\n    return hashParams;\r\n  }\r\n\r\n  /** Encodes param if necessary */\r\n  private buildHashParam(key: string, value?: string) {\r\n    const rawKey = key.replace(prefix, '');\r\n    const valueTemp = (value != null) ? value : sessionStorage.getItem(key);\r\n    const rawValue = encodeURIComponent(valueTemp);\r\n    const hashParam: DialogHashParams = { [rawKey]: rawValue };\r\n    return hashParam;\r\n  }\r\n\r\n  private buildFullUrl(hashParams: DialogHashParams) {\r\n    const oldHref = sessionStorage.getItem(keyUrl);\r\n    const oldUrl = new URL(oldHref);\r\n    const newHref = oldUrl.origin + oldUrl.pathname + oldUrl.search;\r\n\r\n    const allHashParams: DialogHashParams = {\r\n      ...this.buildSharedHashParams(),\r\n      ...hashParams,\r\n    };\r\n    const hashUrl = Object.entries(allHashParams).reduce((acc, [key, value]) => `${acc}&${key}=${value}`, '').replace('&', '#');\r\n    return newHref + hashUrl;\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}