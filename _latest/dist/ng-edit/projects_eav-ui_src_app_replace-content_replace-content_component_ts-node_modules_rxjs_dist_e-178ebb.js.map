{"version":3,"file":"projects_eav-ui_src_app_replace-content_replace-content_component_ts-node_modules_rxjs_dist_e-178ebb.js","mappings":"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","sources":["./projects/eav-ui/src/app/replace-content/replace-content.component.ts","./projects/eav-ui/src/app/replace-content/replace-content.component.html","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts","./projects/eav-ui/src/app/shared/services/service-base.ts","./node_modules/rxjs/dist/esm/internal/operators/delay.js","./node_modules/rxjs/dist/esm/internal/operators/delayWhen.js","./node_modules/rxjs/dist/esm/internal/operators/ignoreElements.js"],"sourcesContent":["import { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\r\nimport { Component, HostBinding, model, OnInit } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatAutocompleteModule, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { convert, transient } from '../../../../core';\r\nimport { ContentGroupAdd } from '../manage-content-list/models/content-group.model';\r\nimport { ContentGroupService } from '../manage-content-list/services/content-group.service';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep } from '../shared/models/edit-form.model';\r\nimport { DialogRoutingService } from '../shared/routing/dialog-routing.service';\r\nimport { computedObj, signalObj } from '../shared/signals/signal.utilities';\r\n\r\n@Component({\r\n  selector: 'app-replace-content',\r\n  templateUrl: './replace-content.component.html',\r\n  styleUrls: ['./replace-content.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    RouterOutlet,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    FormsModule,\r\n    CdkVirtualScrollViewport,\r\n    CdkFixedSizeVirtualScroll,\r\n    CdkVirtualForOf,\r\n    MatOptionModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogActions,\r\n  ],\r\n})\r\nexport class ReplaceContentComponent implements OnInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  #contentGroupSvc = transient(ContentGroupService);\r\n  #dialogRoutes = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<ReplaceContentComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  #params = convert(this.#dialogRoutes.getParams(['guid', 'part', 'index']), p => ({\r\n    guid: p.guid,\r\n    part: p.part,\r\n    index: parseInt(p.index, 10),\r\n  }));\r\n\r\n  #contentTypeName: string;\r\n  \r\n  /** Mode is adding the to-be-selected item, not replace */\r\n  protected isAddMode = signalObj('isAddMode', !!this.#dialogRoutes.getQueryParam('add'));\r\n\r\n  /** The text being searched for */\r\n  filterText = model<string>('');\r\n\r\n  /** The options which could be used */\r\n  #optionsRaw = signalObj<ReplaceOption[]>('options', []);\r\n\r\n  /** The options after filtering */\r\n  options = computedObj<ReplaceOption[]>('filteredOptions', () => {\r\n    const filter = this.filterText().toLocaleLowerCase();\r\n    return this.#optionsRaw()\r\n      .filter(o => o.label.toLocaleLowerCase().includes(filter));\r\n  });\r\n\r\n  /** The system has a selected item, when the text exactly matches the label of an option */\r\n  hasSelection = computedObj<boolean>('isMatch', () => this.options().map(o => o.label).includes(this.filterText()));\r\n\r\n  ngOnInit() {\r\n    this.#fetchConfig(false, null);\r\n\r\n    this.#dialogRoutes.doOnDialogClosed(() => {\r\n      const navigation = this.#dialogRoutes.router.getCurrentNavigation();\r\n      const editResult = navigation.extras?.state;\r\n      const cloneId: number = editResult?.[Object.keys(editResult)[0]];\r\n      this.#fetchConfig(true, cloneId);\r\n    });\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  select(event: MatAutocompleteSelectedEvent) {\r\n    this.filterText.set(event.option.value);\r\n  }\r\n\r\n  copySelected() {\r\n    const contentGroup = this.#buildContentGroup();\r\n    const form: EditForm = {\r\n      items: [EditPrep.copy(this.#contentTypeName, contentGroup.id)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  save() {\r\n    this.snackBar.open('Saving...');\r\n    const contentGroup = this.#buildContentGroup();\r\n    this.#contentGroupSvc.saveItem(contentGroup).subscribe(() => {\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.closeDialog();\r\n    });\r\n  }\r\n\r\n  #fetchConfig(isRefresh: boolean, cloneId: number) {\r\n    const contentGroup = this.#buildContentGroup();\r\n    this.#contentGroupSvc.getItems(contentGroup).subscribe(replaceConfig => {\r\n      const options = Object.entries(replaceConfig.Items)\r\n        .map(([itemId, itemName]) => ({\r\n          id: parseInt(itemId, 10),\r\n          label: `${itemName} (${itemId})`,\r\n        } satisfies ReplaceOption));\r\n      this.#optionsRaw.set(options);\r\n\r\n      // don't set selected option if dialog should be in add-mode and don't change selected option on refresh unless it's cloneId\r\n      if ((!contentGroup.add && !isRefresh) || cloneId != null) {\r\n        const newId = !isRefresh ? replaceConfig.SelectedId : cloneId;\r\n        const newFilter = this.#optionsRaw().find(o => o.id === newId)?.label || '';\r\n        this.filterText.set(newFilter);\r\n      }\r\n      this.#contentTypeName = replaceConfig.ContentTypeName;\r\n    });\r\n  }\r\n\r\n  #buildContentGroup() {\r\n    const filter = this.filterText();\r\n    const id = this.#optionsRaw().find(o => o.label === filter)?.id ?? null;\r\n\r\n    const contentGroup: ContentGroupAdd = {\r\n      id,\r\n      ...this.#params,\r\n      add: this.isAddMode(),\r\n    };\r\n    return contentGroup;\r\n  }\r\n}\r\n\r\n\r\ninterface ReplaceOption {\r\n  id: number;\r\n  label: string;\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">{{ isAddMode() ? 'Add Existing Item' : 'Replace Content Item' }}</div>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <router-outlet></router-outlet>\r\n    <p>{{isAddMode()\r\n      ? 'Select a content-item to add to this list.'\r\n      : 'By replacing a content-item you can make other content appear in the slot of the original content.'}}\r\n    </p>\r\n    <div class=\"eav-options-box\">\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Choose item</mat-label>\r\n        <!-- Search field -->\r\n        <input matInput [matAutocomplete]=\"auto\" [(ngModel)]=\"filterText\"> \r\n        <!-- Auto-Complete list based on search -->\r\n        <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"select($event)\"\r\n          [hideSingleSelectionIndicator]=\"true\">\r\n          <cdk-virtual-scroll-viewport itemSize=\"48\" minBufferPx=\"500\" maxBufferPx=\"1000\"\r\n            [style.height.px]=\"options().length < 6 ? options().length * 48 : 240\"\r\n          >\r\n            <mat-option *cdkVirtualFor=\"let option of options()\" [value]=\"option.label\">{{ option.label }}</mat-option>\r\n          </cdk-virtual-scroll-viewport>\r\n        </mat-autocomplete>\r\n      </mat-form-field>\r\n      <!-- Copy Button -->\r\n      <button mat-icon-button tippy=\"Copy\" [disabled]=\"!hasSelection()\" (click)=\"copySelected()\">\r\n        <mat-icon>file_copy</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <!-- Close / Save -->\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-raised-button (click)=\"closeDialog()\">Cancel</button>\r\n    <button mat-raised-button color=\"accent\" [disabled]=\"!hasSelection()\" (click)=\"save()\">Save</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { ServiceBase } from '../services/service-base';\r\nimport { classLog } from '../logging';\r\n\r\nconst logSpecs = {\r\n  doOnDialogClosed: true,\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase {\r\n\r\n  log = classLog({DialogRoutingService}, logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  getParam(key: string): string {\r\n    return this.route.snapshot.paramMap.get(key);\r\n  }\r\n\r\n  getParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const paramMap = this.route.snapshot.paramMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = paramMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  getQueryParam(key: string): string {\r\n    return this.route.snapshot.queryParamMap.get(key);\r\n  }\r\n\r\n  getQueryParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const queryParamMap = this.route.snapshot.queryParamMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = queryParamMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe(() => callback())\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  public navParentFirstChild(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route.parent.firstChild });\r\n  }\r\n  \r\n  childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import { asyncScheduler } from '../scheduler/async';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\nexport function delay(due, scheduler = asyncScheduler) {\n    const duration = timer(due, scheduler);\n    return delayWhen(() => duration);\n}\n","import { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\nimport { innerFrom } from '../observable/innerFrom';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return (source) => concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n    }\n    return mergeMap((value, index) => innerFrom(delayDurationSelector(value, index)).pipe(take(1), mapTo(value)));\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nexport function ignoreElements() {\n    return operate((source, subscriber) => {\n        source.subscribe(createOperatorSubscriber(subscriber, noop));\n    });\n}\n"],"names":["CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","model","FormsModule","MatAutocompleteModule","MatButtonModule","MatOptionModule","MatDialogActions","MatDialogRef","MatFormFieldModule","MatIconModule","MatInputModule","MatSnackBar","RouterOutlet","convert","transient","ContentGroupService","convertFormToUrl","EditPrep","DialogRoutingService","computedObj","signalObj","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","option_r2","label","ɵɵadvance","ɵɵtextInterpolate","ReplaceContentComponent","contentGroupSvc","dialogRoutes","constructor","dialog","snackBar","hostClass","params","getParams","p","guid","part","index","parseInt","isAddMode","getQueryParam","filterText","optionsRaw","options","filter","toLocaleLowerCase","o","includes","hasSelection","map","contentTypeName","ngOnInit","fetchConfig","doOnDialogClosed","navigation","router","getCurrentNavigation","editResult","extras","state","cloneId","Object","keys","closeDialog","close","select","event","set","option","value","copySelected","contentGroup","buildContentGroup","form","items","copy","id","formUrl","navRelative","save","open","saveItem","subscribe","duration","#fetchConfig","isRefresh","getItems","replaceConfig","entries","Items","itemId","itemName","add","newId","SelectedId","newFilter","find","ContentTypeName","#buildContentGroup","ɵɵdirectiveInject","i1","i2","selectors","hostVars","hostBindings","ReplaceContentComponent_HostBindings","rf","ctx","ɵɵhostProperty","ɵɵelement","ɵɵtwoWayListener","ReplaceContentComponent_Template_input_ngModelChange_12_listener","$event","ɵɵrestoreView","_r1","ɵɵtwoWayBindingSet","ɵɵresetView","ɵɵlistener","ReplaceContentComponent_Template_mat_autocomplete_optionSelected_13_listener","ɵɵtemplate","ReplaceContentComponent_mat_option_16_Template","ReplaceContentComponent_Template_button_click_17_listener","ReplaceContentComponent_Template_button_click_21_listener","ReplaceContentComponent_Template_button_click_23_listener","ɵɵtextInterpolate1","auto_r3","ɵɵtwoWayProperty","ɵɵstyleProp","length","i3","MatFormField","MatLabel","i4","MatInput","i5","MatAutocomplete","i6","MatOption","MatAutocompleteTrigger","i7","DefaultValueAccessor","NgControlStatus","NgModel","i8","MatButton","MatIconButton","i9","MatIcon","styles","ActivatedRoute","NavigationEnd","Router","pairwise","startWith","ServiceBase","classLog","logSpecs","route","log","snapshot","url","getParam","key","paramMap","get","reduce","acc","queryParamMap","getQueryParams","callback","l","fnIf","subscriptions","childDialogClosed$","end","navPath","navigate","commands","relativeTo","navParentFirstChild","parent","firstChild","events","pipe","hadChildBefore","hasChildNow","ɵɵinject","factory","ɵfac","Subscription","ngOnDestroy","destroy","unsubscribe","asyncScheduler","delayWhen","timer","delay","due","scheduler","concat","take","ignoreElements","mapTo","mergeMap","innerFrom","delayDurationSelector","subscriptionDelay","source","operate","createOperatorSubscriber","noop","subscriber"],"sourceRoot":"webpack:///","x_google_ignoreList":[4,5,6]}