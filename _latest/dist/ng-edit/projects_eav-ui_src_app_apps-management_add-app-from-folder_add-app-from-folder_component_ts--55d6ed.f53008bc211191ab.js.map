{"version":3,"file":"projects_eav-ui_src_app_apps-management_add-app-from-folder_add-app-from-folder_component_ts--55d6ed.f53008bc211191ab.js","mappings":"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","names":["AppNameShowComponent","agInit","params","this","name","value","tooltip","tooltipGetter","data","refresh","static","t","core","VBU","selectors","standalone","features","i0","decls","vars","consts","template","rf","ctx","MatIconModule","i1","TippyDirective","styles","CheckboxCellComponent","onChange","event","currentTarget","checked","$event","isDisabled","vm_r2","pendingApps","ctx_r2","gridOptions","AddAppFromFolderComponent_Conditional_0_Conditional_8_Template","AddAppFromFolderComponent_Conditional_0_Conditional_9_Template","_r1","closeDialog","install","length","installing","AddAppFromFolderComponent","constructor","dialogRef","snackBar","hostClass","buildGridOptions","refreshApps$","Subject","inject","FeaturesScopedService","isAddFromFolderEnabled","isEnabled","FeatureNames","AppSyncWithSiteFiles","appsListService","transient","AppsListService","ngOnInit","viewModel$","pipe","startWith","undefined","switchMap","getPendingApps","catchError","of","share","map","ngOnDestroy","complete","close","app","enabled","push","splice","indexOf","open","duration","installPendingApps","subscribe","error","next","defaultGridOptions","columnDefs","field","width","cellClass","sortable","cellRenderer","cellRendererParams","flex","sort","filter","pendingApp","ServerFolder","Folder","Version","Description","i2","hostVars","hostBindings","AddAppFromFolderComponent_Conditional_0_Template","tmp_0_0","MatDialogActions","MatButtonModule","i3","AsyncPipe","FeatureTextInfoComponent","SxcGridModule","i4","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","LightSpeed","ContentSecurityPolicy","PermissionsByLanguage","FieldShareConfigManagement","AppExportAssetsAdvanced","PickerUiCheckbox","PickerUiRadio","PickerSourceCsv","ctx_r1","openDialog","vm_r3","feature","icon","FeatureTextInfoComponent_Conditional_0_Conditional_0_Template","show","FeatureComponentBase","asInfo","asInfo$","super","BehaviorSubject","combineLatest","feature$","show$","_angular_core__WEBPACK_IMPORTED_MODULE_1__","inputs","FeatureTextInfoComponent_Conditional_0_Template","FeatureTextInfoComponent_Conditional_2_Template","FeatureTextInfoComponent_ng_template_3_Template","tmp_1_0","TranslateModule","FeatureDetailService","http","dnnContext","getFeatureDetails","featureNameId","get","$2sxc","apiUrl","webApiRoot","nameId","jDH","factory","ɵfac","id_r3","_r2","ctx_r3","copyToClipboard","FeatureInfoDialogComponent_Conditional_0_Conditional_15_Template","feature_r5","findOutMore","link","description","tmp_6_0","FeatureInfoDialogComponent","dialogData","featureDetailService","text","window","MAT_DIALOG_DATA","FeatureInfoDialogComponent_Conditional_0_Template","MatCardModule","i5","i6","SafeHtmlPipe","featureNameId$","showIf","showIf$","#dialog","#viewContainerRef","#changeDetectorRef","#featuresService","MatDialog","ViewContainerRef","ChangeDetectorRef","featName","get$","feat","openFeatureDialog","FsC","dialog","featureId","viewContainerRef","changeDetectorRef","autoFocus","markForCheck","webApiAppRoot","ImportAppService","context","importApp","file","changedName","retryOnDuplicate","formData","FormData","append","post","zoneId","toString","result","Messages","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","_angular_core__WEBPACK_IMPORTED_MODULE_4__","HttpServiceBase","DnnContext","HttpClient","Context","appId"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/apps-management/add-app-from-folder/app-name-show/app-name-show.component.ts","./projects/eav-ui/src/app/apps-management/add-app-from-folder/app-name-show/app-name-show.component.html","./projects/eav-ui/src/app/apps-management/add-app-from-folder/checkbox-cell/checkbox-cell.component.ts","./projects/eav-ui/src/app/apps-management/add-app-from-folder/checkbox-cell/checkbox-cell.component.html","./projects/eav-ui/src/app/apps-management/add-app-from-folder/add-app-from-folder.component.html","./projects/eav-ui/src/app/apps-management/add-app-from-folder/add-app-from-folder.component.ts","./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.html","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.ts","./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/shared/services/http-service-base.ts"],"sourcesContent":["import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { IdFieldParams } from '../../../shared/components/id-field/id-field.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-app-name-show',\r\n  templateUrl: './app-name-show.component.html',\r\n  styleUrls: ['./app-name-show.component.scss'],\r\n  standalone: true,\r\n  imports: [MatIconModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class AppNameShowComponent implements ICellRendererAngularComp {\r\n  name: string;\r\n  tooltip: string;\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.name = params.value;\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"name-box\">\r\n  <span>{{ name }}</span>\r\n  <mat-icon class=\"info-icon\" [tippy]=\"tooltip\">info</mat-icon>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { CheckboxCellParams } from './checkbox-cell.model';\r\n\r\n@Component({\r\n  selector: 'app-checkbox-cell',\r\n  templateUrl: './checkbox-cell.component.html',\r\n  styleUrls: ['./checkbox-cell.component.scss'],\r\n  standalone: true,\r\n})\r\nexport class CheckboxCellComponent implements ICellRendererAngularComp {\r\n  params: ICellRendererParams & CheckboxCellParams;\r\n\r\n  agInit(params: ICellRendererParams & CheckboxCellParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  public onChange(event: any) {\r\n    this.params.onChange(this.params.data, event.currentTarget.checked);\r\n  }\r\n}\r\n","<div class=\"checkbox-box\">\r\n  <input class=\"checkbox-input\" type=\"checkbox\" [disabled]=\"params.isDisabled\" [checked]=\"params.value\" (change)=\"onChange($event)\">\r\n</div>\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">Add App from Folder</div>\r\n    </div>\r\n    <div class=\"eav-dialog-content\">\r\n      <app-feature-text-info [featureNameId]=\"'AppSyncWithSiteFiles'\"></app-feature-text-info>\r\n      <p>\r\n        Select an app from the apps-folder which has been copied there (or git-cloned) but not installed yet.\r\n      </p>\r\n      @if (vm.pendingApps?.length == 0) {\r\n        <p>\r\n          Nothing to show. All apps in the 2sxc folder are already installed.\r\n        </p>\r\n      }\r\n      @if (vm.pendingApps?.length > 0) {\r\n        <div>\r\n          <ag-grid-angular class=\"ag-theme-material eav-grid\" [rowData]=\"vm.pendingApps\"\r\n            [gridOptions]=\"gridOptions\">\r\n          </ag-grid-angular>\r\n        </div>\r\n      }\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button type=\"button\" mat-raised-button (click)=\"closeDialog()\">\r\n        Cancel\r\n      </button>\r\n      <button type=\"button\" mat-raised-button color=\"accent\" [disabled]=\"pendingApps.length === 0 || installing\"\r\n        (click)=\"install()\">\r\n        Install\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n}\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, HostBinding, OnDestroy, OnInit, inject } from \"@angular/core\";\r\nimport { MatDialogRef, MatDialogActions } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { catchError, map, Observable, of, share, startWith, Subject, switchMap } from \"rxjs\";\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from \"../../shared/constants/default-grid-options.constants\";\r\nimport { FeaturesScopedService } from '../../features/features-scoped.service';\r\nimport { PendingApp } from \"../models/app.model\";\r\nimport { AppsListService } from \"../services/apps-list.service\";\r\nimport { AppNameShowComponent } from './app-name-show/app-name-show.component';\r\nimport { CheckboxCellComponent } from './checkbox-cell/checkbox-cell.component';\r\nimport { CheckboxCellParams } from './checkbox-cell/checkbox-cell.model';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FeatureTextInfoComponent } from '../../features/feature-text-info/feature-text-info.component';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { transient } from '../../core';\r\n\r\n@Component({\r\n  selector: 'app-add-app-from-folder',\r\n  templateUrl: './add-app-from-folder.component.html',\r\n  styleUrls: ['./add-app-from-folder.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogActions,\r\n    MatButtonModule,\r\n    AsyncPipe,\r\n    FeatureTextInfoComponent,\r\n    SxcGridModule,\r\n  ],\r\n})\r\nexport class AddAppFromFolderComponent  implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  gridOptions = this.buildGridOptions();\r\n  pendingApps: PendingApp[] = [];\r\n  installing: boolean = false;\r\n\r\n  private refreshApps$ = new Subject<void>();\r\n\r\n  viewModel$: Observable<AddAppFromFolderViewModel>;\r\n\r\n  public features = inject(FeaturesScopedService);\r\n  private isAddFromFolderEnabled = this.features.isEnabled(FeatureNames.AppSyncWithSiteFiles);\r\n  private appsListService = transient(AppsListService);\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AddAppFromFolderComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // TODO: @2dg - this should be easy to get rid of #remove-observables\r\n    this.viewModel$ =  this.refreshApps$.pipe(\r\n      startWith(undefined),\r\n      switchMap(() => this.appsListService.getPendingApps().pipe(catchError(() => of(undefined)))),\r\n      share(),\r\n      map((pendingApps) => ({ pendingApps })),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.refreshApps$.complete();\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onChange(app: PendingApp, enabled: boolean) {\r\n    if (enabled)\r\n      this.pendingApps.push(app);\r\n    else\r\n      this.pendingApps.splice(this.pendingApps.indexOf(app), 1);\r\n  }\r\n\r\n  install(): void {\r\n    this.installing = true;\r\n    this.snackBar.open('Installing', undefined, { duration: 2000 });\r\n    this.appsListService.installPendingApps(this.pendingApps).subscribe({\r\n      error: () => {\r\n        this.installing = false;\r\n        this.snackBar.open('Failed to install app. Please check console for more information', undefined, { duration: 3000 });\r\n      },\r\n      next: () => {\r\n        this.installing = false;\r\n        this.snackBar.open('Installed app', undefined, { duration: 2000 });\r\n        this.closeDialog();\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          field: '',\r\n          width: 40,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          cellRenderer: CheckboxCellComponent,\r\n          cellRendererParams: (() => {\r\n            const params: CheckboxCellParams = {\r\n              isDisabled: !this.isAddFromFolderEnabled,\r\n              onChange: (app, enabled) => this.onChange(app, enabled),\r\n            };\r\n            return params;\r\n          }),\r\n        },\r\n        {\r\n          field: 'Name',\r\n          flex: 1,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          sort: 'asc',\r\n          filter: 'agTextColumnFilter',\r\n          cellRenderer: AppNameShowComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<PendingApp> = {\r\n              tooltipGetter: (pendingApp) => `Server folder: ${pendingApp.ServerFolder}\\nFolder: ${pendingApp.Folder}\\nVersion: ${pendingApp.Version}\\nDescription: ${pendingApp.Description}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ]\r\n    }\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface AddAppFromFolderViewModel {\r\n  pendingApps: PendingApp[];\r\n}\r\n","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  FieldShareConfigManagement: 'FieldShareConfigManagement',\r\n  AppExportAssetsAdvanced: 'AppExportAssetsAdvanced',\r\n\r\n  // Picker features\r\n  PickerUiCheckbox: 'PickerUiCheckbox',\r\n  PickerUiRadio: 'PickerUiRadio',\r\n  PickerSourceCsv: 'PickerSourceCsv',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","@if (viewModel$ | async; as vm) {\r\n  @if (vm.show) {\r\n    <div class=\"feature-text-info\" (click)=\"openDialog()\" [tippy]=\"'Features.Tooltip' | translate: vm.feature\">\r\n      <mat-icon class=\"icon icon-{{vm.icon}}\">{{ vm.icon }}</mat-icon>\r\n      <div class=\"feature-text-info-content\">\r\n        <div class=\"feature-text-info-title\">{{ 'Features.FeatureNotActivated' | translate }}</div>\r\n        <div class=\"feature-text-info-subtitle\">{{ 'Features.ClickToFindOutMore' | translate }}</div>\r\n      </div>\r\n    </div>\r\n  }\r\n} @else {\r\n  <div>loading...</div>\r\n}\r\n<ng-template #loading>\r\n  <div>loading...</div>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\nimport { FeatureSummary } from '../models';\r\nimport { FeatureComponentBase } from '../shared/base-feature.component';\r\nimport { BehaviorSubject, map, Observable, combineLatest } from 'rxjs';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-feature-text-info',\r\n  templateUrl: './feature-text-info.component.html',\r\n  styleUrls: ['./feature-text-info.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class FeatureTextInfoComponent extends FeatureComponentBase {\r\n  @Input()\r\n  public set asInfo(value: boolean) { this.asInfo$.next(value); }\r\n  asInfo$ = new BehaviorSubject<boolean>(false);\r\n\r\n  viewModel$: Observable<FeatureTextInfoViewModel>;\r\n\r\n  constructor() {\r\n    super();\r\n    this.viewModel$ = combineLatest([this.feature$, this.asInfo$, this.show$]).pipe(\r\n      map(([feature, asInfo, show]) =>\r\n      ({\r\n        feature,\r\n        icon: asInfo ? 'info' : 'warning',\r\n        show\r\n      }))\r\n    );\r\n  }\r\n\r\n}\r\n\r\ninterface FeatureTextInfoViewModel {\r\n  feature: FeatureSummary;\r\n  icon: string;\r\n  show: boolean;\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Feature } from '../models';\r\n\r\nexport const webApiRoot = \"admin/feature/\";\r\n\r\n@Injectable()\r\nexport class FeatureDetailService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private dnnContext: DnnContext\r\n  ) { }\r\n\r\n  getFeatureDetails(featureNameId: string): Observable<Feature> {\r\n    return this.http.get<Feature>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot + 'details'), {\r\n      params: { nameId: featureNameId }\r\n    });\r\n  }\r\n}\r\n","@if (viewModel$ | async; as feature) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ feature.name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"feature.description | safeHtml\"></p>\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ \"Features.Status\" | translate }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ (feature.isEnabled ? \"Features.Active\" : \"Features.NotActive\") | translate }}</span>\r\n        </div>\r\n      </div>\r\n      @if (feature.nameId; as id) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">ID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      <button mat-raised-button color=\"accent\"\r\n        class=\"eav-card-action-button\" (click)=\"findOutMore(feature.link)\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        {{ \"Features.FindOutMore\" | translate }}\r\n      </button>\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">\r\n        {{ \"Features.Close\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable } from 'rxjs';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { Feature } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\nimport { transient } from '../../core';\r\n\r\n@Component({\r\n  selector: 'app-feature-info-dialog',\r\n  templateUrl: './feature-info-dialog.component.html',\r\n  styleUrls: ['./feature-info-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n    TippyDirective,\r\n    SafeHtmlPipe,\r\n  ]\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  viewModel$: Observable<Feature>;\r\n\r\n  private featureDetailService = transient(FeatureDetailService);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    private dialogRef: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.viewModel$ = this.featureDetailService.getFeatureDetails(this.dialogData);\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  findOutMore(link: string): void {\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Directive, Input, ViewContainerRef, inject } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesScopedService } from '../features-scoped.service';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { BehaviorSubject, switchMap, Observable, map, combineLatest } from 'rxjs';\r\nimport { FeatureSummary } from '../models';\r\n\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n  // TODO: @2dg - convert this to signal using 'input(...)'\r\n  /** Feature NameId to check */\r\n  @Input()\r\n  public set featureNameId(value: string) { this.featureNameId$.next(value); }\r\n  protected featureNameId$ = new BehaviorSubject<string>(null);\r\n\r\n  // TODO: @2dg - convert this to signal using 'input(...)'\r\n  /** By default, it will show if it's false - here we can change it to show if true */\r\n  @Input()\r\n  public set showIf(value: boolean) { this.showIf$.next(value == true); }\r\n  protected showIf$ = new BehaviorSubject<boolean>(false);\r\n\r\n  #dialog = inject(MatDialog);\r\n  #viewContainerRef = inject(ViewContainerRef);\r\n  #changeDetectorRef = inject(ChangeDetectorRef);\r\n  #featuresService = inject(FeaturesScopedService);\r\n\r\n  constructor() {\r\n    this.feature$ = this.featureNameId$.pipe(\r\n      switchMap(featName => this.#featuresService.get$(featName))\r\n    );\r\n    this.show$ = combineLatest([this.feature$, this.showIf$]).pipe(\r\n      map(([feat, showIf]) => showIf == (feat?.isEnabled ?? false))\r\n    );\r\n  }\r\n\r\n  // TODO: @2dg - convert this to signal\r\n  // Note that this is a base class, so the change will affect a few components\r\n  feature$: Observable<FeatureSummary>;\r\n  show$: Observable<boolean>;\r\n\r\n  openDialog() {\r\n    openFeatureDialog(this.#dialog, this.featureNameId$.value, this.#viewContainerRef, this.#changeDetectorRef);\r\n  }\r\n}\r\n\r\n\r\nexport function openFeatureDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n  dialog.open(FeatureInfoDialogComponent, {\r\n    autoFocus: false,\r\n    data: featureId,\r\n    viewContainerRef: viewContainerRef,\r\n    width: '400px',\r\n  });\r\n\r\n  changeDetectorRef.markForCheck();\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { inject, Injectable } from '@angular/core';\r\nimport { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { Context } from '../../shared/services/context';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n/**\r\n * Base class for all services that need to make HTTP calls.\r\n * Provides important typical information and services, especially\r\n * * apiUrl(name) - to get the full API URL\r\n * * appId - the current app id\r\n * * zoneId - the current zone id\r\n */\r\n@Injectable()\r\nexport class HttpServiceBase {\r\n\r\n  protected dnnContext = inject(DnnContext);\r\n  protected http = inject(HttpClient);\r\n  protected context = inject(Context);\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * Convert a short 2sxc-url into the correct full URL on the system.\r\n   * @param name 2sxc-style short url\r\n   * @returns \r\n   */\r\n  protected apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  /**\r\n   * The current app id\r\n   */\r\n  protected get appId() { return this.context.appId.toString(); }\r\n\r\n  /**\r\n   * The current zone id\r\n   */\r\n  protected get zoneId() { return this.context.zoneId.toString(); }\r\n}"],"x_google_ignoreList":[]}