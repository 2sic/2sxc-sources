{"version":3,"file":"projects_eav-ui_src_app_manage-content-list_manage-content-list_module_ts.d364230f92beac70.js","mappings":"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","names":["AppDialogConfigService","_class","constructor","http","context","dnnContext","globalConfigService","featuresService","this","dialogSettings$","loadFromService","getShared$","appId","getDialogSettings","pipe","shareReplay","refCount","get","$2sxc","apiUrl","webApiDialogRoot","params","toString","map","dialogSettings","Context","Language","List","filter","language","IsEnabled","tap","allowDebug","Enable","DebugMode","i0","i1","i2","i3","i4","i5","factory","ɵfac","webApiTypeRoot","ContentTypesService","name","retrieveContentType","staticName","contentTypeId","retrieveContentTypes","scope","getScopes","scopes","Object","keys","key","value","save","contentType","post","appid","delete","StaticName","import","files","formData","FormData","file","append","zoneId","createGhost","sourceStaticName","ExportAppPartsService","getContentInfo","webApiAppPartsRoot","exportParts","contentTypeIds","entityIds","templateIds","url","join","window","open","ExportAppService","getAppInfo","webApiAppRoot","exportApp","includeContentGroups","resetAppGuid","exportForVersionControl","withFiles","withPortalFiles","ImportAppPartsService","importAppParts","resetApp","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","webApiEntityList","importQuery","from","toBase64","switchMap","fileBase64","AppId","ContentBase64","success","Success","Messages","clonePipeline","id","Id","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","export","getPolymorphism","getUsage","guid","ImportAppService","importApp","changedName","retryOnDuplicate","result","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","of","manageContentListDialog","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","ManageContentListComponent","Promise","all","__webpack_require__","e","then","bind","routes","path","component","DialogEntryComponent","data","dialog","children","matcher","edit","loadChildren","m","EditModule","refreshEdit","RefreshEditModule","ReplaceContentModule","ManageContentListRoutingModule","RouterModule","forChild","ManageContentListModule","ContentGroupService","EavService","imports","CommonModule","SharedComponentsModule","MatDialogModule","MatButtonModule","MatIconModule","DragDropModule","MatSnackBarModule","TranslateModule","buildTranslateConfiguration","translateLoaderFactory","viewContainerRef","router","route","changeDetectorRef","navigation","getCurrentNavigation","dialogData","extras","state","ngOnInit","dialogConfig","snapshot","Error","consoleLogAngular","_dialogAnimatingOpen","_lastDialogRef","afterOpened","subscribe","openDialogComponent","ngOnDestroy","dialogRef","close","init","autoFocus","backdropClass","closeOnNavigation","showScrollbar","position","top","afterClosed","navRes","navigateUrl","pathFromRoot","length","parent","totalPopup","navigate","relativeTo","markForCheck","selectors","decls","vars","template","rf","ctx","resolve","reject","reader","FileReader","readAsDataURL","onload","split","onerror","error","readAsText","loader","provide","TranslateLoader","useFactory","deps","HttpClient","defaultLanguage","isolate","TranslateLoaderWithErrorHandling","sxcVersion","prefix","suffix","getTranslation","lang","catchError","console","warn","asyncGeneratorStep","gen","_next","_throw","arg","info","done","fn","self","args","arguments","apply","err"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/app-dialog-config.service.ts","./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/manage-content-list/manage-content-list-dialog.config.ts","./projects/eav-ui/src/app/manage-content-list/manage-content-list-routing.module.ts","./projects/eav-ui/src/app/manage-content-list/manage-content-list.module.ts","./projects/eav-ui/src/app/shared/components/dialog-entry/dialog-entry.component.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts","./projects/eav-ui/src/app/shared/translation/translate-configuration.ts","./projects/eav-ui/src/app/shared/translation/translate-loader-factory.ts","./projects/eav-ui/src/app/shared/translation/translate-loader-with-error-handling.ts","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable, shareReplay, tap } from 'rxjs';\r\nimport { GlobalConfigService } from '../../edit/shared/store/ngrx-data';\r\nimport { DialogSettings } from '../../shared/models/dialog-settings.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\n\r\nconst webApiDialogRoot = 'admin/dialog/';\r\n\r\n@Injectable()\r\nexport class AppDialogConfigService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private context: Context,\r\n    private dnnContext: DnnContext,\r\n    private globalConfigService: GlobalConfigService,\r\n    featuresService: FeaturesService,\r\n  ) {\r\n    featuresService.loadFromService(this);\r\n  }\r\n\r\n  private dialogSettings$: Record<number, Observable<DialogSettings>> = {};\r\n\r\n  getShared$(appId?: number) {\r\n    appId ??= this.context.appId;\r\n    if (!this.dialogSettings$[appId])\r\n      this.dialogSettings$[appId] = this.getDialogSettings(appId).pipe(shareReplay({ refCount: false }));\r\n    return this.dialogSettings$[appId];\r\n    // TODO: probably should add an onDestroy and ensure all subscriptions are killed\r\n  }\r\n\r\n  getDialogSettings(appId?: number) {\r\n    return this.http.get<DialogSettings>(this.dnnContext.$2sxc.http.apiUrl(webApiDialogRoot + 'settings'), {\r\n      params: { appId: appId ?? this.context.appId.toString() },\r\n    }).pipe(\r\n      map(dialogSettings => {\r\n        dialogSettings.Context.Language.List = dialogSettings.Context.Language.List.filter(language => language.IsEnabled);\r\n        return dialogSettings;\r\n      }),\r\n      tap(dialogSettings => {\r\n        this.globalConfigService.allowDebug(dialogSettings.Context.Enable.DebugMode);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\n\r\nexport const webApiTypeRoot = 'admin/type/';\r\n\r\n@Injectable()\r\nexport class ContentTypesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get<ContentType>(this.apiUrl(webApiTypeRoot + 'get'), {\r\n      params: { appId: this.context.appId.toString(), contentTypeId: staticName }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get<ContentType[]>(this.apiUrl(webApiTypeRoot + 'list'), {\r\n      params: { appId: this.context.appId.toString(), scope }\r\n    });\r\n  }\r\n\r\n  getScopes() {\r\n    return this.http.get<Record<string, string>>(this.apiUrl(webApiTypeRoot + 'scopes'), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopes => {\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeRoot + 'save'), contentType, {\r\n      params: { appid: this.context.appId.toString() },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeRoot + 'delete'), {\r\n      params: { appid: this.context.appId.toString(), staticName: contentType.StaticName },\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeRoot + 'import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeRoot + 'addghost'), null, {\r\n      params: { appid: this.context.appId.toString(), sourceStaticName },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\n\r\n@Injectable()\r\nexport class ExportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getContentInfo(scope: string) {\r\n    return this.http.get<ContentInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Get'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString(), scope },\r\n    });\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.context.appId.toString()\r\n      + '&zoneId=' + this.context.zoneId.toString()\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AppInfo } from '../models/app-info.model';\r\n\r\n@Injectable()\r\nexport class ExportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAppInfo() {\r\n    return this.http.get<AppInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Statistics'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString() },\r\n    });\r\n  }\r\n\r\n  exportApp(includeContentGroups: boolean, resetAppGuid: boolean) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Export')\r\n      + '?appId=' + this.context.appId\r\n      + '&zoneId=' + this.context.zoneId\r\n      + '&includeContentGroups=' + includeContentGroups\r\n      + '&resetAppGuid=' + resetAppGuid;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'SaveData'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { webApiEntityList } from '../../edit/shared/services';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Query } from '../models/query.model';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get<Query[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryImport), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViews), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.context.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.dnnContext.$2sxc.http.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.context.appId.toString(), guid }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const manageContentListDialog: DialogConfig = {\r\n  name: 'MANAGE_CONTENT_LIST_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ManageContentListComponent } = await import('./manage-content-list.component');\r\n    return ManageContentListComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { edit, refreshEdit } from '../edit/edit.matcher';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { manageContentListDialog } from './manage-content-list-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: manageContentListDialog }, children: [\r\n      {\r\n        matcher: edit,\r\n        loadChildren: () => import('../edit/edit.module').then(m => m.EditModule)\r\n      },\r\n      {\r\n        matcher: refreshEdit,\r\n        loadChildren: () => import('../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n      },\r\n      {\r\n        path: ':guid/:part/:index/replace',\r\n        loadChildren: () => import('../replace-content/replace-content.module').then(m => m.ReplaceContentModule)\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ManageContentListRoutingModule { }\r\n","import { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { ManageContentListRoutingModule } from './manage-content-list-routing.module';\r\nimport { ManageContentListComponent } from './manage-content-list.component';\r\nimport { ContentGroupService } from './services/content-group.service';\r\nimport { buildTranslateConfiguration } from '../shared/translation';\r\nimport { EavService } from '../edit/shared/services';\r\nimport { AppDialogConfigService } from '../app-administration/services';\r\nimport { translateLoaderFactory } from '../shared/translation/translate-loader-factory';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ManageContentListComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ManageContentListRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    DragDropModule,\r\n    MatSnackBarModule,\r\n    TranslateModule.forChild(buildTranslateConfiguration(translateLoaderFactory)),\r\n  ],\r\n  providers: [\r\n    Context,\r\n    ContentGroupService,\r\n    EavService,\r\n    AppDialogConfigService\r\n  ]\r\n})\r\nexport class ManageContentListModule { }\r\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit, Type, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NavigateFormResult } from '../../../edit/shared/models';\r\nimport { consoleLogAngular } from '../../helpers/console-log-angular.helper';\r\nimport { DialogConfig } from '../../models/dialog-config.model';\r\nimport { EavWindow } from '../../models/eav-window.model';\r\nimport { Context } from '../../services/context';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-dialog-entry',\r\n  templateUrl: './dialog-entry.component.html',\r\n  styleUrls: ['./dialog-entry.component.scss'],\r\n})\r\nexport class DialogEntryComponent implements OnInit, OnDestroy {\r\n  private dialogData: Record<string, any>;\r\n  private dialogRef: MatDialogRef<any>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.dialogData = navigation?.extras?.state || {};\r\n  }\r\n\r\n  ngOnInit() {\r\n    const dialogConfig: DialogConfig = this.route.snapshot.data.dialog;\r\n    if (dialogConfig == null) {\r\n      throw new Error(`Could not find config for dialog. Did you forget to add DialogConfig to route data?`);\r\n    }\r\n    consoleLogAngular('Open dialog:', dialogConfig.name, 'Context id:', this.context.id, 'Context:', this.context);\r\n\r\n    dialogConfig.getComponent().then(component => {\r\n      // spm Workaround for \"feature\" where you can't open new dialog while last one is still opening\r\n      // https://github.com/angular/components/commit/728cf1c8ebd49e089f4bae945511bb0918972c26\r\n      if ((this.dialog as any)._dialogAnimatingOpen && (this.dialog as any)._lastDialogRef) {\r\n        ((this.dialog as any)._lastDialogRef as MatDialogRef<any>).afterOpened().subscribe(() => {\r\n          this.openDialogComponent(dialogConfig, component);\r\n        });\r\n      } else {\r\n        this.openDialogComponent(dialogConfig, component);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private openDialogComponent(dialogConfig: DialogConfig, component: Type<any>) {\r\n    if (dialogConfig.initContext) {\r\n      this.context.init(this.route);\r\n    }\r\n\r\n    this.dialogRef = this.dialog.open(component, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: this.dialogData,\r\n      panelClass: [\r\n        'dialog-panel',\r\n        `dialog-panel-${dialogConfig.panelSize}`,\r\n        dialogConfig.showScrollbar ? 'show-scrollbar' : 'no-scrollbar',\r\n        ...(dialogConfig.panelClass ? dialogConfig.panelClass : []),\r\n      ],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n\r\n    this.dialogRef.afterClosed().subscribe((data: any) => {\r\n      consoleLogAngular('Dialog was closed:', dialogConfig.name, 'Data:', data);\r\n\r\n      const navRes = data as NavigateFormResult;\r\n      if (navRes?.navigateUrl != null) {\r\n        this.router.navigate([navRes.navigateUrl]);\r\n        return;\r\n      }\r\n\r\n      if (this.route.pathFromRoot.length <= 3) {\r\n        try {\r\n          window.parent.$2sxc.totalPopup.close();\r\n        } catch (error) { }\r\n        return;\r\n      }\r\n\r\n      if (this.route.snapshot.url.length > 0) {\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent, state: data });\r\n      } else {\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent.parent, state: data });\r\n      }\r\n    });\r\n\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader, TranslateModuleConfig } from '@ngx-translate/core';\r\n\r\nexport function buildTranslateConfiguration(factory: (http: HttpClient) => TranslateLoader): TranslateModuleConfig {\r\n  const config: TranslateModuleConfig = {\r\n    loader: {\r\n      provide: TranslateLoader,\r\n      useFactory: factory,\r\n      deps: [HttpClient],\r\n    },\r\n    defaultLanguage: 'en',\r\n    isolate: true,\r\n  };\r\n  return config;\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { TranslateLoader } from \"@ngx-translate/core\";\r\nimport { EavWindow } from \"../models/eav-window.model\";\r\nimport { TranslateLoaderWithErrorHandling } from \"./translate-loader-with-error-handling\";\r\n\r\ndeclare const window: EavWindow;\r\n\r\n// AoT requires an exported function for factories\r\n// at least according to https://github.com/ngx-translate/http-loader\r\nexport function translateLoaderFactory(http: HttpClient): TranslateLoader {\r\n    return new TranslateLoaderWithErrorHandling(http, './i18n/', `.js?${window.sxcVersion}`);\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader } from '@ngx-translate/core';\r\nimport { catchError, Observable, of } from 'rxjs';\r\n\r\n/**\r\n * This loader should catch a 404 if the file doesn't exist and not result in errors.\r\n * https://stackoverflow.com/questions/47391613/how-to-set-a-fallback-assets-i18n-en-json-when-url-is-not-available-ngx-trans\r\n */\r\nexport class TranslateLoaderWithErrorHandling implements TranslateLoader {\r\n  constructor(private http: HttpClient, private prefix: string, private suffix: string) { }\r\n\r\n  getTranslation(lang: string): Observable<Record<string, any>> {\r\n    return this.http.get<Record<string, any>>(`${this.prefix}${lang}${this.suffix}`).pipe(\r\n      catchError(error => {\r\n        console.warn(`Translation: Failed to get language '${lang}' from ${this.prefix}`, error);\r\n        return of({});\r\n      }),\r\n    );\r\n  }\r\n}\r\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"x_google_ignoreList":[16]}