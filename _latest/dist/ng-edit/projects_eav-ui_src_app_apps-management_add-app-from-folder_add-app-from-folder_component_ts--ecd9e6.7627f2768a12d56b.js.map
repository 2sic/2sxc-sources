{"version":3,"file":"projects_eav-ui_src_app_apps-management_add-app-from-folder_add-app-from-folder_component_ts--ecd9e6.7627f2768a12d56b.js","mappings":"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","names":["AppNameShowComponent","agInit","params","this","name","value","tooltip","tooltipGetter","data","refresh","static","t","core","VBU","selectors","standalone","features","i0","decls","vars","consts","template","rf","ctx","MatIconModule","i1","TippyDirective","styles","CheckboxCellComponent","onChange","event","currentTarget","checked","$event","isDisabled","ctx_r0","pendingApps","gridOptions","AddAppFromFolderComponent","#isAddFromFolderEnabled","constructor","dialogRef","snackBar","hostClass","buildGridOptions","installing","signal","inject","FeaturesScopedService","isEnabled","FeatureNames","AppSyncWithSiteFiles","appsListService","transient","AppsListService","ngOnInit","getPendingApps","subscribe","apps","set","closeDialog","close","app","enabled","pendingAppsTemp","push","splice","indexOf","install","open","undefined","duration","installPendingApps","error","next","defaultGridOptions","columnDefs","field","width","cellClass","sortable","cellRenderer","cellRendererParams","ColumnDefinitions","ItemsText","flex","sort","pendingApp","ServerFolder","Folder","Version","Description","i2","hostVars","hostBindings","AddAppFromFolderComponent_Conditional_8_Template","AddAppFromFolderComponent_Conditional_9_Template","tmp_1_0","length","tmp_2_0","MatDialogActions","MatButtonModule","i3","FeatureTextInfoComponent","SxcGridModule","i4","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","LightSpeed","ContentSecurityPolicy","PermissionsByLanguage","FieldShareConfigManagement","AppExportAssetsAdvanced","PickerUiCheckbox","PickerUiRadio","PickerSourceCsv","PickerFormulas","PickerUiMoreInfo","_r1","ctx_r1","openDialog","vm_r3","feature","icon","FeatureTextInfoComponent_Conditional_0_Conditional_0_Template","show","FeatureComponentBase","asInfo","asInfo$","super","BehaviorSubject","viewModel$","combineLatest","feature$","show$","pipe","map","_angular_core__WEBPACK_IMPORTED_MODULE_1__","inputs","FeatureTextInfoComponent_Conditional_0_Template","FeatureTextInfoComponent_Conditional_2_Template","FeatureTextInfoComponent_ng_template_3_Template","AsyncPipe","TranslateModule","FeatureDetailService","HttpServiceBase","getFeatureDetails","featureNameId","http","get","apiUrl","webApiRoot","nameId","jDH","factory","ɵfac","id_r3","_r2","ctx_r3","copyToClipboard","FeatureInfoDialogComponent_Conditional_0_Conditional_15_Template","feature_r5","findOutMore","link","description","tmp_6_0","FeatureInfoDialogComponent","dialogData","featureDetailService","text","window","MAT_DIALOG_DATA","FeatureInfoDialogComponent_Conditional_0_Template","tmp_0_0","MatCardModule","i5","i6","SafeHtmlPipe","featureNameId$","showIf","showIf$","#dialog","#viewContainerRef","#changeDetectorRef","#featuresService","MatDialog","ViewContainerRef","ChangeDetectorRef","switchMap","featName","get$","feat","openFeatureDialog","FsC","dialog","featureId","viewContainerRef","changeDetectorRef","autoFocus","markForCheck","webApiAppRoot","ImportAppService","importApp","file","changedName","retryOnDuplicate","formData","FormData","append","post","zoneId","result","Messages","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","of","_angular_core__WEBPACK_IMPORTED_MODULE_4__"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/apps-management/add-app-from-folder/app-name-show/app-name-show.component.ts","./projects/eav-ui/src/app/apps-management/add-app-from-folder/app-name-show/app-name-show.component.html","./projects/eav-ui/src/app/apps-management/add-app-from-folder/checkbox-cell/checkbox-cell.component.ts","./projects/eav-ui/src/app/apps-management/add-app-from-folder/checkbox-cell/checkbox-cell.component.html","./projects/eav-ui/src/app/apps-management/add-app-from-folder/add-app-from-folder.component.html","./projects/eav-ui/src/app/apps-management/add-app-from-folder/add-app-from-folder.component.ts","./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.html","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.ts","./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts"],"sourcesContent":["import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { IdFieldParams } from '../../../shared/components/id-field/id-field.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-app-name-show',\r\n  templateUrl: './app-name-show.component.html',\r\n  styleUrls: ['./app-name-show.component.scss'],\r\n  standalone: true,\r\n  imports: [MatIconModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class AppNameShowComponent implements ICellRendererAngularComp {\r\n  name: string;\r\n  tooltip: string;\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.name = params.value;\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"name-box\">\r\n  <span>{{ name }}</span>\r\n  <mat-icon class=\"info-icon\" [tippy]=\"tooltip\">info</mat-icon>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { CheckboxCellParams } from './checkbox-cell.model';\r\n\r\n@Component({\r\n  selector: 'app-checkbox-cell',\r\n  templateUrl: './checkbox-cell.component.html',\r\n  styleUrls: ['./checkbox-cell.component.scss'],\r\n  standalone: true,\r\n})\r\nexport class CheckboxCellComponent implements ICellRendererAngularComp {\r\n  params: ICellRendererParams & CheckboxCellParams;\r\n\r\n  agInit(params: ICellRendererParams & CheckboxCellParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  public onChange(event: any) {\r\n    this.params.onChange(this.params.data, event.currentTarget.checked);\r\n  }\r\n}\r\n","<div class=\"checkbox-box\">\r\n  <input class=\"checkbox-input\" type=\"checkbox\" [disabled]=\"params.isDisabled\" [checked]=\"params.value\" (change)=\"onChange($event)\">\r\n</div>\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Add App from Folder</div>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <app-feature-text-info [featureNameId]=\"'AppSyncWithSiteFiles'\"></app-feature-text-info>\r\n    <p>\r\n      Select an app from the apps-folder which has been copied there (or git-cloned) but not installed yet.\r\n    </p>\r\n    @if (pendingApps()?.length == 0) {\r\n    <p>\r\n      Nothing to show. All apps in the 2sxc folder are already installed.\r\n    </p>\r\n    }\r\n    @if (pendingApps()?.length > 0) {\r\n    <div>\r\n      <ag-grid-angular class=\"ag-theme-material eav-grid\" [rowData]=\"pendingApps()\" [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </div>\r\n    }\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button type=\"button\" mat-raised-button (click)=\"closeDialog()\">\r\n      Cancel\r\n    </button>\r\n    <button type=\"button\" mat-raised-button color=\"accent\" [disabled]=\"pendingApps().length === 0 || installing\"\r\n      (click)=\"install()\">\r\n      Install\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, HostBinding, OnInit, inject, signal } from \"@angular/core\";\r\nimport { MatDialogRef, MatDialogActions } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from \"../../shared/constants/default-grid-options.constants\";\r\nimport { FeaturesScopedService } from '../../features/features-scoped.service';\r\nimport { PendingApp } from \"../models/app.model\";\r\nimport { AppsListService } from \"../services/apps-list.service\";\r\nimport { AppNameShowComponent } from './app-name-show/app-name-show.component';\r\nimport { CheckboxCellComponent } from './checkbox-cell/checkbox-cell.component';\r\nimport { CheckboxCellParams } from './checkbox-cell/checkbox-cell.model';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FeatureTextInfoComponent } from '../../features/feature-text-info/feature-text-info.component';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { transient } from '../../core';\r\nimport { ColumnDefinitions } from '../../shared/ag-grid/column-definitions';\r\n\r\n@Component({\r\n  selector: 'app-add-app-from-folder',\r\n  templateUrl: './add-app-from-folder.component.html',\r\n  styleUrls: ['./add-app-from-folder.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogActions,\r\n    MatButtonModule,\r\n    FeatureTextInfoComponent,\r\n    SxcGridModule,\r\n  ],\r\n})\r\nexport class AddAppFromFolderComponent implements OnInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  gridOptions = this.buildGridOptions();\r\n  installing: boolean = false;\r\n\r\n  pendingApps = signal<PendingApp[]>([]);\r\n\r\n  public features = inject(FeaturesScopedService);\r\n  #isAddFromFolderEnabled = this.features.isEnabled[FeatureNames.AppSyncWithSiteFiles];\r\n  private appsListService = transient(AppsListService);\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AddAppFromFolderComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.appsListService.getPendingApps().subscribe(apps => {\r\n      this.pendingApps.set(apps);\r\n    })\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onChange(app: PendingApp, enabled: boolean) {\r\n    const pendingAppsTemp = this.pendingApps();\r\n\r\n    if (enabled)\r\n      pendingAppsTemp.push(app);\r\n    else\r\n      pendingAppsTemp.splice(pendingAppsTemp.indexOf(app), 1);\r\n\r\n    this.pendingApps.set(pendingAppsTemp);\r\n  }\r\n\r\n  install(): void {\r\n    this.installing = true;\r\n    this.snackBar.open('Installing', undefined, { duration: 2000 });\r\n    this.appsListService.installPendingApps(this.pendingApps()).subscribe({\r\n      error: () => {\r\n        this.installing = false;\r\n        this.snackBar.open('Failed to install app. Please check console for more information', undefined, { duration: 3000 });\r\n      },\r\n      next: () => {\r\n        this.installing = false;\r\n        this.snackBar.open('Installed app', undefined, { duration: 2000 });\r\n        this.closeDialog();\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          field: '',\r\n          width: 40,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          cellRenderer: CheckboxCellComponent,\r\n          cellRendererParams: (() => {\r\n            const params: CheckboxCellParams = {\r\n              isDisabled: !this.#isAddFromFolderEnabled(),\r\n              onChange: (app, enabled) => this.onChange(app, enabled),\r\n            };\r\n            return params;\r\n          }),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ItemsText,\r\n          field: 'Name',\r\n          flex: 1,\r\n          sort: 'asc',\r\n          cellRenderer: AppNameShowComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<PendingApp> = {\r\n              tooltipGetter: (pendingApp) => `Server folder: ${pendingApp.ServerFolder}\\nFolder: ${pendingApp.Folder}\\nVersion: ${pendingApp.Version}\\nDescription: ${pendingApp.Description}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ]\r\n    }\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\n","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  FieldShareConfigManagement: 'FieldShareConfigManagement',\r\n  AppExportAssetsAdvanced: 'AppExportAssetsAdvanced',\r\n\r\n  // Picker features\r\n  PickerUiCheckbox: 'PickerUiCheckbox',\r\n  PickerUiRadio: 'PickerUiRadio',\r\n  PickerSourceCsv: 'PickerSourceCsv',\r\n  PickerFormulas: 'PickerFormulas',\r\n  PickerUiMoreInfo: 'PickerUiMoreInfo',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","@if (viewModel$ | async; as vm) {\r\n  @if (vm.show) {\r\n    <div class=\"feature-text-info\" (click)=\"openDialog()\" [tippy]=\"'Features.Tooltip' | translate: vm.feature\">\r\n      <mat-icon class=\"icon icon-{{vm.icon}}\">{{ vm.icon }}</mat-icon>\r\n      <div class=\"feature-text-info-content\">\r\n        <div class=\"feature-text-info-title\">{{ 'Features.FeatureNotActivated' | translate }}</div>\r\n        <div class=\"feature-text-info-subtitle\">{{ 'Features.ClickToFindOutMore' | translate }}</div>\r\n      </div>\r\n    </div>\r\n  }\r\n} @else {\r\n  <div>loading...</div>\r\n}\r\n<ng-template #loading>\r\n  <div>loading...</div>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\nimport { FeatureSummary } from '../models';\r\nimport { FeatureComponentBase } from '../shared/base-feature.component';\r\nimport { BehaviorSubject, map, Observable, combineLatest } from 'rxjs';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-feature-text-info',\r\n  templateUrl: './feature-text-info.component.html',\r\n  styleUrls: ['./feature-text-info.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class FeatureTextInfoComponent extends FeatureComponentBase {\r\n  @Input()\r\n  public set asInfo(value: boolean) { this.asInfo$.next(value); }\r\n  asInfo$ = new BehaviorSubject<boolean>(false);\r\n\r\n  viewModel$: Observable<FeatureTextInfoViewModel>;\r\n\r\n  constructor() {\r\n    super();\r\n    this.viewModel$ = combineLatest([this.feature$, this.asInfo$, this.show$]).pipe(\r\n      map(([feature, asInfo, show]) =>\r\n      ({\r\n        feature,\r\n        icon: asInfo ? 'info' : 'warning',\r\n        show\r\n      }))\r\n    );\r\n  }\r\n\r\n}\r\n\r\ninterface FeatureTextInfoViewModel {\r\n  feature: FeatureSummary;\r\n  icon: string;\r\n  show: boolean;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Feature } from '../models';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiRoot = \"admin/feature/\";\r\n\r\n@Injectable()\r\nexport class FeatureDetailService extends HttpServiceBase {\r\n\r\n  getFeatureDetails(featureNameId: string): Observable<Feature> {\r\n    return this.http.get<Feature>(this.apiUrl(webApiRoot + 'details'), {\r\n      params: { nameId: featureNameId }\r\n    });\r\n  }\r\n}\r\n","@if (viewModel$ | async; as feature) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ feature.name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"feature.description | safeHtml\"></p>\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ \"Features.Status\" | translate }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ (feature.isEnabled ? \"Features.Active\" : \"Features.NotActive\") | translate }}</span>\r\n        </div>\r\n      </div>\r\n      @if (feature.nameId; as id) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">ID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      <button mat-raised-button color=\"accent\"\r\n        class=\"eav-card-action-button\" (click)=\"findOutMore(feature.link)\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        {{ \"Features.FindOutMore\" | translate }}\r\n      </button>\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">\r\n        {{ \"Features.Close\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable } from 'rxjs';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { Feature } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\nimport { transient } from '../../core';\r\n\r\n@Component({\r\n  selector: 'app-feature-info-dialog',\r\n  templateUrl: './feature-info-dialog.component.html',\r\n  styleUrls: ['./feature-info-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n    TippyDirective,\r\n    SafeHtmlPipe,\r\n  ]\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  viewModel$: Observable<Feature>;\r\n\r\n  private featureDetailService = transient(FeatureDetailService);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    private dialogRef: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.viewModel$ = this.featureDetailService.getFeatureDetails(this.dialogData);\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  findOutMore(link: string): void {\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Directive, Input, ViewContainerRef, inject } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesScopedService } from '../features-scoped.service';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { BehaviorSubject, switchMap, Observable, map, combineLatest } from 'rxjs';\r\nimport { FeatureSummary } from '../models';\r\n\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n  // TODO: @2dg - convert this to signal using 'input(...)'\r\n  /** Feature NameId to check */\r\n  @Input()\r\n  public set featureNameId(value: string) { this.featureNameId$.next(value); }\r\n  protected featureNameId$ = new BehaviorSubject<string>(null);\r\n\r\n  // TODO: @2dg - convert this to signal using 'input(...)'\r\n  /** By default, it will show if it's false - here we can change it to show if true */\r\n  @Input()\r\n  public set showIf(value: boolean) { this.showIf$.next(value == true); }\r\n  protected showIf$ = new BehaviorSubject<boolean>(false);\r\n\r\n  #dialog = inject(MatDialog);\r\n  #viewContainerRef = inject(ViewContainerRef);\r\n  #changeDetectorRef = inject(ChangeDetectorRef);\r\n  #featuresService = inject(FeaturesScopedService);\r\n\r\n  constructor() {\r\n    this.feature$ = this.featureNameId$.pipe(\r\n      switchMap(featName => this.#featuresService.get$(featName))\r\n    );\r\n    this.show$ = combineLatest([this.feature$, this.showIf$]).pipe(\r\n      map(([feat, showIf]) => showIf == (feat?.isEnabled ?? false))\r\n    );\r\n  }\r\n\r\n  // TODO: @2dg - convert this to signal\r\n  // Note that this is a base class, so the change will affect a few components\r\n  feature$: Observable<FeatureSummary>;\r\n  show$: Observable<boolean>;\r\n\r\n  openDialog() {\r\n    openFeatureDialog(this.#dialog, this.featureNameId$.value, this.#viewContainerRef, this.#changeDetectorRef);\r\n  }\r\n}\r\n\r\n\r\nexport function openFeatureDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n  dialog.open(FeatureInfoDialogComponent, {\r\n    autoFocus: false,\r\n    data: featureId,\r\n    viewContainerRef: viewContainerRef,\r\n    width: '400px',\r\n  });\r\n\r\n  changeDetectorRef.markForCheck();\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService extends HttpServiceBase {\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.zoneId }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}