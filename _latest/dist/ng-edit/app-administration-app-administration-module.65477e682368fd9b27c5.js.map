{"version":3,"sources":["./src/app/app-administration/services/import-app-parts.service.ts","./src/app/app-administration/services/export-app-parts.service.ts","./src/app/app-administration/app-administration-nav/app-administration-dialog.config.ts","./src/app/app-administration/sub-dialogs/edit-content-type/edit-content-type-dialog.config.ts","./src/app/app-administration/sub-dialogs/export-app-parts/export-app-parts-dialog.config.ts","./src/app/app-administration/sub-dialogs/export-app/export-app-dialog.config.ts","./src/app/app-administration/sub-dialogs/import-app-parts/import-app-parts-dialog.config.ts","./src/app/app-administration/sub-dialogs/import-content-type/import-content-type-dialog.config.ts","./src/app/app-administration/sub-dialogs/import-query/import-query-dialog.config.ts","./src/app/app-administration/sub-dialogs/import-view/import-view-dialog.config.ts","./src/app/app-administration/sub-dialogs/views-usage/views-usage-dialog.config.ts","./src/app/app-administration/app-administration-routing.module.ts","./src/app/app-administration/app-administration.module.ts","./src/app/app-administration/services/web-apis.service.ts","./src/app/app-administration/services/export-app.service.ts","./src/app/app-administration/services/views.service.ts"],"names":["webApiAppPartsRoot","http","context","dnnContext","importAppParts","file","formData","FormData","append","this","post","$2sxc","apiUrl","params","appId","toString","zoneId","resetApp","ctx","url","ImportAppPartsService","getContentInfo","scope","get","appid","exportParts","contentTypeIds","entityIds","templateIds","join","window","open","ExportAppPartsService","appAdministrationDialog","name","initContext","panelSize","panelClass","getComponent","editContentTypeDialog","exportAppPartsDialog","exportAppDialog","importAppPartsDialog","importContentTypeDialog","importQueryDialog","importViewDialog","viewsUsageDialog","appAdministrationRoutes","path","component","data","dialog","children","redirectTo","pathMatch","title","loadChildren","then","m","ContentItemsModule","matcher","EditModule","RefreshEditModule","DevRestModule","ContentTypeFieldsModule","ContentExportModule","ContentImportModule","PermissionsModule","history","AppAdministrationRoutingModule","forChild","AppAdministrationModule","withComponents","getAll","mask","withSubfolders","create","global","WebApisService","getAppInfo","exportApp","includeContentGroups","resetAppGuid","exportForVersionControl","ExportAppService","webApiViewRoot","delete","id","Id","import","export","getPolymorphism","getUsage","guid","ViewsService"],"mappings":"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","file":"app-administration-app-administration-module.65477e682368fd9b27c5.js","sourcesContent":["import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ImportAppResult } from '../../import-app/models/import-app-result.model';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    }) as Observable<ImportAppResult>;\r\n  }\r\n\r\n  /**\r\n   * Reset the app back to the state it was in the last xml export\r\n   */\r\n  resetApp() {\r\n    const ctx = this.context;\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + `Reset?zoneid=${ctx.zoneId}&appid=${ctx.appId}`);\r\n    return this.http.post(url, { }) as Observable<ImportAppResult>;\r\n  }\r\n\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\n\r\n@Injectable()\r\nexport class ExportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getContentInfo(scope: string) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Get'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString(), scope },\r\n    }) as Observable<ContentInfo>;\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.context.appId.toString()\r\n      + '&zoneId=' + this.context.zoneId.toString()\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const appAdministrationDialog: DialogConfig = {\r\n  name: 'APP_ADMINISTRATION_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { AppAdministrationNavComponent } = await import('./app-administration-nav.component');\r\n    return AppAdministrationNavComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const editContentTypeDialog: DialogConfig = {\r\n  name: 'EDIT_CONTENT_TYPE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'small',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { EditContentTypeComponent } = await import('./edit-content-type.component');\r\n    return EditContentTypeComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const exportAppPartsDialog: DialogConfig = {\r\n  name: 'EXPORT_APP_PARTS',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ExportAppPartsComponent } = await import('./export-app-parts.component');\r\n    return ExportAppPartsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const exportAppDialog: DialogConfig = {\r\n  name: 'EXPORT_APP',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ExportAppComponent } = await import('./export-app.component');\r\n    return ExportAppComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importAppPartsDialog: DialogConfig = {\r\n  name: 'IMPORT_APP_PARTS',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportAppPartsComponent } = await import('./import-app-parts.component');\r\n    return ImportAppPartsComponent;\r\n  }\r\n};\r\n\r\nexport interface ImportAppPartsDialogData {\r\n  files?: File[];\r\n}\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importContentTypeDialog: DialogConfig = {\r\n  name: 'IMPORT_CONTENT_TYPE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportContentTypeComponent } = await import('./import-content-type.component');\r\n    return ImportContentTypeComponent;\r\n  }\r\n};\r\n\r\nexport interface ImportContentTypeDialogData {\r\n  files?: File[];\r\n}\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importQueryDialog: DialogConfig = {\r\n  name: 'IMPORT_QUERY_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportQueryComponent } = await import('./import-query.component');\r\n    return ImportQueryComponent;\r\n  }\r\n};\r\n\r\nexport interface ImportQueryDialogData {\r\n  files?: File[];\r\n}\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importViewDialog: DialogConfig = {\r\n  name: 'IMPORT_VIEW_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportViewComponent } = await import('./import-view.component');\r\n    return ImportViewComponent;\r\n  }\r\n};\r\n\r\nexport interface ImportViewDialogData {\r\n  files?: File[];\r\n}\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const viewsUsageDialog: DialogConfig = {\r\n  name: 'VIEWS_USAGE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ViewsUsageComponent } = await import('./views-usage.component');\r\n    return ViewsUsageComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { edit, refreshEdit } from '../../../../edit/edit.matcher';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { EmptyRouteComponent } from '../shared/components/empty-route/empty-route.component';\r\nimport { appAdministrationDialog } from './app-administration-nav/app-administration-dialog.config';\r\nimport { editContentTypeDialog } from './sub-dialogs/edit-content-type/edit-content-type-dialog.config';\r\nimport { exportAppPartsDialog } from './sub-dialogs/export-app-parts/export-app-parts-dialog.config';\r\nimport { exportAppDialog } from './sub-dialogs/export-app/export-app-dialog.config';\r\nimport { importAppPartsDialog } from './sub-dialogs/import-app-parts/import-app-parts-dialog.config';\r\nimport { importContentTypeDialog } from './sub-dialogs/import-content-type/import-content-type-dialog.config';\r\nimport { importQueryDialog } from './sub-dialogs/import-query/import-query-dialog.config';\r\nimport { importViewDialog } from './sub-dialogs/import-view/import-view-dialog.config';\r\nimport { viewsUsageDialog } from './sub-dialogs/views-usage/views-usage-dialog.config';\r\n\r\nconst appAdministrationRoutes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: appAdministrationDialog }, children: [\r\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n      { path: 'home', component: EmptyRouteComponent, data: { title: 'App Home' } },\r\n      {\r\n        path: 'data', component: EmptyRouteComponent, children: [\r\n          {\r\n            path: 'import',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importContentTypeDialog, title: 'Import Content Type' },\r\n          },\r\n          {\r\n            path: 'items/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-items/content-items.module').then(m => m.ContentItemsModule)\r\n          },\r\n          {\r\n            matcher: edit,\r\n            loadChildren: () => import('../../../../edit/edit.module').then(m => m.EditModule)\r\n          },\r\n          {\r\n            matcher: refreshEdit,\r\n            loadChildren: () => import('../../../../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n          },\r\n          {\r\n            path: ':scope/add',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: editContentTypeDialog, title: 'Add Content Type' },\r\n          },\r\n          {\r\n            path: ':scope/:contentTypeStaticName/edit',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: editContentTypeDialog, title: 'Edit Content Type' },\r\n          },\r\n          {\r\n            path: 'restapi/:contentTypeStaticName',\r\n            loadChildren: () => import('../dev-rest/dev-rest.module').then(m => m.DevRestModule)\r\n          },\r\n          {\r\n            path: 'fields/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-type-fields/content-type-fields.module').then(m => m.ContentTypeFieldsModule),\r\n            data: { title: 'Content Type Fields' },\r\n          },\r\n          {\r\n            path: 'export/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-export/content-export.module').then(m => m.ContentExportModule),\r\n            data: { title: 'Export Items' },\r\n          },\r\n          {\r\n            path: ':contentTypeStaticName/import',\r\n            loadChildren: () => import('../content-import/content-import.module').then(m => m.ContentImportModule),\r\n            data: { title: 'Import Items' },\r\n          },\r\n          {\r\n            path: 'permissions/:type/:keyType/:key',\r\n            loadChildren: () => import('../permissions/permissions.module').then(m => m.PermissionsModule),\r\n            data: { title: 'Permission' },\r\n          },\r\n        ],\r\n        data: { title: 'App Data' },\r\n      },\r\n      {\r\n        path: 'queries', component: EmptyRouteComponent, children: [\r\n          {\r\n            path: 'import',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importQueryDialog, title: 'Import Query' }\r\n          },\r\n          {\r\n            matcher: edit,\r\n            loadChildren: () => import('../../../../edit/edit.module').then(m => m.EditModule),\r\n            data: { title: 'Edit Query Name and Description', history: false },\r\n          },\r\n          {\r\n            path: 'permissions/:type/:keyType/:key',\r\n            loadChildren: () => import('../permissions/permissions.module').then(m => m.PermissionsModule),\r\n            data: { title: 'Query Permissions' },\r\n          },\r\n        ],\r\n        data: { title: 'App Queries' },\r\n      },\r\n      {\r\n        path: 'views', component: EmptyRouteComponent, children: [\r\n          {\r\n            path: 'import',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importViewDialog, title: 'Import View' },\r\n          },\r\n          { path: 'usage/:guid', component: DialogEntryComponent, data: { dialog: viewsUsageDialog } },\r\n          {\r\n            matcher: edit,\r\n            loadChildren: () => import('../../../../edit/edit.module').then(m => m.EditModule),\r\n            data: { title: 'Edit View' },\r\n          },\r\n          {\r\n            matcher: refreshEdit,\r\n            loadChildren: () => import('../../../../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n          },\r\n          {\r\n            path: 'permissions/:type/:keyType/:key',\r\n            loadChildren: () => import('../permissions/permissions.module').then(m => m.PermissionsModule),\r\n            data: { title: 'View Permissions' },\r\n          },\r\n        ],\r\n        data: { title: 'App Views' },\r\n      },\r\n      { path: 'web-api', component: EmptyRouteComponent, data: { title: 'App WebApi' }, },\r\n      {\r\n        path: 'app', component: EmptyRouteComponent, children: [\r\n          {\r\n            matcher: edit,\r\n            loadChildren: () => import('../../../../edit/edit.module').then(m => m.EditModule),\r\n            data: { title: 'Edit App Properties' },\r\n          },\r\n          {\r\n            matcher: refreshEdit,\r\n            loadChildren: () => import('../../../../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n          },\r\n          {\r\n            path: 'fields/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-type-fields/content-type-fields.module').then(m => m.ContentTypeFieldsModule),\r\n            data: { title: 'Edit Fields of App Settings & Resources' },\r\n          },\r\n          {\r\n            path: 'permissions/:type/:keyType/:key',\r\n            loadChildren: () => import('../permissions/permissions.module').then(m => m.PermissionsModule),\r\n            data: { title: 'App Permission' },\r\n          },\r\n          { path: 'export', component: DialogEntryComponent, data: { dialog: exportAppDialog, title: 'Export App' } },\r\n          { path: 'export/parts', component: DialogEntryComponent, data: { dialog: exportAppPartsDialog, title: 'Export App Parts' } },\r\n          { path: 'import/parts', component: DialogEntryComponent, data: { dialog: importAppPartsDialog, title: 'Import App Parts' } },\r\n        ],\r\n        data: { title: 'Manage App' },\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(appAdministrationRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppAdministrationRoutingModule { }\r\n","import { AgGridModule } from '@ag-grid-community/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { EcoFabSpeedDialModule } from '@ecodev/fab-speed-dial';\r\nimport { SanitizeService } from '../../../../edit/eav-material-controls/adam/sanitize.service';\r\nimport { AppsListService } from '../apps-management/services/apps-list.service';\r\nimport { ContentExportService } from '../content-export/services/content-export.service';\r\nimport { ContentItemsService } from '../content-items/services/content-items.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { DialogService } from '../shared/services/dialog.service';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { DataActionsComponent } from './ag-grid-components/data-actions/data-actions.component';\r\nimport { DataFieldsComponent } from './ag-grid-components/data-fields/data-fields.component';\r\nimport { DataItemsComponent } from './ag-grid-components/data-items/data-items.component';\r\nimport { QueriesActionsComponent } from './ag-grid-components/queries-actions/queries-actions.component';\r\nimport { ViewsActionsComponent } from './ag-grid-components/views-actions/views-actions.component';\r\nimport { ViewsShowComponent } from './ag-grid-components/views-show/views-show.component';\r\nimport { ViewsTypeComponent } from './ag-grid-components/views-type/views-type.component';\r\nimport { ViewsUsageIdComponent } from './ag-grid-components/views-usage-id/views-usage-id.component';\r\nimport { ViewsUsageStatusFilterComponent } from './ag-grid-components/views-usage-status-filter/views-usage-status-filter.component';\r\nimport { WebApiActionsComponent } from './ag-grid-components/web-api-actions/web-api-actions.component';\r\nimport { AppAdministrationNavComponent } from './app-administration-nav/app-administration-nav.component';\r\nimport { AppAdministrationRoutingModule } from './app-administration-routing.module';\r\nimport { AppConfigurationComponent } from './app-configuration/app-configuration.component';\r\nimport { DataComponent } from './data/data.component';\r\nimport { GettingStartedComponent } from './getting-started/getting-started.component';\r\nimport { QueriesComponent } from './queries/queries.component';\r\nimport { AppDialogConfigService } from './services/app-dialog-config.service';\r\nimport { ContentTypesService } from './services/content-types.service';\r\nimport { ExportAppPartsService } from './services/export-app-parts.service';\r\nimport { ExportAppService } from './services/export-app.service';\r\nimport { ImportAppPartsService } from './services/import-app-parts.service';\r\nimport { PipelinesService } from './services/pipelines.service';\r\nimport { ViewsService } from './services/views.service';\r\nimport { WebApisService } from './services/web-apis.service';\r\nimport { EditContentTypeComponent } from './sub-dialogs/edit-content-type/edit-content-type.component';\r\nimport { ExportAppPartsComponent } from './sub-dialogs/export-app-parts/export-app-parts.component';\r\nimport { ExportAppComponent } from './sub-dialogs/export-app/export-app.component';\r\nimport { ImportAppPartsComponent } from './sub-dialogs/import-app-parts/import-app-parts.component';\r\nimport { ImportContentTypeComponent } from './sub-dialogs/import-content-type/import-content-type.component';\r\nimport { ImportQueryComponent } from './sub-dialogs/import-query/import-query.component';\r\nimport { ImportViewComponent } from './sub-dialogs/import-view/import-view.component';\r\nimport { ViewsUsageComponent } from './sub-dialogs/views-usage/views-usage.component';\r\nimport { ViewsComponent } from './views/views.component';\r\nimport { WebApiComponent } from './web-api/web-api.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GettingStartedComponent,\r\n    AppAdministrationNavComponent,\r\n    DataComponent,\r\n    QueriesComponent,\r\n    ViewsComponent,\r\n    WebApiComponent,\r\n    AppConfigurationComponent,\r\n    DataItemsComponent,\r\n    DataFieldsComponent,\r\n    DataActionsComponent,\r\n    QueriesActionsComponent,\r\n    ViewsTypeComponent,\r\n    ViewsShowComponent,\r\n    ViewsActionsComponent,\r\n    EditContentTypeComponent,\r\n    ImportQueryComponent,\r\n    ExportAppComponent,\r\n    ExportAppPartsComponent,\r\n    ImportAppPartsComponent,\r\n    WebApiActionsComponent,\r\n    ViewsUsageComponent,\r\n    ViewsUsageIdComponent,\r\n    ViewsUsageStatusFilterComponent,\r\n    ImportContentTypeComponent,\r\n    ImportViewComponent,\r\n  ],\r\n  entryComponents: [\r\n    AppAdministrationNavComponent,\r\n    DataItemsComponent,\r\n    DataFieldsComponent,\r\n    DataActionsComponent,\r\n    QueriesActionsComponent,\r\n    ViewsTypeComponent,\r\n    ViewsShowComponent,\r\n    ViewsActionsComponent,\r\n    EditContentTypeComponent,\r\n    ImportQueryComponent,\r\n    ExportAppComponent,\r\n    ExportAppPartsComponent,\r\n    ImportAppPartsComponent,\r\n    WebApiActionsComponent,\r\n    ViewsUsageComponent,\r\n    ViewsUsageIdComponent,\r\n    ViewsUsageStatusFilterComponent,\r\n    ImportContentTypeComponent,\r\n    ImportViewComponent,\r\n  ],\r\n  imports: [\r\n    AppAdministrationRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    AgGridModule.withComponents([]),\r\n    MatTabsModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatProgressSpinnerModule,\r\n    MatCheckboxModule,\r\n    MatExpansionModule,\r\n    MatCardModule,\r\n    MatRippleModule,\r\n    EcoFabSpeedDialModule,\r\n    MatSnackBarModule,\r\n    MatMenuModule,\r\n    MatBadgeModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    AppDialogConfigService,\r\n    ContentTypesService,\r\n    PipelinesService,\r\n    ViewsService,\r\n    ContentExportService,\r\n    WebApisService,\r\n    ContentItemsService,\r\n    ExportAppService,\r\n    ExportAppPartsService,\r\n    ImportAppPartsService,\r\n    SanitizeService,\r\n    DialogService,\r\n    AppsListService,\r\n  ]\r\n})\r\nexport class AppAdministrationModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppFileCreate, webApiAppFilesAll } from 'projects/edit';\r\nimport { Observable } from 'rxjs';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Injectable()\r\nexport class WebApisService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiAppFilesAll), {\r\n      params: { appId: this.context.appId.toString(), path: '', mask: '*Controller.cs', withSubfolders: 'true' },\r\n    }) as Observable<string[]>;\r\n  }\r\n\r\n  create(name: string) {\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiAppFileCreate), {}, {\r\n      params: { appId: this.context.appId.toString(), global: 'false', path: `api/${name}` },\r\n    }) as Observable<boolean>;\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AppInfo } from '../models/app-info.model';\r\n\r\n@Injectable()\r\nexport class ExportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAppInfo() {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Statistics'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString() },\r\n    }) as Observable<AppInfo>;\r\n  }\r\n\r\n  exportApp(includeContentGroups: boolean, resetAppGuid: boolean) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Export')\r\n      + '?appId=' + this.context.appId\r\n      + '&zoneId=' + this.context.zoneId\r\n      + '&includeContentGroups=' + includeContentGroups\r\n      + '&resetAppGuid=' + resetAppGuid;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportForVersionControl(includeContentGroups: boolean, resetAppGuid: boolean) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'SaveData'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n      },\r\n    }) as Observable<boolean>;\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ImportAppResult } from '../../import-app/models/import-app-result.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiViews), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }) as Observable<View[]>;\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    }) as Observable<boolean>;\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    }) as Observable<ImportAppResult>;\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.context.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }) as Observable<Polymorphism>;\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.context.appId.toString(), guid }\r\n    }) as Observable<ViewUsage[]>;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}