{"version":3,"file":"projects_eav-ui_src_app_apps-management_system-info_system-info_component_ts-node_modules_ang-f24407.3aafb4fd9dcedaa0.js","mappings":"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","names":["ServiceBase","constructor","this","subscriptions","Subscription","ngOnDestroy","destroy","unsubscribe","static","__ngFactoryType__","_angular_core__WEBPACK_IMPORTED_MODULE_1__","jDH","factory","ɵfac","FeatureComponentBase","#matDialog","#viewContainerRef","#changeDetectorRef","#featuresService","featureNameId","input","required","showIf","inject","MatDialog","ViewContainerRef","ChangeDetectorRef","FeaturesService","feature","computedObj","getCurrent","show","feat","isEnabled","openDialog","openFeatureDialog","_angular_core__WEBPACK_IMPORTED_MODULE_5__","FsC","inputs","dialog","featureId","viewContainerRef","changeDetectorRef","open","FeatureInfoDialogComponent","autoFocus","data","width","markForCheck","ClipboardService","snackBar","copyToClipboard","text","duration","i0","i1","providedIn","ErrorStateMatcher","isErrorState","control","form","invalid","touched","submitted","token","FeatureNames","AppSyncWithSiteFiles","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","LightSpeed","ContentSecurityPolicy","PermissionsByLanguage","ContentTypeFieldsReuseDefinitions","AppExportAssetsAdvanced","DataExportImportBundles","PickerUiCheckbox","PickerUiRadio","PickerSourceCsv","PickerSourceAppAssets","PickerFormulas","PickerUiMoreInfo","MatFormFieldModule","type","imports","MatCommonModule","ObserversModule","MatFormField","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","FieldHintComponent","isError","isShort","toggleIsShort","_angular_core__WEBPACK_IMPORTED_MODULE_0__","VBU","selectors","ngContentSelectors","_c0","decls","vars","consts","template","rf","ctx","_r1","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c1","tmp_2_0","NgClass","NgTemplateOutlet","styles","webApiFeatureDetails","FeatureDetailService","HttpServiceBaseSignal","getFeatureDetail","nameId","newHttpResource","url","apiUrl","params","getFeatureDetails","nameIds","featureList","signal","fetchPromise","then","update","prev","ctx_r1","_r3","clipboard","guid","_r4","close","FeatureDetailsDialogComponent_Conditional_0_Conditional_13_Template","FeatureDetailsDialogComponent_Conditional_0_Conditional_14_Template","FeatureDetailsDialogComponent_Conditional_0_Conditional_26_Template","name","description","mySpecs","showStatus","showGuid","security","Impact","Message","link","showClose","FeatureDetailsDialogComponent","dialogSpecs","specs","transient","MAT_DIALOG_DATA","FeatureDetailsDialogComponent_Conditional_0_Template","MatCardModule","i2","MatButtonModule","i3","MatIconModule","i4","SafeHtmlPipe","TranslateModule","i5","encapsulation","_ErrorStateTracker","_defaultMatcher","ngControl","_parentFormGroup","_parentForm","_stateChanges","errorState","matcher","updateErrorState","oldState","parent","newState","next","logSpecs","doOnDialogClosed","DialogRoutingService","router","route","super","log","classLog","snapshot","urlSegments","split","getParam","key","paramMap","get","getParams","keys","reduce","acc","getQueryParam","queryParamMap","getQueryParams","state","getCurrentNavigation","extras","callback","l","fnIf","add","childDialogClosed$","subscribe","a","end","doOnDialogClosedWithData","#childDialogClosedWithData","urlSubRoute","tree","createUrlTree","relativeTo","serializeUrl","navPath","navigate","navRelative","commands","events","pipe","filter","event","NavigationEnd","startWith","firstChild","map","pairwise","hadChildBefore","hasChildNow","tap","fn","snapShot","curr","_angular_core__WEBPACK_IMPORTED_MODULE_8__","DocsLinkHelperComponent","label","icon","TippyDirective","SxcInsightsService","activatePageLog","firstValueFrom","http","webApiLogRoot","toString","responseType","root_effect_scheduler_DCy1y1b8","_r5","info_r3","$implicit","ctx_r3","openSideNavPath","_r2","value","SystemInfoComponent_For_12_Conditional_6_Template","_r8","info_r7","target","SystemInfoComponent_For_36_Conditional_6_Conditional_0_Template","SystemInfoComponent_For_36_Conditional_6_Conditional_1_Template","_r6","SystemInfoComponent_For_36_Conditional_6_Template","SystemInfoComponent_Conditional_119_Conditional_0_Template","duration_r9","errors","pattern","info_r12","SystemInfoComponent_For_135_Conditional_6_Conditional_0_Template","SystemInfoComponent_For_135_Conditional_6_Conditional_1_Template","_r11","SystemInfoComponent_For_135_Conditional_6_Template","SystemInfoComponent","#dialogSettings","#sxcInsightsService","#zoneSvc","#dialogInNewWindowSvc","#dialogRouter","#refresh","#languages","#systemInfoSet","features","DialogConfigAppService","ZoneService","DialogInNewWindowService","positiveWholeNumber","LightSpeedOutputCache","loading","getLanguageLive","getSystemInfoLive","systemInfos","computed","systemInfoSetValue","System","EavVersion","Platform","PlatformVersion","Zones","Fingerprint","License","Owner","siteInfos","languagesValue","allLanguages","length","activeLanguages","IsEnabled","Site","ZoneId","SiteId","Apps","warningIcon","Messages","WarningsObsolete","WarningsOther","warningInfos","window","$2sxc","undefined","lsEnabled","cspEnabled","ngOnInit","v","openSiteSettings","openParentAppSettings","openGlobalSettings","partName","getCurrent$","dc","Context","PrimaryApp","take","appIdentity","openAppAdministration","AppId","openInsights","sideNavPath","includes","replace","_this","_asyncToGenerator","set","result","pageLogDuration","document","activeElement","HTMLElement","blur","resetForm","error","console","debug_node_JnOYh9kg","SystemInfoComponent_For_12_Template","SystemInfoComponent_For_36_Template","SystemInfoComponent_Conditional_61_Template","SystemInfoComponent_Conditional_76_Template","$event","SystemInfoComponent_Conditional_119_Template","activateLogForm_r10","SystemInfoComponent_For_135_Template","valid","RouterLink","FormsModule","i6","MatInputModule","i7","RouterOutlet","FeatureTextInfoComponent","asInfo","FeatureTextInfoComponent_Conditional_0_Template","#featureDetailSvc","dialogData","featureDetails","FeatureInfoDialogComponent_Conditional_0_Template","tmp_0_0"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/services/service-base.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts","./projects/eav-ui/src/app/shared/services/clipboard.service.ts","./node_modules/@angular/material/fesm2022/error-options-DCNQlTOA.mjs","./projects/eav-ui/src/app/features/feature-names.ts","./node_modules/@angular/material/fesm2022/module-DzZHEh7B.mjs","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.html","./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.ts","./node_modules/@angular/material/fesm2022/error-state-Dtb1IHM-.mjs","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts","./projects/eav-ui/src/app/admin-shared/docs-link-helper/docs-link-helper.component.ts","./projects/eav-ui/src/app/apps-management/services/sxc-insights.service.ts","./projects/eav-ui/src/app/apps-management/system-info/system-info.component.html","./projects/eav-ui/src/app/apps-management/system-info/system-info.component.ts","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.html","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts"],"sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Directive, ViewContainerRef, inject, input } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { computedObj } from '../../shared/signals/signal.utilities';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { FeaturesService } from '../features.service';\r\n\r\n/**\r\n * Base component for various UI components which inform that a feature is not enabled.\r\n * It's meant to show the indicator/warning, and open a dialog with more information about the feature.\r\n */\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n\r\n  /** Feature NameId to check */\r\n  featureNameId = input.required<string>();\r\n\r\n  /** When to show it - typically when it is _not_ enabled (default) */\r\n  showIf = input<boolean>(false);\r\n\r\n  #matDialog = inject(MatDialog);\r\n  #viewContainerRef = inject(ViewContainerRef);\r\n  #changeDetectorRef = inject(ChangeDetectorRef);\r\n  #featuresService = inject(FeaturesService);\r\n\r\n  constructor() { }\r\n\r\n  feature = computedObj('feature', () => this.#featuresService.getCurrent(this.featureNameId()));\r\n\r\n  show = computedObj('show', () => {\r\n    const feat = this.feature();\r\n    if (feat == null) return false;\r\n    return this.showIf() == (feat?.isEnabled ?? false);\r\n  })\r\n\r\n  openDialog() {\r\n    openFeatureDialog(this.#matDialog, this.featureNameId(), this.#viewContainerRef, this.#changeDetectorRef);\r\n  }\r\n}\r\n\r\nexport function openFeatureDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n  dialog.open(FeatureInfoDialogComponent, {\r\n    autoFocus: false,\r\n    data: featureId,\r\n    viewContainerRef: viewContainerRef,\r\n    width: '400px',\r\n  });\r\n\r\n  changeDetectorRef?.markForCheck();\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../helpers/copy-to-clipboard.helper';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ClipboardService {\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}","import * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\n\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, decorators: [{\n            type: Injectable\n        }] });\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ErrorStateMatcher, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ErrorStateMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nexport { ErrorStateMatcher as E, ShowOnDirtyErrorStateMatcher as S };\n","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  ContentTypeFieldsReuseDefinitions: 'ContentTypeFieldsReuseDefinitions',\r\n  AppExportAssetsAdvanced: 'AppExportAssetsAdvanced',\r\n  DataExportImportBundles: 'DataExportImportBundles',\r\n\r\n  // Picker features\r\n  PickerUiCheckbox: 'PickerUiCheckbox',\r\n  PickerUiRadio: 'PickerUiRadio',\r\n  PickerSourceCsv: 'PickerSourceCsv',\r\n  PickerSourceAppAssets: 'PickerSourceAppAssets',\r\n  PickerFormulas: 'PickerFormulas',\r\n  PickerUiMoreInfo: 'PickerUiMoreInfo',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","import { ObserversModule } from '@angular/cdk/observers';\nimport * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { j as MatFormField, M as MatLabel, b as MatError, c as MatHint, e as MatPrefix, g as MatSuffix } from './form-field-C9DZXojn.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\n\nclass MatFormFieldModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldModule, imports: [MatCommonModule,\n            ObserversModule,\n            MatFormField,\n            MatLabel,\n            MatError,\n            MatHint,\n            MatPrefix,\n            MatSuffix], exports: [MatFormField, MatLabel, MatHint, MatError, MatPrefix, MatSuffix, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldModule, imports: [MatCommonModule,\n            ObserversModule,\n            MatFormField, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        ObserversModule,\n                        MatFormField,\n                        MatLabel,\n                        MatError,\n                        MatHint,\n                        MatPrefix,\n                        MatSuffix,\n                    ],\n                    exports: [MatFormField, MatLabel, MatHint, MatError, MatPrefix, MatSuffix, MatCommonModule],\n                }]\n        }] });\n\nexport { MatFormFieldModule as M };\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError()) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n    selector: 'app-field-hint',\r\n    templateUrl: './field-hint.component.html',\r\n    styleUrls: ['./field-hint.component.scss'],\r\n    imports: [\r\n        MatFormFieldModule,\r\n        NgClass,\r\n        NgTemplateOutlet\r\n    ]\r\n})\r\nexport class FieldHintComponent {\r\n  isError = input<boolean>(false);\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { Injectable, signal, Signal } from '@angular/core';\r\nimport { HttpServiceBaseSignal } from '../../shared/services/http-service-base-signal';\r\nimport { Feature } from '../models';\r\n\r\nconst webApiFeatureDetails = \"admin/feature/details\";\r\n@Injectable()\r\nexport class FeatureDetailService extends HttpServiceBaseSignal {\r\n  \r\n  getFeatureDetail(nameId: Signal<string>) {\r\n    return this.newHttpResource<Feature>(() => ({\r\n      url: this.apiUrl(webApiFeatureDetails),\r\n      params: { nameId: nameId() },\r\n    }));\r\n  }\r\n\r\n  getFeatureDetails(nameIds: string[]): Signal<Feature[]> {\r\n    const featureList = signal<Feature[]>([]);\r\n    for (const nameId of nameIds) {\r\n\r\n      this.fetchPromise<Feature>(webApiFeatureDetails, {\r\n        params: { nameId }\r\n      }).then(feature => {\r\n        featureList.update(prev => [...prev, feature]);\r\n      });\r\n    }\r\n    return featureList;\r\n  }\r\n}\r\n","@if (feature()) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ feature().name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"feature().description | safeHtml\"></p>\r\n      <!-- Name ID -->\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">ID:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span (click)=\"clipboard.copyToClipboard(feature().nameId)\">{{ feature().nameId }}</span>\r\n        </div>\r\n      </div>\r\n      <!-- Status -->\r\n      @if (mySpecs().showStatus) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">{{ 'Features.Status' | translate }}:</div>\r\n          <div class=\"eav-info-row__value\">\r\n            <span>{{ (feature().isEnabled ? 'Features.Active' : 'Features.NotActive') | translate }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n      <!-- GUID -->\r\n      @if (mySpecs().showGuid) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">GUID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span (click)=\"clipboard.copyToClipboard(feature().guid)\">{{ feature().guid }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n      <!-- Security Rating -->\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">Security Rating:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ feature().security.Impact + ': ' + feature().security.Message }}</span>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      <a [href]=\"feature().link\" target=\"_blank\" mat-raised-button class=\"eav-card-action-button\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        Find out more\r\n      </a>\r\n      @if (mySpecs().showClose != false) {\r\n        <button mat-raised-button class=\"eav-card-action-button\" (click)=\"dialog.close()\">Close</button>\r\n      }\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}\r\n","import { Component, Inject, input, Optional } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { transient } from '../../../../../../core/transient';\r\nimport { SafeHtmlPipe } from '../../../shared/pipes/safe-html.pipe';\r\nimport { ClipboardService } from '../../../shared/services/clipboard.service';\r\nimport { computedObj } from '../../../shared/signals/signal.utilities';\r\nimport { FeatureDetailsDialogData } from './feature-details-dialog.models';\r\n\r\n@Component({\r\n    selector: 'app-feature-details-dialog',\r\n    templateUrl: './feature-details-dialog.component.html',\r\n    imports: [\r\n        MatCardModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        SafeHtmlPipe,\r\n        TranslateModule,\r\n    ]\r\n})\r\nexport class FeatureDetailsDialogComponent {\r\n  specs = input<FeatureDetailsDialogData>();\r\n\r\n  constructor(\r\n    @Optional() @Inject(MAT_DIALOG_DATA) private dialogSpecs: FeatureDetailsDialogData,\r\n    protected dialog: MatDialogRef<FeatureDetailsDialogComponent>,\r\n  ) { }\r\n\r\n  protected mySpecs = computedObj('mySpecs', () =>  this.specs() ?? this.dialogSpecs );\r\n  protected feature = computedObj('feature', () => this.mySpecs()?.feature);\r\n  protected clipboard = transient(ClipboardService);\r\n}\r\n","/**\n * Class that tracks the error state of a component.\n * @docs-private\n */\nclass _ErrorStateTracker {\n    _defaultMatcher;\n    ngControl;\n    _parentFormGroup;\n    _parentForm;\n    _stateChanges;\n    /** Whether the tracker is currently in an error state. */\n    errorState = false;\n    /** User-defined matcher for the error state. */\n    matcher;\n    constructor(_defaultMatcher, ngControl, _parentFormGroup, _parentForm, _stateChanges) {\n        this._defaultMatcher = _defaultMatcher;\n        this.ngControl = ngControl;\n        this._parentFormGroup = _parentFormGroup;\n        this._parentForm = _parentForm;\n        this._stateChanges = _stateChanges;\n    }\n    /** Updates the error state based on the provided error state matcher. */\n    updateErrorState() {\n        const oldState = this.errorState;\n        const parent = this._parentFormGroup || this._parentForm;\n        const matcher = this.matcher || this._defaultMatcher;\n        const control = this.ngControl ? this.ngControl.control : null;\n        const newState = matcher?.isErrorState(control, parent) ?? false;\n        if (newState !== oldState) {\n            this.errorState = newState;\n            this._stateChanges.next();\n        }\n    }\n}\n\nexport { _ErrorStateTracker as _ };\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith, tap } from 'rxjs';\r\nimport { classLog } from '../logging';\r\nimport { ServiceBase } from '../services/service-base';\r\n\r\nconst logSpecs = {\r\n  doOnDialogClosed: true,\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase {\r\n\r\n  log = classLog({ DialogRoutingService }, logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) { super(); }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  get urlSegments() { return this.router.url.split('/'); }\r\n\r\n  getParam(key: string): string {\r\n    return this.route.snapshot.paramMap.get(key);\r\n  }\r\n\r\n  getParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const paramMap = this.route.snapshot.paramMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = paramMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  getQueryParam(key: string): string {\r\n    return this.route.snapshot.queryParamMap.get(key);\r\n  }\r\n\r\n  getQueryParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const queryParamMap = this.route.snapshot.queryParamMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = queryParamMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe((data: unknown) => {\r\n        l.a('Dialog closed', { data });\r\n        return callback();\r\n      })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  public doOnDialogClosedWithData(callback: (data: any) => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.#childDialogClosedWithData().subscribe(({ state }) => {\r\n        l.a('Dialog closed', { state });\r\n        callback(state);\r\n      })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Get the URL for a sub-route of the current route.\r\n   */\r\n  public urlSubRoute(params: string) {\r\n    const tree = this.router.createUrlTree([params], { relativeTo: this.route });\r\n    const routeUrl = this.router.serializeUrl(tree);\r\n    return routeUrl;\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  public childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n\r\n  #childDialogClosedWithData() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      tap(event => {\r\n        const l = this.log.fn(\"childDialogClosed$\", {\r\n          event,\r\n          firstChild: this.route.snapshot.firstChild,\r\n          snapShot: this.route.snapshot,\r\n          state: this.router.getCurrentNavigation()?.extras.state,\r\n        });\r\n        l.a('NavigationEnd', { event });\r\n        l.end();\r\n      }),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => ({\r\n        hasChildNow: !!this.route.snapshot.firstChild,\r\n        state: this.router.getCurrentNavigation()?.extras.state,\r\n      })),\r\n      pairwise(),\r\n      filter(([prev, curr]) => prev.hasChildNow && !curr.hasChildNow),\r\n      map(([prev, curr]) => ({\r\n        hadChildBefore: prev.hasChildNow,\r\n        hasChildNow: curr.hasChildNow,\r\n        state: curr.state\r\n      }))\r\n    );\r\n  }\r\n}\r\n","import { Component, input } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n    selector: 'app-docs-link-helper',\r\n    imports: [\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        TippyDirective,\r\n    ],\r\n    template: `\r\n  <a mat-button class=\"eav-button__with-icon\" href=\"{{ link() }}\" target=\"_blank\" tippy=\"online documentation\">\r\n    <mat-icon mat-icon class=\"eav-icon\">{{ icon() ?? 'menu_book' }}</mat-icon>\r\n    <span>{{ label() }}</span>\r\n  </a>\r\n`\r\n})\r\nexport class DocsLinkHelperComponent {\r\n  link = input<string>();   \r\n  label = input<string>();\r\n  icon = input<string>();\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { firstValueFrom } from 'rxjs';\r\nimport { HttpServiceBaseSignal } from '../../shared/services/http-service-base-signal';\r\n\r\nconst webApiLogRoot = 'sys/log/';\r\n@Injectable()\r\nexport class SxcInsightsService extends HttpServiceBaseSignal {\r\n\r\n  activatePageLog(duration: number): Promise<string> {\r\n    return firstValueFrom(\r\n      this.http.get<string>(this.apiUrl(webApiLogRoot + 'EnableDebug'), {\r\n        params: { duration: duration?.toString() },\r\n        responseType: 'text' as 'json'\r\n      })\r\n    );\r\n  }\r\n}\r\n","<div class=\"eav-cards-box\">\r\n  <!-- Platform Info -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">settings_applications</mat-icon>\r\n      </div>\r\n      <mat-card-title>Platform</mat-card-title>\r\n      <mat-card-subtitle>What you are running</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      @for (info of systemInfos(); track info) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">{{ info.label }}:</div>\r\n          <div class=\"eav-info-row__value\">\r\n            <span class=\"eav-info-row__value__span eav-click\" [tippy]=\"info.value\" (click)=\"clipboard.copyToClipboard(info.value)\">{{\r\n              info.value\r\n            }}</span>\r\n            @if (info.link) {\r\n              <a class=\"eav-info-row__link\" [routerLink]=\"['/']\" (click)=\"openSideNavPath(info.link.url)\">\r\n                {{ info.link.label }}\r\n              </a>\r\n            }\r\n          </div>\r\n        </div>\r\n      }\r\n      <h4>Global Settings</h4>\r\n      <p>This includes both pre-defined SystemSettings as well as custom Settings. It will affect the entire Installation.</p>\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"start\">\r\n      <app-docs-link-helper [link]=\"'https://go.2sxc.org/settings'\" [label]=\"\" [icon]=\"\"></app-docs-link-helper>\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"openGlobalSettings()\">\r\n        <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n        <span>Open Global Settings</span>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n  <!-- Site Info -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">public</mat-icon>\r\n      </div>\r\n      <mat-card-title>This Site</mat-card-title>\r\n      <mat-card-subtitle>The current Site you're on</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      @for (info of siteInfos(); track info) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">{{ info.label }}:</div>\r\n          <div class=\"eav-info-row__value\">\r\n            <span [tippy]=\"info.value\" (click)=\"clipboard.copyToClipboard(info.value)\">{{ info.value }}</span>\r\n            @if (info.link) {\r\n              @if (info.link.target === 'angular') {\r\n                <a [routerLink]=\"['/']\" class=\"eav-info-row__link\" (click)=\"openSideNavPath(info.link.url)\">\r\n                  {{ info.link.label }}\r\n                </a>\r\n              }\r\n              @if (info.link.target !== 'angular') {\r\n                <a class=\"eav-info-row__link\" [href]=\"info.link.url\" [target]=\"info.link.target\">{{ info.link.label }}</a>\r\n              }\r\n            }\r\n          </div>\r\n        </div>\r\n      }\r\n      <div class=\"card-content-separator\"></div>\r\n      <h4>Site Settings</h4>\r\n      <p>This includes both pre-defined SystemSettings as well as custom Settings. It will affect the entire Site / Portal.</p>\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"start\">\r\n      <app-docs-link-helper [link]=\"'https://go.2sxc.org/settings'\" [label]=\"\" [icon]=\"\"></app-docs-link-helper>\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"openSiteSettings()\">\r\n        <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n        <span>Open Site Settings</span>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n  <!-- Performance / Lightspeed -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">bolt</mat-icon>\r\n      </div>\r\n      <mat-card-title>Performance</mat-card-title>\r\n      <mat-card-subtitle>Performance Enhancements and Caching</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <app-feature-text-info [featureNameId]=\"LightSpeedOutputCache\" [asInfo]=\"true\"></app-feature-text-info>\r\n      @if (lsEnabled()) {\r\n        <div>LightSpeed is enabled. Configure it in each site/app as you need.</div>\r\n      }\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"start\">\r\n      <app-docs-link-helper [link]=\"'https://go.2sxc.org/lightspeed'\" [label]=\"\" [icon]=\"\"></app-docs-link-helper>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n  <!-- Security -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">local_police</mat-icon>\r\n      </div>\r\n      <mat-card-title>Security</mat-card-title>\r\n      <mat-card-subtitle>System Security Features</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <app-feature-text-info [featureNameId]=\"ContentSecurityPolicy\" [asInfo]=\"true\"></app-feature-text-info>\r\n      @if (cspEnabled()) {\r\n        <div>ContentSecurityPolicy is enabled. Configure it in each site/app as you need.</div>\r\n      }\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"start\">\r\n      <app-docs-link-helper [link]=\"'https://go.2sxc.org/csp'\" [label]=\"\" [icon]=\"\"></app-docs-link-helper>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n  <!-- Insights -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">speed</mat-icon>\r\n      </div>\r\n      <mat-card-title>2sxc Insights</mat-card-title>\r\n      <mat-card-subtitle>See what's happening under the hood</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <h4>2sxc Insights for Super Users</h4>\r\n      <p>\r\n        This is to access a special section to see what is really in the server memory. It's intended for extensive debugging - see also\r\n        <a href=\"https://2sxc.org/en/blog/post/using-2sxc-insights\" target=\"_blank\">this blog post</a>.\r\n      </p>\r\n      <div align=\"start\">\r\n        <app-docs-link-helper [link]=\"'https://go.2sxc.org/insights'\" [label]=\"\" [icon]=\"\"></app-docs-link-helper>\r\n        <button mat-button class=\"eav-button__with-icon\" (click)=\"openInsights()\">\r\n          <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n          <span>Open 2sxc Insights</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"card-content-separator\"></div>\r\n      <h4>Activate Page Level Logging</h4>\r\n      <form #activateLogForm=\"ngForm\" class=\"activate-log-form\">\r\n        <div>\r\n          This will place insights-logs in the HTML of the user output for users with <code>?debug=true</code> in the url. It can only be\r\n          activated for short periods of time.\r\n        </div>\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Duration in Minutes</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"number\"\r\n            min=\"0\"\r\n            required\r\n            [pattern]=\"positiveWholeNumber\"\r\n            [(ngModel)]=\"pageLogDuration\"\r\n            name=\"Duration\"\r\n            #duration=\"ngModel\"\r\n            [disabled]=\"loading()\"\r\n          />\r\n        </mat-form-field>\r\n        @if (duration.touched && duration.errors) {\r\n          @if (duration.errors.pattern) {\r\n            <app-field-hint [isError]=\"true\"> Only positive whole numbers </app-field-hint>\r\n          }\r\n        }\r\n      </form>\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"end\">\r\n      <button mat-raised-button color=\"accent\" [disabled]=\"!activateLogForm.valid\" (click)=\"activatePageLog(activateLogForm)\">\r\n        Activate\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n  <!-- Warnings -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">{{ warningIcon() }}</mat-icon>\r\n      </div>\r\n      <mat-card-title>Warnings</mat-card-title>\r\n      <mat-card-subtitle>System and Code Warnings</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      @for (info of warningInfos(); track info) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label eav-long\">{{ info.label }}:</div>\r\n          <div class=\"eav-info-row__value\">\r\n            <span [tippy]=\"info.value\" (click)=\"clipboard.copyToClipboard(info.value)\">{{ info.value }}</span>\r\n            @if (info.link) {\r\n              @if (info.link.target === 'angular') {\r\n                <a class=\"eav-info-row__link\" [routerLink]=\"info.link.url\"> {{ info.link.label }}</a>\r\n              }\r\n              @if (info.link.target !== 'angular') {\r\n                <a class=\"eav-info-row__link\" [href]=\"info.link.url\" [target]=\"info.link.target\">{{ info.link.label }}</a>\r\n              }\r\n            }\r\n          </div>\r\n        </div>\r\n      }\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n  </mat-card>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n","import { Component, OnInit, computed, inject, signal } from '@angular/core';\r\nimport { FormsModule, NgForm } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterLink, RouterOutlet } from '@angular/router';\r\nimport { map, take } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { DocsLinkHelperComponent } from '../../admin-shared/docs-link-helper/docs-link-helper.component';\r\nimport { DialogConfigAppService } from '../../app-administration/services/dialog-config-app.service';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { FeatureTextInfoComponent } from '../../features/feature-text-info/feature-text-info.component';\r\nimport { FeaturesService } from '../../features/features.service';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { DialogInNewWindowService } from '../../shared/routing/dialog-in-new-window.service';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { ClipboardService } from '../../shared/services/clipboard.service';\r\nimport { SxcInsightsService } from '../services/sxc-insights.service';\r\nimport { ZoneService } from '../services/zone.service';\r\nimport { InfoTemplate } from './system-info.models';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-system-info',\r\n  templateUrl: './system-info.component.html',\r\n  imports: [\r\n    MatCardModule,\r\n    MatIconModule,\r\n    RouterLink,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    RouterOutlet,\r\n    FeatureTextInfoComponent,\r\n    FieldHintComponent,\r\n    TippyDirective,\r\n    DocsLinkHelperComponent,\r\n  ]\r\n})\r\nexport class SystemInfoComponent implements OnInit {\r\n\r\n  public features = inject(FeaturesService);\r\n\r\n  #dialogSettings = transient(DialogConfigAppService);\r\n  #sxcInsightsService = transient(SxcInsightsService);\r\n  #zoneSvc = transient(ZoneService);\r\n  #dialogInNewWindowSvc = transient(DialogInNewWindowService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  pageLogDuration: number;\r\n  positiveWholeNumber = /^[1-9][0-9]*$/;\r\n\r\n  LightSpeedOutputCache = FeatureNames.LightSpeed;\r\n  ContentSecurityPolicy = FeatureNames.ContentSecurityPolicy;\r\n\r\n  loading = signal(false);\r\n  #refresh = signal(0);\r\n\r\n  #languages = this.#zoneSvc.getLanguageLive(this.#refresh).value;\r\n  #systemInfoSet = this.#zoneSvc.getSystemInfoLive(this.#refresh).value;\r\n\r\n  systemInfos = computed(() => {\r\n    const systemInfoSetValue = this.#systemInfoSet();\r\n    if (systemInfoSetValue == null) return;\r\n    const url = this.#dialogRouter.router.url + '/' + \"registration\";\r\n    const info: InfoTemplate[] = [\r\n      { label: 'CMS', value: `2sxc v.${systemInfoSetValue.System.EavVersion}` },\r\n      { label: 'Platform', value: `${systemInfoSetValue.System.Platform} v.${systemInfoSetValue.System.PlatformVersion}` },\r\n      { label: 'Zones', value: systemInfoSetValue.System.Zones.toString() },\r\n      { label: 'Fingerprint', value: systemInfoSetValue.System.Fingerprint },\r\n      {\r\n        label: 'Registered to',\r\n        value: systemInfoSetValue.License.Owner || '(unregistered)',\r\n        link: systemInfoSetValue.License.Owner\r\n          ? {\r\n            url,\r\n            label: 'manage',\r\n            target: 'angular',\r\n          }\r\n          : {\r\n            url,\r\n            label: 'register',\r\n            target: 'angular',\r\n          },\r\n      },\r\n    ];\r\n    return info;\r\n  });\r\n\r\n  siteInfos = computed(() => {\r\n    const systemInfoSetValue = this.#systemInfoSet();\r\n    const languagesValue = this.#languages();\r\n\r\n    if (systemInfoSetValue == null || languagesValue == null) return;\r\n\r\n    const allLanguages = languagesValue.length;\r\n    const activeLanguages = languagesValue.filter(l => l.IsEnabled).length;\r\n\r\n    const info: InfoTemplate[] = [\r\n      { label: 'Zone', value: systemInfoSetValue.Site.ZoneId.toString() },\r\n      { label: 'Site', value: systemInfoSetValue.Site.SiteId.toString() },\r\n      {\r\n        label: 'Languages',\r\n        value: `${activeLanguages}/${allLanguages}`,\r\n        link: {\r\n          url: 'languages',\r\n          label: 'manage',\r\n          target: 'angular',\r\n        },\r\n      },\r\n      {\r\n        label: 'Apps',\r\n        value: systemInfoSetValue.Site.Apps.toString(),\r\n        link: {\r\n          url: 'list',\r\n          label: 'manage',\r\n          target: 'angular',\r\n        },\r\n      },\r\n    ];\r\n\r\n    return info;\r\n  });\r\n\r\n  warningIcon = computed(() => {\r\n    const systemInfoSetValue = this.#systemInfoSet();\r\n    if (systemInfoSetValue == null) return undefined;\r\n    if (systemInfoSetValue.Messages.WarningsObsolete || systemInfoSetValue.Messages.WarningsOther) {\r\n      return 'warning';\r\n    }\r\n    return 'check';\r\n  });\r\n\r\n  warningInfos = computed(() => {\r\n    const systemInfoSetValue = this.#systemInfoSet();\r\n    if (systemInfoSetValue == null) return undefined;\r\n\r\n    const info: InfoTemplate[] = [\r\n      {\r\n        label: 'Warnings Obsolete',\r\n        value: systemInfoSetValue.Messages.WarningsObsolete.toString(),\r\n        link: !systemInfoSetValue.Messages.WarningsObsolete\r\n          ? undefined\r\n          : {\r\n            url: window.$2sxc.http.apiUrl('sys/insights/logs?key=warnings-obsolete'),\r\n            label: 'review',\r\n            target: '_blank',\r\n          },\r\n      },\r\n      {\r\n        label: 'Warnings Other',\r\n        value: systemInfoSetValue.Messages.WarningsOther.toString(),\r\n        link: !systemInfoSetValue.Messages.WarningsOther\r\n          ? undefined\r\n          : {\r\n            url: window.$2sxc.http.apiUrl('sys/insights/logs'),\r\n            label: 'review',\r\n            target: '_blank',\r\n          },\r\n      },\r\n    ];\r\n    return info;\r\n  });\r\n\r\n  protected lsEnabled = this.features.isEnabled[FeatureNames.LightSpeed];\r\n  protected cspEnabled = this.features.isEnabled[FeatureNames.ContentSecurityPolicy];\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  protected clipboard = transient(ClipboardService);\r\n\r\n  ngOnInit(): void {\r\n    this.#dialogRouter.doOnDialogClosed(() => {\r\n      this.#refresh.update(v => ++v)\r\n    });\r\n  }\r\n\r\n  openSiteSettings(): void {\r\n    this.openParentAppSettings(\"Site\");\r\n  }\r\n\r\n  openGlobalSettings(): void {\r\n    this.openParentAppSettings(\"System\");\r\n  }\r\n\r\n  openParentAppSettings(partName: \"System\" | \"Site\"): void {\r\n    this.#dialogSettings.getCurrent$()\r\n      .pipe(map(dc => dc?.Context[partName].PrimaryApp), take(1))\r\n      .subscribe(appIdentity => {\r\n        this.#dialogInNewWindowSvc.openAppAdministration(appIdentity.ZoneId, appIdentity.AppId, 'app');\r\n      })\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/help'), '_blank');\r\n  }\r\n\r\n\r\n  openSideNavPath(sideNavPath: string): void {\r\n\r\n    // Url are /2/apps/system/registration, sideNavPath are only the last part of the url\r\n    if (sideNavPath.includes('registration'))\r\n      sideNavPath = 'registration';\r\n\r\n    const router = this.#dialogRouter.router;\r\n    router.navigate([router.url.replace('system', '') + sideNavPath]);\r\n  }\r\n\r\n  async activatePageLog(form: NgForm) {\r\n    this.loading.set(true);\r\n    this.snackBar.open('Activating...');\r\n    try {\r\n      const result = await this.#sxcInsightsService.activatePageLog(this.pageLogDuration);\r\n\r\n      this.snackBar.open(result, null, { duration: 4000 });\r\n\r\n      if (document.activeElement instanceof HTMLElement)\r\n        document.activeElement.blur();\r\n\r\n      form.resetForm();\r\n\r\n    } catch (error) {\r\n      console.error('Error activating page log:', error);\r\n      this.snackBar.open('Failed to activate page log', null, { duration: 4000 });\r\n    } finally {\r\n      this.loading.set(false);\r\n    }\r\n  }\r\n}\r\n","@if (show()) {\r\n  <div class=\"feature-text-info\" (click)=\"openDialog()\" [tippy]=\"'Features.Tooltip' | translate: feature()\">\r\n    <!-- Icon column -->\r\n    <mat-icon class=\"icon icon-{{icon()}}\">{{ icon() }}</mat-icon>\r\n    <!-- Text column -->\r\n    <div class=\"feature-text-info-content\">\r\n      <div class=\"feature-text-info-title\">{{ 'Features.FeatureNotActivated' | translate }}</div>\r\n      <div class=\"feature-text-info-subtitle\">{{ 'Features.ClickToFindOutMore' | translate }}</div>\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n}\r\n","import { Component, input } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { computedObj } from '../../shared/signals/signal.utilities';\r\nimport { FeatureComponentBase } from '../shared/base-feature.component';\r\n\r\n@Component({\r\n  selector: 'app-feature-text-info',\r\n  templateUrl: './feature-text-info.component.html',\r\n  styleUrls: ['./feature-text-info.component.scss'],\r\n  imports: [\r\n    MatIconModule,\r\n    TranslateModule,\r\n    TippyDirective,\r\n  ]\r\n})\r\nexport class FeatureTextInfoComponent extends FeatureComponentBase {\r\n  asInfo = input<boolean>(false);\r\n\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  icon = computedObj('icon', () => this.asInfo() ? 'info' : 'warning');\r\n}\r\n","@if (featureDetails(); as feature) {\r\n  <app-feature-details-dialog [specs]=\"{ feature: feature, showGuid: false, showStatus: true, showClose: true }\"></app-feature-details-dialog>\r\n}\r\n","import { Component, Inject, OnInit, signal } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { transient } from \"projects/core\";\r\nimport { FeatureDetailsDialogComponent } from \"../../apps-management/licence-info/feature-details-dialog/feature-details-dialog.component\";\r\nimport { ClipboardService } from \"../../shared/services/clipboard.service\";\r\nimport { FeatureDetailService } from \"../services/feature-detail.service\";\r\n\r\n@Component({\r\n    selector: 'app-feature-info-dialog',\r\n    templateUrl: './feature-info-dialog.component.html',\r\n    imports: [\r\n        FeatureDetailsDialogComponent\r\n    ]\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  #featureDetailSvc = transient(FeatureDetailService);\r\n  featureId = signal<string>('');\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    protected dialog: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.featureId.set(this.route.snapshot.data['featureId'] || this.dialogData || '');\r\n    this.featureDetails = this.#featureDetailSvc.getFeatureDetail(this.featureId).value;\r\n  }\r\n\r\n  protected featureDetails: any;\r\n  protected clipboard = transient(ClipboardService);\r\n}\r\n"],"x_google_ignoreList":[3,5,11]}