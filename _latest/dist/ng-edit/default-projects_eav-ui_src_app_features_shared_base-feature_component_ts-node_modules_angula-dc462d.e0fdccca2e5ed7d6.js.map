{"version":3,"file":"default-projects_eav-ui_src_app_features_shared_base-feature_component_ts-node_modules_angula-dc462d.e0fdccca2e5ed7d6.js","mappings":"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","names":["i0","ctx_r1","feature","isEnabled","_r3","clipboard","copyToClipboard","guid","_r4","dialog","close","_r1","nameId","FeatureDetailsDialogComponent_Conditional_0_Conditional_13_Template","FeatureDetailsDialogComponent_Conditional_0_Conditional_14_Template","FeatureDetailsDialogComponent_Conditional_0_Conditional_26_Template","name","description","mySpecs","showStatus","showGuid","security","Impact","Message","link","showClose","FeatureDetailsDialogComponent","constructor","dialogSpecs","this","specs","input","computedObj","transient","ClipboardService","MAT_DIALOG_DATA","i1","selectors","inputs","decls","vars","consts","template","rf","ctx","FeatureDetailsDialogComponent_Conditional_0_Template","MatCardModule","i2","MatButtonModule","i3","MatIconModule","i4","SafeHtmlPipe","TranslateModule","i5","encapsulation","_c0","_c1","EcoFabSpeedDialActionsComponent_Conditional_0_Template","_c2","_c3","_c4","_c5","getHostElement","button","_elementRef","nativeElement","EcoFabSpeedDialActionsComponent","injector","renderer","miniFabVisible","hideMiniFab","_parent","get","EcoFabSpeedDialComponent","ngAfterContentInit","_buttons","changes","subscribe","initButtonStates","setActionsVisibility","forEach","i","addClass","changeElementStyle","toString","show","resetAnimationState","showMiniFabAnimation","setTimeout","transform","transitionDelay","animationMode","getTranslateFunction","hostElement","clearTimeout","unsubscribe","hide","obs","map","opacity","fromEvent","pipe","take","forkJoin","value","dir","direction","elem","style","setStyle","ɵfac","__ngFactoryType__","ɵcmp","type","contentQueries","dirIndex","MatMiniFabButton","_t","ngContentSelectors","fixed","_fixed","_processOutsideClickState","open","_open","previousOpen","openChange","emit","isInitialized","_direction","previousDirection","_setElementClass","_animationMode","previousAnimationMode","Promise","resolve","then","elementRef","document","_documentClickUnlistener","EventEmitter","ngOnDestroy","_unsetDocumentClickListener","toggle","_onClick","_childActions","elemClass","isAdd","finalClass","removeClass","_setDocumentClickListener","listen","DOCUMENT","first","hostVars","hostBindings","outputs","styles","EcoFabSpeedDialTriggerComponent","sp","spin","event","stopPropagation","$event","webApiFeatureDetails","FeatureDetailService","HttpServiceBase","getFeatureDetail","getSignal","params","getFeatureDetails","nameIds","featureList","signal","xx","update","prev","getHttpApiUrl","factory","FeatureInfoDialogComponent","#featureDetailSvc","dialogData","route","featureId","ngOnInit","set","snapshot","data","featureDetails","FeatureInfoDialogComponent_Conditional_0_Template","tmp_0_0","BADGE_CONTENT_CLASS","_MatBadgeStyleLoader","static","changeDetection","MatBadge","_ngZone","inject","NgZone","ElementRef","_ariaDescriber","AriaDescriber","_renderer","Renderer2","ANIMATION_MODULE_TYPE","optional","_idGenerator","_IdGenerator","color","_color","_setColor","overlap","disabled","position","content","_content","newContent","_updateRenderedContent","_description","newDescription","_updateDescription","size","hidden","_badgeElement","_inlineBadgeDescription","_isInitialized","_interactivityChecker","InteractivityChecker","_document","styleLoader","_CdkPrivateStyleLoader","load","_VisuallyHiddenLoader","isAbove","indexOf","isAfter","getBadgeElement","_clearExistingBadges","_createBadgeElement","destroyNode","remove","removeDescription","_isHostInteractive","isFocusable","ignoreVisibility","badgeElement","createElement","activeClass","setAttribute","getId","classList","add","appendChild","requestAnimationFrame","runOutsideAngular","newContentNormalized","trim","textContent","_removeInlineDescription","describe","_updateInlineDescription","undefined","colorPalette","badges","querySelectorAll","Array","from","hostAttrs","booleanAttribute","MatBadgeModule","imports","A11yModule","MatCommonModule","FeatureComponentBase","#matDialog","#viewContainerRef","#changeDetectorRef","#featuresService","featureNameId","required","showIf","MatDialog","ViewContainerRef","ChangeDetectorRef","FeaturesService","getCurrent","feat","openDialog","openFeatureDialog","viewContainerRef","changeDetectorRef","autoFocus","width","markForCheck"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.html","./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.ts","./node_modules/@ecodev/fab-speed-dial/fesm2022/ecodev-fab-speed-dial.mjs","./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./node_modules/@angular/material/fesm2022/badge.mjs","./projects/eav-ui/src/app/features/shared/base-feature.component.ts"],"sourcesContent":["@if (feature()) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ feature().name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"feature().description | safeHtml\"></p>\r\n      <!-- Name ID -->\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">ID:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span (click)=\"clipboard.copyToClipboard(feature().nameId)\">{{ feature().nameId }}</span>\r\n        </div>\r\n      </div>\r\n      <!-- Status -->\r\n      @if (mySpecs().showStatus) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">{{ 'Features.Status' | translate }}:</div>\r\n          <div class=\"eav-info-row__value\">\r\n            <span>{{ (feature().isEnabled ? 'Features.Active' : 'Features.NotActive') | translate }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n      <!-- GUID -->\r\n      @if (mySpecs().showGuid) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">GUID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span (click)=\"clipboard.copyToClipboard(feature().guid)\">{{ feature().guid }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n      <!-- Security Rating -->\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">Security Rating:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ feature().security.Impact + ': ' + feature().security.Message }}</span>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      <a [href]=\"feature().link\" target=\"_blank\" mat-raised-button class=\"eav-card-action-button\" color=\"accent\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        Find out more\r\n      </a>\r\n      @if (mySpecs().showClose != false) {\r\n        <button mat-raised-button class=\"eav-card-action-button\" (click)=\"dialog.close()\">Close</button>\r\n      }\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}\r\n","import { Component, Inject, input, Optional } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { transient } from '../../../../../../core/transient';\r\nimport { SafeHtmlPipe } from '../../../shared/pipes/safe-html.pipe';\r\nimport { ClipboardService } from '../../../shared/services/clipboard.service';\r\nimport { computedObj } from '../../../shared/signals/signal.utilities';\r\nimport { FeatureDetailsDialogData } from './feature-details-dialog.models';\r\n\r\n@Component({\r\n    selector: 'app-feature-details-dialog',\r\n    templateUrl: './feature-details-dialog.component.html',\r\n    imports: [\r\n        MatCardModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        SafeHtmlPipe,\r\n        TranslateModule,\r\n    ]\r\n})\r\nexport class FeatureDetailsDialogComponent {\r\n  specs = input<FeatureDetailsDialogData>();\r\n\r\n  constructor(\r\n    @Optional() @Inject(MAT_DIALOG_DATA) private dialogSpecs: FeatureDetailsDialogData,\r\n    protected dialog: MatDialogRef<FeatureDetailsDialogComponent>,\r\n  ) { }\r\n\r\n  protected mySpecs = computedObj('mySpecs', () =>  this.specs() ?? this.dialogSpecs );\r\n  protected feature = computedObj('feature', () => this.mySpecs()?.feature);\r\n  protected clipboard = transient(ClipboardService);\r\n}\r\n","import * as i0 from '@angular/core';\nimport { Component, ContentChildren, EventEmitter, ViewEncapsulation, Inject, Input, HostBinding, Output, ContentChild, HostListener } from '@angular/core';\nimport { MatMiniFabButton } from '@angular/material/button';\nimport { DOCUMENT } from '@angular/common';\nimport { fromEvent, forkJoin } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nconst Z_INDEX_ITEM = 23;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getHostElement(button) {\n    return button._elementRef.nativeElement;\n}\nclass EcoFabSpeedDialActionsComponent {\n    constructor(injector, renderer) {\n        this.renderer = renderer;\n        /**\n         * Whether the min-fab button exist in DOM\n         */\n        this.miniFabVisible = false;\n        /**\n         * When we will remove mini-fab buttons from DOM, after the animation is complete\n         */\n        this.hideMiniFab = null;\n        this._parent = injector.get(EcoFabSpeedDialComponent);\n    }\n    ngAfterContentInit() {\n        this._buttons.changes.subscribe(() => {\n            this.initButtonStates();\n            this._parent.setActionsVisibility();\n        });\n        this.initButtonStates();\n    }\n    initButtonStates() {\n        this._buttons.forEach((button, i) => {\n            this.renderer.addClass(getHostElement(button), 'eco-fab-action-item');\n            this.changeElementStyle(getHostElement(button), 'z-index', '' + (Z_INDEX_ITEM - i).toString());\n        });\n    }\n    show() {\n        this.resetAnimationState();\n        this.miniFabVisible = true;\n        this.showMiniFabAnimation = setTimeout(() => {\n            this._buttons.forEach((button, i) => {\n                let transitionDelay = 0;\n                let transform;\n                if (this._parent.animationMode === 'scale') {\n                    // Incremental transition delay of 65ms for each action button\n                    transitionDelay = 3 + 65 * i;\n                    transform = 'scale(1)';\n                }\n                else {\n                    transform = this.getTranslateFunction('0');\n                }\n                const hostElement = getHostElement(button);\n                this.changeElementStyle(hostElement, 'transition-delay', transitionDelay.toString() + 'ms');\n                this.changeElementStyle(hostElement, 'opacity', '1');\n                this.changeElementStyle(hostElement, 'transform', transform);\n            });\n        }, 50); // Be sure that @if can show elements before trying to animate them\n    }\n    resetAnimationState() {\n        clearTimeout(this.showMiniFabAnimation);\n        if (this.hideMiniFab) {\n            this.hideMiniFab.unsubscribe();\n            this.hideMiniFab = null;\n        }\n    }\n    hide() {\n        this.resetAnimationState();\n        const obs = this._buttons.map((button, i) => {\n            let opacity = '1';\n            let transitionDelay = 0;\n            let transform;\n            if (this._parent.animationMode === 'scale') {\n                transitionDelay = 3 - 65 * i;\n                transform = 'scale(0)';\n                opacity = '0';\n            }\n            else {\n                transform = this.getTranslateFunction((55 * (i + 1) - i * 5).toString() + 'px');\n            }\n            const hostElement = getHostElement(button);\n            this.changeElementStyle(hostElement, 'transition-delay', transitionDelay.toString() + 'ms');\n            this.changeElementStyle(hostElement, 'opacity', opacity);\n            this.changeElementStyle(hostElement, 'transform', transform);\n            return fromEvent(hostElement, 'transitionend').pipe(take(1));\n        });\n        // Wait for all animation to finish, then destroy their elements\n        this.hideMiniFab = forkJoin(obs).subscribe(() => (this.miniFabVisible = false));\n    }\n    getTranslateFunction(value) {\n        const dir = this._parent.direction;\n        const translateFn = dir === 'up' || dir === 'down' ? 'translateY' : 'translateX';\n        const sign = dir === 'down' || dir === 'right' ? '-' : '';\n        return translateFn + '(' + sign + value + ')';\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    changeElementStyle(elem, style, value) {\n        // FIXME - Find a way to create a \"wrapper\" around the action button(s) provided by the user, so we don't change it's style tag\n        this.renderer.setStyle(elem, style, value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: EcoFabSpeedDialActionsComponent, deps: [{ token: i0.Injector }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.1.0\", type: EcoFabSpeedDialActionsComponent, isStandalone: true, selector: \"eco-fab-speed-dial-actions\", queries: [{ propertyName: \"_buttons\", predicate: MatMiniFabButton }], ngImport: i0, template: `@if (miniFabVisible) {\n        <ng-content select=\"[mat-mini-fab]\" />\n    }`, isInline: true }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: EcoFabSpeedDialActionsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'eco-fab-speed-dial-actions',\n                    template: `@if (miniFabVisible) {\n        <ng-content select=\"[mat-mini-fab]\" />\n    }`,\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.Injector }, { type: i0.Renderer2 }], propDecorators: { _buttons: [{\n                type: ContentChildren,\n                args: [MatMiniFabButton]\n            }] } });\n/** @dynamic @see https://github.com/angular/angular/issues/20351#issuecomment-344009887 */\nclass EcoFabSpeedDialComponent {\n    /**\n     * Whether this speed dial is fixed on screen (user cannot change it by clicking)\n     */\n    get fixed() {\n        return this._fixed;\n    }\n    set fixed(fixed) {\n        this._fixed = fixed;\n        this._processOutsideClickState();\n    }\n    /**\n     * Whether this speed dial is opened\n     */\n    get open() {\n        return this._open;\n    }\n    set open(open) {\n        const previousOpen = this._open;\n        this._open = open;\n        if (previousOpen !== this._open) {\n            this.openChange.emit(this._open);\n            if (this.isInitialized) {\n                this.setActionsVisibility();\n            }\n        }\n    }\n    /**\n     * The direction of the speed dial. Can be 'up', 'down', 'left' or 'right'\n     */\n    get direction() {\n        return this._direction;\n    }\n    set direction(direction) {\n        const previousDirection = this._direction;\n        this._direction = direction;\n        if (previousDirection !== this.direction) {\n            this._setElementClass(previousDirection, false);\n            this._setElementClass(this.direction, true);\n            if (this.isInitialized) {\n                this.setActionsVisibility();\n            }\n        }\n    }\n    /**\n     * The animation mode to open the speed dial. Can be 'fling' or 'scale'\n     */\n    get animationMode() {\n        return this._animationMode;\n    }\n    set animationMode(animationMode) {\n        const previousAnimationMode = this._animationMode;\n        this._animationMode = animationMode;\n        if (previousAnimationMode !== this._animationMode) {\n            this._setElementClass(previousAnimationMode, false);\n            this._setElementClass(this.animationMode, true);\n            if (this.isInitialized) {\n                // To start another detect lifecycle and force the \"close\" on the action buttons\n                Promise.resolve(null).then(() => (this.open = false));\n            }\n        }\n    }\n    constructor(elementRef, renderer, document) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.document = document;\n        this.isInitialized = false;\n        this._direction = 'up';\n        this._open = false;\n        this._animationMode = 'fling';\n        this._fixed = false;\n        this._documentClickUnlistener = null;\n        this.openChange = new EventEmitter();\n    }\n    ngAfterContentInit() {\n        this.isInitialized = true;\n        this.setActionsVisibility();\n        this._setElementClass(this.direction, true);\n        this._setElementClass(this.animationMode, true);\n    }\n    ngOnDestroy() {\n        this._unsetDocumentClickListener();\n    }\n    /**\n     * Toggle the open state of this speed dial\n     */\n    toggle() {\n        this.open = !this.open;\n    }\n    _onClick() {\n        if (!this.fixed && this.open) {\n            this.open = false;\n        }\n    }\n    setActionsVisibility() {\n        if (this.open) {\n            this._childActions.show();\n        }\n        else {\n            this._childActions.hide();\n        }\n        this._processOutsideClickState();\n    }\n    _setElementClass(elemClass, isAdd) {\n        const finalClass = `eco-${elemClass}`;\n        if (isAdd) {\n            this.renderer.addClass(this.elementRef.nativeElement, finalClass);\n        }\n        else {\n            this.renderer.removeClass(this.elementRef.nativeElement, finalClass);\n        }\n    }\n    _processOutsideClickState() {\n        if (!this.fixed && this.open) {\n            this._setDocumentClickListener();\n        }\n        else {\n            this._unsetDocumentClickListener();\n        }\n    }\n    _setDocumentClickListener() {\n        if (!this._documentClickUnlistener) {\n            this._documentClickUnlistener = this.renderer.listen(this.document, 'click', () => {\n                this.open = false;\n            });\n        }\n    }\n    _unsetDocumentClickListener() {\n        if (this._documentClickUnlistener) {\n            this._documentClickUnlistener();\n            this._documentClickUnlistener = null;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: EcoFabSpeedDialComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.1.0\", type: EcoFabSpeedDialComponent, isStandalone: true, selector: \"eco-fab-speed-dial\", inputs: { fixed: \"fixed\", open: \"open\", direction: \"direction\", animationMode: \"animationMode\" }, outputs: { openChange: \"openChange\" }, host: { listeners: { \"click\": \"_onClick()\" }, properties: { \"class.eco-opened\": \"this.open\" } }, queries: [{ propertyName: \"_childActions\", first: true, predicate: EcoFabSpeedDialActionsComponent, descendants: true }], ngImport: i0, template: `\n        <div class=\"eco-fab-speed-dial-container\">\n            <ng-content select=\"eco-fab-speed-dial-trigger\" />\n            <ng-content select=\"eco-fab-speed-dial-actions\" />\n        </div>\n    `, isInline: true, styles: [\"eco-fab-speed-dial{display:inline-block}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{-webkit-transform:rotate(360deg);transform:rotate(360deg)}eco-fab-speed-dial .eco-fab-speed-dial-container{position:relative;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-align:center;-webkit-align-items:center;align-items:center;z-index:20}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{pointer-events:auto;z-index:24}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180,eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{-webkit-transition:all .6s cubic-bezier(.4,0,.2,1);transition:all .6s cubic-bezier(.4,0,.2,1)}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-actions{display:-webkit-box;display:-webkit-flex;display:flex;position:absolute;height:0;width:0}eco-fab-speed-dial.eco-fling .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{display:block;opacity:1;-webkit-transition:all .3s cubic-bezier(.55,0,.55,.2);transition:all .3s cubic-bezier(.55,0,.55,.2)}eco-fab-speed-dial.eco-scale .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{-webkit-transform:scale(0);transform:scale(0);-webkit-transition:all .3s cubic-bezier(.55,0,.55,.2);transition:all .3s cubic-bezier(.55,0,.55,.2);-webkit-transition-duration:.14286s;transition-duration:.14286s}eco-fab-speed-dial.eco-down eco-fab-speed-dial-actions{bottom:2px;left:7px}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{-webkit-box-ordinal-group:2;-webkit-order:1;order:1}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column;-webkit-box-ordinal-group:3;-webkit-order:2;order:2}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-top:10px}eco-fab-speed-dial.eco-up eco-fab-speed-dial-actions{top:2px;left:7px}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{-webkit-box-ordinal-group:3;-webkit-order:2;order:2}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-webkit-flex-direction:column-reverse;flex-direction:column-reverse;-webkit-box-ordinal-group:2;-webkit-order:1;order:1}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-bottom:10px}eco-fab-speed-dial.eco-left eco-fab-speed-dial-actions{top:7px;left:2px}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;flex-direction:row}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{-webkit-box-ordinal-group:3;-webkit-order:2;order:2}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row-reverse;flex-direction:row-reverse;-webkit-box-ordinal-group:2;-webkit-order:1;order:1}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-right:10px}eco-fab-speed-dial.eco-right eco-fab-speed-dial-actions{top:7px;right:2px}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;flex-direction:row}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{-webkit-box-ordinal-group:2;-webkit-order:1;order:1}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;flex-direction:row;-webkit-box-ordinal-group:3;-webkit-order:2;order:2}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-left:10px}\\n\"], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: EcoFabSpeedDialComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'eco-fab-speed-dial', template: `\n        <div class=\"eco-fab-speed-dial-container\">\n            <ng-content select=\"eco-fab-speed-dial-trigger\" />\n            <ng-content select=\"eco-fab-speed-dial-actions\" />\n        </div>\n    `, encapsulation: ViewEncapsulation.None, standalone: true, styles: [\"eco-fab-speed-dial{display:inline-block}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{-webkit-transform:rotate(360deg);transform:rotate(360deg)}eco-fab-speed-dial .eco-fab-speed-dial-container{position:relative;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-align:center;-webkit-align-items:center;align-items:center;z-index:20}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{pointer-events:auto;z-index:24}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180,eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{-webkit-transition:all .6s cubic-bezier(.4,0,.2,1);transition:all .6s cubic-bezier(.4,0,.2,1)}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-actions{display:-webkit-box;display:-webkit-flex;display:flex;position:absolute;height:0;width:0}eco-fab-speed-dial.eco-fling .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{display:block;opacity:1;-webkit-transition:all .3s cubic-bezier(.55,0,.55,.2);transition:all .3s cubic-bezier(.55,0,.55,.2)}eco-fab-speed-dial.eco-scale .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{-webkit-transform:scale(0);transform:scale(0);-webkit-transition:all .3s cubic-bezier(.55,0,.55,.2);transition:all .3s cubic-bezier(.55,0,.55,.2);-webkit-transition-duration:.14286s;transition-duration:.14286s}eco-fab-speed-dial.eco-down eco-fab-speed-dial-actions{bottom:2px;left:7px}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{-webkit-box-ordinal-group:2;-webkit-order:1;order:1}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column;-webkit-box-ordinal-group:3;-webkit-order:2;order:2}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-top:10px}eco-fab-speed-dial.eco-up eco-fab-speed-dial-actions{top:2px;left:7px}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{-webkit-box-ordinal-group:3;-webkit-order:2;order:2}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-webkit-flex-direction:column-reverse;flex-direction:column-reverse;-webkit-box-ordinal-group:2;-webkit-order:1;order:1}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-bottom:10px}eco-fab-speed-dial.eco-left eco-fab-speed-dial-actions{top:7px;left:2px}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;flex-direction:row}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{-webkit-box-ordinal-group:3;-webkit-order:2;order:2}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row-reverse;flex-direction:row-reverse;-webkit-box-ordinal-group:2;-webkit-order:1;order:1}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-right:10px}eco-fab-speed-dial.eco-right eco-fab-speed-dial-actions{top:7px;right:2px}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;flex-direction:row}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{-webkit-box-ordinal-group:2;-webkit-order:1;order:1}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;flex-direction:row;-webkit-box-ordinal-group:3;-webkit-order:2;order:2}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-left:10px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }], propDecorators: { fixed: [{\n                type: Input\n            }], open: [{\n                type: HostBinding,\n                args: ['class.eco-opened']\n            }, {\n                type: Input\n            }], direction: [{\n                type: Input\n            }], animationMode: [{\n                type: Input\n            }], openChange: [{\n                type: Output\n            }], _childActions: [{\n                type: ContentChild,\n                args: [EcoFabSpeedDialActionsComponent]\n            }], _onClick: [{\n                type: HostListener,\n                args: ['click']\n            }] } });\nclass EcoFabSpeedDialTriggerComponent {\n    /**\n     * Whether this trigger should spin (360dg) while opening the speed dial\n     */\n    get sp() {\n        return this.spin;\n    }\n    constructor(injector) {\n        this.spin = false;\n        this._parent = injector.get(EcoFabSpeedDialComponent);\n    }\n    _onClick(event) {\n        if (!this._parent.fixed) {\n            this._parent.toggle();\n            event.stopPropagation();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: EcoFabSpeedDialTriggerComponent, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.1.0\", type: EcoFabSpeedDialTriggerComponent, isStandalone: true, selector: \"eco-fab-speed-dial-trigger\", inputs: { spin: \"spin\" }, host: { listeners: { \"click\": \"_onClick($event)\" }, properties: { \"class.eco-spin\": \"this.sp\" } }, ngImport: i0, template: ` <ng-content select=\"[mat-fab]\" />`, isInline: true }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: EcoFabSpeedDialTriggerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'eco-fab-speed-dial-trigger',\n                    template: ` <ng-content select=\"[mat-fab]\" />`,\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.Injector }], propDecorators: { sp: [{\n                type: HostBinding,\n                args: ['class.eco-spin']\n            }], spin: [{\n                type: Input\n            }], _onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\n\n/*\n * Public API Surface of fab-speed-dial\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent };\n","import { Injectable, signal, Signal } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Feature } from '../models';\r\n\r\nconst webApiFeatureDetails = \"admin/feature/details\";\r\n\r\n@Injectable()\r\nexport class FeatureDetailService extends HttpServiceBase {\r\n\r\n  getFeatureDetail(nameId: string): Signal<Feature> {\r\n    return this.getSignal<Feature>(webApiFeatureDetails, {\r\n      params: { nameId }\r\n    });\r\n  }\r\n\r\n  getFeatureDetails(nameIds: string[]): Signal<Feature[]> {\r\n    const featureList = signal<Feature[]>([]);\r\n    for (const nameId of nameIds) {\r\n      this.xx(nameId).subscribe(feature => {\r\n        featureList.update(prev => [...prev, feature]);\r\n      });\r\n    }\r\n    return featureList;\r\n  }\r\n\r\n  // TODO: Daniel fragen, getFeatureDetails(nameIds: string[]) ist nicht korrekt\r\n  // getFeatureDetails(nameIds: string[]): Signal<Feature[]> {\r\n  //   console.log('getFeatureDetails', nameIds);\r\n  //   const featureList = signal<Feature[]>([]);\r\n  //   for (const nameId of nameIds) {\r\n  //   console.log('getFeatureDetails', nameId);\r\n\r\n\r\n  //     const x = this.getFeatureDetail(nameId) ;\r\n  //     featureList.update(prev => [...prev, x()]);\r\n  //   }\r\n  //   return featureList;\r\n  // }\r\n\r\n  // Remove later\r\n  xx(nameId: string): Observable<Feature> {\r\n    return this.getHttpApiUrl<Feature>(webApiFeatureDetails, {\r\n      params: { nameId }\r\n    });\r\n  }\r\n}\r\n","@if (featureDetails(); as feature) {\r\n  <app-feature-details-dialog [specs]=\"{ feature: feature, showGuid: false, showStatus: true, showClose: true }\"></app-feature-details-dialog>\r\n}\r\n","import { Component, Inject, OnInit, signal } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { transient } from \"projects/core\";\r\nimport { FeatureDetailsDialogComponent } from \"../../apps-management/licence-info/feature-details-dialog/feature-details-dialog.component\";\r\nimport { ClipboardService } from \"../../shared/services/clipboard.service\";\r\nimport { FeatureDetailService } from \"../services/feature-detail.service\";\r\n\r\n@Component({\r\n    selector: 'app-feature-info-dialog',\r\n    templateUrl: './feature-info-dialog.component.html',\r\n    imports: [\r\n        FeatureDetailsDialogComponent\r\n    ]\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  #featureDetailSvc = transient(FeatureDetailService);\r\n  featureId = signal<string>('');\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    protected dialog: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.featureId.set(this.route.snapshot.data['featureId'] || this.dialogData || '');\r\n    this.featureDetails = this.#featureDetailSvc.getFeatureDetail(this.featureId());\r\n  }\r\n\r\n  protected featureDetails: any;\r\n  protected clipboard = transient(ClipboardService);\r\n}\r\n","import { AriaDescriber, _IdGenerator, InteractivityChecker, A11yModule } from '@angular/cdk/a11y';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, inject, NgZone, ElementRef, Renderer2, ANIMATION_MODULE_TYPE, booleanAttribute, Directive, Input, NgModule } from '@angular/core';\nimport { _CdkPrivateStyleLoader, _VisuallyHiddenLoader } from '@angular/cdk/private';\nimport { MatCommonModule } from '@angular/material/core';\n\nconst BADGE_CONTENT_CLASS = 'mat-badge-content';\n/**\n * Component used to load the structural styles of the badge.\n * @docs-private\n */\nclass _MatBadgeStyleLoader {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: _MatBadgeStyleLoader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"19.2.0\", type: _MatBadgeStyleLoader, isStandalone: true, selector: \"ng-component\", ngImport: i0, template: '', isInline: true, styles: [\".mat-badge{position:relative}.mat-badge.mat-badge{overflow:visible}.mat-badge-content{position:absolute;text-align:center;display:inline-block;transition:transform 200ms ease-in-out;transform:scale(0.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;box-sizing:border-box;pointer-events:none;background-color:var(--mat-badge-background-color, var(--mat-sys-error));color:var(--mat-badge-text-color, var(--mat-sys-on-error));font-family:var(--mat-badge-text-font, var(--mat-sys-label-small-font));font-weight:var(--mat-badge-text-weight, var(--mat-sys-label-small-weight));border-radius:var(--mat-badge-container-shape, var(--mat-sys-corner-full))}.mat-badge-above .mat-badge-content{bottom:100%}.mat-badge-below .mat-badge-content{top:100%}.mat-badge-before .mat-badge-content{right:100%}[dir=rtl] .mat-badge-before .mat-badge-content{right:auto;left:100%}.mat-badge-after .mat-badge-content{left:100%}[dir=rtl] .mat-badge-after .mat-badge-content{left:auto;right:100%}@media(forced-colors: active){.mat-badge-content{outline:solid 1px;border-radius:0}}.mat-badge-disabled .mat-badge-content{background-color:var(--mat-badge-disabled-state-background-color, color-mix(in srgb, var(--mat-sys-error) 38%, transparent));color:var(--mat-badge-disabled-state-text-color, var(--mat-sys-on-error))}.mat-badge-hidden .mat-badge-content{display:none}.ng-animate-disabled .mat-badge-content,.mat-badge-content._mat-animation-noopable{transition:none}.mat-badge-content.mat-badge-active{transform:none}.mat-badge-small .mat-badge-content{width:var(--mat-badge-legacy-small-size-container-size, unset);height:var(--mat-badge-legacy-small-size-container-size, unset);min-width:var(--mat-badge-small-size-container-size, 6px);min-height:var(--mat-badge-small-size-container-size, 6px);line-height:var(--mat-badge-small-size-line-height, 6px);padding:var(--mat-badge-small-size-container-padding, 0);font-size:var(--mat-badge-small-size-text-size, 0);margin:var(--mat-badge-small-size-container-offset, -6px 0)}.mat-badge-small.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-small-size-container-overlap-offset, -6px)}.mat-badge-medium .mat-badge-content{width:var(--mat-badge-legacy-container-size, unset);height:var(--mat-badge-legacy-container-size, unset);min-width:var(--mat-badge-container-size, 16px);min-height:var(--mat-badge-container-size, 16px);line-height:var(--mat-badge-line-height, 16px);padding:var(--mat-badge-container-padding, 0 4px);font-size:var(--mat-badge-text-size, var(--mat-sys-label-small-size));margin:var(--mat-badge-container-offset, -12px 0)}.mat-badge-medium.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-container-overlap-offset, -12px)}.mat-badge-large .mat-badge-content{width:var(--mat-badge-legacy-large-size-container-size, unset);height:var(--mat-badge-legacy-large-size-container-size, unset);min-width:var(--mat-badge-large-size-container-size, 16px);min-height:var(--mat-badge-large-size-container-size, 16px);line-height:var(--mat-badge-large-size-line-height, 16px);padding:var(--mat-badge-large-size-container-padding, 0 4px);font-size:var(--mat-badge-large-size-text-size, var(--mat-sys-label-small-size));margin:var(--mat-badge-large-size-container-offset, -12px 0)}.mat-badge-large.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-large-size-container-overlap-offset, -12px)}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: _MatBadgeStyleLoader, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, template: '', changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-badge{position:relative}.mat-badge.mat-badge{overflow:visible}.mat-badge-content{position:absolute;text-align:center;display:inline-block;transition:transform 200ms ease-in-out;transform:scale(0.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;box-sizing:border-box;pointer-events:none;background-color:var(--mat-badge-background-color, var(--mat-sys-error));color:var(--mat-badge-text-color, var(--mat-sys-on-error));font-family:var(--mat-badge-text-font, var(--mat-sys-label-small-font));font-weight:var(--mat-badge-text-weight, var(--mat-sys-label-small-weight));border-radius:var(--mat-badge-container-shape, var(--mat-sys-corner-full))}.mat-badge-above .mat-badge-content{bottom:100%}.mat-badge-below .mat-badge-content{top:100%}.mat-badge-before .mat-badge-content{right:100%}[dir=rtl] .mat-badge-before .mat-badge-content{right:auto;left:100%}.mat-badge-after .mat-badge-content{left:100%}[dir=rtl] .mat-badge-after .mat-badge-content{left:auto;right:100%}@media(forced-colors: active){.mat-badge-content{outline:solid 1px;border-radius:0}}.mat-badge-disabled .mat-badge-content{background-color:var(--mat-badge-disabled-state-background-color, color-mix(in srgb, var(--mat-sys-error) 38%, transparent));color:var(--mat-badge-disabled-state-text-color, var(--mat-sys-on-error))}.mat-badge-hidden .mat-badge-content{display:none}.ng-animate-disabled .mat-badge-content,.mat-badge-content._mat-animation-noopable{transition:none}.mat-badge-content.mat-badge-active{transform:none}.mat-badge-small .mat-badge-content{width:var(--mat-badge-legacy-small-size-container-size, unset);height:var(--mat-badge-legacy-small-size-container-size, unset);min-width:var(--mat-badge-small-size-container-size, 6px);min-height:var(--mat-badge-small-size-container-size, 6px);line-height:var(--mat-badge-small-size-line-height, 6px);padding:var(--mat-badge-small-size-container-padding, 0);font-size:var(--mat-badge-small-size-text-size, 0);margin:var(--mat-badge-small-size-container-offset, -6px 0)}.mat-badge-small.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-small-size-container-overlap-offset, -6px)}.mat-badge-medium .mat-badge-content{width:var(--mat-badge-legacy-container-size, unset);height:var(--mat-badge-legacy-container-size, unset);min-width:var(--mat-badge-container-size, 16px);min-height:var(--mat-badge-container-size, 16px);line-height:var(--mat-badge-line-height, 16px);padding:var(--mat-badge-container-padding, 0 4px);font-size:var(--mat-badge-text-size, var(--mat-sys-label-small-size));margin:var(--mat-badge-container-offset, -12px 0)}.mat-badge-medium.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-container-overlap-offset, -12px)}.mat-badge-large .mat-badge-content{width:var(--mat-badge-legacy-large-size-container-size, unset);height:var(--mat-badge-legacy-large-size-container-size, unset);min-width:var(--mat-badge-large-size-container-size, 16px);min-height:var(--mat-badge-large-size-container-size, 16px);line-height:var(--mat-badge-large-size-line-height, 16px);padding:var(--mat-badge-large-size-container-padding, 0 4px);font-size:var(--mat-badge-large-size-text-size, var(--mat-sys-label-small-size));margin:var(--mat-badge-large-size-container-offset, -12px 0)}.mat-badge-large.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-large-size-container-overlap-offset, -12px)}\"] }]\n        }] });\n/** Directive to display a text badge. */\nclass MatBadge {\n    _ngZone = inject(NgZone);\n    _elementRef = inject(ElementRef);\n    _ariaDescriber = inject(AriaDescriber);\n    _renderer = inject(Renderer2);\n    _animationMode = inject(ANIMATION_MODULE_TYPE, { optional: true });\n    _idGenerator = inject(_IdGenerator);\n    /**\n     * Theme color of the badge. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/badge/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    get color() {\n        return this._color;\n    }\n    set color(value) {\n        this._setColor(value);\n        this._color = value;\n    }\n    _color = 'primary';\n    /** Whether the badge should overlap its contents or not */\n    overlap = true;\n    /** Whether the badge is disabled. */\n    disabled;\n    /**\n     * Position the badge should reside.\n     * Accepts any combination of 'above'|'below' and 'before'|'after'\n     */\n    position = 'above after';\n    /** The content for the badge */\n    get content() {\n        return this._content;\n    }\n    set content(newContent) {\n        this._updateRenderedContent(newContent);\n    }\n    _content;\n    /** Message used to describe the decorated element via aria-describedby */\n    get description() {\n        return this._description;\n    }\n    set description(newDescription) {\n        this._updateDescription(newDescription);\n    }\n    _description;\n    /** Size of the badge. Can be 'small', 'medium', or 'large'. */\n    size = 'medium';\n    /** Whether the badge is hidden. */\n    hidden;\n    /** Visible badge element. */\n    _badgeElement;\n    /** Inline badge description. Used when the badge is applied to non-interactive host elements. */\n    _inlineBadgeDescription;\n    /** Whether the OnInit lifecycle hook has run yet */\n    _isInitialized = false;\n    /** InteractivityChecker to determine if the badge host is focusable. */\n    _interactivityChecker = inject(InteractivityChecker);\n    _document = inject(DOCUMENT);\n    constructor() {\n        const styleLoader = inject(_CdkPrivateStyleLoader);\n        styleLoader.load(_MatBadgeStyleLoader);\n        styleLoader.load(_VisuallyHiddenLoader);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const nativeElement = this._elementRef.nativeElement;\n            if (nativeElement.nodeType !== nativeElement.ELEMENT_NODE) {\n                throw Error('matBadge must be attached to an element node.');\n            }\n            // Heads-up for developers to avoid putting matBadge on <mat-icon>\n            // as it is aria-hidden by default docs mention this at:\n            // https://material.angular.io/components/badge/overview#accessibility\n            if (nativeElement.tagName.toLowerCase() === 'mat-icon' &&\n                nativeElement.getAttribute('aria-hidden') === 'true') {\n                console.warn(`Detected a matBadge on an \"aria-hidden\" \"<mat-icon>\". ` +\n                    `Consider setting aria-hidden=\"false\" in order to surface the information assistive technology.` +\n                    `\\n${nativeElement.outerHTML}`);\n            }\n        }\n    }\n    /** Whether the badge is above the host or not */\n    isAbove() {\n        return this.position.indexOf('below') === -1;\n    }\n    /** Whether the badge is after the host or not */\n    isAfter() {\n        return this.position.indexOf('before') === -1;\n    }\n    /**\n     * Gets the element into which the badge's content is being rendered. Undefined if the element\n     * hasn't been created (e.g. if the badge doesn't have content).\n     */\n    getBadgeElement() {\n        return this._badgeElement;\n    }\n    ngOnInit() {\n        // We may have server-side rendered badge that we need to clear.\n        // We need to do this in ngOnInit because the full content of the component\n        // on which the badge is attached won't necessarily be in the DOM until this point.\n        this._clearExistingBadges();\n        if (this.content && !this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n            this._updateRenderedContent(this.content);\n        }\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        // ViewEngine only: when creating a badge through the Renderer, Angular remembers its index.\n        // We have to destroy it ourselves, otherwise it'll be retained in memory.\n        if (this._renderer.destroyNode) {\n            this._renderer.destroyNode(this._badgeElement);\n            this._inlineBadgeDescription?.remove();\n        }\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.description);\n    }\n    /** Gets whether the badge's host element is interactive. */\n    _isHostInteractive() {\n        // Ignore visibility since it requires an expensive style caluclation.\n        return this._interactivityChecker.isFocusable(this._elementRef.nativeElement, {\n            ignoreVisibility: true,\n        });\n    }\n    /** Creates the badge element */\n    _createBadgeElement() {\n        const badgeElement = this._renderer.createElement('span');\n        const activeClass = 'mat-badge-active';\n        badgeElement.setAttribute('id', this._idGenerator.getId('mat-badge-content-'));\n        // The badge is aria-hidden because we don't want it to appear in the page's navigation\n        // flow. Instead, we use the badge to describe the decorated element with aria-describedby.\n        badgeElement.setAttribute('aria-hidden', 'true');\n        badgeElement.classList.add(BADGE_CONTENT_CLASS);\n        if (this._animationMode === 'NoopAnimations') {\n            badgeElement.classList.add('_mat-animation-noopable');\n        }\n        this._elementRef.nativeElement.appendChild(badgeElement);\n        // animate in after insertion\n        if (typeof requestAnimationFrame === 'function' && this._animationMode !== 'NoopAnimations') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    badgeElement.classList.add(activeClass);\n                });\n            });\n        }\n        else {\n            badgeElement.classList.add(activeClass);\n        }\n        return badgeElement;\n    }\n    /** Update the text content of the badge element in the DOM, creating the element if necessary. */\n    _updateRenderedContent(newContent) {\n        const newContentNormalized = `${newContent ?? ''}`.trim();\n        // Don't create the badge element if the directive isn't initialized because we want to\n        // append the badge element to the *end* of the host element's content for backwards\n        // compatibility.\n        if (this._isInitialized && newContentNormalized && !this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n        }\n        if (this._badgeElement) {\n            this._badgeElement.textContent = newContentNormalized;\n        }\n        this._content = newContentNormalized;\n    }\n    /** Updates the host element's aria description via AriaDescriber. */\n    _updateDescription(newDescription) {\n        // Always start by removing the aria-describedby; we will add a new one if necessary.\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.description);\n        // NOTE: We only check whether the host is interactive here, which happens during\n        // when then badge content changes. It is possible that the host changes\n        // interactivity status separate from one of these. However, watching the interactivity\n        // status of the host would require a `MutationObserver`, which is likely more code + overhead\n        // than it's worth; from usages inside Google, we see that the vats majority of badges either\n        // never change interactivity, or also set `matBadgeHidden` based on the same condition.\n        if (!newDescription || this._isHostInteractive()) {\n            this._removeInlineDescription();\n        }\n        this._description = newDescription;\n        // We don't add `aria-describedby` for non-interactive hosts elements because we\n        // instead insert the description inline.\n        if (this._isHostInteractive()) {\n            this._ariaDescriber.describe(this._elementRef.nativeElement, newDescription);\n        }\n        else {\n            this._updateInlineDescription();\n        }\n    }\n    _updateInlineDescription() {\n        // Create the inline description element if it doesn't exist\n        if (!this._inlineBadgeDescription) {\n            this._inlineBadgeDescription = this._document.createElement('span');\n            this._inlineBadgeDescription.classList.add('cdk-visually-hidden');\n        }\n        this._inlineBadgeDescription.textContent = this.description;\n        this._badgeElement?.appendChild(this._inlineBadgeDescription);\n    }\n    _removeInlineDescription() {\n        this._inlineBadgeDescription?.remove();\n        this._inlineBadgeDescription = undefined;\n    }\n    /** Adds css theme class given the color to the component host */\n    _setColor(colorPalette) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-badge-${this._color}`);\n        if (colorPalette) {\n            classList.add(`mat-badge-${colorPalette}`);\n        }\n    }\n    /** Clears any existing badges that might be left over from server-side rendering. */\n    _clearExistingBadges() {\n        // Only check direct children of this host element in order to avoid deleting\n        // any badges that might exist in descendant elements.\n        const badges = this._elementRef.nativeElement.querySelectorAll(`:scope > .${BADGE_CONTENT_CLASS}`);\n        for (const badgeElement of Array.from(badges)) {\n            if (badgeElement !== this._badgeElement) {\n                badgeElement.remove();\n            }\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatBadge, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"19.2.0\", type: MatBadge, isStandalone: true, selector: \"[matBadge]\", inputs: { color: [\"matBadgeColor\", \"color\"], overlap: [\"matBadgeOverlap\", \"overlap\", booleanAttribute], disabled: [\"matBadgeDisabled\", \"disabled\", booleanAttribute], position: [\"matBadgePosition\", \"position\"], content: [\"matBadge\", \"content\"], description: [\"matBadgeDescription\", \"description\"], size: [\"matBadgeSize\", \"size\"], hidden: [\"matBadgeHidden\", \"hidden\", booleanAttribute] }, host: { properties: { \"class.mat-badge-overlap\": \"overlap\", \"class.mat-badge-above\": \"isAbove()\", \"class.mat-badge-below\": \"!isAbove()\", \"class.mat-badge-before\": \"!isAfter()\", \"class.mat-badge-after\": \"isAfter()\", \"class.mat-badge-small\": \"size === \\\"small\\\"\", \"class.mat-badge-medium\": \"size === \\\"medium\\\"\", \"class.mat-badge-large\": \"size === \\\"large\\\"\", \"class.mat-badge-hidden\": \"hidden || !content\", \"class.mat-badge-disabled\": \"disabled\" }, classAttribute: \"mat-badge\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatBadge, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matBadge]',\n                    host: {\n                        'class': 'mat-badge',\n                        '[class.mat-badge-overlap]': 'overlap',\n                        '[class.mat-badge-above]': 'isAbove()',\n                        '[class.mat-badge-below]': '!isAbove()',\n                        '[class.mat-badge-before]': '!isAfter()',\n                        '[class.mat-badge-after]': 'isAfter()',\n                        '[class.mat-badge-small]': 'size === \"small\"',\n                        '[class.mat-badge-medium]': 'size === \"medium\"',\n                        '[class.mat-badge-large]': 'size === \"large\"',\n                        '[class.mat-badge-hidden]': 'hidden || !content',\n                        '[class.mat-badge-disabled]': 'disabled',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { color: [{\n                type: Input,\n                args: ['matBadgeColor']\n            }], overlap: [{\n                type: Input,\n                args: [{ alias: 'matBadgeOverlap', transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'matBadgeDisabled', transform: booleanAttribute }]\n            }], position: [{\n                type: Input,\n                args: ['matBadgePosition']\n            }], content: [{\n                type: Input,\n                args: ['matBadge']\n            }], description: [{\n                type: Input,\n                args: ['matBadgeDescription']\n            }], size: [{\n                type: Input,\n                args: ['matBadgeSize']\n            }], hidden: [{\n                type: Input,\n                args: [{ alias: 'matBadgeHidden', transform: booleanAttribute }]\n            }] } });\n\nclass MatBadgeModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatBadgeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.2.0\", ngImport: i0, type: MatBadgeModule, imports: [A11yModule, MatCommonModule, MatBadge, _MatBadgeStyleLoader], exports: [MatBadge, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatBadgeModule, imports: [A11yModule, MatCommonModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatBadgeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    // Note: we _shouldn't_ have to import `_MatBadgeStyleLoader`,\n                    // but it seems to be necessary for tests.\n                    imports: [A11yModule, MatCommonModule, MatBadge, _MatBadgeStyleLoader],\n                    exports: [MatBadge, MatCommonModule],\n                }]\n        }] });\n\nexport { MatBadge, MatBadgeModule };\n","import { ChangeDetectorRef, Directive, ViewContainerRef, inject, input } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { computedObj } from '../../shared/signals/signal.utilities';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { FeaturesService } from '../features.service';\r\n\r\n/**\r\n * Base component for various UI components which inform that a feature is not enabled.\r\n * It's meant to show the indicator/warning, and open a dialog with more information about the feature.\r\n */\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n\r\n  /** Feature NameId to check */\r\n  featureNameId = input.required<string>();\r\n\r\n  /** When to show it - typically when it is _not_ enabled (default) */\r\n  showIf = input<boolean>(false);\r\n\r\n  #matDialog = inject(MatDialog);\r\n  #viewContainerRef = inject(ViewContainerRef);\r\n  #changeDetectorRef = inject(ChangeDetectorRef);\r\n  #featuresService = inject(FeaturesService);\r\n\r\n  constructor() { }\r\n\r\n  feature = computedObj('feature', () => this.#featuresService.getCurrent(this.featureNameId()));\r\n\r\n  show = computedObj('show', () => {\r\n    const feat = this.feature();\r\n    if (feat == null) return false;\r\n    return this.showIf() == (feat?.isEnabled ?? false);\r\n  })\r\n\r\n  openDialog() {\r\n    openFeatureDialog(this.#matDialog, this.featureNameId(), this.#viewContainerRef, this.#changeDetectorRef);\r\n  }\r\n}\r\n\r\nexport function openFeatureDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n  dialog.open(FeatureInfoDialogComponent, {\r\n    autoFocus: false,\r\n    data: featureId,\r\n    viewContainerRef: viewContainerRef,\r\n    width: '400px',\r\n  });\r\n\r\n  changeDetectorRef?.markForCheck();\r\n}\r\n"],"x_google_ignoreList":[2,6]}