{"version":3,"file":"projects_eav-ui_src_app_app-administration_sub-dialogs_edit-content-type_edit-content-type_co-2abec4.b10c7fbc58bd2767.js","mappings":"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","names":["typeNameRegExCleaned","toString","contentTypeNamePattern","substring","length","i0","ctx_r1","contentTypeNameError","EditContentTypeComponent_Conditional_7_Conditional_10_Conditional_0_Template","EditContentTypeComponent_Conditional_7_Conditional_10_Conditional_1_Template","name_r3","errors","required","pattern","scopeOption_r4","value","name","contentType","SharedDefId","_r1","saveAndClose","$event","changeContentTypeName","EditContentTypeComponent_Conditional_7_Conditional_10_Template","changeScope","EditContentTypeComponent_Conditional_7_For_24_Template","unlockScope","EditContentTypeComponent_Conditional_7_Conditional_39_Template","Name","touched","disableAnimation","Scope","lockScope","scopeOptions","dropdownInsertValue","NameId","canSave","EditContentTypeComponent","#contentTypeSvc","#scope","#typeNameId","constructor","dialog","route","snackBar","this","log","classLog","hostClass","transient","ContentTypesService","snapshot","parent","paramMap","get","modeIsEdit","signalObj","loading","formValid","signal","computed","StaticName","Description","ChangeNameId","NewNameId","#scopeOptionsHttp","getScopesSig","#scopeOptionsManual","computedObj","fromHttp","manual","concat","#convertScopeOptions","a","#loadContentTypeOnEdit","ngOnInit","#watchKeyboardShortcuts","retrieveContentType","subscribe","set","newScopes","forEach","scopeOption","some","scope","push","ngAfterViewInit","ngForm","form","statusChanges","valid","setTimeout","closeDialog","close","newName","newScope","prompt","eavConstants","scopes","default","o","open","save","result","duration","document","activeElement","HTMLElement","blur","keydownEvents","event","isCtrlEnter","preventDefault","static","__ngFactoryType__","i1","i2","i3","debug_node_JnOYh9kg","VBU","selectors","viewQuery","rf","ctx","EditContentTypeComponent_Conditional_7_Template","FormsModule","i4","MatFormFieldModule","i5","MatInputModule","i6","MatExpansionModule","i7","MatSelectModule","i8","MatOptionModule","MatButtonModule","i9","MatIconModule","i10","MatDialogActions","FieldHintComponent","ClickStopPropagationDirective","TippyDirective","SaveCloseButtonFabComponent","styles"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/constants/content-type.patterns.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/edit-content-type/edit-content-type.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/edit-content-type/edit-content-type.component.ts"],"sourcesContent":["/**\r\n * This is for the angular UI.\r\n * Note that since ca. 2023 the last \"-\" literal character must be escaped using \"\\-\"\r\n * because of changes in how browsers handle regular expressions, aka the /v flag.\r\n */\r\nconst contentTypeNameRegEx = /(^[A-Za-z][A-Za-z0-9]*$)|(^@[A-Za-z][A-Za-z0-9\\-]*$)/;\r\nconst typeNameRegExCleaned = contentTypeNameRegEx.toString();\r\nconst removeSlashAtStartAndEnd = typeNameRegExCleaned.substring(1, typeNameRegExCleaned.toString().length - 1);\r\n\r\n/**\r\n * The pattern determines what content-type names are allowed.\r\n * Basically it's A-Z and numbers after the first digit.\r\n * But there are two exceptions:\r\n *  - types describing an input-type begin with an `@` and can also contain `-` chars\r\n *  - types beginning with an `|` are very old type names for data-sources, they can contain anything!\r\n */\r\nexport const contentTypeNamePattern = removeSlashAtStartAndEnd;\r\nexport const contentTypeNameError = 'Standard letters and numbers are allowed. Must start with a letter.';\r\n\r\n// 2020-04-29 2dm - temporarily used this pattern while renaming unique named types containing '|' chars\r\n// export const contentTypeNamePattern = /(^[A-Za-z][A-Za-z0-9]+$)|(^@[A-Za-z][A-Za-z0-9-]*$)|(^\\|.*$)/;\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      {{ modeIsEdit ? 'Edit Content Type' : 'New Content Type' }}\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  @if (contentType()) {\r\n    <form #ngForm=\"ngForm\" (ngSubmit)=\"saveAndClose()\">\r\n      <div class=\"eav-dialog-content\">\r\n        <div>\r\n          <div class=\"eav-edit-input\">\r\n            <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n              <mat-label>Name</mat-label>\r\n              <input\r\n                matInput\r\n                type=\"text\"\r\n                required\r\n                [pattern]=\"contentTypeNamePattern\"\r\n                [ngModel]=\"contentType().Name\"\r\n                (ngModelChange)=\"changeContentTypeName($event)\"\r\n                name=\"Name\"\r\n                #name=\"ngModel\"\r\n              />\r\n            </mat-form-field>\r\n            @if (name.touched && name.errors) {\r\n              @if (name.errors.required) {\r\n                <app-field-hint [isError]=\"true\">This field is required</app-field-hint>\r\n              }\r\n              @if (name.errors.pattern) {\r\n                <app-field-hint [isError]=\"true\">{{ contentTypeNameError }}</app-field-hint>\r\n              }\r\n            }\r\n          </div>\r\n          <mat-accordion [@.disabled]=\"disableAnimation()\">\r\n            <mat-expansion-panel>\r\n              <mat-expansion-panel-header>\r\n                <mat-panel-title>Advanced</mat-panel-title>\r\n                <mat-panel-description></mat-panel-description>\r\n              </mat-expansion-panel-header>\r\n              <div class=\"eav-edit-input\">\r\n                <div class=\"eav-form-and-button\">\r\n                  <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n                    <mat-label>Scope</mat-label>\r\n                    <mat-select [ngModel]=\"contentType().Scope\" name=\"Scope\" (ngModelChange)=\"changeScope($event)\" [disabled]=\"lockScope()\">\r\n                      @for (scopeOption of scopeOptions(); track scopeOption) {\r\n                        <mat-option [value]=\"scopeOption.value\">\r\n                          {{ scopeOption.name }}\r\n                        </mat-option>\r\n                      }\r\n                      <mat-option [value]=\"dropdownInsertValue\">Other...</mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <button\r\n                    mat-icon-button\r\n                    type=\"button\"\r\n                    matTextSuffix\r\n                    [tippy]=\"lockScope() ? 'Unlock' : 'Lock'\"\r\n                    class=\"eav-scope-button\"\r\n                    (click)=\"unlockScope()\"\r\n                  >\r\n                    <mat-icon>\r\n                      {{ lockScope() ? 'lock' : 'lock_open' }}\r\n                    </mat-icon>\r\n                  </button>\r\n                </div>\r\n                <app-field-hint>\r\n                  The scope should almost never be changed -\r\n                  <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n                </app-field-hint>\r\n              </div>\r\n              <div class=\"eav-edit-input\">\r\n                <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n                  <mat-label>Static Name</mat-label>\r\n                  <input matInput type=\"text\" [ngModel]=\"contentType().NameId\" name=\"StaticName\" disabled />\r\n                </mat-form-field>\r\n              </div>\r\n              @if (contentType().SharedDefId) {\r\n                <div class=\"eav-edit-input\">\r\n                  <h3>Shared Content Type (Ghost)</h3>\r\n                  <p>Note: this can't be edited in the UI, for now if you really know what you're doing, do it in the DB</p>\r\n                  <p>Uses Type Definition of: {{ contentType().SharedDefId }}</p>\r\n                </div>\r\n              }\r\n            </mat-expansion-panel>\r\n          </mat-accordion>\r\n        </div>\r\n      </div>\r\n      <mat-dialog-actions align=\"end\">\r\n        <app-save-close-button-fab\r\n          [triggerOnFormSubmit]=\"true\"\r\n          [ngClass]=\"!canSave() ? 'disabled' : ''\"\r\n          [disabled]=\"!canSave()\"\r\n          (action)=\"saveAndClose()\"\r\n        />\r\n      </mat-dialog-actions>\r\n    </form>\r\n  }\r\n</div>\r\n","import { AfterViewInit, Component, computed, HostBinding, OnInit, signal, ViewChild } from '@angular/core';\r\nimport { FormsModule, NgForm } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { transient } from '../../../../../../core';\r\nimport { isCtrlEnter } from '../../../edit/dialog/main/keyboard-shortcuts';\r\nimport { FieldHintComponent } from '../../../shared/components/field-hint/field-hint.component';\r\nimport { dropdownInsertValue } from '../../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants, ScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { ClickStopPropagationDirective } from '../../../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { SaveCloseButtonFabComponent } from '../../../shared/modules/save-close-button-fab/save-close-button-fab.component';\r\nimport { computedObj, signalObj } from '../../../shared/signals/signal.utilities';\r\nimport { contentTypeNameError, contentTypeNamePattern } from '../../constants/content-type.patterns';\r\nimport { ContentTypeEdit } from '../../models/content-type.model';\r\nimport { ContentTypesService } from '../../services/content-types.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-content-type',\r\n  templateUrl: './edit-content-type.component.html',\r\n  styleUrls: ['./edit-content-type.component.scss'],\r\n  imports: [\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatExpansionModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogActions,\r\n    FieldHintComponent,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n    SaveCloseButtonFabComponent,\r\n  ]\r\n})\r\nexport class EditContentTypeComponent implements OnInit, AfterViewInit {\r\n\r\n  log = classLog({ EditContentTypeComponent });\r\n\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n  @ViewChild('ngForm', { static: false }) ngForm?: NgForm;\r\n\r\n  #contentTypeSvc = transient(ContentTypesService);\r\n\r\n  /** Parameters in case of rename; scope should always be set as we want to always create in that scope*/\r\n  #scope = this.route.snapshot.parent.paramMap.get('scope');\r\n  #typeNameId = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<EditContentTypeComponent>,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    this.log.a('constructor');\r\n    this.#loadContentTypeOnEdit();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.#watchKeyboardShortcuts();\r\n  }\r\n\r\n  #loadContentTypeOnEdit(): void {\r\n    // If we're in new mode, just keep empty values\r\n    if (!this.modeIsEdit)\r\n      return;\r\n\r\n    // Preload infos about the current content type if we're in edit mode (not new)\r\n    this.#contentTypeSvc.retrieveContentType(this.#typeNameId).subscribe(fromHttp => {\r\n      this.contentType.set({\r\n        ...fromHttp,\r\n        ChangeNameId: false,\r\n        NewNameId: fromHttp.NameId,\r\n      } satisfies ContentTypeEdit);\r\n    });\r\n  }\r\n\r\n  /** RegEx property to use in HTML */\r\n  protected contentTypeNamePattern = contentTypeNamePattern;\r\n  protected contentTypeNameError = contentTypeNameError;\r\n  protected dropdownInsertValue = dropdownInsertValue;\r\n\r\n  protected modeIsEdit = !!this.#typeNameId;\r\n\r\n  protected lockScope = signalObj<boolean>('lockScope', true);\r\n  protected disableAnimation = signalObj<boolean>('disableAnimation', true);\r\n  protected loading = signalObj<boolean>('loading', false);\r\n  protected formValid = signal(false);\r\n  protected canSave = computed(() => this.formValid() && !this.loading());\r\n  protected contentType = signalObj<ContentTypeEdit>('contentType', {\r\n    StaticName: '',\r\n    // TODO: @2pp - use NameId: '', instead of StaticName\r\n    Name: '',\r\n    Description: '',\r\n    Scope: this.#scope,\r\n    ChangeNameId: false,\r\n    NewNameId: '',\r\n  } as ContentTypeEdit);\r\n\r\n  #scopeOptionsHttp = this.#contentTypeSvc.getScopesSig();\r\n  #scopeOptionsManual = signalObj<ScopeOption[]>('scopeOptionsManual', []);\r\n  protected scopeOptions = computedObj<ScopeOption[]>('scopeOptions', () => {\r\n    const fromHttp = this.#scopeOptionsHttp();\r\n    const manual = this.#scopeOptionsManual();\r\n    return (fromHttp) ? manual.concat(this.#convertScopeOptions(fromHttp)) : manual;\r\n  });\r\n\r\n  #convertScopeOptions(scopeOptions: ScopeOption[]) {\r\n    const newScopes: ScopeOption[] = [];\r\n    scopeOptions.forEach(scopeOption => {\r\n      if (!newScopes.some(scope => scope.value === scopeOption.value))\r\n        newScopes.push(scopeOption);\r\n    });\r\n    if (!newScopes.some(scope => scope.value === this.#scope))\r\n      newScopes.push({\r\n        name: this.#scope,\r\n        value: this.#scope,\r\n      } satisfies ScopeOption);\r\n    return newScopes;\r\n  }\r\n\r\n  // workaround for angular component issue #13870\r\n  ngAfterViewInit() {\r\n    this.ngForm?.form.statusChanges.subscribe(() => {\r\n      this.formValid.set(this.ngForm?.form.valid ?? false);\r\n    });\r\n    // timeout required to avoid ExpressionChangedAfterItHasBeenCheckedError\r\n    setTimeout(() => this.disableAnimation.set(false));\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  changeContentTypeName(newName: string) {\r\n    this.contentType.set({ ...this.contentType(), Name: newName });\r\n  }\r\n\r\n  changeScope(newScope: string) {\r\n    if (newScope === dropdownInsertValue) {\r\n      newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n      if (!this.scopeOptions().some(o => o.value === newScope)) {\r\n        this.#scopeOptionsManual.set([\r\n          {\r\n            name: newScope,\r\n            value: newScope,\r\n          } satisfies ScopeOption,\r\n          ...this.scopeOptions()\r\n        ]);\r\n      }\r\n    }\r\n    this.contentType.set({ ...this.contentType(), Scope: newScope });\r\n  }\r\n\r\n  unlockScope() {\r\n    this.lockScope.set(!this.lockScope());\r\n    if (this.lockScope())\r\n      this.contentType.set({ ...this.contentType(), Scope: this.#scope });\r\n  }\r\n\r\n  saveAndClose() {\r\n    this.loading.set(true);\r\n    this.snackBar.open('Saving...');\r\n    this.#contentTypeSvc.save(this.contentType()).subscribe(result => {\r\n      this.loading.set(false);\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.closeDialog();\r\n    });\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n  }\r\n\r\n  #watchKeyboardShortcuts(): void {\r\n    this.dialog.keydownEvents().subscribe(event => {\r\n      if (isCtrlEnter(event) && this.canSave()) {\r\n        event.preventDefault();\r\n        this.saveAndClose();\r\n      }\r\n    });\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}