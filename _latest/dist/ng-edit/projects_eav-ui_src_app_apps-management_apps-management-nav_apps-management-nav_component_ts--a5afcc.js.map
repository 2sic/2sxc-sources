{"version":3,"file":"projects_eav-ui_src_app_apps-management_apps-management-nav_apps-management-nav_component_ts--a5afcc.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAmD;AACkB;AACV;AACH;AACD;AACkB;AACZ;AACd;AACG;AACF;AAC8B;AACuB;AACf;AACH;AAC3B;AACO;;;;;;;;;;;;;;ICDrDiB,4DAAA,mBAAkC;IAAAA,oDAAA,oBAAa;IAAAA,0DAAA,EAAW;IAC1DA,oDAAA,GACF;;;;IADEA,uDAAA,GACF;IADEA,gEAAA,MAAAM,aAAA,MACF;;;;;IALFN,qEAAA,GAAoF;IAClFA,wDAAA,IAAAS,gEAAA,OACC;;;;;IADDT,uDAAA,EAIC;IAJDA,2DAAA,CAAAW,OAAA,UAIC;;;;;;IAcHX,uDAAA,4BAA2D;;;;IAAxCA,wDAAA,YAAAc,UAAA,CAAmB;;;ADGtC,MAAOC,0BAA0B;EAGrC,CAAAC,qBAAsB;EAQtB,CAAAC,WAAY;EAEZC,YACUC,MAAgD,EAChDC,OAAgB,EAChBC,KAAmB;IAFnB,KAAAF,MAAM,GAANA,MAAM;IACN,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,KAAK,GAALA,KAAK;IAbf,MAAAL,qBAAsB,GAAGhC,qDAAM,CAACU,mFAAyB,CAAC;IAE1D,KAAA4B,MAAM,GAAG,IAAI,CAACF,OAAO,CAACE,MAAM;IAE5B,KAAAC,WAAW,GAAmB,IAAI,CAACF,KAAK,CAACG,UAAU,CAAC,qBAAqB,CAAC;IAC1E,KAAAC,aAAa,GAAG,CAAC,IAAI,CAACF,WAAW,CAACG,OAAO;IAEzC,KAAAC,QAAQ,GAAG5B,wEAAsB;IACjC,MAAAkB,WAAY,GAAGxB,gDAAS,CAACI,wFAAoB,CAAC;EAO9C;EAEA+B,QAAQA,CAAA;IACN,IAAI,CAACC,mBAAmB,EAAE;IAE1B;IACA,IAAI,CAAC,CAAAZ,WAAY,CAACa,gBAAgB,CAAC,MAAM,IAAI,CAACD,mBAAmB,EAAE,CAAC;IAEpE,IAAI,CAACN,WAAW,CAACQ,gBAAgB,CAAC,QAAQ,EAAEC,CAAC,KAC3C,IAAI,CAACC,OAAO,CAACC,MAAM,GAAG,CAACF,CAAC,CAACN,OAAO,EAChC,IAAI,CAACO,OAAO,CAACE,IAAI,GAAGH,CAAC,CAACN,OAAO,GAAG,MAAM,GAAG,MAAM,CAChD,CAAC;EACJ;EAEAU,WAAWA,CAAA;IACT,IAAI,CAACjB,MAAM,CAACkB,KAAK,EAAE;EACrB;EAEQR,mBAAmBA,CAAA;IACzB,IAAI,CAAC,CAAAb,qBAAsB,CAACsB,UAAU,CAAC,CAAC,CAAC,CAACC,SAAS,EAAE;EACvD;;;uCAtCWxB,0BAA0B,EAAAf,+DAAA,CAAAyC,kEAAA,GAAAzC,+DAAA,CAAA0C,6DAAA,GAAA1C,+DAAA,CAAA2C,6DAAA;IAAA;EAAA;;;YAA1B5B,0BAA0B;MAAA6B,SAAA;MAAAC,SAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;UC7BnC/C,4DAHJ,qBAA4B,aACK,kBAE+C;UAA3CA,wDAAA,mBAAAkD,8DAAA;YAAAlD,2DAAA,CAAAoD,GAAA;YAAA,MAAAC,UAAA,GAAArD,yDAAA;YAAA,OAAAA,yDAAA,CAAAqD,UAAA,CAAAnB,MAAA,IAAAmB,UAAA,CAAAnB,MAAA;UAAA,EAA0C;UAAClC,oDAAA,WAAI;UAAAA,0DAAA,EAAW;UAGzFA,4DADF,UAAK,WACG;UAACA,oDAAA,GAAyB;UAClCA,0DADkC,EAAO,EACnC;UAENA,4DAAA,wBAA4C;UAC1CA,wDAAA,IAAAwD,kDAAA,0BAAoF;UAOtFxD,0DAAA,EAAiB;UACjBA,wDAAA,IAAAyD,iDAAA,gCAAAzD,oEAAA,CAA4B;UAC9BA,0DAAA,EAAM;UACNA,uDAAA,eAAoC;UACpCA,4DAAA,iBAAqE;UAAxBA,wDAAA,mBAAA2D,6DAAA;YAAA3D,2DAAA,CAAAoD,GAAA;YAAA,OAAApD,yDAAA,CAASgD,GAAA,CAAAZ,WAAA,EAAa;UAAA,EAAC;UAClEpC,4DAAA,gBAAU;UAAAA,oDAAA,aAAK;UAEnBA,0DAFmB,EAAW,EACnB,EACG;UAEZA,4DADF,gCAAsC,yBAC0D;UAC5FA,8DAAA,KAAA6D,0CAAA,iCAAAC,UAAA,CAGC;UAGC9D,4DADF,eAAiC,SAC5B;UAAAA,oDAAA,yCAAiC;UAExCA,0DAFwC,EAAI,EACpC,EACM;UAGZA,4DADF,2BAAqB,eACY;UAC7BA,uDAAA,qBAA+B;UAGrCA,0DAFI,EAAM,EACc,EACA;;;;UApCXA,uDAAA,GAAyB;UAAzBA,gEAAA,kBAAAgD,GAAA,CAAA1B,MAAA,MAAyB;UAGlBtB,uDAAA,EAA2B;UAA3BA,wDAAA,cAAA+D,gBAAA,CAA2B;UAiBvB/D,uDAAA,GAA8C;UAACA,wDAA/C,SAAAgD,GAAA,CAAAzB,WAAA,CAAAG,OAAA,mBAA8C,WAAAsB,GAAA,CAAAvB,aAAA,CAAyB;UAC3FzB,uDAAA,GAGC;UAHDA,wDAAA,CAAAgD,GAAA,CAAArB,QAAA,CAGC;;;qBDRDrC,wEAAgB,EAAA2E,kEAAA,EAChB9E,kEAAa,EAAAgF,4DAAA,EACb3E,6DAAgB,EAAA6E,gEAAA,EAAAA,oEAAA,EAChBpF,sEAAe,EAAAuF,oEAAA,EACfnF,wEAAgB,EAAAqF,kEAAA,EAAAA,2EAAA,EAAAA,yEAAA,EAChBnF,0DAAY,EACZI,0GAAoB,EACpBC,2FAAoB;MAAAiF,MAAA;IAAA;EAAA;;;;;;;;;;;;;;;AE5BjB,MAAM9E,sBAAsB,GAAc,CAC/C;EACE+E,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE,UAAU;EAAEC,KAAK,EAAE,aAAa;EAAEC,KAAK,EAAE,CAC7E;IAAEJ,IAAI,EAAE,UAAU;IAAEC,IAAI,EAAE,cAAc;IAAEC,IAAI,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAsC,CAAE;CAEhH,EACD;EAAEH,IAAI,EAAE,MAAM;EAAEC,IAAI,EAAE,MAAM;EAAEC,IAAI,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAM,CAAE,EAC3D;EAAEH,IAAI,EAAE,WAAW;EAAEC,IAAI,EAAE,WAAW;EAAEC,IAAI,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAW,CAAE,EAC/E;EAAEH,IAAI,EAAE,uBAAuB;EAAEC,IAAI,EAAE,SAAS;EAAEC,IAAI,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAyB,CAAE,CACnG;;;;;;;;;;;;;;;;;;;;;;ACVyF;AAClC;AAClB;AACiB;;;AAEvD,MAAMW,QAAQ,GAAG;EACf9D,gBAAgB,EAAE;CACnB;AAED;;;;;AAMM,MAAOjC,oBAAqB,SAAQ8F,+DAAW;EAInDzE,YACS2E,MAAc,EACdC,KAAqB;IAC1B,KAAK,EAAE;IAFF,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,KAAK,GAALA,KAAK;IAJd,KAAAC,GAAG,GAAGL,kDAAQ,CAAC;MAAE7F;IAAoB,CAAE,EAAE+F,QAAQ,CAAC;EAKrC;EAEb,IAAII,QAAQA,CAAA;IAAK,OAAO,IAAI,CAACF,KAAK,CAACE,QAAQ;EAAE;EAE7C,IAAIC,GAAGA,CAAA;IAAK,OAAO,IAAI,CAACJ,MAAM,CAACI,GAAG;EAAE;EAEpCC,QAAQA,CAACC,GAAW;IAClB,OAAO,IAAI,CAACL,KAAK,CAACE,QAAQ,CAACI,QAAQ,CAACC,GAAG,CAACF,GAAG,CAAC;EAC9C;EAEAG,SAASA,CAAmBC,IAAS;IACnC,MAAMH,QAAQ,GAAG,IAAI,CAACN,KAAK,CAACE,QAAQ,CAACI,QAAQ;IAC7C,OAAOG,IAAI,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEN,GAAG,KAAI;MAC9BM,GAAG,CAACN,GAAG,CAAC,GAAGC,QAAQ,CAACC,GAAG,CAACF,GAAG,CAAC;MAC5B,OAAOM,GAAG;IACZ,CAAC,EAAE,EAA4B,CAAC;EAClC;EAEAC,aAAaA,CAACP,GAAW;IACvB,OAAO,IAAI,CAACL,KAAK,CAACE,QAAQ,CAACW,aAAa,CAACN,GAAG,CAACF,GAAG,CAAC;EACnD;EAEAS,cAAcA,CAAmBL,IAAS;IACxC,MAAMI,aAAa,GAAG,IAAI,CAACb,KAAK,CAACE,QAAQ,CAACW,aAAa;IACvD,OAAOJ,IAAI,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEN,GAAG,KAAI;MAC9BM,GAAG,CAACN,GAAG,CAAC,GAAGQ,aAAa,CAACN,GAAG,CAACF,GAAG,CAAC;MACjC,OAAOM,GAAG;IACZ,CAAC,EAAE,EAA4B,CAAC;EAClC;EAEAI,KAAKA,CAAA;IAAc,OAAO,IAAI,CAAChB,MAAM,CAACiB,oBAAoB,EAAE,CAACC,MAAM,EAAEF,KAAU;EAAE;EAEjF;;;EAGO/E,gBAAgBA,CAACkF,QAAoB;IAC1C,MAAMC,CAAC,GAAG,IAAI,CAAClB,GAAG,CAACmB,IAAI,CAAC,kBAAkB,CAAC;IAC3C,IAAI,CAACC,aAAa,CAACC,GAAG,CACpB,IAAI,CAACC,kBAAkB,EAAE,CAAC9E,SAAS,CAAC,MAAMyE,QAAQ,EAAE,CAAC,CACtD;IACDC,CAAC,CAACK,GAAG,EAAE;EACT;EAEA;;;EAGOC,WAAWA,CAACC,MAAc;IAC/B,MAAMC,IAAI,GAAG,IAAI,CAAC5B,MAAM,CAAC6B,aAAa,CAAC,CAACF,MAAM,CAAC,EAAE;MAAEG,UAAU,EAAE,IAAI,CAAC7B;IAAK,CAAE,CAAC;IAC5E,MAAM8B,QAAQ,GAAG,IAAI,CAAC/B,MAAM,CAACgC,YAAY,CAACJ,IAAI,CAAC;IAC/C,OAAOG,QAAQ;EACjB;EAEA;;;;EAIOE,OAAOA,CAAC7B,GAAW,EAAEc,MAAyB;IACnD,OAAO,IAAI,CAAClB,MAAM,CAACkC,QAAQ,CAAC,CAAC9B,GAAG,CAAC,EAAEc,MAAM,CAAC;EAC5C;EAEA;;;EAGOiB,WAAWA,CAACC,QAAe,EAAElB,MAA6C;IAC/E,OAAO,IAAI,CAAClB,MAAM,CAACkC,QAAQ,CAACE,QAAQ,EAAE;MAAE,GAAGlB,MAAM;MAAEY,UAAU,EAAE,IAAI,CAAC7B;IAAK,CAAE,CAAC;EAC9E;EAEAuB,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACxB,MAAM,CAACqC,MAAM,CAACC,IAAI,CAC5B7C,4CAAM,CAAC8C,KAAK,IAAIA,KAAK,YAAYhD,0DAAa,CAAC,EAC/CK,+CAAS,CAAC,CAAC,CAAC,IAAI,CAACK,KAAK,CAACE,QAAQ,CAACqC,UAAU,CAAC,EAC3C9C,yCAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAACO,KAAK,CAACE,QAAQ,CAACqC,UAAU,CAAC,EAC3C7C,8CAAQ,EAAE,EACVF,4CAAM,CAAC,CAAC,CAACgD,cAAc,EAAEC,WAAW,CAAC,KAAKD,cAAc,IAAI,CAACC,WAAW,CAAC,CAC1E;EACH;;;uCAlFW1I,oBAAoB,EAAAG,sDAAA,CAAAyC,mDAAA,GAAAzC,sDAAA,CAAAyC,2DAAA;IAAA;EAAA;;;aAApB5C,oBAAoB;MAAA4I,OAAA,EAApB5I,oBAAoB,CAAA6I;IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACfsC;AACvB;AAEV;AACgB;AACP;;AAE/C,MAAM9C,QAAQ,GAAG;EACfmD,GAAG,EAAE,KAAK;EACVC,WAAW,EAAE,KAAK;EAClBC,oBAAoB,EAAE,KAAK;EAC3BC,MAAM,EAAE;CACT;AAEM,MAAMC,gBAAgB,GAAG,eAAe;AACxC,MAAMC,gBAAgB,GAAG,mBAAmB;AAG7C,MAAOC,aAAc,SAAQR,+DAAe;EADlD3H,YAAA;;IAGE,KAAA6E,GAAG,GAAGL,kDAAQ,CAAC;MAAE2D;IAAa,CAAE,EAAEzD,QAAQ,CAAC;IAEnC,KAAA0D,YAAY,GAAG7J,gDAAS,CAACqJ,wDAAY,CAAC;;EAE9C;;;;;;EAMAS,YAAYA,CAAC/B,MAA+C;IAC1D,IAAI,CAACzB,GAAG,CAACmB,IAAI,CAAC,aAAa,CAAC;IAC5B,OAAOM,MAAM,CAACW,IAAI,CAChB7C,4CAAM,CAACkE,CAAC,IAAIA,CAAC,IAAI,IAAI,CAAC,EACtBZ,+CAAS,CAACY,CAAC,IAAI,IAAI,CAACP,oBAAoB,CAACO,CAAC,CAACC,eAAe,CAAC,CAACtB,IAAI,CAACQ,iDAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAClF;EACH;EAEQM,oBAAoBA,CAACQ,eAAuB,EAAEC,cAAyB;IAC7E,IAAI3D,GAAG,GAAG,IAAI,CAACA,GAAG,CAACmB,IAAI,CAAC,sBAAsB,CAAC;IAC/C,OAAO,IAAI,CAACoC,YAAY,CAACN,WAAW,CAAC;MACnCW,YAAY,EAAE,CAACF,eAAe,CAAC;MAC/BG,OAAO,EAAEF,cAAc;MACvBG,MAAM,EAAE,eAAe;MACvB9D,GAAG,EAAE;KACN,CAAC,CAACoC,IAAI,CACL5C,yCAAG,CAACuE,IAAI,IAAIA,IAAI,CAACC,OAAO,CAAC,CAC1B;EACH;EAEAb,MAAMA,CAACc,KAAa,EAAEC,WAAmB,EAAEC,QAAgB,EAAEC,KAAc,EAAEC,QAAiB,EAAEC,WAAoB;IAClH,IAAI,CAACtE,GAAG,CAACmB,IAAI,CAAC,QAAQ,EAAE;MAAE8C,KAAK;MAAEC,WAAW;MAAEC,QAAQ;MAAEC,KAAK;MAAEC,QAAQ;MAAEE;IAAM,CAAE,CAAC;IAClF,OAAO,IAAI,CAACC,IAAI,CAACrB,MAAM,CAAO,IAAI,CAACsB,MAAM,CAACrB,gBAAgB,GAAG,QAAQ,CAAC,EAAE;MACtE3B,MAAM,EAAE;QACNyC,WAAW;QACXQ,EAAE,EAAEP,QAAQ,CAACQ,QAAQ,EAAE;QACvBV,KAAK;QACLG,KAAK,EAAEA,KAAK,CAACO,QAAQ,EAAE;QACvB,IAAIN,QAAQ,IAAI;UAAEA,QAAQ,EAAEA,QAAQ,CAACM,QAAQ;QAAE,CAAE,CAAC;QAClD,IAAIN,QAAQ,IAAIC,WAAW,IAAI;UAAEA;QAAW,CAAE;;KAEjD,CAAC;EACJ;;;;;gJA5CWhB,aAAa,IAAAsB,iBAAA,IAAbtB,aAAa;MAAA;IAAA;EAAA;;;aAAbA,aAAa;MAAAZ,OAAA,EAAbY,aAAa,CAAAX;IAAA;EAAA;;;;;;;;;;;;;;;;;;;ACnBwB;AAGZ;AAEF;;;;AAEpC,MAAM9C,QAAQ,GAAG;EACfmD,GAAG,EAAE,KAAK;EACVE,oBAAoB,EAAE,KAAK;EAC3BD,WAAW,EAAE;CACd;AAGK,MAAOF,YAAY;EAIvB5H,YAAoBqJ,IAAgB,EAAUnJ,OAAgB;IAA1C,KAAAmJ,IAAI,GAAJA,IAAI;IAAsB,KAAAnJ,OAAO,GAAPA,OAAO;IAFrD,KAAA2E,GAAG,GAAGL,kDAAQ,CAAC;MAACoD;IAAY,CAAC,EAAElD,QAAQ,CAAC;EAE0B;EAElEiF,YAAYA,CAACC,QAAgB,EAAEtD,MAAc,EAAEqC,MAAc,EAAEH,cAAyB;IACtF,IAAI,CAAC3D,GAAG,CAACmB,IAAI,CAAC,sBAAsB,EAAE;MAAE4D,QAAQ;MAAEtD,MAAM;MAAEqC,MAAM;MAAEH;IAAc,CAAE,CAAC;IACnF;IACA,MAAMqB,SAAS,GAAG,CAAC,CAACvD,MAAM;IAC1B,MAAMwD,WAAW,GAAGxD,MAAM,EAAEyD,iBAAiB,EAAE,IAAI,EAAE;IACrD,MAAMC,QAAQ,GAAGF,WAAW,CAACG,QAAQ,CAAC,QAAQ,CAAC,IAAI,KAAK;IACxD,MAAMC,SAAS,GAAG,EAAE,IACfF,QAAQ,GAAG,EAAE,GAAG,UAAU,IAAI,CAAC9J,OAAO,CAAC4I,KAAK,EAAE,CAAC,IAC/Ce,SAAS,GAAG,IAAIvD,MAAM,EAAE,GAAG,EAAE,CAAC,GAC/B,WAAW,IAAIqC,MAAM,IAAI,EAAE,CAAC,6CAA6C;IAC7E;IACA,MAAMwB,SAAS,GAAGD,SAAS,CAACE,SAAS,CAAC,CAAC,CAAC;IACxC,OAAO,IAAI,CAACf,IAAI,CAACgB,IAAI,CAAe,kBAAkBT,QAAQ,IAAIO,SAAS,EAAE,EAC3E;MACEG,KAAK,EAAE9B;KACR,CACF;EACH;EAEAV,WAAWA,CAAC;IAAEW,YAAY;IAAEC,OAAO;IAAEC,MAAM;IAAE9D;EAAG,CAA8E;IAC5H,IAAI,CAACA,GAAG,CAACmB,IAAI,CAAC,aAAa,EAAE;MAAEnB,GAAG;MAAE4D,YAAY;MAAEC,OAAO;MAAEC;IAAM,CAAE,CAAC;IACpE,MAAMuB,SAAS,GACb,aAAa,IAAIzB,YAAY,EAAE8B,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAC7C,UAAU,IAAI,CAACrK,OAAO,CAAC4I,KAAK,EAAE,GAC9B,WAAW,IAAIJ,OAAO,EAAE6B,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GACxC,WAAW,IAAI5B,MAAM,IAAI,EAAE,CAAC,6CAA6C;IAC7E;IACA,MAAMwB,SAAS,GAAGD,SAAS,CAACE,SAAS,CAAC,CAAC,CAAC;IACxC,OAAO,IAAI,CAACf,IAAI,CAACgB,IAAI,CACnB,8CAA8CF,SAAS,EAAE,EACzD,EAAE,CACH;EACH;;;uCAtCWvC,YAAY,EAAA9I,sDAAA,CAAAyC,4DAAA,GAAAzC,sDAAA,CAAA0C,6CAAA;IAAA;EAAA;;;aAAZoG,YAAY;MAAAL,OAAA,EAAZK,YAAY,CAAAJ;IAAA;EAAA;;;;;;;;;;;;;;;;;ACbW;;AAEpC;;;;AAKM,MAAgB/C,WAAW;EADjCzE,YAAA;IAGY,KAAAiG,aAAa,GAAG,IAAIuE,8CAAY,EAAE;;EAE5CC,WAAWA,CAAA;IACT,IAAI,CAACC,OAAO,EAAE;EAChB;EAEA;EACAA,OAAOA,CAAA;IACL,IAAI,CAACzE,aAAa,CAAC0E,WAAW,EAAE;EAClC;;;uCAXoBlG,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAA8C,OAAA,EAAX9C,WAAW,CAAA+C;IAAA;EAAA","sources":["./projects/eav-ui/src/app/apps-management/apps-management-nav/apps-management-nav.component.ts","./projects/eav-ui/src/app/apps-management/apps-management-nav/apps-management-nav.component.html","./projects/eav-ui/src/app/apps-management/apps-management-nav/managment-nav-items.ts","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts","./projects/eav-ui/src/app/shared/services/entity.service.ts","./projects/eav-ui/src/app/shared/services/query.service.ts","./projects/eav-ui/src/app/shared/services/service-base.ts"],"sourcesContent":["import { MediaMatcher } from '@angular/cdk/layout';\r\nimport { Component, inject, OnInit, ViewChild } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenav, MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { BreadcrumbModule } from 'xng-breadcrumb';\r\nimport { transient } from '../../../../../core';\r\nimport { DialogConfigGlobalService } from '../../app-administration/services';\r\nimport { NavItemListComponent } from '../../shared/components/nav-item-list/nav-item-list.component';\r\nimport { ToggleDebugDirective } from '../../shared/directives/toggle-debug.directive';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AppsManagementNavItems } from './managment-nav-items';\r\n\r\n@Component({\r\n  selector: 'app-apps-management-nav',\r\n  templateUrl: './apps-management-nav.component.html',\r\n  styleUrls: ['./apps-management-nav.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    BreadcrumbModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    RouterOutlet,\r\n    NavItemListComponent,\r\n    ToggleDebugDirective,\r\n  ],\r\n})\r\nexport class AppsManagementNavComponent implements OnInit {\r\n  @ViewChild('sidenav') sidenav!: MatSidenav;\r\n\r\n  #globalDialogConfigSvc = inject(DialogConfigGlobalService);\r\n\r\n  zoneId = this.context.zoneId;\r\n\r\n  smallScreen: MediaQueryList = this.media.matchMedia('(max-width: 1000px)');\r\n  sideNavOpened = !this.smallScreen.matches;\r\n\r\n  navItems = AppsManagementNavItems;\r\n  #dialogClose = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<AppsManagementNavComponent>,\r\n    private context: Context,\r\n    private media: MediaMatcher,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchDialogSettings();\r\n\r\n    // Trigger settings load? not sure why, because it's cached in the service... on dialog close?\r\n    this.#dialogClose.doOnDialogClosed(() => this.fetchDialogSettings());\r\n\r\n    this.smallScreen.addEventListener('change', c => (\r\n      this.sidenav.opened = !c.matches,\r\n      this.sidenav.mode = c.matches ? 'over' : 'side'\r\n    ));\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  private fetchDialogSettings() {\r\n    this.#globalDialogConfigSvc.getShared$(0).subscribe();\r\n  }\r\n\r\n}\r\n","\r\n<mat-toolbar appToggleDebug>\r\n  <div class=\"toolbar-container\">\r\n    <!-- Mat Icon Menu -->\r\n    <mat-icon class=\"menu-container\" (click)=\"sidenav.opened = !sidenav.opened\">menu</mat-icon>\r\n    <!-- App Name -->\r\n    <div>\r\n      <span> Manage Zone {{ zoneId }} </span>\r\n    </div>\r\n    <!-- Breadcrum in the Toolbar after show Img and Aoo Name -->\r\n    <xng-breadcrumb [separator]=\"emptyTemplate\">\r\n      <ng-container *xngBreadcrumbItem=\"let breadcrumb; let info = info; let last = last\">\r\n        @if (last)\r\n        {\r\n          <mat-icon class=\"breadcrumb-icon\">chevron_right</mat-icon>\r\n          {{ breadcrumb }}\r\n        }\r\n      </ng-container>\r\n    </xng-breadcrumb>\r\n    <ng-template #emptyTemplate></ng-template>\r\n  </div>\r\n  <span class=\"toolbar-spacer\"></span>\r\n  <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n    <mat-icon>close</mat-icon>\r\n  </button>\r\n</mat-toolbar>\r\n<mat-sidenav-container appToggleDebug>\r\n  <mat-sidenav #sidenav [mode]=\"smallScreen.matches ? 'over' : 'side'\" [opened]=\"sideNavOpened\">\r\n    @for (navItem of navItems; track navItem.path)\r\n    {\r\n      <app-nav-item-list [navItem]=\"navItem\"></app-nav-item-list>\r\n    }\r\n\r\n    <div class=\"sideNav-bottom-info\">\r\n      <p>use Burger icon to show/hide menu</p>\r\n    </div>\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content>\r\n    <div class=\"container-content\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { NavItem } from \"../../shared/models/nav-item.model\";\r\n\r\nexport const AppsManagementNavItems: NavItem[] = [\r\n  {\r\n    name: 'System', path: 'system', icon: 'settings', tippy: 'System Info', child: [\r\n      { name: 'Register', path: 'registration', icon: 'how_to_reg', tippy: 'Register this System on 2sxc Patrons' },\r\n    ]\r\n  },\r\n  { name: 'Apps', path: 'list', icon: 'star', tippy: 'Apps' },\r\n  { name: 'Languages', path: 'languages', icon: 'translate', tippy: 'Languages' },\r\n  { name: 'Extensions / Features', path: 'license', icon: 'tune', tippy: 'Extensions and Features' },\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { classLog } from '../logging';\r\nimport { ServiceBase } from '../services/service-base';\r\n\r\nconst logSpecs = {\r\n  doOnDialogClosed: true,\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase {\r\n\r\n  log = classLog({ DialogRoutingService }, logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) { super(); }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  getParam(key: string): string {\r\n    return this.route.snapshot.paramMap.get(key);\r\n  }\r\n\r\n  getParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const paramMap = this.route.snapshot.paramMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = paramMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  getQueryParam(key: string): string {\r\n    return this.route.snapshot.queryParamMap.get(key);\r\n  }\r\n\r\n  getQueryParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const queryParamMap = this.route.snapshot.queryParamMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = queryParamMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe(() => callback())\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Get the URL for a sub-route of the current route.\r\n   */\r\n  public urlSubRoute(params: string) {\r\n    const tree = this.router.createUrlTree([params], { relativeTo: this.route });\r\n    const routeUrl = this.router.serializeUrl(tree);\r\n    return routeUrl;\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { filter, map, Observable, shareReplay, switchMap } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { EntityLightIdentifier } from '../../../../../edit-types/src/EntityLight';\r\nimport { classLog } from '../logging';\r\nimport { HttpServiceBase } from './http-service-base';\r\nimport { QueryService } from './query.service';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  getEntities: false,\r\n  getAvailableEntities: false,\r\n  delete: false,\r\n};\r\n\r\nexport const webApiEntityRoot = 'admin/entity/';\r\nexport const webApiEntityList = 'admin/entity/list';\r\n\r\n@Injectable()\r\nexport class EntityService extends HttpServiceBase {\r\n\r\n  log = classLog({ EntityService }, logSpecs);\r\n\r\n  private queryService = transient(QueryService);\r\n\r\n  /**\r\n   * Get entities based on the content type name.\r\n   * As of 2024-04-29 only used in REST API.\r\n   * @param params\r\n   * @returns\r\n   */\r\n  getEntities$(params: Observable<{ contentTypeName: string }>): Observable<EntityLightIdentifier[]> {\r\n    this.log.fnIf('getEntities');\r\n    return params.pipe(\r\n      filter(p => p != null),\r\n      switchMap(p => this.getAvailableEntities(p.contentTypeName).pipe(shareReplay(1))),\r\n    );\r\n  }\r\n\r\n  private getAvailableEntities(contentTypeName: string, entitiesFilter?: string[]): Observable<EntityLightIdentifier[]> {\r\n    var log = this.log.fnIf('getAvailableEntities');\r\n    return this.queryService.getEntities({\r\n      contentTypes: [contentTypeName],\r\n      itemIds: entitiesFilter,\r\n      fields: 'Id,Guid,Title',\r\n      log: 'getAvailableEntities'\r\n    }).pipe(\r\n      map(data => data.Default)\r\n    );\r\n  }\r\n\r\n  delete(appId: number, contentType: string, entityId: number, force: boolean, parentId?: number, parentField?: string): Observable<null> {\r\n    this.log.fnIf('delete', { appId, contentType, entityId, force, parentId, parent });\r\n    return this.http.delete<null>(this.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: {\r\n        contentType,\r\n        id: entityId.toString(),\r\n        appId,\r\n        force: force.toString(),\r\n        ...(parentId && { parentId: parentId.toString() }),\r\n        ...(parentId && parentField && { parentField }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { classLog } from '../logging';\r\nimport { QueryStreams } from '../models/query-stream.model';\r\nimport { Context } from './context';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  getAvailableEntities: false,\r\n  getEntities: false,\r\n};\r\n\r\n@Injectable()\r\nexport class QueryService {\r\n\r\n  log = classLog({QueryService}, logSpecs);\r\n\r\n  constructor(private http: HttpClient, private context: Context) { }\r\n\r\n  getFromQuery(queryUrl: string, params: string, fields: string, entitiesFilter?: string[]): Observable<QueryStreams> {\r\n    this.log.fnIf('getAvailableEntities', { queryUrl, params, fields, entitiesFilter });\r\n    // Check if any params we should auto-add are already set (like in a query which has these params set in the configuration)\r\n    const hasParams = !!params;\r\n    const paramsLower = params?.toLocaleLowerCase() ?? '';\r\n    const hasAppId = paramsLower.includes('appid=') ?? false;\r\n    const allParams = ''\r\n      + (hasAppId ? '' : `&appId=${this.context.appId}`)\r\n      + (hasParams ? `&${params}` : '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(`app/auto/query/${queryUrl}?${urlParams}`,\r\n      {\r\n        Guids: entitiesFilter,\r\n      },\r\n    );\r\n  }\r\n\r\n  getEntities({ contentTypes, itemIds, fields, log }: { contentTypes: string[]; itemIds: string[]; fields: string; log: string }): Observable<QueryStreams> {\r\n    this.log.fnIf(`getEntities`, { log, contentTypes, itemIds, fields });\r\n    const allParams =\r\n      '&typeNames=' + (contentTypes?.join(',') ?? '')\r\n      + `&appId=${this.context.appId}`\r\n      + '&itemIds=' + (itemIds?.join(',') ?? '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(\r\n      `app/auto/query/System.EntityPicker/Default?${urlParams}`,\r\n      {}\r\n    );\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n"],"names":["MediaMatcher","inject","MatButtonModule","MatDialogRef","MatIconModule","MatSidenav","MatSidenavModule","MatToolbarModule","RouterOutlet","BreadcrumbModule","transient","DialogConfigGlobalService","NavItemListComponent","ToggleDebugDirective","DialogRoutingService","Context","AppsManagementNavItems","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","breadcrumb_r3","ɵɵelementContainerStart","ɵɵtemplate","AppsManagementNavComponent_ng_container_8_Conditional_1_Template","ɵɵconditional","last_r4","ɵɵelement","ɵɵproperty","navItem_r5","AppsManagementNavComponent","globalDialogConfigSvc","dialogClose","constructor","dialog","context","media","zoneId","smallScreen","matchMedia","sideNavOpened","matches","navItems","ngOnInit","fetchDialogSettings","doOnDialogClosed","addEventListener","c","sidenav","opened","mode","closeDialog","close","getShared$","subscribe","ɵɵdirectiveInject","i1","i2","i3","selectors","viewQuery","AppsManagementNavComponent_Query","rf","ctx","ɵɵlistener","AppsManagementNavComponent_Template_mat_icon_click_2_listener","ɵɵrestoreView","_r1","sidenav_r2","ɵɵreference","ɵɵresetView","AppsManagementNavComponent_ng_container_8_Template","AppsManagementNavComponent_ng_template_9_Template","ɵɵtemplateRefExtractor","AppsManagementNavComponent_Template_button_click_12_listener","ɵɵrepeaterCreate","AppsManagementNavComponent_For_19_Template","_forTrack0","emptyTemplate_r6","ɵɵrepeater","i4","MatToolbar","i5","MatIcon","i6","BreadcrumbComponent","BreadcrumbItemDirective","i7","MatIconButton","i8","MatSidenavContainer","MatSidenavContent","styles","name","path","icon","tippy","child","ActivatedRoute","NavigationEnd","Router","filter","map","pairwise","startWith","classLog","ServiceBase","logSpecs","router","route","log","snapshot","url","getParam","key","paramMap","get","getParams","keys","reduce","acc","getQueryParam","queryParamMap","getQueryParams","state","getCurrentNavigation","extras","callback","l","fnIf","subscriptions","add","childDialogClosed$","end","urlSubRoute","params","tree","createUrlTree","relativeTo","routeUrl","serializeUrl","navPath","navigate","navRelative","commands","events","pipe","event","firstChild","hadChildBefore","hasChildNow","ɵɵinject","factory","ɵfac","shareReplay","switchMap","HttpServiceBase","QueryService","all","getEntities","getAvailableEntities","delete","webApiEntityRoot","webApiEntityList","EntityService","queryService","getEntities$","p","contentTypeName","entitiesFilter","contentTypes","itemIds","fields","data","Default","appId","contentType","entityId","force","parentId","parentField","parent","http","apiUrl","id","toString","__ngFactoryType__","HttpClient","getFromQuery","queryUrl","hasParams","paramsLower","toLocaleLowerCase","hasAppId","includes","allParams","urlParams","substring","post","Guids","join","Subscription","ngOnDestroy","destroy","unsubscribe"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}