{"version":3,"file":"projects_eav-ui_src_app_metadata_metadata_component_ts-projects_eav-ui_src_app_shared_fields_-53fb0d.5d773dbb30c4a0bd.js","mappings":"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","names":["webApiTypeRoot","webApiTypeScopes","ContentTypesService","HttpServiceBase","retrieveContentType","staticName","this","http","get","apiUrl","params","appId","contentTypeId","retrieveContentTypes","scope","getScopes","pipe","map","scopesData","scopes","old","Object","keys","key","name","value","getScopesV2","save","contentType","post","appid","delete","StaticName","import","files","formData","FormData","file","append","zoneId","createGhost","sourceStaticName","static","t","_angular_core__WEBPACK_IMPORTED_MODULE_2__","jDH","factory","ɵfac","ExportAppPartsService","getContentInfo","webApiAppPartsRoot","exportParts","contentTypeIds","entityIds","templateIds","url","join","window","open","ExportAppService","getAppInfo","webApiAppRoot","exportAppUrl","exportForVersionControl","includeContentGroups","resetAppGuid","withFiles","toString","withPortalFiles","ImportAppPartsService","importAppParts","resetApp","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","webApiEntityList","importQuery","from","toBase64","switchMap","fileBase64","AppId","ContentBase64","success","Success","Messages","clonePipeline","id","Id","_angular_core__WEBPACK_IMPORTED_MODULE_6__","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","export","getPolymorphism","getUsage","guid","_angular_core__WEBPACK_IMPORTED_MODULE_1__","i0","ctx_r0","dialogData","message","ConfirmDeleteDialogComponent","constructor","dialogRef","hostClass","closeDialog","confirm","close","MAT_DIALOG_DATA","i1","core","VBU","selectors","hostVars","hostBindings","rf","ctx","ConfirmDeleteDialogComponent_Conditional_4_Template","entityTitle","entityId","MatCardModule","i2","MatButtonModule","i3","SafeHtmlPipe","styles","MetadataActionsComponent","agInit","refresh","deleteMetadata","onDelete","data","standalone","features","decls","vars","consts","template","MatRippleModule","MatIconModule","MetadataContentTypeComponent","metadata","_Type","Description","TippyDirective","scopeOption_r1","MetadataSaveDialogComponent_Conditional_11_For_5_Template","ctx_r1","scopeOptions","length","dropdownInsertValue","contentType_r3","Label","MetadataSaveDialogComponent_Conditional_15_For_2_Template","contentTypes","MetadataSaveDialogComponent","guidedContentType","advancedMode","signal","contentTypesService","transient","ngOnInit","buildForm","fetchScopes","toggleGuidedContentType","toggleAdvancedMode","event","checked","formValues","form","getRawValue","UntypedFormGroup","addControl","UntypedFormControl","Validators","required","eavConstants","default","controls","valueChanges","startWith","distinctUntilChanged","subscribe","newScope","patchValue","prompt","some","option","set","fetchContentTypes","MetadataSaveDialogComponent_Conditional_11_Template","MetadataSaveDialogComponent_Conditional_15_Template","MetadataSaveDialogComponent_Conditional_16_Template","MetadataSaveDialogComponent_Conditional_24_Template","$event","_c0","touched","errors","valid","FormsModule","ReactiveFormsModule","MatFormFieldModule","i4","MatSelectModule","i5","i6","MatOptionModule","MatInputModule","i7","i8","NgClass","i9","MatSlideToggleModule","i10","FieldHintComponent","ClickStopPropagationDirective","itemFor","KeyNumber","KeyGuid","KeyString","Title","MetadataComponent_Conditional_10_Conditional_5_Template","MetadataComponent_Conditional_10_Conditional_6_Template","MetadataComponent_Conditional_10_Conditional_7_Template","MetadataComponent_Conditional_10_Conditional_8_Template","Target","TargetType","_r2","createMetadata","recommendation_r5","Icon","Enabled","_r4","$implicit","MetadataComponent_Conditional_16_For_10_Conditional_1_Template","MetadataComponent_Conditional_16_For_10_Conditional_2_Template","_r3","openChange","MetadataComponent_Conditional_16_For_10_Template","fabOpen","recommendations","MetadataComponent","#entitiesSvc","#metadataSvc","#contentItemSvc","#dialogRoutes","snackBar","dialog","viewContainerRef","changeDetectorRef","log","classLog","EntityEditService","MetadataService","ContentItemsService","DialogRoutingService","gridOptions","#buildGridOptions","undefined","metadataSet","Items","Recommendations","computed","filter","r","i","Count","#params","convert","getParams","p","targetType","parseInt","keyType","contentTypeStaticName","title","decodeURIComponent","getParam","#fetchFor","#fetchMetadata","doOnDialogClosed","recommendation","CreateEmpty","Name","create","For","calculateItemFor","error","duration","next","createMetadataForm","openFeatureDialog","MissingFeature","autoFocus","width","afterClosed","items","formUrl","convertFormToUrl","navRelative","markForCheck","x","EditPrep","constructMetadataInfo","newMetadataFromInfo","item","find","Guid","logGetMetadata","rxTap","getMetadata","take","forEach","startsWith","replace","atob","#editMetadata","editId","#deleteMetadata","confirmed","DeleteWarning","isConfirmed","defaultGridOptions","columnDefs","ColumnDefinitions","IdWithDefaultRenderer","cellRendererParams","idFieldParamsTooltipGetter","TextWide","field","onCellClicked","headerName","valueGetter","cellRenderer","ActionsPinnedRight1","MetadataComponent_Conditional_9_Template","MetadataComponent_Conditional_10_Template","MetadataComponent_Conditional_15_Template","MetadataComponent_Conditional_16_Template","RouterOutlet","SxcGridModule","MatDialogActions","EcoFabSpeedDialComponent","EcoFabSpeedDialTriggerComponent","EcoFabSpeedDialActionsComponent","MatBadgeModule","GoToPermissions","route","path","loadChildren","__webpack_require__","e","then","bind","m","permissionRoutes","getUrl","getUrlApp","app","getUrlAttribute","attribute","getUrlContentType","getUrlEntity","entity","getUrlLanguage","language","permissionsDialog","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","PermissionsComponent","Promise","all","component","DialogEntryComponent","children","EditRoutes","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","isError","isShort","toggleIsShort","_angular_core__WEBPACK_IMPORTED_MODULE_0__","inputs","ngContentSelectors","_r1","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c1","tmp_2_0","NgTemplateOutlet","a","onClick","stopPropagation","preventDefault","FsC","webApiFieldsRoot","webApiFieldsAll","webApiFieldsGetShared","ContentTypesFieldsService","typeListRetrieve","getInputTypesList","inputConfigs","config","dataType","Type","substring","indexOf","inputType","label","description","isDefault","IsDefault","isObsolete","IsObsolete","isRecommended","IsRecommended","obsoleteMessage","ObsoleteMessage","icon","getReservedNames","getFields","fields","fld","Metadata","md","merged","All","InputType","getShareableFields","getShareableFieldsFor","attributeId","addInheritedField","targetContentTypeId","sourceContentTypeStaticName","sourceFieldGuid","newName","ContentTypeId","SourceType","SourceField","share","inherit","inheritMetadataOf","reOrder","idArray","order","JSON","stringify","setTitle","rename","fieldId","IsTitle","Error","add","newField","Index","SortOrder","updateInputType","_angular_core__WEBPACK_IMPORTED_MODULE_3__","resolve","reject","reader","FileReader","readAsDataURL","onload","result","split","onerror","readAsText"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/metadata/confirm-delete-dialog/confirm-delete-dialog.component.html","./projects/eav-ui/src/app/metadata/confirm-delete-dialog/confirm-delete-dialog.component.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.html","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.ts","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.ts","./projects/eav-ui/src/app/metadata/metadata.component.html","./projects/eav-ui/src/app/metadata/metadata.component.ts","./projects/eav-ui/src/app/permissions/go-to-permissions.ts","./projects/eav-ui/src/app/permissions/permissions-dialog.config.ts","./projects/eav-ui/src/app/permissions/permissions.routing.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/constants/dropdown-insert-value.constant.ts","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/fields/content-types-fields.service.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\n// We should list all the \"full\" paths here, so it's easier to find when searching for API calls\r\nexport const webApiTypeRoot = 'admin/type/';\r\nconst webApiTypeGet = 'admin/type/get';\r\nconst webApiTypes = 'admin/type/list';\r\nconst webApiTypeScopes = 'admin/type/scopes';\r\nconst webApiTypeSave = 'admin/type/save';\r\nconst webApiTypeDelete = 'admin/type/delete';\r\nconst webApiTypeImport = 'admin/type/import';\r\nconst webApiTypeAddGhost = 'admin/type/addghost';\r\n\r\n@Injectable()\r\nexport class ContentTypesService extends HttpServiceBase {\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get<ContentType>(this.apiUrl(webApiTypeGet), {\r\n      params: { appId: this.appId, contentTypeId: staticName }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get<ContentType[]>(this.apiUrl(webApiTypes), {\r\n      params: { appId: this.appId, scope }\r\n    });\r\n  }\r\n\r\n  // TODO: remove this method after upgrade to V2\r\n  getScopes() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => {\r\n        // wip during upgrade:\r\n        const scopes = scopesData.old;\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getScopesV2() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => scopesData.scopes),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeSave), contentType, {\r\n      params: { appid: this.appId },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeDelete), {\r\n      params: { appid: this.appId, staticName: contentType.StaticName },\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeAddGhost), null, {\r\n      params: { appid: this.appId, sourceStaticName },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\n@Injectable()\r\nexport class ExportAppPartsService extends HttpServiceBase {\r\n\r\n  getContentInfo(scope: string) {\r\n    return this.http.get<ContentInfo>(this.apiUrl(webApiAppPartsRoot + 'Get'), {\r\n      params: { appid: this.appId, zoneId: this.zoneId, scope },\r\n    });\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.appId\r\n      + '&zoneId=' + this.zoneId\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { AppInfo } from '../models/app-info.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\n@Injectable()\r\nexport class ExportAppService extends HttpServiceBase {\r\n\r\n  getAppInfo() {\r\n    return this.http.get<AppInfo>(this.apiUrl(webApiAppRoot + 'Statistics'), {\r\n      params: { appid: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  /** Generate the export app path. It can be extended with additional parameters */\r\n  exportAppUrl() {\r\n    return `${this.apiUrl(`${webApiAppRoot}Export`)}?appId=${this.appId}&zoneId=${this.zoneId}`;\r\n  }\r\n\r\n  exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }) {\r\n    return this.http.get<boolean>(this.apiUrl(webApiAppRoot + 'SaveData'), {\r\n      params: {\r\n        appid: this.appId,\r\n        zoneId: this.zoneId,\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService extends HttpServiceBase {\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.appId,\r\n        zoneId: this.zoneId,\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Query } from '../models/query.model';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService extends HttpServiceBase {\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get<Query[]>(this.apiUrl(webApiEntityList), {\r\n      params: { appId: this.appId, contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiQueryImport), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get<null>(this.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService extends HttpServiceBase {\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.apiUrl(webApiViews), {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.appId, guid }\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>Delete {{ dialogData.entityTitle }} ({{ dialogData.entityId }})?</mat-card-title>\r\n    @if (dialogData.message) {\r\n      <mat-card-subtitle [innerHtml]=\"dialogData.message | safeHtml\"></mat-card-subtitle>\r\n    }\r\n  </mat-card-header>\r\n  <mat-card-actions align=\"end\">\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog(true)\">Delete</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, HostBinding, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ConfirmDeleteDialogData } from './confirm-delete-dialog.models';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\n\r\n@Component({\r\n  selector: 'app-confirm-delete-dialog',\r\n  templateUrl: './confirm-delete-dialog.component.html',\r\n  styleUrls: ['./confirm-delete-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    SafeHtmlPipe,\r\n  ],\r\n})\r\nexport class ConfirmDeleteDialogComponent {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: ConfirmDeleteDialogData,\r\n    private dialogRef: MatDialogRef<ConfirmDeleteDialogComponent>,\r\n  ) { }\r\n\r\n  closeDialog(confirm?: boolean) {\r\n    this.dialogRef.close(confirm);\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MetadataItem } from '../models/metadata.model';\r\nimport { MetadataActionsParams } from './metadata-actions.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRippleModule } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-metadata-actions',\r\n  templateUrl: './metadata-actions.component.html',\r\n  styleUrls: ['./metadata-actions.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n  ],\r\n})\r\nexport class MetadataActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & MetadataActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & MetadataActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deleteMetadata(): void {\r\n    const metadata: MetadataItem = this.params.data;\r\n    this.params.onDelete(metadata);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deleteMetadata()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MetadataItem } from '../models/metadata.model';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-metadata-content-type',\r\n  templateUrl: './metadata-content-type.component.html',\r\n  styleUrls: ['./metadata-content-type.component.scss'],\r\n  standalone: true,\r\n  imports: [TippyDirective,],\r\n})\r\nexport class MetadataContentTypeComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n  metadata: MetadataItem;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.metadata = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"container\" [tippy]=\"metadata._Type.Description\" [tippyDisabled]=\"!metadata._Type.Description\">\r\n  {{ value }}\r\n</div>\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>Create Metadata</mat-card-title>\r\n    <mat-card-subtitle>\r\n      This is a special operation to add an item which is metadata for another item,\r\n      see <a href=\"https://go.2sxc.org/metadata\" target=\"_blank\">docs</a>.\r\n    </mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form [formGroup]=\"form\">\r\n      <!-- Scope -->\r\n      @if (advancedMode && guidedContentType) {\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Scope</mat-label>\r\n        <mat-select formControlName=\"scope\" [placeholder]=\"!scopeOptions().length ? 'No items found' : ''\">\r\n          @for (scopeOption of scopeOptions(); track scopeOption) {\r\n          <mat-option [value]=\"scopeOption.value\">\r\n            {{ scopeOption.name }}\r\n          </mat-option>\r\n          }\r\n          <mat-option [value]=\"dropdownInsertValue\">Other...</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <app-field-hint>\r\n        The scope should almost never be changed -\r\n        <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n      </app-field-hint>\r\n      }\r\n      <!-- Content Type of metadata item -->\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Content Type</mat-label>\r\n        @if (guidedContentType) {\r\n        <mat-select formControlName=\"contentType\" required\r\n          [placeholder]=\"!contentTypes().length ? 'No items found' : ''\">\r\n          @for (contentType of contentTypes(); track contentType) {\r\n          <mat-option [value]=\"contentType.StaticName\">\r\n            {{ contentType.Label }}\r\n          </mat-option>\r\n          }\r\n        </mat-select>\r\n        }\r\n        @if (!guidedContentType) {\r\n        <input matInput type=\"text\" formControlName=\"contentType\" required>\r\n        }\r\n        <div matTextSuffix>\r\n          <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': guidedContentType }\" tippy=\"Pick existing value\"\r\n            (click)=\"toggleGuidedContentType(true)\">\r\n            <mat-icon>search</mat-icon>\r\n          </button>\r\n          <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': !guidedContentType }\" tippy=\"Manual entry\"\r\n            (click)=\"toggleGuidedContentType(false)\">\r\n            <mat-icon>text_fields</mat-icon>\r\n          </button>\r\n        </div>\r\n      </mat-form-field>\r\n      @if (form.controls.contentType.touched && form.controls.contentType.errors?.required) {\r\n      <app-field-hint [isError]=\"true\">\r\n        This field is required\r\n      </app-field-hint>\r\n      }\r\n    </form>\r\n  </mat-card-content>\r\n  <mat-card-actions class=\"eav-card-actions\">\r\n    <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n      {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n    </mat-slide-toggle>\r\n    <div>\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button color=\"accent\" class=\"eav-card-action-button\" [disabled]=\"!form.valid\"\r\n        (click)=\"confirm()\">\r\n        Confirm\r\n      </button>\r\n    </div>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, HostBinding, OnInit, signal } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { distinctUntilChanged, startWith } from 'rxjs';\r\nimport { ContentType } from '../../app-administration/models';\r\nimport { ContentTypesService } from '../../app-administration/services';\r\nimport { dropdownInsertValue } from '../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants, ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { MetadataSaveFormValues } from './metadata-save-dialog.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { transient } from '../../core';\r\n\r\n@Component({\r\n  selector: 'app-metadata-save-dialog',\r\n  templateUrl: './metadata-save-dialog.component.html',\r\n  styleUrls: ['./metadata-save-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    NgClass,\r\n    MatIconModule,\r\n    MatSlideToggleModule,\r\n    FieldHintComponent,\r\n    ClickStopPropagationDirective,\r\n  ]\r\n})\r\nexport class MetadataSaveDialogComponent implements OnInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  dropdownInsertValue = dropdownInsertValue;\r\n  guidedContentType = true;\r\n  advancedMode = false;\r\n\r\n  contentTypes = signal<ContentType[]>([]);\r\n  scopeOptions = signal<ScopeOption[]>([]);\r\n\r\n  private contentTypesService = transient(ContentTypesService);\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<MetadataSaveDialogComponent>,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n    this.fetchScopes();\r\n  }\r\n\r\n  closeDialog(contentType?: string): void {\r\n    this.dialogRef.close(contentType);\r\n  }\r\n\r\n  toggleGuidedContentType(guidedContentType: boolean): void {\r\n    this.guidedContentType = guidedContentType;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: MetadataSaveFormValues = this.form.getRawValue();\r\n    this.closeDialog(formValues.contentType);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({});\r\n    this.form.addControl('contentType', new UntypedFormControl(null, [Validators.required]));\r\n    this.form.addControl('scope', new UntypedFormControl(eavConstants.scopes.default.value));\r\n\r\n    this.form.controls.scope.valueChanges.pipe(\r\n      startWith(this.form.controls.scope.value),\r\n      distinctUntilChanged(),\r\n    ).subscribe((newScope: string) => {\r\n      // reset content types when scope changes\r\n      if (this.form.controls.contentType.value != null) {\r\n        this.form.controls.contentType.patchValue(null);\r\n      }\r\n\r\n      // add new scope on manual entry\r\n      if (newScope === dropdownInsertValue) {\r\n        newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n        if (!this.scopeOptions().some(option => option.value === newScope)) {\r\n          const newScopeOption: ScopeOption = {\r\n            name: newScope,\r\n            value: newScope,\r\n          };\r\n          this.scopeOptions.set([newScopeOption, ...this.scopeOptions()]);\r\n        }\r\n        this.form.controls.scope.patchValue(newScope);\r\n      } else {\r\n        this.fetchContentTypes(newScope);\r\n      }\r\n    });\r\n  }\r\n\r\n  private fetchContentTypes(scope: string): void {\r\n    this.contentTypesService.retrieveContentTypes(scope).subscribe(contentTypes => {\r\n      this.contentTypes.set(contentTypes);\r\n    });\r\n  }\r\n\r\n  private fetchScopes(): void {\r\n    this.contentTypesService.getScopes().subscribe(scopes => {\r\n      this.scopeOptions.set(scopes);\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-dialog nav-component-wrapper\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      {{ title || 'Metadata' }}\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content nav-component-wrapper\">\r\n    <p>\r\n      @if (!itemFor()) {\r\n      This item is not metadata for anything else.\r\n      }\r\n      @else {\r\n      This item is metadata for:\r\n      <br>Target: {{ itemFor().Target }}\r\n      <br>TargetType: {{ itemFor().TargetType }}\r\n      @if (itemFor().KeyNumber) {\r\n      <br>Key Number: {{ itemFor().KeyNumber }}\r\n      }\r\n      @if (itemFor().KeyGuid) {\r\n      <br>Key Guid: {{ itemFor().KeyGuid }}\r\n      }\r\n      @if (itemFor().KeyString) {\r\n      <br>Key String: {{ itemFor().KeyString }}\r\n      }\r\n      @if (itemFor().Title) {\r\n      <br>Title: {{ itemFor().Title }}\r\n      }\r\n      }\r\n    </p>\r\n    <router-outlet></router-outlet>\r\n    <div class=\"grid-wrapper\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"metadataSet().Items\" [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </div>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    @if (recommendations().length === 0) {\r\n    <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new metadata for this item\"\r\n      (click)=\"createMetadata()\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n    }\r\n    @if (recommendations().length > 0) {\r\n    <eco-fab-speed-dial class=\"eav-eco-fab-speed-dial\" [ngClass]=\"{ 'fab-opened': fabOpen() }\"\r\n      (openChange)=\"openChange($event)\">\r\n      <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n        <button mat-fab>\r\n          <mat-icon class=\"spin180\">{{ fabOpen() ? 'close' : 'add' }}</mat-icon>\r\n        </button>\r\n      </eco-fab-speed-dial-trigger>\r\n      <eco-fab-speed-dial-actions class=\"eav-eco-fab-speed-dial-actions\">\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Other Content Type\"\r\n          (click)=\"createMetadata()\">\r\n          <mat-icon>search</mat-icon>\r\n        </button>\r\n        @for (recommendation of recommendations(); track recommendation) {\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" [attr.label]=\"recommendation.Title\"\r\n          (click)=\"createMetadata(recommendation)\">\r\n          @if (recommendation.Icon) {\r\n          <div style=\"color: white; fill: white;\" [innerHTML]=\"recommendation.Icon | safeHtml\"\r\n            [matBadgeHidden]=\"recommendation.Enabled\" matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadge=\"💎\"\r\n            matBadgePosition=\"below after\" aria-hidden=\"false\"></div>\r\n          } @else {\r\n          <mat-icon>add</mat-icon>\r\n          }\r\n        </button>\r\n        }\r\n      </eco-fab-speed-dial-actions>\r\n    </eco-fab-speed-dial>\r\n    }\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { ChangeDetectorRef, Component, computed, OnInit, signal, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { map, Observable, take } from 'rxjs';\r\nimport { ContentItemsService } from '../content-items/services/content-items.service';\r\nimport { EntityEditService } from '../shared/services/entity-edit.service';\r\nimport { EavForInAdminUi } from '../edit/shared/models/eav';\r\nimport { MetadataService } from '../permissions';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { MetadataKeyType } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep, ItemAddIdentifier } from '../shared/models/edit-form.model';\r\nimport { ConfirmDeleteDialogComponent } from './confirm-delete-dialog/confirm-delete-dialog.component';\r\nimport { ConfirmDeleteDialogData } from './confirm-delete-dialog/confirm-delete-dialog.models';\r\nimport { MetadataActionsComponent } from './metadata-actions/metadata-actions.component';\r\nimport { MetadataActionsParams } from './metadata-actions/metadata-actions.models';\r\nimport { MetadataContentTypeComponent } from './metadata-content-type/metadata-content-type.component';\r\nimport { MetadataSaveDialogComponent } from './metadata-save-dialog/metadata-save-dialog.component';\r\nimport { MetadataDto, MetadataItem, MetadataRecommendation } from './models/metadata.model';\r\nimport { openFeatureDialog } from '../features/shared/base-feature.component';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { NgClass } from '@angular/common';\r\nimport { EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent, EcoFabSpeedDialActionsComponent } from '@ecodev/fab-speed-dial';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { SafeHtmlPipe } from '../shared/pipes/safe-html.pipe';\r\nimport { convert, transient } from '../core';\r\nimport { DialogRoutingService } from '../shared/routing/dialog-routing.service';\r\nimport { classLog } from '../shared/logging';\r\n\r\n@Component({\r\n  selector: 'app-metadata',\r\n  templateUrl: './metadata.component.html',\r\n  styleUrls: ['./metadata.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    SxcGridModule,\r\n    MatDialogActions,\r\n    EcoFabSpeedDialComponent,\r\n    NgClass,\r\n    EcoFabSpeedDialTriggerComponent,\r\n    EcoFabSpeedDialActionsComponent,\r\n    MatBadgeModule,\r\n    SafeHtmlPipe,\r\n  ],\r\n})\r\nexport class MetadataComponent implements OnInit {\r\n\r\n  log = classLog({MetadataComponent});\r\n\r\n  #entitiesSvc = transient(EntityEditService);\r\n  #metadataSvc = transient(MetadataService);\r\n  #contentItemSvc = transient(ContentItemsService);\r\n  #dialogRoutes = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<MetadataComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) { }\r\n\r\n  gridOptions = this.#buildGridOptions();\r\n\r\n  fabOpen = signal(false);\r\n  itemFor = signal<EavForInAdminUi | undefined>(undefined);\r\n\r\n  metadataSet = signal<MetadataDto>({ Items: [], Recommendations: [] } as MetadataDto);\r\n\r\n  recommendations = computed(() => {\r\n    const metadata = this.metadataSet();\r\n    return metadata.Recommendations.filter(r =>\r\n      metadata.Items.filter(i => i._Type.Id === r.Id).length < r.Count\r\n    );\r\n  });\r\n\r\n  #params = convert(this.#dialogRoutes.getParams(['targetType', 'keyType', 'key', 'title', 'contentTypeStaticName']), p => ({\r\n    targetType: parseInt(p.targetType, 10),\r\n    keyType: p.keyType as MetadataKeyType,\r\n    key: p.key,\r\n    contentTypeStaticName: p.contentTypeStaticName,\r\n  }));\r\n  protected title = decodeURIComponent(this.#dialogRoutes.getParam('title') ?? '');\r\n\r\n  ngOnInit() {\r\n    this.#fetchFor();\r\n    this.#fetchMetadata();\r\n    this.#dialogRoutes.doOnDialogClosed(() => this.#fetchMetadata());\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  openChange(open: boolean) {\r\n    this.fabOpen.set(open);\r\n  }\r\n\r\n  createMetadata(recommendation?: MetadataRecommendation) {\r\n    if (recommendation) {\r\n      // If the feature is not enabled, open the info dialog instead of metadata\r\n      if (!recommendation.Enabled) {\r\n        openFeatureDialog(this.dialog, recommendation.MissingFeature, this.viewContainerRef, this.changeDetectorRef);\r\n        return;\r\n      }\r\n      // Feature is enabled, check if it's an empty metadata\r\n      if (recommendation.CreateEmpty) {\r\n        this.snackBar.open(`Creating ${recommendation.Name}...`);\r\n        this.#entitiesSvc.create(recommendation.Id, { For: this.calculateItemFor('dummy').For }).subscribe({\r\n          error: () => {\r\n            this.snackBar.open(`Creating ${recommendation.Name} failed. Please check console for more info`, undefined, { duration: 3000 });\r\n            this.#fetchMetadata();\r\n          },\r\n          next: () => {\r\n            this.snackBar.open(`Created ${recommendation.Name}`, undefined, { duration: 3000 });\r\n            this.#fetchMetadata();\r\n          },\r\n        });\r\n      } else {\r\n        // Default case - open new-metadata dialog\r\n        this.createMetadataForm(recommendation.Id);\r\n      }\r\n      return;\r\n    }\r\n    const metadataDialogRef = this.dialog.open(MetadataSaveDialogComponent, {\r\n      autoFocus: false,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    metadataDialogRef.afterClosed().subscribe((contentType?: string) => {\r\n      if (contentType == null) return;\r\n      this.createMetadataForm(contentType);\r\n    });\r\n  }\r\n\r\n  private createMetadataForm(contentType: string) {\r\n    const form: EditForm = {\r\n      items: [this.calculateItemFor(contentType)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private calculateItemFor(contentType: string): ItemAddIdentifier {\r\n    const x = EditPrep.constructMetadataInfo(this.#params.targetType, this.#params.keyType, this.#params.key);\r\n    return EditPrep.newMetadataFromInfo(contentType, x);\r\n  }\r\n\r\n  #fetchFor() {\r\n    if (!this.#params.contentTypeStaticName) return;\r\n\r\n    this.#contentItemSvc.getAll(this.#params.contentTypeStaticName).subscribe(items => {\r\n      const item = items.find(i => i.Guid === this.#params.key);\r\n      if (item?.For)\r\n        this.itemFor.set(item.For);\r\n    });\r\n  }\r\n\r\n  #fetchMetadata() {\r\n    const logGetMetadata = this.log.rxTap('getMetadata');\r\n    this.#metadataSvc.getMetadata(this.#params.targetType, this.#params.keyType, this.#params.key)\r\n      .pipe(\r\n        logGetMetadata.pipe(),\r\n        take(1),\r\n        map(metadata => {\r\n          metadata.Recommendations.forEach(r => {\r\n            if (r.Icon?.startsWith('base64:')) {\r\n              r.Icon = r.Icon.replace('base64:', '');\r\n              r.Icon = window.atob(r.Icon);\r\n              // used for coloring black icons to white\r\n              r.Icon = r.Icon.replace('fill=\"#000000\"', 'fill=\"#ffffff\"');\r\n            }\r\n          });\r\n          return metadata;\r\n        }),\r\n        logGetMetadata.map(),\r\n      )\r\n      // 2024-05-30 2dm - this standard shorthand seems to fail\r\n      // for reasons unknown to me. I've replaced it with the longhand\r\n      // The problem occurs when the metadataSet$ is updated after the initial load.\r\n      // .subscribe(this.metadataSet$);\r\n      .subscribe(data => {\r\n        this.metadataSet.set(data);\r\n      }\r\n      );\r\n  }\r\n\r\n  #editMetadata(metadata: MetadataItem) {\r\n    const form: EditForm = {\r\n      items: [EditPrep.editId(metadata.Id)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  #deleteMetadata(metadata: MetadataItem, confirmed = false) {\r\n    if (!confirmed) {\r\n      const data: ConfirmDeleteDialogData = {\r\n        entityId: metadata.Id,\r\n        entityTitle: metadata.Title,\r\n        message: this.metadataSet().Recommendations.find(r => r.Id === metadata._Type.Id)?.DeleteWarning,\r\n      };\r\n      const confirmationDialogRef = this.dialog.open(ConfirmDeleteDialogComponent, {\r\n        autoFocus: false,\r\n        data,\r\n        viewContainerRef: this.viewContainerRef,\r\n        width: '400px',\r\n      });\r\n      confirmationDialogRef.afterClosed().subscribe((isConfirmed: boolean) => {\r\n        if (isConfirmed)\r\n          this.#deleteMetadata(metadata, true);\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.snackBar.open('Deleting...');\r\n    this.#entitiesSvc.delete(metadata._Type.Id, metadata.Id, false).subscribe({\r\n      next: () => {\r\n        this.snackBar.open('Deleted', null, { duration: 2000 });\r\n        this.#fetchMetadata();\r\n      },\r\n      error: () => {\r\n        this.snackBar.open('Delete failed. Please check console for more information', null, { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  #buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.IdWithDefaultRenderer,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<MetadataItem>()\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Title',\r\n          onCellClicked: (p: { data: MetadataItem }) => this.#editMetadata(p.data),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Content Type',\r\n          field: 'ContentType',\r\n          valueGetter: (p: { data: MetadataItem }) => `${p.data._Type.Name}${p.data._Type.Title !== p.data._Type.Name ? ` (${p.data._Type.Title})` : ''}`,\r\n          cellRenderer: MetadataContentTypeComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight1,\r\n          cellRenderer: MetadataActionsComponent,\r\n          cellRendererParams: (() => ({\r\n            onDelete: (metadata) => this.#deleteMetadata(metadata),\r\n          } satisfies MetadataActionsParams))(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\n\r\nexport class GoToPermissions {\r\n\r\n  static route: Route = {\r\n    path: 'permissions/:targetType/:keyType/:key',\r\n    loadChildren: () => import('./permissions.routing').then(m => m.permissionRoutes),\r\n    // loadChildren: () => import('./permissions.module').then(m => m.PermissionsModule),\r\n    data: { title: 'Permissions' },\r\n  };\r\n\r\n  static getUrl(targetType: number, keyType: MetadataKeyType, key: string): string {\r\n    return `permissions/${targetType}/${keyType}/${key}`;\r\n  }\r\n\r\n  static getUrlApp(appId: number): string {\r\n    return this.getUrl(eavConstants.metadata.app.targetType, eavConstants.metadata.app.keyType, appId.toString());\r\n  }\r\n\r\n  static getUrlAttribute(id: number): string {\r\n    return this.getUrl(eavConstants.metadata.attribute.targetType, eavConstants.metadata.attribute.keyType, id.toString());\r\n  }\r\n\r\n  /** For historic reasons, it's the same as Entity */\r\n  static getUrlContentType(guid: string): string {\r\n    return this.getUrlEntity(guid);\r\n  }\r\n\r\n  static getUrlEntity(guid: string): string {\r\n    return this.getUrl(eavConstants.metadata.entity.targetType, eavConstants.metadata.entity.keyType, guid);\r\n  }\r\n\r\n  static getUrlLanguage(id: string): string {\r\n    return this.getUrl(eavConstants.metadata.language.targetType, eavConstants.metadata.language.keyType, id);\r\n  }\r\n\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const permissionsDialog: DialogConfig = {\r\n  name: 'SET_PERMISSIONS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { PermissionsComponent } = await import('./permissions.component');\r\n    return PermissionsComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { permissionsDialog } from './permissions-dialog.config';\r\nimport { EditRoutes } from '../edit/edit.routing';\r\n\r\nexport const permissionRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: permissionsDialog },\r\n    children: EditRoutes\r\n  },\r\n];\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    NgClass,\r\n    NgTemplateOutlet\r\n  ]\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","export const dropdownInsertValue = 'DROPDOWN_INSERT_VALUE' as const;\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { classLog } from '../logging';\r\n\r\n@Directive({\r\n  selector: '[appClickStopPropagation]',\r\n  standalone: true,\r\n})\r\nexport class ClickStopPropagationDirective {\r\n\r\n  log = classLog({ClickStopPropagationDirective});\r\n\r\n  // Log constructor to detect that it was really attached/created\r\n  constructor() {\r\n    this.log.a('constructor');\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    this.log.a('onClick', { event });\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { ContentType } from '../../app-administration/models/content-type.model';\r\nimport { webApiTypeRoot } from '../../app-administration/services/content-types.service';\r\nimport { Field, FieldInputTypeOption } from './field.model';\r\nimport { InputTypeMetadata } from './input-type-metadata.model';\r\nimport { InputTypeStrict } from './input-type-catalog';\r\nimport { HttpServiceBase } from '../services/http-service-base';\r\n\r\nexport const webApiFieldsRoot = 'admin/field/';\r\nexport const webApiFieldsAll = 'admin/field/all';\r\nexport const webApiFieldsGetShared = 'admin/field/GetSharedFields';\r\n\r\n@Injectable()\r\nexport class ContentTypesFieldsService extends HttpServiceBase {\r\n\r\n  typeListRetrieve() {\r\n    return this.http.get<string[]>(this.apiUrl(webApiFieldsRoot + 'DataTypes'), {\r\n      params: { appid: this.appId }\r\n    });\r\n  }\r\n\r\n  getInputTypesList() {\r\n    return this.http\r\n      .get<InputTypeMetadata[]>(this.apiUrl(webApiFieldsRoot + 'InputTypes'), { params: { appid: this.appId } })\r\n      .pipe(\r\n        map(inputConfigs => {\r\n          const inputTypeOptions = inputConfigs.map(config => {\r\n            const option: FieldInputTypeOption = {\r\n              dataType: config.Type.substring(0, config.Type.indexOf('-')),\r\n              inputType: config.Type,\r\n              label: config.Label,\r\n              description: config.Description,\r\n              isDefault: config.IsDefault,\r\n              isObsolete: config.IsObsolete,\r\n              isRecommended: config.IsRecommended,\r\n              obsoleteMessage: config.ObsoleteMessage,\r\n              icon: config.IsDefault ? 'star' : config.IsRecommended ? 'star_outline' : null,\r\n            };\r\n            return option;\r\n          });\r\n          return inputTypeOptions;\r\n        }),\r\n      );\r\n  }\r\n\r\n  getReservedNames() {\r\n    return this.http.get<Record<string, string>>(this.apiUrl(webApiFieldsRoot + 'ReservedNames'));\r\n  }\r\n\r\n  /** Get all fields for some content type */\r\n  getFields(contentTypeStaticName: string) {\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsAll), {\r\n        params: { appid: this.appId, staticName: contentTypeStaticName },\r\n      })\r\n      .pipe(\r\n        map(fields => {\r\n          if (fields) {\r\n            for (const fld of fields) {\r\n              if (!fld.Metadata) continue;\r\n              const md = fld.Metadata;\r\n              const allMd = md.All;\r\n              const typeMd = md[fld.Type];\r\n              const inputMd = md[fld.InputType];\r\n              md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n            }\r\n          }\r\n          return fields;\r\n        }),\r\n      );\r\n  }\r\n\r\n  /** Get all possible sharable fields for a new sharing */\r\n  getShareableFields() {\r\n    return this.http.get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n      params: { appid: this.appId },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get sharable fields which are possible for this attribute.\r\n   * \r\n   * Reason is that eg. a bool-attribute can only receive metadata from a bool attribute, etc.\r\n   * \r\n   * @param attributeId the existing attributeId which will receive the new metadata\r\n   */\r\n  getShareableFieldsFor(attributeId: number) {\r\n    // TODO: @SDV - do the same as in getShareableFields()\r\n    // but add parameter attributeId to the webapi call\r\n    // I'll create the backend afterwards\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.appId, attributeId: attributeId.toString() },\r\n      });\r\n  }\r\n\r\n  addInheritedField(targetContentTypeId: number, sourceContentTypeStaticName: string, sourceFieldGuid: string, newName: string) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'AddInheritedField'), null, {\r\n      params: {\r\n        AppId: this.appId,\r\n        ContentTypeId: targetContentTypeId.toString(),\r\n        SourceType: sourceContentTypeStaticName,\r\n        SourceField: sourceFieldGuid,\r\n        name: newName,\r\n      }\r\n    });\r\n  }\r\n\r\n  share(attributeId: number, share: boolean = true) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Share'), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        attributeId: attributeId.toString(),\r\n        share,\r\n      },\r\n    });\r\n  }\r\n\r\n  inherit(attributeId: number, sourceFieldGuid: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Inherit'), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        attributeId: attributeId.toString(),\r\n        inheritMetadataOf: sourceFieldGuid,\r\n      },\r\n    });\r\n  }\r\n\r\n  reOrder(idArray: number[], contentType: ContentType) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'Sort'), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentType.Id.toString(),\r\n        order: JSON.stringify(idArray),\r\n      },\r\n    });\r\n  }\r\n\r\n  setTitle(item: Field, contentType: ContentType) {\r\n    return this.http.post<null>(this.apiUrl(webApiTypeRoot + 'SetTitle'), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  rename(fieldId: number, contentTypeId: number, newName: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Rename'), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentTypeId.toString(),\r\n        attributeId: fieldId.toString(),\r\n        newName,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(item: Field, contentType: ContentType) {\r\n    if (item.IsTitle) {\r\n      throw new Error('Can\\'t delete Title');\r\n    }\r\n\r\n    return this.http.delete<boolean>(this.apiUrl(webApiFieldsRoot + 'Delete'), {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  add(newField: Partial<Field>, contentTypeId: number) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'Add'), null, {\r\n      params: {\r\n        AppId: this.appId,\r\n        ContentTypeId: contentTypeId.toString(),\r\n        Id: newField.Id.toString(),\r\n        Type: newField.Type,\r\n        InputType: newField.InputType,\r\n        StaticName: newField.StaticName,\r\n        IsTitle: newField.IsTitle.toString(),\r\n        Index: newField.SortOrder.toString(),\r\n      }\r\n    });\r\n  }\r\n\r\n  updateInputType(id: number, staticName: string, inputType: InputTypeStrict) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'InputType'), null, {\r\n      params: { appId: this.appId, attributeId: id.toString(), field: staticName, inputType }\r\n    });\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n"],"x_google_ignoreList":[]}