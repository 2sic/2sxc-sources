{"version":3,"file":"projects_eav-ui_src_app_visual-query_visual-query_component_ts.8efe06c21e2318f3.js","mappings":"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","names":["MousedownStopPropagationDirective","onMousedown","event","stopPropagation","static","this","t","_angular_core__WEBPACK_IMPORTED_MODULE_0__","FsC","selectors","hostBindings","rf","ctx","i0","$event","QueryDefinitionService","constructor","http","context","fetchPipeline","pipelineEntityId","dataSources","get","webApiQueryGet","params","appId","toString","id","pipe","map","pipelineModel","DataSources","length","buildDefaultModel","fixPipelineDataSources","templateDataSources","eavConstants","pipelineDesigner","defaultPipeline","templateDS","dataSource","find","ds","PartAssemblyAndType","push","Description","EntityGuid","EntityId","undefined","Name","VisualDesignerData","Pipeline","StreamWiring","streamWiring","pipelineDataSources","some","pipelineDS","outDataSource","outDs","pipelineDataSource","Top","Left","fetchDataSources","webApiQueryDataSources","appid","zoneId","ContentType","Difficulty","dataSourceDifficulties","default","DynamicIn","DynamicOut","EnableConfig","HelpLink","Icon","In","Out","PrimaryType","TypeNameForUi","UiHint","typeNameFilter","input","format","globalParts","split","classFullNameParts","savePipeline","pipeline","post","webApiQuerySave","Id","newPipelineModel","runPipeline","top","webApiQueryRun","debugStream","source","sourceOut","webApiQueryDebugStream","from","out","i1","i2","core","jDH","factory","ɵfac","ctx_r0","name","sourceName","option_r3","_r2","$implicit","show","QueryResultComponent_For_18_Conditional_2_Template","QueryResultComponent_For_18_Conditional_3_Template","param_r4","QueryResultComponent_Conditional_22_div_1_Template","QueryResultComponent_Conditional_22_For_5_Template","parameters","source_r5","value","Definition","config_r6","key","QueryResultComponent_For_37_Conditional_2_Template","QueryResultComponent_For_37_For_10_Template","Guid","Type","Configuration","Error","stream_r7","Source","SourceOut","Target","TargetIn","Count","QueryResultComponent","dialogData","dialogRef","visualQueryService","ngOnInit","pipelineModel$","Params","filter","el","testParams","TestParameters","concat","timeUsed","result","QueryTimer","Milliseconds","ticksUsed","Ticks","optionsForTop","Query","sources","Sources","streams","Streams","closeDialog","close","original","MAT_DIALOG_DATA","VBU","standalone","features","decls","vars","consts","template","QueryResultComponent_Conditional_4_Template","QueryResultComponent_div_13_Template","QueryResultComponent_Conditional_15_Template","QueryResultComponent_Conditional_16_Template","QueryResultComponent_For_18_Template","QueryResultComponent_Conditional_22_Template","QueryResultComponent_div_24_Template","QueryResultComponent_For_37_Template","QueryResultComponent_div_40_Template","QueryResultComponent_For_53_Template","MatButtonModule","i3","MatIconModule","i4","MatTabsModule","i5","JsonPipe","KeyValuePipe","styles","StreamErrorResultComponent","errorData","openInsights","window","open","$2sxc","apiUrl","MatDialogActions","VisualQueryService","BaseWithChildDialogComponent","router","route","queryDefinitionService","titleService","snackBar","dialog","viewContainerRef","zone","metadataService","contentTypesService","changeDetectorRef","super","BehaviorSubject","dataSources$","putEntityCountOnConnections$","Subject","dataSourceConfigs$","pipelineId","parseInt","snapshot","paramMap","refreshPipeline","refreshDataSourceConfigs","ngOnDestroy","complete","init","attachKeyboardSave","subscriptions","add","childDialogClosed$","subscribe","editPipelineEntity","formUrl","convertFormToUrl","items","navigate","relativeTo","saveAndRun","save","run","showDataSourceDetails","showDetails","cloneDeep","visualDesignerData","JsonHelpers","tryParse","ShowDataSourceDetails","JSON","stringify","next","addDataSource","removeDataSource","pipelineDataSourceGuid","connections","streamsOut","StreamsOut","renameDataSource","changeDataSourceDescription","description","changeConnections","changeDataSourcePosition","position","calculateDataSourceConfigs","dataSourceConfigs","forEach","Metadata","metadataItem","Object","entries","attributeName","attributeValue","includes","Array","isArray","Title","editDataSource","contentTypeName","getMetadata","metadata","entity","targetType","keyType","Items","retrieveContentType","contentType","duration","ContentTypeName","For","target","TargetType","error","callback","pipelineResult","showQueryResult","console","warn","setTimeout","stream","showStreamErrorResult","streamResult","showSnackBar","setTitle","autoFocus","backdropClass","closeOnNavigation","data","panelClass","markForCheck","ErrorData","runOutsideAngular","fromEvent","firstChild","navigator","platform","match","metaKey","ctrlKey","keyCode","preventDefault","i6","i7","guiTypes","App","Label","Cache","Filter","Logic","Lookup","Modify","Security","Sort","Unknown","Debug","System","calculateTypeInfos","typeInfos","typeInfo","RenameStreamComponent_Conditional_9_Conditional_4_Template","RenameStreamComponent_Conditional_9_Conditional_5_Template","isSource","pipelineResultExists","controls","label","touched","errors","required","scopeOption_r3","RenameStreamComponent_Conditional_10_Conditional_0_For_5_Template","scopeOptions","labelOption_r4","RenameStreamComponent_Conditional_10_Conditional_4_For_2_Template","labelOptions","RenameStreamComponent_Conditional_10_Conditional_0_Template","RenameStreamComponent_Conditional_10_Conditional_4_Template","RenameStreamComponent_Conditional_10_Conditional_5_Template","toggleGuidedLabel","RenameStreamComponent_Conditional_10_Conditional_13_Template","advancedMode","guidedLabel","_c0","_r5","toggleAdvancedMode","RenameStreamComponent","BaseComponent","hostClass","buildForm","checked","rename","formValue","form","getRawValue","UntypedFormGroup","UntypedFormControl","Validators","scope","scopes","valueChanges","startWith","distinctUntilChanged","values","Scope","patchValue","getScopes","filtered","s","o","hostVars","RenameStreamComponent_Conditional_9_Template","RenameStreamComponent_Conditional_10_Template","RenameStreamComponent_Conditional_13_Template","valid","FormsModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","i8","MatSelectModule","i9","i10","MatOptionModule","NgClass","MatSlideToggleModule","i11","FieldHintComponent","ClickStopPropagationDirective","dataSrcIdPrefix","Plumber","jsPlumbRoot","onConnectionsChanged","onDragend","onDebugStream","log","EavLogger","lineCount","linePaintDefault","stroke","strokeWidth","outlineStroke","outlineWidth","lineColors","maxCols","uuidColorMap","bulkDelete","instance","jsPlumb","getInstance","getInstanceDefaults","batch","initDomDataSources","initWirings","bindEvents","repaintEverything","destroy","reset","unbindContainer","removeEndpointsOnDataSource","elementId","selectEndpoints","element","delete","getAllConnections","connection","From","sourceId","replace","endpoints","getOverlay","To","targetId","getStreamsOut","each","endpoint","join","putEntityCountOnConnections","sourceElementId","targetElementId","fromUuid","toUuid","getEndpoint","getUuid","setLabel","cssClass","events","click","overlay","AllowEdit","nextLinePaintStyle","uuid","assign","container","Container","Connector","curviness","PaintStyle","HoverPaintStyle","l","fnCond","domDataSource","querySelector","draggable","grid","stop","finalPos","outCount","a","addEndpoint","inCount","in","targetEndpointUnlimited","buildTargetEndpoint","maxConnections","makeTarget","makeSource","buildSourceEndpoint","end","fn","wirings","inGroups","groupBy","wire","outGroups","guid","pipeDataSource","connect","uuids","paintStyle","message","to","endpointName","isIn","count","d","connectionList","isDynamic","getEndpointInfo","endpointInfo","style","angled","model","enabled","addClass","fill","radius","anchor","faces","overlays","getEndpointOverlays","endpointOrOverlay","onChangeLabel","isTarget","dropOptions","hoverClass","activeClass","location","width","afterClosed","newLabel","bind","info","targetEndpoint","deleteEndpoint","deleteConnection","fireEvent","endpointLabel","labelPrompt","getLabel","getEndpoints","canvas","classList","contains","Math","floor","random","trimmed","trim","endsWith","substring","arr","reduce","groups","item","dataSource_r3","ctx_r3","configureDataSource","vm_r6","openHelp","_r7","remove","config_r8","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_For_3_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_5_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_6_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_8_Template","_r1","allowEdit","editName","editDescription","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_24_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_25_Template","_c2","Width","_c3","isOutDataSource","getTypeName","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Template","PlumbEditorComponent_Conditional_0_Conditional_2_Template","hardReset","PlumbEditorComponent","scriptLoaded$","loadScripts","test","src","plumber","pipelineDesignerData$","mapUntilObjChanged","m","viewModel$","combineLatest","pipelineDesignerData","detectChanges","ngAfterViewInit","domDataSourcesLoaded$","domDataSourcesRef","changes","scriptLoaded","domDataSourcesLoaded","domRootRef","nativeElement","partAssemblyAndType","confirm","url","newName","prompt","newDescription","viewQuery","PlumbEditorComponent_Conditional_0_Template","tmp_0_0","NgStyle","AsyncPipe","dataSource_r6","ctx_r1","AddExplorerComponent_Conditional_0_For_6_Conditional_5_For_2_Template","trackDataSources","group_r4","_r3","toggleItem","AddExplorerComponent_Conditional_0_For_6_Conditional_5_Template","tmp_14_0","toggledItems","toggleDifficulty","AddExplorerComponent_Conditional_0_For_6_Template","trackGroups","sorted","AddExplorerComponent","difficulties","difficulty$","difficulty","filterAndSortDataSources","maxDifficulty","sort","b","toLocaleLowerCase","localeCompare","type","advanced","ArrayHelpers","toggleInArray","index","AddExplorerComponent_Conditional_0_Template","TippyDirective","param_r3","RunExplorerComponent_Conditional_0_Conditional_20_For_2_Template","pipelineModel_r4","param_r5","RunExplorerComponent_Conditional_0_Conditional_24_For_2_Template","_r6","RunExplorerComponent_Conditional_0_Conditional_27_Conditional_0_For_8_Template","warnings_r8","RunExplorerComponent_Conditional_0_Conditional_27_Conditional_0_Template","saveAndRunQuery","editPipeline","openParamsHelp","RunExplorerComponent_Conditional_0_Conditional_20_Template","RunExplorerComponent_Conditional_0_Conditional_24_Template","RunExplorerComponent_Conditional_0_Conditional_25_Template","RunExplorerComponent_Conditional_0_Conditional_27_Template","RunExplorerComponent_Conditional_0_Conditional_29_Template","openRestApi","tmp_4_0","visualDesignerData$","tmp_5_0","warnings$","RunExplorerComponent","asObservable","calculateWarnings","warnings","queryParams","param","midMatch","exec","testMid","urlMid","moduleId","GoToDevRest","getUrlQueryDialog","RunExplorerComponent_Conditional_0_Template","VisualQueryComponent","explorer","activeExplorer","toggleExplorer","MetadataService","ContentTypesService","RouterOutlet"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/directives/mousedown-stop-propagation.directive.ts","./projects/eav-ui/src/app/visual-query/services/query-definition.service.ts","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.html","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.html","./projects/eav-ui/src/app/visual-query/services/visual-query.service.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.helpers.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumber.helper.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.html","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.html","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.html"],"sourcesContent":["import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({ selector: '[appMousedownStopPropagation]', standalone: true })\r\nexport class MousedownStopPropagationDirective {\r\n  @HostListener('mousedown', ['$event'])\r\n  onMousedown(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { webApiQueryDataSources, webApiQueryDebugStream, webApiQueryGet, webApiQueryRun, webApiQuerySave } from '../../app-administration/services';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult } from '../models';\r\n\r\n@Injectable()\r\nexport class QueryDefinitionService {\r\n  constructor(private http: HttpClient, private context: Context) { }\r\n\r\n  fetchPipeline(pipelineEntityId: number, dataSources: DataSource[]) {\r\n    return this.http.get<PipelineModel>(webApiQueryGet, {\r\n      params: { appId: this.context.appId.toString(), id: pipelineEntityId.toString() }\r\n    }).pipe(\r\n      map(pipelineModel => {\r\n        // if pipeline is new, populate it with default model\r\n        if (!pipelineModel.DataSources.length) {\r\n          this.buildDefaultModel(pipelineModel, dataSources);\r\n        }\r\n        this.fixPipelineDataSources(pipelineModel.DataSources);\r\n        return pipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  private buildDefaultModel(pipelineModel: PipelineModel, dataSources: DataSource[]) {\r\n    const templateDataSources = eavConstants.pipelineDesigner.defaultPipeline.dataSources;\r\n    for (const templateDS of templateDataSources) {\r\n      const dataSource = dataSources.find(ds => ds.PartAssemblyAndType === templateDS.PartAssemblyAndType);\r\n      const pipelineDataSource: PipelineDataSource = {\r\n        Description: '',\r\n        EntityGuid: templateDS.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: dataSource.Name,\r\n        PartAssemblyAndType: templateDS.PartAssemblyAndType,\r\n        VisualDesignerData: templateDS.VisualDesignerData,\r\n      };\r\n      pipelineModel.DataSources.push(pipelineDataSource);\r\n    }\r\n\r\n    pipelineModel.Pipeline.StreamWiring = eavConstants.pipelineDesigner.defaultPipeline.streamWiring;\r\n  }\r\n\r\n  private fixPipelineDataSources(pipelineDataSources: PipelineDataSource[]) {\r\n    const outDataSourceExists = pipelineDataSources.some(\r\n      pipelineDS => pipelineDS.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    );\r\n    if (!outDataSourceExists) {\r\n      const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n      const outDsConst: PipelineDataSource = {\r\n        Description: outDs.Description,\r\n        EntityGuid: outDs.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: outDs.Name,\r\n        PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n        VisualDesignerData: outDs.VisualDesignerData,\r\n      };\r\n      pipelineDataSources.push(outDsConst);\r\n    }\r\n\r\n    for (const pipelineDataSource of pipelineDataSources) {\r\n      pipelineDataSource.VisualDesignerData ??= { Top: 50, Left: 50 };\r\n    }\r\n  }\r\n\r\n  fetchDataSources() {\r\n    return this.http.get<DataSource[]>(webApiQueryDataSources, {\r\n      params: {\r\n        appid: this.context.appId,\r\n        zoneId: this.context.zoneId,\r\n      },\r\n    }).pipe(\r\n      map(dataSources => {\r\n        const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n        const outDsConst: DataSource = {\r\n          ContentType: undefined,\r\n          Difficulty: eavConstants.pipelineDesigner.dataSourceDifficulties.default,\r\n          DynamicIn: true,\r\n          DynamicOut: false,\r\n          EnableConfig: undefined,\r\n          HelpLink: undefined,\r\n          Icon: undefined,\r\n          In: outDs.In,\r\n          Name: outDs.Name,\r\n          Out: undefined,\r\n          PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n          PrimaryType: outDs.PrimaryType,\r\n          TypeNameForUi: undefined,\r\n          UiHint: undefined,\r\n        };\r\n        dataSources.push(outDsConst);\r\n        return dataSources;\r\n      }),\r\n    );\r\n  }\r\n\r\n  typeNameFilter(input: string, format: 'className' | 'classFullName') {\r\n    const globalParts = input.split(', ');\r\n\r\n    switch (format) {\r\n      case 'classFullName':\r\n        const classFullName = globalParts[0];\r\n        return classFullName;\r\n      case 'className':\r\n        const classFullNameParts = globalParts[0].split('.');\r\n        const className = classFullNameParts[classFullNameParts.length - 1];\r\n        return className;\r\n      default:\r\n        return input;\r\n    }\r\n  }\r\n\r\n  /** Save the current query and reload entire definition as returned from server */\r\n  savePipeline(pipelineModel: PipelineModel) {\r\n    const pipeline = pipelineModel.Pipeline;\r\n    const dataSources = pipelineModel.DataSources;\r\n\r\n    return this.http.post<PipelineModel>(\r\n      webApiQuerySave,\r\n      { pipeline, dataSources },\r\n      { params: { appId: this.context.appId.toString(), Id: pipeline.EntityId.toString() } }\r\n    ).pipe(\r\n      map(newPipelineModel => {\r\n        this.fixPipelineDataSources(newPipelineModel.DataSources);\r\n        return newPipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  runPipeline(id: number, top: number) {\r\n    return this.http.get<PipelineResult>(webApiQueryRun, {\r\n      params: { appId: this.context.appId.toString(), id: id.toString(), top: top.toString() }\r\n    });\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  debugStream(id: number, source: string, sourceOut: string, top: number) {\r\n    return this.http.get<PipelineResult>(webApiQueryDebugStream, {\r\n      params: { appId: this.context.appId.toString(), id: id.toString(), from: source, out: sourceOut, top: top.toString() }\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      Query Results\r\n      @if (debugStream) {\r\n        for Stream: \"{{ debugStream.name }}\" on Source: \"{{ debugStream.sourceName }}\"\r\n      }\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <p>\r\n      The Full result was logged to the Browser Console. Further down you'll find more debug-infos.\r\n      Executed in {{ timeUsed }}ms ({{ ticksUsed }} ticks)\r\n    </p>\r\n    <mat-tab-group dynamicHeight color=\"accent\" class=\"eav-tab-group\">\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Results\">\r\n          <span>Results</span>\r\n        </div>\r\n\r\n        <p class=\"eav-tab-description\">\r\n          @if (top === 0) {\r\n            Showing All results\r\n          }\r\n          @if (top !== 0) {\r\n            Showing top {{ top }} results\r\n          }\r\n          @for (option of optionsForTop; track option) {\r\n            <button mat-button (click)=\"show(option)\">\r\n              Show\r\n              @if (option === 0) {\r\n                All\r\n              }\r\n              @if (option !== 0) {\r\n                {{ option }}\r\n              }\r\n            </button>\r\n          }\r\n        </p>\r\n        <pre>{{ result | json }}</pre>\r\n      </mat-tab>\r\n\r\n      @if (parameters?.length) {\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Parameters\">\r\n            <span>Parameters</span>\r\n          </div>\r\n          <br />\r\n          <ul>\r\n            @for (param of parameters; track param) {\r\n              <li>{{ param }}</li>\r\n            }\r\n          </ul>\r\n        </mat-tab>\r\n      }\r\n\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Sources\">\r\n          <span>Sources</span>\r\n        </div>\r\n\r\n        <br />\r\n        <table>\r\n          <tr>\r\n            <th>Name and Guid</th>\r\n            <th>Type</th>\r\n            <th>Configuration</th>\r\n            <th>Error</th>\r\n          </tr>\r\n          @for (source of sources | keyvalue; track source) {\r\n            <tr>\r\n              <td>\r\n                @if (source.value.Definition?.Name) {\r\n                  <div>{{ source.value.Definition?.Name }}</div>\r\n                }\r\n                <pre>{{ source.value.Guid }}</pre>\r\n              </td>\r\n              <td>{{ source.value.Type }}</td>\r\n              <td>\r\n                <ol>\r\n                  @for (config of source.value.Configuration | keyvalue; track config) {\r\n                    <li>\r\n                      <b>{{ config.key }}</b>=<em>{{ config.value }}</em>\r\n                    </li>\r\n                  }\r\n                </ol>\r\n              </td>\r\n              <td>{{ source.value.Error }}</td>\r\n            </tr>\r\n          }\r\n        </table>\r\n      </mat-tab>\r\n\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Streams\">\r\n          <span>Streams</span>\r\n        </div>\r\n\r\n        <br />\r\n        <table>\r\n          <tr>\r\n            <th>Source</th>\r\n            <th>Target</th>\r\n            <th>Items</th>\r\n            <th>Error</th>\r\n          </tr>\r\n          @for (stream of streams; track stream) {\r\n            <tr>\r\n              <td>\r\n                <pre>{{ stream.Source + \":\" + stream.SourceOut }}</pre>\r\n              </td>\r\n              <td>\r\n                <pre>{{ stream.Target + \":\" + stream.TargetIn }}</pre>\r\n              </td>\r\n              <td>{{ stream.Count }}</td>\r\n              <td>{{ stream.Error }}</td>\r\n            </tr>\r\n          }\r\n        </table>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DebugStreamInfo, PipelineResultQuery, PipelineResultSources, PipelineResultStream } from '../models';\r\nimport { VisualQueryService } from '../services/visual-query.service';\r\nimport { QueryResultDialogData } from './query-result.models';\r\nimport { JsonPipe, KeyValuePipe } from '@angular/common';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@Component({\r\n  selector: 'app-query-result',\r\n  templateUrl: './query-result.component.html',\r\n  styleUrls: ['./query-result.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTabsModule,\r\n    JsonPipe,\r\n    KeyValuePipe,\r\n  ],\r\n})\r\nexport class QueryResultComponent implements OnInit {\r\n  parameters: string[];\r\n  timeUsed: number;\r\n  ticksUsed: number;\r\n  top: number;\r\n  optionsForTop: number[];\r\n  result: PipelineResultQuery;\r\n  debugStream: DebugStreamInfo;\r\n  sources: PipelineResultSources;\r\n  streams: PipelineResultStream[];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: QueryResultDialogData,\r\n    private dialogRef: MatDialogRef<QueryResultComponent>,\r\n    private visualQueryService: VisualQueryService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const pipeline = this.visualQueryService.pipelineModel$.value.Pipeline;\r\n    const params = (pipeline.Params?.split('\\n') ?? []).filter(el => !!el);\r\n    const testParams = (pipeline.TestParameters?.split('\\n') ?? []).filter(el => !!el);\r\n    this.parameters = [].concat(params, testParams);\r\n    this.timeUsed = this.dialogData.result.QueryTimer.Milliseconds;\r\n    this.ticksUsed = this.dialogData.result.QueryTimer.Ticks;\r\n    this.top = this.dialogData.top;\r\n    this.optionsForTop = [25, 100, 1000, 0];\r\n    this.result = this.dialogData.result.Query;\r\n    this.debugStream = this.dialogData.debugStream;\r\n    this.sources = this.dialogData.result.Sources;\r\n    this.streams = this.dialogData.result.Streams;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  show(top: number) {\r\n    if (top === this.top) { return; }\r\n\r\n    if (this.debugStream) {\r\n      this.visualQueryService.debugStream(this.debugStream.original, top);\r\n    } else {\r\n      this.visualQueryService.runPipeline(top);\r\n    }\r\n\r\n    this.closeDialog();\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogActions } from '@angular/material/dialog';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { StreamErrorData } from '../models';\r\nimport { StreamErrorResultDialogData } from './stream-error-result.models';\r\nimport { JsonPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-stream-error-result',\r\n  templateUrl: './stream-error-result.component.html',\r\n  styleUrls: ['./stream-error-result.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogActions,\r\n    JsonPipe,\r\n  ],\r\n})\r\nexport class StreamErrorResultComponent implements OnInit {\r\n  errorData: StreamErrorData;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: StreamErrorResultDialogData,\r\n    private dialogRef: MatDialogRef<StreamErrorResultComponent>,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.errorData = this.dialogData.errorData;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/logs?key=web-api-query'), '_blank');\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Stream Error Results</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <pre>{{ errorData | json }}</pre>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button class=\"eav-button__with-icon\" tippy=\"Open 2sxc Insights\" (click)=\"openInsights()\">\r\n      <mat-icon class=\"eav-icon\">speed</mat-icon>\r\n      <span>Insights</span>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Injectable, NgZone, OnDestroy, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { BehaviorSubject, filter, fromEvent, Subject } from 'rxjs';\r\nimport { ContentTypesService } from '../../app-administration/services/content-types.service';\r\nimport { MetadataService } from '../../permissions/services/metadata.service';\r\nimport { QueryDefinitionService } from './query-definition.service';\r\nimport { BaseWithChildDialogComponent } from '../../shared/components/base-with-child-dialog.component';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../../shared/models/edit-form.model';\r\n// tslint:disable-next-line:max-line-length\r\nimport { DataSource, DataSourceConfig, DataSourceConfigs, DebugStreamInfo, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { QueryResultComponent } from '../query-result/query-result.component';\r\nimport { QueryResultDialogData } from '../query-result/query-result.models';\r\nimport { StreamErrorResultComponent } from '../stream-error-result/stream-error-result.component';\r\nimport { StreamErrorResultDialogData } from '../stream-error-result/stream-error-result.models';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\n\r\n@Injectable()\r\nexport class VisualQueryService extends BaseWithChildDialogComponent implements OnDestroy {\r\n  pipelineModel$ = new BehaviorSubject<PipelineModel>(null);\r\n  dataSources$ = new BehaviorSubject<DataSource[]>(null);\r\n  putEntityCountOnConnections$ = new Subject<PipelineResult>();\r\n  dataSourceConfigs$ = new BehaviorSubject<DataSourceConfigs>({});\r\n  pipelineResult?: PipelineResult;\r\n\r\n  private pipelineId = parseInt(this.route.snapshot.paramMap.get('pipelineId'), 10);\r\n  private refreshPipeline = false;\r\n  private refreshDataSourceConfigs = false;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private queryDefinitionService: QueryDefinitionService,\r\n    private titleService: Title,\r\n    private snackBar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private zone: NgZone,\r\n    private metadataService: MetadataService,\r\n    private contentTypesService: ContentTypesService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.pipelineModel$.complete();\r\n    this.dataSources$.complete();\r\n    this.putEntityCountOnConnections$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  init() {\r\n    this.fetchDataSources(() => this.fetchPipeline(true, true, false));\r\n    this.attachKeyboardSave();\r\n    this.subscriptions.add(this.childDialogClosed$().subscribe(() => {\r\n      if (this.refreshPipeline || this.refreshDataSourceConfigs) {\r\n        this.fetchPipeline(this.refreshPipeline, this.refreshDataSourceConfigs, this.refreshPipeline);\r\n      }\r\n      this.refreshPipeline = false;\r\n      this.refreshDataSourceConfigs = false;\r\n    }));\r\n  }\r\n\r\n  editPipelineEntity() {\r\n    // save Pipeline, then open Edit Dialog\r\n    this.savePipeline(() => {\r\n      const form: EditForm = {\r\n        items: [{ EntityId: this.pipelineModel$.value.Pipeline.EntityId }],\r\n      };\r\n      const formUrl = convertFormToUrl(form);\r\n      this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n      this.refreshPipeline = true;\r\n    });\r\n  }\r\n\r\n  saveAndRun(save: boolean, run: boolean) {\r\n    if (save && run) {\r\n      this.savePipeline(() => { this.runPipeline(); });\r\n    } else if (save) {\r\n      this.savePipeline();\r\n    } else if (run) {\r\n      this.runPipeline();\r\n    }\r\n  }\r\n\r\n  showDataSourceDetails(showDetails: boolean) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const visualDesignerData: Record<string, any> = JsonHelpers.tryParse(pipelineModel.Pipeline.VisualDesignerData) ?? {};\r\n    visualDesignerData.ShowDataSourceDetails = showDetails;\r\n    pipelineModel.Pipeline.VisualDesignerData = JSON.stringify(visualDesignerData);\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const newPipelineDataSource: PipelineDataSource = {\r\n      Description: '',\r\n      EntityGuid: 'unsaved' + (pipelineModel.DataSources.length + 1),\r\n      EntityId: undefined,\r\n      Name: dataSource.Name,\r\n      PartAssemblyAndType: dataSource.PartAssemblyAndType,\r\n      VisualDesignerData: { Top: 100, Left: 100 },\r\n    };\r\n    pipelineModel.DataSources.push(newPipelineDataSource);\r\n    this.pipelineModel$.next(pipelineModel);\r\n    this.savePipeline();\r\n  }\r\n\r\n  removeDataSource(pipelineDataSourceGuid: string, connections: StreamWire[], streamsOut: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    pipelineModel.DataSources = pipelineModel.DataSources.filter(pipelineDS => pipelineDS.EntityGuid !== pipelineDataSourceGuid);\r\n    pipelineModel.Pipeline.StreamWiring = connections;\r\n    pipelineModel.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  renameDataSource(pipelineDataSourceGuid: string, name: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    pipelineDataSource.Name = name;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeDataSourceDescription(pipelineDataSourceGuid: string, description: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    pipelineDataSource.Description = description;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeConnections(connections: StreamWire[], streamsOut: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    pipelineModel.Pipeline.StreamWiring = connections;\r\n    pipelineModel.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeDataSourcePosition(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    if (!pipelineDataSource) {\r\n      // spm NOTE: fixes problem where dataSource position can't be updated if dataSource with guid unsavedXX gets saved while dragging.\r\n      // Can happen if dataSource is just added and user drags it and save happens.\r\n      return;\r\n    }\r\n    pipelineDataSource.VisualDesignerData = { ...pipelineDataSource.VisualDesignerData, ...position };\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  private calculateDataSourceConfigs(dataSources: PipelineDataSource[]) {\r\n    const dataSourceConfigs: DataSourceConfigs = {};\r\n    dataSources.forEach(dataSource => {\r\n      if (dataSource.EntityId == null) { return; }\r\n      dataSourceConfigs[dataSource.EntityId] = [];\r\n      dataSource.Metadata?.forEach(metadataItem => {\r\n        Object.entries(metadataItem).forEach(([attributeName, attributeValue]) => {\r\n          if (attributeValue == null || attributeValue === '') { return; }\r\n          if (['Created', 'Guid', 'Id', 'Modified', 'Title', '_Type'].includes(attributeName)) { return; }\r\n          if (Array.isArray(attributeValue) && attributeValue[0]?.Title != null && attributeValue[0]?.Id != null) {\r\n            attributeValue = `${attributeValue[0].Title} (${attributeValue[0].Id})`;\r\n          }\r\n          const dataSourceConfig: DataSourceConfig = {\r\n            name: attributeName,\r\n            value: attributeValue,\r\n          };\r\n          dataSourceConfigs[dataSource.EntityId].push(dataSourceConfig);\r\n        });\r\n      });\r\n    });\r\n    this.dataSourceConfigs$.next(dataSourceConfigs);\r\n  }\r\n\r\n  editDataSource(pipelineDataSource: PipelineDataSource) {\r\n    const dataSource = this.dataSources$.value.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    const contentTypeName = dataSource.ContentType;\r\n    const targetType = eavConstants.metadata.entity.targetType;\r\n    const keyType = eavConstants.metadata.entity.keyType;\r\n    const key = pipelineDataSource.EntityGuid;\r\n\r\n    // query for existing Entity\r\n    this.metadataService.getMetadata(targetType, keyType, key, contentTypeName).subscribe(metadata => {\r\n      // edit existing Entity\r\n      if (metadata.Items.length) {\r\n        const form: EditForm = {\r\n          items: [{ EntityId: metadata.Items[0].Id }],\r\n        };\r\n        const formUrl = convertFormToUrl(form);\r\n        this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n        this.refreshDataSourceConfigs = true;\r\n        return;\r\n      }\r\n\r\n      // Check if the type exists, and if yes, create new Entity\r\n      this.contentTypesService.retrieveContentType(contentTypeName).subscribe({\r\n        next: contentType => {\r\n          if (contentType == null) {\r\n            this.snackBar.open('DataSource doesn\\'t have any configuration', undefined, { duration: 3000 });\r\n            return;\r\n          }\r\n          const form: EditForm = {\r\n            items: [{\r\n              ContentTypeName: contentTypeName,\r\n              For: {\r\n                Target: eavConstants.metadata.entity.target,\r\n                TargetType: eavConstants.metadata.entity.targetType,\r\n                Guid: key,\r\n              },\r\n            }],\r\n          };\r\n          const formUrl = convertFormToUrl(form);\r\n          this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n          this.refreshDataSourceConfigs = true;\r\n        },\r\n        error: (error: HttpErrorResponse) => {\r\n          const message = 'Server reports error - this usually means that this DataSource doesn\\'t have any configuration';\r\n          this.snackBar.open(message, undefined, { duration: 3000 });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private savePipeline(callback?: () => void) {\r\n    this.snackBar.open('Saving...');\r\n    this.queryDefinitionService.savePipeline(this.pipelineModel$.value).subscribe({\r\n      next: pipelineModel => {\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n        this.pipelineModel$.next(pipelineModel);\r\n        if (callback != null) { callback(); }\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Save Pipeline failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  runPipeline(top = 25) {\r\n    this.snackBar.open('Running query...');\r\n    this.queryDefinitionService.runPipeline(this.pipelineModel$.value.Pipeline.EntityId, top).subscribe({\r\n      next: pipelineResult => {\r\n        this.snackBar.open('Query worked', null, { duration: 2000 });\r\n        this.pipelineResult = pipelineResult;\r\n        this.showQueryResult(pipelineResult, top);\r\n        console.warn(pipelineResult);\r\n        // push cloned pipelineModel to reset jsPlumb\r\n        this.pipelineModel$.next(cloneDeep(this.pipelineModel$.value));\r\n        setTimeout(() => { this.putEntityCountOnConnections$.next(pipelineResult); });\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Query failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  debugStream(stream: PipelineResultStream, top = 25) {\r\n    if (stream.Error) {\r\n      this.showStreamErrorResult(stream);\r\n      return;\r\n    }\r\n\r\n    if (stream.Count === 0) { return; }\r\n\r\n    this.snackBar.open('Running stream...');\r\n    const pipelineId = this.pipelineModel$.value.Pipeline.EntityId;\r\n    this.queryDefinitionService.debugStream(pipelineId, stream.Source, stream.SourceOut, top).subscribe({\r\n      next: streamResult => {\r\n        this.snackBar.open('Stream worked', null, { duration: 2000 });\r\n        const pipelineDataSource = this.pipelineModel$.value.DataSources.find(ds => ds.EntityGuid === stream.Source);\r\n        const debugStream: DebugStreamInfo = {\r\n          name: stream.SourceOut,\r\n          source: stream.Source,\r\n          sourceName: pipelineDataSource.Name,\r\n          original: stream,\r\n        };\r\n        this.showQueryResult(streamResult, top, debugStream);\r\n        console.warn(streamResult);\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Stream failed', null, { duration: 2000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  private fetchPipeline(refreshPipeline: boolean, refreshDataSourceConfigs: boolean, showSnackBar: boolean) {\r\n    if (showSnackBar) {\r\n      this.snackBar.open('Reloading query, please wait...');\r\n    }\r\n    this.queryDefinitionService.fetchPipeline(this.pipelineId, this.dataSources$.value).subscribe(pipelineModel => {\r\n      if (showSnackBar) {\r\n        this.snackBar.open('Query reloaded', null, { duration: 2000 });\r\n      }\r\n      this.titleService.setTitle(`${pipelineModel.Pipeline.Name} - Visual Query`);\r\n      if (refreshPipeline) {\r\n        this.pipelineModel$.next(pipelineModel);\r\n      }\r\n      if (refreshDataSourceConfigs) {\r\n        this.calculateDataSourceConfigs(pipelineModel.DataSources);\r\n      }\r\n    });\r\n  }\r\n\r\n  private showQueryResult(result: PipelineResult, top: number, debugStream?: DebugStreamInfo) {\r\n    const dialogData: QueryResultDialogData = {\r\n      result,\r\n      debugStream,\r\n      top,\r\n    };\r\n    this.dialog.open(QueryResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private showStreamErrorResult(stream: PipelineResultStream) {\r\n    const dialogData: StreamErrorResultDialogData = {\r\n      errorData: stream.ErrorData,\r\n    };\r\n    this.dialog.open(StreamErrorResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private fetchDataSources(callback?: () => void) {\r\n    this.queryDefinitionService.fetchDataSources().subscribe(dataSources => {\r\n      this.dataSources$.next(dataSources);\r\n      callback();\r\n    });\r\n  }\r\n\r\n  private attachKeyboardSave() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown').pipe(\r\n          filter(() => !this.route.snapshot.firstChild),\r\n          filter(event => {\r\n            const CTRL_S = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.keyCode === 83;\r\n            return CTRL_S;\r\n          }),\r\n        ).subscribe(event => {\r\n          event.preventDefault();\r\n          this.zone.run(() => { this.savePipeline(); });\r\n        })\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { DataSource, PipelineDataSource } from '../models';\r\nimport { GuiTypes, TypeInfo, TypeInfos } from './plumb-editor.models';\r\n\r\nexport const guiTypes: GuiTypes = {\r\n  App: { Name: 'App', Label: 'App DataSources', Icon: 'star', UiHint: 'DataSources from the current App' },\r\n  Cache: { Name: 'Cache', Icon: 'history', UiHint: 'Caching of data' },\r\n  Filter: { Name: 'Filter', Icon: 'filter_list', UiHint: 'Filter data - usually returning less items than came in' },\r\n  Logic: { Name: 'Logic', Icon: 'share', UiHint: 'Logic operations - usually choosing between different streams' },\r\n  Lookup: { Name: 'Lookup', Icon: 'search', UiHint: 'Lookup operation - usually looking for other data based on a criteria' },\r\n  Modify: { Name: 'Modify', Icon: 'edit_attributes', UiHint: 'Modify data - usually changing, adding or removing values' },\r\n  Security: { Name: 'Security', Icon: 'account_circle', UiHint: 'Security - usually limit what the user sees based on his identity' },\r\n  Sort: { Name: 'Sort', Icon: 'sort', UiHint: 'Sort the items' },\r\n  Source: { Name: 'Source', Icon: 'cloud_upload', UiHint: 'Source of new data - usually SQL, CSV or similar' },\r\n  Target: { Name: 'Target', Icon: 'adjust', UiHint: 'Target - usually just a destination of data' },\r\n  Unknown: { Name: 'Unknown', Icon: 'fiber_manual_record', UiHint: 'Unknown type' },\r\n  Debug: { Name: 'Debug', Icon: 'bug_report', UiHint: 'Debugging Tools'},\r\n  System: { Name: 'System', Icon: 'military_tech', UiHint: 'System Data' },\r\n};\r\n\r\nexport function calculateTypeInfos(pipelineDataSources: PipelineDataSource[], dataSources: DataSource[]) {\r\n  const typeInfos: TypeInfos = {};\r\n\r\n  for (const pipelineDataSource of pipelineDataSources) {\r\n    let typeInfo: TypeInfo;\r\n    const dataSource = dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    if (dataSource) {\r\n      typeInfo = { ...(dataSource.PrimaryType ? guiTypes[dataSource.PrimaryType] : guiTypes.Unknown) };\r\n      if (dataSource.Icon != null) { typeInfo.Icon = dataSource.Icon; }\r\n      if (dataSource.DynamicIn != null) { typeInfo.DynamicIn = dataSource.DynamicIn; }\r\n      if (dataSource.DynamicOut != null) { typeInfo.DynamicOut = dataSource.DynamicOut; }\r\n      if (dataSource.HelpLink != null) { typeInfo.HelpLink = dataSource.HelpLink; }\r\n      if (dataSource.EnableConfig != null) { typeInfo.EnableConfig = dataSource.EnableConfig; }\r\n      if (dataSource.UiHint != null) { typeInfo.UiHint = dataSource.UiHint; }\r\n    }\r\n    if (!typeInfo) { typeInfo = { ...guiTypes.Unknown }; }\r\n    typeInfos[pipelineDataSource.EntityGuid] = typeInfo;\r\n  }\r\n\r\n  return typeInfos;\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Rename stream</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <form [formGroup]=\"form\">\r\n      <!-- Simple form -->\r\n      @if (!isSource || !pipelineResultExists) {\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"label\" required>\r\n        </mat-form-field>\r\n        @if (isSource && !pipelineResultExists) {\r\n          <app-field-hint>\r\n            You will get suggestions for out-streams after you run query\r\n          </app-field-hint>\r\n        }\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n\r\n      <!-- Rich form -->\r\n      @if (isSource && pipelineResultExists) {\r\n        <!-- Scope -->\r\n        @if (advancedMode && guidedLabel) {\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Scope</mat-label>\r\n            <mat-select formControlName=\"scope\" [placeholder]=\"!scopeOptions.length ? 'No items found' : ''\">\r\n              @for (scopeOption of scopeOptions; track scopeOption) {\r\n                <mat-option [value]=\"scopeOption.value\">\r\n                  {{ scopeOption.name }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <app-field-hint>\r\n            The scope should almost never be changed -\r\n            <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n          </app-field-hint>\r\n        }\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          @if (guidedLabel) {\r\n            <mat-select formControlName=\"label\" required\r\n              [placeholder]=\"!labelOptions.length ? 'No items found' : ''\">\r\n              @for (labelOption of labelOptions; track labelOption) {\r\n                <mat-option [value]=\"labelOption\">\r\n                  {{ labelOption }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          }\r\n          @if (!guidedLabel) {\r\n            <input matInput type=\"text\" formControlName=\"label\" required>\r\n          }\r\n          <div matTextSuffix class=\"eav-selection-suffix\">\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': guidedLabel }\" tippy=\"Pick existing value\"\r\n              (click)=\"toggleGuidedLabel(true)\">\r\n              <mat-icon class=\"eav-icon\">search</mat-icon>\r\n            </button>\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': !guidedLabel }\" tippy=\"Manual entry\"\r\n              (click)=\"toggleGuidedLabel(false)\">\r\n              <mat-icon class=\"eav-icon\">text_fields</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-form-field>\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n    </form>\r\n  </div>\r\n  <mat-dialog-actions class=\"eav-dialog-actions\">\r\n    <!-- Extra button for rich form -->\r\n    <div>\r\n      @if (isSource && pipelineResultExists) {\r\n        <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n          {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n        </mat-slide-toggle>\r\n      }\r\n    </div>\r\n    <div>\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\" [disabled]=\"!form.valid\" (click)=\"rename()\">\r\n        Rename\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { ChangeDetectorRef, Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { distinctUntilChanged, startWith } from 'rxjs';\r\nimport { ContentTypesService } from '../../../app-administration/services';\r\nimport { BaseComponent } from '../../../shared/components/base.component';\r\nimport { eavConstants, ScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { VisualQueryService } from '../../services/visual-query.service';\r\nimport { RenameStreamDialogControls, RenameStreamDialogData, RenameStreamDialogFormValue } from './rename-stream.models';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FieldHintComponent } from '../../../shared/components/field-hint/field-hint.component';\r\nimport { ClickStopPropagationDirective } from '../../../shared/directives/click-stop-propagation.directive';\r\n\r\n@Component({\r\n  selector: 'app-rename-stream',\r\n  templateUrl: './rename-stream.component.html',\r\n  styleUrls: ['./rename-stream.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    NgClass,\r\n    MatDialogActions,\r\n    MatSlideToggleModule,\r\n    FieldHintComponent,\r\n    ClickStopPropagationDirective,\r\n  ],\r\n})\r\nexport class RenameStreamComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  controls: RenameStreamDialogControls;\r\n  isSource = this.dialogData.isSource;\r\n  pipelineResultExists = this.visualQueryService.pipelineResult != null;\r\n  scopeOptions: ScopeOption[] = [];\r\n  labelOptions: string[] = [];\r\n  guidedLabel = true;\r\n  advancedMode = false;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: RenameStreamDialogData,\r\n    private dialogRef: MatDialogRef<RenameStreamComponent>,\r\n    private visualQueryService: VisualQueryService,\r\n    private contentTypesService: ContentTypesService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(label?: string): void {\r\n    this.dialogRef.close(label);\r\n  }\r\n\r\n  toggleGuidedLabel(guidedLabel: boolean): void {\r\n    this.guidedLabel = guidedLabel;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  rename(): void {\r\n    const formValue: RenameStreamDialogFormValue = this.form.getRawValue();\r\n    this.closeDialog(formValue.label);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({\r\n      label: new UntypedFormControl(this.dialogData.label, Validators.required),\r\n      scope: new UntypedFormControl(eavConstants.scopes.default.value),\r\n    });\r\n    this.controls = this.form.controls as any;\r\n\r\n    if (!this.isSource || !this.pipelineResultExists) { return; }\r\n\r\n    this.subscriptions.add(\r\n      this.controls.scope.valueChanges.pipe(\r\n        startWith<string>(this.controls.scope.value),\r\n        distinctUntilChanged(),\r\n      ).subscribe(scope => {\r\n        this.labelOptions = Object.values(this.visualQueryService.pipelineResult.Sources)\r\n          .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out\r\n          .filter(out => out.Scope === scope)\r\n          .map(out => out.Name);\r\n        if (!this.labelOptions.includes(this.controls.label.value) && this.controls.label.value != null) {\r\n          this.controls.label.patchValue(null);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.contentTypesService.getScopes().subscribe(scopes => {\r\n      const sourceOut = Object.values(this.visualQueryService.pipelineResult.Sources)\r\n        .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out;\r\n      const filtered = scopes.filter(s => sourceOut.some(o => o.Scope === s.value));\r\n      this.scopeOptions = filtered;\r\n      this.changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectorRef, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { EndpointInfo, PlumbType } from './plumb-editor.models';\r\nimport { RenameStreamComponent } from './rename-stream/rename-stream.component';\r\nimport { RenameStreamDialogData } from './rename-stream/rename-stream.models';\r\nimport { EavLogger } from '../../shared/logging/eav-logger';\r\n\r\nconst logThis = false;\r\nconst nameOfThis = 'Plumber';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport const dataSrcIdPrefix = 'dataSource_';\r\n\r\nconst endPointsWhereWeRotate = 3;\r\n\r\nexport class Plumber {\r\n  private log = new EavLogger(nameOfThis, logThis);\r\n  private instance: PlumbType;\r\n  private lineCount = 0;\r\n  private linePaintDefault = {\r\n    stroke: '#61B7CF',\r\n    strokeWidth: 4,\r\n    outlineStroke: 'white',\r\n    outlineWidth: 2,\r\n  };\r\n  private lineColors = [\r\n    '#009688', '#00bcd4', '#3f51b5', '#9c27b0', '#e91e63',\r\n    '#db4437', '#ff9800', '#60a917', '#60a917', '#008a00',\r\n    '#00aba9', '#1ba1e2', '#0050ef', '#6a00ff', '#aa00ff',\r\n    '#f472d0', '#d80073', '#a20025', '#e51400', '#fa6800',\r\n    '#f0a30a', '#e3c800', '#825a2c', '#6d8764', '#647687',\r\n    '#76608a', '#a0522d',\r\n  ];\r\n  private maxCols = this.lineColors.length - 1;\r\n  private uuidColorMap: Record<string, any> = {};\r\n  private bulkDelete = false;\r\n  private dialogRef: MatDialogRef<RenameStreamComponent>;\r\n\r\n  constructor(\r\n    private jsPlumbRoot: HTMLElement,\r\n    private pipelineModel: PipelineModel,\r\n    private dataSources: DataSource[],\r\n    private onConnectionsChanged: () => void,\r\n    private onDragend: (pipelineDataSourceGuid: string, position: VisualDesignerData) => void,\r\n    private onDebugStream: (stream: PipelineResultStream) => void,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    this.instance = window.jsPlumb.getInstance(this.getInstanceDefaults(this.jsPlumbRoot));\r\n    this.instance.batch(() => {\r\n      this.initDomDataSources();\r\n      this.initWirings();\r\n      this.bindEvents();\r\n    });\r\n    // spm NOTE: repaint after initial paint fixes:\r\n    // Error: <svg> attribute width: Expected length, \"-Infinity\".\r\n    this.instance.repaintEverything();\r\n  }\r\n\r\n  destroy() {\r\n    this.dialogRef?.close();\r\n    this.instance.reset();\r\n    this.instance.unbindContainer();\r\n  }\r\n\r\n  removeEndpointsOnDataSource(pipelineDataSourceGuid: string) {\r\n    const elementId = dataSrcIdPrefix + pipelineDataSourceGuid;\r\n    this.bulkDelete = true;\r\n    this.instance.batch(() => {\r\n      this.instance.selectEndpoints({ element: elementId }).delete();\r\n    });\r\n    this.bulkDelete = false;\r\n  }\r\n\r\n  getAllConnections() {\r\n    const connectionInfos: StreamWire[] = this.instance.getAllConnections().map((connection: PlumbType) => {\r\n      const wire: StreamWire = {\r\n        From: connection.sourceId.replace(dataSrcIdPrefix, ''),\r\n        Out: connection.endpoints[0].getOverlay('endpointLabel').label,\r\n        To: connection.targetId.replace(dataSrcIdPrefix, ''),\r\n        In: connection.endpoints[1].getOverlay('endpointLabel').label,\r\n      };\r\n      return wire;\r\n    });\r\n    return connectionInfos;\r\n  }\r\n\r\n  getStreamsOut() {\r\n    const streamsOut: string[] = [];\r\n    this.instance.selectEndpoints({ target: dataSrcIdPrefix + 'Out' }).each((endpoint: PlumbType) => {\r\n      streamsOut.push(endpoint.getOverlay('endpointLabel').label);\r\n    });\r\n    const streamsOutStr = streamsOut.join(',');\r\n    return streamsOutStr;\r\n  }\r\n\r\n  putEntityCountOnConnections(result: PipelineResult) {\r\n    result.Streams?.forEach(stream => {\r\n      const sourceElementId = dataSrcIdPrefix + stream.Source;\r\n      const outTargets = ['00000000-0000-0000-0000-000000000000', this.pipelineModel.Pipeline.EntityGuid];\r\n      const targetElementId = outTargets.includes(stream.Target) ? dataSrcIdPrefix + 'Out' : dataSrcIdPrefix + stream.Target;\r\n\r\n      const fromUuid = sourceElementId + '_out_' + stream.SourceOut;\r\n      const toUuid = targetElementId + '_in_' + stream.TargetIn;\r\n\r\n      const sEndp: PlumbType = this.instance.getEndpoint(fromUuid);\r\n      sEndp?.connections\r\n        ?.filter((connection: PlumbType) => connection.endpoints[1].getUuid() === toUuid)\r\n        ?.forEach((connection: PlumbType) => {\r\n          const label = !stream.Error ? stream.Count.toString() : '';\r\n          const cssClass = 'streamEntitiesCount ' + (!stream.Error ? '' : 'streamEntitiesError');\r\n          connection.setLabel({\r\n            label,\r\n            cssClass,\r\n            events: {\r\n              click: (overlay: PlumbType) => {\r\n                if (!this.pipelineModel.Pipeline.AllowEdit) return;\r\n                this.onDebugStream(stream);\r\n              },\r\n            },\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  private nextLinePaintStyle(uuid: string) {\r\n    return (\r\n      this.uuidColorMap[uuid] ||\r\n      (this.uuidColorMap[uuid] = Object.assign({}, this.linePaintDefault, { stroke: this.lineColors[this.lineCount++ % this.maxCols] }))\r\n    );\r\n  }\r\n\r\n  private getInstanceDefaults(container: HTMLElement) {\r\n    const defaults = {\r\n      Container: container,\r\n      Connector: ['Bezier', { curviness: 70 }],\r\n      PaintStyle: this.nextLinePaintStyle('dummy'),\r\n      HoverPaintStyle: {\r\n        stroke: '#216477',\r\n        strokeWidth: 4,\r\n        outlineStroke: 'white',\r\n        outlineWidth: 2,\r\n      },\r\n    };\r\n    return defaults;\r\n  }\r\n\r\n  /** Create sources, targets and endpoints */\r\n  private initDomDataSources() {\r\n    const l = this.log.fnCond(false, 'initDomDataSources');\r\n    for (const pipelineDataSource of this.pipelineModel.DataSources) {\r\n      const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + dataSrcIdPrefix + pipelineDataSource.EntityGuid);\r\n      if (!domDataSource) continue;\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      if (!dataSource) continue;\r\n\r\n      if (this.pipelineModel.Pipeline.AllowEdit) {\r\n        // WARNING! Must happen before instance.makeSource()\r\n        this.instance.draggable(domDataSource, {\r\n          grid: [20, 20], stop: (event: PlumbType) => {\r\n            const element: HTMLElement = event.el;\r\n            const pipelineDataSourceGuid: string = element.id.replace(dataSrcIdPrefix, '');\r\n            const position: VisualDesignerData = {\r\n              Top: event.finalPos[1],\r\n              Left: event.finalPos[0],\r\n            };\r\n            setTimeout(() => { this.onDragend(pipelineDataSourceGuid, position); });\r\n          }\r\n        });\r\n      }\r\n\r\n      // Add Out-Endpoints from Definition\r\n      const outCount = dataSource.Out?.length ?? 0;\r\n      l.a('dataSource.Out', { outCount, out: dataSource.Out });\r\n      dataSource.Out?.forEach(name => {\r\n        this.addEndpoint(domDataSource, name, false, pipelineDataSource, outCount);\r\n      });\r\n\r\n      // Add In-Endpoints from Definition\r\n      const inCount = dataSource.In?.length ?? 0;\r\n      l.a('dataSource.In', { inCount, in: dataSource.In });\r\n      dataSource.In?.forEach(name => {\r\n        this.addEndpoint(domDataSource, name, true, pipelineDataSource, inCount);\r\n      });\r\n\r\n      // Make DataSource a Target for new Endpoints (if .In is an Array)\r\n      if (dataSource.In) {\r\n        const targetEndpointUnlimited = this.buildTargetEndpoint(pipelineDataSource.EntityGuid);\r\n        targetEndpointUnlimited.maxConnections = -1;\r\n        this.instance.makeTarget(domDataSource, targetEndpointUnlimited);\r\n      }\r\n\r\n      if (dataSource.DynamicOut)\r\n        this.instance.makeSource(domDataSource, this.buildSourceEndpoint(pipelineDataSource.EntityGuid), { filter: '.add-endpoint' });\r\n    }\r\n    l.end();\r\n  }\r\n\r\n  /** Create wires */\r\n  private initWirings() {\r\n    const l = this.log.fn('initWirings');\r\n    const wirings = this.pipelineModel.Pipeline.StreamWiring;\r\n    if (!wirings) return l.end(null, 'no wirings');\r\n\r\n    const inGroups = groupBy(wirings, wire => wire.To);\r\n    const outGroups = groupBy(wirings, wire => wire.From);\r\n\r\n    l.values({ inGroups, outGroups });\r\n\r\n    wirings.forEach(wire => {\r\n      // read connections from Pipeline\r\n      const sourceElementId = dataSrcIdPrefix + wire.From;\r\n      const fromUuid = sourceElementId + '_out_' + wire.Out;\r\n      const targetElementId = dataSrcIdPrefix + wire.To;\r\n      const toUuid = targetElementId + '_in_' + wire.In;\r\n\r\n      // Ensure In-Endpoint exist\r\n      if (!this.instance.getEndpoint(fromUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + sourceElementId);\r\n        if (!domDataSource) return;\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const dataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n        this.addEndpoint(domDataSource, wire.Out, false, dataSource, outGroups[wire.From].length);\r\n      }\r\n\r\n      // Ensure Out-Endpoint exist\r\n      if (!this.instance.getEndpoint(toUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + targetElementId);\r\n        if (!domDataSource) return;\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const dataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n        \r\n        // if (wire.In === \"DEBUG\") debugger;\r\n\r\n        this.addEndpoint(domDataSource, wire.In, true, dataSource, inGroups[wire.To].length);\r\n      }\r\n\r\n      try {\r\n        this.instance.connect({\r\n          uuids: [fromUuid, toUuid],\r\n          paintStyle: this.nextLinePaintStyle(fromUuid),\r\n        });\r\n      } catch (e) {\r\n        console.error({ message: 'Connection failed', from: fromUuid, to: toUuid });\r\n      }\r\n    });\r\n    l.end();\r\n  }\r\n\r\n  private addEndpoint(domDataSource: HTMLElement, endpointName: string, isIn: boolean, pipelineDataSource: PipelineDataSource, count: number = 0) {\r\n    const l = this.log.fnCond(false, 'addEndpoint', { endpointName, isIn, pipelineDataSource });\r\n    const dataSource = this.dataSources.find(d => d.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    const connectionList = isIn ? dataSource.In : dataSource.Out;\r\n    const isDynamic = connectionList?.some(name => this.getEndpointInfo(name, false));\r\n    // const count = connectionList?.length ?? -1;\r\n    const endpointInfo = this.getEndpointInfo(endpointName, isDynamic);\r\n    \r\n    l.a(`endpointInfo ${count}`, { dataSource, connectionList, isDynamic, count, endpointInfo });\r\n\r\n    // if (endpointName === \"DEBUG\") debugger;\r\n\r\n    let style: string;\r\n    if (isDynamic)\r\n      style = 'dynamic';\r\n    else if (!endpointInfo.required)\r\n      style = '';\r\n    else {\r\n      const wireExists = this.pipelineModel.Pipeline.StreamWiring?.some(wire => {\r\n        const targetElementId = dataSrcIdPrefix + wire.To;\r\n        const targetEndpointName = wire.In;\r\n\r\n        return targetElementId === domDataSource.id && targetEndpointName === endpointInfo.name;\r\n      });\r\n      style = wireExists ? '' : 'required';\r\n    }\r\n\r\n    const uuid = domDataSource.id + (isIn ? '_in_' : '_out_') + endpointInfo.name;\r\n    const angled = count > endPointsWhereWeRotate;\r\n    const model = isIn\r\n      ? this.buildTargetEndpoint(pipelineDataSource.EntityGuid, style)\r\n      : this.buildSourceEndpoint(pipelineDataSource.EntityGuid, style);\r\n    // Endpoints on Out-DataSource must be always enabled\r\n    const params = {\r\n      uuid,\r\n      enabled: this.pipelineModel.Pipeline.AllowEdit\r\n        || pipelineDataSource.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    };\r\n\r\n    const endpoint: PlumbType = this.instance.addEndpoint(domDataSource, model, params);\r\n    const overlay = endpoint.getOverlay('endpointLabel');\r\n    overlay.setLabel(endpointInfo.name);\r\n    if (angled)\r\n      overlay.addClass('angled');\r\n    l.end({count, angled, overlay}, \"end\");\r\n  }\r\n\r\n  private buildSourceEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const isSource = true;\r\n    const sourceEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'sourceEndpoint ' + style ?? '',\r\n      maxConnections: -1,\r\n      isSource,\r\n      anchor: ['Continuous', { faces: ['top'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => {\r\n          this.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid);\r\n        },\r\n      },\r\n    };\r\n    return sourceEndpoint;\r\n  }\r\n\r\n  private buildTargetEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const isSource = false;\r\n    const targetEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'targetEndpoint ' + (style ?? ' '), // + (angled ? 'angled' : ''),\r\n      maxConnections: 1,\r\n      isTarget: !isSource,\r\n      anchor: ['Continuous', { faces: ['bottom'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      dropOptions: { hoverClass: 'hover', activeClass: 'active' },\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => {\r\n          this.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid);\r\n        },\r\n      },\r\n    };\r\n    return targetEndpoint;\r\n  }\r\n\r\n  private getEndpointOverlays(isSource: boolean) {\r\n    return [\r\n      [\r\n        'Label', {\r\n          id: 'endpointLabel',\r\n          location: [0.5, isSource ? 0 : 1],\r\n          label: 'Default',\r\n          cssClass: isSource ? 'endpointSourceLabel' : 'endpointTargetLabel',\r\n        },\r\n      ],\r\n    ];\r\n  }\r\n\r\n  private onChangeLabel(endpointOrOverlay: PlumbType, isSource: boolean, pipelineDataSourceGuid: string) {\r\n    if (!this.pipelineModel.Pipeline.AllowEdit) return;\r\n\r\n    const overlay: PlumbType = endpointOrOverlay.getOverlay ? endpointOrOverlay.getOverlay('endpointLabel') : endpointOrOverlay;\r\n    const data: RenameStreamDialogData = {\r\n      pipelineDataSourceGuid,\r\n      isSource,\r\n      label: overlay.label,\r\n    };\r\n    this.dialogRef = this.dialog.open(RenameStreamComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    this.dialogRef.afterClosed().subscribe(newLabel => {\r\n      if (!newLabel) return;\r\n      overlay.setLabel(newLabel);\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private bindEvents() {\r\n    this.instance.bind('connectionDetached', (info: PlumbType) => {\r\n      if (this.bulkDelete) return;\r\n      const domDataSource: HTMLElement = info.target;\r\n      const pipelineDataSource = this.pipelineModel.DataSources.find(\r\n        pipelineDS => pipelineDS.EntityGuid === domDataSource.id.replace(dataSrcIdPrefix, '')\r\n      );\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      const label: string = info.targetEndpoint.getOverlay('endpointLabel').label;\r\n      const isDynamic = !dataSource.In.some(name => this.getEndpointInfo(name, false).name === label);\r\n      if (isDynamic) {\r\n        this.instance.deleteEndpoint(info.targetEndpoint);\r\n        setTimeout(() => { this.onConnectionsChanged(); });\r\n      } else {\r\n        setTimeout(() => { this.onConnectionsChanged(); });\r\n      }\r\n    });\r\n\r\n    this.instance.bind('connection', (info: PlumbType) => {\r\n      if (info.sourceId === info.targetId) {\r\n        setTimeout(() => {\r\n          this.instance.deleteConnection(info.connection, { fireEvent: false });\r\n          setTimeout(() => { this.onConnectionsChanged(); });\r\n        });\r\n        return;\r\n      }\r\n      const endpointLabel: PlumbType = info.targetEndpoint.getOverlay('endpointLabel');\r\n      const labelPrompt: string = endpointLabel.getLabel();\r\n      const endpoints: PlumbType[] = this.instance.getEndpoints(info.target.id);\r\n      const targetEndpointHasSameLabel = endpoints.some(endpoint => {\r\n        const label: string = endpoint.getOverlay('endpointLabel').getLabel();\r\n        return label === labelPrompt &&\r\n          info.targetEndpoint.id !== endpoint.id &&\r\n          (endpoint.canvas as HTMLCanvasElement).classList.contains('targetEndpoint');\r\n      });\r\n      if (targetEndpointHasSameLabel) {\r\n        endpointLabel.setLabel(`PleaseRename${Math.floor(Math.random() * 99999)}`);\r\n      }\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n  }\r\n\r\n  private getEndpointInfo(endpointName: string, isDynamic: boolean): EndpointInfo {\r\n    let name: string;\r\n    let required: boolean;\r\n\r\n    if (isDynamic) {\r\n      name = endpointName;\r\n      required = false;\r\n    } else {\r\n      const trimmed = endpointName.trim();\r\n      required = trimmed.endsWith('*');\r\n      name = !required ? trimmed : trimmed.substring(0, trimmed.length - 1);\r\n    }\r\n\r\n    const endpointInfo: EndpointInfo = {\r\n      name,\r\n      required,\r\n    };\r\n    return endpointInfo;\r\n  }\r\n}\r\n\r\n// https://stackoverflow.com/questions/14446511/most-efficient-method-to-groupby-on-an-array-of-objects\r\nconst groupBy = <T, K extends keyof any>(arr: T[], key: (i: T) => K) =>\r\n  arr.reduce((groups, item) => {\r\n    (groups[key(item)] ||= []).push(item);\r\n    return groups;\r\n  }, {} as Record<K, T[]>);","@if ((viewModel$ | async); as vm) {\r\n<div #domRoot id=\"pipeline-root\">\r\n  <!-- do not use trackBy, jsPlumb drag stops working properly after delete -->\r\n  @if (!hardReset) {\r\n  @for (dataSource of vm.pipelineDataSources; track dataSource) {\r\n  <div #domDataSource [id]=\"dataSrcIdPrefix + dataSource.EntityGuid\" class=\"dataSource\" [ngStyle]=\"{\r\n          'top': dataSource.VisualDesignerData.Top + 'px',\r\n          'left': dataSource.VisualDesignerData.Left + 'px',\r\n          'min-width': dataSource.VisualDesignerData.Width ? dataSource.VisualDesignerData.Width + 'px' : null\r\n          }\" [ngClass]=\"{\r\n          'show-details': vm.showDataSourceDetails && vm.dataSourceConfigs[dataSource.EntityId]?.length\r\n          }\">\r\n    <div class=\"actions left\">\r\n      <mat-icon class=\"type-info\" [title]=\"vm.typeInfos[dataSource.EntityGuid].UiHint\">\r\n        {{ vm.typeInfos[dataSource.EntityGuid].Icon }}\r\n      </mat-icon>\r\n      @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].EnableConfig) {\r\n      <mat-icon class=\"configure\" title=\"Configure data source\" appMousedownStopPropagation\r\n        (click)=\"configureDataSource(dataSource)\">\r\n        settings\r\n      </mat-icon>\r\n      }\r\n      @if (vm.typeInfos[dataSource.EntityGuid].HelpLink) {\r\n      <mat-icon class=\"help\" title=\"Help for this data source\" appMousedownStopPropagation\r\n        (click)=\"openHelp(vm.typeInfos[dataSource.EntityGuid].HelpLink)\">\r\n        help_outline\r\n      </mat-icon>\r\n      }\r\n    </div>\r\n    <div class=\"actions right\">\r\n      @if (vm.allowEdit && !isOutDataSource(dataSource)) {\r\n      <mat-icon class=\"delete\" title=\"Delete\" appMousedownStopPropagation (click)=\"remove(dataSource)\">\r\n        delete\r\n      </mat-icon>\r\n      }\r\n    </div>\r\n    <div class=\"name\" title=\"Click to edit name\" appMousedownStopPropagation\r\n      (click)=\"vm.allowEdit && editName(dataSource)\">\r\n      <span>{{ dataSource.Name || '(no name)' }}</span>\r\n      <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n    </div>\r\n    <br>\r\n    <div class=\"description\" title=\"Click to edit description\" appMousedownStopPropagation\r\n      (click)=\"vm.allowEdit && editDescription(dataSource)\">\r\n      <span>{{ dataSource.Description }}</span>\r\n      <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n    </div>\r\n    <br>\r\n    @if (vm.showDataSourceDetails && vm.dataSourceConfigs[dataSource.EntityId]?.length) {\r\n    <hr style=\"margin: 0\">\r\n    <table class=\"configs\">\r\n      @for (config of vm.dataSourceConfigs[dataSource.EntityId]; track config) {\r\n      <tr class=\"config\">\r\n        <td class=\"config-name\" [title]=\"config.name\">{{ config.name }}</td>\r\n        <td class=\"config-value\" [title]=\"config.value\">{{ config.value }}</td>\r\n      </tr>\r\n      }\r\n    </table>\r\n    }\r\n    <div class=\"typename\" [title]=\"dataSource.PartAssemblyAndType\">\r\n      Type: {{ getTypeName(dataSource.PartAssemblyAndType) }}\r\n    </div>\r\n    @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].DynamicOut) {\r\n    <div class=\"add-endpoint sourceEndpoint dynamic\" title=\"Drag a new Out-Connection\">\r\n    </div>\r\n    }\r\n    @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].DynamicIn) {\r\n    <div class=\"many-in targetEndpoint dynamic\" title=\"This data source supports multiple In-Connections\">\r\n    </div>\r\n    }\r\n  </div>\r\n  }\r\n  }\r\n</div>\r\n}","// tslint:disable-next-line:max-line-length\r\nimport { AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { BaseComponent } from '../../shared/components/base.component';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { loadScripts } from '../../shared/helpers/load-scripts.helper';\r\nimport { PipelineDataSource, PipelineResultStream, VisualDesignerData } from '../models';\r\nimport { QueryDefinitionService } from '../services/query-definition.service';\r\nimport { VisualQueryService } from '../services/visual-query.service';\r\nimport { calculateTypeInfos } from './plumb-editor.helpers';\r\nimport { PlumbEditorViewModel } from './plumb-editor.models';\r\nimport { dataSrcIdPrefix, Plumber } from './plumber.helper';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgStyle, NgClass, AsyncPipe } from '@angular/common';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { MousedownStopPropagationDirective } from '../../shared/directives/mousedown-stop-propagation.directive';\r\nimport { EavLogger } from '../../shared/logging/eav-logger';\r\nimport { mapUntilObjChanged } from '../../shared/rxJs/mapUntilChanged';\r\n\r\nconst logThis = false;\r\nconst nameOfThis = 'PlumbEditorComponent';\r\n\r\nconst jsPlumbUrl = 'https://cdnjs.cloudflare.com/ajax/libs/jsPlumb/2.14.5/js/jsplumb.min.js';\r\n\r\n@Component({\r\n  selector: 'app-plumb-editor',\r\n  templateUrl: './plumb-editor.component.html',\r\n  styles: [':host { display: block; width: 100%; height: 100%; }'],\r\n  styleUrls: ['./plumb-editor.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgStyle,\r\n    NgClass,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    MousedownStopPropagationDirective,\r\n  ],\r\n})\r\nexport class PlumbEditorComponent extends BaseComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('domRoot') private domRootRef: ElementRef<HTMLDivElement>;\r\n  @ViewChildren('domDataSource') private domDataSourcesRef: QueryList<ElementRef<HTMLDivElement>>;\r\n\r\n  dataSrcIdPrefix = dataSrcIdPrefix;\r\n  hardReset = false;\r\n\r\n  private plumber: Plumber;\r\n  private scriptLoaded$ = new BehaviorSubject(false);\r\n\r\n  viewModel$: Observable<PlumbEditorViewModel>;\r\n\r\n  constructor(\r\n    private visualQueryService: VisualQueryService,\r\n    private queryDefinitionService: QueryDefinitionService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) {\r\n    super(new EavLogger(nameOfThis, logThis));\r\n  }\r\n\r\n  ngOnInit() {\r\n    loadScripts([{ test: 'jsPlumb', src: jsPlumbUrl }], () => {\r\n      this.scriptLoaded$.next(true);\r\n    });\r\n\r\n    this.subscriptions.add(\r\n      this.visualQueryService.putEntityCountOnConnections$.subscribe(result => {\r\n        this.plumber.putEntityCountOnConnections(result);\r\n      })\r\n    );\r\n\r\n    const pipelineDesignerData$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => JsonHelpers.tryParse(pipelineModel?.Pipeline.VisualDesignerData) ?? {}),\r\n      mapUntilObjChanged(m => m),\r\n      // distinctUntilChanged(RxHelpers.objectsEqual),\r\n    );\r\n\r\n    this.viewModel$ = combineLatest([\r\n      this.visualQueryService.pipelineModel$,\r\n      this.visualQueryService.dataSources$,\r\n      pipelineDesignerData$,\r\n      this.visualQueryService.dataSourceConfigs$,\r\n    ]).pipe(\r\n      map(([pipelineModel, dataSources, pipelineDesignerData, dataSourceConfigs]) => {\r\n        if (pipelineModel == null || dataSources == null) { return; }\r\n\r\n        // workaround for jsPlumb not working with dom elements which it initialized on previously.\r\n        // This wipes dom entirely and gives us new elements\r\n        this.hardReset = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        this.hardReset = false;\r\n        const viewModel: PlumbEditorViewModel = {\r\n          pipelineDataSources: pipelineModel.DataSources,\r\n          typeInfos: calculateTypeInfos(pipelineModel.DataSources, dataSources),\r\n          allowEdit: pipelineModel.Pipeline.AllowEdit,\r\n          showDataSourceDetails: pipelineDesignerData.ShowDataSourceDetails ?? false,\r\n          dataSourceConfigs,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const l = this.log.fn('ngAfterViewInit');\r\n    // https://stackoverflow.com/questions/37087864/execute-a-function-when-ngfor-finished-in-angular-2/37088348#37088348\r\n    const domDataSourcesLoaded$ = this.domDataSourcesRef.changes.pipe(map(() => true));\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([this.scriptLoaded$, domDataSourcesLoaded$]).subscribe(([scriptLoaded, domDataSourcesLoaded]) => {\r\n        if (!scriptLoaded || !domDataSourcesLoaded)\r\n          return;\r\n\r\n        this.log.a('scriptLoaded and domDataSourcesLoaded', { scriptLoaded, domDataSourcesLoaded });\r\n\r\n        this.plumber?.destroy();\r\n        this.plumber = new Plumber(\r\n          this.domRootRef.nativeElement,\r\n          this.visualQueryService.pipelineModel$.value,\r\n          this.visualQueryService.dataSources$.value,\r\n          this.onConnectionsChanged.bind(this),\r\n          this.onDragend.bind(this),\r\n          this.onDebugStream.bind(this),\r\n          this.dialog,\r\n          this.viewContainerRef,\r\n          this.changeDetectorRef,\r\n        );\r\n      })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.plumber?.destroy();\r\n    this.scriptLoaded$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  onConnectionsChanged() {\r\n    const connections = this.plumber.getAllConnections();\r\n    const streamsOut = this.plumber.getStreamsOut();\r\n    this.visualQueryService.changeConnections(connections, streamsOut);\r\n  }\r\n\r\n  onDragend(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    this.visualQueryService.changeDataSourcePosition(pipelineDataSourceGuid, position);\r\n  }\r\n\r\n  onDebugStream(stream: PipelineResultStream) {\r\n    this.visualQueryService.debugStream(stream);\r\n  }\r\n\r\n  configureDataSource(dataSource: PipelineDataSource) {\r\n    // ensure dataSource entity is saved\r\n    if (dataSource.EntityGuid.includes('unsaved')) {\r\n      this.visualQueryService.saveAndRun(true, false);\r\n    } else {\r\n      this.visualQueryService.editDataSource(dataSource);\r\n    }\r\n  }\r\n\r\n  getTypeName(partAssemblyAndType: string) {\r\n    const dataSource = this.visualQueryService.dataSources$.value.find(ds => ds.PartAssemblyAndType === partAssemblyAndType);\r\n    return this.queryDefinitionService.typeNameFilter(dataSource?.TypeNameForUi || partAssemblyAndType, 'className');\r\n  }\r\n\r\n  isOutDataSource(pipelineDataSource: PipelineDataSource) {\r\n    return pipelineDataSource.PartAssemblyAndType === eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType;\r\n  }\r\n\r\n  remove(pipelineDataSource: PipelineDataSource) {\r\n    if (!confirm(`Delete ${pipelineDataSource.Name} data source?`)) { return; }\r\n\r\n    this.plumber.removeEndpointsOnDataSource(pipelineDataSource.EntityGuid);\r\n    const connections = this.plumber.getAllConnections();\r\n    const streamsOut = this.plumber.getStreamsOut();\r\n    this.visualQueryService.removeDataSource(pipelineDataSource.EntityGuid, connections, streamsOut);\r\n  }\r\n\r\n  openHelp(url: string) {\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  editName(dataSource: PipelineDataSource) {\r\n    const newName = prompt('Rename data source', dataSource.Name)?.trim();\r\n    if (newName == null || newName === '') { return; }\r\n\r\n    this.visualQueryService.renameDataSource(dataSource.EntityGuid, newName);\r\n  }\r\n\r\n  editDescription(dataSource: PipelineDataSource) {\r\n    const newDescription = prompt('Edit description', dataSource.Description)?.trim();\r\n    if (newDescription == null) { return; }\r\n\r\n    this.visualQueryService.changeDataSourceDescription(dataSource.EntityGuid, newDescription);\r\n  }\r\n\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"eav-show-advanced\">\r\n      <span class=\"eav-slide-toggle-label\">Show Advanced</span>\r\n      <mat-slide-toggle color=\"primary\" (change)=\"toggleDifficulty($event)\" />\r\n    </div>\r\n    @for (group of vm.sorted | keyvalue; track trackGroups($index, group)) {\r\n      <div class=\"collapsible\" [tippy]=\"guiTypes[group.key].UiHint || group.key\" tippyShowDelay=\"750\"\r\n        (click)=\"toggleItem(group.key)\">\r\n        <mat-icon>{{ guiTypes[group.key].Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n        <span>{{ guiTypes[group.key].Label ?? guiTypes[group.key].Name ?? group.key }}</span>\r\n      </div>\r\n      @if (toggledItems.includes(group.key)) {\r\n        <div class=\"list\">\r\n          @for (dataSource of group.value; track trackDataSources($index, dataSource)) {\r\n            <div class=\"list-item\"\r\n              [tippy]=\"dataSource.UiHint || dataSource.Name\" tippyShowDelay=\"750\" (click)=\"addDataSource(dataSource)\">\r\n              <mat-icon>{{ dataSource.Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n              <span>{{ dataSource.Name }}</span>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n  </div>\r\n}\r\n","import { KeyValue, AsyncPipe, KeyValuePipe } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\nimport { guiTypes } from '../plumb-editor/plumb-editor.helpers';\r\nimport { VisualQueryService } from '../services/visual-query.service';\r\nimport { filterAndSortDataSources } from './add-explorer.helpers';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-add-explorer',\r\n  templateUrl: './add-explorer.component.html',\r\n  styleUrls: ['./add-explorer.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatSlideToggleModule,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    KeyValuePipe,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class AddExplorerComponent implements OnInit, OnDestroy {\r\n  toggledItems: string[] = [];\r\n  guiTypes = guiTypes;\r\n\r\n  private difficulties = eavConstants.pipelineDesigner.dataSourceDifficulties;\r\n  private difficulty$ = new BehaviorSubject(this.difficulties.default);\r\n\r\n  viewModel$: Observable<AddExplorerViewModel>;\r\n\r\n  constructor(private visualQueryService: VisualQueryService) { }\r\n\r\n  ngOnInit() {\r\n    this.viewModel$ = combineLatest([\r\n      combineLatest([this.visualQueryService.dataSources$, this.difficulty$]).pipe(\r\n        map(([dataSources, difficulty]) => filterAndSortDataSources(dataSources, difficulty)),\r\n      )\r\n    ]).pipe(map(([sorted]) => ({ sorted })));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.difficulty$.complete();\r\n  }\r\n\r\n  toggleDifficulty(event: MatSlideToggleChange) {\r\n    const difficulty = event.checked ? this.difficulties.advanced : this.difficulties.default;\r\n    this.difficulty$.next(difficulty);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    this.visualQueryService.addDataSource(dataSource);\r\n  }\r\n\r\n  toggleItem(item: string) {\r\n    ArrayHelpers.toggleInArray(item, this.toggledItems);\r\n  }\r\n\r\n  trackGroups(index: number, type: KeyValue<string, DataSource[]>) {\r\n    return type.key;\r\n  }\r\n\r\n  trackDataSources(index: number, dataSource: DataSource) {\r\n    return dataSource.PartAssemblyAndType;\r\n  }\r\n}\r\n\r\ninterface AddExplorerViewModel {\r\n  sorted: SortedDataSources;\r\n}\r\n","import cloneDeep from 'lodash-es/cloneDeep';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\n\r\nexport function filterAndSortDataSources(dataSources: DataSource[], maxDifficulty: number) {\r\n  if (!dataSources) { return; }\r\n\r\n  const cloned = cloneDeep(dataSources);\r\n\r\n  const filtered = cloned.filter(dataSource =>\r\n    dataSource.Difficulty <= maxDifficulty\r\n    && dataSource.PartAssemblyAndType !== eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType\r\n  );\r\n\r\n  filtered.sort((a, b) => a.Name.toLocaleLowerCase().localeCompare(b.Name.toLocaleLowerCase()));\r\n\r\n  const sorted: SortedDataSources = {};\r\n  for (const dataSource of filtered) {\r\n    const type = dataSource.PrimaryType;\r\n    if (sorted[type]) {\r\n      sorted[type].push(dataSource);\r\n    } else {\r\n      sorted[type] = [dataSource];\r\n    }\r\n  }\r\n\r\n  return sorted;\r\n}\r\n","@if ((pipelineModel$ | async); as pipelineModel) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"wrapper\">\r\n      <div class=\"actions\">\r\n        <button mat-raised-button class=\"action\" color=\"accent\" (click)=\"saveAndRunQuery(true, true)\">\r\n          Save and run\r\n        </button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(false, true)\">\r\n          Run\r\n        </button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(true, false)\">\r\n          Save\r\n        </button>\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">\r\n          <div>Query Parameters</div>\r\n          <div>\r\n            <button mat-icon-button tippy=\"Edit parameters\" (click)=\"editPipeline()\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button mat-icon-button tippy=\"Query Params Docs\" (click)=\"openParamsHelp()\">\r\n              <mat-icon>info</mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        @if (pipelineModel.Pipeline.Params?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of pipelineModel.Pipeline.Params?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">Test Parameters</div>\r\n        @if (pipelineModel.Pipeline.TestParameters?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of pipelineModel.Pipeline.TestParameters?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      @if (visualDesignerData$ | async; as visualDesignerData) {\r\n        <div class=\"parameters\">\r\n          <span class=\"eav-slide-toggle-label\">Show DataSource Params</span>\r\n          <mat-slide-toggle color=\"primary\" [checked]=\"visualDesignerData.ShowDataSourceDetails\"\r\n            (change)=\"showDataSourceDetails($event)\"/>\r\n          </div>\r\n        }\r\n      @if ((warnings$ | async); as warnings) {\r\n        @if (warnings.length) {\r\n          <div class=\"warnings\">\r\n            <div class=\"title\">\r\n              <span>Warnings</span>\r\n              <mat-icon style=\"color: red\">warning</mat-icon>\r\n            </div>\r\n            <ol class=\"values\">\r\n              @for (warning of warnings; track warning) {\r\n                <li [innerHTML]=\"warning\">\r\n                </li>\r\n              }\r\n            </ol>\r\n          </div>\r\n        }\r\n      }\r\n      @if (pipelineModel.Pipeline.Description) {\r\n        <div class=\"description\">\r\n          <div class=\"title\">Query Description</div>\r\n          <div>{{ pipelineModel.Pipeline.Description }}</div>\r\n        </div>\r\n      }\r\n      <div class=\"footer-actions\">\r\n        <button mat-raised-button class=\"action\" (click)=\"openRestApi()\">\r\n          <span>Use in JSON / REST API</span>\r\n          <mat-icon>code_curly</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { map, Observable } from 'rxjs';\r\nimport { GoToDevRest } from '../../dev-rest';\r\nimport { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\nimport { VisualQueryService } from '../services/visual-query.service';\r\nimport { calculateWarnings } from './run-explorer.helpers';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\n\r\n@Component({\r\n  selector: 'app-run-explorer',\r\n  templateUrl: './run-explorer.component.html',\r\n  styleUrls: ['./run-explorer.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSlideToggleModule,\r\n    AsyncPipe,\r\n  ],\r\n})\r\nexport class RunExplorerComponent implements OnInit {\r\n  pipelineModel$: Observable<PipelineModel>;\r\n  warnings$: Observable<string[]>;\r\n  visualDesignerData$: Observable<Record<string, any>>;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private visualQueryService: VisualQueryService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.pipelineModel$ = this.visualQueryService.pipelineModel$.asObservable();\r\n    this.warnings$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => calculateWarnings(pipelineModel, this.context)),\r\n    );\r\n    this.visualDesignerData$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => JsonHelpers.tryParse(pipelineModel.Pipeline.VisualDesignerData) ?? {}),\r\n    );\r\n  }\r\n\r\n  editPipeline() {\r\n    this.visualQueryService.editPipelineEntity();\r\n  }\r\n\r\n  openParamsHelp() {\r\n    window.open('https://go.2sxc.org/QueryParams', '_blank');\r\n  }\r\n\r\n  saveAndRunQuery(save: boolean, run: boolean) {\r\n    this.visualQueryService.saveAndRun(save, run);\r\n  }\r\n\r\n  showDataSourceDetails(event: MatSlideToggleChange): void {\r\n    this.visualQueryService.showDataSourceDetails(event.checked);\r\n  }\r\n\r\n  openRestApi() {\r\n    const queryGuid = this.visualQueryService.pipelineModel$.value.Pipeline.EntityGuid;\r\n    this.router.navigate([GoToDevRest.getUrlQueryDialog(queryGuid)], { relativeTo: this.route });\r\n  }\r\n}\r\n","import { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\n\r\n/**\r\n * Check if there are special warnings the developer should know.\r\n * Typically when the test ModuleId is different from the one we're currently working on\r\n */\r\nexport function calculateWarnings(pipelineModel: PipelineModel, context: Context) {\r\n  const warnings: string[] = [];\r\n\r\n  try {\r\n    const queryParams = pipelineModel.Pipeline.Params?.split(/\\r?\\n/) || [];\r\n    const testParams = pipelineModel.Pipeline.TestParameters?.split(/\\r?\\n/) || [];\r\n\r\n    queryParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) { return; }\r\n\r\n      // Check if the syntax on Query Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const paramSyntax = /^[a-zA-Z0-9]+=(.*)$/gmi;\r\n      const matched = paramSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Query Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>key=value</code> <br>\r\n          or resolve to a token like: <br>\r\n          <code>key=[source:key]</code>\r\n        `);\r\n      }\r\n    });\r\n\r\n    testParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) { return; }\r\n\r\n      // Check if the syntax on Test Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const testParamSyntax = /^\\[[a-zA-Z]+:[a-zA-Z0-9]+\\]=(.*)$/gmi;\r\n      const matched = testParamSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Test Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>[source:key]=value</code>\r\n        `);\r\n      }\r\n\r\n      // Check if we should show the warning about the test ModuleId.\r\n      // This is because in the old days, the ModuleId wasn't auto-filled, so people had to add it as a test value.\r\n      // Now it's not necessary any more\r\n      const midRegex = /^\\[module:id\\]=([0-9]*)$/gmi;\r\n      const midMatch = midRegex.exec(param);\r\n      if (midMatch) {\r\n        const testMid = midMatch[1];\r\n        const urlMid = context.moduleId?.toString();\r\n        if (testMid !== urlMid) {\r\n          warnings.push(`\r\n            Your test ModuleId (${testMid}) is different from the current ModuleId (${urlMid}).<br>\r\n            Note that 2sxc automatically provides the ModuleId - so you usually do not need to set it\r\n          `);\r\n        }\r\n      }\r\n\r\n      const oldMidRegex = /^\\[module:moduleid\\]=([0-9]*)$/gmi;\r\n      const oldMidMatch = oldMidRegex.exec(param);\r\n      if (oldMidMatch) {\r\n        warnings.push(`\r\n          You are using deprecated [Module:ModuleId] test parameter.<br>\r\n          Please use [Module:Id]\r\n        `);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Something went wrong in calculateWarnings for params', error);\r\n  }\r\n\r\n  return warnings;\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, RouterOutlet } from '@angular/router';\r\nimport { Context } from '../shared/services/context';\r\nimport { PlumbEditorComponent } from './plumb-editor/plumb-editor.component';\r\nimport { VisualQueryService } from './services/visual-query.service';\r\nimport { AddExplorerComponent } from './add-explorer/add-explorer.component';\r\nimport { RunExplorerComponent } from './run-explorer/run-explorer.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgClass } from '@angular/common';\r\nimport { QueryDefinitionService } from './services/query-definition.service';\r\nimport { MetadataService } from '../permissions';\r\nimport { ContentTypesService } from '../app-administration/services';\r\nimport { transient } from '../core';\r\n\r\n@Component({\r\n  selector: 'app-visual-query',\r\n  templateUrl: './visual-query.component.html',\r\n  styleUrls: ['./visual-query.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    RouterOutlet,\r\n    NgClass,\r\n    MatIconModule,\r\n    RunExplorerComponent,\r\n    AddExplorerComponent,\r\n    PlumbEditorComponent,\r\n  ],\r\n  providers: [\r\n    VisualQueryService, // used in run-explorer\r\n    QueryDefinitionService, // used in plumb-editor\r\n    MetadataService,\r\n    ContentTypesService,\r\n  ],\r\n})\r\nexport class VisualQueryComponent implements OnInit {\r\n  @ViewChild(PlumbEditorComponent) plumbEditor: PlumbEditorComponent;\r\n\r\n  explorer = {\r\n    run: 'run',\r\n    add: 'add'\r\n  };\r\n  activeExplorer = this.explorer.run;\r\n\r\n  constructor(\r\n    private context: Context,\r\n    private route: ActivatedRoute,\r\n    private visualQueryService: VisualQueryService\r\n  ) {\r\n    this.context.init(this.route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.visualQueryService.init();\r\n  }\r\n\r\n  toggleExplorer(explorer: string) {\r\n    this.activeExplorer = (this.activeExplorer === explorer) ? null : explorer;\r\n  }\r\n\r\n  openHelp() {\r\n    window.open('https://go.2sxc.org/visual-query', '_blank');\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n<div class=\"editor-root\">\r\n  <div class=\"editor-side-toolbar\">\r\n    <div class=\"button\" tippy=\"Run\" [ngClass]=\"{ 'active': activeExplorer === explorer.run }\"\r\n      (click)=\"toggleExplorer(explorer.run)\">\r\n      <mat-icon>play_arrow</mat-icon>\r\n    </div>\r\n    <div class=\"button\" tippy=\"Add\" [ngClass]=\"{ 'active': activeExplorer === explorer.add }\"\r\n      (click)=\"toggleExplorer(explorer.add)\">\r\n      <mat-icon>add</mat-icon>\r\n    </div>\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"button\" tippy=\"Help\" (click)=\"openHelp()\">\r\n      <mat-icon>help_outline</mat-icon>\r\n    </div>\r\n  </div>\r\n\r\n  <app-run-explorer [hidden]=\"activeExplorer !== explorer.run\"></app-run-explorer>\r\n\r\n  <app-add-explorer [hidden]=\"activeExplorer !== explorer.add\"></app-add-explorer>\r\n\r\n  <app-plumb-editor></app-plumb-editor>\r\n</div>\r\n"],"x_google_ignoreList":[]}