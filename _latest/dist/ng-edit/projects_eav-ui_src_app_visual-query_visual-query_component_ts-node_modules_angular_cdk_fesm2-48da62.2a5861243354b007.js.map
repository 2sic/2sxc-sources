{"version":3,"file":"projects_eav-ui_src_app_visual-query_visual-query_component_ts-node_modules_angular_cdk_fesm2-48da62.2a5861243354b007.js","mappings":"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","names":["ExportAppService","HttpServiceBaseSignal","getAppInfo","httpResource","url","this","apiUrl","params","appid","appId","zoneId","exportAppUrl","webApiAppRoot","exportForVersionControl","_x","_this","_asyncToGenerator","includeContentGroups","resetAppGuid","withFiles","getStatusPromise","toString","withPortalFiles","apply","arguments","static","__ngFactoryType__","_angular_core__WEBPACK_IMPORTED_MODULE_5__","jDH","factory","ɵfac","webApiViews","ViewsService","getAllOnce","getAllLive","refresh","delete","id","Id","import","file","formData","FormData","append","http","post","export","window","open","getPolymorphismLive","getUsage","guid","newHttpResource","_angular_core__WEBPACK_IMPORTED_MODULE_4__","ArrayHelpers","toggleInArray","item","array","index","indexOf","push","splice","webApiTypeRoot","webApiTypeGet","webApiTypes","webApiTypeScopes","ContentTypesService","HttpServiceBase","retrieveContentType","nameId","getHttpApiUrl","contentTypeId","getType","getTypes","scope","defaultValue","retrieveContentTypesPromise","fetchPromise","getScopesPromise","then","scopesData","scopes","old","Object","keys","map","key","name","value","getScopesSig","scopesSignal","computed","getScopesV2Promise","save","contentType","staticName","NameId","files","createGhost","sourceNameId","MousedownStopPropagationDirective","onMousedown","event","stopPropagation","_angular_core__WEBPACK_IMPORTED_MODULE_0__","FsC","selectors","hostBindings","rf","ctx","i0","$event","findDefByType","dataSources","partAssemblyAndType","find","ds","PartAssemblyAndType","getEndpointLabel","endpoint","getOverlay","label","guiTypes","App","Name","Label","Icon","UiHint","Cache","Filter","Logic","Lookup","Modify","Security","Sort","Source","Target","Unknown","Debug","System","QueryDefinitionService","fetchPipelinePromise","pipelineEntityId","webApiQueryGet","pipelineModel","DataSources","length","#buildDefaultModel","#fixPipelineDataSources","templateDataSources","eavConstants","pipelineDesigner","defaultPipeline","templateDS","dataSource","Description","EntityGuid","EntityId","undefined","VisualDesignerData","Pipeline","StreamWiring","streamWiring","pipelineDataSources","some","pipelineDS","outDataSource","outDs","pipelineDataSource","Top","Left","fetchDataSourcesPromise","webApiQueryDataSources","outFinalTarget","typeNameFilter","input","format","globalParts","split","classFullNameParts","savePipeline","pipeline","webApiQuerySave","pipe","newPipelineModel","runPipelinePromise","top","webApiQueryRun","debugStreamPromise","source","sourceOut","webApiQueryDebugStream","from","out","root_effect_scheduler_DCy1y1b8","ctx_r0","debugStream","sourceName","option_r3","_r2","$implicit","show","QueryResultComponent_For_20_Conditional_2_Template","QueryResultComponent_For_20_Conditional_3_Template","param_r4","QueryResultComponent_Conditional_24_div_1_Template","QueryResultComponent_Conditional_24_For_5_Template","parameters","source_r5","Definition","config_r6","QueryResultComponent_For_39_Conditional_2_Template","QueryResultComponent_For_39_For_10_Template","Guid","Type","Configuration","Error","stream_r7","SourceOut","TargetIn","Count","QueryResultComponent","constructor","dialogData","dialog","visualQueryService","ngOnInit","Params","filter","el","testParams","TestParameters","concat","timeUsed","result","QueryTimer","Milliseconds","ticksUsed","Ticks","optionsForTop","Query","sources","Sources","streams","Streams","closeDialog","close","original","runPipeline","MAT_DIALOG_DATA","i1","i2","debug_node_JnOYh9kg","VBU","decls","vars","consts","template","QueryResultComponent_Conditional_4_Template","QueryResultComponent_div_13_Template","QueryResultComponent_Conditional_16_Template","QueryResultComponent_Conditional_17_Template","QueryResultComponent_For_20_Template","QueryResultComponent_Conditional_24_Template","QueryResultComponent_div_26_Template","QueryResultComponent_For_39_Template","QueryResultComponent_div_42_Template","QueryResultComponent_For_55_Template","MatButtonModule","i3","MatIconModule","i4","MatTabsModule","i5","JsonPipe","KeyValuePipe","styles","StreamErrorResultComponent","errorData","openInsights","$2sxc","MatDialogActions","VisualQueryStateService","ServiceBase","#contentTypesSvc","#metadataSvc","#queryDefSvc","#dialogRoute","#titleSvc","#pipelineId","#refreshPipeline","#refreshDataSourceConfigs","snackBar","matDialog","viewContainerRef","zone","changeDetectorRef","super","transient","MetadataService","DialogRoutingService","Title","signal","dataSourceConfigs","putEntityCountOnConnections$","Subject","parseInt","getParam","ngOnDestroy","complete","init","#fetchDataSources","#fetchPipeline","#attachKeyboardSave","doOnDialogClosed","editPipelineEntity","#savePipeline","form","items","EditPrep","editId","formUrl","convertFormToUrl","navRelative","saveAndRun","run","showDataSourceDetails","showDetails","query","cloneDeep","designerData","JsonHelpers","tryParse","ShowDataSourceDetails","JSON","stringify","set","addDataSource","removeDataSource","pipelineDataSourceGuid","connections","streamsOut","StreamsOut","renameDataSource","changeDataSourceDescription","description","changeConnections","changeDataSourcePosition","position","#calculateDataSourceConfigs","forEach","Metadata","metadataItem","entries","attributeName","attributeValue","includes","Array","isArray","editDataSource","contentTypeName","ContentType","targetType","keyType","metadata","entity","getMetadataPromise","Items","subscribe","next","duration","newMetadata","error","callback","pipelineResult","queryResult","#showQueryResult","console","warn","setTimeout","catch","stream","#showStreamErrorResult","pipelineId","streamResult","_error","refreshPipeline","refreshDataSourceConfigs","showSnackBar","setTitle","autoFocus","backdropClass","closeOnNavigation","data","panelClass","markForCheck","ErrorData","runOutsideAngular","subscriptions","add","fromEvent","snapshot","firstChild","isCtrlS","preventDefault","dataSource_r6","_r5","ctx_r1","AddExplorerComponent_Conditional_0_For_6_Conditional_5_For_2_Template","trackDataSources","group_r4","_r3","toggleItem","AddExplorerComponent_Conditional_0_For_6_Conditional_5_Template","toggledItems","_r1","toggleDifficulty","AddExplorerComponent_Conditional_0_For_6_Template","trackGroups","sorted","AddExplorerComponent","#difficulties","#difficulty","dataSourceDifficulties","default","filterAndSortDataSources","maxDifficulty","filtered","Difficulty","sort","a","b","toLocaleLowerCase","localeCompare","type","PrimaryType","difficulty","checked","advanced","AddExplorerComponent_Conditional_0_Template","MatSlideToggleModule","TippyDirective","dataSrcIdPrefix","domIdOfGuid","guidOfDomId","domId","replace","logSpecs","all","ConnectionLineColors","log","classLog","#lineCount","#linePaintDefault","stroke","strokeWidth","outlineStroke","outlineWidth","#lineColors","#maxCols","#uuidColorMap","nextLinePaintStyle","uuid","#nextLineColor","eventConnectionDetached","eventConnectionAttached","ConnectionsManager","instance","endpointsSvc","onConnectionsChanged","bulkDelete","setup","bind","info","handleDetached","handleAttached","getAll","getAllConnections","connection","From","sourceId","Out","endpoints","To","targetId","In","l","fnIf","end","domDataSource","target","targetEndpoint","getInfo","deleteEndpoint","deleteConnection","fireEvent","targetEndpointOverlay","targetLabel","getLabel","targetHasSameLabel","getEndpoints","ep","canvas","classList","contains","setLabel","Math","floor","random","RenameStreamComponent_Conditional_9_Conditional_4_Template","RenameStreamComponent_Conditional_9_Conditional_5_Template","isSource","pipelineResultExists","controls","touched","errors","required","scopeOption_r3","RenameStreamComponent_Conditional_10_Conditional_0_For_5_Template","scopeOptions","labelOption_r4","RenameStreamComponent_Conditional_10_Conditional_4_For_2_Template","labelOptions","RenameStreamComponent_Conditional_10_Conditional_0_Template","RenameStreamComponent_Conditional_10_Conditional_4_Template","RenameStreamComponent_Conditional_10_Conditional_5_Template","toggleGuidedLabel","RenameStreamComponent_Conditional_10_Conditional_13_Template","advancedMode","guidedLabel","_c0","toggleAdvancedMode","RenameStreamComponent","BaseComponent","hostClass","#buildForm","rename","formValue","getRawValue","UntypedFormGroup","UntypedFormControl","Validators","valueChanges","startWith","distinctUntilChanged","values","Scope","patchValue","s","o","hostVars","RenameStreamComponent_Conditional_9_Template","RenameStreamComponent_Conditional_10_Template","RenameStreamComponent_Conditional_13_Template","valid","FormsModule","ReactiveFormsModule","MatFormFieldModule","i6","MatInputModule","i7","MatSelectModule","i8","MatOptionModule","NgClass","i9","FieldHintComponent","ClickStopPropagationDirective","encapsulation","getEndpointOverlays","getEndpointInfo","buildSourceDef","buildTargetDef","EndpointDefinitionsService","renameDialogParts","#getEndpointOverlays","r","location","cssClass","endpointName","isDynamic","trimmed","trim","endsWith","substring","dsGuid","style","sourceEndpoint","paintStyle","fill","radius","maxConnections","anchor","faces","overlays","events","click","endpointOrOverlay","onChangeLabel","isTarget","dropOptions","hoverClass","activeClass","AllowEdit","overlay","width","afterClosed","newLabel","addEndpoint","reOrientAllLabels","updateAfterChanges","wireHasConnection","mirrorEndpoints","fields","EndpointsManager","endpointDefs","queryData","#isDoingUpdate","isIn","queryDs","extraStyling","fnIfInList","dsDefinition","connectionList","hasDynamic","endpointInfo","#wireHasConnection","model","enabled","wireExists","wire","isDoing","#mirrorEndpoints","#reOrientAllLabels","repaintEverything","def","OutMode","d","inPoints","outPoints","#getEndpointsByType","inLabels","p","point","outLabels","missingInOut","inP","outP","outWithoutIn","findDataSourceAndDom","selectEndpoints","element","each","#reorientListOfEndpoints","countExceeded","labels","join","addClass","removeClass","removeAllEndpoints","dataSourceGuid","elementId","batch","JsPlumbInstanceManager","jsPlumbRoot","lineColors","jsPlumb","getInstance","createInstanceDefaults","container","Container","Connector","curviness","PaintStyle","HoverPaintStyle","destroy","reset","unbindContainer","putEntityCountOnConnections","LinesDecorator","onDebugStream","addEntityCount","outDomId","inDomId","fromUuid","toUuid","getEndpoint","getUuid","QueryDataManager","findDomAndDef","dsSet","dsDef","definition","sourceElementId","querySelector","pipeDs","initWirings","ensureWireEndpointExists","findDataSourceInDom","WiringsHelper","plumber","wiringsRaw","wirings","outPointDomId","inPointDomId","wireDetails","w","#ensureWireEndpointExists","#connect","connect","uuids","message","to","endpointId","sourceGuid","#findDataSourceInDom","initDomDataSources","Plumber","#instance","#endpointDefs","#instanceManager","onConnectionsChangedParent","onDragend","#onConnectionsChanged","lineDecorator","#initDomDataSources","getStreamsOut","domDs","draggable","grid","stop","queryDsGuid","finalPos","outCount","dynOut","makeSource","inCount","in","targetEndpointUnlimited","makeTarget","dataSource_r3","ctx_r3","configureDataSource","openHelp","typeInfos","HelpLink","_r6","remove","config_r7","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_For_3_Template","visQuerySvc","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_5_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_6_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_8_Template","editName","editDescription","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_24_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_25_Template","_c2","Width","_c3","tmp_16_0","EnableConfig","isOutDataSource","tmp_24_0","getTypeName","DynamicOut","DynamicIn","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Template","PlumbEditorComponent_Conditional_0_Conditional_2_Template","hardReset","ngAfterViewInit","PlumbEditorComponent","#plumber","#scriptLoaded$","#queryDefinitionSvc","BehaviorSubject","calculateTypeInfos","typeInfo","outMode","loadScripts","test","src","domDataSourcesLoaded$","domDataSourcesRef","changes","combineLatest","scriptLoaded","domDataSourcesLoaded","domRootRef","nativeElement","TypeNameForUi","confirm","newName","prompt","newDescription","viewQuery","PlumbEditorComponent_Conditional_0_Template","NgStyle","param_r3","RunExplorerComponent_Conditional_0_Conditional_20_For_2_Template","tmp_2_0","vsSvc","RunExplorerComponent_Conditional_0_Conditional_24_For_2_Template","visualDesignerDataSig","RunExplorerComponent_Conditional_0_Conditional_26_Conditional_0_For_8_Template","warningSig","RunExplorerComponent_Conditional_0_Conditional_26_Conditional_0_Template","saveAndRunQuery","editPipeline","openParamsHelp","RunExplorerComponent_Conditional_0_Conditional_20_Template","RunExplorerComponent_Conditional_0_Conditional_24_Template","RunExplorerComponent_Conditional_0_Conditional_25_Template","RunExplorerComponent_Conditional_0_Conditional_26_Template","RunExplorerComponent_Conditional_0_Conditional_27_Template","openRestApi","tmp_1_0","RunExplorerComponent","#dialogRouter","context","calculateWarnings","warnings","queryParams","param","midMatch","exec","testMid","urlMid","moduleId","queryGuid","GoToDevRest","getUrlQueryDialog","RunExplorerComponent_Conditional_0_Template","VisualQueryComponent","route","explorer","activeExplorer","toggleExplorer","RouterOutlet","__WEBPACK_DEFAULT_EXPORT__","getPrototype","overArg","getPrototypeOf","isEscape","ctrlKey","metaKey","arrayEach","iteratee","FocusKeyManager","ListKeyManager","_origin","setFocusOrigin","origin","setActiveItem","activeItem","focus","objectCreate","create","object","proto","isObject","prototype","webApiAppPartsRoot","ImportAppPartsService","importAppParts","resetApp","_angular_core__WEBPACK_IMPORTED_MODULE_3__","toBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","readAsText","ExportAppPartsService","getContentInfoLiveParam","exportParts","contentTypeIds","entityIds","templateIds","ImportAppService","importApp","changedName","retryOnDuplicate","switchMap","Messages","MessageType","FileUploadMessageTypes","Warning","folderName","Text","of","getAllSig","getAllRes","importQuery","clonePipeline","update","PipelinesService","webApiEntityList","initial","res","obs","fileBase64","AppId","ContentBase64","success","Success","clonePipelinePromise","_angular_core__WEBPACK_IMPORTED_MODULE_9__"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/shared/helpers/array.helpers.ts","./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/shared/directives/mousedown-stop-propagation.directive.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/datasource.helpers.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.helpers.ts","./projects/eav-ui/src/app/visual-query/services/query-definition.service.ts","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.html","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.html","./projects/eav-ui/src/app/visual-query/services/visual-query.service.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.html","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumber-constants.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/connection-line-colors.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/connections-manager.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/endpoint-definitions.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/endpoints-manager.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/jsplumb-instance-manager.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/lines-decorator.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/query-data-manager.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/wirings.helper.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumber.helper.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.html","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.html","./node_modules/lodash-es/_getPrototype.js","./projects/eav-ui/src/app/edit/dialog/main/keyboard-shortcuts.ts","./node_modules/lodash-es/_arrayEach.js","./node_modules/@angular/cdk/fesm2022/focus-key-manager-CPmlyB_c.mjs","./node_modules/lodash-es/_baseCreate.js","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts","./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts"],"sourcesContent":["import { httpResource } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { HttpServiceBaseSignal } from '../../shared/services/http-service-base-signal';\r\nimport { AppInfo } from '../models/app-info.model';\r\n\r\nconst webApiAppRootStatistics = 'admin/app/Statistics';\r\nconst webApiAppRootSaveData = 'admin/app/SaveData';\r\n\r\n\r\n@Injectable()\r\nexport class ExportAppService extends HttpServiceBaseSignal {\r\n\r\n  getAppInfo() {\r\n    return httpResource<AppInfo>(() => ({\r\n      url: this.apiUrl(webApiAppRootStatistics),\r\n      params: { appid: this.appId, zoneId: this.zoneId },\r\n    }));\r\n  }\r\n\r\n  /** Generate the export app path. It can be extended with additional parameters */\r\n  exportAppUrl() {\r\n    return `${this.apiUrl(`${webApiAppRoot}Export`)}?appId=${this.appId}&zoneId=${this.zoneId}`;\r\n  }\r\n  async exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }): Promise<number> {\r\n    return this.getStatusPromise(webApiAppRootSaveData, {\r\n      params: {\r\n        appid: this.appId,\r\n        zoneId: this.zoneId,\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n}\r\n","import { httpResource } from '@angular/common/http';\r\nimport { Injectable, Signal } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBaseSignal } from '../../shared/services/http-service-base-signal';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViews = 'admin/view/all';\r\nconst webApiViewDelete = 'admin/view/delete';\r\nconst webApiViewImport = 'admin/view/import';\r\nconst webApiViewPolymorph = 'admin/view/polymorphism';\r\nconst webApiViewUsage = 'admin/view/usage';\r\nconst webApiJson = 'admin/view/json';\r\n\r\n@Injectable()\r\nexport class ViewsService extends HttpServiceBaseSignal {\r\n\r\n  getAllOnce() {\r\n    return httpResource<View[]>(() => {\r\n      return ({\r\n        url: this.apiUrl(webApiViews),\r\n        params: { appId: this.appId }\r\n      });\r\n    });\r\n  }\r\n\r\n  getAllLive(refresh: Signal<unknown>) {\r\n    return httpResource<View[]>(() => {\r\n      refresh();\r\n      return ({\r\n        url: this.apiUrl(webApiViews),\r\n        params: { appId: this.appId }\r\n      });\r\n    });\r\n  }\r\n\r\n  async delete(id: number): Promise<number> {\r\n    return this.getStatusPromise(webApiViewDelete, {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.apiUrl(webApiJson)\r\n      + '?appId=' + this.appId\r\n      + '&viewId=' + id;\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphismLive(refresh: Signal<unknown>) {\r\n    return httpResource<Polymorphism>(() => {\r\n      refresh();\r\n      return ({\r\n        url: this.apiUrl(webApiViewPolymorph),\r\n        params: { appId: this.appId }\r\n      });\r\n    });\r\n  }\r\n  getUsage(guid: string) {\r\n    return this.newHttpResource<ViewUsage[]>(() => ({\r\n      url: this.apiUrl(webApiViewUsage),\r\n      params: { appId: this.appId, guid: guid }\r\n    }));\r\n  }\r\n}\r\n","export class ArrayHelpers {\r\n  /**\r\n   * Toggles an item in an array. If the item is not in the array, it is added. If it is in the array, it is removed.\r\n   * @param item The item to toggle\r\n   * @param array The array to toggle the item in\r\n   */\r\n  static toggleInArray<T>(item: T, array: T[]): T[] {\r\n    const index = array.indexOf(item);\r\n    if (index === -1) {\r\n      array.push(item);\r\n    } else {\r\n      array.splice(index, 1);\r\n    }\r\n    return array;\r\n  }\r\n\r\n  // probably better: Array.from(new Set(merged));\r\n  // static distinct<T extends unknown>(array: T[]): T[] {\r\n  //   return array.filter(onlyUnique);\r\n  // }\r\n\r\n}\r\n\r\n// function onlyUnique<T extends unknown>(value: T, index: number, array: T[]): boolean {\r\n//   return array.indexOf(value) === index;\r\n// }","import { httpResource } from '@angular/common/http';\r\nimport { computed, Injectable, Signal } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\n\r\n// We should list all the \"full\" paths here, so it's easier to find when searching for API calls\r\nexport const webApiTypeRoot = 'admin/type/';\r\nconst webApiTypeGet = 'admin/type/get';\r\nconst webApiTypes = 'admin/type/list';\r\nconst webApiTypeScopes = 'admin/type/scopes';\r\nconst webApiTypeSave = 'admin/type/save';\r\nconst webApiTypeDelete = 'admin/type/delete';\r\nconst webApiTypeImport = 'admin/type/import';\r\nconst webApiTypeAddGhost = 'admin/type/addghost';\r\n@Injectable()\r\nexport class ContentTypesService extends HttpServiceBase {\r\n\r\n  // TODO: @2dg, ask 2dm \r\n  // content-export.component.ts\r\n  // content-import.component.ts\r\n  // data.component.ts\r\n  retrieveContentType(nameId: string) {\r\n    return this.getHttpApiUrl<ContentType>(webApiTypeGet, {\r\n      params: { appId: this.appId, contentTypeId: nameId }\r\n    });\r\n  }\r\n\r\n  getType(nameId: string) {\r\n    return httpResource<ContentType>(() => ({\r\n      url: this.apiUrl(webApiTypeGet),\r\n      params: { appId: this.appId, contentTypeId: nameId }\r\n    }));\r\n  }\r\n\r\n  getTypes(scope: Signal<string>) {\r\n    return httpResource<ContentType[]>(() => ({\r\n      url: this.apiUrl(webApiTypes),\r\n      params: { appId: this.appId, scope: scope() }\r\n    }), {defaultValue: []});\r\n  }\r\n\r\n  retrieveContentTypesPromise(scope: string): Promise<ContentType[]> {\r\n    return this.fetchPromise<ContentType[]>(webApiTypes, {\r\n      params: { appId: this.appId, scope }\r\n    });\r\n  }\r\n\r\n  getScopesPromise(): Promise<ScopeOption[]> {\r\n    return this.fetchPromise<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(webApiTypeScopes, {\r\n      params: { appId: this.appId }\r\n    }).then(scopesData => {\r\n      const scopes = scopesData.old;\r\n      const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({\r\n        name: scopes[key],\r\n        value: key,\r\n      }));\r\n      return scopeOptions;\r\n    });\r\n  }\r\n\r\n  getScopesSig() {\r\n    const scopesSignal = httpResource<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(() => ({\r\n      url: this.apiUrl(webApiTypeScopes),\r\n      params: { appid: this.appId },\r\n    }));\r\n\r\n    const scopeOptionsSignal = computed(() => {\r\n      // Access the value property directly without calling scopesSignal as a function\r\n      const value = scopesSignal.value;\r\n      const scopesData = value();\r\n\r\n      // Add null/undefined check here\r\n      if (!scopesData || !scopesData.old) {\r\n        return []; // Return an empty array or handle this case as appropriate\r\n      }\r\n\r\n      const scopes = scopesData.old;\r\n      return Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n    });\r\n\r\n    return scopeOptionsSignal;\r\n  }\r\n\r\n  getScopesV2Promise(): Promise<ScopeDetailsDto[]> {\r\n    return this.fetchPromise<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(webApiTypeScopes, {\r\n      params: { appId: this.appId }\r\n    }).then(scopesData => scopesData.scopes);\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeSave), contentType, {\r\n      params: { appid: this.appId },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeDelete), {\r\n      params: { appid: this.appId, staticName: contentType.NameId }, // TODO: @2pp - replace staticName with NameId\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  createGhost(sourceNameId: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeAddGhost), null, {\r\n      params: { appid: this.appId, sourceNameId },\r\n    });\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appMousedownStopPropagation]',\r\n})\r\nexport class MousedownStopPropagationDirective {\r\n  @HostListener('mousedown', ['$event'])\r\n  onMousedown(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import { DataSource } from '../models';\r\nimport { JsPlumbEndpoint } from './jsplumb.models';\r\n\r\nexport function findDefByType(dataSources: DataSource [], partAssemblyAndType: string): DataSource | undefined {\r\n  return dataSources.find(ds => ds.PartAssemblyAndType === partAssemblyAndType)\r\n}\r\n\r\nexport function getEndpointLabel(endpoint: JsPlumbEndpoint) : string {\r\n  return endpoint.getOverlay('endpointLabel').label\r\n}","import { DataSource, PipelineDataSource } from '../models';\r\nimport { findDefByType } from './datasource.helpers';\r\nimport { GuiTypes, TypeInfo, TypeInfos } from './plumb-editor.models';\r\n\r\nexport const guiTypes: GuiTypes = {\r\n  App: { Name: 'App', Label: 'App DataSources', Icon: 'star', UiHint: 'DataSources from the current App' },\r\n  Cache: { Name: 'Cache', Icon: 'history', UiHint: 'Caching of data' },\r\n  Filter: { Name: 'Filter', Icon: 'filter_list', UiHint: 'Filter data - usually returning less items than came in' },\r\n  Logic: { Name: 'Logic', Icon: 'share', UiHint: 'Logic operations - usually choosing between different streams' },\r\n  Lookup: { Name: 'Lookup', Icon: 'search', UiHint: 'Lookup operation - usually looking for other data based on a criteria' },\r\n  Modify: { Name: 'Modify', Icon: 'edit_attributes', UiHint: 'Modify data - usually changing, adding or removing values' },\r\n  Security: { Name: 'Security', Icon: 'account_circle', UiHint: 'Security - usually limit what the user sees based on his identity' },\r\n  Sort: { Name: 'Sort', Icon: 'sort', UiHint: 'Sort the items' },\r\n  Source: { Name: 'Source', Icon: 'cloud_upload', UiHint: 'Source of new data - usually SQL, CSV or similar' },\r\n  Target: { Name: 'Target', Icon: 'adjust', UiHint: 'Target - usually just a destination of data' },\r\n  Unknown: { Name: 'Unknown', Icon: 'fiber_manual_record', UiHint: 'Unknown type' },\r\n  Debug: { Name: 'Debug', Icon: 'bug_report', UiHint: 'Debugging Tools' },\r\n  System: { Name: 'System', Icon: 'military_tech', UiHint: 'System Data' },\r\n};\r\n\r\nexport function calculateTypeInfos(pipelineDataSources: PipelineDataSource[], dataSources: DataSource[]) {\r\n  const typeInfos: TypeInfos = {};\r\n\r\n  for (const pipelineDataSource of pipelineDataSources) {\r\n    const ds = findDefByType(dataSources, pipelineDataSource.PartAssemblyAndType);\r\n    const typeInfo: TypeInfo = (ds)\r\n      ? {\r\n        ...(ds.PrimaryType ? guiTypes[ds.PrimaryType] : guiTypes.Unknown),\r\n\r\n        DynamicIn: ds.DynamicIn ?? false,\r\n        DynamicOut: ds.OutMode != 'static',\r\n        Icon: ds.Icon,\r\n        UiHint: ds.UiHint,\r\n        HelpLink: ds.HelpLink,\r\n        outMode: ds.OutMode,\r\n        // ...(ds.Icon ? { Icon: ds.Icon } : {}),\r\n        // ...(ds.UiHint ? { UiHint: ds.UiHint } : {}),\r\n        // ...(ds.OutMode != null ? { OutMode: ds.OutMode } : {}),\r\n        // ...(ds.HelpLink != null ? { HelpLink: ds.HelpLink } : {}),\r\n        ...(ds.EnableConfig != null ? { EnableConfig: ds.EnableConfig } : {}),\r\n      } satisfies TypeInfo\r\n      : {\r\n        ...guiTypes.Unknown,\r\n        DynamicOut: false,\r\n        DynamicIn: false,\r\n        outMode: 'static',\r\n      };\r\n      // console.log(\"2dm test\", pipelineDataSource, ds, typeInfo);\r\n    \r\n    typeInfos[pipelineDataSource.EntityGuid] = typeInfo;\r\n  }\r\n\r\n  return typeInfos;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { webApiQueryDataSources, webApiQueryDebugStream, webApiQueryGet, webApiQueryRun, webApiQuerySave } from '../../app-administration/services';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { HttpServiceBaseSignal } from '../../shared/services/http-service-base-signal';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult } from '../models';\r\nimport { findDefByType } from '../plumb-editor/datasource.helpers';\r\n\r\n@Injectable()\r\nexport class QueryDefinitionService extends HttpServiceBaseSignal {\r\n\r\n  fetchPipelinePromise(pipelineEntityId: number, dataSources: DataSource[]): Promise<PipelineModel> {\r\n    return this.fetchPromise<PipelineModel>(webApiQueryGet, {\r\n      params: { appId: this.appId, id: pipelineEntityId.toString() }\r\n    }).then(pipelineModel => {\r\n      // if pipeline is new, populate it with default model\r\n      if (!pipelineModel.DataSources.length) {\r\n        this.#buildDefaultModel(pipelineModel, dataSources);\r\n      }\r\n      this.#fixPipelineDataSources(pipelineModel.DataSources);\r\n      return pipelineModel;\r\n    })\r\n  }\r\n\r\n  #buildDefaultModel(pipelineModel: PipelineModel, dataSources: DataSource[]) {\r\n    const templateDataSources = eavConstants.pipelineDesigner.defaultPipeline.dataSources;\r\n    for (const templateDS of templateDataSources) {\r\n      const dataSource = findDefByType(dataSources, templateDS.PartAssemblyAndType);\r\n      const pipelineDataSource: PipelineDataSource = {\r\n        Description: '',\r\n        EntityGuid: templateDS.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: dataSource.Name,\r\n        PartAssemblyAndType: templateDS.PartAssemblyAndType,\r\n        VisualDesignerData: templateDS.VisualDesignerData,\r\n      };\r\n      pipelineModel.DataSources.push(pipelineDataSource);\r\n    }\r\n\r\n    pipelineModel.Pipeline.StreamWiring = eavConstants.pipelineDesigner.defaultPipeline.streamWiring;\r\n  }\r\n\r\n  #fixPipelineDataSources(pipelineDataSources: PipelineDataSource[]) {\r\n    const outDataSourceExists = pipelineDataSources.some(\r\n      pipelineDS => pipelineDS.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    );\r\n    if (!outDataSourceExists) {\r\n      const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n      const outDsConst: PipelineDataSource = {\r\n        Description: outDs.Description,\r\n        EntityGuid: outDs.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: outDs.Name,\r\n        PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n        VisualDesignerData: outDs.VisualDesignerData,\r\n      };\r\n      pipelineDataSources.push(outDsConst);\r\n    }\r\n\r\n    for (const pipelineDataSource of pipelineDataSources) {\r\n      pipelineDataSource.VisualDesignerData ??= { Top: 50, Left: 50 };\r\n    }\r\n  }\r\n\r\n  fetchDataSourcesPromise(): Promise<DataSource[]> {\r\n    return this.fetchPromise<DataSource[]>(webApiQueryDataSources, {\r\n      params: {\r\n        appid: this.appId,\r\n        zoneId: this.zoneId,\r\n      },\r\n    }).then(dataSources => {\r\n      // Add the final target DataSource to the list of DataSources\r\n      dataSources.push(eavConstants.pipelineDesigner.outFinalTarget);\r\n      return dataSources;\r\n    })\r\n  };\r\n\r\n  typeNameFilter(input: string, format: 'className' | 'classFullName') {\r\n    const globalParts = input.split(', ');\r\n\r\n    switch (format) {\r\n      case 'classFullName':\r\n        const classFullName = globalParts[0];\r\n        return classFullName;\r\n      case 'className':\r\n        const classFullNameParts = globalParts[0].split('.');\r\n        const className = classFullNameParts[classFullNameParts.length - 1];\r\n        return className;\r\n      default:\r\n        return input;\r\n    }\r\n  }\r\n\r\n  /** Save the current query and reload entire definition as returned from server */\r\n  savePipeline(pipelineModel: PipelineModel) {\r\n    const pipeline = pipelineModel.Pipeline;\r\n    const dataSources = pipelineModel.DataSources;\r\n\r\n    return this.http.post<PipelineModel>(\r\n      webApiQuerySave,\r\n      { pipeline, dataSources },\r\n      { params: { appId: this.appId, Id: pipeline.EntityId.toString() } }\r\n    ).pipe(\r\n      map(newPipelineModel => {\r\n        this.#fixPipelineDataSources(newPipelineModel.DataSources);\r\n        return newPipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  runPipelinePromise(id: number, top: number): Promise<PipelineResult> {\r\n    return this.fetchPromise<PipelineResult>(webApiQueryRun, {\r\n      params: { appId: this.appId, id: id.toString(), top: top.toString() }\r\n    });\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  debugStreamPromise(id: number, source: string, sourceOut: string, top: number): Promise<PipelineResult> {\r\n    return this.fetchPromise<PipelineResult>(webApiQueryDebugStream, {\r\n      params: { appId: this.appId, id: id.toString(), from: source, out: sourceOut, top: top.toString() }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      Query Results\r\n      @if (debugStream) {\r\n        for Stream: \"{{ debugStream.name }}\" on Source: \"{{ debugStream.sourceName }}\"\r\n      }\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"eav-dialog-content\">\r\n    <p>\r\n      The Full result was logged to the Browser Console. Further down you'll find more debug-infos. Executed in {{ timeUsed }}ms ({{\r\n        ticksUsed\r\n      }}\r\n      ticks)\r\n    </p>\r\n\r\n    <mat-tab-group dynamicHeight color=\"accent\" class=\"eav-tab-group\">\r\n      <!-- Results -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Results\">\r\n          <span>Results</span>\r\n        </div>\r\n        <div class=\"eav-tab-description\">\r\n          <div>\r\n            @if (top === 0) {\r\n              Showing All results\r\n            }\r\n            @if (top !== 0) {\r\n              Showing top {{ top }} results\r\n            }\r\n          </div>\r\n          <div>\r\n            @for (option of optionsForTop; track option) {\r\n              <button mat-button (click)=\"show(option)\">\r\n                Show\r\n                @if (option === 0) {\r\n                  All\r\n                }\r\n                @if (option !== 0) {\r\n                  {{ option }}\r\n                }\r\n              </button>\r\n            }\r\n          </div>\r\n        </div>\r\n        <pre class=\"eav-pre-scroll\">{{ result | json }}</pre>\r\n      </mat-tab>\r\n\r\n      @if (parameters?.length) {\r\n        <!-- Parameters -->\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Parameters\">\r\n            <span>Parameters</span>\r\n          </div>\r\n\r\n          <div class=\"eav-tab-content\">\r\n            <ul>\r\n              @for (param of parameters; track param) {\r\n                <li>{{ param }}</li>\r\n              }\r\n            </ul>\r\n          </div>\r\n        </mat-tab>\r\n      }\r\n\r\n      <!-- Sources -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Sources\">\r\n          <span>Sources</span>\r\n        </div>\r\n\r\n        <div class=\"eav-tab-content\">\r\n          <table>\r\n            <tr>\r\n              <th>Name and Guid</th>\r\n              <th>Type</th>\r\n              <th>Configuration</th>\r\n              <th>Error</th>\r\n            </tr>\r\n            @for (source of sources | keyvalue; track source) {\r\n              <tr>\r\n                <td>\r\n                  @if (source.value.Definition?.Name) {\r\n                    <div>{{ source.value.Definition?.Name }}</div>\r\n                  }\r\n                  <pre>{{ source.value.Guid }}</pre>\r\n                </td>\r\n                <td>{{ source.value.Type }}</td>\r\n                <td>\r\n                  <ol>\r\n                    @for (config of source.value.Configuration | keyvalue; track config) {\r\n                      <li>\r\n                        <b>{{ config.key }}</b\r\n                        >=<em>{{ config.value }}</em>\r\n                      </li>\r\n                    }\r\n                  </ol>\r\n                </td>\r\n                <td>{{ source.value.Error }}</td>\r\n              </tr>\r\n            }\r\n          </table>\r\n        </div>\r\n      </mat-tab>\r\n\r\n      <!-- Streams -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Streams\">\r\n          <span>Streams</span>\r\n        </div>\r\n\r\n        <div class=\"eav-tab-content\">\r\n          <table>\r\n            <tr>\r\n              <th>Source</th>\r\n              <th>Target</th>\r\n              <th>Items</th>\r\n              <th>Error</th>\r\n            </tr>\r\n            @for (stream of streams; track stream) {\r\n              <tr>\r\n                <td>\r\n                  <pre>{{ stream.Source + ':' + stream.SourceOut }}</pre>\r\n                </td>\r\n                <td>\r\n                  <pre>{{ stream.Target + ':' + stream.TargetIn }}</pre>\r\n                </td>\r\n                <td>{{ stream.Count }}</td>\r\n                <td>{{ stream.Error }}</td>\r\n              </tr>\r\n            }\r\n          </table>\r\n        </div>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n","import { JsonPipe, KeyValuePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { DebugStreamInfo, PipelineResultQuery, PipelineResultSources, PipelineResultStream } from '../models';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { QueryResultDialogData } from './query-result.models';\r\n\r\n@Component({\r\n    selector: 'app-query-result',\r\n    templateUrl: './query-result.component.html',\r\n    styleUrls: ['./query-result.component.scss'],\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatTabsModule,\r\n        JsonPipe,\r\n        KeyValuePipe,\r\n    ]\r\n})\r\nexport class QueryResultComponent implements OnInit {\r\n  parameters: string[];\r\n  timeUsed: number;\r\n  ticksUsed: number;\r\n  top: number;\r\n  optionsForTop: number[];\r\n  result: PipelineResultQuery;\r\n  debugStream: DebugStreamInfo;\r\n  sources: PipelineResultSources;\r\n  streams: PipelineResultStream[];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: QueryResultDialogData,\r\n    private dialog: MatDialogRef<QueryResultComponent>,\r\n    private visualQueryService: VisualQueryStateService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const pipeline = this.visualQueryService.pipelineModel().Pipeline;\r\n    const params = (pipeline.Params?.split('\\n') ?? []).filter(el => !!el);\r\n    const testParams = (pipeline.TestParameters?.split('\\n') ?? []).filter(el => !!el);\r\n    this.parameters = [].concat(params, testParams);\r\n    this.timeUsed = this.dialogData.result.QueryTimer.Milliseconds;\r\n    this.ticksUsed = this.dialogData.result.QueryTimer.Ticks;\r\n    this.top = this.dialogData.top;\r\n    this.optionsForTop = [25, 100, 1000, 0];\r\n    this.result = this.dialogData.result.Query;\r\n    this.debugStream = this.dialogData.debugStream;\r\n    this.sources = this.dialogData.result.Sources;\r\n    this.streams = this.dialogData.result.Streams;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  show(top: number) {\r\n    if (top === this.top) return;\r\n\r\n    if (this.debugStream) {\r\n      this.visualQueryService.debugStream(this.debugStream.original, top);\r\n    } else {\r\n      this.visualQueryService.runPipeline(top);\r\n    }\r\n\r\n    this.closeDialog();\r\n  }\r\n}\r\n","import { JsonPipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MAT_DIALOG_DATA, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { StreamErrorData } from '../models';\r\nimport { StreamErrorResultDialogData } from './stream-error-result.models';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n    selector: 'app-stream-error-result',\r\n    templateUrl: './stream-error-result.component.html',\r\n    styleUrls: ['./stream-error-result.component.scss'],\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatDialogActions,\r\n        JsonPipe,\r\n    ]\r\n})\r\nexport class StreamErrorResultComponent implements OnInit {\r\n  errorData: StreamErrorData;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: StreamErrorResultDialogData,\r\n    private dialog: MatDialogRef<StreamErrorResultComponent>,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.errorData = this.dialogData.errorData;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/logs?key=web-api-query'), '_blank');\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Stream Error Results</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <pre>{{ errorData | json }}</pre>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button class=\"eav-button__with-icon\" tippy=\"Open 2sxc Insights\" (click)=\"openInsights()\">\r\n      <mat-icon class=\"eav-icon\">speed</mat-icon>\r\n      <span>Insights</span>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Injectable, NgZone, OnDestroy, signal, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { filter, fromEvent, Subject } from 'rxjs';\r\nimport { ContentTypesService } from '../../app-administration/services/content-types.service';\r\nimport { MetadataService } from '../../permissions/services/metadata.service';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep } from '../../shared/models/edit-form.model';\r\nimport { QueryDefinitionService } from './query-definition.service';\r\n// tslint:disable-next-line:max-line-length\r\nimport { transient } from '../../../../../core';\r\nimport { isCtrlS } from '../../edit/dialog/main/keyboard-shortcuts';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { ServiceBase } from '../../shared/services/service-base';\r\nimport { DataSource, DataSourceConfig, DataSourceConfigs, DebugStreamInfo, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { findDefByType } from '../plumb-editor/datasource.helpers';\r\nimport { QueryResultComponent } from '../query-result/query-result.component';\r\nimport { QueryResultDialogData } from '../query-result/query-result.models';\r\nimport { StreamErrorResultComponent } from '../stream-error-result/stream-error-result.component';\r\nimport { StreamErrorResultDialogData } from '../stream-error-result/stream-error-result.models';\r\n\r\n/**\r\n * Service containing the state for the visual query.\r\n * It's shared, so should not be used with transient(...);\r\n */\r\n@Injectable()\r\nexport class VisualQueryStateService extends ServiceBase implements OnDestroy {\r\n\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n  #metadataSvc = transient(MetadataService);\r\n  #queryDefSvc = transient(QueryDefinitionService);\r\n  #dialogRoute = transient(DialogRoutingService);\r\n  #titleSvc = transient(Title);\r\n\r\n  pipelineModel = signal<PipelineModel>(null);\r\n  dataSources = signal<DataSource[]>(null);\r\n  dataSourceConfigs = signal<DataSourceConfigs>({});\r\n\r\n  putEntityCountOnConnections$ = new Subject<PipelineResult>();\r\n\r\n  queryResult?: PipelineResult;\r\n\r\n  #pipelineId = parseInt(this.#dialogRoute.getParam('pipelineId'), 10);\r\n  #refreshPipeline = false;\r\n  #refreshDataSourceConfigs = false;\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private zone: NgZone,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.putEntityCountOnConnections$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  init() {\r\n    this.#fetchDataSources(() => this.#fetchPipeline(true, true, false));\r\n    this.#attachKeyboardSave();\r\n    this.#dialogRoute.doOnDialogClosed(() => {\r\n      if (this.#refreshPipeline || this.#refreshDataSourceConfigs)\r\n        this.#fetchPipeline(this.#refreshPipeline, this.#refreshDataSourceConfigs, this.#refreshPipeline);\r\n      this.#refreshPipeline = false;\r\n      this.#refreshDataSourceConfigs = false;\r\n    });\r\n  }\r\n\r\n  public editPipelineEntity() {\r\n    // save Pipeline, then open Edit Dialog\r\n    this.#savePipeline(() => {\r\n      const form: EditForm = {\r\n        items: [EditPrep.editId(this.pipelineModel().Pipeline.EntityId)],\r\n      };\r\n      const formUrl = convertFormToUrl(form);\r\n      this.#dialogRoute.navRelative([`edit/${formUrl}`]);\r\n      this.#refreshPipeline = true;\r\n    });\r\n  }\r\n\r\n  public saveAndRun(save: boolean, run: boolean): void {\r\n    if (save && run)\r\n      return this.#savePipeline(() => this.runPipeline());\r\n\r\n    if (save)\r\n      return this.#savePipeline();\r\n\r\n    if (run)\r\n      return this.runPipeline();\r\n  }\r\n\r\n  showDataSourceDetails(showDetails: boolean) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    const designerData: Record<string, any> = JsonHelpers.tryParse(query.Pipeline.VisualDesignerData) ?? {};\r\n    designerData.ShowDataSourceDetails = showDetails;\r\n    query.Pipeline.VisualDesignerData = JSON.stringify(designerData);\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    const newSource: PipelineDataSource = {\r\n      Description: '',\r\n      EntityGuid: 'unsaved' + (query.DataSources.length + 1),\r\n      EntityId: undefined,\r\n      Name: dataSource.Name,\r\n      PartAssemblyAndType: dataSource.PartAssemblyAndType,\r\n      VisualDesignerData: { Top: 100, Left: 100 },\r\n    };\r\n    query.DataSources.push(newSource);\r\n    this.pipelineModel.set(query);\r\n    this.#savePipeline();\r\n  }\r\n\r\n  removeDataSource(pipelineDataSourceGuid: string, connections: StreamWire[], streamsOut: string) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    query.DataSources = query.DataSources.filter(pipelineDS => pipelineDS.EntityGuid !== pipelineDataSourceGuid);\r\n    query.Pipeline.StreamWiring = connections;\r\n    query.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  renameDataSource(pipelineDataSourceGuid: string, name: string) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    const dataSource = query.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    dataSource.Name = name;\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  changeDataSourceDescription(pipelineDataSourceGuid: string, description: string) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    const dataSource = query.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    dataSource.Description = description;\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  changeConnections(connections: StreamWire[], streamsOut: string) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    query.Pipeline.StreamWiring = connections;\r\n    query.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  changeDataSourcePosition(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    const dataSource = query.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    if (!dataSource) {\r\n      // spm NOTE: fixes problem where dataSource position can't be updated if dataSource with guid unsavedXX gets saved while dragging.\r\n      // Can happen if dataSource is just added and user drags it and save happens.\r\n      return;\r\n    }\r\n    dataSource.VisualDesignerData = { ...dataSource.VisualDesignerData, ...position };\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  #calculateDataSourceConfigs(dataSources: PipelineDataSource[]) {\r\n    const dataSourceConfigs: DataSourceConfigs = {};\r\n    dataSources.forEach(dataSource => {\r\n      if (dataSource.EntityId == null)\r\n        return;\r\n      dataSourceConfigs[dataSource.EntityId] = [];\r\n      dataSource.Metadata?.forEach(metadataItem => {\r\n        Object.entries(metadataItem).forEach(([attributeName, attributeValue]) => {\r\n          if (attributeValue == null || attributeValue === '')\r\n            return;\r\n          if (['Created', 'Guid', 'Id', 'Modified', 'Title', '_Type'].includes(attributeName))\r\n            return;\r\n          if (Array.isArray(attributeValue) && attributeValue[0]?.Title !== null && attributeValue[0]?.Id !== null) {\r\n            attributeValue = `${attributeValue[0].Title} (${attributeValue[0].Id})`;\r\n          }\r\n          const dataSourceConfig: DataSourceConfig = {\r\n            name: attributeName,\r\n            value: attributeValue,\r\n          };\r\n          dataSourceConfigs[dataSource.EntityId].push(dataSourceConfig);\r\n        });\r\n      });\r\n    });\r\n    this.dataSourceConfigs.set(dataSourceConfigs);\r\n  }\r\n\r\n  editDataSource(pipelineDataSource: PipelineDataSource) {\r\n    const dataSource = findDefByType(this.dataSources(), pipelineDataSource.PartAssemblyAndType);\r\n    const contentTypeName = dataSource.ContentType;\r\n    const { targetType, keyType } = eavConstants.metadata.entity;\r\n    const key = pipelineDataSource.EntityGuid;\r\n\r\n    // query for existing Entity\r\n    this.#metadataSvc.getMetadataPromise(targetType, keyType, key, contentTypeName).then(metadata => {\r\n      // edit existing Entity\r\n      if (metadata.Items.length) {\r\n        const form: EditForm = {\r\n          items: [EditPrep.editId(metadata.Items[0].Id)],\r\n        };\r\n        const formUrl = convertFormToUrl(form);\r\n        this.#dialogRoute.navRelative([`edit/${formUrl}`]);\r\n        this.#refreshDataSourceConfigs = true;\r\n        return;\r\n      }\r\n\r\n      // Check if the type exists, and if yes, create new Entity\r\n      this.#contentTypesSvc.retrieveContentType(contentTypeName).subscribe({\r\n        next: contentType => {\r\n          if (contentType == null) {\r\n            this.snackBar.open('DataSource doesn\\'t have any configuration', undefined, { duration: 3000 });\r\n            return;\r\n          }\r\n          const form: EditForm = {\r\n            items: [EditPrep.newMetadata(key, contentTypeName, eavConstants.metadata.entity)],\r\n          };\r\n          const formUrl = convertFormToUrl(form);\r\n          this.#dialogRoute.navRelative([`edit/${formUrl}`]);\r\n          this.#refreshDataSourceConfigs = true;\r\n        },\r\n        error: (error: HttpErrorResponse) => {\r\n          const message = 'Server reports error - this usually means that this DataSource doesn\\'t have any configuration';\r\n          this.snackBar.open(message, undefined, { duration: 3000 });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  #savePipeline(callback?: () => void) {\r\n    this.snackBar.open('Saving...');\r\n    this.#queryDefSvc.savePipeline(this.pipelineModel()).subscribe({\r\n      next: pipelineModel => {\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n        this.pipelineModel.set(pipelineModel);\r\n        if (callback != null) { callback(); }\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Save Pipeline failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  runPipeline(top = 25) {\r\n    this.snackBar.open('Running query...');\r\n    this.#queryDefSvc.runPipelinePromise(this.pipelineModel().Pipeline.EntityId, top)\r\n      .then(pipelineResult => {\r\n        this.snackBar.open('Query worked', null, { duration: 2000 });\r\n        this.queryResult = pipelineResult;\r\n        this.#showQueryResult(pipelineResult, top);\r\n        console.warn(pipelineResult);\r\n        this.pipelineModel.set(cloneDeep(this.pipelineModel()));\r\n        setTimeout(() => { this.putEntityCountOnConnections$.next(pipelineResult); });\r\n      })\r\n      .catch((error: HttpErrorResponse) => {\r\n        this.snackBar.open('Query failed', null, { duration: 2000 });\r\n      });\r\n  }\r\n\r\n  debugStream(stream: PipelineResultStream, top = 25): void {\r\n    if (stream.Error)\r\n      return this.#showStreamErrorResult(stream);\r\n\r\n    if (stream.Count === 0)\r\n      return;\r\n\r\n    this.snackBar.open('Running stream...');\r\n    const pipelineId = this.pipelineModel().Pipeline.EntityId;\r\n\r\n    this.#queryDefSvc.debugStreamPromise(pipelineId, stream.Source, stream.SourceOut, top)\r\n      .then(streamResult => {\r\n        this.snackBar.open('Stream worked', null, { duration: 2000 });\r\n        const pipelineDataSource = this.pipelineModel().DataSources.find(ds => ds.EntityGuid === stream.Source);\r\n        const debugStream: DebugStreamInfo = {\r\n          name: stream.SourceOut,\r\n          source: stream.Source,\r\n          sourceName: pipelineDataSource?.Name,\r\n          original: stream,\r\n        };\r\n        this.#showQueryResult(streamResult, top, debugStream);\r\n        console.warn(streamResult);\r\n      })\r\n      .catch((_error: HttpErrorResponse) => {\r\n        this.snackBar.open('Stream failed', null, { duration: 2000 });\r\n      });\r\n  }\r\n\r\n\r\n  #fetchPipeline(refreshPipeline: boolean, refreshDataSourceConfigs: boolean, showSnackBar: boolean) {\r\n    if (showSnackBar)\r\n      this.snackBar.open('Reloading query, please wait...');\r\n\r\n    this.#queryDefSvc.fetchPipelinePromise(this.#pipelineId, this.dataSources()).then(pipelineModel => {\r\n      if (showSnackBar)\r\n        this.snackBar.open('Query reloaded', null, { duration: 2000 });\r\n\r\n      this.#titleSvc.setTitle(`${pipelineModel.Pipeline.Name} - Visual Query`);\r\n\r\n      if (refreshPipeline)\r\n        this.pipelineModel.set(pipelineModel);\r\n\r\n      if (refreshDataSourceConfigs)\r\n        this.#calculateDataSourceConfigs(pipelineModel.DataSources);\r\n    });\r\n  }\r\n\r\n  #showQueryResult(result: PipelineResult, top: number, debugStream?: DebugStreamInfo) {\r\n    const dialogData: QueryResultDialogData = {\r\n      result,\r\n      debugStream,\r\n      top,\r\n    };\r\n    this.matDialog.open(QueryResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  #showStreamErrorResult(stream: PipelineResultStream) {\r\n    const dialogData: StreamErrorResultDialogData = {\r\n      errorData: stream.ErrorData,\r\n    };\r\n    this.matDialog.open(StreamErrorResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  #fetchDataSources(callback?: () => void) {\r\n    this.#queryDefSvc.fetchDataSourcesPromise().then(dataSources => {\r\n      this.dataSources.set(dataSources);\r\n      callback();\r\n    });\r\n  }\r\n\r\n  #attachKeyboardSave() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown').pipe(\r\n          filter(() => !this.#dialogRoute.snapshot.firstChild),\r\n          filter(event => isCtrlS(event)),\r\n        ).subscribe(event => {\r\n          event.preventDefault();\r\n          this.zone.run(() => { this.#savePipeline(); });\r\n        })\r\n      );\r\n    });\r\n  }\r\n}\r\n","@if (sorted()) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"eav-show-advanced\">\r\n      <span class=\"eav-slide-toggle-label\">Show Advanced</span>\r\n      <mat-slide-toggle color=\"primary\" (change)=\"toggleDifficulty($event)\" />\r\n    </div>\r\n    @for (group of sorted() | keyvalue; track trackGroups($index, group)) {\r\n      <div class=\"collapsible\" [tippy]=\"guiTypes[group.key].UiHint || group.key\" tippyShowDelay=\"750\"\r\n        (click)=\"toggleItem(group.key)\">\r\n        <mat-icon>{{ guiTypes[group.key].Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n        <span>{{ guiTypes[group.key].Label ?? guiTypes[group.key].Name ?? group.key }}</span>\r\n      </div>\r\n      @if (toggledItems.includes(group.key)) {\r\n        <div class=\"list\">\r\n          @for (dataSource of group.value; track trackDataSources($index, dataSource)) {\r\n            <div class=\"list-item\"\r\n              [tippy]=\"dataSource.UiHint || dataSource.Name\" tippyShowDelay=\"750\" (click)=\"addDataSource(dataSource)\">\r\n              <mat-icon>{{ dataSource.Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n              <span>{{ dataSource.Name }}</span>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n  </div>\r\n}\r\n","import { KeyValue, KeyValuePipe } from '@angular/common';\r\nimport { Component, computed, signal } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { DataSource } from '../models';\r\nimport { guiTypes } from '../plumb-editor/plumb-editor.helpers';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { filterAndSortDataSources } from './add-explorer.helpers';\r\n\r\n@Component({\r\n    selector: 'app-add-explorer',\r\n    templateUrl: './add-explorer.component.html',\r\n    styleUrls: ['./add-explorer.component.scss'],\r\n    imports: [\r\n        MatSlideToggleModule,\r\n        MatIconModule,\r\n        KeyValuePipe,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class AddExplorerComponent {\r\n  toggledItems: string[] = [];\r\n  guiTypes = guiTypes;\r\n\r\n  #difficulties = eavConstants.pipelineDesigner.dataSourceDifficulties;\r\n\r\n  #difficulty = signal(this.#difficulties.default);\r\n\r\n  sorted = computed(() => filterAndSortDataSources(this.visualQueryService.dataSources(), this.#difficulty()));\r\n\r\n  constructor(private visualQueryService: VisualQueryStateService) { }\r\n\r\n  toggleDifficulty(event: MatSlideToggleChange) {\r\n    const difficulty = event.checked ? this.#difficulties.advanced : this.#difficulties.default;\r\n    this.#difficulty.set(difficulty);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    this.visualQueryService.addDataSource(dataSource);\r\n  }\r\n\r\n  toggleItem(item: string) {\r\n    ArrayHelpers.toggleInArray(item, this.toggledItems);\r\n  }\r\n\r\n  trackGroups(index: number, type: KeyValue<string, DataSource[]>) {\r\n    return type.key;\r\n  }\r\n\r\n  trackDataSources(index: number, dataSource: DataSource) {\r\n    return dataSource.PartAssemblyAndType;\r\n  }\r\n}\r\n","import cloneDeep from 'lodash-es/cloneDeep';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\n\r\nexport function filterAndSortDataSources(dataSources: DataSource[], maxDifficulty: number) {\r\n  if (!dataSources) return;\r\n\r\n  const cloned = cloneDeep(dataSources);\r\n\r\n  const filtered = cloned.filter(dataSource =>\r\n    dataSource.Difficulty <= maxDifficulty\r\n    && dataSource.PartAssemblyAndType !== eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType\r\n  );\r\n\r\n  filtered.sort((a, b) => a.Name.toLocaleLowerCase().localeCompare(b.Name.toLocaleLowerCase()));\r\n\r\n  const sorted: SortedDataSources = {};\r\n  for (const dataSource of filtered) {\r\n    const type = dataSource.PrimaryType;\r\n    if (sorted[type]) {\r\n      sorted[type].push(dataSource);\r\n    } else {\r\n      sorted[type] = [dataSource];\r\n    }\r\n  }\r\n\r\n  return sorted;\r\n}\r\n","\r\nexport const dataSrcIdPrefix = 'dataSource_';\r\n\r\nexport function domIdOfGuid(guid: string): string {\r\n  return dataSrcIdPrefix + guid;\r\n}\r\n\r\nexport function guidOfDomId(domId: string): string {\r\n  return domId.replace(dataSrcIdPrefix, '');\r\n}","import { classLog } from '../../shared/logging';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n}\r\n\r\n/**\r\n * Helper to manage the line colors on each connection\r\n */\r\nexport class ConnectionLineColors {\r\n  log = classLog({ConnectionLineColors}, logSpecs);\r\n\r\n  constructor() { }\r\n\r\n  #lineCount = 0;\r\n  #linePaintDefault = {\r\n    stroke: '#61B7CF',\r\n    strokeWidth: 4,\r\n    outlineStroke: 'white',\r\n    outlineWidth: 2,\r\n  };\r\n  #lineColors = [\r\n    '#009688', '#00bcd4', '#3f51b5', '#9c27b0', '#e91e63',\r\n    '#db4437', '#ff9800', '#60a917', '#60a917', '#008a00',\r\n    '#00aba9', '#1ba1e2', '#0050ef', '#6a00ff', '#aa00ff',\r\n    '#f472d0', '#d80073', '#a20025', '#e51400', '#fa6800',\r\n    '#f0a30a', '#e3c800', '#825a2c', '#6d8764', '#647687',\r\n    '#76608a', '#a0522d',\r\n  ];\r\n  #maxCols = this.#lineColors.length - 1;\r\n  #uuidColorMap: Record<string, any> = {};\r\n\r\n\r\n  nextLinePaintStyle(uuid: string) {\r\n    return this.#uuidColorMap[uuid] ??= this.#nextLineColor();\r\n  }\r\n\r\n  #nextLineColor() {\r\n    return {\r\n      ...this.#linePaintDefault,\r\n      stroke: this.#lineColors[this.#lineCount++ % this.#maxCols],\r\n    };\r\n  }\r\n\r\n}","import { classLog } from '../../shared/logging';\r\nimport { DataSource, PipelineModel, StreamWire } from '../models';\r\nimport { findDefByType, getEndpointLabel } from './datasource.helpers';\r\nimport { EndpointDefinitionsService } from './endpoint-definitions';\r\nimport { JsPlumbConnection, JsPlumbInstance } from './jsplumb.models';\r\nimport { guidOfDomId } from './plumber-constants';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  eventConnectionDetached: false,\r\n  eventConnectionAttached: false,\r\n}\r\n\r\nexport class ConnectionsManager {\r\n  log = classLog({ConnectionsManager}, logSpecs);\r\n  bulkDelete: boolean = false;\r\n\r\n  constructor(\r\n    private instance: JsPlumbInstance, \r\n    private pipelineModel: PipelineModel,\r\n    private dataSources: DataSource[],\r\n    private endpointsSvc: EndpointDefinitionsService,\r\n    private onConnectionsChanged: () => void,\r\n  ) { }\r\n\r\n  /**\r\n   * Handle attach/detach of connections\r\n   */\r\n  setup(): void{\r\n    this.instance.bind('connectionDetached', (info: JsPlumbConnection) => this.handleDetached(info));\r\n    this.instance.bind('connection', (info: JsPlumbConnection) => this.handleAttached(info));\r\n  }\r\n\r\n  getAll(): StreamWire[] {\r\n    const connectionInfos: StreamWire[] = this.instance.getAllConnections()\r\n      .map((connection: JsPlumbConnection) => ({\r\n        From: guidOfDomId(connection.sourceId),\r\n        Out: getEndpointLabel(connection.endpoints[0]),\r\n        To: guidOfDomId(connection.targetId),\r\n        In: getEndpointLabel(connection.endpoints[1]),\r\n      } satisfies StreamWire)\r\n    );\r\n    return connectionInfos;\r\n  }\r\n  \r\n  \r\n  handleDetached(info: JsPlumbConnection) {\r\n    const l = this.log.fnIf('eventConnectionDetached');\r\n    if (this.bulkDelete)\r\n      return l.end('in bulk-delete mode, exit');\r\n\r\n    const domDataSource = info.target;\r\n    const pipelineDataSource = this.pipelineModel.DataSources.find(\r\n      pipelineDS => pipelineDS.EntityGuid === guidOfDomId(domDataSource.id)\r\n    );\r\n    const dataSource = findDefByType(this.dataSources, pipelineDataSource.PartAssemblyAndType);\r\n    const label = getEndpointLabel(info.targetEndpoint);\r\n    const isDynamic = !dataSource.In.some(name => this.endpointsSvc.getInfo(name, false).name === label);\r\n    if (isDynamic)\r\n      this.instance.deleteEndpoint(info.targetEndpoint);\r\n    setTimeout(() => this.onConnectionsChanged());\r\n    l.end('done');\r\n  }\r\n\r\n  handleAttached(info: JsPlumbConnection) {\r\n    const l = this.log.fnIf('eventConnectionAttached');\r\n    // This seems to handle a special detach case, but ATM 2025-04-03 I can't see where it would ever hit\r\n    if (info.sourceId === info.targetId) {\r\n      setTimeout(() => {\r\n        this.instance.deleteConnection(info.connection, { fireEvent: false });\r\n        setTimeout(() => this.onConnectionsChanged());\r\n      });\r\n      return l.end('self-connection, will delete and exit');\r\n    }\r\n    const targetEndpointOverlay = info.targetEndpoint.getOverlay('endpointLabel');\r\n    const targetLabel = targetEndpointOverlay.getLabel();\r\n    const endpoints = this.instance.getEndpoints(info.target.id);\r\n    const targetHasSameLabel = endpoints.some(ep => {\r\n      const label = getEndpointLabel(ep);\r\n      return label === targetLabel && info.targetEndpoint.id !== ep.id && ep.canvas.classList.contains('targetEndpoint');\r\n    });\r\n\r\n    // If label already exists, create a PleaseRename label\r\n    if (targetHasSameLabel)\r\n      targetEndpointOverlay.setLabel(`PleaseRename${Math.floor(Math.random() * 99999)}`);\r\n    setTimeout(() => this.onConnectionsChanged());\r\n    l.end('done', { targetLabel, targetHasSameLabel });\r\n  }\r\n\r\n\r\n}\r\n\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Rename stream</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <form [formGroup]=\"form\">\r\n      <!-- Simple form -->\r\n      @if (!isSource || !pipelineResultExists) {\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"label\" required>\r\n        </mat-form-field>\r\n        @if (isSource && !pipelineResultExists) {\r\n          <app-field-hint>\r\n            You will get suggestions for out-streams after you run query\r\n          </app-field-hint>\r\n        }\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n\r\n      <!-- Rich form -->\r\n      @if (isSource && pipelineResultExists) {\r\n        <!-- Scope -->\r\n        @if (advancedMode && guidedLabel) {\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Scope</mat-label>\r\n            <mat-select formControlName=\"scope\" [placeholder]=\"!scopeOptions.length ? 'No items found' : ''\">\r\n              @for (scopeOption of scopeOptions; track scopeOption) {\r\n                <mat-option [value]=\"scopeOption.value\">\r\n                  {{ scopeOption.name }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <app-field-hint>\r\n            The scope should almost never be changed -\r\n            <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n          </app-field-hint>\r\n        }\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          @if (guidedLabel) {\r\n            <mat-select formControlName=\"label\" required\r\n              [placeholder]=\"!labelOptions.length ? 'No items found' : ''\">\r\n              @for (labelOption of labelOptions; track labelOption) {\r\n                <mat-option [value]=\"labelOption\">\r\n                  {{ labelOption }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          }\r\n          @if (!guidedLabel) {\r\n            <input matInput type=\"text\" formControlName=\"label\" required>\r\n          }\r\n          <div matTextSuffix class=\"eav-selection-suffix\">\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': guidedLabel }\" tippy=\"Pick existing value\"\r\n              (click)=\"toggleGuidedLabel(true)\">\r\n              <mat-icon class=\"eav-icon\">search</mat-icon>\r\n            </button>\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': !guidedLabel }\" tippy=\"Manual entry\"\r\n              (click)=\"toggleGuidedLabel(false)\">\r\n              <mat-icon class=\"eav-icon\">text_fields</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-form-field>\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n    </form>\r\n  </div>\r\n  <mat-dialog-actions class=\"eav-dialog-actions\">\r\n    <!-- Extra button for rich form -->\r\n    <div>\r\n      @if (isSource && pipelineResultExists) {\r\n        <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n          {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n        </mat-slide-toggle>\r\n      }\r\n    </div>\r\n    <div>\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\" [disabled]=\"!form.valid\" (click)=\"rename()\">\r\n        Rename\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, HostBinding, Inject, OnInit } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MAT_DIALOG_DATA, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { distinctUntilChanged, startWith } from 'rxjs';\r\nimport { transient } from '../../../../../../core';\r\nimport { ContentTypesService } from '../../../app-administration/services';\r\nimport { BaseComponent } from '../../../shared/components/base.component';\r\nimport { FieldHintComponent } from '../../../shared/components/field-hint/field-hint.component';\r\nimport { eavConstants, ScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { ClickStopPropagationDirective } from '../../../shared/directives/click-stop-propagation.directive';\r\nimport { VisualQueryStateService } from '../../services/visual-query.service';\r\nimport { RenameStreamDialogControls, RenameStreamDialogData, RenameStreamDialogFormValue } from './rename-stream.models';\r\n\r\n@Component({\r\n    selector: 'app-rename-stream',\r\n    templateUrl: './rename-stream.component.html',\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        NgClass,\r\n        MatDialogActions,\r\n        MatSlideToggleModule,\r\n        FieldHintComponent,\r\n        ClickStopPropagationDirective,\r\n    ]\r\n})\r\nexport class RenameStreamComponent extends BaseComponent implements OnInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  controls: RenameStreamDialogControls;\r\n  isSource = this.dialogData.isSource;\r\n  pipelineResultExists = this.visualQueryService.queryResult != null;\r\n  scopeOptions: ScopeOption[] = [];\r\n  labelOptions: string[] = [];\r\n  guidedLabel = true;\r\n  advancedMode = false;\r\n\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n  \r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: RenameStreamDialogData,\r\n    private dialog: MatDialogRef<RenameStreamComponent>,\r\n    private visualQueryService: VisualQueryStateService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.#buildForm();\r\n  }\r\n\r\n  closeDialog(label?: string): void {\r\n    this.dialog.close(label);\r\n  }\r\n\r\n  toggleGuidedLabel(guidedLabel: boolean): void {\r\n    this.guidedLabel = guidedLabel;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  rename(): void {\r\n    const formValue: RenameStreamDialogFormValue = this.form.getRawValue();\r\n    this.closeDialog(formValue.label);\r\n  }\r\n\r\n  #buildForm(): void {\r\n    this.form = new UntypedFormGroup({\r\n      label: new UntypedFormControl(this.dialogData.label, Validators.required),\r\n      scope: new UntypedFormControl(eavConstants.scopes.default.value),\r\n    });\r\n    this.controls = this.form.controls as any;\r\n\r\n    if (!this.isSource || !this.pipelineResultExists)\r\n      return;\r\n\r\n    this.subscriptions.add(\r\n      this.controls.scope.valueChanges.pipe(\r\n        startWith<string>(this.controls.scope.value),\r\n        distinctUntilChanged(),\r\n      ).subscribe(scope => {\r\n        this.labelOptions = Object.values(this.visualQueryService.queryResult.Sources)\r\n          .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out\r\n          .filter(out => out.Scope === scope)\r\n          .map(out => out.Name);\r\n\r\n        if (!this.labelOptions.includes(this.controls.label.value) && this.controls.label.value != null)\r\n          this.controls.label.patchValue(null);\r\n      })\r\n    );\r\n\r\n    this.#contentTypesSvc.getScopesPromise().then(scopes => {\r\n      const sourceOut = Object.values(this.visualQueryService.queryResult.Sources)\r\n        .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out;\r\n      const filtered = scopes.filter(s => sourceOut.some(o => o.Scope === s.value));\r\n      this.scopeOptions = filtered;\r\n      this.changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n}\r\n","import { classLog } from '../../shared/logging';\r\nimport { PipelineModel } from '../models';\r\nimport { EndpointLabelRenameParts } from './endpoint-label-rename.model';\r\nimport { JsPlumbEndpoint, JsPlumbOverlay } from './jsplumb.models';\r\nimport { EndpointInfo } from './plumb-editor.models';\r\nimport { RenameStreamComponent } from './rename-stream/rename-stream.component';\r\nimport { RenameStreamDialogData } from './rename-stream/rename-stream.models';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  getEndpointOverlays: true,\r\n  getEndpointInfo: true,\r\n  buildSourceDef: true,\r\n  buildTargetDef: true,\r\n}\r\n\r\n/**\r\n * Trivial helper to get endpoint definitions and similar things\r\n */\r\nexport class EndpointDefinitionsService {\r\n\r\n  log = classLog({EndpointDefinitionsService}, logSpecs);\r\n\r\n  constructor(\r\n    private pipelineModel: PipelineModel,\r\n    private renameDialogParts: EndpointLabelRenameParts,\r\n  ) { }\r\n\r\n  #getEndpointOverlays(isSource: boolean) {\r\n    const l = this.log.fnIf('getEndpointOverlays', {isSource});\r\n    const result = [\r\n      [\r\n        'Label', {\r\n          id: 'endpointLabel',\r\n          location: [0.5, isSource ? 0 : 1],\r\n          label: 'Default',\r\n          cssClass: isSource ? 'endpointSourceLabel' : 'endpointTargetLabel',\r\n        },\r\n      ],\r\n    ];\r\n    return l.r(result);\r\n  }\r\n\r\n  getInfo(endpointName: string, isDynamic: boolean): EndpointInfo {\r\n    const l = this.log.fnIf('getEndpointInfo', {endpointName, isDynamic});\r\n    // let name: string;\r\n    // let required: boolean;\r\n\r\n    // Trim name and see if it's required - marked with a trailing '*'\r\n    const trimmed = endpointName.trim();\r\n    const required = trimmed.endsWith('*');\r\n    const name = !required\r\n      ? trimmed\r\n      : trimmed.substring(0, trimmed.length - 1);\r\n\r\n    if (isDynamic)\r\n      return l.r({\r\n        name,\r\n        required: false\r\n      } satisfies EndpointInfo, 'isDynamic');\r\n\r\n    return l.r({ name, required } satisfies EndpointInfo, 'notDynamic');\r\n  }\r\n\r\n  buildSourceDef(dsGuid: string, style?: string) {\r\n    const l = this.log.fnIf('buildSourceDef', {pipelineDataSourceGuid: dsGuid, style});\r\n    const isSource = true;\r\n    const sourceEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'sourceEndpoint ' + (style ?? ''),\r\n      maxConnections: -1,\r\n      isSource,\r\n      anchor: ['Continuous', { faces: ['top'] }],\r\n      overlays: this.#getEndpointOverlays(isSource),\r\n      events: {\r\n        click: (endpointOrOverlay: JsPlumbOverlay) => this.onChangeLabel(endpointOrOverlay, isSource, dsGuid),\r\n      },\r\n    };\r\n    return l.r(sourceEndpoint);\r\n  }\r\n\r\n  buildTargetDef(dsGuid: string, style?: string) {\r\n    const l = this.log.fnIf('buildTargetDef', {pipelineDataSourceGuid: dsGuid, style});\r\n    const isSource = false;\r\n    const targetEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'targetEndpoint ' + (style ?? ' '), // + (angled ? 'angled' : ''),\r\n      maxConnections: 1,\r\n      isTarget: !isSource,\r\n      anchor: ['Continuous', { faces: ['bottom'] }],\r\n      overlays: this.#getEndpointOverlays(isSource),\r\n      dropOptions: { hoverClass: 'hover', activeClass: 'active' },\r\n      events: {\r\n        click: (endpointOrOverlay: JsPlumbOverlay) => this.onChangeLabel(endpointOrOverlay, isSource, dsGuid),\r\n      },\r\n    };\r\n    return l.r(targetEndpoint);\r\n  }\r\n\r\n\r\n  onChangeLabel(endpointOrOverlay: JsPlumbEndpoint | JsPlumbOverlay, isSource: boolean, pipelineDataSourceGuid: string) {\r\n    if (!this.pipelineModel.Pipeline.AllowEdit)\r\n      return;\r\n\r\n    debugger;\r\n    const overlay: JsPlumbOverlay = (endpointOrOverlay as JsPlumbEndpoint)?.getOverlay?.('endpointLabel')\r\n      ?? endpointOrOverlay as JsPlumbOverlay;\r\n\r\n    this.renameDialogParts.matDialog\r\n      .open(RenameStreamComponent, {\r\n        autoFocus: false,\r\n        data: {\r\n          pipelineDataSourceGuid,\r\n          isSource,\r\n          label: overlay.label,\r\n        } satisfies RenameStreamDialogData,\r\n        viewContainerRef: this.renameDialogParts.viewContainerRef,\r\n        width: '650px',\r\n      })\r\n      .afterClosed().subscribe(newLabel => {\r\n        if (!newLabel)\r\n          return;\r\n        overlay.setLabel(newLabel);\r\n        setTimeout(() => this.renameDialogParts.onConnectionsChanged());\r\n      });\r\n\r\n    this.renameDialogParts.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n\r\n  // public onChangeLabel(endpointOrOverlay: JsPlumbEndpoint | JsPlumbOverlay, isSource: boolean, pipelineDataSourceGuid: string) {\r\n  //   if (!this.pipelineModel.Pipeline.AllowEdit)\r\n  //     return;\r\n\r\n  //   const overlay: JsPlumbOverlay = (endpointOrOverlay as JsPlumbEndpoint)?.getOverlay('endpointLabel')\r\n  //     ?? endpointOrOverlay as JsPlumbOverlay;\r\n\r\n  //   this.matDialog\r\n  //     .open(RenameStreamComponent, {\r\n  //       autoFocus: false,\r\n  //       data: {\r\n  //         pipelineDataSourceGuid,\r\n  //         isSource,\r\n  //         label: overlay.label,\r\n  //       } satisfies RenameStreamDialogData,\r\n  //       viewContainerRef: this.viewContainerRef,\r\n  //       width: '650px',\r\n  //     })\r\n  //     .afterClosed().subscribe(newLabel => {\r\n  //       if (!newLabel)\r\n  //         return;\r\n  //       overlay.setLabel(newLabel);\r\n  //       setTimeout(() => this.onConnectionsChanged());\r\n  //     });\r\n\r\n  //   this.changeDetectorRef.markForCheck();\r\n  // }\r\n\r\n}\r\n","import { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { classLog } from '../../shared/logging';\r\nimport { PipelineDataSource } from '../models';\r\nimport { ConnectionsManager } from './connections-manager';\r\nimport { findDefByType, getEndpointLabel } from './datasource.helpers';\r\nimport { EndpointDefinitionsService } from './endpoint-definitions';\r\nimport { JsPlumbEndpoint, JsPlumbInstance } from './jsplumb.models';\r\nimport { domIdOfGuid } from './plumber-constants';\r\nimport { QueryDataManager } from './query-data-manager';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  addEndpoint: false,\r\n  reOrientAllLabels: false,\r\n  updateAfterChanges: false,\r\n  wireHasConnection: false,\r\n  mirrorEndpoints: false,\r\n  fields: ['TestIn2', 'Default'],\r\n}\r\n\r\nconst endPointsWhereWeRotate = 3;\r\nconst maxLabelLengthToRotate = 30;\r\n\r\nexport class EndpointsManager {\r\n  log = classLog({EndpointsManager}, logSpecs);\r\n\r\n  constructor(\r\n    private instance: JsPlumbInstance, \r\n    private endpointDefs: EndpointDefinitionsService,\r\n    private connections: ConnectionsManager,\r\n    private queryData: QueryDataManager,\r\n  ) { }\r\n\r\n  \r\n  addEndpoint(domDataSource: HTMLElement, endpointName: string, isIn: boolean, queryDs: PipelineDataSource, extraStyling?: string) {\r\n    const l = this.log.fnIfInList('addEndpoint', 'fields', endpointName, { endpointName, isIn, queryDs });\r\n    const dsDefinition = findDefByType(this.queryData.dataSources, queryDs.PartAssemblyAndType);\r\n    const connectionList = isIn\r\n      ? dsDefinition.In\r\n      : dsDefinition.Out;\r\n    const hasDynamic = connectionList?.some(name => this.endpointDefs.getInfo(name, false).required === false);\r\n    const endpointInfo = this.endpointDefs.getInfo(endpointName, hasDynamic);\r\n\r\n    l.a(`endpointInfo`, { dataSource: dsDefinition, connectionList, hasDynamic, endpointInfo });\r\n\r\n    // if (endpointName === \"DEBUG\") debugger;\r\n\r\n    // Figure out additional styling based on the endpoint type\r\n    const style = hasDynamic\r\n      ? 'dynamic' // dynamic endpoints are not required\r\n      : !endpointInfo.required\r\n        ? ''      // not required\r\n        : this.#wireHasConnection(domDataSource, endpointInfo.name, isIn) ? '' : 'required'; // required - check if it's populated; otherwise make red\r\n\r\n\r\n    const uuid = domDataSource.id + (isIn ? '_in_' : '_out_') + endpointInfo.name;\r\n    const model = isIn\r\n      ? this.endpointDefs.buildTargetDef(queryDs.EntityGuid, `${style} ${extraStyling}`)\r\n      : this.endpointDefs.buildSourceDef(queryDs.EntityGuid, `${style} ${extraStyling}`);\r\n    // Endpoints on Out-DataSource must be always enabled\r\n    const params = {\r\n      uuid,\r\n      enabled: this.queryData.query.Pipeline.AllowEdit\r\n        || queryDs.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    };\r\n\r\n    // Add endpoint and add label and css in case it must be angled\r\n    const endpoint = this.instance.addEndpoint(domDataSource, model, params);\r\n    const overlay = endpoint.getOverlay('endpointLabel');\r\n    overlay.setLabel(endpointInfo.name);\r\n    l.end(\"end\", {overlay});\r\n  }\r\n\r\n  /**\r\n   * Check if a specific endpoint has a connection\r\n   * Note that it uses the query model to check, not the DOM.\r\n   * So in certain cases where a change is just being made, it could be wrong.\r\n   */\r\n  #wireHasConnection(domDataSource: HTMLElement, name: string, isIn: boolean = true) {\r\n    const l = this.log.fnIf('wireHasConnection', { domDataSource, name, isIn });\r\n    const wireExists = this.queryData.query.Pipeline.StreamWiring?.some(wire => isIn\r\n        ? domIdOfGuid(wire.To) === domDataSource.id && wire.In === name\r\n        : domIdOfGuid(wire.From) === domDataSource.id && wire.Out === name\r\n    );\r\n    return l.r(wireExists, 'wireExists' + wireExists);\r\n  }\r\n\r\n  #isDoingUpdate = false;\r\n\r\n  updateAfterChanges() {\r\n    const l = this.log.fnIf('updateAfterChanges', { query: this.queryData.query, isDoing: this.#isDoingUpdate });\r\n\r\n    // Prevent loops\r\n    if (this.#isDoingUpdate)\r\n      return l.end('already doing update, exit');\r\n    this.#isDoingUpdate = true;\r\n\r\n    this.#mirrorEndpoints();\r\n\r\n    this.#reOrientAllLabels();\r\n\r\n    this.#isDoingUpdate = false;\r\n    this.instance.repaintEverything();\r\n    l.end('done');\r\n  }\r\n\r\n  #mirrorEndpoints() {\r\n    const l = this.log.fnIf('mirrorEndpoints', { query: this.queryData.query });\r\n    // Get all parts which have mirror-in mode\r\n    const partsMirrorIn = this.queryData.query.DataSources\r\n    .map(ds => {\r\n      const def = findDefByType(this.queryData.dataSources, ds.PartAssemblyAndType);\r\n      return (def.OutMode === 'mirror-in') ? { def, guid: ds.EntityGuid } : null;\r\n    })\r\n    .filter(d => d !== null);\r\n    \r\n    // Check if we need to mirror anything\r\n    partsMirrorIn.forEach(ds => {\r\n      const { inPoints, outPoints } = this.#getEndpointsByType(ds.guid);\r\n\r\n      const inLabels = inPoints.map(p => ({ point: p, label: getEndpointLabel(p)}));\r\n      const outLabels = outPoints.map(p => ({ point: p, label: getEndpointLabel(p)}));\r\n\r\n      // Get mismatching lists of out and in\r\n      const missingInOut = inLabels.filter(inP => !outLabels.some(outP => outP.label === inP.label));\r\n      const outWithoutIn = outLabels.filter(outP => !inLabels.some(inP => inP.label === outP.label));\r\n      l.a('inMissingInOut', { inPoints, outPoints, missingInOut, outWithoutIn });\r\n\r\n      // Add missing labels to out\r\n      const { domDataSource, dataSource } = this.queryData.findDataSourceAndDom(ds.guid);\r\n      if (missingInOut.length) {\r\n        missingInOut.forEach(p => this.addEndpoint(domDataSource, p.label, false, dataSource, 'mirror-in'));\r\n      }\r\n\r\n      // Remove excessive labels\r\n      // Only consider the ones which have a `mirror-in` class and remove them\r\n      outWithoutIn.forEach(p => {\r\n        if (p.point.canvas.classList.contains('mirror-in')) {\r\n          const hasConnection = p.point.connections?.length;\r\n          if (!hasConnection)\r\n            this.instance.deleteEndpoint(p.point);\r\n        }\r\n      });\r\n    });  \r\n  }\r\n\r\n  /**\r\n   * Ugly way to get the endpoints by type in/out. Not elegant, but don't know a better method ATM\r\n   */\r\n  #getEndpointsByType(guid: string) {\r\n    const endpoints = this.instance.selectEndpoints({ element: domIdOfGuid(guid) });\r\n    const inPoints: JsPlumbEndpoint[] = [];\r\n    const outPoints: JsPlumbEndpoint[] = [];\r\n    endpoints.each((ep: JsPlumbEndpoint) => (ep.isTarget ? inPoints : outPoints).push(ep));\r\n    return { inPoints, outPoints };\r\n  }\r\n\r\n  /**\r\n   * Check all labels and if there are too many, rotate them at an angle\r\n   */\r\n  #reOrientAllLabels() {\r\n    const l = this.log.fnIf('reOrientAllLabels');\r\n    const parts = this.queryData.query.DataSources.map(ds => ds.EntityGuid);\r\n\r\n    parts.forEach(guid => {\r\n      const {inPoints, outPoints} = this.#getEndpointsByType(guid);\r\n      this.#reorientListOfEndpoints(inPoints);\r\n      this.#reorientListOfEndpoints(outPoints);\r\n    });\r\n    l.end();\r\n  }\r\n\r\n  #reorientListOfEndpoints(endpoints: JsPlumbEndpoint[]) {\r\n    const countExceeded = endpoints.length > endPointsWhereWeRotate;\r\n\r\n    const labels = endpoints.map(endpoint => getEndpointLabel(endpoint)).join(',');\r\n\r\n    if (countExceeded || labels.length > maxLabelLengthToRotate)\r\n      endpoints.forEach(element => element.addClass('angled'));\r\n    else\r\n      endpoints.forEach(element => element.removeClass('angled'));\r\n  }\r\n\r\n\r\n  removeAllEndpoints(dataSourceGuid: string) {\r\n    const elementId = domIdOfGuid(dataSourceGuid);\r\n    this.connections.bulkDelete = true;\r\n    this.instance.batch(() => {\r\n      this.instance.selectEndpoints({ element: elementId }).delete();\r\n    });\r\n    this.connections.bulkDelete = false;\r\n  }\r\n\r\n}\r\n\r\n","import { WindowWithJsPlumb } from '../window';\r\nimport { ConnectionLineColors } from './connection-line-colors';\r\nimport { JsPlumbInstance } from './jsplumb.models';\r\n\r\ndeclare const window: WindowWithJsPlumb;\r\n\r\nexport class JsPlumbInstanceManager {\r\n  constructor(private jsPlumbRoot: HTMLElement, private lineColors: ConnectionLineColors) {\r\n    this.instance = window.jsPlumb.getInstance(this.createInstanceDefaults(this.jsPlumbRoot));\r\n  }\r\n\r\n  instance: JsPlumbInstance;\r\n\r\n  createInstanceDefaults(container: HTMLElement) {\r\n    const defaults = {\r\n      Container: container,\r\n      Connector: ['Bezier', { curviness: 70 }],\r\n      PaintStyle: this.lineColors.nextLinePaintStyle('dummy'),\r\n      HoverPaintStyle: {\r\n        stroke: '#216477',\r\n        strokeWidth: 4,\r\n        outlineStroke: 'white',\r\n        outlineWidth: 2,\r\n      },\r\n    };\r\n    return defaults;\r\n  }\r\n\r\n  destroy() {\r\n    this.instance.reset();\r\n    this.instance.unbindContainer();\r\n    this.instance = null;\r\n  }\r\n}","import { classLog } from '../../shared/logging';\r\nimport { PipelineModel, PipelineResult, PipelineResultStream } from '../models';\r\nimport { JsPlumbEndpoint, JsPlumbInstance } from './jsplumb.models';\r\nimport { domIdOfGuid } from './plumber-constants';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  putEntityCountOnConnections: false,\r\n}\r\n\r\nexport class LinesDecorator {\r\n  log = classLog({LinesDecorator}, logSpecs);\r\n\r\n  constructor(\r\n    private instance: JsPlumbInstance, \r\n    private pipelineModel: PipelineModel,\r\n    private onDebugStream: (stream: PipelineResultStream) => void,\r\n  ) { }\r\n  \r\n  /**\r\n   * Updates the entity count on each connections based on the provided result.\r\n   * @param result PipelineResult\r\n   */\r\n  addEntityCount(result: PipelineResult) {\r\n    const l = this.log.fnIf('putEntityCountOnConnections');\r\n    result.Streams?.forEach(stream => {\r\n      const outDomId = domIdOfGuid(stream.Source);\r\n      const outTargets = ['00000000-0000-0000-0000-000000000000', this.pipelineModel.Pipeline.EntityGuid];\r\n      const inDomId = outTargets.includes(stream.Target)\r\n        ? domIdOfGuid('Out')\r\n        : domIdOfGuid(stream.Target);\r\n\r\n      const fromUuid = outDomId + '_out_' + stream.SourceOut;\r\n      const toUuid = inDomId + '_in_' + stream.TargetIn;\r\n\r\n      const endpoint: JsPlumbEndpoint = this.instance.getEndpoint(fromUuid);\r\n      endpoint?.connections\r\n        ?.filter((connection) => connection.endpoints[1].getUuid() === toUuid)\r\n        ?.forEach((connection) => {\r\n          const label = !stream.Error ? stream.Count.toString() : '';\r\n          const cssClass = 'streamEntitiesCount ' + (!stream.Error ? '' : 'streamEntitiesError');\r\n          connection.setLabel({\r\n            label,\r\n            cssClass,\r\n            events: {\r\n              click: () => {\r\n                if (!this.pipelineModel.Pipeline.AllowEdit)\r\n                  return;\r\n                this.onDebugStream(stream);\r\n              },\r\n            },\r\n          });\r\n        });\r\n    });\r\n    l.end('done');\r\n  }\r\n}","import { classLog } from '../../shared/logging';\r\nimport { DataSource, PipelineModel } from '../models';\r\nimport { DataSourceSet } from './data-source-set.model';\r\nimport { findDefByType } from './datasource.helpers';\r\nimport { domIdOfGuid, guidOfDomId } from './plumber-constants';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  findDataSourceAndDom: false,\r\n  // fields: ['TestIn2', 'Default'],\r\n}\r\n\r\nexport class QueryDataManager {\r\n  log = classLog({QueryDataManager}, logSpecs);\r\n\r\n  constructor(\r\n    private jsPlumbRoot: HTMLElement, \r\n    public query: PipelineModel,\r\n    public dataSources: DataSource[]\r\n  ) { }\r\n\r\n  findDomAndDef(guid: string, partAssemblyAndType: string): (DataSourceSet & { definition: DataSource }) | null {\r\n    const dsSet = this.findDataSourceAndDom(guid);\r\n    if (!dsSet)\r\n      return null;\r\n    const dsDef = findDefByType(this.dataSources, partAssemblyAndType);\r\n    if (!dsDef)\r\n      return null;\r\n    return { ...dsSet, definition: dsDef };\r\n  }\r\n\r\n  findDataSourceAndDom(sourceElementId: string) : DataSourceSet | null {\r\n    const l = this.log.fnIf('findDataSourceAndDom', { sourceElementId });\r\n\r\n    // if DOM doesn't exist, do nothing\r\n    const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + domIdOfGuid(sourceElementId));\r\n    if (!domDataSource)\r\n      return l.r(null, \"DOM not found, exit\");\r\n\r\n    const guid = guidOfDomId(domDataSource.id);\r\n    const dataSource = this.query.DataSources.find(pipeDs => pipeDs.EntityGuid === guid);\r\n    return l.r({ domDataSource, dataSource }, \"returning data source\");\r\n  }\r\n}\r\n\r\n","import { classLog } from '../../shared/logging';\r\nimport { DataSourceSet } from './data-source-set.model';\r\nimport { JsPlumbInstance } from './jsplumb.models';\r\nimport { domIdOfGuid } from './plumber-constants';\r\nimport { Plumber } from './plumber.helper';\r\nimport { QueryDataManager } from './query-data-manager';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  initWirings: true,\r\n  ensureWireEndpointExists: true,\r\n  findDataSourceInDom: true,\r\n  fields: ['TestIn2', '*'],\r\n}\r\n\r\nexport class WiringsHelper {\r\n  log = classLog({WiringsHelper}, logSpecs);\r\n\r\n  constructor(\r\n    private plumber: Plumber,\r\n    private instance: JsPlumbInstance,\r\n    private queryData: QueryDataManager,\r\n  ) { }\r\n\r\n  initWirings() {\r\n    const l = this.log.fnIf('initWirings');\r\n    const wiringsRaw = this.queryData.query.Pipeline.StreamWiring;\r\n    if (!wiringsRaw)\r\n      return l.end('no wirings');\r\n\r\n    const wirings = wiringsRaw.map(wire => {\r\n      // read connections from Pipeline\r\n      const outDsDomId = domIdOfGuid(wire.From);\r\n      const outPointDomId = outDsDomId + '_out_' + wire.Out;\r\n      const inDsDomId = domIdOfGuid(wire.To);\r\n      const inPointDomId = inDsDomId + '_in_' + wire.In;\r\n      return {\r\n        outPointDomId,\r\n        inPointDomId,\r\n        wire\r\n      };\r\n    });\r\n\r\n    l.a('wirings', { wireDetails: wirings });\r\n\r\n    // Build all the Endpoints which don't exist yet based on the wirings\r\n    wirings.forEach(w => {\r\n      // Ensure Out-Endpoint exist\r\n      this.#ensureWireEndpointExists(w.outPointDomId, w.wire.From, w.wire.Out, false);\r\n\r\n      // Ensure In-Endpoint exist\r\n      this.#ensureWireEndpointExists(w.inPointDomId, w.wire.To, w.wire.In, true);\r\n    });\r\n\r\n    // Connect all the wirings\r\n    wirings.forEach(w => this.#connect(w.outPointDomId, w.inPointDomId));\r\n\r\n    this.instance.repaintEverything();\r\n\r\n    l.end();\r\n  }\r\n\r\n  #connect(outDomId: string, inDomId: string) {\r\n    try {\r\n      this.instance.connect({\r\n        uuids: [outDomId, inDomId],\r\n        paintStyle: this.plumber.lineColors.nextLinePaintStyle(outDomId),\r\n      });\r\n    } catch (e) {\r\n      console.error({ message: 'Connection failed', from: outDomId, to: inDomId });\r\n    }\r\n  }\r\n  \r\n\r\n  #ensureWireEndpointExists(endpointId: string, sourceGuid: string, name: string, isIn: boolean) : DataSourceSet | null {\r\n    const l = this.log.fnIfInList('ensureWireEndpointExists', 'fields', name, { endpointId, sourceGuid, name, isIn });\r\n    // Find data source infos & DOM, if not found, do nothing\r\n    const set = this.#findDataSourceInDom(endpointId, sourceGuid, name);\r\n    if (set == null)\r\n      return l.r(set, \"set null\");\r\n\r\n    // const name = isIn ? wire.In : wire.Out;\r\n    this.plumber.endpoints.addEndpoint(set.domDataSource, name, isIn, set.dataSource);\r\n    return l.r(set, 'ok');\r\n  }\r\n\r\n  #findDataSourceInDom(endpointId: string, sourceGuid: string, name: string) : DataSourceSet | null {\r\n    const l = this.log.fnIfInList('findDataSourceInDom', 'fields', name, { endpointId, sourceGuid, name });\r\n    // if exists, do nothing\r\n    if (this.instance.getEndpoint(endpointId))\r\n      return l.r(null, \"endpoint exists, exit\");\r\n\r\n    const result = this.queryData.findDataSourceAndDom(sourceGuid);\r\n    return l.r(result, `found: ${result != null}`);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n// https://stackoverflow.com/questions/14446511/most-efficient-method-to-groupby-on-an-array-of-objects\r\nconst groupBy = <T, K extends keyof any>(arr: T[], key: (i: T) => K) =>\r\n  arr.reduce((groups, item) => {\r\n    (groups[key(item)] ||= []).push(item);\r\n    return groups;\r\n  }, {} as Record<K, T[]>);\r\n\r\n\r\n      // 2025-04-02 2dm standardized / reduced the code old\r\n      // leave commented out portions in for a few weeks, to ensure we know what happened if something breaks\r\n      // Ensure In-Endpoint exist\r\n      // if (!this.#instance.getEndpoint(fromUuid)) {\r\n      //   const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + sourceElementId);\r\n      //   if (!domDataSource)\r\n      //     return;\r\n      //   const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n      //   const dataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n      //   this.#addEndpoint(domDataSource, wire.Out, false, dataSource, outGroups[wire.From].length);\r\n      // }\r\n      // Ensure Out-Endpoint exist\r\n      // if (!this.#instance.getEndpoint(toUuid)) {\r\n      //   const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + targetElementId);\r\n      //   if (!domDataSource)\r\n      //     return;\r\n      //   const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n      //   const dataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n      //   // if (wire.In === \"DEBUG\") debugger;\r\n      //   this.#addEndpoint(domDataSource, wire.In, true, dataSource, inGroups[wire.To].length);\r\n      // }\r\n\r\n      // this.#connect(w.outPointDomId, w.inPointDomId);\r\n","import { classLog } from '../../shared/logging';\r\nimport { DataSource, PipelineModel, PipelineResultStream, VisualDesignerData } from '../models';\r\nimport { ConnectionLineColors } from './connection-line-colors';\r\nimport { ConnectionsManager } from './connections-manager';\r\nimport { getEndpointLabel } from './datasource.helpers';\r\nimport { EndpointDefinitionsService } from './endpoint-definitions';\r\nimport { EndpointLabelRenameParts } from './endpoint-label-rename.model';\r\nimport { EndpointsManager } from './endpoints-manager';\r\nimport { JsPlumbInstanceManager } from './jsplumb-instance-manager';\r\nimport { JsPlumbEndpoint, JsPlumbInstance } from './jsplumb.models';\r\nimport { LinesDecorator } from './lines-decorator';\r\nimport { domIdOfGuid, guidOfDomId } from './plumber-constants';\r\nimport { QueryDataManager } from './query-data-manager';\r\nimport { WiringsHelper } from './wirings.helper';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  addEndpoint: true,\r\n  initDomDataSources: false,\r\n  eventConnectionDetached: true,\r\n  eventConnectionAttached: true,\r\n  fields: ['TestIn2'],\r\n}\r\n\r\nexport class Plumber {\r\n\r\n  log = classLog({Plumber}, logSpecs);\r\n\r\n  #instance: JsPlumbInstance;\r\n\r\n  lineColors = new ConnectionLineColors();\r\n\r\n  #endpointDefs: EndpointDefinitionsService;\r\n\r\n  lineDecorator: LinesDecorator;\r\n\r\n  connections: ConnectionsManager;\r\n\r\n  #instanceManager: JsPlumbInstanceManager;\r\n\r\n  endpoints: EndpointsManager;\r\n\r\n  queryData: QueryDataManager;\r\n\r\n  constructor(\r\n    private jsPlumbRoot: HTMLElement,\r\n    private query: PipelineModel,\r\n    private dataSources: DataSource[],\r\n    private onConnectionsChangedParent: () => void,\r\n    private onDragend: (pipelineDataSourceGuid: string, position: VisualDesignerData) => void,\r\n    private onDebugStream: (stream: PipelineResultStream) => void,\r\n    renameDialogParts: EndpointLabelRenameParts,\r\n  ) {\r\n    this.queryData = new QueryDataManager(this.jsPlumbRoot, this.query, this.dataSources);\r\n    this.#endpointDefs = new EndpointDefinitionsService(query, { ...renameDialogParts, onConnectionsChanged: () => this.#onConnectionsChanged() });\r\n    this.#instanceManager = new JsPlumbInstanceManager(this.jsPlumbRoot, this.lineColors);\r\n    this.#instance = this.#instanceManager.instance;\r\n    // requires instance, so must happen after that\r\n    this.lineDecorator = new LinesDecorator(this.#instance, this.query, this.onDebugStream);\r\n    this.connections = new ConnectionsManager(this.#instance, this.query, this.dataSources, this.#endpointDefs, () => this.#onConnectionsChanged());\r\n    this.endpoints = new EndpointsManager(this.#instance, this.#endpointDefs, this.connections, this.queryData);\r\n\r\n    // Suspend drawing while initializing\r\n    this.#instance.batch(() => {\r\n      this.#initDomDataSources();\r\n      new WiringsHelper(this, this.#instance, this.queryData).initWirings();\r\n      this.connections.setup();\r\n      this.endpoints.updateAfterChanges();\r\n    });\r\n\r\n    // spm NOTE: repaint after initial paint fixes:\r\n    // Error: <svg> attribute width: Expected length, \"-Infinity\".\r\n    this.#instance.repaintEverything();\r\n\r\n  }\r\n  #onConnectionsChanged() {\r\n    // After connection changes, re-check if we need to slant the labels\r\n    this.endpoints.updateAfterChanges();\r\n    // call the parent for storing the data etc.\r\n    this.onConnectionsChangedParent();\r\n  }\r\n\r\n  destroy() {\r\n    this.#instanceManager.destroy();\r\n  }\r\n\r\n  removeAllEndpoints(pipelineDataSourceGuid: string) {\r\n    const elementId = domIdOfGuid(pipelineDataSourceGuid);\r\n    this.connections.bulkDelete = true;\r\n    this.#instance.batch(() => {\r\n      this.#instance.selectEndpoints({ element: elementId }).delete();\r\n    });\r\n    this.connections.bulkDelete = false;\r\n  }\r\n\r\n  getStreamsOut() {\r\n    const streamsOut: string[] = [];\r\n    this.#instance\r\n      .selectEndpoints({ target: domIdOfGuid('Out') })\r\n      .each((endpoint: JsPlumbEndpoint) => {\r\n        streamsOut.push(getEndpointLabel(endpoint));\r\n      });\r\n    const streamsOutStr = streamsOut.join(',');\r\n    return streamsOutStr;\r\n  }\r\n\r\n  /** Create sources, targets and endpoints */\r\n  #initDomDataSources() {\r\n    const l = this.log.fnIf('initDomDataSources');\r\n    for (const queryDs of this.query.DataSources) {\r\n      const { domDataSource: domDs, definition: dataSource } = this.queryData.findDomAndDef(queryDs.EntityGuid, queryDs.PartAssemblyAndType);\r\n      if (!domDs)\r\n        continue;\r\n\r\n      if (this.query.Pipeline.AllowEdit) {\r\n        // WARNING! Must happen before instance.makeSource()\r\n        this.#instance.draggable(domDs, {\r\n          grid: [20, 20],\r\n          stop: (event: { el: HTMLElement, finalPos: number[] }) => {\r\n            const element: HTMLElement = event.el;\r\n            const queryDsGuid: string = guidOfDomId(element.id);\r\n            const position: VisualDesignerData = {\r\n              Top: event.finalPos[1],\r\n              Left: event.finalPos[0],\r\n            };\r\n            setTimeout(() => this.onDragend(queryDsGuid, position));\r\n          }\r\n        });\r\n      }\r\n\r\n      // Add Out-Endpoints from Definition\r\n      const outCount = dataSource.Out?.length ?? 0;\r\n      l.a('dataSource.Out', { outCount, out: dataSource.Out });\r\n      dataSource.Out?.forEach(name => {\r\n        this.endpoints.addEndpoint(domDs, name, false, queryDs);\r\n      });\r\n\r\n      // Add dynamic Out-Endpoints (if .OutMode is not static)\r\n      if (dataSource.OutMode != 'static') {\r\n        const dynOut = this.#endpointDefs.buildSourceDef(queryDs.EntityGuid);\r\n        this.#instance.makeSource(domDs, dynOut, { filter: '.add-endpoint' });\r\n      }\r\n\r\n      // Add In-Endpoints from Definition\r\n      const inCount = dataSource.In?.length ?? 0;\r\n      l.a('dataSource.In', { inCount, in: dataSource.In });\r\n      dataSource.In?.forEach(name => {\r\n        this.endpoints.addEndpoint(domDs, name, true, queryDs);\r\n      });\r\n\r\n      // Make DataSource a Target for new Endpoints (if .In is an Array)\r\n      if (dataSource.In) {\r\n        const targetEndpointUnlimited = this.#endpointDefs.buildTargetDef(queryDs.EntityGuid);\r\n        targetEndpointUnlimited.maxConnections = -1;\r\n        this.#instance.makeTarget(domDs, targetEndpointUnlimited);\r\n      }\r\n\r\n    }\r\n    l.end();\r\n  }\r\n\r\n\r\n}\r\n","@if (visQuerySvc.pipelineModel()) {\r\n  <div #domRoot id=\"pipeline-root\">\r\n    <!-- do not use trackBy, jsPlumb drag stops working properly after delete -->\r\n    @if (!hardReset) {\r\n      @for (dataSource of visQuerySvc.pipelineModel().DataSources; track dataSource) {\r\n        <div\r\n          #domDataSource\r\n          [id]=\"domIdOfGuid(dataSource.EntityGuid)\"\r\n          class=\"dataSource\"\r\n          [ngStyle]=\"{\r\n            top: dataSource.VisualDesignerData.Top + 'px',\r\n            left: dataSource.VisualDesignerData.Left + 'px',\r\n            'min-width': dataSource.VisualDesignerData.Width ? dataSource.VisualDesignerData.Width + 'px' : null,\r\n          }\"\r\n          [ngClass]=\"{\r\n            'show-details': showDataSourceDetails() && visQuerySvc.dataSourceConfigs()[dataSource.EntityId]?.length,\r\n          }\"\r\n        >\r\n          <div class=\"actions left\">\r\n            <mat-icon class=\"type-info\" [title]=\"typeInfos()[dataSource.EntityGuid].UiHint\">\r\n              {{ typeInfos()[dataSource.EntityGuid].Icon }}\r\n            </mat-icon>\r\n            @if (visQuerySvc.pipelineModel().Pipeline.AllowEdit && typeInfos()[dataSource.EntityGuid].EnableConfig) {\r\n              <mat-icon\r\n                class=\"configure\"\r\n                title=\"Configure data source\"\r\n                appMousedownStopPropagation\r\n                (click)=\"configureDataSource(dataSource)\"\r\n              >\r\n                settings\r\n              </mat-icon>\r\n            }\r\n            @if (typeInfos()[dataSource.EntityGuid].HelpLink) {\r\n              <mat-icon\r\n                class=\"help\"\r\n                title=\"Help for this data source\"\r\n                appMousedownStopPropagation\r\n                (click)=\"openHelp(typeInfos()[dataSource.EntityGuid].HelpLink)\"\r\n              >\r\n                help_outline\r\n              </mat-icon>\r\n            }\r\n          </div>\r\n          <div class=\"actions right\">\r\n            @if (visQuerySvc.pipelineModel().Pipeline.AllowEdit && !isOutDataSource(dataSource)) {\r\n              <mat-icon class=\"delete\" title=\"Delete\" appMousedownStopPropagation (click)=\"remove(dataSource)\"> delete </mat-icon>\r\n            }\r\n          </div>\r\n          <div\r\n            class=\"name\"\r\n            title=\"Click to edit name\"\r\n            appMousedownStopPropagation\r\n            (click)=\"visQuerySvc.pipelineModel().Pipeline.AllowEdit && editName(dataSource)\"\r\n          >\r\n            <span>{{ dataSource.Name || '(no name)' }}</span>\r\n            <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n          </div>\r\n          <br />\r\n          <div\r\n            class=\"description\"\r\n            title=\"Click to edit description\"\r\n            appMousedownStopPropagation\r\n            (click)=\"visQuerySvc.pipelineModel().Pipeline.AllowEdit && editDescription(dataSource)\"\r\n          >\r\n            <span>{{ dataSource.Description }}</span>\r\n            <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n          </div>\r\n          <br />\r\n          @if (showDataSourceDetails() && visQuerySvc.dataSourceConfigs()[dataSource.EntityId]?.length) {\r\n            <hr style=\"margin: 0\" />\r\n            <table class=\"configs\">\r\n              @for (config of visQuerySvc.dataSourceConfigs()[dataSource.EntityId]; track config) {\r\n                <tr class=\"config\">\r\n                  <td class=\"config-name\" [title]=\"config.name\">{{ config.name }}</td>\r\n                  <td class=\"config-value\" [title]=\"config.value\">{{ config.value }}</td>\r\n                </tr>\r\n              }\r\n            </table>\r\n          }\r\n          <div class=\"typename\" [title]=\"dataSource.PartAssemblyAndType\">Type: {{ getTypeName(dataSource.PartAssemblyAndType) }}</div>\r\n          @if (visQuerySvc.pipelineModel().Pipeline.AllowEdit && typeInfos()[dataSource.EntityGuid].DynamicOut) {\r\n            <div class=\"add-endpoint sourceEndpoint dynamic\" title=\"Drag a new Out-Connection\"></div>\r\n          }\r\n          @if (visQuerySvc.pipelineModel().Pipeline.AllowEdit && typeInfos()[dataSource.EntityGuid].DynamicIn) {\r\n            <div class=\"many-in targetEndpoint dynamic\" title=\"This data source supports multiple In-Connections\"></div>\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n  </div>\r\n}\r\n","// tslint:disable-next-line:max-line-length\r\nimport { NgClass, NgStyle } from '@angular/common';\r\nimport { AfterViewInit, ChangeDetectorRef, Component, computed, ElementRef, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { BehaviorSubject, combineLatest, map } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { BaseComponent } from '../../shared/components/base.component';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { MousedownStopPropagationDirective } from '../../shared/directives/mousedown-stop-propagation.directive';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { loadScripts } from '../../shared/helpers/load-scripts.helper';\r\nimport { classLog } from '../../shared/logging';\r\nimport { PipelineDataSource, PipelineResultStream, VisualDesignerData } from '../models';\r\nimport { QueryDefinitionService } from '../services/query-definition.service';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { findDefByType } from './datasource.helpers';\r\nimport { calculateTypeInfos } from './plumb-editor.helpers';\r\nimport { domIdOfGuid } from './plumber-constants';\r\nimport { Plumber } from './plumber.helper';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  ngAfterViewInit: false,\r\n}\r\n\r\nconst jsPlumbUrl = 'https://cdnjs.cloudflare.com/ajax/libs/jsPlumb/2.14.5/js/jsplumb.min.js';\r\n\r\n@Component({\r\n    selector: 'app-plumb-editor',\r\n    templateUrl: './plumb-editor.component.html',\r\n    styles: [':host { display: block; width: 100%; height: 100%; }'],\r\n    imports: [\r\n        NgStyle,\r\n        NgClass,\r\n        MatIconModule,\r\n        MousedownStopPropagationDirective,\r\n    ]\r\n})\r\nexport class PlumbEditorComponent extends BaseComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  log = classLog({ PlumbEditorComponent }, logSpecs);\r\n\r\n  @ViewChild('domRoot') private domRootRef: ElementRef<HTMLDivElement>;\r\n  @ViewChildren('domDataSource') private domDataSourcesRef: QueryList<ElementRef<HTMLDivElement>>;\r\n\r\n  /** provide this fn to the UI */\r\n  domIdOfGuid = domIdOfGuid;\r\n  hardReset = false;\r\n\r\n  #plumber: Plumber;\r\n  #scriptLoaded$ = new BehaviorSubject(false);\r\n\r\n\r\n  #queryDefinitionSvc = transient(QueryDefinitionService);\r\n\r\n  showDataSourceDetails = computed(() => {\r\n    const result = JsonHelpers.tryParse(this.visQuerySvc.pipelineModel()?.Pipeline.VisualDesignerData) ?? {};\r\n    return result.ShowDataSourceDetails ?? false;\r\n  });\r\n\r\n  typeInfos = computed(() =>\r\n    calculateTypeInfos(this.visQuerySvc.pipelineModel()?.DataSources ?? [], this.visQuerySvc.dataSources()\r\n    ));\r\n\r\n  constructor(\r\n    public visQuerySvc: VisualQueryStateService, // Check if this not with transient better\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) { super(); }\r\n\r\n  ngOnInit() {\r\n    loadScripts([{ test: 'jsPlumb', src: jsPlumbUrl }], () => {\r\n      this.#scriptLoaded$.next(true);\r\n    });\r\n\r\n    this.subscriptions.add(\r\n      this.visQuerySvc.putEntityCountOnConnections$.subscribe(result => {\r\n        this.#plumber.lineDecorator.addEntityCount(result);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const l = this.log.fnIf('ngAfterViewInit');\r\n    // https://stackoverflow.com/questions/37087864/execute-a-function-when-ngfor-finished-in-angular-2/37088348#37088348\r\n    const domDataSourcesLoaded$ = this.domDataSourcesRef.changes.pipe(map(() => true));\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([this.#scriptLoaded$, domDataSourcesLoaded$]).subscribe(([scriptLoaded, domDataSourcesLoaded]) => {\r\n        if (!scriptLoaded || !domDataSourcesLoaded)\r\n          return;\r\n\r\n        l.a('scriptLoaded and domDataSourcesLoaded', { scriptLoaded, domDataSourcesLoaded });\r\n\r\n        this.#plumber?.destroy();\r\n        this.#plumber = new Plumber(\r\n          this.domRootRef.nativeElement,\r\n          this.visQuerySvc.pipelineModel(),\r\n          this.visQuerySvc.dataSources(),\r\n          () => this.onConnectionsChanged(),\r\n          this.onDragend.bind(this),\r\n          this.onDebugStream.bind(this),\r\n          {\r\n            matDialog: this.matDialog,\r\n            viewContainerRef: this.viewContainerRef,\r\n            changeDetectorRef: this.changeDetectorRef,\r\n            onConnectionsChanged: () => this.onConnectionsChanged(),\r\n          },\r\n        );\r\n      })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.#plumber?.destroy();\r\n    this.#scriptLoaded$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  onConnectionsChanged() {\r\n    const connections = this.#plumber.connections.getAll();\r\n    const streamsOut = this.#plumber.getStreamsOut();\r\n    this.visQuerySvc.changeConnections(connections, streamsOut);\r\n  }\r\n\r\n  onDragend(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    this.visQuerySvc.changeDataSourcePosition(pipelineDataSourceGuid, position);\r\n  }\r\n\r\n  onDebugStream(stream: PipelineResultStream) {\r\n    this.visQuerySvc.debugStream(stream);\r\n  }\r\n\r\n  configureDataSource(dataSource: PipelineDataSource): void {\r\n    // ensure dataSource entity is saved\r\n    if (dataSource.EntityGuid.includes('unsaved'))\r\n      return this.visQuerySvc.saveAndRun(true, false);\r\n\r\n    this.visQuerySvc.editDataSource(dataSource);\r\n  }\r\n\r\n  getTypeName(partAssemblyAndType: string) {\r\n    const dataSource = findDefByType(this.visQuerySvc.dataSources(), partAssemblyAndType);\r\n    return this.#queryDefinitionSvc.typeNameFilter(dataSource?.TypeNameForUi || partAssemblyAndType, 'className');\r\n  }\r\n\r\n  isOutDataSource(pipelineDataSource: PipelineDataSource) {\r\n    return pipelineDataSource.PartAssemblyAndType === eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType;\r\n  }\r\n\r\n  remove(pipelineDataSource: PipelineDataSource) {\r\n    if (!confirm(`Delete ${pipelineDataSource.Name} data source?`))\r\n      return;\r\n\r\n    // Update UI\r\n    this.#plumber.removeAllEndpoints(pipelineDataSource.EntityGuid);\r\n\r\n    // Tell backend to clean up\r\n    const connections = this.#plumber.connections.getAll();\r\n    const streamsOut = this.#plumber.getStreamsOut();\r\n    this.visQuerySvc.removeDataSource(pipelineDataSource.EntityGuid, connections, streamsOut);\r\n  }\r\n\r\n  openHelp(url: string) {\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  editName(dataSource: PipelineDataSource) {\r\n    const newName = prompt('Rename data source', dataSource.Name)?.trim();\r\n    if (newName == null || newName === '')\r\n      return;\r\n\r\n    this.visQuerySvc.renameDataSource(dataSource.EntityGuid, newName);\r\n  }\r\n\r\n  editDescription(dataSource: PipelineDataSource) {\r\n    const newDescription = prompt('Edit description', dataSource.Description)?.trim();\r\n    if (newDescription == null)\r\n      return;\r\n\r\n    this.visQuerySvc.changeDataSourceDescription(dataSource.EntityGuid, newDescription);\r\n  }\r\n\r\n}\r\n","@if (vsSvc.pipelineModel()) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"wrapper\">\r\n      <div class=\"actions\">\r\n        <button mat-raised-button class=\"eav-action-button action\" style=\"border: 1px #fff solid\" (click)=\"saveAndRunQuery(true, true)\">Save and run</button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(false, true)\">Run</button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(true, false)\">Save</button>\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">\r\n          <div>Query Parameters</div>\r\n          <div>\r\n            <button mat-icon-button tippy=\"Edit parameters\" (click)=\"editPipeline()\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button mat-icon-button tippy=\"Query Params Docs\" (click)=\"openParamsHelp()\">\r\n              <mat-icon>info</mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        @if (vsSvc.pipelineModel().Pipeline.Params?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of vsSvc.pipelineModel().Pipeline.Params?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">Test Parameters</div>\r\n        @if (vsSvc.pipelineModel().Pipeline.TestParameters?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of vsSvc.pipelineModel().Pipeline.TestParameters?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      @if (visualDesignerDataSig()) {\r\n        <div class=\"parameters\">\r\n          <span class=\"eav-slide-toggle-label\">Show DataSource Params</span>\r\n          <mat-slide-toggle\r\n            color=\"primary\"\r\n            [checked]=\"visualDesignerDataSig().ShowDataSourceDetails\"\r\n            (change)=\"showDataSourceDetails($event)\"\r\n          />\r\n        </div>\r\n      }\r\n      @if (warningSig()) {\r\n        @if (warningSig().length) {\r\n          <div class=\"warnings\">\r\n            <div class=\"title\">\r\n              <span>Warnings</span>\r\n              <mat-icon style=\"color: red\">warning</mat-icon>\r\n            </div>\r\n            <ol class=\"values\">\r\n              @for (warning of warningSig(); track warning) {\r\n                <li [innerHTML]=\"warning\"></li>\r\n              }\r\n            </ol>\r\n          </div>\r\n        }\r\n      }\r\n      @if (vsSvc.pipelineModel().Pipeline.Description) {\r\n        <div class=\"description\">\r\n          <div class=\"title\">Query Description</div>\r\n          <div>{{ vsSvc.pipelineModel().Pipeline.Description }}</div>\r\n        </div>\r\n      }\r\n      <div class=\"footer-actions\">\r\n        <button mat-raised-button class=\"action\" (click)=\"openRestApi()\">\r\n          <span>Use in JSON / REST API</span>\r\n          <mat-icon>code_curly</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n","import { Component, signal } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { transient } from '../../../../../core';\r\nimport { GoToDevRest } from '../../dev-rest';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { calculateWarnings } from './run-explorer.helpers';\r\n\r\n@Component({\r\n    selector: 'app-run-explorer',\r\n    templateUrl: './run-explorer.component.html',\r\n    styleUrls: ['./run-explorer.component.scss'],\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatSlideToggleModule,\r\n    ]\r\n})\r\nexport class RunExplorerComponent {\r\n\r\n  warningSig = signal<string[]>(\r\n    calculateWarnings(this.vsSvc?.pipelineModel() ?? null, this.context)\r\n  );\r\n\r\n  visualDesignerDataSig = signal<Record<string, any>>(\r\n    JsonHelpers.tryParse(this.vsSvc?.pipelineModel()?.Pipeline.VisualDesignerData) ?? {}\r\n  );\r\n\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private context: Context,\r\n    public vsSvc: VisualQueryStateService,\r\n  ) { }\r\n\r\n  editPipeline() {\r\n    this.vsSvc.editPipelineEntity();\r\n  }\r\n\r\n  openParamsHelp() {\r\n    window.open('https://go.2sxc.org/QueryParams', '_blank');\r\n  }\r\n\r\n  saveAndRunQuery(save: boolean, run: boolean) {\r\n    this.vsSvc.saveAndRun(save, run);\r\n  }\r\n\r\n  showDataSourceDetails(event: MatSlideToggleChange): void {\r\n    this.vsSvc.showDataSourceDetails(event.checked);\r\n  }\r\n\r\n  openRestApi() {\r\n    const queryGuid = this.vsSvc.pipelineModel().Pipeline.EntityGuid;\r\n    this.#dialogRouter.navRelative([GoToDevRest.getUrlQueryDialog(queryGuid)]);\r\n  }\r\n}\r\n","import { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\n\r\n/**\r\n * Check if there are special warnings the developer should know.\r\n * Typically when the test ModuleId is different from the one we're currently working on\r\n */\r\nexport function calculateWarnings(pipelineModel: PipelineModel, context: Context) {\r\n  if(!pipelineModel) return [];\r\n  const warnings: string[] = [];\r\n\r\n  try {\r\n    const queryParams = pipelineModel.Pipeline.Params?.split(/\\r?\\n/) || [];\r\n    const testParams = pipelineModel.Pipeline.TestParameters?.split(/\\r?\\n/) || [];\r\n\r\n    queryParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) return;\r\n\r\n      // Check if the syntax on Query Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const paramSyntax = /^[a-zA-Z0-9]+=(.*)$/gmi;\r\n      const matched = paramSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Query Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>key=value</code> <br>\r\n          or resolve to a token like: <br>\r\n          <code>key=[source:key]</code>\r\n        `);\r\n      }\r\n    });\r\n\r\n    testParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) return;\r\n\r\n      // Check if the syntax on Test Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const testParamSyntax = /^\\[[a-zA-Z]+:[a-zA-Z0-9]+\\]=(.*)$/gmi;\r\n      const matched = testParamSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Test Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>[source:key]=value</code>\r\n        `);\r\n      }\r\n\r\n      // Check if we should show the warning about the test ModuleId.\r\n      // This is because in the old days, the ModuleId wasn't auto-filled, so people had to add it as a test value.\r\n      // Now it's not necessary any more\r\n      const midRegex = /^\\[module:id\\]=([0-9]*)$/gmi;\r\n      const midMatch = midRegex.exec(param);\r\n      if (midMatch) {\r\n        const testMid = midMatch[1];\r\n        const urlMid = context.moduleId?.toString();\r\n        if (testMid !== urlMid) {\r\n          warnings.push(`\r\n            Your test ModuleId (${testMid}) is different from the current ModuleId (${urlMid}).<br>\r\n            Note that 2sxc automatically provides the ModuleId - so you usually do not need to set it\r\n          `);\r\n        }\r\n      }\r\n\r\n      const oldMidRegex = /^\\[module:moduleid\\]=([0-9]*)$/gmi;\r\n      const oldMidMatch = oldMidRegex.exec(param);\r\n      if (oldMidMatch) {\r\n        warnings.push(`\r\n          You are using deprecated [Module:ModuleId] test parameter.<br>\r\n          Please use [Module:Id]\r\n        `);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Something went wrong in calculateWarnings for params', error);\r\n  }\r\n\r\n  return warnings;\r\n}\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ActivatedRoute, RouterOutlet } from '@angular/router';\r\nimport { Context } from '../shared/services/context';\r\nimport { AddExplorerComponent } from './add-explorer/add-explorer.component';\r\nimport { PlumbEditorComponent } from './plumb-editor/plumb-editor.component';\r\nimport { RunExplorerComponent } from './run-explorer/run-explorer.component';\r\nimport { VisualQueryStateService } from './services/visual-query.service';\r\n\r\n@Component({\r\n    selector: 'app-visual-query',\r\n    templateUrl: './visual-query.component.html',\r\n    styleUrls: ['./visual-query.component.scss'],\r\n    imports: [\r\n        RouterOutlet,\r\n        NgClass,\r\n        MatIconModule,\r\n        RunExplorerComponent,\r\n        AddExplorerComponent,\r\n        PlumbEditorComponent,\r\n    ],\r\n    providers: [\r\n        VisualQueryStateService, // Shared State for the entire Visual Query, - init run here\r\n    ]\r\n})\r\nexport class VisualQueryComponent implements OnInit {\r\n  @ViewChild(PlumbEditorComponent) plumbEditor: PlumbEditorComponent;\r\n\r\n  explorer = {\r\n    run: 'run',\r\n    add: 'add'\r\n  };\r\n  activeExplorer = this.explorer.run;\r\n\r\n  constructor(\r\n    private context: Context,\r\n    private route: ActivatedRoute,\r\n    private visualQueryService: VisualQueryStateService\r\n  ) {\r\n    this.context.init(this.route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.visualQueryService.init();\r\n  }\r\n\r\n  toggleExplorer(explorer: string) {\r\n    this.activeExplorer = (this.activeExplorer === explorer) ? null : explorer;\r\n  }\r\n\r\n  openHelp() {\r\n    window.open('https://go.2sxc.org/visual-query', '_blank');\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n<div class=\"editor-root\">\r\n  <div class=\"editor-side-toolbar\">\r\n    <div class=\"button\" tippy=\"Run\" [ngClass]=\"{ 'active': activeExplorer === explorer.run }\"\r\n      (click)=\"toggleExplorer(explorer.run)\">\r\n      <mat-icon>play_arrow</mat-icon>\r\n    </div>\r\n    <div class=\"button\" tippy=\"Add\" [ngClass]=\"{ 'active': activeExplorer === explorer.add }\"\r\n      (click)=\"toggleExplorer(explorer.add)\">\r\n      <mat-icon>add</mat-icon>\r\n    </div>\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"button\" tippy=\"Help\" (click)=\"openHelp()\">\r\n      <mat-icon>help_outline</mat-icon>\r\n    </div>\r\n  </div>\r\n\r\n  <app-run-explorer [hidden]=\"activeExplorer !== explorer.run\"></app-run-explorer>\r\n\r\n  <app-add-explorer [hidden]=\"activeExplorer !== explorer.add\"></app-add-explorer>\r\n\r\n  <app-plumb-editor></app-plumb-editor>\r\n</div>\r\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","\r\nexport function isEscape(event: KeyboardEvent): boolean {\r\n  return event.key === 'Escape';\r\n}\r\n\r\nexport function isCtrlS(event: KeyboardEvent): boolean {\r\n  return (event.key === 's' || event.key === 'S') && (event.ctrlKey || event.metaKey);\r\n}\r\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import { L as ListKeyManager } from './list-key-manager-C7tp3RbG.mjs';\n\nclass FocusKeyManager extends ListKeyManager {\n    _origin = 'program';\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\nexport { FocusKeyManager as F };\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBaseSignal } from '../../shared/services/http-service-base-signal';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService extends HttpServiceBaseSignal {\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.appId,\r\n        zoneId: this.zoneId,\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","import { httpResource } from '@angular/common/http';\r\nimport { Injectable, Signal } from '@angular/core';\r\nimport { HttpServiceBaseSignal } from '../../shared/services/http-service-base-signal';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\n\r\nconst webApiAppPartsGet = 'admin/appParts/get';\r\n@Injectable()\r\nexport class ExportAppPartsService extends HttpServiceBaseSignal {\r\n\r\n  getContentInfoLiveParam(scope: Signal<string>) {\r\n    return httpResource<ContentInfo>(() => {\r\n      return {\r\n        url: this.apiUrl(webApiAppPartsGet),\r\n        params: {\r\n          appid: this.appId,\r\n          zoneId: this.zoneId,\r\n          scope: scope()\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.appId\r\n      + '&zoneId=' + this.zoneId\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBaseSignal } from '../../shared/services/http-service-base-signal';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService extends HttpServiceBaseSignal {\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.zoneId }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { httpResource } from '@angular/common/http';\r\nimport { Injectable, Signal } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { classLog } from '../../shared/logging';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Query } from '../models/query.model';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  getAll: false,\r\n  getAllSig: true,\r\n  getAllLive: false,\r\n  getAllRes: true,\r\n  importQuery: false,\r\n  clonePipeline: false,\r\n  delete: false,\r\n  update: false,\r\n};\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService extends HttpServiceBase {\r\n\r\n  log = classLog({ PipelinesService }, logSpecs);\r\n  // TODO: @2dg, ask 2dm \r\n  getAll(contentType: string) {\r\n    const l = this.log.fnIf('getAll');\r\n    return l.r(this.getHttpApiUrl<Query[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType }\r\n    }));\r\n  }\r\n\r\n  // Full Code, repated x times\r\n  getAllLive(contentType: string, refresh: Signal<unknown>) {\r\n    this.log.fnIf('getAllLive', { contentType, refresh });\r\n    return httpResource<Query[]>(() => {\r\n      refresh();\r\n      return ({\r\n        url: this.apiUrl(webApiEntityList),\r\n        params: { appId: this.appId, contentType: contentType }\r\n      });\r\n    });\r\n  }\r\n\r\n  /** Experimental httpResource use! */\r\n  getAllRes(contentType: string, initial?: Query[]) {\r\n    const l = this.log.fnIf('getAllRes');\r\n    const res = httpResource<Query[]>(() => ({\r\n      url: webApiEntityList,\r\n      params: { appId: this.appId, contentType },\r\n    }), { defaultValue: initial });\r\n    return l.r(res);\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    const l = this.log.fnIf('importQuery');\r\n    const obs = from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiQueryImport), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n    return l.r(obs);\r\n  }\r\n\r\n  clonePipelinePromise(id: number): Promise<null> {\r\n    const l = this.log.fnIf('clonePipeline');\r\n    const obs = this.fetchPromise<null>(webApiQueryClone, {\r\n      params: { Id: id.toString(), appId: this.appId }\r\n    });\r\n    return l.r(obs);\r\n  }\r\n\r\n  delete(id: number) {\r\n    const l = this.log.fnIf('delete');\r\n    const obs = this.http.delete<boolean>(this.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n    return l.r(obs);\r\n  }\r\n}\r\n"],"x_google_ignoreList":[35,37,38,39]}