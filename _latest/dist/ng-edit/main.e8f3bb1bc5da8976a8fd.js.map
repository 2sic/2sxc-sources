{"version":3,"sources":["./projects/ng-dialogs/src/app/shared/services/context.ts","./projects/ng-dialogs/src/app/content-type-fields/constants/input-type.constants.ts","./projects/edit/eav-material-controls/validators/validation-helper.ts","./projects/edit/shared/constants/wrappers.constants.ts","./projects/edit/shared/services/assets.service.ts","./projects/edit/shared/services/eav.service.ts","./projects/edit/eav-item-dialog/multi-item-edit-form/multi-item-edit-form.helpers.ts","./projects/edit/shared/services/edit-initializer.service.ts","./projects/edit/shared/services/edit-routing.service.ts","./projects/edit/shared/services/entity.service.ts","./projects/edit/shared/services/formula-designer.service.ts","./projects/edit/shared/services/fields-settings.service.ts","./projects/edit/shared/services/fields-translate.service.ts","./projects/edit/shared/services/file-type.service.ts","./projects/edit/shared/services/forms-state.service.ts","./projects/edit/shared/services/logging.service.ts","./projects/edit/shared/services/load-icons.service.ts","./projects/edit/assets/icons/2sxc/Material-Icon-Adam-48.svg","./projects/edit/assets/icons/2sxc/Material-Icon-Adam-48-filled.svg","./projects/edit/assets/icons/font-awesome/draft-branch.svg","./projects/edit/assets/icons/font-awesome/file.svg","./projects/edit/assets/icons/font-awesome/file-archive.svg","./projects/edit/assets/icons/font-awesome/file-audio.svg","./projects/edit/assets/icons/font-awesome/file-code.svg","./projects/edit/assets/icons/font-awesome/file-excel.svg","./projects/edit/assets/icons/font-awesome/file-image.svg","./projects/edit/assets/icons/font-awesome/file-pdf.svg","./projects/edit/assets/icons/font-awesome/file-powerpoint.svg","./projects/edit/assets/icons/font-awesome/file-text.svg","./projects/edit/assets/icons/font-awesome/file-video.svg","./projects/edit/assets/icons/font-awesome/file-word.svg","./projects/edit/assets/icons/font-awesome/folder.svg","./projects/edit/assets/icons/font-awesome/folder-plus.svg","./projects/edit/assets/icons/font-awesome/sitemap.svg","./projects/edit/shared/services/query.service.ts","./projects/edit/shared/services/scripts-loader.service.ts","./projects/edit/field-logic/field-logic-manager.ts","./projects/edit/shared/constants/localization.constants.ts","./projects/edit/shared/helpers/dropzone-dragging.helper.ts","./projects/edit/shared/helpers/field-mask.helper.ts","./projects/edit/shared/helpers/fields-settings.helpers.ts","./projects/edit/shared/helpers/formula.helpers.ts","./projects/edit/shared/helpers/general.helpers.ts","./projects/edit/shared/helpers/input-field.helpers.ts","./projects/edit/shared/helpers/localization.helpers.ts","./projects/edit/eav-material-controls/page-picker/page-picker.component.html","./projects/edit/eav-material-controls/page-picker/page-picker.component.ts","./projects/edit/eav-material-controls/page-picker/page-picker.helpers.ts","./projects/edit/shared/helpers/page-picker.helper.ts","./projects/edit/eav-material-controls/localization/translate-menu/translate-menu.helpers.ts","./projects/edit/edit.matcher.ts","./projects/ng-dialogs/src/environments/environment.prod.ts","./projects/edit/shared/models/formula.models.ts","./projects/edit/shared/models/log-entry.model.ts","./projects/edit/shared/models/publish-mode.models.ts","./projects/ng-dialogs/src/app/shared/helpers/update-env-vars-from-dialog-settings.helper.ts","./projects/edit/shared/models/eav/eav-content-type-attribute.ts","./projects/edit/shared/models/eav/eav-content-type.ts","./projects/edit/shared/models/eav/eav-dimension.ts","./projects/edit/shared/models/eav/eav-entity-attributes.ts","./projects/edit/shared/models/eav/eav-entity.ts","./projects/edit/shared/models/eav/eav-item.ts","./projects/edit/shared/models/eav/eav-value.ts","./projects/edit/shared/models/eav/eav-values.ts","./projects/ng-dialogs/src/app/shared/helpers/url-prep.helper.ts","./projects/edit/shared/store/ngrx-data/base-data.service.ts","./projects/edit/shared/store/ngrx-data/adam-cache.service.ts","./projects/edit/shared/store/ngrx-data/content-type-item.service.ts","./projects/edit/shared/store/ngrx-data/content-type.service.ts","./projects/edit/shared/store/ngrx-data/entity-cache.service.ts","./projects/edit/shared/store/ngrx-data/entity-metadata.ts","./projects/edit/shared/store/ngrx-data/feature.service.ts","./projects/edit/shared/store/ngrx-data/global-config.service.ts","./projects/edit/shared/store/ngrx-data/input-type.service.ts","./projects/edit/shared/store/ngrx-data/item.service.ts","./projects/edit/shared/store/ngrx-data/language-instance.service.ts","./projects/edit/shared/store/ngrx-data/language.service.ts","./projects/edit/shared/store/ngrx-data/link-cache.service.ts","./projects/edit/shared/store/ngrx-data/publish-status.service.ts","./projects/edit/shared/store/ngrx-data/string-query-cache.service.ts","./projects/ng-dialogs/src/app/shared/constants/session.constants.ts","./projects/ng-dialogs/src/app/shared/helpers/console-log-angular.helper.ts","./projects/edit/shared/constants/component-metadata.constants.ts","./projects/edit/shared/constants/features-guids.constants.ts","./projects/edit/shared/constants/translation-link.constants.ts","./projects/edit/shared/helpers/url.helpers.ts","./projects/ng-dialogs/src/app/shared/constants/eav.constants.ts","./projects/ng-dialogs/src/app/shared/constants/dialog-types.constants.ts","./projects/edit/shared/store/reducers/index.ts","./projects/ng-dialogs/src/app/app-routing.module.ts","./projects/ng-dialogs/src/app/app.component.ts","./projects/ng-dialogs/src/app/assets/icons/star-24px.svg","./projects/ng-dialogs/src/app/assets/icons/code-curly.svg","./projects/ng-dialogs/src/app/app.component.html","./projects/ng-dialogs/src/app/params-init.factory.ts","./projects/ng-dialogs/src/app/shared/interceptors/handle-errors.interceptor.ts","./projects/ng-dialogs/src/app/shared/interceptors/set-headers.interceptor.ts","./projects/ng-dialogs/src/app/app.module.ts","./projects/ng-dialogs/src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":["parentContext","ready","this","parent","window","contextId","id","_zoneId","routeNum","zoneId","_appId","appId","_rvt","requestToken","_tabId","tabId","_contentBlockId","contentBlockId","_moduleId","moduleId","init","route","routeSnapshot","snapshot","clearCachedValues","initRoot","sessionStorage","getItem","sessionNumber","Error","name","result","num","parseInt","isNaN","paramName","substring","length","paramMap","get","Context","StringDefault","StringUrlPath","StringDropdown","StringDropdownQuery","StringFontIconPicker","StringTemplatePicker","StringWysiwyg","BooleanDefault","BooleanTristate","DatetimeDefault","EmptyDefault","EmptyEnd","NumberDefault","EntityDefault","EntityQuery","EntityContentBlocks","HyperlinkDefault","HyperlinkLibrary","ExternalWebComponent","CustomGPS","CustomJsonEditor","CustomDefault","OldTypeDropdown","OldTypeWysiwyg","OldTypeDefault","StringWysiwygTinymce","StringWysiwygAdv","StringWysiwygDnn","DefaultSuffix","isRequired","settings","Visible","Required","getValidators","fieldName","inputType","fieldsSettingsService","required","requiredAdam","pattern","decimals","max","min","control","getFieldSettings","ignoreValidators","adamItems","ValidationRegExJavaScript","Decimals","value","matchString","toString","match","Max","Min","WrappersConstants","webApiAppFilesAll","webApiAppFile","webApiAppFileCreate","webApiExplorer","http","eavService","dnnContext","getAll","global","$2sxc","apiUrl","params","eavConfig","withSubfolders","create","path","purpose","post","AssetsService","webApiEditRoot","context","setEavConfig","editDialogContext","formId","isParentDialog","itemGuids","createMode","isCopy","enableHistory","appRoot","App","Url","lang","Language","Current","langPri","Primary","langs","All","partOfPage","portalRoot","Site","systemRoot","location","pathname","split","versioningOptions","getVersioningOptions","enableFormulaSave","Enable","FormulaSave","fetchFormData","items","saveFormData","publishing","show","hide","branch","publish","console","error","EavService","alphabetCompare","a","b","key","itemService","inputTypeService","contentTypeItemService","contentTypeService","featureService","publishStatusService","translate","languageService","languageInstanceService","snackBar","entityCacheService","adamCacheService","linkCacheService","loaded$","BehaviorSubject","initialFormValues","ngOnDestroy","complete","form","editItems","JSON","stringify","subscribe","formData","keepInitialValues","setMissingValues","next","Math","floor","random","editDialogCount","pathFromRoot","url","calculateIsParentDialog","Items","map","item","Entity","Guid","loadItems","addInputTypes","InputTypes","addContentTypeItems","ContentTypeItems","addContentTypes","ContentTypes","loadFeatures","Features","loadPrefetch","Prefetch","Adam","loadEntities","Entities","Links","getItems","Id","Header","DuplicateEntity","data","history","currentLanguage","defaultLanguage","languages","isoLangCode","use","sortedLanguages","primaryLangKey","primaryLang","sameLangs","otherLangs","language","startsWith","push","sort","sortLanguages","Object","entries","loadLanguages","addLanguageInstance","setPublishStatus","DraftShouldBranch","IsPublished","getLanguages","getCurrentLanguage","getDefaultLanguage","includes","formValues","Attributes","getInitialValuesKey","entityGuid","getInitialValues","inputTypes","getInputTypes","switchToDefault","contentTypeId","getContentTypeId","contentType","getContentType","ctAttribute","find","i","Type","InputType","attributeValues","Name","fieldSettings","setDefaultFieldSettings","mergeSettings","Metadata","firstValue","getBestValue","Default","isValueEmpty","setDefaultValue","noLanguageValue","Strict","DisableI18n","undefined","transactionItem","removeItemAttributeDimension","addItemAttributeValue","defaultLanguageValue","setCurrentLanguage","message","instant","open","duration","EditInitializerService","dialogRef","router","childFormResult$","subscription","unsubscribe","Subscription","Subject","initHideHeader","initChildFormResult","refreshOnChildVersionsClosed","isExpanded","fieldId","fieldIndex","detailsEntityGuid","detailsFieldId","isExpanded$","pipe","distinctUntilChanged","childFormResult","filter","childResult","updateEntityGuid","updateFieldId","childFormClosed","expand","componentTag","oldEditUrl","newEditUrl","currentUrl","calculatePathFromRoot","lastIndex","lastIndexOf","newUrl","replace","navigate","state","formUrl","relativeTo","add","hasDetails","updateHideHeader","events","event","startWith","firstChild","pairwise","editResult","getCurrentNavigation","extras","formResult","versionsResult","refreshEdit","close","navigateUrl","EditRoutingService","webApiEntityRoot","webApiEntityList","getAvailableEntities","contentTypeName","entitiesFilter","reactiveEntities","p","switchMap","share","delete","entityId","force","EntityService","loggingService","formulaCache$","formulaResults$","designerState$","editMode","isOpen","target","formulaCache","buildFormulaCache","getFormula","allowDraft","f","isDraft","getFormula$","formulas","objectsEqual","getFormulas","getFormulas$","asObservable","upsertFormula","formula","run","formulaFunction","buildFormulaFunction","upsertFormulaResult","errorLabel","getContentTypeTitle","addLog","designerState","getDesignerState","oldFormulaCache","oldFormulaIndex","findIndex","oldFormulaItem","newFormulaItem","cache","fn","bind","source","sourceFromSettings","sourceGuid","version","findFormulaVersion","newCache","slice","updateSaved","resetFormula","oldResults","oldResultIndex","r","newResults","isError","newResult","getFormulaResult$","results","setDesignerOpen","newState","setDesignerState","activeDesigner","getDesignerState$","attribute","formulaItems","getContentTypeItems","Formulas","formulaItem","Enabled","Formula","Target","itemTitle","showMessage","formulaCacheItem","FormulaDesignerService","formulaDesignerService","globalConfigService","editInitializerService","valueFormulaCounter","maxValueFormulaCycles","formulaSettingsCache","contentTypeSettings$","fieldsProps$","forceSettings$","contentType$","getContentType$","itemHeader$","getItemHeader$","currentLanguage$","getCurrentLanguage$","defaultLanguage$","getDefaultLanguage$","combineLatest","itemHeader","setDefaultContentTypeSettings","ctSettings","itemAttributes$","getItemAttributes$","inputTypes$","getInputTypes$","itemAttributes","fieldsProps","formulaUpdates","merged","formulaResult","runFormulas","calculated","formulaValue","DisableTranslation","findDisableTranslation","slotIsEmpty","Group","SlotCanBeEmpty","SlotIsEmpty","Disabled","disabledBecauseTranslations","getDisabledBecauseTranslations","logic","singleton","fixed","update","valuesNotEqual","Array","isArray","arraysEqual","calculatedInputType","calculateInputType","wrappers","getWrappers","initialSettings","initialDisabled","fieldTranslation","getTranslationState","constants","angularAssets","AngularAssets","index","indexOf","isExternal","isLastInGroup","findIsLastInGroup","type","translationState","keys","updateItemAttributesValues","getContentTypeSettings","getContentTypeSettings$","getFieldsProps","getFieldsProps$","getFieldSettings$","fieldsSettings","getTranslationState$","forceSettings","previousSettings","getFormulaSettingsKey","formulaSettings","runResult","runFormula","Value","settingName","defaultSetting","debugEnabled","getDebugEnabled","formulaProps","buildFormulaProps","isOpenInDesigner","V1","log","toLocaleUpperCase","_itemTitle","valueV1","experimental","valueDefault","FieldsSettingsService","isTransaction","isTranslationDisabled","attributes","getItemAttributes","defaultValue","getValueTranslation","dontTranslate","copyFrom","copyFromLanguageKey","values","attributeValueTranslation","isEditableOrReadonlyTranslationExist","updateItemAttributeValue","linkReadOnly","linkWithLanguageKey","addItemAttributeDimension","linkReadWrite","translateMany","translateable","dontTranslateMany","FieldsTranslateService","defaultIcon","checkImgRegEx","customExtensions","doc","docx","xls","xlsx","ppt","pptx","pdf","mp3","avi","mpg","mpeg","mov","mp4","zip","rar","txt","html","css","xml","xsl","matExtensions","vcf","getExtension","filename","toLocaleLowerCase","getIconClass","ext","isKnownType","isImage","test","FileTypeService","formsValid$","formsDirty$","formsValid","formsDirty","getFormValid","setFormValid","isValid","allValid","some","valid","setFormDirty","isDirty","anyDirty","dirty","FormsStateService","logs$","logLimit","lastSnackBarTime","snackBarDebounce","severity","label","newLogEntry","time","Date","now","oldLogs","newLogs","nowTime","getLogs$","LoggingService","matIconRegistry","domSanitizer","icons","apple","appleFilled","file","folder","sitemap","load","forEach","addSvgIconLiteral","bypassSecurityTrustHtml","LoadIconsService","queryUrl","includeGuid","hasParams","paramsLower","hasAppId","urlParams","Guids","QueryService","FileTypeConstants","loadedFiles","scripts","callback","sortedFiles","sortByType","insertToDom","cssFiles","jsFiles","script","resolveSpecialPaths","loaded","domEl","endsWith","CSS","JS","concat","files","increment","sxcVersion","existing","loadedFile","removeEventListener","addEventListener","document","createElement","rel","href","src","querySelector","appendChild","getUrlPrefix","ScriptsLoaderService","logics","eavFieldLogicManager","FieldLogicManager","inputTypeName","BestValueModes","zone","eventListeners","attach","htmlEl","runOutsideAngular","dragoverListener","timeoutsArray","clearTimeout","splice","clearTimeouts","windowBodyTimeouts","body","classList","draggingClass","dropListener","remove","passive","element","listener","detach","mask","model","changeEvent","overloadPreCleanValues","fields","findFields","unwrapField","subscriptions","fieldList","preClean","watchAllFields","resolve","e","replaceValue","hasOwnProperty","cleaned","matches","staticName","onChange","maybeNew","field","valueSub","valueChanges","destroy","metadataItems","defaultSettings","Description","EditInstructions","Label","ListInstructions","Notes","Icon","Link","FieldsSettingsHelpers","_slotCanBeEmpty","_slotIsEmpty","Placeholder","VisibleInEditUI","DefaultCollapsed","Collapsed","translationExistsInDefault","eavValues","Values","metadata","getValueOrDefault","disableTranslation","isEditableTranslationExist","isReadonlyTranslationExist","infoLabel","infoMessage","editableTranslationExists","readonlyTranslationExists","dimensions","Dimensions","dimension","calculateSharedInfoMessage","getTranslationStateCore","linkType","DontTranslate","editableElements","LinkReadWrite","Translate","LinkReadOnly","MissingDefaultLangValue","cleanFormula","trim","Function","defineProperties","default","parseDefaultValue","initial","prefill","culture","code","l","debug","entity","guid","getEntities","getSettings","getValues","buildDesignerSnippets","fieldOptions","fieldSnippets","x","y","obj1","obj2","keys1","keys2","every","key1","getFormChanges","oldValues","newValues","changes","newValue","oldValue","GeneralHelpers","toggleInArray","array","ContentTypeName","getInputTypeNames","CollapsibleWrapper","HiddenWrapper","LocalizationWrapper","AllowMultiValue","EntityExpandableWrapper","DropzoneWrapper","ExpandableWrapper","AdamAttachWrapper","attributeKey","onlyPrefill","Prefill","DefaultValue","toLowerCase","toJSON","Number","guids","parse","emptyEntityField","translation","translationDefault","allAttributesValues","languageKey","LocalizationHelpers","eavValue","d","c","updateAttribute","oldAttributes","newAttributes","attributeCopy","updateAttributesValues","allAttributes","updateValues","eavAttributes","newItemValue","newEavValue","newAttribute","updateAttributeValue","updateValue","existingLanguageKey","isReadOnly","newLanguageValue","addAttributeValue","attributeValue","attributeType","addAttributeDimension","newDimensionValue","existingDimensionValue","removeAttributeDimension","validDimensions","mode","bestDimensions","bestValue","findValueForDimensions","dialogData","queryService","ngOnInit","selected","parseSelectedPageId","toggled","filterText$","searchItems$","tree$","filteredSearch$","filterText","templateVars$","filteredSearch","tree","fetchPages","setFilter","select","pageId","closeDialog","toggle","page","query","pages","searchItems","Path","join","buildPageSearch","children","parentId","ParentId","broken","buildPageTree","prefix","fieldValue","group","controls","config","PagePickerComponent","dialog","viewContainerRef","changeDetectorRef","autoFocus","width","afterClosed","take","markForCheck","getTranslationStateClass","LinkCopyFrom","TranslateMenuHelpers","calculateShortDimensions","calculateEditAndReadDimensions","editableDimensions","readOnlyDimensions","editableExist","readOnlyExist","dimensionsMap","shortCurrentLanguage","shortNoReadOnly","shortDimension","editRoot","hasUpdate","posParams","consumed","refreshEditRoot","edit","environment","production","FormulaVersions","FormulaTargets","SettingsFormulaPrefix","LogSeverities","Log","Warn","PublishModeConstants","UpdateEnvVarsFromDialogSettings","appContext","includedApiRoot","Api","old2sxcHeader","env","header","new2sxcHeader","appApi","convertOne","attribute1","convertMany","IsTitle","Settings","attributes1","EavContentTypeAttribute","convert","contentType1","Scope","atributes","type1","copy","entity1","Owner","Version","For","entities1","EavEntity","item1","value1","EavDimension","convertFormToUrl","Parent","innerItem","EntityId","Field","Add","Index","paramEncode","createForSuffix","mdFor","Singleton","String","keyType","keyTypes","string","number","metaValue","targetType","groupItem","Part","convertUrlToForm","options","option","innerItemParams","prefillParams","paramDecode","editItem","addItem","newParams","forParams","forIntro","forValue","forTarget","copyParams","groupParams","text","cacheName","serviceElementsFactory","cache$","entities$","prefetchAdams","snapshots","upsertManyInCache","getAdamSnapshot","adamSnapshot","AdamCacheService","contentTypeItems1","contentTypeItems","getContentTypeItem","contentTypeItem","ContentTypeItemService","contentTypes1","contentTypes","addManyToCache","ContentTypeService","entities","getEntities$","getEntity","EntityCacheService","entityConfig","entityMetadata","GlobalConfig","Item","selectId","Feature","LanguageInstance","languageInstance","ContentType","ContentTypeItem","PublishStatus","publishStatus","_guid","EntityCache","AdamCache","LinkCache","link","StringQueryCache","pluralNames","features","addAllToCache","isFeatureEnabled","feature","enabled","FeatureService","addOneToCache","getDebugEnabled$","configs","toggleDebugEnabled","oldConfig","newConfig","updateOneInCache","GlobalConfigService","getInputType","InputTypeService","items1","updateItemId","itemData","oldItem","newItem","shareWithLanguage","updateItemHeader","getItem$","entityGuids","getItems$","ItemService","uiLanguage","hideHeader","removeLanguageInstance","removeOneFromCache","newLanguage","languageInstances","getHideHeader$","LanguageInstanceService","getLanguages$","LanguageService","prefetchLinks","prefetchAdam","links","linkInfo","prefetchFields","adamLinks","adamToLinks","loadAdam","loadLink","upsertOneInCache","getLinkInfo","linkCache","IsFolder","ReferenceId","LinkCacheService","removePublishStatus","getPublishStatus","getPublishStatus$","publishStatuses","setPublishMode","publishMode","Branch","Show","getPublishMode$","Hide","PublishStatusService","StringQueryCacheService","keyZoneId","keyRequestToken","keyTabId","keyContentBlockId","keyModuleId","keyAppId","keyDebug","keyDialog","keyContentType","keyItems","keyPartOfPage","keyPublishing","keyFilters","keyPipelineId","keyApi","keyUrl","keyIsShared","consoleLogAngular","groupCollapsed","optionalParams","trace","groupEnd","componentMetadataKey","FeaturesConstants","TranslationLinkConstants","stripNonUrlCharacters","controlValue","allowPath","trimEnd","rexSeparators","latinizeText","input","latinMap","Á","Ă","Ắ","Ặ","Ằ","Ẳ","Ẵ","Ǎ","Â","Ấ","Ậ","Ầ","Ẩ","Ẫ","Ä","Ǟ","Ȧ","Ǡ","Ạ","Ȁ","À","Ả","Ȃ","Ā","Ą","Å","Ǻ","Ḁ","Ⱥ","Ã","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ḃ","Ḅ","Ɓ","Ḇ","Ƀ","Ƃ","Ć","Č","Ç","Ḉ","Ĉ","Ċ","Ƈ","Ȼ","Ď","Ḑ","Ḓ","Ḋ","Ḍ","Ɗ","Ḏ","ǲ","ǅ","Đ","Ƌ","Ǳ","Ǆ","É","Ĕ","Ě","Ȩ","Ḝ","Ê","Ế","Ệ","Ề","Ể","Ễ","Ḙ","Ë","Ė","Ẹ","Ȅ","È","Ẻ","Ȇ","Ē","Ḗ","Ḕ","Ę","Ɇ","Ẽ","Ḛ","Ꝫ","Ḟ","Ƒ","Ǵ","Ğ","Ǧ","Ģ","Ĝ","Ġ","Ɠ","Ḡ","Ǥ","Ḫ","Ȟ","Ḩ","Ĥ","Ⱨ","Ḧ","Ḣ","Ḥ","Ħ","Í","Ĭ","Ǐ","Î","Ï","Ḯ","İ","Ị","Ȉ","Ì","Ỉ","Ȋ","Ī","Į","Ɨ","Ĩ","Ḭ","Ꝺ","Ꝼ","Ᵹ","Ꞃ","Ꞅ","Ꞇ","Ꝭ","Ĵ","Ɉ","Ḱ","Ǩ","Ķ","Ⱪ","Ꝃ","Ḳ","Ƙ","Ḵ","Ꝁ","Ꝅ","Ĺ","Ƚ","Ľ","Ļ","Ḽ","Ḷ","Ḹ","Ⱡ","Ꝉ","Ḻ","Ŀ","Ɫ","ǈ","Ł","Ǉ","Ḿ","Ṁ","Ṃ","Ɱ","Ń","Ň","Ņ","Ṋ","Ṅ","Ṇ","Ǹ","Ɲ","Ṉ","Ƞ","ǋ","Ñ","Ǌ","Ó","Ŏ","Ǒ","Ô","Ố","Ộ","Ồ","Ổ","Ỗ","Öe","Ȫ","Ȯ","Ȱ","Ọ","Ő","Ȍ","Ò","Ỏ","Ơ","Ớ","Ợ","Ờ","Ở","Ỡ","Ȏ","Ꝋ","Ꝍ","Ō","Ṓ","Ṑ","Ɵ","Ǫ","Ǭ","Ø","Ǿ","Õ","Ṍ","Ṏ","Ȭ","Ƣ","Ꝏ","Ɛ","Ɔ","Ȣ","Ṕ","Ṗ","Ꝓ","Ƥ","Ꝕ","Ᵽ","Ꝑ","Ꝙ","Ꝗ","Ŕ","Ř","Ŗ","Ṙ","Ṛ","Ṝ","Ȑ","Ȓ","Ṟ","Ɍ","Ɽ","Ꜿ","Ǝ","Ś","Ṥ","Š","Ṧ","Ş","Ŝ","Ș","Ṡ","Ṣ","Ṩ","Ť","Ţ","Ṱ","Ț","Ⱦ","Ṫ","Ṭ","Ƭ","Ṯ","Ʈ","Ŧ","Ɐ","Ꞁ","Ɯ","Ʌ","Ꜩ","Ú","Ŭ","Ǔ","Û","Ṷ","Ü","Ǘ","Ǚ","Ǜ","Ǖ","Ṳ","Ụ","Ű","Ȕ","Ù","Ủ","Ư","Ứ","Ự","Ừ","Ử","Ữ","Ȗ","Ū","Ṻ","Ų","Ů","Ũ","Ṹ","Ṵ","Ꝟ","Ṿ","Ʋ","Ṽ","Ꝡ","Ẃ","Ŵ","Ẅ","Ẇ","Ẉ","Ẁ","Ⱳ","Ẍ","Ẋ","Ý","Ŷ","Ÿ","Ẏ","Ỵ","Ỳ","Ƴ","Ỷ","Ỿ","Ȳ","Ɏ","Ỹ","Ź","Ž","Ẑ","Ⱬ","Ż","Ẓ","Ȥ","Ẕ","Ƶ","Ĳ","Œ","ᴀ","ᴁ","ʙ","ᴃ","ᴄ","ᴅ","ᴇ","ꜰ","ɢ","ʛ","ʜ","ɪ","ʁ","ᴊ","ᴋ","ʟ","ᴌ","ᴍ","ɴ","ᴏ","ɶ","ᴐ","ᴕ","ᴘ","ʀ","ᴎ","ᴙ","ꜱ","ᴛ","ⱻ","ᴚ","ᴜ","ᴠ","ᴡ","ʏ","ᴢ","á","ă","ắ","ặ","ằ","ẳ","ẵ","ǎ","â","ấ","ậ","ầ","ẩ","ẫ","ä","ǟ","ȧ","ǡ","ạ","ȁ","à","ả","ȃ","ā","ą","ᶏ","ẚ","å","ǻ","ḁ","ⱥ","ã","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ḃ","ḅ","ɓ","ḇ","ᵬ","ᶀ","ƀ","ƃ","ɵ","ć","č","ç","ḉ","ĉ","ɕ","ċ","ƈ","ȼ","ď","ḑ","ḓ","ȡ","ḋ","ḍ","ɗ","ᶑ","ḏ","ᵭ","ᶁ","đ","ɖ","ƌ","ı","ȷ","ɟ","ʄ","ǳ","ǆ","é","ĕ","ě","ȩ","ḝ","ê","ế","ệ","ề","ể","ễ","ḙ","ë","ė","ẹ","ȅ","è","ẻ","ȇ","ē","ḗ","ḕ","ⱸ","ę","ᶒ","ɇ","ẽ","ḛ","ꝫ","ḟ","ƒ","ᵮ","ᶂ","ǵ","ğ","ǧ","ģ","ĝ","ġ","ɠ","ḡ","ᶃ","ǥ","ḫ","ȟ","ḩ","ĥ","ⱨ","ḧ","ḣ","ḥ","ɦ","ẖ","ħ","ƕ","í","ĭ","ǐ","î","ï","ḯ","ị","ȉ","ì","ỉ","ȋ","ī","į","ᶖ","ɨ","ĩ","ḭ","ꝺ","ꝼ","ᵹ","ꞃ","ꞅ","ꞇ","ꝭ","ǰ","ĵ","ʝ","ɉ","ḱ","ǩ","ķ","ⱪ","ꝃ","ḳ","ƙ","ḵ","ᶄ","ꝁ","ꝅ","ĺ","ƚ","ɬ","ľ","ļ","ḽ","ȴ","ḷ","ḹ","ⱡ","ꝉ","ḻ","ŀ","ɫ","ᶅ","ɭ","ł","ǉ","ſ","ẜ","ẛ","ẝ","ḿ","ṁ","ṃ","ɱ","ᵯ","ᶆ","ń","ň","ņ","ṋ","ȵ","ṅ","ṇ","ǹ","ɲ","ṉ","ƞ","ᵰ","ᶇ","ɳ","ñ","ǌ","ó","ŏ","ǒ","ô","ố","ộ","ồ","ổ","ỗ","ö","ȫ","ȯ","ȱ","ọ","ő","ȍ","ò","ỏ","ơ","ớ","ợ","ờ","ở","ỡ","ȏ","ꝋ","ꝍ","ⱺ","ō","ṓ","ṑ","ǫ","ǭ","ø","ǿ","õ","ṍ","ṏ","ȭ","ƣ","ꝏ","ɛ","ᶓ","ɔ","ᶗ","ȣ","ṕ","ṗ","ꝓ","ƥ","ᵱ","ᶈ","ꝕ","ᵽ","ꝑ","ꝙ","ʠ","ɋ","ꝗ","ŕ","ř","ŗ","ṙ","ṛ","ṝ","ȑ","ɾ","ᵳ","ȓ","ṟ","ɼ","ᵲ","ᶉ","ɍ","ɽ","ↄ","ꜿ","ɘ","ɿ","ß","ś","ṥ","š","ṧ","ş","ŝ","ș","ṡ","ṣ","ṩ","ʂ","ᵴ","ᶊ","ȿ","ɡ","ᴑ","ᴓ","ᴝ","ť","ţ","ṱ","ț","ȶ","ẗ","ⱦ","ṫ","ṭ","ƭ","ṯ","ᵵ","ƫ","ʈ","ŧ","ᵺ","ɐ","ᴂ","ǝ","ᵷ","ɥ","ʮ","ʯ","ᴉ","ʞ","ꞁ","ɯ","ɰ","ᴔ","ɹ","ɻ","ɺ","ⱹ","ʇ","ʌ","ʍ","ʎ","ꜩ","ú","ŭ","ǔ","û","ṷ","ü","ǘ","ǚ","ǜ","ǖ","ṳ","ụ","ű","ȕ","ù","ủ","ư","ứ","ự","ừ","ử","ữ","ȗ","ū","ṻ","ų","ᶙ","ů","ũ","ṹ","ṵ","ᵫ","ꝸ","ⱴ","ꝟ","ṿ","ʋ","ᶌ","ⱱ","ṽ","ꝡ","ẃ","ŵ","ẅ","ẇ","ẉ","ẁ","ⱳ","ẘ","ẍ","ẋ","ᶍ","ý","ŷ","ÿ","ẏ","ỵ","ỳ","ƴ","ỷ","ỿ","ȳ","ẙ","ɏ","ỹ","ź","ž","ẑ","ʑ","ⱬ","ż","ẓ","ȥ","ẕ","ᵶ","ᶎ","ʐ","ƶ","ɀ","ﬀ","ﬃ","ﬄ","ﬁ","ﬂ","ĳ","œ","ﬆ","ₐ","ₑ","ᵢ","ⱼ","ₒ","ᵣ","ᵤ","ᵥ","ₓ","readQueryStringParameters","queryParams","decodeURIComponent","getUrlParams","qs","tokens","re","exec","replaceUrlParam","paramValue","RegExp","search","area","lastChild","urlSegment","eavConstants","app","cmsObject","scopes","template","permissions","resources","pipelineDesigner","dataSourceDifficulties","advanced","outDataSource","EntityGuid","In","PartAssemblyAndType","PrimaryType","VisualDesignerData","Top","Left","Width","defaultPipeline","dataSources","streamWiring","From","Out","To","testParameters","Zone","AppImport","ContentItems","Edit","ItemHistory","Develop","PipelineDesigner","Replace","InstanceList","metaReducers","reducer","action","reducers","appRoutes","loadChildren","then","m","AppsManagementModule","title","ImportAppModule","AppAdministrationModule","CodeEditorModule","VisualQueryModule","ReplaceContentModule","ManageContentListModule","ContentItemsModule","ContentTypeFieldsModule","ItemHistoryModule","matcher","EditModule","RefreshEditModule","ContentExportModule","ContentImportModule","PermissionsModule","AppRoutingModule","forRoot","relativeLinkResolution","el","titleService","activatedRoute","preConfigure","loadFonts","appTitle","getTitle","child","setTitle","setDefaultFontSetClass","star","AppComponent","paramsInitFactory","injector","jsInfo","eavKeys","hash","alert","removeItem","setItem","urlHash","queryParametersFromUrl","historyItems","pipelineId","replaceItems","groupItems","totalPopup","rvt","api","excludedUrls","intercept","req","handle","catchError","checkIfExcluded","showDetailedHttpError","throwError","infoText","status","srvResp","msg","Message","msgDet","MessageDetail","ExceptionMessage","HandleErrorsInterceptor","modified","FormData","clone","setHeaders","SetHeadersInterceptor","AppModule","provide","useFactory","deps","multi","useClass","runtimeChecks","strictStateImmutability","strictActionImmutability","instrument","maxAge","bootstrapModule","catch","err","webpackEmptyAsyncContext","Promise","module","exports"],"mappings":"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AKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,KAAMC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,QAAI,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,KAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,OAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC7FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,KAAMC,SAAG,IAAKC,SAAG,KAC7FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC7FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,OAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IACnBC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,KAAMC,OAAG,KAAMC,SAAG,KAAMC,SAAG,KAAMC,SAAG,KAAMC,SAAG,KAAMC,SAAG,KAAMC,SAAG,KAC1FC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC5FC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,KAAMC,SAAG,KAAMC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC7FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,OAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,KAAMC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAC5FC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,KAAMC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC9FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC7FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SA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","file":"main.e8f3bb1bc5da8976a8fd.js","sourcesContent":["import { Injectable, Optional, SkipSelf } from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { keyAppId, keyContentBlockId, keyModuleId, keyRequestToken, keyTabId, keyZoneId, prefix } from '../constants/session.constants';\r\nimport { consoleLogAngular } from '../helpers/console-log-angular.helper';\r\nimport { EavWindow } from '../models/eav-window.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n/** The context provides information */\r\n@Injectable()\r\nexport class Context {\r\n\r\n  /** Id of current context */\r\n  public id: number;\r\n\r\n  /** Determines if the context is ready to use, and everything is initialized */\r\n  public ready = false;\r\n\r\n  /** The parent, for hierarchical lookup */\r\n  private parent: Context;\r\n\r\n  private routeSnapshot: ActivatedRouteSnapshot;\r\n\r\n  /** The current Zone ID */\r\n  get zoneId(): number {\r\n    return this._zoneId || (this._zoneId = this.routeNum(keyZoneId) || this.parent.zoneId);\r\n  }\r\n  private _zoneId: number;\r\n\r\n  /** The current App ID */\r\n  get appId(): number {\r\n    return (this._appId != null) ? this._appId : (this._appId = this.routeNum(keyAppId) || this.parent.appId);\r\n  }\r\n  private _appId: number;\r\n\r\n  /**\r\n   * The request verification token for http requests.\r\n   * It's only loaded from the root, never from sub-contexts\r\n   */\r\n  get requestToken(): string { return this._rvt || (this._rvt = this.parent.requestToken); }\r\n  private _rvt: string;\r\n\r\n  /** Tab Id is global */\r\n  get tabId(): number {\r\n    return this._tabId || (this._tabId = this.routeNum(keyTabId) || this.parent.tabId);\r\n  }\r\n  private _tabId: number;\r\n\r\n  /** Content Block Id is global */\r\n  get contentBlockId(): number {\r\n    return this._contentBlockId || (this._contentBlockId = this.routeNum(keyContentBlockId) || this.parent.contentBlockId);\r\n  }\r\n  private _contentBlockId: number;\r\n\r\n  /** Module Id is global */\r\n  get moduleId(): number {\r\n    return this._moduleId || (this._moduleId = this.routeNum(keyModuleId) || this.parent.moduleId);\r\n  }\r\n  private _moduleId: number;\r\n\r\n  constructor(@Optional() @SkipSelf() parentContext: Context) {\r\n    this.parent = parentContext;\r\n\r\n    // spm NOTE: I've given id to every context to make it easier to follow how things work\r\n    if (!window.contextId) { window.contextId = 0; }\r\n    this.id = window.contextId++;\r\n    consoleLogAngular('Context.constructor', this);\r\n  }\r\n\r\n  /**\r\n   * This is the initializer at entry-componets of modules.\r\n   * It ensures that within that module, the context has the values given by the route\r\n   */\r\n  init(route: ActivatedRoute) {\r\n    this.routeSnapshot = route && route.snapshot;\r\n    this.clearCachedValues();\r\n    this.ready = route != null;\r\n    consoleLogAngular('Context.init', this, route);\r\n  }\r\n\r\n  initRoot() {\r\n    // required, global things\r\n    this._rvt = sessionStorage.getItem(keyRequestToken);\r\n    this._zoneId = this.sessionNumber(keyZoneId);\r\n    this._tabId = this.sessionNumber(keyTabId);\r\n    this._contentBlockId = this.sessionNumber(keyContentBlockId);\r\n    this._moduleId = this.sessionNumber(keyModuleId);\r\n\r\n    if (!this._rvt || !this._zoneId || !this._tabId || !this._contentBlockId || !this._moduleId) {\r\n      throw new Error('Context is missing some of the required parameters');\r\n    }\r\n\r\n    // optional global things\r\n    this._appId = this.sessionNumber(keyAppId);\r\n\r\n    this.ready = true;\r\n    consoleLogAngular('Context.initRoot', this);\r\n  }\r\n\r\n  private sessionNumber(name: string): number {\r\n    const result = sessionStorage.getItem(name);\r\n    if (result !== null) {\r\n      const num = parseInt(result, 10);\r\n      return isNaN(num) ? null : num;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Get a number from the route, or optionally its parents.\r\n   * Returns value in route or null\r\n   */\r\n  private routeNum(name: string): number {\r\n    // catch case where state is null, like when the recursive parent is in use\r\n    if (this.routeSnapshot == null) { return null; }\r\n\r\n    const paramName = name.substring(prefix.length);\r\n    const result = this.routeSnapshot.paramMap.get(paramName);\r\n    if (result !== null) {\r\n      const num = parseInt(result, 10);\r\n      return isNaN(num) ? null : num;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears cached values. Required when one module instance is opened multiple times,\r\n   * e.g. Apps Management -> App Admin for appId 2 -> back -> App Admin for appId 17.\r\n   * Module is reused, and so is context and it contains values for previous appId.\r\n   */\r\n  private clearCachedValues() {\r\n    this._zoneId = null;\r\n    this._appId = null;\r\n    this._rvt = null;\r\n    this._tabId = null;\r\n    this._contentBlockId = null;\r\n    this._moduleId = null;\r\n  }\r\n}\r\n","export class InputTypeConstants {\r\n    // String\r\n    public static readonly StringDefault = 'string-default';\r\n    public static readonly StringUrlPath = 'string-url-path';\r\n    public static readonly StringDropdown = 'string-dropdown';\r\n    public static readonly StringDropdownQuery = 'string-dropdown-query';\r\n    public static readonly StringFontIconPicker = 'string-font-icon-picker';\r\n    public static readonly StringTemplatePicker = 'string-template-picker';\r\n    public static readonly StringWysiwyg = 'string-wysiwyg';\r\n    // Boolean\r\n    public static readonly BooleanDefault = 'boolean-default';\r\n    public static readonly BooleanTristate = 'boolean-tristate';\r\n    // DateTime\r\n    public static readonly DatetimeDefault = 'datetime-default';\r\n    // Empty\r\n    public static readonly EmptyDefault = 'empty-default';\r\n    public static readonly EmptyEnd = 'empty-end';\r\n    // Number\r\n    public static readonly NumberDefault = 'number-default';\r\n    // Entity\r\n    public static readonly EntityDefault = 'entity-default';\r\n    public static readonly EntityQuery = 'entity-query';\r\n    public static readonly EntityContentBlocks = 'entity-content-blocks';\r\n    // Hyperlink\r\n    public static readonly HyperlinkDefault = 'hyperlink-default';\r\n    public static readonly HyperlinkLibrary = 'hyperlink-library';\r\n    // Custom\r\n    public static readonly ExternalWebComponent = 'external-web-component';\r\n    public static readonly CustomGPS = 'custom-gps';\r\n    public static readonly CustomJsonEditor = 'custom-json-editor';\r\n    public static readonly CustomDefault = 'custom-default';\r\n    // Old\r\n    public static readonly OldTypeDropdown = 'dropdown';\r\n    public static readonly OldTypeWysiwyg = 'wysiwyg';\r\n    public static readonly OldTypeDefault = 'default';\r\n    public static readonly StringWysiwygTinymce = 'string-wysiwyg-tinymce';\r\n    public static readonly StringWysiwygAdv = 'string-wysiwyg-adv';\r\n    public static readonly StringWysiwygDnn = 'string-wysiwyg-dnn';\r\n    // Default\r\n    public static readonly DefaultSuffix = '-default';\r\n}\r\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\r\nimport { FieldSettings } from '../../../edit-types';\r\nimport { InputTypeConstants } from '../../../ng-dialogs/src/app/content-type-fields/constants/input-type.constants';\r\nimport { FieldsSettingsService } from '../../shared/services';\r\nimport { AdamControl } from '../input-types/hyperlink/hyperlink-library/hyperlink-library.models';\r\n\r\n/** Validators here are copied from https://github.com/angular/angular/blob/master/packages/forms/src/validators.ts */\r\nexport class ValidationHelper {\r\n\r\n  static isRequired(settings: FieldSettings): boolean {\r\n    // hidden field can't be required\r\n    return settings.Visible ? settings.Required : false;\r\n  }\r\n\r\n  static getValidators(fieldName: string, inputType: string, fieldsSettingsService: FieldsSettingsService): ValidatorFn[] {\r\n    // TODO: merge all validators in a single function? Should be faster\r\n    const validators: ValidatorFn[] = [\r\n      inputType !== InputTypeConstants.HyperlinkLibrary\r\n        ? this.required(fieldName, fieldsSettingsService)\r\n        : this.requiredAdam(fieldName, fieldsSettingsService),\r\n      this.pattern(fieldName, fieldsSettingsService),\r\n      this.decimals(fieldName, fieldsSettingsService),\r\n      this.max(fieldName, fieldsSettingsService),\r\n      this.min(fieldName, fieldsSettingsService),\r\n    ];\r\n    return validators;\r\n  }\r\n\r\n  private static required(fieldName: string, fieldsSettingsService: FieldsSettingsService): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const settings = fieldsSettingsService.getFieldSettings(fieldName);\r\n      if (this.ignoreValidators(settings)) { return null; }\r\n      if (!settings.Required) { return null; }\r\n\r\n      return Validators.required(control);\r\n    };\r\n  }\r\n\r\n  private static requiredAdam(fieldName: string, fieldsSettingsService: FieldsSettingsService): ValidatorFn {\r\n    return (control: AdamControl): ValidationErrors | null => {\r\n      const settings = fieldsSettingsService.getFieldSettings(fieldName);\r\n      if (this.ignoreValidators(settings)) { return null; }\r\n      if (!settings.Required) { return null; }\r\n\r\n      return control.adamItems === 0 ? { required: true } : null;\r\n    };\r\n  }\r\n\r\n  private static pattern(fieldName: string, fieldsSettingsService: FieldsSettingsService): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const settings = fieldsSettingsService.getFieldSettings(fieldName);\r\n      if (this.ignoreValidators(settings)) { return null; }\r\n      if (!settings.ValidationRegExJavaScript) { return null; }\r\n\r\n      return Validators.pattern(settings.ValidationRegExJavaScript)(control);\r\n    };\r\n  }\r\n\r\n  private static decimals(fieldName: string, fieldsSettingsService: FieldsSettingsService): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const settings = fieldsSettingsService.getFieldSettings(fieldName);\r\n      if (this.ignoreValidators(settings)) { return null; }\r\n      if (settings.Decimals == null || settings.Decimals < 0) { return null; }\r\n      if (control.value == null) { return null; }\r\n\r\n      const matchString = settings.Decimals === 0 ? `^-?[0-9]+$` : `^-?[0-9]+(\\.[0-9]{1,${settings.Decimals}})?$`;\r\n      const matches = (control.value as number).toString().match(matchString);\r\n      return !matches ? { decimals: true } : null;\r\n    };\r\n  }\r\n\r\n  private static max(fieldName: string, fieldsSettingsService: FieldsSettingsService): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const settings = fieldsSettingsService.getFieldSettings(fieldName);\r\n      if (this.ignoreValidators(settings)) { return null; }\r\n      if (settings.Max == null) { return null; }\r\n\r\n      return Validators.max(settings.Max)(control);\r\n    };\r\n  }\r\n\r\n  private static min(fieldName: string, fieldsSettingsService: FieldsSettingsService): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const settings = fieldsSettingsService.getFieldSettings(fieldName);\r\n      if (this.ignoreValidators(settings)) { return null; }\r\n      if (settings.Min == null) { return null; }\r\n\r\n      return Validators.min(settings.Min)(control);\r\n    };\r\n  }\r\n\r\n  /** Hidden fields can't have validators */\r\n  private static ignoreValidators(settings: FieldSettings): boolean {\r\n    return !settings.Visible;\r\n  }\r\n}\r\n","export enum WrappersConstants {\r\n  // Empty specific\r\n  CollapsibleWrapper = 'app-collapsible-wrapper',\r\n  // Default wrappers\r\n  HiddenWrapper = 'app-hidden-wrapper',\r\n  DropzoneWrapper = 'app-dropzone-wrapper',\r\n  LocalizationWrapper = 'app-localization-wrapper',\r\n  ExpandableWrapper = 'app-expandable-wrapper',\r\n  AdamAttachWrapper = 'app-adam-attach-wrapper',\r\n  // Entity specific\r\n  EntityExpandableWrapper = 'app-entity-expandable-wrapper',\r\n  // Hyperlink specific\r\n  HyperlinkDefaultExpandableWrapper = 'app-hyperlink-default-expandable-wrapper',\r\n  HyperlinkLibraryExpandableWrapper = 'app-hyperlink-library-expandable-wrapper',\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { EavService } from '.';\r\n\r\nexport const webApiAppFilesAll = 'admin/appfiles/all';\r\nexport const webApiAppFile = 'admin/appfiles/asset';\r\nexport const webApiAppFileCreate = 'admin/appfiles/create';\r\nexport const webApiExplorer = 'admin/ApiExplorer/inspect'\r\n@Injectable()\r\nexport class AssetsService {\r\n  constructor(private http: HttpClient, private eavService: EavService, private dnnContext: DnnContext) { }\r\n\r\n  getAll(global: boolean) {\r\n    return this.http.get<string[]>(this.dnnContext.$2sxc.http.apiUrl(webApiAppFilesAll), {\r\n      params: { appId: this.eavService.eavConfig.appId, global: global.toString(), withSubfolders: 'true' },\r\n    });\r\n  }\r\n\r\n  create(path: string, global: boolean, purpose: string) {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiAppFileCreate), {}, {\r\n      params: { appId: this.eavService.eavConfig.appId, global: global.toString(), purpose, path }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { keyPartOfPage, keyPublishing } from '../../../ng-dialogs/src/app/shared/constants/session.constants';\r\nimport { Context } from '../../../ng-dialogs/src/app/shared/services/context';\r\nimport { EavFormData, EditDialogContext, SaveEavFormData } from '../../eav-item-dialog/multi-item-edit-form/multi-item-edit-form.models';\r\nimport { EavConfig, SaveResult, VersioningOptions } from '../models';\r\n\r\nexport const webApiEditRoot = 'cms/edit/';\r\n\r\n@Injectable()\r\nexport class EavService {\r\n  /** WARNING! These are constants that form was loaded with. They do not change while form is running */\r\n  eavConfig: EavConfig;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private dnnContext: DnnContext,\r\n    /** Used to fetch form data and fill up eavConfig. Do not use anywhere else */\r\n    private context: Context,\r\n  ) { }\r\n\r\n  /** Create EavConfiguration from sessionStorage */\r\n  setEavConfig(\r\n    editDialogContext: EditDialogContext,\r\n    formId: number,\r\n    isParentDialog: boolean,\r\n    itemGuids: string[],\r\n    createMode: boolean,\r\n    isCopy: boolean,\r\n    enableHistory: boolean,\r\n  ) {\r\n    this.eavConfig = {\r\n      zoneId: this.context.zoneId.toString(),\r\n      appId: this.context.appId.toString(),\r\n      appRoot: editDialogContext.App.Url,\r\n      lang: editDialogContext.Language.Current,\r\n      langPri: editDialogContext.Language.Primary,\r\n      langs: editDialogContext.Language.All,\r\n      moduleId: this.context.moduleId.toString(),\r\n      partOfPage: sessionStorage.getItem(keyPartOfPage),\r\n      portalRoot: editDialogContext.Site.Url,\r\n      tabId: this.context.tabId.toString(),\r\n      systemRoot: window.location.pathname.split('/dist/')[0] + '/',\r\n      versioningOptions: this.getVersioningOptions(\r\n        sessionStorage.getItem(keyPartOfPage) === 'true',\r\n        sessionStorage.getItem(keyPublishing),\r\n      ),\r\n      formId,\r\n      isParentDialog,\r\n      itemGuids,\r\n      createMode,\r\n      isCopy,\r\n      enableHistory,\r\n      enableFormulaSave: editDialogContext.Enable.FormulaSave ?? false,\r\n    };\r\n  }\r\n\r\n  fetchFormData(items: string) {\r\n    return this.http.post<EavFormData>(this.dnnContext.$2sxc.http.apiUrl(webApiEditRoot + 'load'), items, {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  saveFormData(result: SaveEavFormData, partOfPage: string) {\r\n    return this.http.post<SaveResult>(this.dnnContext.$2sxc.http.apiUrl(webApiEditRoot + 'save'), result, {\r\n      params: { appId: this.eavConfig.appId, partOfPage }\r\n    });\r\n  }\r\n\r\n  private getVersioningOptions(partOfPage: boolean, publishing: string): VersioningOptions {\r\n    if (!partOfPage) {\r\n      return { show: true, hide: true, branch: true };\r\n    }\r\n\r\n    const publish = publishing || '';\r\n    switch (publish) {\r\n      case '':\r\n      case 'DraftOptional':\r\n        return { show: true, hide: true, branch: true };\r\n      case 'DraftRequired':\r\n        return { branch: true, hide: true };\r\n      default: {\r\n        console.error('invalid versioning requiremenets: ' + publish);\r\n        return {};\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import { ActivatedRoute } from '@angular/router';\r\nimport { Language } from '../../shared/models';\r\n\r\nexport function calculateIsParentDialog(route: ActivatedRoute) {\r\n  let editDialogCount = 0;\r\n  for (const path of route.snapshot.pathFromRoot) {\r\n    if (path.url.length <= 0) { continue; }\r\n    for (const urlSegment of path.url) {\r\n      if (urlSegment.path !== 'edit') { continue; }\r\n      editDialogCount++;\r\n    }\r\n  }\r\n  return editDialogCount === 1;\r\n}\r\n\r\nexport function sortLanguages(primaryLangKey: string, languages: Language[]) {\r\n  if (languages.length === 0) { return languages; }\r\n\r\n  let primaryLang: Language;\r\n  const sameLangs: Language[] = [];\r\n  const otherLangs: Language[] = [];\r\n  for (const language of languages) {\r\n    if (language.key === primaryLangKey) {\r\n      primaryLang = language;\r\n    } else if (language.key.startsWith(primaryLangKey.split('-')[0])) {\r\n      sameLangs.push(language);\r\n    } else {\r\n      otherLangs.push(language);\r\n    }\r\n  }\r\n  sameLangs.sort(alphabetCompare);\r\n  otherLangs.sort(alphabetCompare);\r\n\r\n  const allLangsSorted: Language[] = !primaryLang ? [...sameLangs, ...otherLangs] : [primaryLang, ...sameLangs, ...otherLangs];\r\n  return allLangsSorted;\r\n}\r\n\r\nfunction alphabetCompare(a: Language, b: Language) {\r\n  if (a.key < b.key) { return -1; }\r\n  if (a.key > b.key) { return 1; }\r\n  return 0;\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { EavService } from '.';\r\nimport { FieldSettings } from '../../../edit-types';\r\nimport { InputTypeConstants } from '../../../ng-dialogs/src/app/content-type-fields/constants/input-type.constants';\r\nimport { UpdateEnvVarsFromDialogSettings } from '../../../ng-dialogs/src/app/shared/helpers/update-env-vars-from-dialog-settings.helper';\r\nimport { convertUrlToForm } from '../../../ng-dialogs/src/app/shared/helpers/url-prep.helper';\r\nimport { FormValues } from '../../eav-item-dialog/item-edit-form/item-edit-form.models';\r\nimport { calculateIsParentDialog, sortLanguages } from '../../eav-item-dialog/multi-item-edit-form/multi-item-edit-form.helpers';\r\nimport { EavFormData } from '../../eav-item-dialog/multi-item-edit-form/multi-item-edit-form.models';\r\nimport { EditParams } from '../../edit-matcher.models';\r\nimport { BestValueModes } from '../constants/localization.constants';\r\nimport { FieldsSettingsHelpers, InputFieldHelpers, LocalizationHelpers } from '../helpers';\r\nimport { Language, PublishStatus } from '../models';\r\n// tslint:disable-next-line:max-line-length\r\nimport { AdamCacheService, ContentTypeItemService, ContentTypeService, EntityCacheService, FeatureService, InputTypeService, ItemService, LanguageInstanceService, LanguageService, LinkCacheService, PublishStatusService } from '../store/ngrx-data';\r\n\r\n@Injectable()\r\nexport class EditInitializerService implements OnDestroy {\r\n  loaded$ = new BehaviorSubject(false);\r\n\r\n  private initialFormValues: Record<string, FormValues> = {};\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private eavService: EavService,\r\n    private itemService: ItemService,\r\n    private inputTypeService: InputTypeService,\r\n    private contentTypeItemService: ContentTypeItemService,\r\n    private contentTypeService: ContentTypeService,\r\n    private featureService: FeatureService,\r\n    private publishStatusService: PublishStatusService,\r\n    private translate: TranslateService,\r\n    private languageService: LanguageService,\r\n    private languageInstanceService: LanguageInstanceService,\r\n    private snackBar: MatSnackBar,\r\n    private entityCacheService: EntityCacheService,\r\n    private adamCacheService: AdamCacheService,\r\n    private linkCacheService: LinkCacheService,\r\n  ) { }\r\n\r\n  ngOnDestroy(): void {\r\n    this.loaded$.complete();\r\n  }\r\n\r\n  fetchFormData(): void {\r\n    const form = convertUrlToForm((this.route.snapshot.params as EditParams).items);\r\n    const editItems = JSON.stringify(form.items);\r\n    this.eavService.fetchFormData(editItems).subscribe(formData => {\r\n      UpdateEnvVarsFromDialogSettings(formData.Context.App);\r\n      this.saveFormData(formData);\r\n      this.keepInitialValues();\r\n      this.setMissingValues();\r\n\r\n      this.loaded$.next(true);\r\n    });\r\n  }\r\n\r\n  private saveFormData(formData: EavFormData): void {\r\n    const formId = Math.floor(Math.random() * 99999);\r\n    const isParentDialog = calculateIsParentDialog(this.route);\r\n    const itemGuids = formData.Items.map(item => item.Entity.Guid);\r\n\r\n    this.itemService.loadItems(formData.Items);\r\n    // we assume that input type and content type data won't change between loading parent and child forms\r\n    this.inputTypeService.addInputTypes(formData.InputTypes);\r\n    this.contentTypeItemService.addContentTypeItems(formData.ContentTypeItems);\r\n    this.contentTypeService.addContentTypes(formData.ContentTypes);\r\n    this.featureService.loadFeatures(formData.Features);\r\n    this.adamCacheService.loadPrefetch(formData.Prefetch?.Adam);\r\n    this.entityCacheService.loadEntities(formData.Prefetch?.Entities);\r\n    this.linkCacheService.loadPrefetch(formData.Prefetch?.Links, formData.Prefetch?.Adam);\r\n\r\n    const items = this.itemService.getItems(itemGuids);\r\n    const createMode = items[0].Entity.Id === 0;\r\n    const isCopy = items[0].Header.DuplicateEntity != null;\r\n    const enableHistory = !createMode && this.route.snapshot.data.history !== false;\r\n    this.eavService.setEavConfig(formData.Context, formId, isParentDialog, itemGuids, createMode, isCopy, enableHistory);\r\n\r\n    const currentLanguage = this.eavService.eavConfig.lang;\r\n    const defaultLanguage = this.eavService.eavConfig.langPri;\r\n    const languages = this.eavService.eavConfig.langs;\r\n    // WARNING! TranslateService is a new instance for every form and language must be set for every one of them\r\n    const isoLangCode = currentLanguage.split('-')[0];\r\n    this.translate.use(isoLangCode);\r\n\r\n    // load language data only for parent dialog to not overwrite languages when opening child dialogs\r\n    if (isParentDialog) {\r\n      const eavLangs: Language[] = Object.entries(languages).map(([key, name]) => ({ key, name }));\r\n      const sortedLanguages = sortLanguages(defaultLanguage, eavLangs);\r\n      this.languageService.loadLanguages(sortedLanguages);\r\n    }\r\n    this.languageInstanceService.addLanguageInstance(formId, currentLanguage, defaultLanguage, currentLanguage, false);\r\n\r\n    const publishStatus: PublishStatus = {\r\n      formId,\r\n      DraftShouldBranch: formData.DraftShouldBranch,\r\n      IsPublished: formData.IsPublished,\r\n    };\r\n    this.publishStatusService.setPublishStatus(publishStatus);\r\n  }\r\n\r\n  private keepInitialValues(): void {\r\n    const items = this.itemService.getItems(this.eavService.eavConfig.itemGuids);\r\n    const languages = this.languageService.getLanguages().map(language => language.key);\r\n    const currentLanguage = this.languageInstanceService.getCurrentLanguage(this.eavService.eavConfig.formId);\r\n    const defaultLanguage = this.languageInstanceService.getDefaultLanguage(this.eavService.eavConfig.formId);\r\n    if (!languages.includes(currentLanguage)) {\r\n      languages.push(currentLanguage);\r\n    }\r\n    if (!languages.includes(defaultLanguage)) {\r\n      languages.push(defaultLanguage);\r\n    }\r\n\r\n    for (const item of items) {\r\n      for (const language of languages) {\r\n        const formValues: FormValues = {};\r\n        for (const [fieldName, fieldValues] of Object.entries(item.Entity.Attributes)) {\r\n          formValues[fieldName] = LocalizationHelpers.translate(language, defaultLanguage, fieldValues, null);\r\n        }\r\n        this.initialFormValues[this.getInitialValuesKey(item.Entity.Guid, language)] = formValues;\r\n      }\r\n    }\r\n  }\r\n\r\n  private getInitialValuesKey(entityGuid: string, language: string): string {\r\n    return `entityGuid:${entityGuid}:language:${language}`;\r\n  }\r\n\r\n  getInitialValues(entityGuid: string, language: string): FormValues {\r\n    return this.initialFormValues[this.getInitialValuesKey(entityGuid, language)];\r\n  }\r\n\r\n  private setMissingValues(): void {\r\n    const items = this.itemService.getItems(this.eavService.eavConfig.itemGuids);\r\n    const inputTypes = this.inputTypeService.getInputTypes();\r\n    const languages = this.languageService.getLanguages();\r\n    const defaultLanguage = this.languageInstanceService.getDefaultLanguage(this.eavService.eavConfig.formId);\r\n    let switchToDefault = false;\r\n\r\n    for (const item of items) {\r\n      const contentTypeId = InputFieldHelpers.getContentTypeId(item);\r\n      const contentType = this.contentTypeService.getContentType(contentTypeId);\r\n\r\n      for (const ctAttribute of contentType.Attributes) {\r\n        const inputType = inputTypes.find(i => i.Type === ctAttribute.InputType);\r\n        // 'custom-default' doesn't have inputType and 'empty-default' and 'empty-end' don't save value\r\n        const empties = [InputTypeConstants.EmptyDefault, InputTypeConstants.EmptyEnd];\r\n        if (empties.includes(inputType?.Type)) { continue; }\r\n\r\n        const attributeValues = item.Entity.Attributes[ctAttribute.Name];\r\n        const fieldSettings = FieldsSettingsHelpers.setDefaultFieldSettings(\r\n          FieldsSettingsHelpers.mergeSettings<FieldSettings>(ctAttribute.Metadata, defaultLanguage, defaultLanguage),\r\n        );\r\n\r\n        if (languages.length === 0) {\r\n          const firstValue = LocalizationHelpers.getBestValue(attributeValues, '*', '*', BestValueModes.Default);\r\n          if (InputFieldHelpers.isValueEmpty(firstValue, this.eavService)) {\r\n            this.itemService.setDefaultValue(item, ctAttribute, inputType, fieldSettings, languages, defaultLanguage);\r\n          }\r\n        } else {\r\n          const noLanguageValue = LocalizationHelpers.getBestValue(attributeValues, '*', '*', BestValueModes.Strict);\r\n          if (!inputType?.DisableI18n && noLanguageValue !== undefined) {\r\n            // move * value to defaultLanguage\r\n            const transactionItem = this.itemService.removeItemAttributeDimension(item.Entity.Guid, ctAttribute.Name, '*', true);\r\n            this.itemService.addItemAttributeValue(\r\n              item.Entity.Guid,\r\n              ctAttribute.Name,\r\n              noLanguageValue,\r\n              defaultLanguage,\r\n              false,\r\n              ctAttribute.Type,\r\n              false,\r\n              transactionItem,\r\n            );\r\n            continue;\r\n          }\r\n\r\n          const defaultLanguageValue = LocalizationHelpers.getBestValue(\r\n            attributeValues,\r\n            defaultLanguage,\r\n            defaultLanguage,\r\n            BestValueModes.Strict,\r\n          );\r\n          if (InputFieldHelpers.isValueEmpty(defaultLanguageValue, this.eavService)) {\r\n            this.itemService.setDefaultValue(item, ctAttribute, inputType, fieldSettings, languages, defaultLanguage);\r\n            switchToDefault = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const currentLanguage = this.languageInstanceService.getCurrentLanguage(this.eavService.eavConfig.formId);\r\n    if (switchToDefault && currentLanguage !== defaultLanguage) {\r\n      this.languageInstanceService.setCurrentLanguage(this.eavService.eavConfig.formId, defaultLanguage);\r\n      const message = this.translate.instant('Message.SwitchedLanguageToDefault', { language: defaultLanguage });\r\n      this.snackBar.open(message, null, { duration: 5000 });\r\n    }\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { distinctUntilChanged, filter, map, pairwise, startWith } from 'rxjs/operators';\r\nimport { EavService } from '.';\r\nimport { ItemHistoryResult } from '../../../ng-dialogs/src/app/item-history/models/item-history-result.model';\r\nimport { convertFormToUrl } from '../../../ng-dialogs/src/app/shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../../../ng-dialogs/src/app/shared/models/edit-form.model';\r\nimport { EditEntryComponent } from '../../edit-entry/edit-entry.component';\r\nimport { EditParams } from '../../edit-matcher.models';\r\nimport { UrlHelpers } from '../helpers';\r\nimport { ChildFormResult, NavigateFormResult } from '../models';\r\nimport { LanguageInstanceService } from '../store/ngrx-data';\r\n\r\n@Injectable()\r\nexport class EditRoutingService implements OnDestroy {\r\n  private subscription: Subscription;\r\n  private childFormResult$: Subject<ChildFormResult>;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<EditEntryComponent>,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private languageInstanceService: LanguageInstanceService,\r\n    private eavService: EavService,\r\n  ) { }\r\n\r\n  ngOnDestroy() {\r\n    this.childFormResult$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  init() {\r\n    this.subscription = new Subscription();\r\n    this.childFormResult$ = new Subject<ChildFormResult>();\r\n    this.initHideHeader();\r\n    this.initChildFormResult();\r\n    this.refreshOnChildVersionsClosed();\r\n  }\r\n\r\n  /** Tells if field with this index should be expanded */\r\n  isExpanded(fieldId: number, entityGuid: string) {\r\n    const fieldIndex = fieldId.toString();\r\n    const params = this.route.snapshot.params as EditParams;\r\n    const isExpanded = params.detailsEntityGuid === entityGuid && params.detailsFieldId === fieldIndex;\r\n    return isExpanded;\r\n  }\r\n\r\n  /** Tells if field with this index should be expanded */\r\n  isExpanded$(fieldId: number, entityGuid: string) {\r\n    const fieldIndex = fieldId.toString();\r\n    return this.route.params.pipe(\r\n      map((params: EditParams) => params.detailsEntityGuid === entityGuid && params.detailsFieldId === fieldIndex),\r\n      distinctUntilChanged()\r\n    );\r\n  }\r\n\r\n  /** Fires when child form is closed and has a result, new entity was added */\r\n  childFormResult(fieldId: number, entityGuid: string) {\r\n    return this.childFormResult$.pipe(\r\n      filter(\r\n        childResult => childResult.updateEntityGuid === entityGuid && childResult.updateFieldId === fieldId && childResult.result != null\r\n      ),\r\n      map(childResult => childResult.result)\r\n    );\r\n  }\r\n\r\n  /** Fires when child form is closed */\r\n  childFormClosed() {\r\n    return this.childFormResult$.pipe(map(childResult => null));\r\n  }\r\n\r\n  expand(expand: boolean, fieldId: number, entityGuid: string, componentTag?: string) {\r\n    const params = this.route.snapshot.params as EditParams;\r\n    const oldHasDetails = params.detailsEntityGuid != null && params.detailsFieldId != null;\r\n    const oldEditUrl = `edit/${params.items}` + (oldHasDetails ? `/details/${params.detailsEntityGuid}/${params.detailsFieldId}` : '');\r\n    const newEditUrl = `edit/${params.items}` + (expand ? `/details/${entityGuid}/${fieldId}` : '');\r\n\r\n    const currentUrl = UrlHelpers.calculatePathFromRoot(this.route);\r\n    const lastIndex = currentUrl.lastIndexOf(oldEditUrl);\r\n    if (lastIndex <= 0) { return; }\r\n    const newUrl = currentUrl.substring(0, lastIndex) + currentUrl.substring(lastIndex).replace(oldEditUrl, newEditUrl);\r\n    this.router.navigate([newUrl], { state: componentTag && { componentTag } });\r\n  }\r\n\r\n  /** Opens child dialog and stores update entityGuid and fieldId in the url, if field is not expanded already */\r\n  open(fieldId: number, entityGuid: string, form: EditForm) {\r\n    const formUrl = convertFormToUrl(form);\r\n    const params = this.route.snapshot.params as EditParams;\r\n    const hasDetails = params.detailsEntityGuid != null && params.detailsFieldId != null;\r\n    // if field is expanded, just open child because that info will be used for field update\r\n    if (hasDetails) {\r\n      this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n      return;\r\n    }\r\n\r\n    // otherwise add /update/:entityGuid/:fieldId to the url\r\n    const oldEditUrl = `edit/${params.items}`;\r\n    const newEditUrl = `edit/${params.items}/update/${entityGuid}/${fieldId}/edit/${formUrl}`;\r\n\r\n    const currentUrl = UrlHelpers.calculatePathFromRoot(this.route);\r\n    const lastIndex = currentUrl.lastIndexOf(oldEditUrl);\r\n    if (lastIndex <= 0) { return; }\r\n    const newUrl = currentUrl.substring(0, lastIndex) + currentUrl.substring(lastIndex).replace(oldEditUrl, newEditUrl);\r\n    this.router.navigate([newUrl]);\r\n  }\r\n\r\n  /** Update hideHeader for the form. Fix for safari and mobile browsers */\r\n  private initHideHeader() {\r\n    this.subscription.add(\r\n      this.route.params\r\n        .pipe(\r\n          map((params: EditParams) => params.detailsEntityGuid != null && params.detailsFieldId != null),\r\n          distinctUntilChanged(),\r\n        )\r\n        .subscribe(hasDetails => {\r\n          this.languageInstanceService.updateHideHeader(this.eavService.eavConfig.formId, hasDetails);\r\n        })\r\n    );\r\n  }\r\n\r\n  private initChildFormResult() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        startWith(!!this.route.snapshot.firstChild),\r\n        map(() => !!this.route.snapshot.firstChild),\r\n        pairwise(),\r\n        filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n        map(() => {\r\n          const params = this.route.snapshot.params as EditParams;\r\n          const hasDetails = params.detailsEntityGuid != null && params.detailsFieldId != null;\r\n          const updateEntityGuid = hasDetails ? params.detailsEntityGuid : params.updateEntityGuid;\r\n          const updateFieldId = hasDetails ? params.detailsFieldId : params.updateFieldId;\r\n          const navigation = this.router.getCurrentNavigation();\r\n          const editResult = navigation.extras?.state;\r\n          const formResult: ChildFormResult = {\r\n            updateEntityGuid,\r\n            updateFieldId: parseInt(updateFieldId, 10),\r\n            result: editResult,\r\n          };\r\n          return formResult;\r\n        }),\r\n      ).subscribe(formResult => {\r\n        // alert subscribers that child form closed\r\n        this.childFormResult$.next(formResult);\r\n\r\n        // clear update ids from url (leave expanded/details)\r\n        const params = this.route.snapshot.params as EditParams;\r\n        const hasUpdate = params.updateEntityGuid != null && params.updateFieldId != null;\r\n        if (!hasUpdate) { return; }\r\n\r\n        const oldEditUrl = `edit/${params.items}/update/${params.updateEntityGuid}/${params.updateFieldId}`;\r\n        const newEditUrl = `edit/${params.items}`;\r\n\r\n        const currentUrl = UrlHelpers.calculatePathFromRoot(this.route);\r\n        const lastIndex = currentUrl.lastIndexOf(oldEditUrl);\r\n        if (lastIndex <= 0) { return; }\r\n        const newUrl = currentUrl.substring(0, lastIndex) + currentUrl.substring(lastIndex).replace(oldEditUrl, newEditUrl);\r\n        this.router.navigate([newUrl]);\r\n      })\r\n    );\r\n  }\r\n\r\n  private refreshOnChildVersionsClosed() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        startWith(!!this.route.snapshot.firstChild),\r\n        map(() => !!this.route.snapshot.firstChild),\r\n        pairwise(),\r\n        filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n        map(() => {\r\n          const navigation = this.router.getCurrentNavigation();\r\n          const versionsResult = navigation.extras?.state as ItemHistoryResult;\r\n          return versionsResult;\r\n        }),\r\n        filter(versionsResult => versionsResult?.refreshEdit != null),\r\n      ).subscribe(result => {\r\n        if (!result.refreshEdit) { return; }\r\n        const params = this.route.snapshot.params as EditParams;\r\n        const oldEditUrl = `edit/${params.items}`;\r\n        const newEditUrl = `edit/refresh/${params.items}`;\r\n\r\n        const currentUrl = UrlHelpers.calculatePathFromRoot(this.route);\r\n        const lastIndex = currentUrl.lastIndexOf(oldEditUrl);\r\n        if (lastIndex <= 0) { return; }\r\n        const newUrl = currentUrl.substring(0, lastIndex) + currentUrl.substring(lastIndex).replace(oldEditUrl, newEditUrl);\r\n        const navRes: NavigateFormResult = {\r\n          navigateUrl: newUrl,\r\n        };\r\n        this.dialogRef.close(navRes);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from 'projects/ng-dialogs/src/app/shared/services/context';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, share, switchMap } from 'rxjs/operators';\r\nimport { EavService, webApiEditRoot } from '.';\r\nimport { EntityInfo } from '../../../edit-types';\r\n\r\nexport const webApiEntityRoot = 'admin/entity/';\r\nexport const webApiEntityList = 'admin/entity/list';\r\n\r\n@Injectable()\r\nexport class EntityService {\r\n  constructor(private http: HttpClient, private eavService: EavService, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAvailableEntities(contentTypeName: string, entitiesFilter?: string[]): Observable<EntityInfo[]> {\r\n    // eavConfig for edit ui and context for other calls\r\n    const context = this.eavService.eavConfig ?? this.context;\r\n    return this.http.post<EntityInfo[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEditRoot + 'EntityPicker'), entitiesFilter, {\r\n      params: { contentTypeName, appId: context.appId.toString() },\r\n    });\r\n  }\r\n\r\n  // Experimental 2dm\r\n  reactiveEntities(params: Observable<{ contentTypeName: string }>): Observable<EntityInfo[]> {\r\n    return params.pipe(\r\n      filter(p => p != null),\r\n      switchMap(p => this.getAvailableEntities(p.contentTypeName).pipe(share())),\r\n    );\r\n  }\r\n\r\n  delete(contentType: string, entityId: number, force: boolean): Observable<null> {\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType, id: entityId.toString(), appId: this.eavService.eavConfig.appId, force: force.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { EavService, LoggingService } from '.';\r\nimport { FieldSettings, FieldValue } from '../../../edit-types';\r\nimport { FieldsSettingsHelpers, FormulaHelpers, GeneralHelpers, InputFieldHelpers, LocalizationHelpers } from '../helpers';\r\nimport { DesignerState, FormulaCacheItem, FormulaFunction, FormulaResult, FormulaTarget, LogSeverities } from '../models';\r\nimport { ContentTypeItemService, ContentTypeService, ItemService, LanguageInstanceService } from '../store/ngrx-data';\r\n\r\n@Injectable()\r\nexport class FormulaDesignerService implements OnDestroy {\r\n  private formulaCache$: BehaviorSubject<FormulaCacheItem[]>;\r\n  private formulaResults$: BehaviorSubject<FormulaResult[]>;\r\n  private designerState$: BehaviorSubject<DesignerState>;\r\n\r\n  constructor(\r\n    private eavService: EavService,\r\n    private itemService: ItemService,\r\n    private contentTypeService: ContentTypeService,\r\n    private languageInstanceService: LanguageInstanceService,\r\n    private contentTypeItemService: ContentTypeItemService,\r\n    private loggingService: LoggingService,\r\n    private translate: TranslateService,\r\n  ) { }\r\n\r\n  ngOnDestroy(): void {\r\n    this.formulaCache$?.complete();\r\n    this.formulaResults$?.complete();\r\n    this.designerState$?.complete();\r\n  }\r\n\r\n  init(): void {\r\n    this.formulaResults$ = new BehaviorSubject([]);\r\n    const initialDesignerState: DesignerState = {\r\n      editMode: false,\r\n      entityGuid: undefined,\r\n      fieldName: undefined,\r\n      isOpen: false,\r\n      target: undefined,\r\n    };\r\n    this.designerState$ = new BehaviorSubject(initialDesignerState);\r\n    const formulaCache = this.buildFormulaCache();\r\n    this.formulaCache$ = new BehaviorSubject(formulaCache);\r\n  }\r\n\r\n  getFormula(entityGuid: string, fieldName: string, target: FormulaTarget, allowDraft: boolean): FormulaCacheItem {\r\n    return this.formulaCache$.value.find(\r\n      f =>\r\n        f.entityGuid === entityGuid\r\n        && f.fieldName === fieldName\r\n        && f.target === target\r\n        && (allowDraft ? true : !f.isDraft)\r\n    );\r\n  }\r\n\r\n  getFormula$(entityGuid: string, fieldName: string, target: FormulaTarget, allowDraft: boolean): Observable<FormulaCacheItem> {\r\n    const isDraft = allowDraft ? [true, false] : [false];\r\n    return this.formulaCache$.pipe(\r\n      map(formulas => formulas.find(\r\n        f => f.entityGuid === entityGuid && f.fieldName === fieldName && f.target === target && isDraft.includes(f.isDraft))\r\n      ),\r\n      distinctUntilChanged(GeneralHelpers.objectsEqual),\r\n    );\r\n  }\r\n\r\n  getFormulas(entityGuid?: string, fieldName?: string, target?: FormulaTarget, allowDraft?: boolean): FormulaCacheItem[] {\r\n    return this.formulaCache$.value.filter(\r\n      f =>\r\n        (entityGuid ? f.entityGuid === entityGuid : true)\r\n        && (fieldName ? f.fieldName === fieldName : true)\r\n        && (target ? f.target === target : true)\r\n        && (allowDraft ? true : !f.isDraft)\r\n    );\r\n  }\r\n\r\n  getFormulas$(): Observable<FormulaCacheItem[]> {\r\n    return this.formulaCache$.asObservable();\r\n  }\r\n\r\n  upsertFormula(entityGuid: string, fieldName: string, target: FormulaTarget, formula: string, run: boolean): void {\r\n    let formulaFunction: FormulaFunction;\r\n    if (run) {\r\n      try {\r\n        formulaFunction = FormulaHelpers.buildFormulaFunction(formula);\r\n      } catch (error) {\r\n        this.upsertFormulaResult(entityGuid, fieldName, target, undefined, true);\r\n        const item = this.itemService.getItem(entityGuid);\r\n        const contentTypeId = InputFieldHelpers.getContentTypeId(item);\r\n        const contentType = this.contentTypeService.getContentType(contentTypeId);\r\n        const currentLanguage = this.languageInstanceService.getCurrentLanguage(this.eavService.eavConfig.formId);\r\n        const defaultLanguage = this.languageInstanceService.getDefaultLanguage(this.eavService.eavConfig.formId);\r\n        const itemTitle = FieldsSettingsHelpers.getContentTypeTitle(contentType, currentLanguage, defaultLanguage);\r\n        const errorLabel = `Error building formula for Entity: \"${itemTitle}\", Field: \"${fieldName}\", Target: \"${target}\"`;\r\n        this.loggingService.addLog(LogSeverities.Error, errorLabel, error);\r\n        const designerState = this.getDesignerState();\r\n        const isOpenInDesigner = designerState.isOpen\r\n          && designerState.entityGuid === entityGuid\r\n          && designerState.fieldName === fieldName\r\n          && designerState.target === target;\r\n        if (isOpenInDesigner) {\r\n          console.error(errorLabel, error);\r\n        }\r\n      }\r\n    }\r\n\r\n    const oldFormulaCache = this.formulaCache$.value;\r\n    const oldFormulaIndex = oldFormulaCache.findIndex(f => f.entityGuid === entityGuid && f.fieldName === fieldName && f.target === target);\r\n    const oldFormulaItem = oldFormulaCache[oldFormulaIndex];\r\n\r\n    const newFormulaItem: FormulaCacheItem = {\r\n      cache: oldFormulaItem?.cache ?? {},\r\n      entityGuid,\r\n      fieldName,\r\n      fn: formulaFunction?.bind({}),\r\n      isDraft: run ? formulaFunction == null : true,\r\n      source: formula,\r\n      sourceFromSettings: oldFormulaItem?.sourceFromSettings,\r\n      sourceGuid: oldFormulaItem?.sourceGuid,\r\n      target,\r\n      version: FormulaHelpers.findFormulaVersion(formula),\r\n    };\r\n\r\n    const newCache = oldFormulaIndex >= 0\r\n      ? [...oldFormulaCache.slice(0, oldFormulaIndex), newFormulaItem, ...oldFormulaCache.slice(oldFormulaIndex + 1)]\r\n      : [newFormulaItem, ...oldFormulaCache];\r\n    this.formulaCache$.next(newCache);\r\n  }\r\n\r\n  updateSaved(entityGuid: string, fieldName: string, target: FormulaTarget, formula: string): void {\r\n    const oldFormulaCache = this.formulaCache$.value;\r\n    const oldFormulaIndex = oldFormulaCache.findIndex(f => f.entityGuid === entityGuid && f.fieldName === fieldName && f.target === target);\r\n    const oldFormulaItem = oldFormulaCache[oldFormulaIndex];\r\n    if (oldFormulaItem == null) { return; }\r\n\r\n    const newFormulaItem: FormulaCacheItem = {\r\n      ...oldFormulaItem,\r\n      sourceFromSettings: formula,\r\n    };\r\n\r\n    const newCache = [...oldFormulaCache.slice(0, oldFormulaIndex), newFormulaItem, ...oldFormulaCache.slice(oldFormulaIndex + 1)];\r\n    this.formulaCache$.next(newCache);\r\n  }\r\n\r\n  resetFormula(entityGuid: string, fieldName: string, target: FormulaTarget): void {\r\n    const oldResults = this.formulaResults$.value;\r\n    const oldResultIndex = oldResults.findIndex(r => r.entityGuid === entityGuid && r.fieldName === fieldName && r.target === target);\r\n    if (oldResultIndex >= 0) {\r\n      const newResults = [...oldResults.slice(0, oldResultIndex), ...oldResults.slice(oldResultIndex + 1)];\r\n      this.formulaResults$.next(newResults);\r\n    }\r\n\r\n    const oldFormulaCache = this.formulaCache$.value;\r\n    const oldFormulaIndex = oldFormulaCache.findIndex(f => f.entityGuid === entityGuid && f.fieldName === fieldName && f.target === target);\r\n    const oldFormulaItem = oldFormulaCache[oldFormulaIndex];\r\n\r\n    if (oldFormulaItem?.sourceFromSettings != null) {\r\n      this.upsertFormula(entityGuid, fieldName, target, oldFormulaItem.sourceFromSettings, true);\r\n    } else if (oldFormulaIndex >= 0) {\r\n      const newCache = [...oldFormulaCache.slice(0, oldFormulaIndex), ...oldFormulaCache.slice(oldFormulaIndex + 1)];\r\n      this.formulaCache$.next(newCache);\r\n    }\r\n  }\r\n\r\n  upsertFormulaResult(entityGuid: string, fieldName: string, target: FormulaTarget, value: FieldValue, isError: boolean): void {\r\n    const newResult: FormulaResult = {\r\n      entityGuid,\r\n      fieldName,\r\n      target,\r\n      value,\r\n      isError,\r\n    };\r\n\r\n    const oldResults = this.formulaResults$.value;\r\n    const oldResultIndex = oldResults.findIndex(r => r.entityGuid === entityGuid && r.fieldName === fieldName && r.target === target);\r\n    const newResults = oldResultIndex >= 0\r\n      ? [...oldResults.slice(0, oldResultIndex), newResult, ...oldResults.slice(oldResultIndex + 1)]\r\n      : [newResult, ...oldResults];\r\n    this.formulaResults$.next(newResults);\r\n  }\r\n\r\n  getFormulaResult$(entityGuid: string, fieldName: string, target: FormulaTarget): Observable<FormulaResult> {\r\n    return this.formulaResults$.pipe(\r\n      map(results => results.find(r => r.entityGuid === entityGuid && r.fieldName === fieldName && r.target === target)),\r\n      distinctUntilChanged(GeneralHelpers.objectsEqual),\r\n    );\r\n  }\r\n\r\n  setDesignerOpen(isOpen: boolean): void {\r\n    const newState: DesignerState = {\r\n      ...this.getDesignerState(),\r\n      isOpen,\r\n    };\r\n    this.setDesignerState(newState);\r\n  }\r\n\r\n  setDesignerState(activeDesigner: DesignerState): void {\r\n    this.designerState$.next(activeDesigner);\r\n  }\r\n\r\n  getDesignerState(): DesignerState {\r\n    return this.designerState$.value;\r\n  }\r\n\r\n  getDesignerState$(): Observable<DesignerState> {\r\n    return this.designerState$.pipe(distinctUntilChanged(GeneralHelpers.objectsEqual));\r\n  }\r\n\r\n  private buildFormulaCache(): FormulaCacheItem[] {\r\n    const formulaCache: FormulaCacheItem[] = [];\r\n    const currentLanguage = this.languageInstanceService.getCurrentLanguage(this.eavService.eavConfig.formId);\r\n    const defaultLanguage = this.languageInstanceService.getDefaultLanguage(this.eavService.eavConfig.formId);\r\n\r\n    for (const entityGuid of this.eavService.eavConfig.itemGuids) {\r\n      const item = this.itemService.getItem(entityGuid);\r\n      const contentTypeId = InputFieldHelpers.getContentTypeId(item);\r\n      const contentType = this.contentTypeService.getContentType(contentTypeId);\r\n      for (const attribute of contentType.Attributes) {\r\n        const settings = FieldsSettingsHelpers.setDefaultFieldSettings(\r\n          FieldsSettingsHelpers.mergeSettings<FieldSettings>(attribute.Metadata, defaultLanguage, defaultLanguage),\r\n        );\r\n        const formulaItems = this.contentTypeItemService.getContentTypeItems(settings.Formulas).filter(formulaItem => {\r\n          const enabled: boolean = LocalizationHelpers.translate(currentLanguage, defaultLanguage, formulaItem.Attributes.Enabled, null);\r\n          return enabled;\r\n        });\r\n        for (const formulaItem of formulaItems) {\r\n          const formula: string = LocalizationHelpers.translate(currentLanguage, defaultLanguage, formulaItem.Attributes.Formula, null);\r\n          if (formula == null) { continue; }\r\n\r\n          const target: FormulaTarget = LocalizationHelpers.translate(\r\n            currentLanguage, defaultLanguage, formulaItem.Attributes.Target, null\r\n          );\r\n\r\n          let formulaFunction: FormulaFunction;\r\n          try {\r\n            formulaFunction = FormulaHelpers.buildFormulaFunction(formula);\r\n          } catch (error) {\r\n            this.upsertFormulaResult(entityGuid, attribute.Name, target, undefined, true);\r\n            const itemTitle = FieldsSettingsHelpers.getContentTypeTitle(contentType, currentLanguage, defaultLanguage);\r\n            this.loggingService.addLog(LogSeverities.Error, `Error building formula for Entity: \"${itemTitle}\", Field: \"${attribute.Name}\", Target: \"${target}\"`, error);\r\n            this.loggingService.showMessage(this.translate.instant('Errors.FormulaConfiguration'), 2000);\r\n          }\r\n\r\n          const formulaCacheItem: FormulaCacheItem = {\r\n            cache: {},\r\n            entityGuid,\r\n            fieldName: attribute.Name,\r\n            fn: formulaFunction?.bind({}),\r\n            isDraft: formulaFunction == null,\r\n            source: formula,\r\n            sourceFromSettings: formula,\r\n            sourceGuid: formulaItem.Guid,\r\n            target,\r\n            version: FormulaHelpers.findFormulaVersion(formula),\r\n          };\r\n\r\n          formulaCache.push(formulaCacheItem);\r\n        }\r\n      }\r\n    }\r\n\r\n    return formulaCache;\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\r\nimport { EavService, EditInitializerService, LoggingService } from '.';\r\nimport { FieldSettings, FieldValue } from '../../../edit-types';\r\nimport { InputType } from '../../../ng-dialogs/src/app/content-type-fields/models/input-type.model';\r\nimport { FormValues } from '../../eav-item-dialog/item-edit-form/item-edit-form.models';\r\nimport { ValidationHelper } from '../../eav-material-controls/validators/validation-helper';\r\nimport { FieldLogicManager } from '../../field-logic/field-logic-manager';\r\nimport { FieldsSettingsHelpers, FormulaHelpers, GeneralHelpers, InputFieldHelpers, LocalizationHelpers } from '../helpers';\r\n// tslint:disable-next-line:max-line-length\r\nimport { ContentTypeSettings, FieldsProps, FormulaCacheItem, FormulaFunctionDefault, FormulaTargets, FormulaVersions, LogSeverities, RunFormulasResult, SettingsFormulaPrefix, TranslationState } from '../models';\r\nimport { EavHeader } from '../models/eav';\r\nimport { ContentTypeService, GlobalConfigService, InputTypeService, ItemService, LanguageInstanceService, LanguageService } from '../store/ngrx-data';\r\nimport { FormulaDesignerService } from './formula-designer.service';\r\n\r\n@Injectable()\r\nexport class FieldsSettingsService implements OnDestroy {\r\n  private contentTypeSettings$: BehaviorSubject<ContentTypeSettings>;\r\n  private fieldsProps$: BehaviorSubject<FieldsProps>;\r\n  private forceSettings$: BehaviorSubject<void>;\r\n  private subscription: Subscription;\r\n  private valueFormulaCounter = 0;\r\n  private maxValueFormulaCycles = 5;\r\n  private formulaSettingsCache: Record<string, FieldSettings> = {};\r\n\r\n  constructor(\r\n    private contentTypeService: ContentTypeService,\r\n    private languageInstanceService: LanguageInstanceService,\r\n    private eavService: EavService,\r\n    private itemService: ItemService,\r\n    private inputTypeService: InputTypeService,\r\n    private languageService: LanguageService,\r\n    private formulaDesignerService: FormulaDesignerService,\r\n    private loggingService: LoggingService,\r\n    private translate: TranslateService,\r\n    private globalConfigService: GlobalConfigService,\r\n    private editInitializerService: EditInitializerService,\r\n  ) { }\r\n\r\n  ngOnDestroy(): void {\r\n    this.contentTypeSettings$?.complete();\r\n    this.fieldsProps$?.complete();\r\n    this.forceSettings$?.complete();\r\n    this.subscription?.unsubscribe();\r\n  }\r\n\r\n  init(entityGuid: string): void {\r\n    this.subscription = new Subscription();\r\n    this.contentTypeSettings$ = new BehaviorSubject(null);\r\n    this.fieldsProps$ = new BehaviorSubject(null);\r\n    this.forceSettings$ = new BehaviorSubject(null);\r\n\r\n    const item = this.itemService.getItem(entityGuid);\r\n    const entityId = item.Entity.Id;\r\n    const contentTypeId = InputFieldHelpers.getContentTypeId(item);\r\n    const contentType$ = this.contentTypeService.getContentType$(contentTypeId);\r\n    const itemHeader$ = this.itemService.getItemHeader$(entityGuid);\r\n    const currentLanguage$ = this.languageInstanceService.getCurrentLanguage$(this.eavService.eavConfig.formId);\r\n    const defaultLanguage$ = this.languageInstanceService.getDefaultLanguage$(this.eavService.eavConfig.formId);\r\n\r\n    this.subscription.add(\r\n      combineLatest([contentType$, itemHeader$, currentLanguage$, defaultLanguage$]).pipe(\r\n        map(([contentType, itemHeader, currentLanguage, defaultLanguage]) => {\r\n          const ctSettings = FieldsSettingsHelpers.setDefaultContentTypeSettings(\r\n            FieldsSettingsHelpers.mergeSettings<ContentTypeSettings>(contentType.Metadata, currentLanguage, defaultLanguage),\r\n            contentType,\r\n            currentLanguage,\r\n            defaultLanguage,\r\n            itemHeader,\r\n          );\r\n          return ctSettings;\r\n        }),\r\n      ).subscribe(ctSettings => {\r\n        this.contentTypeSettings$.next(ctSettings);\r\n      })\r\n    );\r\n\r\n    const itemAttributes$ = this.itemService.getItemAttributes$(entityGuid);\r\n    const inputTypes$ = this.inputTypeService.getInputTypes$();\r\n    this.subscription.add(\r\n      combineLatest([\r\n        combineLatest([contentType$, currentLanguage$, defaultLanguage$, itemAttributes$, itemHeader$, inputTypes$]),\r\n        combineLatest([this.forceSettings$]),\r\n      ]).pipe(\r\n        map(([\r\n          [contentType, currentLanguage, defaultLanguage, itemAttributes, itemHeader, inputTypes],\r\n          [forceSettings],\r\n        ]) => {\r\n          const formValues: FormValues = {};\r\n          for (const [fieldName, fieldValues] of Object.entries(itemAttributes)) {\r\n            formValues[fieldName] = LocalizationHelpers.translate(currentLanguage, defaultLanguage, fieldValues, null);\r\n          }\r\n\r\n          const fieldsProps: FieldsProps = {};\r\n          const formulaUpdates: FormValues = {};\r\n          for (const attribute of contentType.Attributes) {\r\n            const attributeValues = itemAttributes[attribute.Name];\r\n            // empty-default has no value\r\n            const value = formValues[attribute.Name];\r\n            // custom-default has no inputType\r\n            const inputType = inputTypes.find(i => i.Type === attribute.InputType);\r\n\r\n            const merged = FieldsSettingsHelpers.setDefaultFieldSettings(\r\n              FieldsSettingsHelpers.mergeSettings<FieldSettings>(attribute.Metadata, defaultLanguage, defaultLanguage),\r\n            );\r\n\r\n            // run formulas\r\n            const formulaResult = this.runFormulas(entityGuid, entityId, attribute.Name, formValues, inputType, merged, itemHeader);\r\n            const calculated = formulaResult.settings;\r\n            const formulaValue = formulaResult.value;\r\n\r\n            // special fixes\r\n            calculated.Name = calculated.Name || attribute.Name;\r\n            calculated.Required = ValidationHelper.isRequired(calculated);\r\n            calculated.DisableTranslation = FieldsSettingsHelpers.findDisableTranslation(\r\n              inputType, attributeValues, defaultLanguage, attribute.Metadata,\r\n            );\r\n            const slotIsEmpty = itemHeader.Group?.SlotCanBeEmpty && itemHeader.Group?.SlotIsEmpty;\r\n            calculated.DisableTranslation = slotIsEmpty || calculated.DisableTranslation;\r\n            calculated.Disabled = slotIsEmpty || calculated.Disabled;\r\n            const disabledBecauseTranslations = FieldsSettingsHelpers.getDisabledBecauseTranslations(\r\n              attributeValues, calculated.DisableTranslation, currentLanguage, defaultLanguage,\r\n            );\r\n            calculated.Disabled = disabledBecauseTranslations || calculated.Disabled;\r\n            // update settings with respective FieldLogics\r\n            const logic = FieldLogicManager.singleton().get(attribute.InputType);\r\n            const fixed = logic?.update(calculated, value) ?? calculated;\r\n\r\n            // important to compare with undefined because null is allowed value\r\n            if (!slotIsEmpty && !disabledBecauseTranslations && value !== undefined && formulaValue !== undefined) {\r\n              let valuesNotEqual = value !== formulaValue;\r\n              // do a more in depth comparisson in case of calculated entity fields\r\n              if (valuesNotEqual && Array.isArray(value) && Array.isArray(formulaValue)) {\r\n                valuesNotEqual = !GeneralHelpers.arraysEqual(value as string[], formulaValue as string[]);\r\n              }\r\n              if (valuesNotEqual) {\r\n                formulaUpdates[attribute.Name] = formulaValue;\r\n              }\r\n            }\r\n\r\n            const calculatedInputType = InputFieldHelpers.calculateInputType(attribute, inputTypes);\r\n            const wrappers = InputFieldHelpers.getWrappers(fixed, calculatedInputType);\r\n            const initialSettings = FieldsSettingsHelpers.setDefaultFieldSettings(\r\n              FieldsSettingsHelpers.mergeSettings<FieldSettings>(attribute.Metadata, this.eavService.eavConfig.lang, defaultLanguage),\r\n            );\r\n            const initialDisabled = initialSettings.Disabled ?? false;\r\n            const fieldTranslation = FieldsSettingsHelpers.getTranslationState(\r\n              attributeValues, fixed.DisableTranslation, currentLanguage, defaultLanguage,\r\n            );\r\n\r\n            fieldsProps[attribute.Name] = {\r\n              calculatedInputType,\r\n              constants: {\r\n                angularAssets: inputType?.AngularAssets,\r\n                contentTypeId,\r\n                entityGuid,\r\n                fieldName: attribute.Name,\r\n                index: contentType.Attributes.indexOf(attribute),\r\n                initialDisabled,\r\n                inputType: calculatedInputType.inputType,\r\n                isExternal: calculatedInputType.isExternal,\r\n                isLastInGroup: FieldsSettingsHelpers.findIsLastInGroup(contentType, attribute),\r\n                type: attribute.Type,\r\n              },\r\n              settings: fixed,\r\n              translationState: fieldTranslation,\r\n              value,\r\n              wrappers,\r\n            };\r\n          }\r\n\r\n          if (Object.keys(formulaUpdates).length > 0 && this.maxValueFormulaCycles > this.valueFormulaCounter) {\r\n            this.valueFormulaCounter++;\r\n            this.itemService.updateItemAttributesValues(entityGuid, formulaUpdates, currentLanguage, defaultLanguage);\r\n            return;\r\n          }\r\n          this.valueFormulaCounter = 0;\r\n          return fieldsProps;\r\n        }),\r\n        filter(fieldsProps => !!fieldsProps),\r\n      ).subscribe(fieldsProps => {\r\n        this.fieldsProps$.next(fieldsProps);\r\n      })\r\n    );\r\n  }\r\n\r\n  getContentTypeSettings(): ContentTypeSettings {\r\n    return this.contentTypeSettings$.value;\r\n  }\r\n\r\n  getContentTypeSettings$(): Observable<ContentTypeSettings> {\r\n    return this.contentTypeSettings$.asObservable();\r\n  }\r\n\r\n  getFieldsProps(): FieldsProps {\r\n    return this.fieldsProps$.value;\r\n  }\r\n\r\n  getFieldsProps$(): Observable<FieldsProps> {\r\n    return this.fieldsProps$.asObservable();\r\n  }\r\n\r\n  getFieldSettings(fieldName: string): FieldSettings {\r\n    return this.fieldsProps$.value[fieldName].settings;\r\n  }\r\n\r\n  getFieldSettings$(fieldName: string): Observable<FieldSettings> {\r\n    return this.fieldsProps$.pipe(\r\n      map(fieldsSettings => fieldsSettings[fieldName].settings),\r\n      distinctUntilChanged(GeneralHelpers.objectsEqual),\r\n    );\r\n  }\r\n\r\n  getTranslationState$(fieldName: string): Observable<TranslationState> {\r\n    return this.fieldsProps$.pipe(\r\n      map(fieldsSettings => fieldsSettings[fieldName].translationState),\r\n      distinctUntilChanged(GeneralHelpers.objectsEqual),\r\n    );\r\n  }\r\n\r\n  forceSettings(): void {\r\n    this.forceSettings$.next();\r\n  }\r\n\r\n  private runFormulas(\r\n    entityGuid: string,\r\n    entityId: number,\r\n    fieldName: string,\r\n    formValues: FormValues,\r\n    inputType: InputType,\r\n    settings: FieldSettings,\r\n    itemHeader: EavHeader,\r\n  ): RunFormulasResult {\r\n    const currentLanguage = this.languageInstanceService.getCurrentLanguage(this.eavService.eavConfig.formId);\r\n    const defaultLanguage = this.languageInstanceService.getDefaultLanguage(this.eavService.eavConfig.formId);\r\n\r\n    const previousSettings: FieldSettings = {\r\n      ...settings,\r\n      ...this.formulaSettingsCache[this.getFormulaSettingsKey(fieldName, currentLanguage, defaultLanguage)],\r\n    };\r\n\r\n    const formulas = this.formulaDesignerService.getFormulas(entityGuid, fieldName, null, false);\r\n    let formulaValue: FieldValue;\r\n    const formulaSettings: Record<string, any> = {};\r\n    for (const formula of formulas) {\r\n      const runResult = this.runFormula(formula, entityId, formValues, inputType, settings, previousSettings, itemHeader);\r\n      if (runResult === undefined) { continue; }\r\n\r\n      if (formula.target === FormulaTargets.Value) {\r\n        formulaValue = runResult;\r\n        continue;\r\n      }\r\n\r\n      if (formula.target.startsWith(SettingsFormulaPrefix)) {\r\n        const settingName = formula.target.substring(SettingsFormulaPrefix.length);\r\n        const defaultSetting = (settings as Record<string, any>)[settingName];\r\n\r\n        if (defaultSetting == null || runResult == null) {\r\n          // can't check types, hope for the best\r\n          formulaSettings[settingName] = runResult;\r\n          continue;\r\n        }\r\n\r\n        if (Array.isArray(defaultSetting) && Array.isArray(runResult)) {\r\n          // can't check types of items in array, hope for the best\r\n          formulaSettings[settingName] = runResult;\r\n          continue;\r\n        }\r\n\r\n        if (typeof defaultSetting === typeof runResult) {\r\n          // maybe typesafe\r\n          formulaSettings[settingName] = runResult;\r\n          continue;\r\n        }\r\n      }\r\n    }\r\n\r\n    // save settings for the next cycle\r\n    this.formulaSettingsCache[this.getFormulaSettingsKey(fieldName, currentLanguage, defaultLanguage)] = formulaSettings as FieldSettings;\r\n\r\n    const formulaResult: RunFormulasResult = {\r\n      settings: {\r\n        ...settings,\r\n        ...formulaSettings,\r\n      },\r\n      value: formulaValue,\r\n    };\r\n    return formulaResult;\r\n  }\r\n\r\n  private getFormulaSettingsKey(fieldName: string, currentLanguage: string, defaultLanguage: string): string {\r\n    return `fieldName:${fieldName}:currentLanguage:${currentLanguage}:defaultLanguage:${defaultLanguage}`;\r\n  }\r\n\r\n  private runFormula(\r\n    formula: FormulaCacheItem,\r\n    entityId: number,\r\n    formValues: FormValues,\r\n    inputType: InputType,\r\n    settings: FieldSettings,\r\n    previousSettings: FieldSettings,\r\n    itemHeader: EavHeader,\r\n  ): FieldValue {\r\n    const currentLanguage = this.languageInstanceService.getCurrentLanguage(this.eavService.eavConfig.formId);\r\n    const defaultLanguage = this.languageInstanceService.getDefaultLanguage(this.eavService.eavConfig.formId);\r\n    const languages = this.languageService.getLanguages();\r\n    const debugEnabled = this.globalConfigService.getDebugEnabled();\r\n    const initialFormValues = this.editInitializerService.getInitialValues(formula.entityGuid, currentLanguage);\r\n    const formulaProps = FormulaHelpers.buildFormulaProps(\r\n      formula,\r\n      entityId,\r\n      inputType,\r\n      settings,\r\n      previousSettings,\r\n      formValues,\r\n      initialFormValues,\r\n      currentLanguage,\r\n      defaultLanguage,\r\n      languages,\r\n      itemHeader,\r\n      debugEnabled,\r\n      this.itemService,\r\n      this.eavService,\r\n      this,\r\n    );\r\n    const designerState = this.formulaDesignerService.getDesignerState();\r\n    const isOpenInDesigner = designerState.isOpen\r\n      && designerState.entityGuid === formula.entityGuid\r\n      && designerState.fieldName === formula.fieldName\r\n      && designerState.target === formula.target;\r\n    const ctSettings = this.getContentTypeSettings();\r\n    try {\r\n      switch (formula.version) {\r\n        case FormulaVersions.V1:\r\n          if (isOpenInDesigner) {\r\n            console.log(`Running formula${FormulaVersions.V1.toLocaleUpperCase()} for Entity: \"${ctSettings._itemTitle}\", Field: \"${formula.fieldName}\", Target: \"${formula.target}\" with following arguments:`, formulaProps);\r\n          }\r\n          const valueV1 = formula.fn(formulaProps.data, formulaProps.context, formulaProps.experimental);\r\n          this.formulaDesignerService.upsertFormulaResult(formula.entityGuid, formula.fieldName, formula.target, valueV1, false);\r\n          if (isOpenInDesigner) {\r\n            console.log('Formula result:', valueV1);\r\n          }\r\n          return valueV1;\r\n        default:\r\n          if (isOpenInDesigner) {\r\n            console.log(`Running formula for Entity: \"${ctSettings._itemTitle}\", Field: \"${formula.fieldName}\", Target: \"${formula.target}\" with following arguments:`, undefined);\r\n          }\r\n          const valueDefault = (formula.fn as FormulaFunctionDefault)();\r\n          this.formulaDesignerService.upsertFormulaResult(formula.entityGuid, formula.fieldName, formula.target, valueDefault, false);\r\n          if (isOpenInDesigner) {\r\n            console.log('Formula result:', valueDefault);\r\n          }\r\n          return valueDefault;\r\n      }\r\n    } catch (error) {\r\n      const errorLabel = `Error in formula calculation for Entity: \"${ctSettings._itemTitle}\", Field: \"${formula.fieldName}\", Target: \"${formula.target}\"`;\r\n      this.formulaDesignerService.upsertFormulaResult(formula.entityGuid, formula.fieldName, formula.target, undefined, true);\r\n      this.loggingService.addLog(LogSeverities.Error, errorLabel, error);\r\n      if (isOpenInDesigner) {\r\n        console.error(errorLabel, error);\r\n      } else {\r\n        this.loggingService.showMessage(this.translate.instant('Errors.FormulaCalculation'), 2000);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EavService, FieldsSettingsService } from '.';\r\nimport { consoleLogAngular } from '../../../ng-dialogs/src/app/shared/helpers/console-log-angular.helper';\r\nimport { InputFieldHelpers, LocalizationHelpers } from '../helpers';\r\nimport { EavItem } from '../models/eav';\r\nimport { ContentTypeService, ItemService, LanguageInstanceService } from '../store/ngrx-data';\r\n\r\n@Injectable()\r\nexport class FieldsTranslateService {\r\n  private entityGuid: string;\r\n  private contentTypeId: string;\r\n\r\n  constructor(\r\n    private itemService: ItemService,\r\n    private languageInstanceService: LanguageInstanceService,\r\n    private eavService: EavService,\r\n    private contentTypeService: ContentTypeService,\r\n    private fieldsSettingsService: FieldsSettingsService,\r\n  ) { }\r\n\r\n  init(entityGuid: string): void {\r\n    this.entityGuid = entityGuid;\r\n    const item = this.itemService.getItem(entityGuid);\r\n    this.contentTypeId = InputFieldHelpers.getContentTypeId(item);\r\n  }\r\n\r\n  translate(fieldName: string, isTransaction = false, transactionItem?: EavItem): EavItem {\r\n    if (this.isTranslationDisabled(fieldName)) { return; }\r\n    const currentLanguage = this.languageInstanceService.getCurrentLanguage(this.eavService.eavConfig.formId);\r\n    const defaultLanguage = this.languageInstanceService.getDefaultLanguage(this.eavService.eavConfig.formId);\r\n\r\n    transactionItem = this.itemService.removeItemAttributeDimension(this.entityGuid, fieldName, currentLanguage, true, transactionItem);\r\n\r\n    const attributes = this.itemService.getItemAttributes(this.entityGuid);\r\n    const values = attributes[fieldName];\r\n    const defaultValue = LocalizationHelpers.getValueTranslation(values, defaultLanguage, defaultLanguage);\r\n    const contentType = this.contentTypeService.getContentType(this.contentTypeId);\r\n    const ctAttribute = contentType.Attributes.find(a => a.Name === fieldName);\r\n    transactionItem = this.itemService.addItemAttributeValue(\r\n      this.entityGuid, fieldName, defaultValue.Value, currentLanguage, false, ctAttribute.Type, isTransaction, transactionItem,\r\n    );\r\n    return transactionItem;\r\n  }\r\n\r\n  dontTranslate(fieldName: string, isTransaction = false, transactionItem?: EavItem): EavItem {\r\n    if (this.isTranslationDisabled(fieldName)) { return; }\r\n\r\n    const currentLanguage = this.languageInstanceService.getCurrentLanguage(this.eavService.eavConfig.formId);\r\n    transactionItem = this.itemService.removeItemAttributeDimension(\r\n      this.entityGuid, fieldName, currentLanguage, isTransaction, transactionItem,\r\n    );\r\n    return transactionItem;\r\n  }\r\n\r\n  copyFrom(fieldName: string, copyFromLanguageKey: string): void {\r\n    if (this.isTranslationDisabled(fieldName)) { return; }\r\n\r\n    const attributes = this.itemService.getItemAttributes(this.entityGuid);\r\n    const values = attributes[fieldName];\r\n    const currentLanguage = this.languageInstanceService.getCurrentLanguage(this.eavService.eavConfig.formId);\r\n    const defaultLanguage = this.languageInstanceService.getDefaultLanguage(this.eavService.eavConfig.formId);\r\n    const attributeValueTranslation = LocalizationHelpers.getValueTranslation(values, copyFromLanguageKey, defaultLanguage);\r\n    if (attributeValueTranslation) {\r\n      const valueAlreadyExists = values\r\n        ? LocalizationHelpers.isEditableOrReadonlyTranslationExist(values, currentLanguage, defaultLanguage)\r\n        : false;\r\n\r\n      if (valueAlreadyExists) {\r\n        // Copy attribute value where language is languageKey to value where language is current language\r\n        this.itemService.updateItemAttributeValue(\r\n          this.entityGuid, fieldName, attributeValueTranslation.Value, currentLanguage, defaultLanguage, false,\r\n        );\r\n      } else {\r\n        // Copy attribute value where language is languageKey to new attribute with current language\r\n        const contentType = this.contentTypeService.getContentType(this.contentTypeId);\r\n        const ctAttribute = contentType.Attributes.find(a => a.Name === fieldName);\r\n        this.itemService.addItemAttributeValue(\r\n          this.entityGuid, fieldName, attributeValueTranslation.Value, currentLanguage, false, ctAttribute.Type,\r\n        );\r\n      }\r\n    } else {\r\n      consoleLogAngular(`${currentLanguage}: Cant copy value from ${copyFromLanguageKey} because that value does not exist.`);\r\n    }\r\n  }\r\n\r\n  linkReadOnly(fieldName: string, linkWithLanguageKey: string): void {\r\n    if (this.isTranslationDisabled(fieldName)) { return; }\r\n\r\n    const currentLanguage = this.languageInstanceService.getCurrentLanguage(this.eavService.eavConfig.formId);\r\n    const defaultLanguage = this.languageInstanceService.getDefaultLanguage(this.eavService.eavConfig.formId);\r\n    const transactionItem = this.itemService.removeItemAttributeDimension(this.entityGuid, fieldName, currentLanguage, true);\r\n    this.itemService.addItemAttributeDimension(\r\n      this.entityGuid, fieldName, currentLanguage, linkWithLanguageKey, defaultLanguage, true, transactionItem,\r\n    );\r\n  }\r\n\r\n  linkReadWrite(fieldName: string, linkWithLanguageKey: string): void {\r\n    if (this.isTranslationDisabled(fieldName)) { return; }\r\n\r\n    const currentLanguage = this.languageInstanceService.getCurrentLanguage(this.eavService.eavConfig.formId);\r\n    const defaultLanguage = this.languageInstanceService.getDefaultLanguage(this.eavService.eavConfig.formId);\r\n    const transactionItem = this.itemService.removeItemAttributeDimension(this.entityGuid, fieldName, currentLanguage, true);\r\n    this.itemService.addItemAttributeDimension(\r\n      this.entityGuid, fieldName, currentLanguage, linkWithLanguageKey, defaultLanguage, false, transactionItem,\r\n    );\r\n  }\r\n\r\n  translateMany(): void {\r\n    const attributes = this.itemService.getItemAttributes(this.entityGuid);\r\n    const translateable = Object.keys(attributes).filter(fieldName => !this.isTranslationDisabled(fieldName));\r\n\r\n    let transactionItem: EavItem;\r\n    for (const fieldName of translateable) {\r\n      // will finish the transaction when last field is being translated\r\n      const isTransaction = fieldName !== translateable[translateable.length - 1];\r\n      transactionItem = this.translate(fieldName, isTransaction, transactionItem);\r\n    }\r\n  }\r\n\r\n  dontTranslateMany(): void {\r\n    const attributes = this.itemService.getItemAttributes(this.entityGuid);\r\n    const translateable = Object.keys(attributes).filter(fieldName => !this.isTranslationDisabled(fieldName));\r\n\r\n    let transactionItem: EavItem;\r\n    for (const fieldName of translateable) {\r\n      // will finish the transaction when last field is being translated\r\n      const isTransaction = fieldName !== translateable[translateable.length - 1];\r\n      transactionItem = this.dontTranslate(fieldName, isTransaction, transactionItem);\r\n    }\r\n  }\r\n\r\n  private isTranslationDisabled(fieldName: string) {\r\n    const fieldsProps = this.fieldsSettingsService.getFieldsProps();\r\n    return fieldsProps[fieldName].settings.DisableTranslation;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Dictionary } from '../../../ng-dialogs/src/app/shared/models/dictionary.model';\r\n\r\n@Injectable()\r\nexport class FileTypeService {\r\n  private defaultIcon = 'file';\r\n  private checkImgRegEx = /(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*\\.(?:jpg|jpeg|gif|png))(?:\\?([^#]*))?(?:#(.*))?/i;\r\n  private customExtensions: Dictionary<string> = {\r\n    doc: 'file-word',\r\n    docx: 'file-word',\r\n    xls: 'file-excel',\r\n    xlsx: 'file-excel',\r\n    ppt: 'file-powerpoint',\r\n    pptx: 'file-powerpoint',\r\n    pdf: 'file-pdf',\r\n    mp3: 'file-audio',\r\n    avi: 'file-video',\r\n    mpg: 'file-video',\r\n    mpeg: 'file-video',\r\n    mov: 'file-video',\r\n    mp4: 'file-video',\r\n    zip: 'file-archive',\r\n    rar: 'file-archive',\r\n    txt: 'file-text',\r\n    html: 'file-code',\r\n    css: 'file-code',\r\n    xml: 'file-code',\r\n    xsl: 'file-code',\r\n  };\r\n\r\n  private matExtensions: Dictionary<string> = {\r\n    vcf: 'person',\r\n  };\r\n\r\n  constructor() { }\r\n\r\n  getExtension(filename: string) {\r\n    return filename.substring(filename.lastIndexOf('.') + 1).toLocaleLowerCase();\r\n  }\r\n\r\n  getIconClass(filename: string) {\r\n    const ext = this.getExtension(filename);\r\n    return this.matExtensions[ext] || this.customExtensions[ext] || this.defaultIcon;\r\n  }\r\n\r\n  isKnownType(filename: string) {\r\n    return this.matExtensions[this.getExtension(filename)] != null;\r\n  }\r\n\r\n  isImage(filename: string) {\r\n    return this.checkImgRegEx.test(filename);\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { EavService } from '.';\r\nimport { Dictionary } from '../../../ng-dialogs/src/app/shared/models/dictionary.model';\r\n\r\n@Injectable()\r\nexport class FormsStateService implements OnDestroy {\r\n  formsValid$: BehaviorSubject<boolean>;\r\n  formsDirty$: BehaviorSubject<boolean>;\r\n\r\n  private formsValid: Dictionary<boolean>;\r\n  private formsDirty: Dictionary<boolean>;\r\n\r\n  constructor(private eavService: EavService) { }\r\n\r\n  ngOnDestroy() {\r\n    this.formsValid$?.complete();\r\n    this.formsDirty$?.complete();\r\n  }\r\n\r\n  init() {\r\n    this.formsValid$ = new BehaviorSubject(false);\r\n    this.formsDirty$ = new BehaviorSubject(false);\r\n    this.formsValid = {};\r\n    this.formsDirty = {};\r\n    for (const entityGuid of this.eavService.eavConfig.itemGuids) {\r\n      this.formsValid[entityGuid] = false;\r\n      this.formsDirty[entityGuid] = false;\r\n    }\r\n  }\r\n\r\n  getFormValid(entityGuid: string) {\r\n    return this.formsValid[entityGuid];\r\n  }\r\n\r\n  setFormValid(entityGuid: string, isValid: boolean) {\r\n    this.formsValid[entityGuid] = isValid;\r\n\r\n    const allValid = !Object.values(this.formsValid).some(valid => valid === false);\r\n    if (allValid !== this.formsValid$.value) {\r\n      this.formsValid$.next(allValid);\r\n    }\r\n  }\r\n\r\n  setFormDirty(entityGuid: string, isDirty: boolean) {\r\n    this.formsDirty[entityGuid] = isDirty;\r\n\r\n    const anyDirty = Object.values(this.formsDirty).some(dirty => dirty === true);\r\n    if (anyDirty !== this.formsDirty$.value) {\r\n      this.formsDirty$.next(anyDirty);\r\n    }\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { LogEntry, LogSeverity } from '../models';\r\n\r\n@Injectable()\r\nexport class LoggingService implements OnDestroy {\r\n  private logs$ = new BehaviorSubject<LogEntry[]>([]);\r\n  private logLimit = 50;\r\n  private lastSnackBarTime = 0;\r\n  private snackBarDebounce = 10000;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  ngOnDestroy(): void {\r\n    this.logs$.complete();\r\n  }\r\n\r\n  addLog(severity: LogSeverity, label: string, error: any): void {\r\n    const newLogEntry: LogEntry = {\r\n      error,\r\n      label,\r\n      severity,\r\n      time: Date.now(),\r\n    };\r\n    const oldLogs = this.logs$.value;\r\n    const newLogs = [newLogEntry, ...oldLogs.slice(0, this.logLimit - 2)];\r\n    this.logs$.next(newLogs);\r\n  }\r\n\r\n  /** Show snackBar to the user. By default snackBars have debounce timer, but you can force snackBar to show instantly */\r\n  showMessage(message: string, duration: number, force?: boolean): void {\r\n    const nowTime = Date.now();\r\n    if (!force && (nowTime - this.lastSnackBarTime) <= this.snackBarDebounce) {\r\n      return;\r\n    }\r\n\r\n    if (duration != null && duration > 0) {\r\n      this.snackBar.open(message, null, { duration });\r\n    } else {\r\n      this.snackBar.open(message);\r\n    }\r\n    this.lastSnackBarTime = nowTime;\r\n  }\r\n\r\n  getLogs$(): Observable<LogEntry[]> {\r\n    return this.logs$.asObservable();\r\n  }\r\n}\r\n","import appleFilled from '!raw-loader!../../assets/icons/2sxc/Material-Icon-Adam-48-filled.svg';\r\nimport apple from '!raw-loader!../../assets/icons/2sxc/Material-Icon-Adam-48.svg';\r\nimport draftBranch from '!raw-loader!../../assets/icons/font-awesome/draft-branch.svg';\r\nimport fileArchive from '!raw-loader!../../assets/icons/font-awesome/file-archive.svg';\r\nimport fileAudio from '!raw-loader!../../assets/icons/font-awesome/file-audio.svg';\r\nimport fileCode from '!raw-loader!../../assets/icons/font-awesome/file-code.svg';\r\nimport fileExcel from '!raw-loader!../../assets/icons/font-awesome/file-excel.svg';\r\nimport fileImage from '!raw-loader!../../assets/icons/font-awesome/file-image.svg';\r\nimport filePdf from '!raw-loader!../../assets/icons/font-awesome/file-pdf.svg';\r\nimport filePowerpoint from '!raw-loader!../../assets/icons/font-awesome/file-powerpoint.svg';\r\nimport fileText from '!raw-loader!../../assets/icons/font-awesome/file-text.svg';\r\nimport fileVideo from '!raw-loader!../../assets/icons/font-awesome/file-video.svg';\r\nimport fileWord from '!raw-loader!../../assets/icons/font-awesome/file-word.svg';\r\nimport file from '!raw-loader!../../assets/icons/font-awesome/file.svg';\r\nimport folderPlus from '!raw-loader!../../assets/icons/font-awesome/folder-plus.svg';\r\nimport folder from '!raw-loader!../../assets/icons/font-awesome/folder.svg';\r\nimport sitemap from '!raw-loader!../../assets/icons/font-awesome/sitemap.svg';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Dictionary } from '../../../ng-dialogs/src/app/shared/models/dictionary.model';\r\n\r\n@Injectable()\r\nexport class LoadIconsService {\r\n  private icons: Dictionary<string> = {\r\n    apple,\r\n    appleFilled,\r\n    'draft-branch': draftBranch,\r\n    file,\r\n    'file-archive': fileArchive,\r\n    'file-audio': fileAudio,\r\n    'file-code': fileCode,\r\n    'file-excel': fileExcel,\r\n    'file-image': fileImage,\r\n    'file-pdf': filePdf,\r\n    'file-powerpoint': filePowerpoint,\r\n    'file-text': fileText,\r\n    'file-video': fileVideo,\r\n    'file-word': fileWord,\r\n    folder,\r\n    'folder-plus': folderPlus,\r\n    sitemap,\r\n  };\r\n\r\n  constructor(private matIconRegistry: MatIconRegistry, private domSanitizer: DomSanitizer) { }\r\n\r\n  load() {\r\n    Object.entries(this.icons).forEach(([name, svg]) => {\r\n      this.matIconRegistry.addSvgIconLiteral(name, this.domSanitizer.bypassSecurityTrustHtml(svg));\r\n    });\r\n  }\r\n}\r\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 48 48\\\">\\r\\n<style type=\\\"text/css\\\">\\r\\n\\t.st0{display:none;}\\r\\n\\t.st1{display:inline;}\\r\\n</style>\\r\\n<g id=\\\"Layer_1\\\">\\r\\n\\t<path d=\\\"M32,4c-6,0-10,4-10,10C28,14,32,10,32,4z\\\"/>\\r\\n</g>\\r\\n<g id=\\\"Layer_3\\\" class=\\\"st0\\\">\\r\\n</g>\\r\\n<g id=\\\"Icon\\\">\\r\\n\\t<path d=\\\"M32,20c3.7,0,6,2.1,6,5.47C38,33.21,33.01,40,30.06,40c-0.25-0.04-0.93-0.35-1.38-0.56c-1.25-0.58-2.8-1.3-4.68-1.3\\r\\n\\t\\ts-3.43,0.72-4.68,1.3C18.87,39.65,18.19,39.97,18,40c-3.01,0-8-6.79-8-14.53C10,22.1,12.3,20,16,20c2.44,0,5.29,1.17,6.17,1.62\\r\\n\\t\\tL24,22.56l1.83-0.94C26.64,21.2,29.53,20,32,20 M32,16c-4,0-8,2.06-8,2.06S20,16,16,16c-6,0-10,4.01-10,9.47C6,34.74,12,44,18,44\\r\\n\\t\\tc2,0,4-1.85,6-1.85S28,44,30,44c6,0,12-9.26,12-18.53C42,20.01,38,16,32,16L32,16z\\\"/>\\r\\n</g>\\r\\n</svg>\\r\\n\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 48 48\\\">\\r\\n<style type=\\\"text/css\\\">\\r\\n\\t.st0{display:none;}\\r\\n\\t.st1{display:inline;}\\r\\n</style>\\r\\n<g id=\\\"Layer_1\\\">\\r\\n\\t<path d=\\\"M32,4c-6,0-10,4-10,10C28,14,32,10,32,4z\\\"/>\\r\\n</g>\\r\\n<g id=\\\"Layer_3\\\" class=\\\"st0\\\">\\r\\n</g>\\r\\n<g id=\\\"Icon\\\">\\r\\n\\t<path d=\\\"M32,16c-4,0-8,2.06-8,2.06S20,16,16,16c-6,0-10,4.01-10,9.47C6,34.74,12,44,18,44c2,0,4-1.85,6-1.85S28,44,30,44\\r\\n\\t\\tc6,0,12-9.26,12-18.53C42,20.01,38,16,32,16L32,16z\\\"/>\\r\\n</g>\\r\\n</svg>\\r\\n\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M384 144c0-44.2-35.8-80-80-80s-80 35.8-80 80c0 39.2 28.2 71.8 65.5 78.7-.8 17.2-5 30.4-12.7 40-17.5 21.8-53.1 25.2-90.7 28.7-28.2 2.6-57.4 5.4-80.4 16.9-3.4 1.7-6.7 3.6-9.7 5.7V158.4c36.5-7.4 64-39.7 64-78.4 0-44.2-35.8-80-80-80S0 35.8 0 80c0 38.7 27.5 71 64 78.4v195.2C27.5 361 0 393.3 0 432c0 44.2 35.8 80 80 80s80-35.8 80-80c0-36.9-24.9-67.9-58.9-77.2 5-9.6 12.3-14.6 19-18 17.5-8.8 42.5-11.2 68.9-13.7 42.6-4 86.7-8.1 112.7-40.5 12.4-15.5 19-35.5 19.8-60.7C357.3 214 384 182.1 384 144zM32 80c0-26.5 21.5-48 48-48s48 21.5 48 48-21.5 48-48 48-48-21.5-48-48zm96 352c0 26.5-21.5 48-48 48s-48-21.5-48-48c0-26.4 21.4-47.9 47.8-48h.6c26.3.2 47.6 21.7 47.6 48zm187.8-241.5L304 192c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48c0 22.4-15.4 41.2-36.2 46.5z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9zM336 480H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M128 96v32h32V96zm65.9 169.6c-1.1-5.6-6-9.6-11.8-9.6H160v-32h-32v32l-19.4 97.2c-6.5 32.5 18.3 62.8 51.4 62.8s57.9-30.3 51.4-62.8zm-33.6 124.5c-17.9 0-32.4-12.1-32.4-27s14.5-27 32.4-27 32.4 12.1 32.4 27-14.5 27-32.4 27zM128 160v32h32v-32zm64-96h-32v32h32zm177.9 33.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM256 32.5c2.8.7 5.4 2.1 7.4 4.2l83.9 83.9c2 2 3.5 4.6 4.2 7.4H256zM352 464c0 8.8-7.2 16-16 16H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h79.7v32h32V32H224v104c0 13.3 10.7 24 24 24h104zM192 192h-32v32h32zm0-64h-32v32h32z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9zM336 480H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16zm-77.6-66.6c38.5-26 61.6-69.3 61.6-115.7 0-24.7-6.5-48.9-18.9-70.1-12-20.6-29.1-37.8-49.6-50-7.1-4.2-16.3-1.9-20.6 5.2-4.2 7.1-1.9 16.3 5.2 20.6 33.1 19.7 53.7 55.8 53.7 94.3 0 36.5-18.1 70.4-48.3 90.9-6.9 4.6-8.7 14-4 20.8 2.9 4.3 7.6 6.6 12.4 6.6 3.1 0 6-.8 8.5-2.6zm-26.6-38.3c26-17.3 41.5-46.2 41.5-77.4 0-32.9-17.7-63.7-46.2-80.3-7.2-4.2-16.3-1.7-20.5 5.4-4.2 7.2-1.7 16.3 5.4 20.5 19.3 11.2 31.3 32 31.3 54.3 0 21.1-10.5 40.7-28.1 52.4-6.9 4.6-8.8 13.9-4.2 20.8 2.9 4.4 7.7 6.7 12.5 6.7 2.8.1 5.7-.7 8.3-2.4zm-27-38.2c13.7-8.5 21.8-23.1 21.8-39.2 0-17-9.3-32.5-24.2-40.6-7.3-3.9-16.4-1.2-20.3 6.1-3.9 7.3-1.2 16.4 6.1 20.3 5.2 2.8 8.5 8.3 8.5 14.2 0 5.6-2.9 10.8-7.6 13.7-7 4.4-9.2 13.6-4.8 20.7 2.8 4.6 7.7 7.1 12.8 7.1 2.5 0 5.2-.7 7.7-2.3zM138 266.7v74.7L112 322H94v-36h18l26-19.3m17.9-50.7c-2.9 0-6 1.1-8.4 3.5L104 256H76c-6.6 0-12 5.4-12 12v72c0 6.6 5.4 12 12 12h28l43.5 36.5c2.4 2.4 5.4 3.5 8.4 3.5 6.2 0 12.1-4.8 12.1-12V228c0-7.2-5.9-12-12.1-12z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.941 97.941l-83.882-83.882A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V131.882a48 48 0 0 0-14.059-33.941zm-22.627 22.628a15.89 15.89 0 0 1 4.195 7.431H256V32.491a15.88 15.88 0 0 1 7.431 4.195l83.883 83.883zM336 480H48c-8.837 0-16-7.163-16-16V48c0-8.837 7.163-16 16-16h176v104c0 13.255 10.745 24 24 24h104v304c0 8.837-7.163 16-16 16zm-161.471-67.404l-25.928-7.527a5.1 5.1 0 0 1-3.476-6.32l58.027-199.869a5.1 5.1 0 0 1 6.32-3.476l25.927 7.527a5.1 5.1 0 0 1 3.476 6.32L180.849 409.12a5.1 5.1 0 0 1-6.32 3.476zm-48.446-47.674l18.492-19.724a5.101 5.101 0 0 0-.351-7.317L105.725 304l38.498-33.881a5.1 5.1 0 0 0 .351-7.317l-18.492-19.724a5.1 5.1 0 0 0-7.209-.233L57.61 300.279a5.1 5.1 0 0 0 0 7.441l61.263 57.434a5.1 5.1 0 0 0 7.21-.232zm139.043.232l61.262-57.434a5.1 5.1 0 0 0 0-7.441l-61.262-57.434a5.1 5.1 0 0 0-7.209.233l-18.492 19.724a5.101 5.101 0 0 0 .351 7.317L278.275 304l-38.499 33.881a5.1 5.1 0 0 0-.351 7.317l18.492 19.724a5.1 5.1 0 0 0 7.209.232z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9zM336 480H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16zM211.7 308l50.5-81.8c4.8-8-.9-18.2-10.3-18.2h-4.1c-4.1 0-7.9 2.1-10.1 5.5-31 48.5-36.4 53.5-45.7 74.5-17.2-32.2-8.4-16-45.8-74.5-2.2-3.4-6-5.5-10.1-5.5H132c-9.4 0-15.1 10.3-10.2 18.2L173 308l-59.1 89.5c-5.1 8 .6 18.5 10.1 18.5h3.5c4.1 0 7.9-2.1 10.1-5.5 37.2-58 45.3-62.5 54.4-82.5 31.5 56.7 44.3 67.2 54.4 82.6 2.2 3.4 6 5.4 10 5.4h3.6c9.5 0 15.2-10.4 10.1-18.4L211.7 308z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M159 336l-39.5-39.5c-4.7-4.7-12.3-4.7-17 0l-39 39L63 448h256V304l-55.5-55.5c-4.7-4.7-12.3-4.7-17 0L159 336zm96-50.7l32 32V416H95.1l.3-67.2 15.6-15.6 48 48c20.3-20.3 77.7-77.6 96-95.9zM127 256c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm0-96c17.6 0 32 14.4 32 32s-14.4 32-32 32-32-14.4-32-32 14.4-32 32-32zm242.9-62.1L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM256 32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5zM352 464c0 8.8-7.2 16-16 16H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9zM336 480H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16zm-22-171.2c-13.5-13.3-55-9.2-73.7-6.7-21.2-12.8-35.2-30.4-45.1-56.6 4.3-18 12-47.2 6.4-64.9-4.4-28.1-39.7-24.7-44.6-6.8-5 18.3-.3 44.4 8.4 77.8-11.9 28.4-29.7 66.9-42.1 88.6-20.8 10.7-54.1 29.3-58.8 52.4-3.5 16.8 22.9 39.4 53.1 6.4 9.1-9.9 19.3-24.8 31.3-45.5 26.7-8.8 56.1-19.8 82-24 21.9 12 47.6 19.9 64.6 19.9 27.7.1 28.9-30.2 18.5-40.6zm-229.2 89c5.9-15.9 28.6-34.4 35.5-40.8-22.1 35.3-35.5 41.5-35.5 40.8zM180 175.5c8.7 0 7.8 37.5 2.1 47.6-5.2-16.3-5-47.6-2.1-47.6zm-28.4 159.3c11.3-19.8 21-43.2 28.8-63.7 9.7 17.7 22.1 31.7 35.1 41.5-24.3 4.7-45.4 15.1-63.9 22.2zm153.4-5.9s-5.8 7-43.5-9.1c41-3 47.7 6.4 43.5 9.1z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9zM336 480H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16zM204.3 208H140c-6.6 0-12 5.4-12 12v184c0 6.6 5.4 12 12 12h8c6.6 0 12-5.4 12-12v-60.4h44.3c38.7 0 67.7-27.3 67.7-69 0-38.6-23.8-66.6-67.7-66.6zm26 97.7c-7.5 7.6-17.8 11.4-31 11.4H160V233h39.7c12.9 0 23.1 3.7 30.6 11.1 15.3 15.1 15 46.5 0 61.6z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9zM336 480H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16zm-48-244v8c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm0 64v8c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm0 64v8c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M224 280.593C224 267.01 212.989 256 199.407 256H88.593C75.011 256 64 267.01 64 280.593v110.815C64 404.99 75.011 416 88.593 416h110.814C212.989 416 224 404.99 224 391.407V381l27.971 27.971a23.998 23.998 0 0 0 16.97 7.029H296c13.255 0 24-10.745 24-24V280c0-13.255-10.745-24-24-24h-27.059a24.003 24.003 0 0 0-16.97 7.029L224 291v-10.407zM192 384H96v-96h96v96zm80.255-96H288v96h-15.745L224 342.826v-13.652L272.255 288zm97.686-190.059l-83.883-83.882A47.996 47.996 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V131.882a48 48 0 0 0-14.059-33.941zM256 32.491a15.888 15.888 0 0 1 7.432 4.195l83.882 83.882a15.882 15.882 0 0 1 4.195 7.431H256V32.491zM352 464c0 8.837-7.164 16-16 16H48c-8.836 0-16-7.163-16-16V48c0-8.837 7.164-16 16-16h176v104c0 13.255 10.745 24 24 24h104v304z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9zM336 480H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16zm-53.6-246.5c-6.8 32.8-32.5 139.7-33.4 150.3-5.8-29.1-.7 1.6-41.8-150.9-1.4-5.2-6.2-8.9-11.6-8.9h-6.4c-5.4 0-10.2 3.6-11.6 8.9-38.3 142.3-37.4 140.6-39.4 154.7-4.1-23.9 2.1-2.9-34.4-154.4-1.3-5.4-6.1-9.2-11.7-9.2h-7.2c-7.8 0-13.5 7.3-11.6 14.9 9.5 38 34.5 137.4 42.2 168 1.3 5.3 6.1 9.1 11.6 9.1h17c5.4 0 10.2-3.7 11.6-8.9 34.2-127.7 33.5-123.4 36.7-142.9 6.5 31.1.2 7 36.7 142.9 1.4 5.2 6.2 8.9 11.6 8.9h14c5.5 0 13.7-3.7 15.1-9l42.8-168c1.9-7.6-3.8-15-11.6-15h-6.8c-5.7 0-10.6 4-11.8 9.5z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><path d=\\\"M194.74 96l54.63 54.63c6 6 14.14 9.37 22.63 9.37h192c8.84 0 16 7.16 16 16v224c0 8.84-7.16 16-16 16H48c-8.84 0-16-7.16-16-16V112c0-8.84 7.16-16 16-16h146.74M48 64C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48H272l-54.63-54.63c-6-6-14.14-9.37-22.63-9.37H48z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><path d=\\\"M344 272h-72v-72c0-4.42-3.58-8-8-8h-16c-4.42 0-8 3.58-8 8v72h-72c-4.42 0-8 3.58-8 8v16c0 4.42 3.58 8 8 8h72v72c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8v-72h72c4.42 0 8-3.58 8-8v-16c0-4.42-3.58-8-8-8zM194.74 96l54.63 54.63c6 6 14.14 9.37 22.63 9.37h192c8.84 0 16 7.16 16 16v224c0 8.84-7.16 16-16 16H48c-8.84 0-16-7.16-16-16V112c0-8.84 7.16-16 16-16h146.74M48 64C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48H272l-54.63-54.63c-6-6-14.14-9.37-22.63-9.37H48z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 640 512\\\"><path d=\\\"M608 352h-32v-97.59c0-16.77-13.62-30.41-30.41-30.41H336v-64h48c17.67 0 32-14.33 32-32V32c0-17.67-14.33-32-32-32H256c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h48v64H94.41C77.62 224 64 237.64 64 254.41V352H32c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32H96v-96h208v96h-32c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32h-32v-96h208v96h-32c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32zm-480 32v96H32v-96h96zm240 0v96h-96v-96h96zM256 128V32h128v96H256zm352 352h-96v-96h96v96z\\\"/></svg>\";","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Context } from '../../../ng-dialogs/src/app/shared/services/context';\r\nimport { QueryStreams } from '../../eav-material-controls/input-types/entity/entity-query/entity-query.models';\r\n\r\n@Injectable()\r\nexport class QueryService {\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext, private context: Context) { }\r\n\r\n  getAvailableEntities(queryUrl: string, includeGuid: boolean, params: string, entitiesFilter?: string[]): Observable<QueryStreams> {\r\n    // Check if any params we should auto-add are already set (like in a query which has these params set in the configuration)\r\n    const hasParams = !!params;\r\n    const paramsLower = params?.toLocaleLowerCase() ?? '';\r\n    const hasAppId = paramsLower.includes('appid=') ?? false;\r\n    const hasGuid = paramsLower.includes('includeguid=') ?? false;\r\n    const allParams =\r\n      (hasGuid ? '' : `&includeGuid=${includeGuid}`)\r\n      + (hasAppId ? '' : `&appId=${this.context.appId}`)\r\n      + (hasParams ? `&${params}` : '');\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(\r\n      this.dnnContext.$2sxc.http.apiUrl(`app/auto/query/${queryUrl}?${urlParams}`),\r\n      { Guids: entitiesFilter },\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EavService } from '.';\r\nimport { EavWindow } from '../../../ng-dialogs/src/app/shared/models/eav-window.model';\r\nimport { UrlHelpers } from '../helpers';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport enum FileTypeConstants {\r\n  CSS = '.css',\r\n  JS = '.js',\r\n}\r\n\r\nexport interface LoadFile {\r\n  path: string;\r\n  type: string;\r\n  loaded: boolean;\r\n  domEl: HTMLLinkElement | HTMLScriptElement;\r\n}\r\n\r\n@Injectable()\r\nexport class ScriptsLoaderService {\r\n  private loadedFiles: LoadFile[] = [];\r\n\r\n  constructor(private eavService: EavService) { }\r\n\r\n  /** Loads CSS and JS files in order (CSS first) and calls callback function when finished */\r\n  load(scripts: string[], callback: () => void) {\r\n    const sortedFiles = this.sortByType(scripts);\r\n    this.insertToDom(sortedFiles, callback, 0); // async, called again and again after each script is loaded\r\n  }\r\n\r\n  private sortByType(scripts: string[]): LoadFile[] {\r\n    const cssFiles: LoadFile[] = [];\r\n    const jsFiles: LoadFile[] = [];\r\n    scripts.forEach(script => {\r\n      const file: LoadFile = {\r\n        path: this.resolveSpecialPaths(script),\r\n        type: null,\r\n        loaded: false,\r\n        domEl: null\r\n      };\r\n      if (file.path.endsWith(FileTypeConstants.CSS)) {\r\n        file.type = FileTypeConstants.CSS;\r\n        cssFiles.push(file);\r\n      } else if (file.path.endsWith(FileTypeConstants.JS)) {\r\n        file.type = FileTypeConstants.JS;\r\n        jsFiles.push(file);\r\n      }\r\n    });\r\n    return cssFiles.concat(jsFiles);\r\n  }\r\n\r\n  private insertToDom(files: LoadFile[], callback: () => void, increment: number) {\r\n    const file = files[increment];\r\n    increment++;\r\n    if (!file) {\r\n      callback();\r\n      return;\r\n    }\r\n    file.path = file.path + '?sxcver=' + window.sxcVersion; // break cache\r\n\r\n    const existing = this.loadedFiles.find(loadedFile => loadedFile.path === file.path);\r\n    if (existing) {\r\n      if (existing.loaded) {\r\n        this.insertToDom(files, callback, increment);\r\n      } else {\r\n        const _listener = () => {\r\n          file.loaded = true;\r\n          this.insertToDom(files, callback, increment);\r\n          existing.domEl.removeEventListener('load', _listener);\r\n          existing.domEl.removeEventListener('error', _listener);\r\n        };\r\n        existing.domEl.addEventListener('load', _listener);\r\n        existing.domEl.addEventListener('error', _listener);\r\n      }\r\n    } else {\r\n      if (file.type === FileTypeConstants.CSS) {\r\n        file.domEl = document.createElement('link');\r\n        file.domEl.rel = 'stylesheet';\r\n        file.domEl.href = file.path;\r\n      } else if (file.type === FileTypeConstants.JS) {\r\n        file.domEl = document.createElement('script');\r\n        file.domEl.type = 'module';\r\n        file.domEl.src = file.path;\r\n      }\r\n\r\n      const _listener = () => {\r\n        file.loaded = true;\r\n        this.insertToDom(files, callback, increment);\r\n        file.domEl.removeEventListener('load', _listener);\r\n        file.domEl.removeEventListener('error', _listener);\r\n      };\r\n      file.domEl.addEventListener('load', _listener);\r\n      file.domEl.addEventListener('error', _listener);\r\n\r\n      document.querySelector('head').appendChild(file.domEl);\r\n      this.loadedFiles.push(file);\r\n    }\r\n  }\r\n\r\n  private resolveSpecialPaths(url: string) {\r\n    return url.replace(/\\[System:Path\\]/i, UrlHelpers.getUrlPrefix('system', this.eavService.eavConfig))\r\n      .replace(/\\[Zone:Path\\]/i, UrlHelpers.getUrlPrefix('zone', this.eavService.eavConfig))\r\n      .replace(/\\[App:Path\\]/i, UrlHelpers.getUrlPrefix('app', this.eavService.eavConfig));\r\n  }\r\n}\r\n","import { Dictionary } from '../../ng-dialogs/src/app/shared/models/dictionary.model';\r\nimport { EavWindow } from '../../ng-dialogs/src/app/shared/models/eav-window.model';\r\nimport { FieldLogicBase } from './field-logic-base';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport class FieldLogicManager {\r\n  private logics: Dictionary<FieldLogicBase> = {};\r\n\r\n  private constructor() { }\r\n\r\n  static singleton(): FieldLogicManager {\r\n    if (window.eavFieldLogicManager == null) {\r\n      window.eavFieldLogicManager = new FieldLogicManager();\r\n    }\r\n    return window.eavFieldLogicManager;\r\n  }\r\n\r\n  /** Add settings logic */\r\n  add(logic: FieldLogicBase): void {\r\n    this.logics[logic.name] = logic;\r\n  }\r\n\r\n  /** Get settings logic for input type */\r\n  get(inputTypeName: string): FieldLogicBase {\r\n    return this.logics[inputTypeName] ?? null;\r\n  }\r\n}\r\n","export enum BestValueModes {\r\n  Default = 'Default',\r\n  Strict = 'Strict',\r\n}\r\n\r\nexport type BestValueMode = keyof typeof BestValueModes;\r\n","import { NgZone } from '@angular/core';\r\nimport { EavWindow } from '../../../ng-dialogs/src/app/shared/models/eav-window.model';\r\nimport { ElementEventListener } from '../models';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport class DropzoneDraggingHelper {\r\n  private eventListeners: ElementEventListener[] = [];\r\n\r\n  constructor(private zone: NgZone) { }\r\n\r\n  /** Starts listening for dragover and drop events on a given element */\r\n  attach(htmlEl: HTMLElement) {\r\n    this.zone.runOutsideAngular(() => {\r\n      htmlEl.addEventListener('dragover', dragoverListener, { passive: true });\r\n      htmlEl.addEventListener('drop', dropListener, { passive: true });\r\n\r\n      this.eventListeners.push(\r\n        { element: htmlEl, type: 'dragover', listener: dragoverListener },\r\n        { element: htmlEl, type: 'drop', listener: dropListener },\r\n      );\r\n\r\n      function dragoverListener() {\r\n        clearTimeouts(window.windowBodyTimeouts); // clear timeouts from global array of timeouts which clear draggingClass from body\r\n        document.body.classList.add(window.draggingClass);\r\n      }\r\n      function dropListener() {\r\n        document.body.classList.remove(window.draggingClass);\r\n      }\r\n      function clearTimeouts(timeoutsArray: number[]) {\r\n        for (const timeout of timeoutsArray) {\r\n          clearTimeout(timeout);\r\n        }\r\n        timeoutsArray.splice(0, timeoutsArray.length);\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Removes event listeners from registered elements */\r\n  detach() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.eventListeners.forEach(({ element, type, listener }) => {\r\n        element.removeEventListener(type, listener);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { Dictionary } from '../../../ng-dialogs/src/app/shared/models/dictionary.model';\r\nimport { EavConfig } from '../models';\r\n\r\n/**\r\n * Create a new FieldMask instance and access result with resolve\r\n * @example\r\n * const mask = new FieldMask(\"[FirstName]\", formGroup.controls);\r\n * const maskValue = mask.resolve();\r\n *\r\n * @param mask a string like \"[FirstName] [LastName]\"\r\n * @param model usually FormGroup controls, passed into here\r\n * @param overloadPreCleanValues a function which will \"scrub\" the found field-values\r\n */\r\nexport class FieldMask {\r\n  private mask: string;\r\n  private model: Dictionary<AbstractControl>;\r\n  private fields: string[] = [];\r\n  private value: string;\r\n  private findFields = /\\[.*?\\]/ig;\r\n  private unwrapField = /[\\[\\]]/ig;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(\r\n    mask: string,\r\n    model: Dictionary<AbstractControl>,\r\n    private changeEvent: (newValue: string) => void,\r\n    overloadPreCleanValues: (key: string, value: string) => string,\r\n    private eavConfig?: EavConfig,\r\n  ) {\r\n    this.mask = mask;\r\n    this.model = model;\r\n    this.fields = this.fieldList();\r\n\r\n    if (overloadPreCleanValues) {\r\n      this.preClean = overloadPreCleanValues;\r\n    }\r\n\r\n    // bind auto-watch only if needed...\r\n    if (model && changeEvent) {\r\n      this.watchAllFields();\r\n    }\r\n  }\r\n\r\n  /** Resolves a mask to the final value */\r\n  resolve(): string {\r\n    let value = this.mask;\r\n    if (this.eavConfig != null && value != null) {\r\n      value = value.replace('[App:AppId]', this.eavConfig.appId);\r\n      value = value.replace('[App:ZoneId]', this.eavConfig.zoneId);\r\n    }\r\n    this.fields.forEach((e, i) => {\r\n      const replaceValue = this.model.hasOwnProperty(e) && this.model[e] && this.model[e].value ? this.model[e].value : '';\r\n      const cleaned = this.preClean(e, replaceValue);\r\n      value = value.replace('[' + e + ']', cleaned);\r\n    });\r\n\r\n    return value;\r\n  }\r\n\r\n  /** Retrieves a list of all fields used in the mask */\r\n  fieldList(): string[] {\r\n    const result: string[] = [];\r\n    if (!this.mask) { return result; }\r\n    const matches = this.mask.match(this.findFields);\r\n    if (matches) {\r\n      matches.forEach((e, i) => {\r\n        const staticName = e.replace(this.unwrapField, '');\r\n        result.push(staticName);\r\n      });\r\n    } else { // TODO: ask is this good\r\n      result.push(this.mask);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /** Default preClean function */\r\n  private preClean(key: string, value: string): string {\r\n    return value;\r\n  }\r\n\r\n  /** Change-event - will only fire if it really changes */\r\n  private onChange() {\r\n    const maybeNew = this.resolve();\r\n    if (this.value !== maybeNew) {\r\n      this.changeEvent(maybeNew);\r\n    }\r\n    this.value = maybeNew;\r\n  }\r\n\r\n  /** Add watcher and execute onChange */\r\n  private watchAllFields() {\r\n    // add a watch for each field in the field-mask\r\n    this.fields.forEach(field => {\r\n      if (!this.model[field]) { return; }\r\n      const valueSub = this.model[field].valueChanges.subscribe(value => this.onChange());\r\n      this.subscriptions.push(valueSub);\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    this.subscriptions.forEach(subscription => { subscription.unsubscribe(); });\r\n  }\r\n}\r\n","import { LocalizationHelpers } from '.';\r\nimport { FieldSettings } from '../../../edit-types';\r\nimport { InputTypeConstants } from '../../../ng-dialogs/src/app/content-type-fields/constants/input-type.constants';\r\nimport { InputType } from '../../../ng-dialogs/src/app/content-type-fields/models/input-type.model';\r\nimport { Dictionary } from '../../../ng-dialogs/src/app/shared/models/dictionary.model';\r\nimport { TranslateMenuHelpers } from '../../eav-material-controls/localization/translate-menu/translate-menu.helpers';\r\nimport { TranslationStateCore } from '../../eav-material-controls/localization/translate-menu/translate-menu.models';\r\nimport { TranslationLinkConstants } from '../constants';\r\nimport { ContentTypeSettings, TranslationState } from '../models';\r\nimport { EavContentType, EavContentTypeAttribute, EavEntity, EavHeader, EavValues } from '../models/eav';\r\n\r\nexport class FieldsSettingsHelpers {\r\n\r\n  static mergeSettings<T>(metadataItems: EavEntity[], currentLanguage: string, defaultLanguage: string): T {\r\n    if (metadataItems == null) { return {} as T; }\r\n\r\n    const merged: Dictionary = {};\r\n    // copy metadata settings which are not @All\r\n    for (const item of metadataItems) {\r\n      if (item.Type.Id === '@All') { continue; }\r\n\r\n      for (const [name, values] of Object.entries(item.Attributes)) {\r\n        const value = LocalizationHelpers.translate(currentLanguage, defaultLanguage, values, null);\r\n        merged[name] = value;\r\n      }\r\n    }\r\n\r\n    // copy @All metadata settings, overwriting previous settings\r\n    for (const item of metadataItems) {\r\n      if (item.Type.Id !== '@All') { continue; }\r\n\r\n      for (const [name, values] of Object.entries(item.Attributes)) {\r\n        const value = LocalizationHelpers.translate(currentLanguage, defaultLanguage, values, null);\r\n        // do not overwrite previous settings if @All is empty\r\n        const exists = merged[name] != null;\r\n        const emptyAll = value == null || value === '';\r\n        if (exists && emptyAll) { continue; }\r\n\r\n        merged[name] = value;\r\n      }\r\n    }\r\n\r\n    return merged as T;\r\n  }\r\n\r\n  static setDefaultContentTypeSettings(\r\n    settings: ContentTypeSettings,\r\n    contentType: EavContentType,\r\n    currentLanguage: string,\r\n    defaultLanguage: string,\r\n    itemHeader: EavHeader,\r\n  ): ContentTypeSettings {\r\n    const defaultSettings = { ...settings };\r\n    defaultSettings.Description ??= '';\r\n    defaultSettings.EditInstructions ??= '';\r\n    defaultSettings.Label ??= '';\r\n    defaultSettings.ListInstructions ??= '';\r\n    defaultSettings.Notes ??= '';\r\n    defaultSettings.Icon ??= '';\r\n    defaultSettings.Link ??= '';\r\n    defaultSettings._itemTitle = FieldsSettingsHelpers.getContentTypeTitle(contentType, currentLanguage, defaultLanguage);\r\n    defaultSettings._slotCanBeEmpty = itemHeader.Group?.SlotCanBeEmpty ?? false;\r\n    defaultSettings._slotIsEmpty = itemHeader.Group?.SlotIsEmpty ?? false;\r\n    return defaultSettings;\r\n  }\r\n\r\n  static setDefaultFieldSettings(settings: FieldSettings): FieldSettings {\r\n    const defaultSettings = { ...settings };\r\n    // update @All settings\r\n    defaultSettings.Name ??= '';\r\n    defaultSettings.Placeholder ??= '';\r\n    defaultSettings.Notes ??= '';\r\n    defaultSettings.VisibleInEditUI ??= true;\r\n    defaultSettings.Required ??= false;\r\n    defaultSettings.Disabled ??= false;\r\n    defaultSettings.DisableTranslation ??= false;\r\n    defaultSettings.Visible = defaultSettings.VisibleInEditUI;\r\n    delete defaultSettings.VisibleInEditUI;\r\n    if (defaultSettings.DefaultCollapsed != null) {\r\n      defaultSettings.Collapsed = defaultSettings.DefaultCollapsed;\r\n      delete defaultSettings.DefaultCollapsed;\r\n    }\r\n    defaultSettings.Formulas ??= [];\r\n    return defaultSettings;\r\n  }\r\n\r\n  /** Find if DisableTranslation is true in any setting and in any language */\r\n  static findDisableTranslation(\r\n    inputType: InputType,\r\n    attributeValues: EavValues<any>,\r\n    defaultLanguage: string,\r\n    metadataItems: EavEntity[],\r\n  ): boolean {\r\n    if (inputType?.DisableI18n) { return true; }\r\n    if (!LocalizationHelpers.translationExistsInDefault(attributeValues, defaultLanguage)) { return true; }\r\n    if (metadataItems == null) { return false; }\r\n\r\n    // find DisableTranslation in @All, @String, @string-default, etc...\r\n    for (const item of metadataItems) {\r\n      const eavValues = item.Attributes['DisableTranslation'];\r\n      if (eavValues == null) { continue; }\r\n\r\n      // if true in any language, it is true for all cases\r\n      for (const eavValue of eavValues.Values) {\r\n        if (eavValue.Value === true) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  static getContentTypeTitle(contentType: EavContentType, currentLanguage: string, defaultLanguage: string): string {\r\n    let label: string;\r\n    try {\r\n      // xx ContentType is a historic bug and should be fixed when JSONs are rechecked\r\n      const type = contentType.Metadata.find(metadata => metadata.Type.Name === 'ContentType' || metadata.Type.Name === 'xx ContentType');\r\n      if (type) {\r\n        label = LocalizationHelpers.getValueOrDefault(type.Attributes.Label, currentLanguage, defaultLanguage)?.Value;\r\n      }\r\n      label = label || contentType.Name;\r\n    } catch (error) {\r\n      label = contentType.Name;\r\n    }\r\n    return label;\r\n  }\r\n\r\n  static findIsLastInGroup(contentType: EavContentType, attribute: EavContentTypeAttribute): boolean {\r\n    const index = contentType.Attributes.indexOf(attribute);\r\n    if (contentType.Attributes[index + 1] == null) { return true; }\r\n\r\n    const indexOfFirstEmpty = contentType.Attributes.findIndex(a => a.InputType === InputTypeConstants.EmptyDefault);\r\n    if (index < indexOfFirstEmpty) { return false; }\r\n\r\n    if (attribute.InputType === InputTypeConstants.EmptyEnd) { return true; }\r\n\r\n    const empties = [InputTypeConstants.EmptyDefault, InputTypeConstants.EmptyEnd];\r\n    if (empties.includes(contentType.Attributes[index + 1].InputType)) { return true; }\r\n\r\n    return false;\r\n  }\r\n\r\n  static getDisabledBecauseTranslations(\r\n    attributeValues: EavValues<any>,\r\n    disableTranslation: boolean,\r\n    currentLanguage: string,\r\n    defaultLanguage: string,\r\n  ): boolean {\r\n    if (currentLanguage === defaultLanguage) { return false; }\r\n    if (!LocalizationHelpers.translationExistsInDefault(attributeValues, defaultLanguage)) { return true; }\r\n    if (disableTranslation) { return true; }\r\n    if (LocalizationHelpers.isEditableTranslationExist(attributeValues, currentLanguage, defaultLanguage)) { return false; }\r\n    if (LocalizationHelpers.isReadonlyTranslationExist(attributeValues, currentLanguage)) { return true; }\r\n    return true;\r\n  }\r\n\r\n  static getTranslationState(\r\n    attributeValues: EavValues<any>,\r\n    disableTranslation: boolean,\r\n    currentLanguage: string,\r\n    defaultLanguage: string,\r\n  ): TranslationState {\r\n    let infoLabel: string;\r\n    let infoMessage: string;\r\n\r\n    if (disableTranslation) {\r\n      infoLabel = 'LangMenu.InAllLanguages';\r\n      infoMessage = '';\r\n    } else if (!LocalizationHelpers.translationExistsInDefault(attributeValues, defaultLanguage)) {\r\n      infoLabel = 'LangMenu.MissingDefaultLangValue';\r\n      infoMessage = defaultLanguage;\r\n    } else {\r\n      const editableTranslationExists = LocalizationHelpers.isEditableTranslationExist(attributeValues, currentLanguage, defaultLanguage);\r\n      const readonlyTranslationExists = LocalizationHelpers.isReadonlyTranslationExist(attributeValues, currentLanguage);\r\n\r\n      if (editableTranslationExists || readonlyTranslationExists) {\r\n        const dimensions = LocalizationHelpers.getValueTranslation(attributeValues, currentLanguage, defaultLanguage)\r\n          .Dimensions.map(dimension => dimension.Value)\r\n          .filter(dimension => !dimension.includes(currentLanguage));\r\n\r\n        const isShared = dimensions.length > 0;\r\n        if (isShared) {\r\n          if (editableTranslationExists) {\r\n            infoLabel = 'LangMenu.In';\r\n          } else if (readonlyTranslationExists) {\r\n            infoLabel = 'LangMenu.From';\r\n          }\r\n          infoMessage = TranslateMenuHelpers.calculateSharedInfoMessage(dimensions, currentLanguage);\r\n        } else {\r\n          infoLabel = '';\r\n          infoMessage = '';\r\n        }\r\n      } else {\r\n        infoLabel = 'LangMenu.UseDefault';\r\n        infoMessage = '';\r\n      }\r\n    }\r\n    const state = this.getTranslationStateCore(attributeValues, disableTranslation, currentLanguage, defaultLanguage);\r\n    const translationState: TranslationState = {\r\n      infoLabel,\r\n      infoMessage,\r\n      language: state.language,\r\n      linkType: state.linkType,\r\n    };\r\n    return translationState;\r\n  }\r\n\r\n  private static getTranslationStateCore(\r\n    attributeValues: EavValues<any>,\r\n    disableTranslation: boolean,\r\n    currentLanguage: string,\r\n    defaultLanguage: string,\r\n  ): TranslationStateCore {\r\n    let language: string;\r\n    let linkType: string;\r\n\r\n    // Determine is control disabled or enabled and info message\r\n    if (!LocalizationHelpers.translationExistsInDefault(attributeValues, defaultLanguage)) {\r\n      language = '';\r\n      linkType = TranslationLinkConstants.MissingDefaultLangValue;\r\n    } else if (disableTranslation) {\r\n      language = '';\r\n      linkType = TranslationLinkConstants.DontTranslate;\r\n    } else if (LocalizationHelpers.isEditableTranslationExist(attributeValues, currentLanguage, defaultLanguage)) {\r\n      const editableElements = LocalizationHelpers.getValueTranslation(attributeValues, currentLanguage, defaultLanguage)\r\n        .Dimensions.filter(dimension => dimension.Value !== currentLanguage);\r\n\r\n      if (editableElements.length > 0) {\r\n        language = editableElements[0].Value;\r\n        linkType = TranslationLinkConstants.LinkReadWrite;\r\n      } else {\r\n        language = '';\r\n        linkType = TranslationLinkConstants.Translate;\r\n      }\r\n    } else if (LocalizationHelpers.isReadonlyTranslationExist(attributeValues, currentLanguage)) {\r\n      const readOnlyElements = LocalizationHelpers.getValueTranslation(attributeValues, currentLanguage, defaultLanguage)\r\n        .Dimensions.filter(dimension => dimension.Value !== currentLanguage);\r\n\r\n      language = readOnlyElements[0].Value;\r\n      linkType = TranslationLinkConstants.LinkReadOnly;\r\n    } else {\r\n      language = '';\r\n      linkType = TranslationLinkConstants.DontTranslate;\r\n    }\r\n\r\n    const translationState: TranslationStateCore = {\r\n      language,\r\n      linkType,\r\n    };\r\n    return translationState;\r\n  }\r\n}\r\n","import { InputFieldHelpers, LocalizationHelpers } from '.';\r\nimport { FieldSettings, FieldValue } from '../../../edit-types';\r\nimport { InputType } from '../../../ng-dialogs/src/app/content-type-fields/models/input-type.model';\r\nimport { FormValues } from '../../eav-item-dialog/item-edit-form/item-edit-form.models';\r\nimport { DesignerSnippet, FieldOption } from '../../eav-item-dialog/multi-item-edit-form-debug/formula-designer/formula-designer.models';\r\n// tslint:disable-next-line:max-line-length\r\nimport { FormulaCacheItem, FormulaFunction, FormulaProps, FormulaPropsV1, FormulaTargets, FormulaV1Data, FormulaV1ExperimentalEntity, FormulaVersion, FormulaVersions, Language, SettingsFormulaPrefix } from '../models';\r\nimport { EavHeader } from '../models/eav';\r\nimport { EavService, FieldsSettingsService } from '../services';\r\nimport { ItemService } from '../store/ngrx-data';\r\n\r\nexport class FormulaHelpers {\r\n\r\n  static findFormulaVersion(formula: string): FormulaVersion {\r\n    const cleanFormula = formula.trim();\r\n    const typePart = cleanFormula.substring(0, cleanFormula.indexOf('(')).trim();\r\n\r\n    switch (typePart) {\r\n      case FormulaVersions.V1:\r\n        return FormulaVersions.V1;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  static buildFormulaFunction(formula: string): FormulaFunction {\r\n    const version = this.findFormulaVersion(formula);\r\n    let cleanFormula = formula.trim();\r\n\r\n    switch (version) {\r\n      case FormulaVersions.V1:\r\n        cleanFormula = `function ${cleanFormula.substring(FormulaVersions.V1.length).trim()}`;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    const fn: FormulaFunction = new Function(`return ${cleanFormula}`)();\r\n    return fn;\r\n  }\r\n\r\n  static buildFormulaProps(\r\n    formula: FormulaCacheItem,\r\n    entityId: number,\r\n    inputType: InputType,\r\n    settings: FieldSettings,\r\n    previousSettings: FieldSettings,\r\n    formValues: FormValues,\r\n    initialFormValues: FormValues,\r\n    currentLanguage: string,\r\n    defaultLanguage: string,\r\n    languages: Language[],\r\n    itemHeader: EavHeader,\r\n    debugEnabled: boolean,\r\n    itemService: ItemService,\r\n    eavService: EavService,\r\n    fieldsSettingsService: FieldsSettingsService,\r\n  ): FormulaProps {\r\n\r\n    switch (formula.version) {\r\n      case FormulaVersions.V1:\r\n        const data: FormulaV1Data = {\r\n          ...formValues,\r\n          get default() { return undefined as FieldValue; },\r\n          get initial() { return undefined as FieldValue; },\r\n          get prefill() { return undefined as FieldValue; },\r\n          get value() { return undefined as FieldValue; },\r\n        };\r\n        Object.defineProperties(data, {\r\n          default: {\r\n            get(): FieldValue {\r\n              if (formula.target === FormulaTargets.Value) {\r\n                return InputFieldHelpers.parseDefaultValue(formula.fieldName, inputType, settings);\r\n              }\r\n              if (formula.target.startsWith(SettingsFormulaPrefix)) {\r\n                const settingName = formula.target.substring(SettingsFormulaPrefix.length);\r\n                return (settings as Record<string, any>)[settingName];\r\n              }\r\n            },\r\n          },\r\n          initial: {\r\n            get(): FieldValue {\r\n              if (formula.target !== FormulaTargets.Value) { return; }\r\n              return initialFormValues[formula.fieldName];\r\n            },\r\n          },\r\n          prefill: {\r\n            get(): FieldValue {\r\n              if (formula.target !== FormulaTargets.Value) { return; }\r\n              return InputFieldHelpers.parseDefaultValue(formula.fieldName, inputType, settings, itemHeader, true);\r\n            },\r\n          },\r\n          value: {\r\n            get(): FieldValue {\r\n              if (formula.target === FormulaTargets.Value) {\r\n                return formValues[formula.fieldName];\r\n              }\r\n              if (formula.target.startsWith(SettingsFormulaPrefix)) {\r\n                const settingName = formula.target.substring(SettingsFormulaPrefix.length);\r\n                return (previousSettings as Record<string, any>)[settingName];\r\n              }\r\n            },\r\n          },\r\n        });\r\n        const propsV1: FormulaPropsV1 = {\r\n          data,\r\n          context: {\r\n            cache: formula.cache,\r\n            culture: {\r\n              code: currentLanguage,\r\n              name: languages.find(l => l.key === currentLanguage)?.name,\r\n            },\r\n            debug: debugEnabled,\r\n            target: {\r\n              entity: {\r\n                guid: formula.entityGuid,\r\n                id: entityId,\r\n              },\r\n              name: formula.target === FormulaTargets.Value\r\n                ? formula.fieldName\r\n                : formula.target.substring(formula.target.lastIndexOf('.') + 1),\r\n              type: formula.target === FormulaTargets.Value\r\n                ? formula.target\r\n                : formula.target.substring(0, formula.target.lastIndexOf('.')),\r\n            },\r\n          },\r\n          experimental: {\r\n            getEntities(): FormulaV1ExperimentalEntity[] {\r\n              const v1Entities = itemService.getItems(eavService.eavConfig.itemGuids).map(item => {\r\n                const v1Entity: FormulaV1ExperimentalEntity = {\r\n                  guid: item.Entity.Guid,\r\n                  id: item.Entity.Id,\r\n                  type: item.Entity.Type,\r\n                };\r\n                return v1Entity;\r\n              });\r\n              return v1Entities;\r\n            },\r\n            getSettings(fieldName: string): FieldSettings {\r\n              return fieldsSettingsService.getFieldSettings(fieldName);\r\n            },\r\n            getValues(entityGuid: string): FormValues {\r\n              const item = itemService.getItem(entityGuid);\r\n              const values: FormValues = {};\r\n              for (const [fieldName, fieldValues] of Object.entries(item.Entity.Attributes)) {\r\n                values[fieldName] = LocalizationHelpers.translate(currentLanguage, defaultLanguage, fieldValues, null);\r\n              }\r\n              return values;\r\n            },\r\n          }\r\n        };\r\n        return propsV1;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  static buildDesignerSnippets(formula: FormulaCacheItem, fieldOptions: FieldOption[]): DesignerSnippet[] {\r\n    switch (formula.version) {\r\n      case FormulaVersions.V1:\r\n        const valueSnippet: DesignerSnippet = {\r\n          code: 'data.value',\r\n          label: 'data.value',\r\n        };\r\n\r\n        const defaultSnippet: DesignerSnippet = {\r\n          code: 'data.default',\r\n          label: 'data.default',\r\n        };\r\n\r\n        const prefillSnippet: DesignerSnippet = {\r\n          code: 'data.prefill',\r\n          label: 'data.prefill',\r\n        };\r\n\r\n        const fieldSnippets = fieldOptions.map(field => {\r\n          const code = `data.${field.fieldName}`;\r\n          const fieldSnippet: DesignerSnippet = {\r\n            code,\r\n            label: code,\r\n          };\r\n          return fieldSnippet;\r\n        });\r\n\r\n        return [valueSnippet, defaultSnippet, prefillSnippet, ...fieldSnippets];\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n}\r\n","import { Dictionary } from '../../../ng-dialogs/src/app/shared/models/dictionary.model';\r\nimport { FormValues } from '../../eav-item-dialog/item-edit-form/item-edit-form.models';\r\n\r\nexport class GeneralHelpers {\r\n\r\n  static objectsEqual<T>(x: T, y: T): boolean {\r\n    if (x == null || y == null) { return x === y; }\r\n\r\n    const obj1 = x as Dictionary;\r\n    const obj2 = y as Dictionary;\r\n\r\n    const keys1 = Object.keys(obj1);\r\n    const keys2 = Object.keys(obj2);\r\n    if (keys1.length !== keys2.length) { return false; }\r\n\r\n    const equal = keys1.every(key1 => {\r\n      if (!obj2.hasOwnProperty(key1)) { return false; }\r\n\r\n      return obj1[key1] === obj2[key1];\r\n    });\r\n\r\n    return equal;\r\n  }\r\n\r\n  static arraysEqual<T>(x: T[], y: T[]): boolean {\r\n    if (x == null || y == null) { return x === y; }\r\n\r\n    if (x.length !== y.length) { return false; }\r\n\r\n    const equal = x.every((item, index) => {\r\n      return x[index] === y[index];\r\n    });\r\n\r\n    return equal;\r\n  }\r\n\r\n  /** Searches where newValues has values different from oldValues */\r\n  static getFormChanges(oldValues: FormValues, newValues: FormValues): FormValues {\r\n    const changes: FormValues = {};\r\n    for (const key of Object.keys(newValues)) {\r\n      const newValue = newValues[key];\r\n      const oldValue = oldValues[key];\r\n      if (newValue === oldValue) { continue; }\r\n      if (typeof newValue === 'number' && typeof oldValue === 'number' && isNaN(newValue) && isNaN(oldValue)) { continue; }\r\n      if (Array.isArray(newValue) && Array.isArray(oldValue) && GeneralHelpers.arraysEqual(newValue, oldValue)) { continue; }\r\n\r\n      changes[key] = newValue;\r\n    }\r\n    return Object.keys(changes).length === 0 ? undefined : changes;\r\n  }\r\n\r\n  static toggleInArray<T>(item: T, array: T[]): void {\r\n    const index = array.indexOf(item);\r\n    if (index === -1) {\r\n      array.push(item);\r\n    } else {\r\n      array.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n","import { FieldSettings, FieldValue, InputTypeName } from '../../../edit-types';\r\nimport { InputTypeConstants } from '../../../ng-dialogs/src/app/content-type-fields/constants/input-type.constants';\r\nimport { InputType } from '../../../ng-dialogs/src/app/content-type-fields/models/input-type.model';\r\nimport { WrappersConstants } from '../constants/wrappers.constants';\r\nimport { CalculatedInputType } from '../models';\r\nimport { EavContentTypeAttribute, EavHeader, EavItem } from '../models/eav';\r\nimport { EavService } from '../services';\r\n\r\nexport class InputFieldHelpers {\r\n\r\n  static getContentTypeId(item: EavItem): string {\r\n    return item.Entity.Type?.Id ?? item.Header.ContentTypeName;\r\n  }\r\n\r\n  static getInputTypeNames(attributes: EavContentTypeAttribute[], inputTypes: InputType[]): InputTypeName[] {\r\n    return attributes.map(attribute => {\r\n      const calculatedInputType = this.calculateInputType(attribute, inputTypes);\r\n      const inputTypeName: InputTypeName = {\r\n        name: attribute.Name,\r\n        inputType: calculatedInputType.inputType,\r\n      };\r\n      return inputTypeName;\r\n    });\r\n  }\r\n\r\n  static calculateInputType(attribute: EavContentTypeAttribute, inputTypes: InputType[]): CalculatedInputType {\r\n    const inputType = inputTypes.find(i => i.Type === attribute.InputType);\r\n    const calculated: CalculatedInputType = {\r\n      inputType: attribute.InputType,\r\n      isExternal: inputType ? !!inputType.AngularAssets : false,\r\n    };\r\n    return calculated;\r\n  }\r\n\r\n  static getWrappers(settings: FieldSettings, calculatedInputType: CalculatedInputType) {\r\n    const inputType = calculatedInputType.inputType;\r\n    const isExternal = calculatedInputType.isExternal;\r\n\r\n    // empty inputtype wrappers\r\n    if (inputType === InputTypeConstants.EmptyDefault) { return [WrappersConstants.CollapsibleWrapper]; }\r\n\r\n    // default wrappers\r\n    const wrappers = [WrappersConstants.HiddenWrapper];\r\n\r\n    // entity-default wrappers\r\n    const isEntityType = (inputType === InputTypeConstants.EntityDefault)\r\n      || (inputType === InputTypeConstants.StringDropdownQuery)\r\n      || (inputType === InputTypeConstants.EntityQuery)\r\n      || (inputType === InputTypeConstants.EntityContentBlocks);\r\n\r\n    if (isEntityType) {\r\n      wrappers.push(WrappersConstants.LocalizationWrapper);\r\n      const allowMultiValue = settings.AllowMultiValue ?? false;\r\n      if (allowMultiValue || inputType === InputTypeConstants.EntityContentBlocks) {\r\n        wrappers.push(WrappersConstants.EntityExpandableWrapper);\r\n      }\r\n    }\r\n\r\n    if (isExternal) {\r\n      wrappers.push(\r\n        WrappersConstants.DropzoneWrapper,\r\n        WrappersConstants.LocalizationWrapper,\r\n        WrappersConstants.ExpandableWrapper,\r\n        WrappersConstants.AdamAttachWrapper,\r\n      );\r\n    }\r\n\r\n    return wrappers;\r\n  }\r\n\r\n  /** Include itemHeader if you need data from prefill, and set onlyPrefill if you only need parsed prefill */\r\n  static parseDefaultValue(\r\n    attributeKey: string,\r\n    inputType: InputType,\r\n    settings: FieldSettings,\r\n    itemHeader?: EavHeader,\r\n    onlyPrefill?: boolean,\r\n  ): FieldValue {\r\n    if (onlyPrefill && itemHeader?.Prefill?.[attributeKey] === undefined) { return; }\r\n\r\n    let defaultValue = settings.DefaultValue;\r\n\r\n    if (itemHeader?.Prefill?.[attributeKey]) {\r\n      defaultValue = itemHeader.Prefill[attributeKey];\r\n    }\r\n\r\n    switch (inputType?.Type) {\r\n      case InputTypeConstants.BooleanDefault:\r\n        return defaultValue != null\r\n          ? defaultValue.toLowerCase() === 'true'\r\n          : false;\r\n      case InputTypeConstants.BooleanTristate:\r\n        return defaultValue != null && defaultValue !== ''\r\n          ? defaultValue.toLowerCase() === 'true'\r\n          : null;\r\n      case InputTypeConstants.DatetimeDefault:\r\n        return defaultValue != null && defaultValue !== ''\r\n          ? new Date(defaultValue).toJSON()\r\n          : null;\r\n      case InputTypeConstants.NumberDefault:\r\n        return defaultValue != null && defaultValue !== ''\r\n          ? !isNaN(Number(defaultValue)) ? Number(defaultValue) : null\r\n          : null;\r\n      case InputTypeConstants.EntityDefault:\r\n      case InputTypeConstants.EntityQuery:\r\n      case InputTypeConstants.EntityContentBlocks:\r\n        if (defaultValue == null || defaultValue === '') { return []; }\r\n        // string has { } characters, we must switch them to quotes\r\n        if (defaultValue.includes('{')) {\r\n          defaultValue = defaultValue.replace(/[\\{\\}]/g, '\\\"');\r\n        }\r\n        // list but no array, add brackets\r\n        if (defaultValue.includes(',') && !defaultValue.includes('[')) {\r\n          const guids = defaultValue.split(',').map(guid => guid.trim());\r\n          defaultValue = JSON.stringify(guids);\r\n        }\r\n        return defaultValue.startsWith('[') // an array with guid strings\r\n          ? JSON.parse(defaultValue) // if it's a string containing an array\r\n          : [defaultValue.replace(/\"/g, '')]; // just a guid string, but might have quotes\r\n      default:\r\n        return defaultValue ?? '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Entity fields for empty items are prefilled on the backend with []\r\n   * so I can never know if entity field is brand new, or just emptied out by the user\r\n   */\r\n  static isValueEmpty(value: FieldValue, eavService: EavService) {\r\n    const emptyEntityField = Array.isArray(value) && value.length === 0 && eavService.eavConfig.createMode;\r\n    return value === undefined || emptyEntityField;\r\n  }\r\n}\r\n","import { FieldValue } from '../../../edit-types';\r\nimport { consoleLogAngular } from '../../../ng-dialogs/src/app/shared/helpers/console-log-angular.helper';\r\nimport { FormValues } from '../../eav-item-dialog/item-edit-form/item-edit-form.models';\r\nimport { BestValueMode, BestValueModes } from '../constants/localization.constants';\r\nimport { EavDimension, EavEntityAttributes, EavValue, EavValues } from '../models/eav';\r\n\r\nexport class LocalizationHelpers {\r\n  /**\r\n   * Get translated value for currentLanguage,\r\n   * if not exist return default language translation,\r\n   * if default language also not exist return first value\r\n   */\r\n  static translate(currentLanguage: string, defaultLanguage: string, attributeValues: EavValues<any>, defaultValue: any): any {\r\n    if (!attributeValues) { return defaultValue; }\r\n\r\n    const translation: EavValue<any> = this.getValueTranslation(attributeValues, currentLanguage, defaultLanguage);\r\n    if (translation) { return translation.Value; }\r\n\r\n    const translationDefault: EavValue<any> = this.getValueTranslation(attributeValues, defaultLanguage, defaultLanguage);\r\n    if (translationDefault) { return translationDefault.Value; }\r\n\r\n    // TODO: maybe return value with *\r\n    return attributeValues.Values[0]?.Value ?? null;\r\n  }\r\n\r\n  static getValueOrDefault(allAttributesValues: EavValues<any>, languageKey: string, defaultLanguage: string): EavValue<any> {\r\n    let translation = LocalizationHelpers.getValueTranslation(allAttributesValues, languageKey, defaultLanguage);\r\n    if (translation == null) {\r\n      translation = LocalizationHelpers.getValueTranslation(allAttributesValues, defaultLanguage, defaultLanguage);\r\n    }\r\n    return translation;\r\n  }\r\n\r\n  static getValueTranslation(allAttributesValues: EavValues<any>, languageKey: string, defaultLanguage: string): EavValue<any> {\r\n    return allAttributesValues.Values.find(eavValue =>\r\n      eavValue.Dimensions.find(d => d.Value === languageKey\r\n        || d.Value === `~${languageKey}`\r\n        || (languageKey === defaultLanguage && d.Value === '*')) !== undefined);\r\n  }\r\n\r\n  static isEditableOrReadonlyTranslationExist(allAttributesValues: EavValues<any>, languageKey: string, defaultLanguage: string): boolean {\r\n    return allAttributesValues ? allAttributesValues.Values.filter(c =>\r\n      c.Dimensions.find(d =>\r\n        d.Value === languageKey\r\n        || d.Value === `~${languageKey}`\r\n        || (languageKey === defaultLanguage && d.Value === '*'))).length > 0 : false;\r\n  }\r\n\r\n  /** Language is editable if langageKey exist or on default language * exist */\r\n  static isEditableTranslationExist(allAttributesValues: EavValues<any>, languageKey: string, defaultLanguage: string): boolean {\r\n    return allAttributesValues ? allAttributesValues.Values.filter(eavValue =>\r\n      eavValue.Dimensions.find(d => (d.Value === languageKey)\r\n        || (languageKey === defaultLanguage && d.Value === '*'))).length > 0 : false;\r\n  }\r\n\r\n  static isReadonlyTranslationExist(allAttributesValues: EavValues<any>, languageKey: string): boolean {\r\n    return allAttributesValues ? allAttributesValues.Values.filter(eavValue =>\r\n      eavValue.Dimensions.find(d => d.Value === `~${languageKey}`)).length > 0 : false;\r\n  }\r\n\r\n  static translationExistsInDefault(allAttributesValues: EavValues<any>, defaultLanguage: string): boolean {\r\n    return allAttributesValues ? allAttributesValues.Values.filter(eavValue =>\r\n      eavValue.Dimensions.find(d => d.Value === defaultLanguage || d.Value === '*')).length > 0 : false;\r\n  }\r\n\r\n  /** Copy attributes from item */\r\n  private static updateAttribute(\r\n    oldAttributes: EavEntityAttributes,\r\n    attributeKey: string,\r\n    attribute: EavValues<any>,\r\n  ): EavEntityAttributes {\r\n    const newAttributes: EavEntityAttributes = {};\r\n    if (Object.keys(oldAttributes).length === 0) {\r\n      const attributeCopy: EavValues<any> = { ...attribute };\r\n      newAttributes[attributeKey] = attributeCopy;\r\n      return newAttributes;\r\n    }\r\n\r\n    for (const key of Object.keys(oldAttributes)) {\r\n      if (key === attributeKey) {\r\n        const attributeCopy: EavValues<any> = { ...attribute };\r\n        newAttributes[key] = attributeCopy;\r\n      } else {\r\n        const attributeCopy: EavValues<any> = { ...oldAttributes[key] };\r\n        newAttributes[key] = attributeCopy;\r\n      }\r\n    }\r\n\r\n    if (oldAttributes[attributeKey] == null) {\r\n      const attributeCopy: EavValues<any> = { ...attribute };\r\n      newAttributes[attributeKey] = attributeCopy;\r\n    }\r\n    return newAttributes;\r\n  }\r\n\r\n  /** Update values for languageKey */\r\n  static updateAttributesValues(\r\n    allAttributes: EavEntityAttributes,\r\n    updateValues: FormValues,\r\n    languageKey: string,\r\n    defaultLanguage: string,\r\n  ): EavEntityAttributes {\r\n    // copy attributes from item\r\n    const eavAttributes: EavEntityAttributes = {};\r\n    Object.keys(allAttributes).forEach(attributeKey => {\r\n      const newItemValue = updateValues[attributeKey];\r\n      // if new value exist update attribute for languageKey\r\n      // if (newItemValue !== null && newItemValue !== undefined) {\r\n      if (newItemValue !== undefined) {\r\n        const valueWithLanguageExist = this.isEditableOrReadonlyTranslationExist(\r\n          allAttributes[attributeKey], languageKey, defaultLanguage);\r\n\r\n        // if valueWithLanguageExist update value for languageKey\r\n        if (valueWithLanguageExist) {\r\n          const newValues: EavValues<any> = {\r\n            ...allAttributes[attributeKey], Values: allAttributes[attributeKey].Values.map(eavValue => {\r\n              const newValue: EavValue<any> = eavValue.Dimensions.find(d => d.Value === languageKey\r\n                || d.Value === `~${languageKey}`\r\n                || (languageKey === defaultLanguage && d.Value === '*'))\r\n                // Update value for languageKey\r\n                ? {\r\n                  ...eavValue,\r\n                  Value: newItemValue,\r\n                }\r\n                : eavValue;\r\n              return newValue;\r\n            })\r\n          };\r\n          eavAttributes[attributeKey] = newValues;\r\n        } else { // else add new value with dimension languageKey\r\n          consoleLogAngular('saveAttributeValues add values ', newItemValue);\r\n          const newEavValue = EavValue.create(newItemValue, [EavDimension.create(languageKey)]);\r\n          const newAttribute: EavValues<any> = {\r\n            ...allAttributes[attributeKey],\r\n            Values: [...allAttributes[attributeKey].Values, newEavValue]\r\n          };\r\n          eavAttributes[attributeKey] = newAttribute;\r\n        }\r\n      } else { // else copy item attributes\r\n        const attributeCopy: EavValues<any> = { ...allAttributes[attributeKey] };\r\n        eavAttributes[attributeKey] = attributeCopy;\r\n      }\r\n    });\r\n    return eavAttributes;\r\n  }\r\n\r\n  /** update attribute value, and change language readonly state if needed */\r\n  static updateAttributeValue(\r\n    allAttributes: EavEntityAttributes,\r\n    attributeKey: string,\r\n    updateValue: FieldValue,\r\n    existingLanguageKey: string,\r\n    defaultLanguage: string,\r\n    isReadOnly: boolean,\r\n  ): EavEntityAttributes {\r\n    // copy attributes from item\r\n    let eavAttributes: EavEntityAttributes = {};\r\n    let newLanguageValue = existingLanguageKey;\r\n\r\n    if (isReadOnly) {\r\n      newLanguageValue = `~${existingLanguageKey}`;\r\n    }\r\n\r\n    const attribute: EavValues<any> = {\r\n      ...allAttributes[attributeKey], Values: allAttributes[attributeKey].Values.map(eavValue => {\r\n        const newValue: EavValue<any> = eavValue.Dimensions.find(d => d.Value === existingLanguageKey\r\n          || d.Value === `~${existingLanguageKey}`\r\n          || (existingLanguageKey === defaultLanguage && d.Value === '*')\r\n        )\r\n          // Update value and dimension\r\n          ? {\r\n            ...eavValue,\r\n            // update value\r\n            Value: updateValue,\r\n            // update languageKey with newLanguageValue\r\n            Dimensions: eavValue.Dimensions.map(dimension => {\r\n              const newDimensions: EavDimension = (dimension.Value === existingLanguageKey\r\n                || dimension.Value === `~${existingLanguageKey}`\r\n                || (existingLanguageKey === defaultLanguage && dimension.Value === '*'))\r\n                ? { Value: newLanguageValue }\r\n                : dimension;\r\n              return newDimensions;\r\n            })\r\n          }\r\n          : eavValue;\r\n        return newValue;\r\n      })\r\n    };\r\n    eavAttributes = this.updateAttribute(allAttributes, attributeKey, attribute);\r\n    return eavAttributes;\r\n  }\r\n\r\n  static addAttributeValue(\r\n    allAttributes: EavEntityAttributes,\r\n    attributeValue: EavValue<any>,\r\n    attributeKey: string,\r\n    attributeType: string,\r\n  ): EavEntityAttributes {\r\n    // copy attributes from item\r\n    let eavAttributes: EavEntityAttributes = {};\r\n    const attribute: EavValues<any> =\r\n      Object.keys(allAttributes).length === 0\r\n        || !allAttributes[attributeKey] ?\r\n        {\r\n          // Add attribute\r\n          ...allAttributes[attributeKey], Values: [attributeValue], Type: attributeType\r\n        }\r\n        : {\r\n          // Add attribute\r\n          ...allAttributes[attributeKey], Values: [...allAttributes[attributeKey].Values, attributeValue], Type: attributeType\r\n        };\r\n    eavAttributes = this.updateAttribute(allAttributes, attributeKey, attribute);\r\n    return eavAttributes;\r\n  }\r\n\r\n  /** Add dimension to value with existing dimension */\r\n  static addAttributeDimension(\r\n    allAttributes: EavEntityAttributes,\r\n    attributeKey: string,\r\n    newDimensionValue: string,\r\n    existingDimensionValue: string,\r\n    defaultLanguage: string,\r\n    isReadOnly: boolean,\r\n  ): EavEntityAttributes {\r\n    // copy attributes from item\r\n    let eavAttributes: EavEntityAttributes = {};\r\n    let newLanguageValue = newDimensionValue;\r\n\r\n    if (isReadOnly) {\r\n      newLanguageValue = `~${newDimensionValue}`;\r\n    }\r\n\r\n    const attribute: EavValues<any> = {\r\n      ...allAttributes[attributeKey], Values: allAttributes[attributeKey].Values.map(eavValue => {\r\n        const newValue: EavValue<any> = eavValue.Dimensions.find(d => d.Value === existingDimensionValue\r\n          || (existingDimensionValue === defaultLanguage && d.Value === '*'))\r\n          // Update dimension for current language\r\n          ? {\r\n            ...eavValue,\r\n            // if languageKey already exist\r\n            Dimensions: eavValue.Dimensions.concat({ Value: newLanguageValue })\r\n          }\r\n          : eavValue;\r\n        return newValue;\r\n      })\r\n    };\r\n    eavAttributes = this.updateAttribute(allAttributes, attributeKey, attribute);\r\n    return eavAttributes;\r\n  }\r\n\r\n  /** Removes dimension (language) from attribute. If multiple dimensions exist, delete only dimension, else delete value and dimension */\r\n  static removeAttributeDimension(attributes: EavEntityAttributes, attributeKey: string, language: string): EavEntityAttributes {\r\n    const oldAttributes = attributes;\r\n    const validDimensions = [language, `~${language}`];\r\n\r\n    const value = oldAttributes[attributeKey].Values.find(eavValue => {\r\n      const dimensionExists = eavValue.Dimensions.some(dimension => validDimensions.includes(dimension.Value));\r\n      return dimensionExists;\r\n    });\r\n\r\n    // given dimension doesn't exist for this attribute so no change is needed\r\n    if (!value) {\r\n      const attributesCopy: EavEntityAttributes = { ...oldAttributes };\r\n      return attributesCopy;\r\n    }\r\n\r\n    let newAttribute: EavValues<any>;\r\n    if (value.Dimensions.length > 1) {\r\n      // if multiple dimensions exist delete only dimension\r\n      newAttribute = {\r\n        ...oldAttributes[attributeKey],\r\n        Values: oldAttributes[attributeKey].Values.map(eavValue => {\r\n          const dimensionExists = eavValue.Dimensions.some(dimension => validDimensions.includes(dimension.Value));\r\n          if (!dimensionExists) { return eavValue; }\r\n\r\n          const newValue: EavValue<any> = {\r\n            ...eavValue,\r\n            Dimensions: eavValue.Dimensions.filter(dimension => !validDimensions.includes(dimension.Value)),\r\n          };\r\n          return newValue;\r\n        })\r\n      };\r\n    } else if (value.Dimensions.length === 1) {\r\n      // if only one dimension exists delete value and dimension\r\n      newAttribute = {\r\n        ...oldAttributes[attributeKey],\r\n        Values: oldAttributes[attributeKey].Values.filter(eavValue => {\r\n          const dimensionExists = eavValue.Dimensions.some(dimension => validDimensions.includes(dimension.Value));\r\n          return !dimensionExists;\r\n        })\r\n      };\r\n    }\r\n\r\n    const newAttributes = this.updateAttribute(oldAttributes, attributeKey, newAttribute);\r\n    return newAttributes;\r\n  }\r\n\r\n  /**\r\n   * Default mode priority:\r\n   * 1. value for current language\r\n   * 2. value for all languages\r\n   * 3. value for default language\r\n   * 4. first value\r\n   *\r\n   * Strict mode priority:\r\n   * 1. value for current language\r\n   * 2. value for all languages\r\n   * 3. value for default language\r\n   *\r\n   * Very strict mode priority:\r\n   * 1. value for current language\r\n   * 2. value for all languages\r\n   */\r\n  static getBestValue(eavValues: EavValues<any>, currentLanguage: string, defaultLanguage: string, mode: BestValueMode): FieldValue {\r\n    if (eavValues == null) { return; }\r\n\r\n    let bestDimensions = [currentLanguage, `~${currentLanguage}`];\r\n    let bestValue = this.findValueForDimensions(eavValues, bestDimensions);\r\n    if (bestValue !== undefined) { return bestValue; }\r\n\r\n    bestDimensions = ['*'];\r\n    bestValue = this.findValueForDimensions(eavValues, bestDimensions);\r\n    if (bestValue !== undefined) { return bestValue; }\r\n\r\n    if (mode === BestValueModes.Strict) { return; }\r\n\r\n    bestDimensions = [defaultLanguage, `~${defaultLanguage}`];\r\n    bestValue = this.findValueForDimensions(eavValues, bestDimensions);\r\n    if (bestValue !== undefined) { return bestValue; }\r\n\r\n    bestValue = eavValues.Values[0]?.Value;\r\n    return bestValue;\r\n  }\r\n\r\n  private static findValueForDimensions(eavValues: EavValues<any>, dimensions: string[]): FieldValue {\r\n    const value = eavValues.Values.find(\r\n      eavValue => !!eavValue.Dimensions.find(dimension => dimensions.includes(dimension.Value)),\r\n    )?.Value;\r\n    return value;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"templateVars$ | async as data\">\r\n\r\n  <h3 class=\"page-picker-title\">\r\n    {{ 'Fields.Hyperlink.PagePicker.Title' | translate }}\r\n  </h3>\r\n\r\n  <div class=\"page-search-box\">\r\n    <mat-form-field appearance=\"standard\" color=\"accent\">\r\n      <mat-label>Search</mat-label>\r\n      <input matInput [ngModel]=\"data.filterText\" (ngModelChange)=\"setFilter($event)\">\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"page-tree-box\">\r\n    <ul *ngIf=\"!data.filterText\">\r\n      <ng-container *ngFor=\"let page of data.tree\">\r\n        <ng-container *ngTemplateOutlet=\"pageAndChildren; context: {page: page}\"></ng-container>\r\n      </ng-container>\r\n    </ul>\r\n\r\n    <ul *ngIf=\"data.filterText\">\r\n      <li *ngIf=\"data.filteredSearch.length === 0\">\r\n        <div class=\"page-row\">\r\n          <div class=\"no-toggle\"></div>\r\n          <div>No results</div>\r\n        </div>\r\n      </li>\r\n      <li *ngFor=\"let page of data.filteredSearch\">\r\n        <div class=\"page-row\">\r\n          <div class=\"no-toggle\"></div>\r\n          <div class=\"page-label\" [ngClass]=\"page.id === selected ? 'selected' : ''\" (click)=\"select(page.id)\">\r\n            <mat-icon svgIcon=\"file\" class=\"page-icon\"></mat-icon>\r\n            <span class=\"page-path\" *ngIf=\"page.path\">{{ page.path }}&nbsp;>&nbsp;</span>\r\n            <span>{{ page.name }}</span>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <ng-template #pageAndChildren let-page=\"page\">\r\n    <li>\r\n      <div class=\"page-row\">\r\n        <div class=\"no-toggle\" *ngIf=\"page.children.length === 0\"></div>\r\n        <mat-icon class=\"page-toggle\" *ngIf=\"page.children.length > 0\" (click)=\"toggle(page.id)\">\r\n          {{ toggled.includes(page.id) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n        </mat-icon>\r\n        <div class=\"page-label\" [ngClass]=\"page.id === selected ? 'selected' : ''\" (click)=\"select(page.id)\">\r\n          <mat-icon svgIcon=\"file\" class=\"page-icon\"></mat-icon>\r\n          <span>{{ page.name }}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <ul *ngIf=\"page.children.length > 0 && toggled.includes(page.id)\">\r\n        <ng-container *ngFor=\"let child of page.children\">\r\n          <ng-container *ngTemplateOutlet=\"pageAndChildren; context: {page: child}\"></ng-container>\r\n        </ng-container>\r\n      </ul>\r\n    </li>\r\n  </ng-template>\r\n</ng-container>\r\n","import { ChangeDetectionStrategy, Component, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FieldValue, PagePickerResult } from '../../../edit-types';\r\nimport { GeneralHelpers } from '../../shared/helpers';\r\nimport { QueryService } from '../../shared/services';\r\nimport { buildPageSearch, buildPageTree } from './page-picker.helpers';\r\nimport { PageEntity, PagePickerDialogData, PagePickerTemplateVars, PageSearchItem, PageTreeItem } from './page-picker.models';\r\n\r\n@Component({\r\n  selector: 'app-page-picker',\r\n  templateUrl: './page-picker.component.html',\r\n  styleUrls: ['./page-picker.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PagePickerComponent implements OnInit, OnDestroy {\r\n  selected: number;\r\n  toggled: number[];\r\n  templateVars$: Observable<PagePickerTemplateVars>;\r\n\r\n  private filterText$: BehaviorSubject<string>;\r\n  private searchItems$: BehaviorSubject<PageSearchItem[]>;\r\n  private tree$: BehaviorSubject<PageTreeItem[]>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: PagePickerDialogData,\r\n    private dialogRef: MatDialogRef<PagePickerComponent>,\r\n    private queryService: QueryService,\r\n    private translate: TranslateService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.selected = this.parseSelectedPageId();\r\n    this.toggled = [];\r\n    this.filterText$ = new BehaviorSubject('');\r\n    this.searchItems$ = new BehaviorSubject([]);\r\n    this.tree$ = new BehaviorSubject([]);\r\n\r\n    const filteredSearch$ = combineLatest([this.filterText$, this.searchItems$]).pipe(\r\n      map(([filterText, searchItems]) =>\r\n        searchItems.filter(item => item.name.toLocaleLowerCase().includes(filterText.toLocaleLowerCase()))\r\n      ),\r\n    );\r\n    this.templateVars$ = combineLatest([this.filterText$, filteredSearch$, this.tree$]).pipe(\r\n      map(([filterText, filteredSearch, tree]) => {\r\n        const templateVars: PagePickerTemplateVars = {\r\n          filterText,\r\n          filteredSearch,\r\n          tree,\r\n        };\r\n        return templateVars;\r\n      }),\r\n    );\r\n\r\n    this.fetchPages();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.filterText$.complete();\r\n    this.searchItems$.complete();\r\n    this.tree$.complete();\r\n  }\r\n\r\n  setFilter(filterText: string): void {\r\n    this.filterText$.next(filterText);\r\n  }\r\n\r\n  select(pageId: number): void {\r\n    // filters out pages without parent (broken)\r\n    if (pageId == null) { return; }\r\n    this.closeDialog(pageId);\r\n  }\r\n\r\n  toggle(pageId: number): void {\r\n    GeneralHelpers.toggleInArray(pageId, this.toggled);\r\n  }\r\n\r\n  private closeDialog(pageId?: number): void {\r\n    if (pageId == null) {\r\n      this.dialogRef.close();\r\n      return;\r\n    }\r\n\r\n    const page = this.searchItems$.value.find(i => i.id === pageId);\r\n    const result: PagePickerResult = {\r\n      id: page.id.toString(),\r\n      name: page.name,\r\n    };\r\n    this.dialogRef.close(result);\r\n  }\r\n\r\n  private fetchPages(): void {\r\n    const query = 'Eav.Queries.Global.Pages';\r\n    const stream = 'Default';\r\n    this.queryService.getAvailableEntities(`${query}/${stream}`, true, null, null).subscribe({\r\n      next: (data) => {\r\n        if (!data) {\r\n          console.error(this.translate.instant('Fields.EntityQuery.QueryError'));\r\n          return;\r\n        }\r\n        if (!data[stream]) {\r\n          console.error(this.translate.instant('Fields.EntityQuery.QueryStreamNotFound') + stream);\r\n          return;\r\n        }\r\n        const pages = data[stream] as PageEntity[];\r\n        const searchItems = buildPageSearch(pages);\r\n        this.searchItems$.next(searchItems);\r\n        const tree = buildPageTree(pages);\r\n        this.tree$.next(tree);\r\n      },\r\n      error: (error) => {\r\n        console.error(error);\r\n        console.error(`${this.translate.instant('Fields.EntityQuery.QueryError')} - ${error.data}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  private parseSelectedPageId(): number {\r\n    const prefix = 'page:';\r\n    let fieldValue: FieldValue = this.dialogData.group.controls[this.dialogData.config.fieldName].value;\r\n    if (typeof fieldValue !== 'string') { return; }\r\n\r\n    fieldValue = fieldValue.trim().toLocaleLowerCase();\r\n    if (!fieldValue.startsWith(prefix)) { return; }\r\n\r\n    try {\r\n      const id = parseInt(fieldValue.split(prefix)[1], 10);\r\n      return id;\r\n    } catch {\r\n      return;\r\n    }\r\n  }\r\n}\r\n","import { PageEntity, PageSearchItem, PageTreeItem } from './page-picker.models';\r\n\r\nexport function buildPageSearch(pages: PageEntity[]): PageSearchItem[] {\r\n  if (!pages) { return []; }\r\n\r\n  const items = pages.map(page => {\r\n    let path = page.Path.trim().replace(/\\\\/g, '/').replace(/\\/\\//g, '/');\r\n    if (path.startsWith('/')) {\r\n      path = path.substring(1);\r\n    }\r\n    path = path.split('/').slice(0, -1).join(' > ');\r\n\r\n    const item: PageSearchItem = {\r\n      id: page.Id,\r\n      name: page.Name,\r\n      path,\r\n    };\r\n    return item;\r\n  });\r\n\r\n  return items;\r\n}\r\n\r\nexport function buildPageTree(pages: PageEntity[]): PageTreeItem[] {\r\n  if (!pages) { return []; }\r\n\r\n  const items = pages.map(page => {\r\n    const item: PageTreeItem = {\r\n      children: [],\r\n      id: page.Id,\r\n      name: page.Name,\r\n      parentId: page.ParentId,\r\n    };\r\n    return item;\r\n  });\r\n\r\n  const tree: PageTreeItem[] = [];\r\n  const broken: PageTreeItem[] = [];\r\n  for (const item of items) {\r\n    if (item.parentId === -1) {\r\n      tree.push(item);\r\n      continue;\r\n    }\r\n\r\n    const parent = items.find(i => i.id === item.parentId);\r\n    if (!parent) {\r\n      broken.push(item);\r\n    } else {\r\n      parent.children.push(item);\r\n    }\r\n  }\r\n\r\n  if (broken.length > 0) {\r\n    /** Fake entry to place all pages which are missing parent */\r\n    const item: PageTreeItem = {\r\n      children: broken,\r\n      id: null,\r\n      name: 'Missing Parent',\r\n      parentId: null,\r\n    };\r\n    tree.push(item);\r\n  }\r\n\r\n  return tree;\r\n}\r\n","import { ChangeDetectorRef, ViewContainerRef } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\nimport { PagePickerResult } from '../../../edit-types';\r\nimport { FieldConfigSet } from '../../eav-dynamic-form/model/field-config';\r\nimport { PagePickerComponent } from '../../eav-material-controls/page-picker/page-picker.component';\r\nimport { PagePickerDialogData } from '../../eav-material-controls/page-picker/page-picker.models';\r\n\r\nexport class PagePicker {\r\n  static open(\r\n    config: FieldConfigSet,\r\n    group: FormGroup,\r\n    dialog: MatDialog,\r\n    viewContainerRef: ViewContainerRef,\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    callback: (value: PagePickerResult) => void,\r\n  ): void {\r\n    const data: PagePickerDialogData = {\r\n      config,\r\n      group,\r\n    };\r\n    const dialogRef = dialog.open(PagePickerComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef,\r\n      width: '650px',\r\n    });\r\n\r\n    dialogRef.afterClosed().pipe(take(1)).subscribe((value: PagePickerResult) => {\r\n      callback(value);\r\n    });\r\n\r\n    changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","import { Dictionary } from '../../../../ng-dialogs/src/app/shared/models/dictionary.model';\r\nimport { TranslationLinkConstants } from '../../../shared/constants';\r\n\r\nexport class TranslateMenuHelpers {\r\n\r\n  static getTranslationStateClass(linkType: string) {\r\n    switch (linkType) {\r\n      case TranslationLinkConstants.MissingDefaultLangValue:\r\n        return 'localization-missing-default-lang-value';\r\n      case TranslationLinkConstants.Translate:\r\n      case TranslationLinkConstants.LinkCopyFrom:\r\n        return 'localization-translate';\r\n      case TranslationLinkConstants.DontTranslate:\r\n        return '';\r\n      case TranslationLinkConstants.LinkReadOnly:\r\n        return 'localization-link-read-only';\r\n      case TranslationLinkConstants.LinkReadWrite:\r\n        return 'localization-link-read-write';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static calculateSharedInfoMessage(dimensions: string[], currentLanguage: string): string {\r\n    dimensions = TranslateMenuHelpers.calculateShortDimensions(dimensions, currentLanguage);\r\n    const result = TranslateMenuHelpers.calculateEditAndReadDimensions(dimensions);\r\n    const editableDimensions = result.editableDimensions;\r\n    const readOnlyDimensions = result.readOnlyDimensions;\r\n    let infoMessage = '';\r\n\r\n    const editableExist = editableDimensions.length > 0;\r\n    const readOnlyExist = readOnlyDimensions.length > 0;\r\n    if (editableExist && readOnlyExist) {\r\n      infoMessage = `${editableDimensions.join(', ')}, (${readOnlyDimensions.join(', ')})`;\r\n    } else if (editableExist) {\r\n      infoMessage = editableDimensions.join(', ');\r\n    } else if (readOnlyExist) {\r\n      infoMessage = `(${readOnlyDimensions.join(', ')})`;\r\n    }\r\n\r\n    return infoMessage;\r\n  }\r\n\r\n  private static calculateShortDimensions(dimensions: string[], currentLanguage: string): string[] {\r\n    const dimensionsMap: Dictionary<string[]> = {};\r\n    const shortCurrentLanguage = currentLanguage.slice(0, currentLanguage.indexOf('-'));\r\n\r\n    dimensionsMap[shortCurrentLanguage] = [];\r\n    dimensionsMap[shortCurrentLanguage].push(shortCurrentLanguage);\r\n\r\n    dimensions.forEach(dimension => {\r\n      const shortDimension = dimension.slice(0, dimension.indexOf('-'));\r\n      const shortNoReadOnly = shortDimension.replace('~', '');\r\n\r\n      if (!dimensionsMap[shortNoReadOnly]) {\r\n        dimensionsMap[shortNoReadOnly] = [];\r\n        dimensionsMap[shortNoReadOnly].push(dimension);\r\n      } else {\r\n        dimensionsMap[shortNoReadOnly].push(dimension);\r\n      }\r\n    });\r\n\r\n    dimensions = dimensions.map(dimension => {\r\n      const shortDimension = dimension.slice(0, dimension.indexOf('-'));\r\n      const shortNoReadOnly = shortDimension.replace('~', '');\r\n\r\n      if (dimensionsMap[shortNoReadOnly].length > 1) {\r\n        return dimension;\r\n      } else {\r\n        return shortDimension;\r\n      }\r\n    });\r\n\r\n    return dimensions;\r\n  }\r\n\r\n  private static calculateEditAndReadDimensions(dimensions: string[]) {\r\n    const editableDimensions: string[] = [];\r\n    const readOnlyDimensions: string[] = [];\r\n\r\n    dimensions.forEach(dimension => {\r\n      if (!dimension.includes('~')) {\r\n        editableDimensions.push(dimension);\r\n      } else {\r\n        readOnlyDimensions.push(dimension.replace('~', ''));\r\n      }\r\n    });\r\n\r\n    return {\r\n      editableDimensions,\r\n      readOnlyDimensions\r\n    };\r\n  }\r\n}\r\n","import { UrlMatchResult, UrlSegment } from '@angular/router';\r\nimport { EditPosParams } from './edit-matcher.models';\r\n\r\n/**\r\n * ':zoneId/:appId/edit/:items'\r\n * ':zoneId/:appId/edit/:items/details/:detailsEntityGuid/:detailsFieldId'\r\n * ':zoneId/:appId/edit/:items/update/:updateEntityGuid/:updateFieldId'\r\n */\r\nexport function editRoot(url: UrlSegment[]): UrlMatchResult {\r\n  if (url.length < 4) { return null; }\r\n  if (url[2].path !== 'edit') { return null; }\r\n  const hasDetails = url[4] != null && url[4].path === 'details' && url[5] != null && url[6] != null;\r\n  const hasUpdate = url[4] != null && url[4].path === 'update' && url[5] != null && url[6] != null;\r\n  const posParams: EditPosParams = {\r\n    zoneId: url[0],\r\n    appId: url[1],\r\n    items: url[3],\r\n    ...(hasDetails && { detailsEntityGuid: url[5], detailsFieldId: url[6] }),\r\n    ...(hasUpdate && { updateEntityGuid: url[5], updateFieldId: url[6] }),\r\n  };\r\n  const match: UrlMatchResult = {\r\n    consumed: url.slice(0, (hasDetails || hasUpdate) ? 7 : 4),\r\n    posParams: posParams as any,\r\n  };\r\n  return match;\r\n}\r\n\r\n/** ':zoneId/:appId/edit/refresh/:items' */\r\nexport function refreshEditRoot(url: UrlSegment[]): UrlMatchResult {\r\n  if (url.length < 5) { return null; }\r\n  if (url[2].path !== 'edit' || url[3].path !== 'refresh') { return null; }\r\n  const posParams: EditPosParams = {\r\n    zoneId: url[0],\r\n    appId: url[1],\r\n    items: url[4],\r\n  };\r\n  const match: UrlMatchResult = {\r\n    consumed: url.slice(0, 5),\r\n    posParams: posParams as any,\r\n  };\r\n  return match;\r\n}\r\n\r\n/**\r\n * 'edit/:items'\r\n * 'edit/:items/details/:detailsEntityGuid/:detailsFieldId'\r\n * 'edit/:items/update/:updateEntityGuid/:updateFieldId'\r\n */\r\nexport function edit(url: UrlSegment[]): UrlMatchResult {\r\n  if (url.length < 2) { return null; }\r\n  if (url[0].path !== 'edit') { return null; }\r\n  const hasDetails = url[2] != null && url[2].path === 'details' && url[3] != null && url[4] != null;\r\n  const hasUpdate = url[2] != null && url[2].path === 'update' && url[3] != null && url[4] != null;\r\n  const posParams: EditPosParams = {\r\n    items: url[1],\r\n    ...(hasDetails && { detailsEntityGuid: url[3], detailsFieldId: url[4] }),\r\n    ...(hasUpdate && { updateEntityGuid: url[3], updateFieldId: url[4] }),\r\n  };\r\n  const match: UrlMatchResult = {\r\n    consumed: url.slice(0, (hasDetails || hasUpdate) ? 5 : 2),\r\n    posParams: posParams as any,\r\n  };\r\n  return match;\r\n}\r\n\r\n/** 'edit/refresh/:items' */\r\nexport function refreshEdit(url: UrlSegment[]): UrlMatchResult {\r\n  if (url.length < 3) { return null; }\r\n  if (url[0].path !== 'edit' || url[1].path !== 'refresh') { return null; }\r\n  const posParams: EditPosParams = {\r\n    items: url[2],\r\n  };\r\n  const match: UrlMatchResult = {\r\n    consumed: url.slice(0, 3),\r\n    posParams: posParams as any,\r\n  };\r\n  return match;\r\n}\r\n","export const environment = {\r\n  production: true\r\n};\r\n","import { FieldSettings, FieldValue } from '../../../edit-types';\r\nimport { FormValues } from '../../eav-item-dialog/item-edit-form/item-edit-form.models';\r\nimport { EavType } from './eav';\r\n\r\nexport interface FormulaCacheItem {\r\n  cache: Record<string, any>;\r\n  entityGuid: string;\r\n  fieldName: string;\r\n  /** Function built when formula is saved */\r\n  fn: FormulaFunction;\r\n  /** Is formula currently being edited (not yet saved) */\r\n  isDraft: boolean;\r\n  /** Current formula string */\r\n  source: string;\r\n  /** Formula string in field settings */\r\n  sourceFromSettings: string;\r\n  sourceGuid: string;\r\n  target: FormulaTarget;\r\n  version: FormulaVersion;\r\n}\r\n\r\nexport type FormulaFunction = FormulaFunctionDefault | FormulaFunctionV1;\r\n\r\nexport type FormulaFunctionDefault = () => FieldValue;\r\n\r\nexport type FormulaFunctionV1 = (data: FormulaV1Data, context: FormulaV1Context, experimental: FormulaV1Experimental) => FieldValue;\r\n\r\nexport const FormulaVersions = {\r\n  V1: 'v1',\r\n} as const;\r\n\r\nexport type FormulaVersion = typeof FormulaVersions[keyof typeof FormulaVersions];\r\n\r\nexport const FormulaTargets = {\r\n  Disabled: 'Field.Settings.Disabled',\r\n  Name: 'Field.Settings.Name',\r\n  Required: 'Field.Settings.Required',\r\n  Value: 'Field.Value',\r\n  Visible: 'Field.Settings.Visible',\r\n} as const;\r\n\r\nexport const SettingsFormulaPrefix = FormulaTargets.Disabled.substring(0, FormulaTargets.Disabled.lastIndexOf('.') + 1);\r\n\r\nexport type FormulaTarget = typeof FormulaTargets[keyof typeof FormulaTargets];\r\n\r\nexport type FormulaProps = FormulaPropsV1;\r\n\r\nexport interface FormulaPropsV1 {\r\n  data: FormulaV1Data;\r\n  context: FormulaV1Context;\r\n  experimental: FormulaV1Experimental;\r\n}\r\n\r\nexport interface FormulaV1Data {\r\n  default: FieldValue;\r\n  initial: FieldValue;\r\n  prefill: FieldValue;\r\n  value: FieldValue;\r\n  [fieldName: string]: FieldValue;\r\n}\r\n\r\nexport interface FormulaV1Context {\r\n  cache: Record<string, any>;\r\n  culture: FormulaV1CtxCulture;\r\n  debug: boolean;\r\n  target: FormulaV1CtxTarget;\r\n}\r\n\r\nexport interface FormulaV1CtxCulture {\r\n  code: string;\r\n  name: string;\r\n}\r\n\r\nexport interface FormulaV1CtxTarget {\r\n  entity: FormulaV1CtxTargetEntity;\r\n  name: string;\r\n  type: string;\r\n}\r\n\r\nexport interface FormulaV1CtxTargetEntity {\r\n  guid: string;\r\n  id: number;\r\n}\r\n\r\nexport interface FormulaV1Experimental {\r\n  getEntities(): FormulaV1ExperimentalEntity[];\r\n  getSettings(fieldName: string): FieldSettings;\r\n  getValues(entityGuid: string): FormValues;\r\n}\r\n\r\nexport interface FormulaV1ExperimentalEntity {\r\n  guid: string;\r\n  id: number;\r\n  type: EavType;\r\n}\r\n\r\nexport interface RunFormulasResult {\r\n  settings: FieldSettings;\r\n  value: FieldValue;\r\n}\r\n\r\nexport interface FormulaResult {\r\n  entityGuid: string;\r\n  fieldName: string;\r\n  target: FormulaTarget;\r\n  value: FieldValue;\r\n  isError: boolean;\r\n}\r\n\r\nexport interface DesignerState {\r\n  editMode: boolean;\r\n  entityGuid: string;\r\n  fieldName: string;\r\n  isOpen: boolean;\r\n  target: FormulaTarget;\r\n}\r\n","export interface LogEntry {\r\n  error: any;\r\n  label: string;\r\n  severity: LogSeverity;\r\n  time: number;\r\n}\r\n\r\nexport const LogSeverities = {\r\n  Error: 'error',\r\n  Log: 'log',\r\n  Warn: 'warn',\r\n} as const;\r\n\r\nexport type LogSeverity = typeof LogSeverities[keyof typeof LogSeverities];\r\n","/** PublishMode is short version of PublishStatus */\r\nexport type PublishMode = 'branch' | 'show' | 'hide';\r\n\r\n/** PublishMode is short version of PublishStatus */\r\nexport enum PublishModeConstants {\r\n  Show = 'show',\r\n  Hide = 'hide',\r\n  Branch = 'branch',\r\n}\r\n","import { JsInfo } from '@2sic.com/2sxc-typings';\r\nimport { DialogContextApp } from '../models/dialog-context.models';\r\nimport { EavWindow } from '../models/eav-window.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n/**\r\n * This ensures that $2sxc is fully initialized with parameters which are provided later on\r\n * The appApi is being added in v12\r\n * It's important because in Oqtane the app-api root is different in from the normal admin-apis\r\n */\r\nexport function UpdateEnvVarsFromDialogSettings(appContext: DialogContextApp): void {\r\n  try {\r\n    const includedApiRoot = appContext?.Api;\r\n    if (!includedApiRoot) { return; }\r\n\r\n    const old2sxcHeader = (window.$2sxc.env as any).header as JsInfo;\r\n    const new2sxcHeader = { ...old2sxcHeader, appApi: includedApiRoot } as JsInfo;\r\n    window.$2sxc.env.load(new2sxcHeader);\r\n  } catch { /* ignore */ }\r\n}\r\n","import { EavEntity, EavEntityAttributes } from '.';\r\nimport { ContentTypeAttribute1 } from '../json-format-v1';\r\n\r\nexport class EavContentTypeAttribute {\r\n  InputType: string;\r\n  IsTitle: boolean;\r\n  Metadata: EavEntity[];\r\n  Name: string;\r\n  Settings: EavEntityAttributes;\r\n  Type: string;\r\n\r\n  private static convertOne(attribute1: ContentTypeAttribute1): EavContentTypeAttribute {\r\n    const metadata = EavEntity.convertMany(attribute1.Metadata);\r\n    const settings = EavEntityAttributes.mergeSettings(metadata);\r\n\r\n    const attribute: EavContentTypeAttribute = {\r\n      InputType: attribute1.InputType,\r\n      IsTitle: attribute1.IsTitle,\r\n      Metadata: metadata,\r\n      Name: attribute1.Name,\r\n      Settings: settings,\r\n      Type: attribute1.Type,\r\n    };\r\n    return attribute;\r\n  }\r\n\r\n  static convertMany(attributes1: ContentTypeAttribute1[]): EavContentTypeAttribute[] {\r\n    if (attributes1 == null) { return []; }\r\n\r\n    const attributes = attributes1.map(attribute1 => EavContentTypeAttribute.convertOne(attribute1));\r\n    return attributes;\r\n  }\r\n}\r\n","import { EavContentTypeAttribute, EavEntity, EavEntityAttributes } from '.';\r\nimport { ContentType1 } from '../json-format-v1';\r\n\r\nexport class EavContentType {\r\n  Attributes: EavContentTypeAttribute[];\r\n  Description: string;\r\n  Id: string;\r\n  Metadata: EavEntity[];\r\n  Name: string;\r\n  Scope: string;\r\n  Settings: EavEntityAttributes;\r\n\r\n  static convert(contentType1: ContentType1): EavContentType {\r\n    const attributes = EavContentTypeAttribute.convertMany(contentType1.Attributes);\r\n    const metadata = EavEntity.convertMany(contentType1.Metadata);\r\n    const settings = EavEntityAttributes.mergeSettings(metadata);\r\n\r\n    const contentType: EavContentType = {\r\n      Attributes: attributes,\r\n      Description: contentType1.Description,\r\n      Id: contentType1.Id,\r\n      Metadata: metadata,\r\n      Name: contentType1.Name,\r\n      Scope: contentType1.Scope,\r\n      Settings: settings,\r\n    };\r\n    return contentType;\r\n  }\r\n}\r\n","export class EavDimension {\r\n  Value: string;\r\n\r\n  static create(value: string): EavDimension {\r\n    const dimension: EavDimension = {\r\n      Value: value,\r\n    };\r\n    return dimension;\r\n  }\r\n}\r\n","import { EavEntity, EavValues } from '.';\r\nimport { EntityAttributes1 } from '../json-format-v1';\r\n\r\nexport class EavEntityAttributes {\r\n  [attributeName: string]: EavValues<any>;\r\n\r\n  static convert(attributes1: EntityAttributes1): EavEntityAttributes {\r\n    const atributes: EavEntityAttributes = {};\r\n\r\n    // loop attribute types - String, Boolean, ...\r\n    for (const [type1, attribute1] of Object.entries(attributes1)) {\r\n      // loop attribute names - Description, Name, ...\r\n      for (const [name1, value1] of Object.entries(attribute1)) {\r\n        atributes[name1] = EavValues.convert(value1, type1);\r\n      }\r\n    }\r\n    return atributes;\r\n  }\r\n\r\n  static mergeSettings(metadataItems: EavEntity[]): EavEntityAttributes {\r\n    if (metadataItems == null) { return {}; }\r\n\r\n    const merged: EavEntityAttributes = {};\r\n    // copy metadata settings which are not @All\r\n    for (const item of metadataItems) {\r\n      if (item.Type.Id === '@All') { continue; }\r\n\r\n      for (const [name, value] of Object.entries(item.Attributes)) {\r\n        const copy: EavValues<any> = { ...value };\r\n        merged[name] = copy;\r\n      }\r\n    }\r\n\r\n    // copy @All metadata settings, overwriting previous settings\r\n    for (const item of metadataItems) {\r\n      if (item.Type.Id !== '@All') { continue; }\r\n\r\n      for (const [name, value] of Object.entries(item.Attributes)) {\r\n        // do not overwrite previous settings if @All is empty\r\n        const exists = merged[name] != null;\r\n        const emptyAll = value.Values[0].Value === '';\r\n        if (exists && emptyAll) { continue; }\r\n\r\n        const copy: EavValues<any> = { ...value };\r\n        merged[name] = copy;\r\n      }\r\n    }\r\n    return merged;\r\n  }\r\n}\r\n","import { EavEntityAttributes, EavFor, EavType } from '.';\r\nimport { Entity1 } from '../json-format-v1';\r\n\r\nexport class EavEntity {\r\n  Attributes: EavEntityAttributes;\r\n  Guid: string;\r\n  Id: number;\r\n  Owner: string;\r\n  Type: EavType;\r\n  Version: number;\r\n  For?: EavFor;\r\n  Metadata?: EavEntity[];\r\n\r\n  static convertOne(entity1: Entity1): EavEntity {\r\n    // spm 2021.01.26. is empty entity ever used?\r\n    if (entity1 == null) {\r\n      const defaultEntity: EavEntity = {\r\n        Attributes: {},\r\n        Guid: '00000000-0000-0000-0000-000000000000',\r\n        Id: 0,\r\n        Owner: '',\r\n        Type: null,\r\n        Version: 1,\r\n        For: null,\r\n        Metadata: null,\r\n      };\r\n      return defaultEntity;\r\n    }\r\n\r\n    const attributes = EavEntityAttributes.convert(entity1.Attributes);\r\n    const metadata = this.convertMany(entity1.Metadata);\r\n\r\n    const entity: EavEntity = {\r\n      Attributes: attributes,\r\n      Guid: entity1.Guid,\r\n      Id: entity1.Id,\r\n      Owner: entity1.Owner,\r\n      Type: entity1.Type,\r\n      Version: entity1.Version,\r\n      For: entity1.For,\r\n      Metadata: metadata,\r\n    };\r\n    return entity;\r\n  }\r\n\r\n  static convertMany(entities1: Entity1[]): EavEntity[] {\r\n    if (entities1 == null) { return null; }\r\n\r\n    const entities = entities1.map(entity1 => EavEntity.convertOne(entity1));\r\n    return entities;\r\n  }\r\n}\r\n","import { EavEntity, EavHeader } from '.';\r\nimport { Item1 } from '../json-format-v1';\r\n\r\nexport class EavItem {\r\n  Entity: EavEntity;\r\n  Header: EavHeader;\r\n\r\n  static convert(item1: Item1): EavItem {\r\n    const entity = EavEntity.convertOne(item1.Entity);\r\n\r\n    const item: EavItem = {\r\n      Entity: entity,\r\n      Header: item1.Header,\r\n    };\r\n    return item;\r\n  }\r\n}\r\n","import { EavDimension } from '.';\r\nimport { Value1 } from '../json-format-v1';\r\n\r\nexport class EavValue<T> {\r\n  Value: T;\r\n  Dimensions: EavDimension[];\r\n\r\n  static create<T>(value: T, dimensions: EavDimension[]): EavValue<T> {\r\n    const eavValue: EavValue<T> = {\r\n      Value: value,\r\n      Dimensions: dimensions,\r\n    };\r\n    return eavValue;\r\n  }\r\n\r\n  static convert<T>(value1: Value1<T>): EavValue<T>[] {\r\n    const values = Object.entries(value1).map(([langs, value]) => {\r\n      const dimensions = langs.split(',').map(lang => EavDimension.create(lang));\r\n      return this.create(value, dimensions);\r\n    });\r\n    return values;\r\n  }\r\n}\r\n","import { EavValue } from '.';\r\nimport { Value1 } from '../json-format-v1';\r\n\r\nexport class EavValues<T> {\r\n  Values: EavValue<T>[];\r\n  Type: string;\r\n\r\n  static convert<T>(value1: Value1<T>, type: string): EavValues<T> {\r\n    const values = EavValue.convert(value1);\r\n\r\n    const eavValues: EavValues<T> = {\r\n      Values: values,\r\n      Type: type,\r\n    };\r\n    return eavValues;\r\n  }\r\n}\r\n","import { EavFor } from '../../../../../edit/shared/models/eav';\r\nimport { eavConstants } from '../constants/eav.constants';\r\nimport { AddItem, EditForm, EditItem, GroupItem, InnerItem } from '../models/edit-form.model';\r\n\r\nexport function convertFormToUrl(form: EditForm) {\r\n  let formUrl = '';\r\n\r\n  for (const item of form.items) {\r\n    if (formUrl) { formUrl += ','; }\r\n\r\n    if ((item as InnerItem).Parent) {\r\n      // Inner Item\r\n      const innerItem = item as InnerItem;\r\n      formUrl += 'inner:' + innerItem.EntityId + ':' + innerItem.Field\r\n        + ':' + innerItem.Parent + ':' + innerItem.Add + ':' + innerItem.Index;\r\n      if (innerItem.Prefill) {\r\n        for (const [key, prefill] of Object.entries(innerItem.Prefill)) {\r\n          formUrl += '&prefill:' + key + '~' + paramEncode(prefill.toString());\r\n        }\r\n      }\r\n    } else if ((item as EditItem).EntityId) {\r\n      // Edit Item\r\n      const editItem = item as EditItem;\r\n      formUrl += editItem.EntityId;\r\n    } else if ((item as AddItem).ContentTypeName) {\r\n      // Add Item\r\n      const addItem = item as AddItem;\r\n      formUrl += 'new:' + addItem.ContentTypeName;\r\n\r\n      // new v11.11 - support Singleton\r\n      const createForSuffix = (mdFor: EavFor) => ':' + mdFor.Target\r\n        + (mdFor.Singleton ? ':' + mdFor.Singleton.toString().toLowerCase() : '');\r\n\r\n      if (addItem.For?.String) {\r\n        formUrl += '&for:s~' + paramEncode(addItem.For.String) + createForSuffix(addItem.For);\r\n      } else if (addItem.For?.Number) {\r\n        formUrl += '&for:n~' + addItem.For.Number + createForSuffix(addItem.For);\r\n      } else if (addItem.For?.Guid) {\r\n        formUrl += '&for:g~' + addItem.For.Guid + createForSuffix(addItem.For);\r\n      } else if (addItem.Metadata) {\r\n        let keyType: string;\r\n        switch (addItem.Metadata.keyType.toLocaleLowerCase()) {\r\n          case eavConstants.keyTypes.string:\r\n            keyType = 's';\r\n            break;\r\n          case eavConstants.keyTypes.number:\r\n            keyType = 'n';\r\n            break;\r\n          case eavConstants.keyTypes.guid:\r\n            keyType = 'g';\r\n            break;\r\n        }\r\n        const target = Object.values(eavConstants.metadata).find(metaValue => metaValue.type === addItem.Metadata.targetType)?.target;\r\n        formUrl += '&for:' + keyType + '~' + paramEncode(addItem.Metadata.key) + ':' + target;\r\n      }\r\n\r\n      if (addItem.Prefill) {\r\n        for (const [key, prefill] of Object.entries(addItem.Prefill)) {\r\n          formUrl += '&prefill:' + key + '~' + paramEncode(prefill.toString());\r\n        }\r\n      }\r\n\r\n      if (addItem.DuplicateEntity) {\r\n        formUrl += '&copy:' + addItem.DuplicateEntity;\r\n      }\r\n    } else if ((item as GroupItem).Group) {\r\n      // Group Item\r\n      const groupItem = item as GroupItem;\r\n      formUrl += 'group:' + groupItem.Group.Guid + ':' + groupItem.Group.Index + ':' + groupItem.Group.Part + ':' + groupItem.Group.Add;\r\n      if (groupItem.Prefill) {\r\n        for (const [key, prefill] of Object.entries(groupItem.Prefill)) {\r\n          formUrl += '&prefill:' + key + '~' + paramEncode(prefill.toString());\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return formUrl;\r\n}\r\n\r\nexport function convertUrlToForm(formUrl: string) {\r\n  const form: EditForm = { items: [] };\r\n  const items = formUrl.split(',');\r\n\r\n  for (const item of items) {\r\n    const isNumber = /^[0-9]*$/g;\r\n    if (item.startsWith('inner:')) {\r\n      // Inner Item\r\n      const innerItem = {} as InnerItem;\r\n      const options = item.split('&');\r\n\r\n      for (const option of options) {\r\n        if (option.startsWith('inner:')) {\r\n          const innerItemParams = item.split(':');\r\n          innerItem.EntityId = parseInt(innerItemParams[1], 10);\r\n          innerItem.Field = innerItemParams[2];\r\n          innerItem.Parent = innerItemParams[3];\r\n          innerItem.Add = innerItemParams[4] === 'true';\r\n          innerItem.Index = parseInt(innerItemParams[5], 10);\r\n        } else if (option.startsWith('prefill:')) {\r\n          if (innerItem.Prefill == null) {\r\n            innerItem.Prefill = {};\r\n          }\r\n          const prefillParams = option.split(':');\r\n          const key = prefillParams[1].split('~')[0];\r\n          const value = paramDecode(prefillParams[1].split('~')[1]);\r\n          innerItem.Prefill[key] = value;\r\n        }\r\n      }\r\n      form.items.push(innerItem);\r\n    } else if (isNumber.test(item)) {\r\n      // Edit Item\r\n      const editItem: EditItem = { EntityId: parseInt(item, 10) };\r\n      form.items.push(editItem);\r\n    } else if (item.startsWith('new:')) {\r\n      // Add Item\r\n      const addItem = {} as AddItem;\r\n      const options = item.split('&');\r\n\r\n      for (const option of options) {\r\n        if (option.startsWith('new:')) {\r\n          // Add Item ContentType\r\n          const newParams = option.split(':');\r\n          addItem.ContentTypeName = newParams[1];\r\n        } else if (option.startsWith('for:')) {\r\n          // Add Item For\r\n          addItem.For = {} as EavFor;\r\n          const forParams = option.split(':');\r\n          const forIntro = forParams[1].split('~');\r\n          const forType = forIntro[0];\r\n          const forValue = forIntro[1];\r\n          const forTarget = forParams[2];\r\n\r\n          switch (forType) {\r\n            case 's':\r\n              addItem.For.String = paramDecode(forValue);\r\n              break;\r\n            case 'n':\r\n              addItem.For.Number = parseInt(forValue, 10);\r\n              break;\r\n            case 'g':\r\n              addItem.For.Guid = forValue;\r\n              break;\r\n          }\r\n          // new v11.11 - Singleton Metadata\r\n          if (forParams.length > 3) {\r\n            addItem.For.Singleton = forParams[3] === 'true';\r\n          }\r\n          addItem.For.Target = forTarget;\r\n        } else if (option.startsWith('prefill:')) {\r\n          // Add Item Prefill\r\n          if (addItem.Prefill == null) {\r\n            addItem.Prefill = {};\r\n          }\r\n          const prefillParams = option.split(':');\r\n          const key = prefillParams[1].split('~')[0];\r\n          const value = paramDecode(prefillParams[1].split('~')[1]);\r\n          addItem.Prefill[key] = value;\r\n        } else if (option.startsWith('copy:')) {\r\n          // Add Item Copy\r\n          const copyParams = option.split(':');\r\n          addItem.DuplicateEntity = parseInt(copyParams[1], 10);\r\n        }\r\n      }\r\n      form.items.push(addItem);\r\n    } else if (item.startsWith('group:')) {\r\n      // Group Item\r\n      const groupItem = {} as GroupItem;\r\n      const options = item.split('&');\r\n\r\n      for (const option of options) {\r\n        if (option.startsWith('group:')) {\r\n          // Group Item Group\r\n          const groupParams = option.split(':');\r\n          groupItem.Group = {\r\n            Guid: groupParams[1],\r\n            Index: parseInt(groupParams[2], 10),\r\n            Part: groupParams[3],\r\n            Add: groupParams[4] === 'true',\r\n          };\r\n        } else if (option.startsWith('prefill:')) {\r\n          // Group Item Prefill\r\n          if (groupItem.Prefill == null) {\r\n            groupItem.Prefill = {};\r\n          }\r\n          const prefillParams = option.split(':');\r\n          const key = prefillParams[1].split('~')[0];\r\n          const value = paramDecode(prefillParams[1].split('~')[1]);\r\n          groupItem.Prefill[key] = value;\r\n        }\r\n      }\r\n      form.items.push(groupItem);\r\n    }\r\n  }\r\n\r\n  return form;\r\n}\r\n\r\n/** Encodes characters in URL parameter to not mess up routing. Don't forget to decode it! :) */\r\nfunction paramEncode(text: string) {\r\n  text = text.replace(/\\//g, '%2F');\r\n  text = text.replace(/\\:/g, '%3A');\r\n  text = text.replace(/\\&/g, '%26');\r\n  text = text.replace(/\\~/g, '%7E');\r\n  text = text.replace(/\\,/g, '%2C');\r\n  return text;\r\n}\r\n\r\n/** Decodes characters in URL parameter */\r\nfunction paramDecode(text: string) {\r\n  text = text.replace(/%2F/g, '/');\r\n  text = text.replace(/%3A/g, ':');\r\n  text = text.replace(/%26/g, '&');\r\n  text = text.replace(/%7E/g, '~');\r\n  text = text.replace(/%2C/g, ',');\r\n  return text;\r\n}\r\n","import { EntityCollectionServiceBase, EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n/**\r\n * Creates BehaviorSubject for cached data to be accessible in both synchronous and asynchronous manner with cache$.\r\n * WARNING! Do not use entities$\r\n */\r\nexport class BaseDataService<T> extends EntityCollectionServiceBase<T> {\r\n  cache$: BehaviorSubject<T[]>;\r\n\r\n  constructor(cacheName: string, serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super(cacheName, serviceElementsFactory);\r\n\r\n    this.cache$ = new BehaviorSubject<T[]>([]);\r\n    // doesn't need to be completed because store services are singletons that live as long as the browser tab is open\r\n    this.entities$.subscribe(items => {\r\n      this.cache$.next(items);\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { AdamItem } from '../../../../edit-types';\r\nimport { PrefetchAdams } from '../../../eav-item-dialog/multi-item-edit-form/multi-item-edit-form.models';\r\nimport { AdamSnapshot } from '../../models';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AdamCacheService extends BaseDataService<AdamSnapshot> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('AdamCache', serviceElementsFactory);\r\n  }\r\n\r\n  loadPrefetch(prefetchAdams: PrefetchAdams): void {\r\n    if (prefetchAdams == null) { return; }\r\n\r\n    const snapshots = Object.entries(prefetchAdams).map(([entityGuid, attributes]) => {\r\n      const snapshot: AdamSnapshot = {\r\n        Guid: entityGuid,\r\n        Attributes: attributes,\r\n      };\r\n      return snapshot;\r\n    });\r\n    this.upsertManyInCache(snapshots);\r\n  }\r\n\r\n  getAdamSnapshot(entityGuid: string, fieldName: string): AdamItem[] {\r\n    return this.cache$.value.find(adamSnapshot => adamSnapshot.Guid === entityGuid)?.Attributes[fieldName];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { EavEntity } from '../../models/eav';\r\nimport { Entity1 } from '../../models/json-format-v1';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ContentTypeItemService extends BaseDataService<EavEntity> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('ContentTypeItem', serviceElementsFactory);\r\n  }\r\n\r\n  addContentTypeItems(contentTypeItems1: Entity1[]): void {\r\n    const contentTypeItems = EavEntity.convertMany(contentTypeItems1);\r\n    this.upsertManyInCache(contentTypeItems);\r\n  }\r\n\r\n  getContentTypeItem(guid: string): EavEntity {\r\n    return this.cache$.value.find(contentTypeItem => contentTypeItem.Guid === guid);\r\n  }\r\n\r\n  getContentTypeItems(guids: string[]): EavEntity[] {\r\n    return this.cache$.value.filter(contentTypeItem => guids.includes(contentTypeItem.Guid));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { Observable } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { EavContentType } from '../../models/eav';\r\nimport { ContentType1 } from '../../models/json-format-v1';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ContentTypeService extends BaseDataService<EavContentType> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('ContentType', serviceElementsFactory);\r\n  }\r\n\r\n  addContentTypes(contentTypes1: ContentType1[]): void {\r\n    const contentTypes = contentTypes1.map(contentType1 => EavContentType.convert(contentType1));\r\n    this.addManyToCache(contentTypes);\r\n  }\r\n\r\n  getContentType(id: string): EavContentType {\r\n    return this.cache$.value.find(contentType => contentType.Id === id);\r\n  }\r\n\r\n  getContentType$(id: string): Observable<EavContentType> {\r\n    return this.cache$.pipe(\r\n      map(contentTypes => contentTypes.find(contentType => contentType.Id === id)),\r\n      distinctUntilChanged(),\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { Observable } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { EntityInfo } from '../../../../edit-types';\r\nimport { GeneralHelpers } from '../../helpers';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EntityCacheService extends BaseDataService<EntityInfo> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('EntityCache', serviceElementsFactory);\r\n  }\r\n\r\n  loadEntities(entities: EntityInfo[]): void {\r\n    if (entities == null) { return; }\r\n    this.upsertManyInCache(entities);\r\n  }\r\n\r\n  getEntities$(guids?: string[]): Observable<EntityInfo[]> {\r\n    if (guids == null) {\r\n      return this.cache$.asObservable();\r\n    }\r\n\r\n    return this.cache$.pipe(\r\n      map(entities => entities.filter(entity => guids.includes(entity.Value))),\r\n      distinctUntilChanged(GeneralHelpers.arraysEqual),\r\n    );\r\n  }\r\n\r\n  getEntities(guids?: string[]): EntityInfo[] {\r\n    if (guids == null) {\r\n      return this.cache$.value;\r\n    }\r\n\r\n    return this.cache$.value.filter(entity => guids.includes(entity.Value));\r\n  }\r\n\r\n  getEntity(guid: string): EntityInfo {\r\n    return this.cache$.value.find(entity => entity.Value === guid);\r\n  }\r\n}\r\n","import { EntityMetadataMap } from '@ngrx/data';\r\nimport { EntityInfo } from '../../../../edit-types';\r\nimport { InputType } from '../../../../ng-dialogs/src/app/content-type-fields/models/input-type.model';\r\nimport { Prefetch } from '../../../eav-item-dialog/multi-item-edit-form/multi-item-edit-form.models';\r\nimport { QueryEntity } from '../../../eav-material-controls/input-types/entity/entity-query/entity-query.models';\r\nimport { AdamSnapshot, Language, LanguageInstance, LinkCache, PublishStatus } from '../../models';\r\nimport { EavContentType, EavEntity, EavItem } from '../../models/eav';\r\n\r\nexport const entityMetadata: EntityMetadataMap = {\r\n  GlobalConfig: {},\r\n  Item: {\r\n    selectId: itemSelectId,\r\n  },\r\n  Feature: {},\r\n  Language: {\r\n    selectId: languageSelectId,\r\n  },\r\n  LanguageInstance: {\r\n    selectId: languageInstanceSelectId,\r\n  },\r\n  ContentType: {\r\n    selectId: contentTypeSelectId,\r\n  },\r\n  ContentTypeItem: {\r\n    selectId: contentTypeItemSelectId,\r\n  },\r\n  InputType: {\r\n    selectId: inputTypeSelectId,\r\n  },\r\n  PublishStatus: {\r\n    selectId: publishStatusSelectId,\r\n  },\r\n  Prefetch: {\r\n    selectId: prefetchSelectId,\r\n  },\r\n  EntityCache: {\r\n    selectId: entityCacheSelectId,\r\n  },\r\n  AdamCache: {\r\n    selectId: adamCacheSelectId,\r\n  },\r\n  LinkCache: {\r\n    selectId: linkCacheSelectId,\r\n  },\r\n  StringQueryCache: {\r\n    selectId: stringQueryCacheSelectId,\r\n  },\r\n};\r\n\r\nexport const pluralNames = {\r\n  Feature: 'Features', // example\r\n  PublishStatus: 'PublishStatuses',\r\n};\r\n\r\nexport const entityConfig = {\r\n  entityMetadata,\r\n  pluralNames,\r\n};\r\n\r\nexport function itemSelectId(item: EavItem): string {\r\n  return item?.Entity?.Guid;\r\n}\r\n\r\nexport function languageSelectId(language: Language): string {\r\n  return language?.key;\r\n}\r\n\r\nexport function languageInstanceSelectId(languageInstance: LanguageInstance): number {\r\n  return languageInstance?.formId;\r\n}\r\n\r\nexport function contentTypeSelectId(contentType: EavContentType): string {\r\n  return contentType?.Id;\r\n}\r\n\r\nexport function contentTypeItemSelectId(contentTypeItem: EavEntity): string {\r\n  return contentTypeItem?.Guid;\r\n}\r\n\r\nexport function inputTypeSelectId(inputType: InputType): string {\r\n  return inputType?.Type;\r\n}\r\n\r\nexport function publishStatusSelectId(publishStatus: PublishStatus): number {\r\n  return publishStatus?.formId;\r\n}\r\n\r\nexport function prefetchSelectId(entity: Prefetch): string {\r\n  return entity?._guid;\r\n}\r\n\r\nexport function entityCacheSelectId(entity: EntityInfo): number {\r\n  return entity?.Id;\r\n}\r\n\r\nexport function adamCacheSelectId(adamSnapshot: AdamSnapshot): string {\r\n  return adamSnapshot?.Guid;\r\n}\r\n\r\nexport function linkCacheSelectId(link: LinkCache): string {\r\n  return link?.key;\r\n}\r\n\r\nexport function stringQueryCacheSelectId(entity: QueryEntity): string {\r\n  return entity?.Guid;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { BaseDataService } from '.';\r\nimport { Feature } from '../../../../ng-dialogs/src/app/apps-management/models/feature.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FeatureService extends BaseDataService<Feature> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('Feature', serviceElementsFactory);\r\n  }\r\n\r\n  loadFeatures(features: Feature[]): void {\r\n    this.addAllToCache(features);\r\n  }\r\n\r\n  isFeatureEnabled(guid: string): boolean {\r\n    return this.cache$.value.find(feature => feature.id === guid)?.enabled ?? false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { keyDebug } from '../../../../ng-dialogs/src/app/shared/constants/session.constants';\r\nimport { GlobalConfig } from '../../models';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GlobalConfigService extends BaseDataService<GlobalConfig> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory, private snackBar: MatSnackBar) {\r\n    super('GlobalConfig', serviceElementsFactory);\r\n\r\n    const initial: GlobalConfig = {\r\n      id: 0,\r\n      debugEnabled: sessionStorage.getItem(keyDebug) === 'true',\r\n    };\r\n    this.addOneToCache(initial);\r\n  }\r\n\r\n  getDebugEnabled(): boolean {\r\n    return this.cache$.value[0].debugEnabled;\r\n  }\r\n\r\n  getDebugEnabled$(): Observable<boolean> {\r\n    return this.cache$.pipe(map(configs => configs[0].debugEnabled));\r\n  }\r\n\r\n  toggleDebugEnabled(): void {\r\n    const oldConfig = this.cache$.value[0];\r\n    const newConfig: GlobalConfig = {\r\n      ...oldConfig,\r\n      debugEnabled: !oldConfig.debugEnabled,\r\n    };\r\n    this.updateOneInCache(newConfig);\r\n\r\n    if (newConfig.debugEnabled) {\r\n      this.snackBar.open('debug mode enabled', null, { duration: 3000 });\r\n    } else {\r\n      this.snackBar.open('debug mode disabled', null, { duration: 3000 });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { Observable } from 'rxjs';\r\nimport { InputType } from '../../../../ng-dialogs/src/app/content-type-fields/models/input-type.model';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InputTypeService extends BaseDataService<InputType> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('InputType', serviceElementsFactory);\r\n  }\r\n\r\n  addInputTypes(inputTypes: InputType[]): void {\r\n    this.addManyToCache(inputTypes);\r\n  }\r\n\r\n  getInputType(type: string): InputType {\r\n    return this.cache$.value.find(inputType => inputType.Type === type);\r\n  }\r\n\r\n  getInputTypes(): InputType[] {\r\n    return this.cache$.value;\r\n  }\r\n\r\n  getInputTypes$(): Observable<InputType[]> {\r\n    return this.cache$.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { Observable } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { FieldSettings, FieldValue } from '../../../../edit-types';\r\nimport { InputType } from '../../../../ng-dialogs/src/app/content-type-fields/models/input-type.model';\r\nimport { FormValues } from '../../../eav-item-dialog/item-edit-form/item-edit-form.models';\r\nimport { BestValueModes } from '../../constants/localization.constants';\r\nimport { GeneralHelpers, InputFieldHelpers, LocalizationHelpers } from '../../helpers';\r\nimport { Language, SaveResult } from '../../models';\r\nimport { EavContentTypeAttribute, EavDimension, EavEntityAttributes, EavHeader, EavItem, EavValue } from '../../models/eav';\r\nimport { Item1 } from '../../models/json-format-v1';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ItemService extends BaseDataService<EavItem> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('Item', serviceElementsFactory);\r\n  }\r\n\r\n  loadItems(items1: Item1[]): void {\r\n    const items = items1.map(item1 => EavItem.convert(item1));\r\n    this.upsertManyInCache(items);\r\n  }\r\n\r\n  updateItemId(itemData: SaveResult): void {\r\n    const entityGuid = Object.keys(itemData)[0];\r\n    const entityId = itemData[entityGuid];\r\n    const oldItem = this.cache$.value.find(item => item.Entity.Guid === entityGuid);\r\n    if (!oldItem || (oldItem.Header.EntityId !== 0 && oldItem.Entity.Id !== 0)) { return; }\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Header: {\r\n        ...oldItem.Header,\r\n        EntityId: entityId,\r\n      },\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Id: entityId,\r\n      }\r\n    };\r\n    this.updateOneInCache(newItem);\r\n  }\r\n\r\n  addItemAttributeValue(\r\n    entityGuid: string,\r\n    attributeKey: string,\r\n    newValue: FieldValue,\r\n    currentLanguage: string,\r\n    isReadOnly: boolean,\r\n    attributeType: string,\r\n    isTransaction = false,\r\n    transactionItem?: EavItem,\r\n  ): EavItem {\r\n    const newValueDimension = isReadOnly ? `~${currentLanguage}` : currentLanguage;\r\n    const newEavValue = EavValue.create(newValue, [EavDimension.create(newValueDimension)]);\r\n    const oldItem = transactionItem ?? this.cache$.value.find(item => item.Entity.Guid === entityGuid);\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Attributes: LocalizationHelpers.addAttributeValue(oldItem.Entity.Attributes, newEavValue, attributeKey, attributeType),\r\n      }\r\n    };\r\n\r\n    if (!isTransaction) { this.updateOneInCache(newItem); }\r\n    return newItem;\r\n  }\r\n\r\n  updateItemAttributeValue(\r\n    entityGuid: string,\r\n    attributeKey: string,\r\n    newValue: FieldValue,\r\n    currentLanguage: string,\r\n    defaultLanguage: string,\r\n    isReadOnly: boolean,\r\n  ): void {\r\n    const oldItem = this.cache$.value.find(item => item.Entity.Guid === entityGuid);\r\n    if (!oldItem) { return; }\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Attributes: LocalizationHelpers.updateAttributeValue(\r\n          oldItem.Entity.Attributes, attributeKey, newValue, currentLanguage, defaultLanguage, isReadOnly,\r\n        ),\r\n      }\r\n    };\r\n    this.updateOneInCache(newItem);\r\n  }\r\n\r\n  updateItemAttributesValues(entityGuid: string, newValues: FormValues, currentLanguage: string, defaultLanguage: string): void {\r\n    const oldItem = this.cache$.value.find(item => item.Entity.Guid === entityGuid);\r\n    if (!oldItem) { return; }\r\n\r\n    const oldValues: FormValues = {};\r\n    for (const [name, values] of Object.entries(oldItem.Entity.Attributes)) {\r\n      if (!newValues.hasOwnProperty(name)) { continue; }\r\n      oldValues[name] = LocalizationHelpers.translate(currentLanguage, defaultLanguage, values, null);\r\n    }\r\n    const changes = GeneralHelpers.getFormChanges(oldValues, newValues);\r\n    if (changes == null) { return; }\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Attributes: LocalizationHelpers.updateAttributesValues(oldItem.Entity.Attributes, changes, currentLanguage, defaultLanguage),\r\n      }\r\n    };\r\n    this.updateOneInCache(newItem);\r\n  }\r\n\r\n  /**\r\n   * Update entity attribute dimension. Add readonly languageKey to existing useFromLanguageKey.\r\n   * Example to useFrom en-us add fr-fr = \"en-us,-fr-fr\"\r\n   */\r\n  addItemAttributeDimension(\r\n    entityGuid: string,\r\n    attributeKey: string,\r\n    currentLanguage: string,\r\n    shareWithLanguage: string,\r\n    defaultLanguage: string,\r\n    isReadOnly: boolean,\r\n    transactionItem?: EavItem,\r\n  ): void {\r\n    const oldItem = transactionItem ?? this.cache$.value.find(item => item.Entity.Guid === entityGuid);\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Attributes: LocalizationHelpers.addAttributeDimension(\r\n          oldItem.Entity.Attributes, attributeKey, currentLanguage, shareWithLanguage, defaultLanguage, isReadOnly,\r\n        ),\r\n      }\r\n    };\r\n    this.updateOneInCache(newItem);\r\n  }\r\n\r\n  removeItemAttributeDimension(\r\n    entityGuid: string,\r\n    attributeKey: string,\r\n    currentLanguage: string,\r\n    isTransaction = false,\r\n    transactionItem?: EavItem,\r\n  ): EavItem {\r\n    const oldItem = transactionItem ?? this.cache$.value.find(item => item.Entity.Guid === entityGuid);\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Attributes: LocalizationHelpers.removeAttributeDimension(oldItem.Entity.Attributes, attributeKey, currentLanguage),\r\n      }\r\n    };\r\n\r\n    if (!isTransaction) { this.updateOneInCache(newItem); }\r\n    return newItem;\r\n  }\r\n\r\n  updateItemHeader(entityGuid: string, header: EavHeader): void {\r\n    const oldItem = this.cache$.value.find(item => item.Entity.Guid === entityGuid);\r\n    if (!oldItem) { return; }\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Header: {\r\n        ...header\r\n      }\r\n    };\r\n    this.updateOneInCache(newItem);\r\n  }\r\n\r\n  getItemAttributes(entityGuid: string): EavEntityAttributes {\r\n    return this.cache$.value.find(item => item.Entity.Guid === entityGuid)?.Entity.Attributes;\r\n  }\r\n\r\n  getItemAttributes$(entityGuid: string): Observable<EavEntityAttributes> {\r\n    return this.cache$.pipe(\r\n      map(items => items.find(item => item.Entity.Guid === entityGuid)?.Entity.Attributes),\r\n      distinctUntilChanged(),\r\n    );\r\n  }\r\n\r\n  getItem(entityGuid: string): EavItem {\r\n    return this.cache$.value.find(item => item.Entity.Guid === entityGuid);\r\n  }\r\n\r\n  getItem$(entityGuid: string): Observable<EavItem> {\r\n    return this.cache$.pipe(\r\n      map(items => items.find(item => item.Entity.Guid === entityGuid)),\r\n      distinctUntilChanged(),\r\n    );\r\n  }\r\n\r\n  getItemHeader$(entityGuid: string): Observable<EavHeader> {\r\n    return this.cache$.pipe(\r\n      map(items => items.find(item => item.Entity.Guid === entityGuid)?.Header),\r\n      distinctUntilChanged(),\r\n    );\r\n  }\r\n\r\n  getItems(entityGuids?: string[]): EavItem[] {\r\n    if (entityGuids == null) { return this.cache$.value; }\r\n\r\n    return this.cache$.value.filter(item => entityGuids.includes(item.Entity.Guid));\r\n  }\r\n\r\n  getItems$(entityGuids?: string[]): Observable<EavItem[]> {\r\n    if (entityGuids == null) { return this.cache$.asObservable(); }\r\n\r\n    return this.cache$.pipe(\r\n      map(items => items.filter(item => entityGuids.includes(item.Entity.Guid))),\r\n      distinctUntilChanged(GeneralHelpers.arraysEqual),\r\n    );\r\n  }\r\n\r\n  setDefaultValue(\r\n    item: EavItem,\r\n    ctAttribute: EavContentTypeAttribute,\r\n    inputType: InputType,\r\n    settings: FieldSettings,\r\n    languages: Language[],\r\n    defaultLanguage: string,\r\n  ): void {\r\n    const defaultValue = InputFieldHelpers.parseDefaultValue(ctAttribute.Name, inputType, settings, item.Header);\r\n\r\n    const defaultLanguageValue = LocalizationHelpers.getBestValue(\r\n      item.Entity.Attributes[ctAttribute.Name],\r\n      defaultLanguage,\r\n      defaultLanguage,\r\n      BestValueModes.Strict,\r\n    );\r\n    if (defaultLanguageValue === undefined) {\r\n      if (languages.length === 0 || inputType?.DisableI18n) {\r\n        this.addItemAttributeValue(item.Entity.Guid, ctAttribute.Name, defaultValue, '*', false, ctAttribute.Type);\r\n      } else {\r\n        this.addItemAttributeValue(item.Entity.Guid, ctAttribute.Name, defaultValue, defaultLanguage, false, ctAttribute.Type);\r\n      }\r\n    } else {\r\n      // most likely used only for entity fields because we can never know if they were cleaned out or brand new\r\n      if (languages.length === 0 || inputType?.DisableI18n) {\r\n        this.updateItemAttributeValue(item.Entity.Guid, ctAttribute.Name, defaultValue, '*', defaultLanguage, false);\r\n      } else {\r\n        this.updateItemAttributeValue(item.Entity.Guid, ctAttribute.Name, defaultValue, defaultLanguage, defaultLanguage, false);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { Observable } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { LanguageInstance } from '../../models';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LanguageInstanceService extends BaseDataService<LanguageInstance> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('LanguageInstance', serviceElementsFactory);\r\n  }\r\n\r\n  addLanguageInstance(formId: number, currentLanguage: string, defaultLanguage: string, uiLanguage: string, hideHeader: boolean): void {\r\n    const languageInstance: LanguageInstance = { formId, currentLanguage, defaultLanguage, uiLanguage, hideHeader };\r\n    this.addOneToCache(languageInstance);\r\n  }\r\n\r\n  removeLanguageInstance(formId: number): void {\r\n    this.removeOneFromCache(formId);\r\n  }\r\n\r\n  setCurrentLanguage(formId: number, newLanguage: string): void {\r\n    const languageInstance: Partial<LanguageInstance> = { formId, currentLanguage: newLanguage };\r\n    this.updateOneInCache(languageInstance);\r\n  }\r\n\r\n  getCurrentLanguage(formId: number): string {\r\n    return this.cache$.value.find(languageInstance => languageInstance.formId === formId)?.currentLanguage;\r\n  }\r\n\r\n  getCurrentLanguage$(formId: number): Observable<string> {\r\n    return this.cache$.pipe(\r\n      map(languageInstances => languageInstances.find(languageInstance => languageInstance.formId === formId)?.currentLanguage),\r\n      distinctUntilChanged(),\r\n    );\r\n  }\r\n\r\n  getDefaultLanguage(formId: number): string {\r\n    return this.cache$.value.find(languageInstance => languageInstance.formId === formId)?.defaultLanguage;\r\n  }\r\n\r\n  getDefaultLanguage$(formId: number): Observable<string> {\r\n    return this.cache$.pipe(\r\n      map(languageInstances => languageInstances.find(languageInstance => languageInstance.formId === formId)?.defaultLanguage),\r\n      distinctUntilChanged(),\r\n    );\r\n  }\r\n\r\n  /** Get hideHeader for the form. Fix for safari and mobile browsers */\r\n  getHideHeader$(formId: number): Observable<boolean> {\r\n    return this.cache$.pipe(\r\n      map(languageInstances => languageInstances.find(languageInstance => languageInstance.formId === formId)?.hideHeader),\r\n      distinctUntilChanged(),\r\n    );\r\n  }\r\n\r\n  /** Update hideHeader for the form. Fix for safari and mobile browsers */\r\n  updateHideHeader(formId: number, hideHeader: boolean): void {\r\n    const languageInstance: Partial<LanguageInstance> = { formId, hideHeader };\r\n    this.updateOneInCache(languageInstance);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { Observable } from 'rxjs';\r\nimport { BaseDataService } from '.';\r\nimport { Language } from '../../models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LanguageService extends BaseDataService<Language> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('Language', serviceElementsFactory);\r\n  }\r\n\r\n  loadLanguages(languages: Language[]): void {\r\n    this.addAllToCache(languages);\r\n  }\r\n\r\n  getLanguages(): Language[] {\r\n    return this.cache$.value;\r\n  }\r\n\r\n  getLanguages$(): Observable<Language[]> {\r\n    return this.cache$.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { AdamItem } from '../../../../edit-types';\r\nimport { PrefetchAdams, PrefetchLinks } from '../../../eav-item-dialog/multi-item-edit-form/multi-item-edit-form.models';\r\nimport { LinkCache, LinkInfo } from '../../models';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LinkCacheService extends BaseDataService<LinkCache> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('LinkCache', serviceElementsFactory);\r\n  }\r\n\r\n  loadPrefetch(prefetchLinks: PrefetchLinks, prefetchAdam: PrefetchAdams): void {\r\n    const links: LinkCache[] = [];\r\n\r\n    if (prefetchLinks != null) {\r\n      for (const [key, linkInfo] of Object.entries(prefetchLinks)) {\r\n        const link: LinkCache = {\r\n          key,\r\n          linkInfo,\r\n        };\r\n        links.push(link);\r\n      }\r\n    }\r\n\r\n    if (prefetchAdam != null) {\r\n      for (const [entityGuid, prefetchFields] of Object.entries(prefetchAdam)) {\r\n        for (const [fieldName, items] of Object.entries(prefetchFields)) {\r\n          const adamLinks = this.adamToLinks(items);\r\n          links.push(...adamLinks);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.upsertManyInCache(links);\r\n  }\r\n\r\n  loadAdam(items: AdamItem[]): void {\r\n    const adamLinks = this.adamToLinks(items);\r\n    this.upsertManyInCache(adamLinks);\r\n  }\r\n\r\n  loadLink(key: string, linkInfo: LinkInfo): void {\r\n    key = key.trim().toLocaleLowerCase();\r\n    const link: LinkCache = {\r\n      key,\r\n      linkInfo: {\r\n        ...linkInfo,\r\n        Adam: {\r\n          ...linkInfo.Adam,\r\n        },\r\n      },\r\n    };\r\n    this.upsertOneInCache(link);\r\n  }\r\n\r\n  getLinkInfo(key: string): LinkInfo {\r\n    key = key.trim().toLocaleLowerCase();\r\n    return this.cache$.value.find(linkCache => linkCache.key.trim().toLocaleLowerCase() === key)?.linkInfo;\r\n  }\r\n\r\n  private adamToLinks(items: AdamItem[]): LinkCache[] {\r\n    const links: LinkCache[] = [];\r\n\r\n    for (const item of items) {\r\n      if (item.IsFolder) { continue; }\r\n\r\n      const link: LinkCache = {\r\n        key: item.ReferenceId,\r\n        linkInfo: {\r\n          Adam: { ...item },\r\n          Value: item.Url,\r\n        },\r\n      };\r\n      links.push(link);\r\n    }\r\n\r\n    return links;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { Observable } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { PublishMode, PublishModeConstants, PublishStatus } from '../../models';\r\nimport { EavService } from '../../services';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PublishStatusService extends BaseDataService<PublishStatus> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('PublishStatus', serviceElementsFactory);\r\n  }\r\n\r\n  setPublishStatus(publishStatus: PublishStatus): void {\r\n    this.upsertOneInCache(publishStatus);\r\n  }\r\n\r\n  removePublishStatus(formId: number): void {\r\n    this.removeOneFromCache(formId);\r\n  }\r\n\r\n  getPublishStatus(formId: number): PublishStatus {\r\n    return this.cache$.value.find(publishStatus => publishStatus.formId === formId);\r\n  }\r\n\r\n  private getPublishStatus$(formId: number): Observable<PublishStatus> {\r\n    return this.cache$.pipe(\r\n      map(publishStatuses => publishStatuses.find(publishStatus => publishStatus.formId === formId)),\r\n      distinctUntilChanged(),\r\n    );\r\n  }\r\n\r\n  setPublishMode(publishMode: PublishMode, formId: number, eavService: EavService): void {\r\n    // if publish mode is prohibited, set default\r\n    if (eavService.eavConfig.versioningOptions[publishMode] == null) {\r\n      publishMode = Object.keys(eavService.eavConfig.versioningOptions)[0] as PublishMode;\r\n    }\r\n    const publishStatus: PublishStatus = {\r\n      formId,\r\n      DraftShouldBranch: publishMode === PublishModeConstants.Branch,\r\n      IsPublished: publishMode === PublishModeConstants.Show,\r\n    };\r\n    this.setPublishStatus(publishStatus);\r\n  }\r\n\r\n  getPublishMode$(formId: number): Observable<PublishMode> {\r\n    return this.getPublishStatus$(formId).pipe(\r\n      map(publishStatus => {\r\n        const publishMode: PublishMode = publishStatus.DraftShouldBranch\r\n          ? PublishModeConstants.Branch\r\n          : publishStatus.IsPublished ? PublishModeConstants.Show : PublishModeConstants.Hide;\r\n        return publishMode;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { Observable } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { QueryEntity } from '../../../eav-material-controls/input-types/entity/entity-query/entity-query.models';\r\nimport { GeneralHelpers } from '../../helpers';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class StringQueryCacheService extends BaseDataService<QueryEntity> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('StringQueryCache', serviceElementsFactory);\r\n  }\r\n\r\n  loadEntities(entities: QueryEntity[]): void {\r\n    if (entities == null) { return; }\r\n    this.upsertManyInCache(entities);\r\n  }\r\n\r\n  getEntities$(guids?: string[]): Observable<QueryEntity[]> {\r\n    if (guids == null) {\r\n      return this.cache$.asObservable();\r\n    }\r\n\r\n    return this.cache$.pipe(\r\n      map(entities => entities.filter(entity => guids.includes(entity.Guid))),\r\n      distinctUntilChanged(GeneralHelpers.arraysEqual),\r\n    );\r\n  }\r\n}\r\n","export const prefix = 'eav-';\r\nexport const keyZoneId = prefix + 'zoneId';\r\nexport const keyRequestToken = prefix + 'rvt';\r\nexport const keyTabId = prefix + 'tid';\r\nexport const keyContentBlockId = prefix + 'cbid';\r\nexport const keyModuleId = prefix + 'mid';\r\nexport const keyAppId = prefix + 'appId';\r\nexport const keyDebug = prefix + 'debug';\r\nexport const keyDialog = prefix + 'dialog';\r\nexport const keyContentType = prefix + 'contentType';\r\nexport const keyItems = prefix + 'items';\r\nexport const keyPartOfPage = prefix + 'partOfPage';\r\n// 2020-12-01 2dm - not in url any more in 2sxc 11.10.02+, remove this\r\n// Keep in this comment in till January 2021 in case something breaks\r\n// the commit where this was added contains all the changes related to this\r\n// export const keyPortalRoot = prefix + 'portalroot';\r\nexport const keyPublishing = prefix + 'publishing';\r\nexport const keyFilters = prefix + 'filters';\r\nexport const keyPipelineId = prefix + 'pipelineId';\r\nexport const keyApi = prefix + 'api';\r\n\r\n/** Url which opened the dialog. Used for debugging */\r\nexport const keyUrl = prefix + 'url';\r\n\r\n/** This is used by file editor to determine if it's editing shared files or of that portal only */\r\nexport const keyIsShared = prefix + 'isshared';\r\n","import { environment } from '../../../environments/environment';\r\n\r\n/** Console log that doesn't show in Angular production mode */\r\nexport function consoleLogAngular(message?: any, ...optionalParams: any[]) {\r\n  if (environment.production) { return; }\r\n\r\n  console.groupCollapsed(message, ...optionalParams);\r\n  // tslint:disable-next-line:no-console\r\n  console.trace();\r\n  console.groupEnd();\r\n}\r\n","export const componentMetadataKey = 'componentMetadata';\r\n","export enum FeaturesConstants {\r\n  PasteWithFormatting = '1b13e0e6-a346-4454-a1e6-2fb18c047d20',\r\n  PasteImageFromClipboard = 'f6b8d6da-4744-453b-9543-0de499aa2352',\r\n}\r\n","export enum TranslationLinkConstants {\r\n  Translate = 'Translate',\r\n  DontTranslate = 'DontTranslate',\r\n  MissingDefaultLangValue = 'MissingDefaultLangValue',\r\n  LinkReadOnly = 'LinkReadOnly',\r\n  LinkReadWrite = 'LinkReadWrite',\r\n  LinkCopyFrom = 'LinkCopyFrom',\r\n}\r\n","import { ActivatedRoute } from '@angular/router';\r\nimport { Dictionary } from '../../../ng-dialogs/src/app/shared/models/dictionary.model';\r\nimport { EavConfig } from '../models';\r\n\r\nexport class UrlHelpers {\r\n\r\n  static stripNonUrlCharacters(controlValue: string, allowPath: boolean, trimEnd: boolean) {\r\n    if (!controlValue) { return ''; }\r\n\r\n    const rexSeparators = allowPath ? /[^a-z0-9-_/]+/gi : /[^a-z0-9-_]+/gi;\r\n    const latinized = this.latinizeText(controlValue.toLowerCase());\r\n    const cleanInputValue = latinized\r\n      .replace(`'s `, 's ') // neutralize it's, daniel's etc. but only if followed by a space, to ensure we don't kill quotes\r\n      .replace('\\\\', '/') // neutralize slash representation\r\n      .replace(rexSeparators, '-') // replace everything we don't want with a -\r\n      .replace(/-+/gi, '-') // reduce multiple '-'\r\n      .replace(/\\/+/gi, '/') // reduce multiple slashes\r\n      .replace(/-*\\/-*/gi, '/') // reduce '-/' or '/-' combinations to a simple '/'\r\n      .replace(trimEnd ? /^-|-+$/gi : /^-/gi, ''); // trim front and maybe end '-'\r\n    return cleanInputValue;\r\n  }\r\n\r\n  static latinizeText(input: string) {\r\n    const latinMap: Dictionary<string> = {\r\n      Á: 'A', Ă: 'A', Ắ: 'A', Ặ: 'A', Ằ: 'A', Ẳ: 'A', Ẵ: 'A', Ǎ: 'A', Â: 'A', Ấ: 'A', Ậ: 'A',\r\n      Ầ: 'A', Ẩ: 'A', Ẫ: 'A', Ä: 'Ae', Ǟ: 'A', Ȧ: 'A', Ǡ: 'A', Ạ: 'A', Ȁ: 'A', À: 'A', Ả: 'A', Ȃ: 'A',\r\n      Ā: 'A', Ą: 'A', Å: 'A', Ǻ: 'A', Ḁ: 'A', Ⱥ: 'A', Ã: 'A', Ꜳ: 'AA', Æ: 'AE', Ǽ: 'AE', Ǣ: 'AE',\r\n      Ꜵ: 'AO', Ꜷ: 'AU', Ꜹ: 'AV', Ꜻ: 'AV', Ꜽ: 'AY', Ḃ: 'B', Ḅ: 'B', Ɓ: 'B', Ḇ: 'B', Ƀ: 'B',\r\n      Ƃ: 'B', Ć: 'C', Č: 'C', Ç: 'C', Ḉ: 'C', Ĉ: 'C', Ċ: 'C', Ƈ: 'C', Ȼ: 'C', Ď: 'D', Ḑ: 'D',\r\n      Ḓ: 'D', Ḋ: 'D', Ḍ: 'D', Ɗ: 'D', Ḏ: 'D', ǲ: 'D', ǅ: 'D', Đ: 'D', Ƌ: 'D', Ǳ: 'DZ', Ǆ: 'DZ',\r\n      É: 'E', Ĕ: 'E', Ě: 'E', Ȩ: 'E', Ḝ: 'E', Ê: 'E', Ế: 'E', Ệ: 'E', Ề: 'E', Ể: 'E', Ễ: 'E', Ḙ: 'E',\r\n      Ë: 'E', Ė: 'E', Ẹ: 'E', Ȅ: 'E', È: 'E', Ẻ: 'E', Ȇ: 'E', Ē: 'E', Ḗ: 'E', Ḕ: 'E', Ę: 'E', Ɇ: 'E',\r\n      Ẽ: 'E', Ḛ: 'E', Ꝫ: 'ET', Ḟ: 'F', Ƒ: 'F', Ǵ: 'G', Ğ: 'G', Ǧ: 'G', Ģ: 'G', Ĝ: 'G', Ġ: 'G', Ɠ: 'G',\r\n      Ḡ: 'G', Ǥ: 'G', Ḫ: 'H', Ȟ: 'H', Ḩ: 'H', Ĥ: 'H', Ⱨ: 'H', Ḧ: 'H', Ḣ: 'H', Ḥ: 'H', Ħ: 'H', Í: 'I',\r\n      Ĭ: 'I', Ǐ: 'I', Î: 'I', Ï: 'I', Ḯ: 'I', İ: 'I', Ị: 'I', Ȉ: 'I', Ì: 'I', Ỉ: 'I', Ȋ: 'I', Ī: 'I',\r\n      Į: 'I', Ɨ: 'I', Ĩ: 'I', Ḭ: 'I', Ꝺ: 'D', Ꝼ: 'F', Ᵹ: 'G', Ꞃ: 'R', Ꞅ: 'S', Ꞇ: 'T', Ꝭ: 'IS', Ĵ: 'J',\r\n      Ɉ: 'J', Ḱ: 'K', Ǩ: 'K', Ķ: 'K', Ⱪ: 'K', Ꝃ: 'K', Ḳ: 'K', Ƙ: 'K', Ḵ: 'K', Ꝁ: 'K', Ꝅ: 'K', Ĺ: 'L',\r\n      Ƚ: 'L', Ľ: 'L', Ļ: 'L', Ḽ: 'L', Ḷ: 'L', Ḹ: 'L', Ⱡ: 'L', Ꝉ: 'L', Ḻ: 'L', Ŀ: 'L', Ɫ: 'L', ǈ: 'L',\r\n      Ł: 'L', Ǉ: 'LJ', Ḿ: 'M', Ṁ: 'M', Ṃ: 'M', Ɱ: 'M', Ń: 'N', Ň: 'N', Ņ: 'N', Ṋ: 'N', Ṅ: 'N', Ṇ: 'N',\r\n      Ǹ: 'N', Ɲ: 'N', Ṉ: 'N', Ƞ: 'N', ǋ: 'N', Ñ: 'N', Ǌ: 'NJ', Ó: 'O', Ŏ: 'O', Ǒ: 'O', Ô: 'O', Ố: 'O',\r\n      Ộ: 'O', Ồ: 'O', Ổ: 'O', Ỗ: 'O', Öe: 'O', Ȫ: 'O', Ȯ: 'O', Ȱ: 'O', Ọ: 'O', Ő: 'O', Ȍ: 'O', Ò: 'O',\r\n      Ỏ: 'O', Ơ: 'O', Ớ: 'O', Ợ: 'O', Ờ: 'O', Ở: 'O', Ỡ: 'O', Ȏ: 'O', Ꝋ: 'O', Ꝍ: 'O', Ō: 'O', Ṓ: 'O',\r\n      Ṑ: 'O', Ɵ: 'O', Ǫ: 'O', Ǭ: 'O', Ø: 'O', Ǿ: 'O', Õ: 'O', Ṍ: 'O', Ṏ: 'O', Ȭ: 'O', Ƣ: 'OI', Ꝏ: 'OO',\r\n      Ɛ: 'E', Ɔ: 'O', Ȣ: 'OU', Ṕ: 'P', Ṗ: 'P', Ꝓ: 'P', Ƥ: 'P', Ꝕ: 'P', Ᵽ: 'P', Ꝑ: 'P', Ꝙ: 'Q', Ꝗ: 'Q',\r\n      Ŕ: 'R', Ř: 'R', Ŗ: 'R', Ṙ: 'R', Ṛ: 'R', Ṝ: 'R', Ȑ: 'R', Ȓ: 'R', Ṟ: 'R', Ɍ: 'R', Ɽ: 'R', Ꜿ: 'C',\r\n      Ǝ: 'E', Ś: 'S', Ṥ: 'S', Š: 'S', Ṧ: 'S', Ş: 'S', Ŝ: 'S', Ș: 'S', Ṡ: 'S', Ṣ: 'S', Ṩ: 'S', Ť: 'T',\r\n      Ţ: 'T', Ṱ: 'T', Ț: 'T', Ⱦ: 'T', Ṫ: 'T', Ṭ: 'T', Ƭ: 'T', Ṯ: 'T', Ʈ: 'T', Ŧ: 'T', Ɐ: 'A', Ꞁ: 'L',\r\n      Ɯ: 'M', Ʌ: 'V', Ꜩ: 'TZ', Ú: 'U', Ŭ: 'U', Ǔ: 'U', Û: 'U', Ṷ: 'U', Ü: 'Ue', Ǘ: 'U', Ǚ: 'U', Ǜ: 'U',\r\n      Ǖ: 'U', Ṳ: 'U', Ụ: 'U', Ű: 'U', Ȕ: 'U', Ù: 'U', Ủ: 'U', Ư: 'U', Ứ: 'U', Ự: 'U', Ừ: 'U', Ử: 'U',\r\n      Ữ: 'U', Ȗ: 'U', Ū: 'U', Ṻ: 'U', Ų: 'U', Ů: 'U', Ũ: 'U', Ṹ: 'U', Ṵ: 'U', Ꝟ: 'V', Ṿ: 'V', Ʋ: 'V',\r\n      Ṽ: 'V', Ꝡ: 'VY', Ẃ: 'W', Ŵ: 'W', Ẅ: 'W', Ẇ: 'W', Ẉ: 'W', Ẁ: 'W', Ⱳ: 'W', Ẍ: 'X', Ẋ: 'X', Ý: 'Y',\r\n      Ŷ: 'Y', Ÿ: 'Y', Ẏ: 'Y', Ỵ: 'Y', Ỳ: 'Y', Ƴ: 'Y', Ỷ: 'Y', Ỿ: 'Y', Ȳ: 'Y', Ɏ: 'Y', Ỹ: 'Y', Ź: 'Z',\r\n      Ž: 'Z', Ẑ: 'Z', Ⱬ: 'Z', Ż: 'Z', Ẓ: 'Z', Ȥ: 'Z', Ẕ: 'Z', Ƶ: 'Z', Ĳ: 'IJ', Œ: 'OE', ᴀ: 'A', ᴁ: 'AE',\r\n      ʙ: 'B', ᴃ: 'B', ᴄ: 'C', ᴅ: 'D', ᴇ: 'E', ꜰ: 'F', ɢ: 'G', ʛ: 'G', ʜ: 'H', ɪ: 'I', ʁ: 'R', ᴊ: 'J',\r\n      ᴋ: 'K', ʟ: 'L', ᴌ: 'L', ᴍ: 'M', ɴ: 'N', ᴏ: 'O', ɶ: 'OE', ᴐ: 'O', ᴕ: 'OU', ᴘ: 'P', ʀ: 'R', ᴎ: 'N',\r\n      ᴙ: 'R', ꜱ: 'S', ᴛ: 'T', ⱻ: 'E', ᴚ: 'R', ᴜ: 'U', ᴠ: 'V', ᴡ: 'W', ʏ: 'Y', ᴢ: 'Z', á: 'a', ă: 'a',\r\n      ắ: 'a', ặ: 'a', ằ: 'a', ẳ: 'a', ẵ: 'a', ǎ: 'a', â: 'a', ấ: 'a', ậ: 'a', ầ: 'a', ẩ: 'a', ẫ: 'a',\r\n      ä: 'ae', ǟ: 'a', ȧ: 'a', ǡ: 'a', ạ: 'a', ȁ: 'a', à: 'a', ả: 'a', ȃ: 'a', ā: 'a', ą: 'a', ᶏ: 'a',\r\n      ẚ: 'a', å: 'a', ǻ: 'a',\r\n      ḁ: 'a', ⱥ: 'a', ã: 'a', ꜳ: 'aa', æ: 'ae', ǽ: 'ae', ǣ: 'ae', ꜵ: 'ao', ꜷ: 'au', ꜹ: 'av', ꜻ: 'av',\r\n      ꜽ: 'ay', ḃ: 'b', ḅ: 'b', ɓ: 'b', ḇ: 'b', ᵬ: 'b', ᶀ: 'b', ƀ: 'b', ƃ: 'b', ɵ: 'o', ć: 'c', č: 'c',\r\n      ç: 'c', ḉ: 'c', ĉ: 'c', ɕ: 'c', ċ: 'c', ƈ: 'c', ȼ: 'c', ď: 'd', ḑ: 'd', ḓ: 'd', ȡ: 'd', ḋ: 'd',\r\n      ḍ: 'd', ɗ: 'd', ᶑ: 'd', ḏ: 'd', ᵭ: 'd', ᶁ: 'd', đ: 'd', ɖ: 'd', ƌ: 'd', ı: 'i', ȷ: 'j', ɟ: 'j',\r\n      ʄ: 'j', ǳ: 'dz', ǆ: 'dz', é: 'e', ĕ: 'e', ě: 'e', ȩ: 'e', ḝ: 'e', ê: 'e', ế: 'e', ệ: 'e', ề: 'e',\r\n      ể: 'e', ễ: 'e', ḙ: 'e', ë: 'e', ė: 'e', ẹ: 'e', ȅ: 'e', è: 'e', ẻ: 'e', ȇ: 'e', ē: 'e', ḗ: 'e',\r\n      ḕ: 'e', ⱸ: 'e', ę: 'e', ᶒ: 'e', ɇ: 'e', ẽ: 'e', ḛ: 'e', ꝫ: 'et', ḟ: 'f', ƒ: 'f', ᵮ: 'f', ᶂ: 'f',\r\n      ǵ: 'g', ğ: 'g', ǧ: 'g', ģ: 'g', ĝ: 'g', ġ: 'g', ɠ: 'g', ḡ: 'g', ᶃ: 'g', ǥ: 'g', ḫ: 'h', ȟ: 'h',\r\n      ḩ: 'h', ĥ: 'h', ⱨ: 'h', ḧ: 'h', ḣ: 'h', ḥ: 'h', ɦ: 'h', ẖ: 'h', ħ: 'h', ƕ: 'hv', í: 'i', ĭ: 'i',\r\n      ǐ: 'i', î: 'i', ï: 'i', ḯ: 'i', ị: 'i', ȉ: 'i', ì: 'i', ỉ: 'i', ȋ: 'i', ī: 'i', į: 'i', ᶖ: 'i',\r\n      ɨ: 'i', ĩ: 'i', ḭ: 'i', ꝺ: 'd', ꝼ: 'f', ᵹ: 'g', ꞃ: 'r', ꞅ: 's', ꞇ: 't', ꝭ: 'is', ǰ: 'j', ĵ: 'j',\r\n      ʝ: 'j', ɉ: 'j', ḱ: 'k', ǩ: 'k', ķ: 'k', ⱪ: 'k', ꝃ: 'k', ḳ: 'k', ƙ: 'k', ḵ: 'k', ᶄ: 'k', ꝁ: 'k',\r\n      ꝅ: 'k', ĺ: 'l', ƚ: 'l', ɬ: 'l', ľ: 'l', ļ: 'l', ḽ: 'l', ȴ: 'l', ḷ: 'l', ḹ: 'l', ⱡ: 'l', ꝉ: 'l',\r\n      ḻ: 'l', ŀ: 'l', ɫ: 'l', ᶅ: 'l', ɭ: 'l', ł: 'l', ǉ: 'lj', ſ: 's', ẜ: 's', ẛ: 's', ẝ: 's', ḿ: 'm',\r\n      ṁ: 'm', ṃ: 'm', ɱ: 'm', ᵯ: 'm', ᶆ: 'm', ń: 'n', ň: 'n', ņ: 'n', ṋ: 'n', ȵ: 'n', ṅ: 'n', ṇ: 'n',\r\n      ǹ: 'n', ɲ: 'n', ṉ: 'n', ƞ: 'n', ᵰ: 'n', ᶇ: 'n', ɳ: 'n', ñ: 'n', ǌ: 'nj', ó: 'o', ŏ: 'o', ǒ: 'o',\r\n      ô: 'o', ố: 'o', ộ: 'o', ồ: 'o', ổ: 'o', ỗ: 'o', ö: 'oe', ȫ: 'o', ȯ: 'o', ȱ: 'o', ọ: 'o', ő: 'o',\r\n      ȍ: 'o', ò: 'o', ỏ: 'o', ơ: 'o', ớ: 'o', ợ: 'o', ờ: 'o', ở: 'o', ỡ: 'o', ȏ: 'o', ꝋ: 'o', ꝍ: 'o',\r\n      ⱺ: 'o', ō: 'o', ṓ: 'o', ṑ: 'o', ǫ: 'o', ǭ: 'o', ø: 'o', ǿ: 'o', õ: 'o', ṍ: 'o', ṏ: 'o', ȭ: 'o',\r\n      ƣ: 'oi', ꝏ: 'oo', ɛ: 'e', ᶓ: 'e', ɔ: 'o', ᶗ: 'o', ȣ: 'ou', ṕ: 'p', ṗ: 'p', ꝓ: 'p', ƥ: 'p', ᵱ: 'p',\r\n      ᶈ: 'p', ꝕ: 'p', ᵽ: 'p', ꝑ: 'p', ꝙ: 'q', ʠ: 'q', ɋ: 'q', ꝗ: 'q', ŕ: 'r', ř: 'r', ŗ: 'r', ṙ: 'r',\r\n      ṛ: 'r', ṝ: 'r', ȑ: 'r', ɾ: 'r', ᵳ: 'r', ȓ: 'r', ṟ: 'r', ɼ: 'r', ᵲ: 'r', ᶉ: 'r', ɍ: 'r', ɽ: 'r',\r\n      ↄ: 'c', ꜿ: 'c', ɘ: 'e', ɿ: 'r', ß: 'ss', ś: 's', ṥ: 's', š: 's', ṧ: 's', ş: 's', ŝ: 's', ș: 's',\r\n      ṡ: 's', ṣ: 's', ṩ: 's', ʂ: 's', ᵴ: 's', ᶊ: 's', ȿ: 's', ɡ: 'g', ᴑ: 'o', ᴓ: 'o', ᴝ: 'u', ť: 't',\r\n      ţ: 't', ṱ: 't', ț: 't', ȶ: 't', ẗ: 't', ⱦ: 't', ṫ: 't', ṭ: 't', ƭ: 't', ṯ: 't', ᵵ: 't', ƫ: 't',\r\n      ʈ: 't', ŧ: 't', ᵺ: 'th', ɐ: 'a', ᴂ: 'ae', ǝ: 'e', ᵷ: 'g', ɥ: 'h', ʮ: 'h', ʯ: 'h', ᴉ: 'i', ʞ: 'k',\r\n      ꞁ: 'l', ɯ: 'm', ɰ: 'm', ᴔ: 'oe', ɹ: 'r', ɻ: 'r', ɺ: 'r', ⱹ: 'r', ʇ: 't', ʌ: 'v', ʍ: 'w', ʎ: 'y',\r\n      ꜩ: 'tz', ú: 'u', ŭ: 'u', ǔ: 'u', û: 'u', ṷ: 'u', ü: 'ue', ǘ: 'u', ǚ: 'u', ǜ: 'u', ǖ: 'u', ṳ: 'u',\r\n      ụ: 'u', ű: 'u', ȕ: 'u', ù: 'u', ủ: 'u', ư: 'u', ứ: 'u', ự: 'u', ừ: 'u', ử: 'u', ữ: 'u', ȗ: 'u',\r\n      ū: 'u', ṻ: 'u', ų: 'u', ᶙ: 'u', ů: 'u', ũ: 'u', ṹ: 'u', ṵ: 'u', ᵫ: 'ue', ꝸ: 'um', ⱴ: 'v', ꝟ: 'v',\r\n      ṿ: 'v', ʋ: 'v', ᶌ: 'v', ⱱ: 'v', ṽ: 'v', ꝡ: 'vy', ẃ: 'w', ŵ: 'w', ẅ: 'w', ẇ: 'w', ẉ: 'w', ẁ: 'w',\r\n      ⱳ: 'w', ẘ: 'w', ẍ: 'x', ẋ: 'x', ᶍ: 'x', ý: 'y', ŷ: 'y', ÿ: 'y', ẏ: 'y', ỵ: 'y', ỳ: 'y', ƴ: 'y',\r\n      ỷ: 'y', ỿ: 'y', ȳ: 'y', ẙ: 'y', ɏ: 'y', ỹ: 'y', ź: 'z', ž: 'z', ẑ: 'z', ʑ: 'z', ⱬ: 'z', ż: 'z',\r\n      ẓ: 'z', ȥ: 'z', ẕ: 'z', ᵶ: 'z', ᶎ: 'z', ʐ: 'z', ƶ: 'z', ɀ: 'z', ﬀ: 'ff', ﬃ: 'ffi', ﬄ: 'ffl', ﬁ: 'fi',\r\n      ﬂ: 'fl', ĳ: 'ij', œ: 'oe', ﬆ: 'st', ₐ: 'a', ₑ: 'e', ᵢ: 'i', ⱼ: 'j', ₒ: 'o', ᵣ: 'r', ᵤ: 'u', ᵥ: 'v',\r\n      ₓ: 'x',\r\n    };\r\n    return input.replace(/[^A-Za-z0-9\\[\\] ]/g, (a) => (latinMap[a] || a));\r\n  }\r\n\r\n  static readQueryStringParameters(url: string): Dictionary<string> {\r\n    const queryParams: Dictionary<string> = {};\r\n    url.split('&').forEach(f => {\r\n      if (f.split('=').length === 2) {\r\n        queryParams[f.split('=')[0]] = decodeURIComponent(f.split('=')[1].replace(/\\+/g, ' '));\r\n      }\r\n    });\r\n    return queryParams;\r\n  }\r\n\r\n  /** https://stackoverflow.com/questions/979975/how-to-get-the-value-from-the-get-parameters/1099670#1099670 */\r\n  static getUrlParams(qs: string) {\r\n    qs = qs.split('+').join(' ');\r\n\r\n    const params: Dictionary<string> = {};\r\n    let tokens;\r\n    const re = /[?&]?([^=]+)=([^&]*)/g;\r\n\r\n    // tslint:disable-next-line:no-conditional-assignment\r\n    while (tokens = re.exec(qs)) {\r\n      params[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  static replaceUrlParam(url: string, paramName: string, paramValue: string) {\r\n    if (paramValue === null) { paramValue = ''; }\r\n\r\n    const pattern = new RegExp('\\\\b(' + paramName + '=).*?(&|#|$)');\r\n    if (url.search(pattern) >= 0) { return url.replace(pattern, '$1' + paramValue + '$2'); }\r\n\r\n    url = url.replace(/[?#]$/, '');\r\n    return url + (url.indexOf('?') > 0 ? '&' : '?') + paramName + '=' + paramValue;\r\n  }\r\n\r\n  static getUrlPrefix(area: 'system' | 'zone' | 'app', eavConfig: EavConfig) {\r\n    let result = '';\r\n\r\n    if (area === 'system') { result = eavConfig.systemRoot; } // used to link to JS-stuff and similar\r\n    if (area === 'zone') { result = eavConfig.portalRoot; } // used to link to the site-root (like an image)\r\n    if (area === 'app') { result = eavConfig.appRoot; } // used to find the app-root of something inside an app\r\n    if (result.endsWith('/')) { result = result.substring(0, result.length - 1); }\r\n\r\n    return result;\r\n  }\r\n\r\n  static calculatePathFromRoot(route: ActivatedRoute) {\r\n    let lastChild = route;\r\n    while (lastChild.firstChild) {\r\n      lastChild = lastChild.firstChild;\r\n    }\r\n    let pathFromRoot = '';\r\n    for (const path of lastChild.snapshot.pathFromRoot) {\r\n      if (path.url.length <= 0) { continue; }\r\n      for (const urlSegment of path.url) {\r\n        if (!urlSegment.path) { continue; }\r\n        pathFromRoot += '/' + urlSegment.path;\r\n      }\r\n    }\r\n    return pathFromRoot;\r\n  }\r\n}\r\n","export type EavMetadataKey = 'attribute' | 'app' | 'entity' | 'contentType' | 'zone' | 'cmsObject';\r\nexport type EavKeyTypeKey = 'guid' | 'string' | 'number';\r\nexport interface EavScopeOption { name: string; value: string; }\r\n\r\nexport const eavConstants = {\r\n  metadata: {\r\n    /** metadataOfAttribute */\r\n    attribute: { type: 2, target: 'EAV Field Properties' },\r\n    /** metadataOfApp */\r\n    app: { type: 3, target: 'App' },\r\n    /** metadataOfEntity */\r\n    entity: { type: 4, target: 'Entity' },\r\n    /** metadataOfContentType */\r\n    contentType: { type: 5, target: 'ContentType' },\r\n    /** metadataOfZone */\r\n    zone: { type: 6, target: 'Zone' },\r\n    /** metadataOfCmsObject */\r\n    cmsObject: { type: 10, target: 'CmsObject' },\r\n  },\r\n\r\n  /** Loopup type for the metadata, e.g. key=80adb152-efad-4aa4-855e-74c5ef230e1f is keyType=guid */\r\n  keyTypes: {\r\n    guid: 'guid',\r\n    string: 'string',\r\n    number: 'number',\r\n  },\r\n\r\n  /** Scopes */\r\n  scopes: {\r\n    /** This is the main schema and the data you usually see is from here */\r\n    default: { name: 'Default', value: '2SexyContent' },\r\n    /** This contains content-types for configuration, settings and resources of the app */\r\n    app: { name: 'System: App', value: '2SexyContent-App' },\r\n  },\r\n\r\n  /** Content types where templates, permissions, etc. are stored */\r\n  contentTypes: {\r\n    /** Content type containing app templates (views) */\r\n    template: '2SexyContent-Template',\r\n    /** Content type containing permissions */\r\n    permissions: 'PermissionConfiguration',\r\n    /** Content type containing queries */\r\n    query: 'DataPipeline',\r\n    /** Content type containing content type metadata (app administration > data > metadata) */\r\n    contentType: 'ContentType',\r\n    /** Content type containing app settings */\r\n    settings: 'App-Settings',\r\n    /** Content type containing app resources */\r\n    resources: 'App-Resources',\r\n  },\r\n\r\n  pipelineDesigner: {\r\n    dataSourceDifficulties: {\r\n      default: 100,\r\n      advanced: 200,\r\n    },\r\n    outDataSource: {\r\n      Description: 'The template/script which will show this data',\r\n      EntityGuid: 'Out',\r\n      In: ['Default', 'Header'],\r\n      Name: '2sxc Target (View or API)',\r\n      PartAssemblyAndType: 'SexyContentTemplate',\r\n      PrimaryType: 'Target',\r\n      VisualDesignerData: { Top: 20, Left: 200, Width: 700 },\r\n    },\r\n    defaultPipeline: {\r\n      dataSources: [\r\n        // disable for https://github.com/2sic/2sxc/issues/2388 - remove in a few iterations ca. 2021-05\r\n        // {\r\n        //   EntityGuid: 'unsaved3',\r\n        //   PartAssemblyAndType: 'ToSic.Eav.DataSources.IAppRoot, ToSic.Eav.DataSources',\r\n        //   VisualDesignerData: { Top: 440, Left: 440 },\r\n        // }, {\r\n        //   EntityGuid: 'unsaved2',\r\n        //   PartAssemblyAndType: 'ToSic.Eav.DataSources.PublishingFilter, ToSic.Eav.DataSources',\r\n        //   VisualDesignerData: { Top: 300, Left: 440 },\r\n        // },\r\n        {\r\n          EntityGuid: 'unsaved1',\r\n          PartAssemblyAndType: 'ToSic.Sxc.DataSources.CmsBlock, ToSic.Sxc',\r\n          VisualDesignerData: { Top: 170, Left: 440 },\r\n        }\r\n      ],\r\n      streamWiring: [\r\n        // disable for https://github.com/2sic/2sxc/issues/2388 - remove in a few iterations ca. 2021-05\r\n        // { From: 'unsaved3', Out: 'Default', To: 'unsaved2', In: 'Default' },\r\n        // { From: 'unsaved3', Out: 'Drafts', To: 'unsaved2', In: 'Drafts' },\r\n        // { From: 'unsaved3', Out: 'Published', To: 'unsaved2', In: 'Published' },\r\n        // { From: 'unsaved2', Out: 'Default', To: 'unsaved1', In: 'Default' },\r\n        { From: 'unsaved1', Out: 'Header', To: 'Out', In: 'Header' },\r\n        { From: 'unsaved1', Out: 'Default', To: 'Out', In: 'Default' },\r\n      ],\r\n    },\r\n    testParameters: '[Demo:Demo]=true',\r\n  },\r\n};\r\n","export class DialogTypeConstants {\r\n  public static readonly Zone = 'zone';\r\n  public static readonly AppImport = 'app-import';\r\n  public static readonly App = 'app';\r\n  public static readonly ContentType = 'contenttype';\r\n  public static readonly ContentItems = 'contentitems';\r\n  public static readonly Edit = 'edit';\r\n  public static readonly ItemHistory = 'item-history';\r\n  public static readonly Develop = 'develop';\r\n  public static readonly PipelineDesigner = 'pipeline-designer';\r\n  public static readonly Replace = 'replace';\r\n  public static readonly InstanceList = 'instance-list';\r\n}\r\n","import { Action, ActionReducer, ActionReducerMap, MetaReducer, } from '@ngrx/store';\r\nimport { consoleLogAngular } from '../../../../ng-dialogs/src/app/shared/helpers/console-log-angular.helper';\r\nimport { environment } from '../../../../ng-dialogs/src/environments/environment';\r\n\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface EavState {\r\n}\r\n\r\n/** Console log all actions */\r\nexport function logger(reducer: ActionReducer<EavState>): ActionReducer<EavState> {\r\n  return (state: EavState, action: Action): EavState => {\r\n    consoleLogAngular('[STORE] state:', state, 'action:', action);\r\n    return reducer(state, action);\r\n  };\r\n}\r\n\r\n/**\r\n * By default, @ngrx/store uses combineReducers with the reducer map to compose\r\n * the root meta-reducer. To add more meta-reducers, provide an array of meta-reducers\r\n * that will be composed to form the root meta-reducer.\r\n */\r\nexport const metaReducers: MetaReducer[] = !environment.production\r\n  ? [logger]\r\n  : [];\r\n\r\nexport const reducers: ActionReducerMap<EavState> = {\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { editRoot, refreshEditRoot } from '../../../edit/edit.matcher';\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: ':zoneId/apps',\r\n    loadChildren: () => import('./apps-management/apps-management.module').then(m => m.AppsManagementModule),\r\n    data: { title: 'Apps' },\r\n  },\r\n  {\r\n    path: ':zoneId/import',\r\n    loadChildren: () => import('./import-app/import-app.module').then(m => m.ImportAppModule),\r\n    data: { title: 'Import App' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/app',\r\n    loadChildren: () => import('./app-administration/app-administration.module').then(m => m.AppAdministrationModule),\r\n    data: { title: 'App' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/code',\r\n    loadChildren: () => import('./code-editor/code-editor.module').then(m => m.CodeEditorModule),\r\n    data: { title: 'Code Editor' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/query/:pipelineId',\r\n    loadChildren: () => import('./visual-query/visual-query.module').then(m => m.VisualQueryModule),\r\n    data: { title: 'Visual Query' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/:guid/:part/:index/replace',\r\n    loadChildren: () => import('./replace-content/replace-content.module').then(m => m.ReplaceContentModule),\r\n    data: { title: 'Apps' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/:guid/:part/:index/reorder',\r\n    loadChildren: () => import('./manage-content-list/manage-content-list.module').then(m => m.ManageContentListModule),\r\n    data: { title: 'Reorder Items' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/items/:contentTypeStaticName',\r\n    loadChildren: () => import('./content-items/content-items.module').then(m => m.ContentItemsModule),\r\n    data: { title: 'Items' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/fields/:contentTypeStaticName',\r\n    loadChildren: () => import('./content-type-fields/content-type-fields.module').then(m => m.ContentTypeFieldsModule),\r\n    data: { title: 'Fields' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/versions/:itemId',\r\n    loadChildren: () => import('./item-history/item-history.module').then(m => m.ItemHistoryModule),\r\n  },\r\n  {\r\n    matcher: editRoot,\r\n    loadChildren: () => import('../../../edit/edit.module').then(m => m.EditModule),\r\n    data: { title: 'Edit Item' },\r\n  },\r\n  {\r\n    matcher: refreshEditRoot,\r\n    loadChildren: () => import('../../../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n  },\r\n  // routes below are not linked directly from the initializer and are used for testing\r\n  // to make sure each module contains enough data to be self sustainable\r\n  {\r\n    path: ':zoneId/:appId/export/:contentTypeStaticName',\r\n    loadChildren: () => import('./content-export/content-export.module').then(m => m.ContentExportModule),\r\n    data: { title: 'Export Items' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/export/:contentTypeStaticName/:selectedIds',\r\n    loadChildren: () => import('./content-export/content-export.module').then(m => m.ContentExportModule),\r\n    data: { title: 'Export Items' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/import/:contentTypeStaticName',\r\n    loadChildren: () => import('./content-import/content-import.module').then(m => m.ContentImportModule),\r\n    data: { title: 'Import Items' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/permissions/:type/:keyType/:key',\r\n    loadChildren: () => import('./permissions/permissions.module').then(m => m.PermissionsModule),\r\n    data: { title: 'Permissions' },\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import codeCurly from '!raw-loader!./assets/icons/code-curly.svg';\r\nimport star from '!raw-loader!./assets/icons/star-24px.svg';\r\nimport { Context as DnnContext, DnnAppComponent } from '@2sic.com/dnn-sxc-angular';\r\nimport { ChangeDetectionStrategy, Component, ElementRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer, Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { keyContentBlockId, keyModuleId } from './shared/constants/session.constants';\r\nimport { Dictionary } from './shared/models/dictionary.model';\r\nimport { Context } from './shared/services/context';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AppComponent extends DnnAppComponent implements OnInit, OnDestroy {\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    el: ElementRef,\r\n    dnnContext: DnnContext,\r\n    private context: Context,\r\n    private titleService: Title,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private matIconRegistry: MatIconRegistry,\r\n    private domSanitizer: DomSanitizer,\r\n  ) {\r\n    super(\r\n      el,\r\n      dnnContext.preConfigure({\r\n        moduleId: parseInt(sessionStorage.getItem(keyModuleId), 10),\r\n        contentBlockId: parseInt(sessionStorage.getItem(keyContentBlockId), 10),\r\n      }),\r\n    );\r\n    this.context.initRoot();\r\n    this.loadFonts();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Mostly copied from https://blog.bitsrc.io/dynamic-page-titles-in-angular-98ce20b5c334\r\n    // Routes need a data: { title: '...' } for this to work\r\n    const appTitle = this.titleService.getTitle(); // initial title when loading the page\r\n    this.subscription.add(\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        map(() => {\r\n          let child = this.activatedRoute.firstChild;\r\n          while (child.firstChild) {\r\n            child = child.firstChild;\r\n          }\r\n          if (child.snapshot.data['title']) {\r\n            return child.snapshot.data['title'];\r\n          }\r\n          return appTitle;\r\n        }),\r\n      ).subscribe((title: string) => {\r\n        this.titleService.setTitle(title);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  private loadFonts() {\r\n    this.matIconRegistry.setDefaultFontSetClass('material-icons-outlined');\r\n\r\n    const icons: Dictionary<string> = {\r\n      star,\r\n      'code-curly': codeCurly,\r\n    };\r\n    Object.entries(icons).forEach(([name, svg]) => {\r\n      this.matIconRegistry.addSvgIconLiteral(name, this.domSanitizer.bypassSecurityTrustHtml(svg));\r\n    });\r\n  }\r\n}\r\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\"><path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/><path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/><path d=\\\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\\\"/></svg>\";","export default \"<svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n<path d=\\\"M2.98187 13.2188C3.38292 13.2083 3.70844 13.1016 3.95844 12.8984C4.21365 12.6901 4.38292 12.4062 4.46625 12.0469C4.54958 11.6875 4.59385 11.0729 4.59906 10.2031C4.60427 9.33333 4.6199 8.76042 4.64594 8.48438C4.69281 8.04688 4.77875 7.69531 4.90375 7.42969C5.03396 7.16406 5.19281 6.95312 5.38031 6.79688C5.56781 6.63542 5.8074 6.51302 6.09906 6.42969C6.29698 6.3776 6.6199 6.35156 7.06781 6.35156H7.50531V7.57812H7.26312C6.72146 7.57812 6.36208 7.67708 6.185 7.875C6.00792 8.06771 5.91937 8.5026 5.91937 9.17969C5.91937 10.5443 5.89073 11.4062 5.83344 11.7656C5.73969 12.3229 5.57823 12.7526 5.34906 13.0547C5.1251 13.3568 4.77094 13.625 4.28656 13.8594C4.85948 14.099 5.27354 14.4661 5.52875 14.9609C5.78917 15.4505 5.91937 16.2552 5.91937 17.375C5.91937 18.3906 5.92979 18.9948 5.95062 19.1875C5.99229 19.5417 6.09646 19.7891 6.26312 19.9297C6.435 20.0703 6.76833 20.1406 7.26312 20.1406H7.50531V21.3672H7.06781C6.5574 21.3672 6.1876 21.3255 5.95844 21.2422C5.6251 21.1224 5.34906 20.9271 5.13031 20.6562C4.91156 20.3906 4.76833 20.0521 4.70062 19.6406C4.63812 19.2292 4.60427 18.5547 4.59906 17.6172C4.59385 16.6797 4.54958 16.0312 4.46625 15.6719C4.38292 15.3125 4.21365 15.0286 3.95844 14.8203C3.70844 14.612 3.38292 14.5026 2.98187 14.4922V13.2188ZM8.05344 18V16.3984H9.655V18H8.05344ZM11.2266 18V16.3984H12.8281V18H11.2266ZM14.3997 18V16.3984H16.0012V18H14.3997ZM21.0103 13.2188V14.4922C20.6093 14.5026 20.2811 14.612 20.0259 14.8203C19.7759 15.0286 19.6093 15.3125 19.5259 15.6719C19.4426 16.026 19.3983 16.638 19.3931 17.5078C19.3879 18.3776 19.3723 18.9505 19.3462 19.2266C19.2994 19.6693 19.2108 20.0208 19.0806 20.2812C18.9556 20.5469 18.7994 20.7578 18.6119 20.9141C18.4244 21.0755 18.1848 21.1979 17.8931 21.2812C17.6952 21.3385 17.3723 21.3672 16.9244 21.3672H16.4869V20.1406H16.7291C17.2707 20.1406 17.6301 20.0417 17.8072 19.8438C17.9843 19.651 18.0728 19.2135 18.0728 18.5312C18.0728 17.2292 18.0962 16.4036 18.1431 16.0547C18.2265 15.4766 18.3931 15.0156 18.6431 14.6719C18.8931 14.3229 19.2473 14.0521 19.7056 13.8594C19.1067 13.5729 18.6848 13.1953 18.44 12.7266C18.1952 12.2526 18.0728 11.4557 18.0728 10.3359C18.0728 9.32031 18.0598 8.71354 18.0337 8.51562C17.9973 8.16667 17.8931 7.92448 17.7212 7.78906C17.5546 7.64844 17.2239 7.57812 16.7291 7.57812H16.4869V6.35156H16.9244C17.4348 6.35156 17.8046 6.39323 18.0337 6.47656C18.3671 6.59115 18.6431 6.78385 18.8619 7.05469C19.0806 7.32552 19.2212 7.66667 19.2837 8.07812C19.3515 8.48958 19.3879 9.16406 19.3931 10.1016C19.3983 11.0391 19.4426 11.6875 19.5259 12.0469C19.6093 12.401 19.7759 12.6823 20.0259 12.8906C20.2811 13.099 20.6093 13.2083 21.0103 13.2188Z\\\"/>\\r\\n</svg>\\r\\n\";","<router-outlet></router-outlet>\r\n","import { JsInfo } from '@2sic.com/2sxc-typings';\r\nimport { Injector } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UrlHelpers } from '../../../edit/shared/helpers/url.helpers';\r\nimport { DialogTypeConstants } from './shared/constants/dialog-types.constants';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyApi, keyAppId, keyContentType, keyDialog, keyItems, keyPipelineId, keyRequestToken, keyTabId, keyUrl, keyZoneId, prefix } from './shared/constants/session.constants';\r\nimport { convertFormToUrl } from './shared/helpers/url-prep.helper';\r\nimport { EavWindow } from './shared/models/eav-window.model';\r\nimport { EditForm, EditItem, GroupItem } from './shared/models/edit-form.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport function paramsInitFactory(injector: Injector): () => void {\r\n  return () => {\r\n    console.log('Setting parameters config and clearing route');\r\n    const eavKeys = Object.keys(sessionStorage).filter(key => key.startsWith(prefix));\r\n    const isParamsRoute = !window.location.hash.startsWith('#/');\r\n    if (isParamsRoute) {\r\n      console.log('Initial route:', window.location.href);\r\n      // clear our part of the session\r\n      for (const key of eavKeys) {\r\n        sessionStorage.removeItem(key);\r\n      }\r\n      sessionStorage.setItem(keyUrl, window.location.href); // save url which opened the dialog\r\n      sessionStorage.setItem(keyDialog, DialogTypeConstants.Edit); // set edit dialog as the default\r\n\r\n      // save params\r\n      const urlHash = window.location.hash.substring(1); // substring removes first # char\r\n      const queryParametersFromUrl = UrlHelpers.readQueryStringParameters(urlHash);\r\n\r\n      for (const [paramKey, paramValue] of Object.entries(queryParametersFromUrl)) {\r\n        if (paramValue == null) { continue; }\r\n        sessionStorage.setItem(prefix + paramKey, paramValue);\r\n      }\r\n\r\n      // redirect\r\n      const router = injector.get(Router);\r\n      const zoneId = sessionStorage.getItem(keyZoneId);\r\n      const appId = sessionStorage.getItem(keyAppId);\r\n      const dialog = sessionStorage.getItem(keyDialog);\r\n      const contentType = sessionStorage.getItem(keyContentType);\r\n      const items = sessionStorage.getItem(keyItems);\r\n      switch (dialog) {\r\n        case DialogTypeConstants.Zone:\r\n          router.navigate([`${zoneId}/apps`]);\r\n          break;\r\n        case DialogTypeConstants.AppImport:\r\n          router.navigate([`${zoneId}/import`]);\r\n          break;\r\n        case DialogTypeConstants.App:\r\n          router.navigate([`${zoneId}/${appId}/app`]);\r\n          break;\r\n        case DialogTypeConstants.ContentType:\r\n          router.navigate([`${zoneId}/${appId}/fields/${contentType}`]);\r\n          break;\r\n        case DialogTypeConstants.ContentItems:\r\n          router.navigate([`${zoneId}/${appId}/items/${contentType}`]);\r\n          break;\r\n        case DialogTypeConstants.Edit:\r\n          const editItems: EditItem[] = JSON.parse(items);\r\n          const form: EditForm = { items: editItems };\r\n          const formUrl = convertFormToUrl(form);\r\n          router.navigate([`${zoneId}/${appId}/edit/${formUrl}`]);\r\n          break;\r\n        case DialogTypeConstants.ItemHistory:\r\n          const historyItems: EditItem[] = JSON.parse(items);\r\n          router.navigate([`${zoneId}/${appId}/versions/${historyItems[0].EntityId}`]);\r\n          break;\r\n        case DialogTypeConstants.Develop:\r\n          router.navigate([`${zoneId}/${appId}/code`]);\r\n          break;\r\n        case DialogTypeConstants.PipelineDesigner:\r\n          const pipelineId = sessionStorage.getItem(keyPipelineId);\r\n          router.navigate([`${zoneId}/${appId}/query/${pipelineId}`]);\r\n          break;\r\n        case DialogTypeConstants.Replace:\r\n          const replaceItems: GroupItem[] = JSON.parse(items);\r\n          const rGuid = replaceItems[0].Group.Guid;\r\n          const rPart = replaceItems[0].Group.Part;\r\n          const rIndex = replaceItems[0].Group.Index;\r\n          const add = replaceItems[0].Group.Add;\r\n          const queryParams = add ? { add: true } : {};\r\n          router.navigate([`${zoneId}/${appId}/${rGuid}/${rPart}/${rIndex}/replace`], { queryParams });\r\n          break;\r\n        case DialogTypeConstants.InstanceList:\r\n          const groupItems: GroupItem[] = JSON.parse(items);\r\n          const gGuid = groupItems[0].Group.Guid;\r\n          const gPart = groupItems[0].Group.Part;\r\n          const gIndex = groupItems[0].Group.Index;\r\n          router.navigate([`${zoneId}/${appId}/${gGuid}/${gPart}/${gIndex}/reorder`]);\r\n          break;\r\n        default:\r\n          alert(`Cannot open unknown dialog \"${dialog}\"`);\r\n          try {\r\n            window.parent.$2sxc.totalPopup.close();\r\n          } catch (error) { }\r\n      }\r\n    } else if (eavKeys.length === 0) {\r\n      // if not params route and no params are saved, e.g. browser was reopened, throw error\r\n      alert('Missing required url parameters. Please reopen dialog.');\r\n      throw new Error('Missing required url parameters. Please reopen dialog.');\r\n    } else {\r\n      console.log('Initial route:', sessionStorage.getItem(keyUrl));\r\n    }\r\n\r\n    loadEnvironment();\r\n  };\r\n}\r\n\r\nfunction loadEnvironment() {\r\n  const jsInfo: Partial<JsInfo> = {\r\n    page: parseInt(sessionStorage.getItem(keyTabId), 10),\r\n    rvt: sessionStorage.getItem(keyRequestToken),\r\n    api: sessionStorage.getItem(keyApi),\r\n  };\r\n  window.$2sxc.env.load(jsInfo as JsInfo);\r\n}\r\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class HandleErrorsInterceptor implements HttpInterceptor {\r\n  /** URLs excluded from detailed error alert  */\r\n  private excludedUrls = [\r\n    'dist/ng-edit/i18n',\r\n  ];\r\n\r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        if (!this.checkIfExcluded(error.url)) {\r\n          this.showDetailedHttpError(error);\r\n        }\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  private checkIfExcluded(url: string) {\r\n    for (const excludedUrl of this.excludedUrls) {\r\n      if (url.includes(excludedUrl)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private showDetailedHttpError(error: HttpErrorResponse) {\r\n    let infoText = 'Had an error talking to the server (status ' + error.status + ').';\r\n    const srvResp = error.error;\r\n    if (srvResp) {\r\n      const msg = srvResp.Message;\r\n      if (msg) { infoText += '\\nMessage: ' + msg; }\r\n      const msgDet = srvResp.MessageDetail || srvResp.ExceptionMessage;\r\n      if (msgDet) { infoText += '\\nDetail: ' + msgDet; }\r\n\r\n      if (msgDet && msgDet.indexOf('No action was found') === 0) {\r\n        if (msgDet.indexOf('that matches the name') > 0) {\r\n          infoText += '\\n\\nTip from 2sxc: you probably got the action-name wrong in your JS.';\r\n        } else if (msgDet.indexOf('that matches the request.') > 0) {\r\n          infoText += '\\n\\nTip from 2sxc: Seems like the parameters are the wrong amount or type.';\r\n        }\r\n      }\r\n\r\n      if (msg && msg.indexOf('Controller') === 0 && msg.indexOf('not found') > 0) {\r\n        infoText += '\\n\\nTip from 2sxc: you probably spelled the controller name wrong or forgot to remove the word \\'controller\\' from the call in JS. To call a controller called \\'DemoController\\' only use \\'Demo\\'.';\r\n      }\r\n      infoText += '\\n\\nif you are an advanced user you can learn more about what went wrong - discover how on 2sxc.org/help?tag=debug';\r\n    }\r\n\r\n    alert(infoText);\r\n  }\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class SetHeadersInterceptor implements HttpInterceptor {\r\n\r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let modified: HttpRequest<any>;\r\n    if (req.body instanceof FormData) {\r\n      // sending files. Do not set content type so browser can add delimiter boundary automatically\r\n      return next.handle(req);\r\n    } else {\r\n      modified = req.clone({\r\n        setHeaders: {\r\n          'Content-Type': 'application/json;charset=UTF-8',\r\n        }\r\n      });\r\n      return next.handle(modified);\r\n    }\r\n  }\r\n}\r\n","import { DnnInterceptor } from '@2sic.com/dnn-sxc-angular';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { EntityDataModule } from '@ngrx/data';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { metaReducers, reducers } from '../../../edit/shared/store';\r\nimport { entityConfig } from '../../../edit/shared/store/ngrx-data';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { paramsInitFactory } from './params-init.factory';\r\nimport { HandleErrorsInterceptor } from './shared/interceptors/handle-errors.interceptor';\r\nimport { SetHeadersInterceptor } from './shared/interceptors/set-headers.interceptor';\r\nimport { Context } from './shared/services/context';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    StoreModule.forRoot(reducers, { metaReducers, runtimeChecks: { strictStateImmutability: true, strictActionImmutability: true } }),\r\n    EffectsModule.forRoot([]),\r\n    StoreDevtoolsModule.instrument({ maxAge: 25 }),\r\n    EntityDataModule.forRoot(entityConfig),\r\n    TranslateModule.forRoot(),\r\n    MatSnackBarModule,\r\n  ],\r\n  providers: [\r\n    { provide: APP_INITIALIZER, useFactory: paramsInitFactory, deps: [Injector], multi: true },\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\r\n    DnnInterceptor,\r\n    { provide: HTTP_INTERCEPTORS, useClass: SetHeadersInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: HandleErrorsInterceptor, multi: true },\r\n    Context,\r\n    Title\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}