{"version":3,"file":"projects_eav-ui_src_app_metadata_metadata_component_ts-projects_eav-ui_src_app_shared_service-802177.d98c70b560341cbb.js","mappings":"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","names":["logSpecs","getAll","getAllLive","getAllOnce","ContentItemsService","HttpServiceBaseSignal","constructor","this","log","classLog","getAllPromise","contentTypeStaticName","fnIf","fetchPromise","webApiEntityList","params","appId","contentType","httpResource","url","apiUrl","refresh","getColumnsPromise","webApiFieldsAll","staticName","importItem","file","from","toBase64","pipe","switchMap","fileBase64","http","post","webApiEntityRoot","AppId","ContentBase64","map","success","Success","Messages","static","__ngFactoryType__","_angular_core__WEBPACK_IMPORTED_MODULE_10__","jDH","factory","ɵfac","ServiceBase","subscriptions","Subscription","ngOnDestroy","destroy","unsubscribe","_angular_core__WEBPACK_IMPORTED_MODULE_1__","MetadataActionsComponent","agInit","deleteMetadata","onDelete","data","debug_node_JnOYh9kg","VBU","selectors","decls","vars","consts","template","rf","ctx","i0","MatRippleModule","i1","MatIconModule","i2","TippyDirective","encapsulation","MetadataContentTypeComponent","value","metadata","_Type","Description","styles","scopeOption_r1","name","MetadataSaveDialogComponent_Conditional_11_For_5_Template","ctx_r1","scopeOptions","length","dropdownInsertValue","contentType_r3","NameId","Label","MetadataSaveDialogComponent_Conditional_15_For_2_Template","tmp_1_0","contentTypes","MetadataSaveDialogComponent","#contentTypesService","dialog","hostClass","guidedContentType","advancedMode","transient","ContentTypesService","scope","signal","eavConstants","scopes","default","getScopesSig","getTypes","ngOnInit","buildForm","closeDialog","close","toggleGuidedContentType","toggleAdvancedMode","event","checked","confirm","formValues","form","getRawValue","UntypedFormGroup","addControl","UntypedFormControl","Validators","required","controls","valueChanges","startWith","distinctUntilChanged","subscribe","newScope","patchValue","prompt","some","option","set","hostVars","hostBindings","MetadataSaveDialogComponent_Conditional_11_Template","MetadataSaveDialogComponent_Conditional_15_Template","MetadataSaveDialogComponent_Conditional_16_Template","MetadataSaveDialogComponent_Conditional_24_Template","$event","_c0","touched","errors","valid","MatCardModule","FormsModule","i3","ReactiveFormsModule","MatFormFieldModule","i4","MatSelectModule","i5","MatOptionModule","MatInputModule","i6","MatButtonModule","i7","NgClass","i8","MatSlideToggleModule","i9","FieldHintComponent","ClickStopPropagationDirective","ctx_r0","itemFor","KeyNumber","KeyGuid","KeyString","Title","MetadataComponent_Conditional_10_Conditional_5_Template","MetadataComponent_Conditional_10_Conditional_6_Template","MetadataComponent_Conditional_10_Conditional_7_Template","MetadataComponent_Conditional_10_Conditional_8_Template","Target","TargetType","_r2","createMetadata","recommendation_r5","Icon","Enabled","_r4","$implicit","MetadataComponent_Conditional_16_For_10_Conditional_1_Template","MetadataComponent_Conditional_16_For_10_Conditional_2_Template","_r3","openChange","MetadataComponent_Conditional_16_For_10_Template","fabOpen","recommendations","MetadataComponent","#entitiesSvc","#metadataSvc","#contentItemSvc","#dialogRoutes","snackBar","matDialog","viewContainerRef","changeDetectorRef","EntityEditService","MetadataService","DialogRoutingService","gridOptions","#buildGridOptions","#params","convert","getParams","p","targetType","parseInt","keyType","key","#itemsFromHttp","computed","item","find","i","Guid","For","undefined","#refresh","#metadataResource","getMetadataLive","metadataSet","clone","structuredClone","Recommendations","forEach","r","startsWith","icon","replace","window","atob","filter","Items","Id","Count","title","decodeURIComponent","getParam","console","error","doOnDialogClosed","update","pre","open","recommendation","CreateEmpty","Name","create","calculateItemFor","duration","next","createMetadataForm","openFeatureDialog","MissingFeature","autoFocus","width","afterClosed","items","formUrl","convertFormToUrl","navRelative","markForCheck","temp","EditPrep","constructMetadataInfo","newMetadataFromInfo","#editMetadata","editId","#deleteMetadata","confirmed","delete","entityId","entityTitle","message","DeleteWarning","ConfirmDeleteDialogComponent","isConfirmed","defaultGridOptions","columnDefs","ColumnDefinitions","IdWithDefaultRenderer","cellRendererParams","idFieldParamsTooltipGetter","TextWide","field","onCellClicked","headerName","valueGetter","cellRenderer","ActionsPinnedRight1","MetadataComponent_Conditional_9_Template","MetadataComponent_Conditional_10_Template","MetadataComponent_Conditional_15_Template","MetadataComponent_Conditional_16_Template","tmp_2_0","tmp_4_0","tmp_5_0","RouterOutlet","SxcGridModule","MatDialogActions","EcoFabSpeedDialComponent","EcoFabSpeedDialTriggerComponent","EcoFabSpeedDialActionsComponent","MatBadgeModule","SafeHtmlPipe","a","onClick","stopPropagation","FsC","permissionsDialog","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","PermissionsComponent","Promise","all","__webpack_require__","e","then","bind","permissionRoutes","path","component","DialogEntryComponent","children","EditRoutes","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","isError","input","isShort","toggleIsShort","_angular_core__WEBPACK_IMPORTED_MODULE_0__","inputs","ngContentSelectors","_r1","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c1","NgTemplateOutlet","GoToPermissions","route","loadChildren","m","getUrl","getUrlApp","app","toString","getUrlAttribute","id","attribute","getUrlContentType","guid","getUrlEntity","entity","getUrlLanguage","language"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/content-items/services/content-items.service.ts","./projects/eav-ui/src/app/shared/services/service-base.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.html","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.ts","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.ts","./projects/eav-ui/src/app/metadata/metadata.component.html","./projects/eav-ui/src/app/metadata/metadata.component.ts","./projects/eav-ui/src/app/shared/constants/dropdown-insert-value.constant.ts","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts","./projects/eav-ui/src/app/permissions/permissions-dialog.config.ts","./projects/eav-ui/src/app/permissions/permissions.routing.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/permissions/go-to-permissions.ts"],"sourcesContent":["import { httpResource } from '@angular/common/http';\r\nimport { Injectable, Signal } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { webApiFieldsAll } from '../../shared/fields/content-types-fields.service';\r\nimport { Field } from '../../shared/fields/field.model';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { classLog } from '../../shared/logging';\r\nimport { webApiEntityList, webApiEntityRoot } from '../../shared/services/entity.service';\r\nimport { HttpServiceBaseSignal } from '../../shared/services/http-service-base-signal';\r\nimport { ContentItem } from '../models/content-item.model';\r\n\r\nconst logSpecs = {\r\n  getAll: true,\r\n  getAllLive: true,\r\n  getAllOnce: true,\r\n\r\n}\r\n@Injectable()\r\nexport class ContentItemsService extends HttpServiceBaseSignal {\r\n\r\n  log = classLog({ ContentItemsService }, logSpecs);\r\n  \r\n  getAllPromise(contentTypeStaticName: string): Promise<ContentItem[]> {\r\n    this.log.fnIf('getAll', { contentTypeStaticName });\r\n    return this.fetchPromise<ContentItem[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  getAllOnce(contentTypeStaticName: string) {\r\n    this.log.fnIf('getAllOnce', { contentTypeStaticName });\r\n    return httpResource<ContentItem[]>(() => {\r\n      return ({\r\n        url: this.apiUrl(webApiEntityList),\r\n        params: { appId: this.appId, contentType: contentTypeStaticName }\r\n      });\r\n    });\r\n  }\r\n\r\n  getAllLive(contentTypeStaticName: string, refresh: Signal<unknown>) {\r\n    this.log.fnIf('getAllLive', { contentTypeStaticName, refresh });\r\n    return httpResource<ContentItem[]>(() => {\r\n      refresh();\r\n      return ({\r\n        url: this.apiUrl(webApiEntityList),\r\n        params: { appId: this.appId, contentType: contentTypeStaticName }\r\n      });\r\n    });\r\n  }\r\n\r\n  getColumnsPromise(contentTypeStaticName: string): Promise<Field[]> {\r\n    return this.fetchPromise<Field[]>(webApiFieldsAll, {\r\n      params: { appId: this.appId, staticName: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  importItem(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiEntityRoot + 'upload'), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { MetadataItem } from '../models/metadata.model';\r\nimport { MetadataActionsParams } from './metadata-actions.models';\r\n\r\n@Component({\r\n    selector: 'app-metadata-actions',\r\n    templateUrl: './metadata-actions.component.html',\r\n    imports: [\r\n        MatRippleModule,\r\n        MatIconModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class MetadataActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & MetadataActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & MetadataActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deleteMetadata(): void {\r\n    const metadata: MetadataItem = this.params.data;\r\n    this.params.onDelete(metadata);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deleteMetadata()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MetadataItem } from '../models/metadata.model';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n    selector: 'app-metadata-content-type',\r\n    templateUrl: './metadata-content-type.component.html',\r\n    styleUrls: ['./metadata-content-type.component.scss'],\r\n    imports: [TippyDirective,]\r\n})\r\nexport class MetadataContentTypeComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n  metadata: MetadataItem;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.metadata = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"container\" [tippy]=\"metadata._Type.Description\">\r\n  {{ value }}\r\n</div>\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>Create Metadata</mat-card-title>\r\n    <mat-card-subtitle>\r\n      This is a special operation to add an item which is metadata for another item,\r\n      see <a href=\"https://go.2sxc.org/metadata\" target=\"_blank\">docs</a>.\r\n    </mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form [formGroup]=\"form\">\r\n      <!-- Scope -->\r\n      @if (advancedMode && guidedContentType) {\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Scope</mat-label>\r\n        <mat-select formControlName=\"scope\" [placeholder]=\"!scopeOptions().length ? 'No items found' : ''\">\r\n          @for (scopeOption of scopeOptions(); track scopeOption) {\r\n          <mat-option [value]=\"scopeOption.value\">\r\n            {{ scopeOption.name }}\r\n          </mat-option>\r\n          }\r\n          <mat-option [value]=\"dropdownInsertValue\">Other...</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <app-field-hint>\r\n        The scope should almost never be changed -\r\n        <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n      </app-field-hint>\r\n      }\r\n      <!-- Content Type of metadata item -->\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Content Type</mat-label>\r\n        @if (guidedContentType) {\r\n        <mat-select formControlName=\"contentType\" required\r\n          [placeholder]=\"!contentTypes()?.length ? 'No items found' : ''\">\r\n          @for (contentType of contentTypes(); track contentType) {\r\n          <mat-option [value]=\"contentType.NameId\">\r\n            {{ contentType.Label }}\r\n          </mat-option>\r\n          }\r\n        </mat-select>\r\n        }\r\n        @if (!guidedContentType) {\r\n        <input matInput type=\"text\" formControlName=\"contentType\" required>\r\n        }\r\n        <div matTextSuffix>\r\n          <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': guidedContentType }\" tippy=\"Pick existing value\"\r\n            (click)=\"toggleGuidedContentType(true)\">\r\n            <mat-icon>search</mat-icon>\r\n          </button>\r\n          <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': !guidedContentType }\" tippy=\"Manual entry\"\r\n            (click)=\"toggleGuidedContentType(false)\">\r\n            <mat-icon>text_fields</mat-icon>\r\n          </button>\r\n        </div>\r\n      </mat-form-field>\r\n      @if (form.controls.contentType.touched && form.controls.contentType.errors?.required) {\r\n      <app-field-hint [isError]=\"true\">\r\n        This field is required\r\n      </app-field-hint>\r\n      }\r\n    </form>\r\n  </mat-card-content>\r\n  <mat-card-actions class=\"eav-card-actions\">\r\n    <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n      {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n    </mat-slide-toggle>\r\n    <div>\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button color=\"accent\" class=\"eav-card-action-button\" [disabled]=\"!form.valid\"\r\n        (click)=\"confirm()\">\r\n        Confirm\r\n      </button>\r\n    </div>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, HostBinding, OnInit, signal, WritableSignal } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { distinctUntilChanged, startWith } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { ContentTypesService } from '../../app-administration/services';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { dropdownInsertValue } from '../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants, ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { MetadataSaveFormValues } from './metadata-save-dialog.models';\r\n\r\n@Component({\r\n    selector: 'app-metadata-save-dialog',\r\n    templateUrl: './metadata-save-dialog.component.html',\r\n    styleUrls: ['./metadata-save-dialog.component.scss'],\r\n    imports: [\r\n        MatCardModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        NgClass,\r\n        MatIconModule,\r\n        MatSlideToggleModule,\r\n        FieldHintComponent,\r\n        ClickStopPropagationDirective,\r\n    ]\r\n})\r\nexport class MetadataSaveDialogComponent implements OnInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  dropdownInsertValue = dropdownInsertValue;\r\n  guidedContentType = true;\r\n  advancedMode = false;\r\n\r\n  #contentTypesService = transient(ContentTypesService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<MetadataSaveDialogComponent>,\r\n  ) { }\r\n\r\n  scope = signal(eavConstants.scopes.default.value);\r\n  scopeOptions = this.#contentTypesService.getScopesSig() as WritableSignal<ScopeOption[]>;\r\n\r\n  contentTypes = this.#contentTypesService.getTypes(this.scope).value;\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n  closeDialog(contentType?: string): void {\r\n    this.dialog.close(contentType);\r\n  }\r\n\r\n  toggleGuidedContentType(guidedContentType: boolean): void {\r\n    this.guidedContentType = guidedContentType;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: MetadataSaveFormValues = this.form.getRawValue();\r\n    this.closeDialog(formValues.contentType);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({});\r\n    this.form.addControl('contentType', new UntypedFormControl(null, [Validators.required]));\r\n    this.form.addControl('scope', new UntypedFormControl(eavConstants.scopes.default.value));\r\n\r\n    this.form.controls.scope.valueChanges.pipe(\r\n      startWith(this.form.controls.scope.value),\r\n      distinctUntilChanged(),\r\n    ).subscribe((newScope: string) => {\r\n      // reset content types when scope changes\r\n      if (this.form.controls.contentType.value != null) {\r\n        this.form.controls.contentType.patchValue(null);\r\n      }\r\n\r\n      // add new scope on manual entry\r\n      if (newScope === dropdownInsertValue) {\r\n        newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n        if (!this.scopeOptions().some(option => option.value === newScope)) {\r\n          const newScopeOption: ScopeOption = {\r\n            name: newScope,\r\n            value: newScope,\r\n          };\r\n          this.scopeOptions.set([newScopeOption, ...this.scopeOptions()]);\r\n        }\r\n        this.form.controls.scope.patchValue(newScope);\r\n      } else {\r\n        this.scope.set(newScope);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-dialog nav-component-wrapper\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      {{ title || 'Metadata' }}\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content nav-component-wrapper\">\r\n    <p>\r\n      @if (!itemFor()) {\r\n        This item is not metadata for anything else.\r\n      } @else {\r\n        This item is metadata for:\r\n        <br />Target: {{ itemFor().Target }} <br />TargetType: {{ itemFor().TargetType }}\r\n        @if (itemFor().KeyNumber) {\r\n          <br />Key Number: {{ itemFor().KeyNumber }}\r\n        }\r\n        @if (itemFor().KeyGuid) {\r\n          <br />Key Guid: {{ itemFor().KeyGuid }}\r\n        }\r\n        @if (itemFor().KeyString) {\r\n          <br />Key String: {{ itemFor().KeyString }}\r\n        }\r\n        @if (itemFor().Title) {\r\n          <br />Title: {{ itemFor().Title }}\r\n        }\r\n      }\r\n    </p>\r\n    <router-outlet></router-outlet>\r\n    <div class=\"grid-wrapper\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"metadataSet()?.Items\" [gridOptions]=\"gridOptions\"> </ag-grid-angular>\r\n    </div>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    @if (recommendations()?.length === 0) {\r\n      <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new metadata for this item\" (click)=\"createMetadata()\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    }\r\n    @if (recommendations()?.length > 0) {\r\n      <eco-fab-speed-dial class=\"eav-eco-fab-speed-dial\" [ngClass]=\"{ 'fab-opened': fabOpen() }\" (openChange)=\"openChange($event)\">\r\n        <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n          <button mat-fab>\r\n            <mat-icon class=\"spin180\">{{ fabOpen() ? 'close' : 'add' }}</mat-icon>\r\n          </button>\r\n        </eco-fab-speed-dial-trigger>\r\n        <eco-fab-speed-dial-actions class=\"eav-eco-fab-speed-dial-actions\">\r\n          <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Other Content Type\" (click)=\"createMetadata()\">\r\n            <mat-icon>search</mat-icon>\r\n          </button>\r\n          @for (recommendation of recommendations(); track recommendation) {\r\n            <button\r\n              mat-mini-fab\r\n              class=\"eav-eco-fab-speed-dial-action-button\"\r\n              [attr.label]=\"recommendation.Title\"\r\n              (click)=\"createMetadata(recommendation)\"\r\n            >\r\n              @if (recommendation.Icon) {\r\n                <div\r\n                  style=\"color: white; fill: white\"\r\n                  [innerHTML]=\"recommendation.Icon | safeHtml\"\r\n                  [matBadgeHidden]=\"recommendation.Enabled\"\r\n                  matBadgeColor=\"accent\"\r\n                  matBadgeSize=\"small\"\r\n                  matBadge=\"💎\"\r\n                  matBadgePosition=\"below after\"\r\n                  aria-hidden=\"false\"\r\n                ></div>\r\n              } @else {\r\n                <mat-icon>add</mat-icon>\r\n              }\r\n            </button>\r\n          }\r\n        </eco-fab-speed-dial-actions>\r\n      </eco-fab-speed-dial>\r\n    }\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, computed, OnInit, signal, ViewContainerRef } from '@angular/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent } from '@ecodev/fab-speed-dial';\r\nimport { convert, Of, transient } from '../../../../core';\r\nimport { ConfirmDeleteDialogComponent } from '../app-administration/sub-dialogs/confirm-delete-dialog/confirm-delete-dialog.component';\r\nimport { ConfirmDeleteDialogData } from '../app-administration/sub-dialogs/confirm-delete-dialog/confirm-delete-dialog.models';\r\nimport { ContentItemsService } from '../content-items/services/content-items.service';\r\nimport { EavForInAdminUi } from '../edit/shared/models/eav';\r\nimport { openFeatureDialog } from '../features/shared/base-feature.component';\r\nimport { MetadataService } from '../permissions';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { MetadataKeyTypes } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { classLog } from '../shared/logging';\r\nimport { EditForm, EditPrep, ItemAddIdentifier } from '../shared/models/edit-form.model';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { SafeHtmlPipe } from '../shared/pipes/safe-html.pipe';\r\nimport { DialogRoutingService } from '../shared/routing/dialog-routing.service';\r\nimport { EntityEditService } from '../shared/services/entity-edit.service';\r\nimport { MetadataActionsComponent } from './metadata-actions/metadata-actions.component';\r\nimport { MetadataActionsParams } from './metadata-actions/metadata-actions.models';\r\nimport { MetadataContentTypeComponent } from './metadata-content-type/metadata-content-type.component';\r\nimport { MetadataSaveDialogComponent } from './metadata-save-dialog/metadata-save-dialog.component';\r\nimport { MetadataItem, MetadataRecommendation } from './models/metadata.model';\r\n\r\n@Component({\r\n  selector: 'app-metadata',\r\n  templateUrl: './metadata.component.html',\r\n  styleUrls: ['./metadata.component.scss'],\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    SxcGridModule,\r\n    MatDialogActions,\r\n    EcoFabSpeedDialComponent,\r\n    NgClass,\r\n    EcoFabSpeedDialTriggerComponent,\r\n    EcoFabSpeedDialActionsComponent,\r\n    MatBadgeModule,\r\n    SafeHtmlPipe,\r\n  ]\r\n})\r\nexport class MetadataComponent implements OnInit {\r\n\r\n  log = classLog({ MetadataComponent });\r\n\r\n  #entitiesSvc = transient(EntityEditService);\r\n  #metadataSvc = transient(MetadataService);\r\n  #contentItemSvc = transient(ContentItemsService);\r\n  #dialogRoutes = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<MetadataComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) { }\r\n\r\n\r\n  gridOptions = this.#buildGridOptions();\r\n\r\n  fabOpen = signal(false);\r\n\r\n  #params = convert(this.#dialogRoutes.getParams(['targetType', 'keyType', 'key', 'title', 'contentTypeStaticName']), p => ({\r\n    targetType: parseInt(p.targetType, 10),\r\n    keyType: p.keyType as Of<typeof MetadataKeyTypes>,\r\n    key: p.key,\r\n    contentTypeStaticName: p.contentTypeStaticName,\r\n  }));\r\n\r\n\r\n  // Signal to get itemFor - must be _outside_ the computed property, otherwise it regenerates infinitely\r\n  #itemsFromHttp = this.#contentItemSvc.getAllOnce(this.#params.contentTypeStaticName).value;\r\n\r\n  itemFor = computed<EavForInAdminUi | undefined>(() => {\r\n    const item = this.#itemsFromHttp()?.find(i => i.Guid === this.#params.key);\r\n    return (item?.For)\r\n      ? item.For\r\n      : undefined;\r\n  });\r\n\r\n  #refresh = signal<number>(0);\r\n  #metadataResource = this.#metadataSvc.getMetadataLive(this.#refresh, this.#params.targetType, this.#params.keyType, this.#params.key).value\r\n\r\n  metadataSet = computed(() => {\r\n    const metadata = this.#metadataResource();\r\n    if (!metadata) return undefined;\r\n\r\n    const clone = structuredClone(metadata);\r\n\r\n    clone.Recommendations.forEach(r => {\r\n      if (r.Icon?.startsWith('base64:')) {\r\n        let icon = r.Icon.replace('base64:', '');\r\n        icon = window.atob(icon);\r\n        icon = icon.replace('fill=\"#000000\"', 'fill=\"#ffffff\"');\r\n        r.Icon = icon;\r\n      }\r\n    });\r\n    return clone;\r\n  });\r\n\r\n\r\n  recommendations = computed(() => {\r\n    const metadata = this.metadataSet();\r\n    return metadata?.Recommendations.filter(r =>\r\n      metadata?.Items.filter(i => i._Type.Id === r.Id).length < r.Count\r\n    );\r\n  });\r\n\r\n  protected title = (() => {\r\n    try {\r\n      return decodeURIComponent(this.#dialogRoutes.getParam('title') ?? '');\r\n    } catch (e) {\r\n      console.error('Couldn\\'t properly decode title');\r\n      return this.#dialogRoutes.getParam('title') ?? '';\r\n    }\r\n  })();\r\n\r\n  ngOnInit() {\r\n    this.#dialogRoutes.doOnDialogClosed(() => this.#refresh.update(pre => pre + 1));\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  openChange(open: boolean) {\r\n    this.fabOpen.set(open);\r\n  }\r\n\r\n  createMetadata(recommendation?: MetadataRecommendation) {\r\n    if (recommendation) {\r\n      // If the feature is not enabled, open the info dialog instead of metadata\r\n      if (!recommendation.Enabled) {\r\n        openFeatureDialog(this.matDialog, recommendation.MissingFeature, this.viewContainerRef, this.changeDetectorRef);\r\n        return;\r\n      }\r\n      // Feature is enabled, check if it's an empty metadata\r\n      if (recommendation.CreateEmpty) {\r\n        this.snackBar.open(`Creating ${recommendation.Name}...`);\r\n        this.#entitiesSvc.create(recommendation.Id, { For: this.calculateItemFor('dummy').For }).subscribe({\r\n          error: () => {\r\n            this.snackBar.open(`Creating ${recommendation.Name} failed. Please check console for more info`, undefined, { duration: 3000 });\r\n            this.#refresh.update(pre => pre + 1)\r\n          },\r\n          next: () => {\r\n            this.snackBar.open(`Created ${recommendation.Name}`, undefined, { duration: 3000 });\r\n            this.#refresh.update(pre => pre + 1)\r\n          },\r\n        });\r\n      } else {\r\n        // Default case - open new-metadata dialog\r\n        this.createMetadataForm(recommendation.Id);\r\n      }\r\n      return;\r\n    }\r\n    const metadataDialogRef = this.matDialog.open(MetadataSaveDialogComponent, {\r\n      autoFocus: false,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    metadataDialogRef.afterClosed().subscribe((contentType?: string) => {\r\n      if (contentType == null) return;\r\n      this.createMetadataForm(contentType);\r\n    });\r\n  }\r\n\r\n  private createMetadataForm(contentType: string) {\r\n    const form: EditForm = {\r\n      items: [this.calculateItemFor(contentType)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private calculateItemFor(contentType: string): ItemAddIdentifier {\r\n    const temp = EditPrep.constructMetadataInfo(this.#params.targetType, this.#params.keyType, this.#params.key);\r\n    return EditPrep.newMetadataFromInfo(contentType, temp);\r\n  }\r\n\r\n\r\n  #editMetadata(metadata: MetadataItem) {\r\n    const form: EditForm = {\r\n      items: [EditPrep.editId(metadata.Id)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  #deleteMetadata(metadata: MetadataItem, confirmed = false) {\r\n    if (!confirmed) {\r\n      const data: ConfirmDeleteDialogData = {\r\n        entityId: metadata.Id,\r\n        entityTitle: metadata.Title,\r\n        message: this.metadataSet().Recommendations.find(r => r.Id === metadata._Type.Id)?.DeleteWarning,\r\n      };\r\n      const confirmationDialogRef = this.matDialog.open(ConfirmDeleteDialogComponent, {\r\n        autoFocus: false,\r\n        data,\r\n        viewContainerRef: this.viewContainerRef,\r\n        width: '400px',\r\n      });\r\n      confirmationDialogRef.afterClosed().subscribe((isConfirmed: boolean) => {\r\n        if (isConfirmed)\r\n          this.#deleteMetadata(metadata, true);\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.snackBar.open('Deleting...');\r\n    this.#entitiesSvc.delete(metadata._Type.Id, metadata.Id, false).subscribe({\r\n      next: () => {\r\n        this.snackBar.open('Deleted', null, { duration: 2000 });\r\n        this.#refresh.update(pre => pre + 1);\r\n      },\r\n      error: () => {\r\n        this.snackBar.open('Delete failed. Please check console for more information', null, { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  #buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.IdWithDefaultRenderer,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<MetadataItem>()\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Title',\r\n          onCellClicked: (p: { data: MetadataItem }) => this.#editMetadata(p.data),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Content Type',\r\n          field: 'ContentType',\r\n          valueGetter: (p: { data: MetadataItem }) => `${p.data._Type.Name}${p.data._Type.Title !== p.data._Type.Name ? ` (${p.data._Type.Title})` : ''}`,\r\n          cellRenderer: MetadataContentTypeComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight1,\r\n          cellRenderer: MetadataActionsComponent,\r\n          cellRendererParams: (() => ({\r\n            onDelete: (metadata) => this.#deleteMetadata(metadata),\r\n          } satisfies MetadataActionsParams))(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","export const dropdownInsertValue = 'DROPDOWN_INSERT_VALUE' as const;\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { classLog } from '../logging';\r\n\r\n@Directive({\r\n  selector: '[appClickStopPropagation]',\r\n})\r\nexport class ClickStopPropagationDirective {\r\n\r\n  log = classLog({ClickStopPropagationDirective});\r\n\r\n  // Log constructor to detect that it was really attached/created\r\n  constructor() {\r\n    this.log.a('constructor');\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    this.log.a('onClick', { event });\r\n    event.stopPropagation();\r\n\r\n    // This should never be added here, as it's often on a link, and the default behavior (link open) should happen\r\n    // event.preventDefault();\r\n  }\r\n\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const permissionsDialog: DialogConfig = {\r\n  name: 'SET_PERMISSIONS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { PermissionsComponent } = await import('./permissions.component');\r\n    return PermissionsComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { permissionsDialog } from './permissions-dialog.config';\r\nimport { EditRoutes } from '../edit/edit.routing';\r\n\r\nexport const permissionRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: permissionsDialog },\r\n    children: EditRoutes\r\n  },\r\n];\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError()) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n    selector: 'app-field-hint',\r\n    templateUrl: './field-hint.component.html',\r\n    styleUrls: ['./field-hint.component.scss'],\r\n    imports: [\r\n        MatFormFieldModule,\r\n        NgClass,\r\n        NgTemplateOutlet\r\n    ]\r\n})\r\nexport class FieldHintComponent {\r\n  isError = input<boolean>(false);\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { Of } from '../../../../core';\r\nimport { eavConstants, MetadataKeyTypes } from '../shared/constants/eav.constants';\r\n\r\nexport class GoToPermissions {\r\n\r\n  static route: Route = {\r\n    path: 'permissions/:targetType/:keyType/:key',\r\n    loadChildren: () => import('./permissions.routing').then(m => m.permissionRoutes),\r\n    // loadChildren: () => import('./permissions.module').then(m => m.PermissionsModule),\r\n    data: { title: 'Permissions' },\r\n  };\r\n\r\n  static getUrl(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string): string {\r\n    return `permissions/${targetType}/${keyType}/${key}`;\r\n  }\r\n\r\n  static getUrlApp(appId: number): string {\r\n    return this.getUrl(eavConstants.metadata.app.targetType, eavConstants.metadata.app.keyType, appId.toString());\r\n  }\r\n\r\n  static getUrlAttribute(id: number): string {\r\n    return this.getUrl(eavConstants.metadata.attribute.targetType, eavConstants.metadata.attribute.keyType, id.toString());\r\n  }\r\n\r\n  /** For historic reasons, it's the same as Entity */\r\n  static getUrlContentType(guid: string): string {\r\n    return this.getUrlEntity(guid);\r\n  }\r\n\r\n  static getUrlEntity(guid: string): string {\r\n    return this.getUrl(eavConstants.metadata.entity.targetType, eavConstants.metadata.entity.keyType, guid);\r\n  }\r\n\r\n  static getUrlLanguage(id: string): string {\r\n    return this.getUrl(eavConstants.metadata.language.targetType, eavConstants.metadata.language.keyType, id);\r\n  }\r\n\r\n}\r\n"],"x_google_ignoreList":[]}