{"version":3,"sources":["C:/Projects/2sxc/eav-item-dialog-angular/node_modules/@angular/material/__ivy_ngcc__/fesm5/menu.js"],"names":["_c0","_c1","_MatMenu_ng_template_0_Template","rf","ctx","_r116","$event","_handleKeydown","closed","emit","_onAnimationStart","_onAnimationDone","ctx_r114","panelId","_classList","_panelAnimationState","ariaLabel","ariaLabelledby","ariaDescribedby","matMenuAnimations","transformMenu","opacity","transform","fadeInItems","MatMenuContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_changeDetectorRef","this","_attached","prototype","attach","context","_portal","detach","_outlet","createElement","element","elementRef","nativeElement","parentNode","insertBefore","outletElement","markForCheck","next","isAttached","ngOnDestroy","dispose","ɵfac","t","ɵdir","type","selectors","MAT_MENU_PANEL","MatMenuItemBase","MatMenuItem","_super","_elementRef","document","_focusMonitor","_parentMenu","_this","call","role","_hovered","_focused","_highlighted","_triggersSubmenu","monitor","addItem","focus","origin","options","focusVia","_getHostElement","stopMonitoring","removeItem","complete","_getTabIndex","disabled","_checkDisabled","event","preventDefault","stopPropagation","_handleMouseEnter","getLabel","textNodeType","TEXT_NODE","output","childNodes","length_1","length","i","nodeType","textContent","trim","ɵcmp","hostAttrs","hostVars","hostBindings","toString","inputs","disableRipple","exportAs","features","attrs","ngContentSelectors","decls","vars","consts","template","directives","encapsulation","changeDetection","MAT_MENU_DEFAULT_OPTIONS","providedIn","factory","overlapTrigger","xPosition","yPosition","backdropClass","menuPanelUid","MatMenu","apply","arguments","ɵMatMenu_BaseFactory","_MatMenuBase","_ngZone","_defaultOptions","_xPosition","_yPosition","_directDescendantItems","_tabSubscription","EMPTY","_animationDone","_overlapTrigger","_hasBackdrop","hasBackdrop","close","Object","defineProperty","get","set","value","Error","throwMatMenuInvalidPositionX","setPositionClasses","enumerable","configurable","throwMatMenuInvalidPositionY","classes","previousPanelClass","_previousPanelClass","split","forEach","className","panelClass","ngOnInit","ngAfterContentInit","_updateDirectDescendants","_keyManager","withWrap","withTypeAhead","tabOut","subscribe","changes","pipe","items","map","item","focusedItem","updateActiveItem","destroy","unsubscribe","_item","keyCode","manager","parentMenu","direction","setFirstItemActive","setLastItemActive","setFocusOrigin","onKeydown","focusFirstItem","lazyContent","onStable","asObservable","_focusFirstItem","activeItem","first","parentElement","getAttribute","resetActiveItem","setActiveItem","setElevation","depth","newElevation","Math","min","customElevation","keys","find","c","startsWith","_previousElevation","posX","posY","_startAnimation","_resetAnimation","_isAnimating","toState","activeItemIndex","scrollTop","_allItems","reset","filter","notifyOnChanges","contentQueries","dirIndex","_t","viewQuery","templateRef","classList","outputs","_MatMenu","ngZone","defaultOptions","provide","useExisting","styles","data","animation","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","overlay","scrollStrategies","reposition","passiveEventListenerOptions","passive","MatMenuTrigger","_overlay","_element","scrollStrategy","_menuItemInstance","_dir","_overlayRef","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","restoreFocus","menuOpened","onMenuOpen","menuClosed","onMenuClose","addEventListener","triggersSubmenu","_scrollStrategy","menu","v","_menu","reason","_destroyMenu","_checkMenu","_handleHover","removeEventListener","toggleMenu","closeMenu","openMenu","overlayRef","_createOverlay","overlayConfig","getConfig","_setPosition","positionStrategy","_getPortal","menuData","_menuClosingActions","_initMenu","menuOpen","_restoreFocus","_setIsMenuOpen","undefined","dir","_setMenuElevation","isOpen","throwMatMenuMissingError","config","_getOverlayConfig","_subscribeToPositions","create","keydownEvents","position","flexibleConnectedTo","withLockedPosition","withTransformOriginOn","positionChanges","change","connectionPair","overlayX","overlayY","_a","originX","originFallbackX","_b","overlayFallbackY","_c","originY","originFallbackY","_d","overlayFallbackX","offsetY","withPositions","backdrop","backdropClick","detachments","parentClose","hover","active","_handleMousedown","button","_handleClick","_deprecatedMatMenuTriggerFor","_MatMenuDirectivesModule","ɵmod","ɵinj","providers","imports","MatMenuModule"],"mappings":"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","file":"default~app-administration-app-administration-module~apps-management-apps-management-module~content-~688b9b68.d093d4829bfc52b9627c.js","sourcesContent":["import { __extends, __spread, __read } from 'tslib';\nimport { FocusMonitor, FocusKeyManager, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, END, hasModifierKey, HOME, RIGHT_ARROW, LEFT_ARROW, ESCAPE } from '@angular/cdk/keycodes';\nimport { Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, ChangeDetectorRef, InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Input, HostListener, QueryList, EventEmitter, NgZone, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, filter, takeUntil, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, group, query, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nvar _c0 = [\"mat-menu-item\", \"\"];\nvar _c1 = [\"*\"];\nfunction _MatMenu_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    var _r116 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function _MatMenu_ng_template_0_Template_div_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r116); var ctx_r115 = ɵngcc0.ɵɵnextContext(); return ctx_r115._handleKeydown($event); })(\"click\", function _MatMenu_ng_template_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r116); var ctx_r117 = ɵngcc0.ɵɵnextContext(); return ctx_r117.closed.emit(\"click\"); })(\"@transformMenu.start\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r116); var ctx_r118 = ɵngcc0.ɵɵnextContext(); return ctx_r118._onAnimationStart($event); })(\"@transformMenu.done\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r116); var ctx_r119 = ɵngcc0.ɵɵnextContext(); return ctx_r119._onAnimationDone($event); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r114 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r114.panelId)(\"ngClass\", ctx_r114._classList)(\"@transformMenu\", ctx_r114._panelAnimationState);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r114.ariaLabel || null)(\"aria-labelledby\", ctx_r114.ariaLabelledby || null)(\"aria-describedby\", ctx_r114.ariaDescribedby || null);\n} }\nvar matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mat-menu-content, .mat-mdc-menu-content', animate('100ms linear', style({\n                opacity: 1\n            }))),\n            animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'scale(1)' })),\n        ])),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nvar fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nvar transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nvar MatMenuContent = /** @class */ (function () {\n    function MatMenuContent(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Emits when the menu content has been attached. */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    MatMenuContent.prototype.attach = function (context) {\n        if (context === void 0) { context = {}; }\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        var element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode.insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    };\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    MatMenuContent.prototype.detach = function () {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    };\n    MatMenuContent.prototype.ngOnDestroy = function () {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    };\n    /** @nocollapse */\n    MatMenuContent.ctorParameters = function () { return [\n        { type: TemplateRef },\n        { type: ComponentFactoryResolver },\n        { type: ApplicationRef },\n        { type: Injector },\n        { type: ViewContainerRef },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: ChangeDetectorRef }\n    ]; };\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) { return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatMenuContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenuContent, selectors: [[\"ng-template\", \"matMenuContent\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matMenuContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: ɵngcc0.Injector }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n    return MatMenuContent;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\nfunction throwMatMenuMissingError() {\n    throw Error(\"matMenuTriggerFor: must pass in an mat-menu instance.\\n\\n    Example:\\n      <mat-menu #menu=\\\"matMenu\\\"></mat-menu>\\n      <button [matMenuTriggerFor]=\\\"menu\\\"></button>\");\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(\"xPosition value must be either 'before' or after'.\\n      Example: <mat-menu xPosition=\\\"before\\\" #menu=\\\"matMenu\\\"></mat-menu>\");\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(\"yPosition value must be either 'above' or below'.\\n      Example: <mat-menu yPosition=\\\"above\\\" #menu=\\\"matMenu\\\"></mat-menu>\");\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nvar MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nvar MatMenuItemBase = /** @class */ (function () {\n    function MatMenuItemBase() {\n    }\n    return MatMenuItemBase;\n}());\nvar _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nvar MatMenuItem = /** @class */ (function (_super) {\n    __extends(MatMenuItem, _super);\n    function MatMenuItem(_elementRef, document, _focusMonitor, _parentMenu) {\n        var _this = \n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        _this._focusMonitor = _focusMonitor;\n        _this._parentMenu = _parentMenu;\n        /** ARIA role for the menu item. */\n        _this.role = 'menuitem';\n        /** Stream that emits when the menu item is hovered. */\n        _this._hovered = new Subject();\n        /** Stream that emits when the menu item is focused. */\n        _this._focused = new Subject();\n        /** Whether the menu item is highlighted. */\n        _this._highlighted = false;\n        /** Whether the menu item acts as a trigger for a sub-menu. */\n        _this._triggersSubmenu = false;\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(_this._elementRef, false);\n        }\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(_this);\n        }\n        _this._document = document;\n        return _this;\n    }\n    /** Focuses the menu item. */\n    MatMenuItem.prototype.focus = function (origin, options) {\n        if (origin === void 0) { origin = 'program'; }\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    };\n    MatMenuItem.prototype.ngOnDestroy = function () {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    };\n    /** Used to set the `tabindex`. */\n    MatMenuItem.prototype._getTabIndex = function () {\n        return this.disabled ? '-1' : '0';\n    };\n    /** Returns the host DOM element. */\n    MatMenuItem.prototype._getHostElement = function () {\n        return this._elementRef.nativeElement;\n    };\n    /** Prevents the default element actions if it is disabled. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    MatMenuItem.prototype._checkDisabled = function (event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n    /** Emits to the hover stream. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    MatMenuItem.prototype._handleMouseEnter = function () {\n        this._hovered.next(this);\n    };\n    /** Gets the label to be used when determining whether the option should be focused. */\n    MatMenuItem.prototype.getLabel = function () {\n        var element = this._elementRef.nativeElement;\n        var textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        var output = '';\n        if (element.childNodes) {\n            var length_1 = element.childNodes.length;\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (var i = 0; i < length_1; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n        return output.trim();\n    };\n    /** @nocollapse */\n    MatMenuItem.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: FocusMonitor },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] }\n    ]; };\n    MatMenuItem.propDecorators = {\n        role: [{ type: Input }],\n        _checkDisabled: [{ type: HostListener, args: ['click', ['$event'],] }],\n        _handleMouseEnter: [{ type: HostListener, args: ['mouseenter',] }]\n    };\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) { return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8)); };\nMatMenuItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMenuItem, selectors: [[\"\", \"mat-menu-item\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 10, hostBindings: function MatMenuItem_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) { return ctx._checkDisabled($event); })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() { return ctx._handleMouseEnter(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"mat-menu-item\", true)(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, exportAs: [\"matMenuItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 2, vars: 2, consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"]], template: function MatMenuItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelement(1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n        type: Component,\n        args: [{\n                selector: '[mat-menu-item]',\n                exportAs: 'matMenuItem',\n                inputs: ['disabled', 'disableRipple'],\n                host: {\n                    '[attr.role]': 'role',\n                    '[class.mat-menu-item]': 'true',\n                    '[class.mat-menu-item-highlighted]': '_highlighted',\n                    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': 'disabled || null',\n                    'class': 'mat-focus-indicator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }]; }, { _checkDisabled: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], _handleMouseEnter: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }], role: [{\n            type: Input\n        }] }); })();\n    return MatMenuItem;\n}(_MatMenuItemMixinBase));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-menu`. */\nvar MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\n/**\n * Start elevation for the menu panel.\n * @docs-private\n */\nvar MAT_MENU_BASE_ELEVATION = 4;\nvar menuPanelUid = 0;\n/** Base class with all of the `MatMenu` functionality. */\nvar _MatMenuBase = /** @class */ (function () {\n    function _MatMenuBase(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /** Only the direct descendant menu items. */\n        this._directDescendantItems = new QueryList();\n        /** Subscription to tab events on the menu panel */\n        this._tabSubscription = Subscription.EMPTY;\n        /** Config object to be passed into the menu's ngClass */\n        this._classList = {};\n        /** Current state of the panel animation. */\n        this._panelAnimationState = 'void';\n        /** Emits whenever an animation on the menu completes. */\n        this._animationDone = new Subject();\n        /** Class to be added to the backdrop element. */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /** Event emitted when the menu is closed. */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * @breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = \"mat-menu-panel-\" + menuPanelUid++;\n    }\n    Object.defineProperty(_MatMenuBase.prototype, \"xPosition\", {\n        /** Position of the menu in the X axis. */\n        get: function () { return this._xPosition; },\n        set: function (value) {\n            if (value !== 'before' && value !== 'after') {\n                throwMatMenuInvalidPositionX();\n            }\n            this._xPosition = value;\n            this.setPositionClasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_MatMenuBase.prototype, \"yPosition\", {\n        /** Position of the menu in the Y axis. */\n        get: function () { return this._yPosition; },\n        set: function (value) {\n            if (value !== 'above' && value !== 'below') {\n                throwMatMenuInvalidPositionY();\n            }\n            this._yPosition = value;\n            this.setPositionClasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_MatMenuBase.prototype, \"overlapTrigger\", {\n        /** Whether the menu should overlap its trigger. */\n        get: function () { return this._overlapTrigger; },\n        set: function (value) {\n            this._overlapTrigger = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_MatMenuBase.prototype, \"hasBackdrop\", {\n        /** Whether the menu has a backdrop. */\n        get: function () { return this._hasBackdrop; },\n        set: function (value) {\n            this._hasBackdrop = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_MatMenuBase.prototype, \"panelClass\", {\n        /**\n         * This method takes classes set on the host mat-menu element and applies them on the\n         * menu template that displays in the overlay container.  Otherwise, it's difficult\n         * to style the containing menu from outside the component.\n         * @param classes list of class names\n         */\n        set: function (classes) {\n            var _this = this;\n            var previousPanelClass = this._previousPanelClass;\n            if (previousPanelClass && previousPanelClass.length) {\n                previousPanelClass.split(' ').forEach(function (className) {\n                    _this._classList[className] = false;\n                });\n            }\n            this._previousPanelClass = classes;\n            if (classes && classes.length) {\n                classes.split(' ').forEach(function (className) {\n                    _this._classList[className] = true;\n                });\n                this._elementRef.nativeElement.className = '';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_MatMenuBase.prototype, \"classList\", {\n        /**\n         * This method takes classes set on the host mat-menu element and applies them on the\n         * menu template that displays in the overlay container.  Otherwise, it's difficult\n         * to style the containing menu from outside the component.\n         * @deprecated Use `panelClass` instead.\n         * @breaking-change 8.0.0\n         */\n        get: function () { return this.panelClass; },\n        set: function (classes) { this.panelClass = classes; },\n        enumerable: true,\n        configurable: true\n    });\n    _MatMenuBase.prototype.ngOnInit = function () {\n        this.setPositionClasses();\n    };\n    _MatMenuBase.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(function () { return _this.closed.emit('tab'); });\n        // If a user manually (programatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes.pipe(startWith(this._directDescendantItems), switchMap(function (items) { return merge.apply(void 0, __spread(items.map(function (item) { return item._focused; }))); })).subscribe(function (focusedItem) { return _this._keyManager.updateActiveItem(focusedItem); });\n    };\n    _MatMenuBase.prototype.ngOnDestroy = function () {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    };\n    /** Stream that emits whenever the hovered menu item changes. */\n    _MatMenuBase.prototype._hovered = function () {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        var itemChanges = this._directDescendantItems.changes;\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(function (items) { return merge.apply(void 0, __spread(items.map(function (item) { return item._hovered; }))); }));\n    };\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    _MatMenuBase.prototype.addItem = function (_item) { };\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    _MatMenuBase.prototype.removeItem = function (_item) { };\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _MatMenuBase.prototype._handleKeydown = function (event) {\n        var keyCode = event.keyCode;\n        var manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifierKey(event)) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n        }\n    };\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    _MatMenuBase.prototype.focusFirstItem = function (origin) {\n        var _this = this;\n        if (origin === void 0) { origin = 'program'; }\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(function () { return _this._focusFirstItem(origin); });\n        }\n        else {\n            this._focusFirstItem(origin);\n        }\n    };\n    /**\n     * Actual implementation that focuses the first item. Needs to be separated\n     * out so we don't repeat the same logic in the public `focusFirstItem` method.\n     */\n    _MatMenuBase.prototype._focusFirstItem = function (origin) {\n        var manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && this._directDescendantItems.length) {\n            var element = this._directDescendantItems.first._getHostElement().parentElement;\n            // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            while (element) {\n                if (element.getAttribute('role') === 'menu') {\n                    element.focus();\n                    break;\n                }\n                else {\n                    element = element.parentElement;\n                }\n            }\n        }\n    };\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    _MatMenuBase.prototype.resetActiveItem = function () {\n        this._keyManager.setActiveItem(-1);\n    };\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n    _MatMenuBase.prototype.setElevation = function (depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        var elevation = Math.min(MAT_MENU_BASE_ELEVATION + depth, 24);\n        var newElevation = \"mat-elevation-z\" + elevation;\n        var customElevation = Object.keys(this._classList).find(function (c) { return c.startsWith('mat-elevation-z'); });\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    };\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    _MatMenuBase.prototype.setPositionClasses = function (posX, posY) {\n        if (posX === void 0) { posX = this.xPosition; }\n        if (posY === void 0) { posY = this.yPosition; }\n        var classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    };\n    /** Starts the enter animation. */\n    _MatMenuBase.prototype._startAnimation = function () {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    };\n    /** Resets the panel animation to its initial state. */\n    _MatMenuBase.prototype._resetAnimation = function () {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    };\n    /** Callback that is invoked when the panel animation completes. */\n    _MatMenuBase.prototype._onAnimationDone = function (event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    };\n    _MatMenuBase.prototype._onAnimationStart = function (event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    };\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    _MatMenuBase.prototype._updateDirectDescendants = function () {\n        var _this = this;\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe(function (items) {\n            _this._directDescendantItems.reset(items.filter(function (item) { return item._parentMenu === _this; }));\n            _this._directDescendantItems.notifyOnChanges();\n        });\n    };\n    /** @nocollapse */\n    _MatMenuBase.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n    ]; };\n    _MatMenuBase.propDecorators = {\n        _allItems: [{ type: ContentChildren, args: [MatMenuItem, { descendants: true },] }],\n        backdropClass: [{ type: Input }],\n        ariaLabel: [{ type: Input, args: ['aria-label',] }],\n        ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n        ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n        xPosition: [{ type: Input }],\n        yPosition: [{ type: Input }],\n        templateRef: [{ type: ViewChild, args: [TemplateRef,] }],\n        items: [{ type: ContentChildren, args: [MatMenuItem, { descendants: false },] }],\n        lazyContent: [{ type: ContentChild, args: [MatMenuContent,] }],\n        overlapTrigger: [{ type: Input }],\n        hasBackdrop: [{ type: Input }],\n        panelClass: [{ type: Input, args: ['class',] }],\n        classList: [{ type: Input }],\n        closed: [{ type: Output }],\n        close: [{ type: Output }]\n    };\n_MatMenuBase.ɵfac = function _MatMenuBase_Factory(t) { return new (t || _MatMenuBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenuBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatMenuBase, contentQueries: function _MatMenuBase_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allItems = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    } }, viewQuery: function _MatMenuBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    } }, inputs: { backdropClass: \"backdropClass\", xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { closed: \"closed\", close: \"close\" } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenuBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, { backdropClass: [{\n            type: Input\n        }], closed: [{\n            type: Output\n        }], close: [{\n            type: Output\n        }], xPosition: [{\n            type: Input\n        }], yPosition: [{\n            type: Input\n        }], overlapTrigger: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], panelClass: [{\n            type: Input,\n            args: ['class']\n        }], classList: [{\n            type: Input\n        }], _allItems: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], templateRef: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }], items: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: false }]\n        }], lazyContent: [{\n            type: ContentChild,\n            args: [MatMenuContent]\n        }] }); })();\n    return _MatMenuBase;\n}());\n/** @docs-private We show the \"_MatMenu\" class as \"MatMenu\" in the docs. */\nvar MatMenu = /** @class */ (function (_super) {\n    __extends(MatMenu, _super);\n    function MatMenu() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\nMatMenu.ɵfac = function MatMenu_Factory(t) { return ɵMatMenu_BaseFactory(t || MatMenu); };\nMatMenu.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenu, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nvar ɵMatMenu_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatMenu);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenu, [{\n        type: Directive\n    }], null, null); })();\n    return MatMenu;\n}(_MatMenuBase));\n// Note on the weird inheritance setup: we need three classes, because the MDC-based menu has to\n// extend `MatMenu`, however keeping a reference to it will cause the inlined template and styles\n// to be retained as well. The MDC menu also has to provide itself as a `MatMenu` in order for\n// queries and DI to work correctly, while still not referencing the actual menu class.\n// Class responsibility is split up as follows:\n// * _MatMenuBase - provides all the functionality without any of the Angular metadata.\n// * MatMenu - keeps the same name symbol name as the current menu and\n// is used as a provider for DI and query purposes.\n// * _MatMenu - the actual menu component implementation with the Angular metadata that should\n// be tree shaken away for MDC.\n/** @docs-public MatMenu */\nvar _MatMenu = /** @class */ (function (_super) {\n    __extends(_MatMenu, _super);\n    function _MatMenu(elementRef, ngZone, defaultOptions) {\n        return _super.call(this, elementRef, ngZone, defaultOptions) || this;\n    }\n    /** @nocollapse */\n    _MatMenu.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n    ]; };\n_MatMenu.ɵfac = function _MatMenu_Factory(t) { return new (t || _MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenu.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: _MatMenu, selectors: [[\"mat-menu\"]], exportAs: [\"matMenu\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n            { provide: MatMenu, useExisting: _MatMenu }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"id\", \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]], template: function _MatMenu_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, _MatMenu_ng_template_0_Template, 3, 6, \"ng-template\");\n    } }, directives: [ɵngcc3.NgClass], styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, data: { animation: [\n            matMenuAnimations.transformMenu,\n            matMenuAnimations.fadeInItems\n        ] }, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenu, [{\n        type: Component,\n        args: [{\n                selector: 'mat-menu',\n                template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matMenu',\n                animations: [\n                    matMenuAnimations.transformMenu,\n                    matMenuAnimations.fadeInItems\n                ],\n                providers: [\n                    { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n                    { provide: MatMenu, useExisting: _MatMenu }\n                ],\n                styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n    return _MatMenu;\n}(MatMenu));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that determines the scroll handling while the menu is open. */\nvar MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return function () { return overlay.scrollStrategies.reposition(); };\n}\n/** @docs-private */\nvar MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/** Default top padding of the menu panel. */\nvar MENU_PANEL_TOP_PADDING = 8;\n/** Options for binding a passive event listener. */\nvar passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n/** Directive applied to an element that should trigger a `mat-menu`. */\nvar MatMenuTrigger = /** @class */ (function () {\n    function MatMenuTrigger(_overlay, _element, _viewContainerRef, scrollStrategy, _parentMenu, _menuItemInstance, _dir, \n    // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\n    // @breaking-change 8.0.0\n    _focusMonitor) {\n        var _this = this;\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._parentMenu = _parentMenu;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = function () { return _this._openedBy = 'touch'; };\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = null;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /** Event emitted when the associated menu is opened. */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /** Event emitted when the associated menu is closed. */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    Object.defineProperty(MatMenuTrigger.prototype, \"_deprecatedMatMenuTriggerFor\", {\n        /**\n         * @deprecated\n         * @breaking-change 8.0.0\n         */\n        get: function () { return this.menu; },\n        set: function (v) {\n            this.menu = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatMenuTrigger.prototype, \"menu\", {\n        /** References the menu instance that the trigger is associated with. */\n        get: function () { return this._menu; },\n        set: function (menu) {\n            var _this = this;\n            if (menu === this._menu) {\n                return;\n            }\n            this._menu = menu;\n            this._menuCloseSubscription.unsubscribe();\n            if (menu) {\n                this._menuCloseSubscription = menu.close.asObservable().subscribe(function (reason) {\n                    _this._destroyMenu();\n                    // If a click closed the menu, we should close the entire chain of nested menus.\n                    if ((reason === 'click' || reason === 'tab') && _this._parentMenu) {\n                        _this._parentMenu.closed.emit(reason);\n                    }\n                });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MatMenuTrigger.prototype.ngAfterContentInit = function () {\n        this._checkMenu();\n        this._handleHover();\n    };\n    MatMenuTrigger.prototype.ngOnDestroy = function () {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    };\n    Object.defineProperty(MatMenuTrigger.prototype, \"menuOpen\", {\n        /** Whether the menu is open. */\n        get: function () {\n            return this._menuOpen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatMenuTrigger.prototype, \"dir\", {\n        /** The text direction of the containing app. */\n        get: function () {\n            return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    MatMenuTrigger.prototype.triggersSubmenu = function () {\n        return !!(this._menuItemInstance && this._parentMenu);\n    };\n    /** Toggles the menu between the open and closed states. */\n    MatMenuTrigger.prototype.toggleMenu = function () {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    };\n    /** Opens the menu. */\n    MatMenuTrigger.prototype.openMenu = function () {\n        var _this = this;\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        var overlayRef = this._createOverlay();\n        var overlayConfig = overlayRef.getConfig();\n        this._setPosition(overlayConfig.positionStrategy);\n        overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\n            this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe(function () { return _this.closeMenu(); });\n        this._initMenu();\n        if (this.menu instanceof MatMenu) {\n            this.menu._startAnimation();\n        }\n    };\n    /** Closes the menu. */\n    MatMenuTrigger.prototype.closeMenu = function () {\n        this.menu.close.emit();\n    };\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    MatMenuTrigger.prototype.focus = function (origin, options) {\n        if (origin === void 0) { origin = 'program'; }\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    };\n    /** Closes the menu and does the necessary cleanup. */\n    MatMenuTrigger.prototype._destroyMenu = function () {\n        var _this = this;\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        var menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        this._restoreFocus();\n        if (menu instanceof MatMenu) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter(function (event) { return event.toState === 'void'; }), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: function () { return menu.lazyContent.detach(); },\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: function () { return _this._setIsMenuOpen(false); }\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    };\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     */\n    MatMenuTrigger.prototype._initMenu = function () {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this._setIsMenuOpen(true);\n        this.menu.focusFirstItem(this._openedBy || 'program');\n    };\n    /** Updates the menu elevation based on the amount of parent menus that it has. */\n    MatMenuTrigger.prototype._setMenuElevation = function () {\n        if (this.menu.setElevation) {\n            var depth = 0;\n            var parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    };\n    /** Restores focus to the element that was focused before the menu was open. */\n    MatMenuTrigger.prototype._restoreFocus = function () {\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (this.restoreFocus) {\n            if (!this._openedBy) {\n                // Note that the focus style will show up both for `program` and\n                // `keyboard` so we don't have to specify which one it is.\n                this.focus();\n            }\n            else if (!this.triggersSubmenu()) {\n                this.focus(this._openedBy);\n            }\n        }\n        this._openedBy = null;\n    };\n    // set state rather than toggle to support triggers sharing a menu\n    MatMenuTrigger.prototype._setIsMenuOpen = function (isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._highlighted = isOpen;\n        }\n    };\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     */\n    MatMenuTrigger.prototype._checkMenu = function () {\n        if (!this.menu) {\n            throwMatMenuMissingError();\n        }\n    };\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    MatMenuTrigger.prototype._createOverlay = function () {\n        if (!this._overlayRef) {\n            var config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy);\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    };\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    MatMenuTrigger.prototype._getOverlayConfig = function () {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    };\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    MatMenuTrigger.prototype._subscribeToPositions = function (position) {\n        var _this = this;\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe(function (change) {\n                var posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                var posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                _this.menu.setPositionClasses(posX, posY);\n            });\n        }\n    };\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    MatMenuTrigger.prototype._setPosition = function (positionStrategy) {\n        var _a = __read(this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'], 2), originX = _a[0], originFallbackX = _a[1];\n        var _b = __read(this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'], 2), overlayY = _b[0], overlayFallbackY = _b[1];\n        var _c = __read([overlayY, overlayFallbackY], 2), originY = _c[0], originFallbackY = _c[1];\n        var _d = __read([originX, originFallbackX], 2), overlayX = _d[0], overlayFallbackX = _d[1];\n        var offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX: originX, originY: originY, overlayX: overlayX, overlayY: overlayY, offsetY: offsetY },\n            { originX: originFallbackX, originY: originY, overlayX: overlayFallbackX, overlayY: overlayY, offsetY: offsetY },\n            {\n                originX: originX,\n                originY: originFallbackY,\n                overlayX: overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    };\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n    MatMenuTrigger.prototype._menuClosingActions = function () {\n        var _this = this;\n        var backdrop = this._overlayRef.backdropClick();\n        var detachments = this._overlayRef.detachments();\n        var parentClose = this._parentMenu ? this._parentMenu.closed : of();\n        var hover = this._parentMenu ? this._parentMenu._hovered().pipe(filter(function (active) { return active !== _this._menuItemInstance; }), filter(function () { return _this._menuOpen; })) : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    };\n    /** Handles mouse presses on the trigger. */\n    MatMenuTrigger.prototype._handleMousedown = function (event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : null;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    };\n    /** Handles key presses on the trigger. */\n    MatMenuTrigger.prototype._handleKeydown = function (event) {\n        var keyCode = event.keyCode;\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this.openMenu();\n        }\n    };\n    /** Handles click events on the trigger. */\n    MatMenuTrigger.prototype._handleClick = function (event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    };\n    /** Handles the cases where the user hovers over the trigger. */\n    MatMenuTrigger.prototype._handleHover = function () {\n        var _this = this;\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu()) {\n            return;\n        }\n        this._hoverSubscription = this._parentMenu._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter(function (active) { return active === _this._menuItemInstance && !active.disabled; }), delay(0, asapScheduler))\n            .subscribe(function () {\n            _this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (_this.menu instanceof MatMenu && _this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                _this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(_this._parentMenu._hovered()))\n                    .subscribe(function () { return _this.openMenu(); });\n            }\n            else {\n                _this.openMenu();\n            }\n        });\n    };\n    /** Gets the portal that should be attached to the overlay. */\n    MatMenuTrigger.prototype._getPortal = function () {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    };\n    /** @nocollapse */\n    MatMenuTrigger.ctorParameters = function () { return [\n        { type: Overlay },\n        { type: ElementRef },\n        { type: ViewContainerRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY,] }] },\n        { type: MatMenu, decorators: [{ type: Optional }] },\n        { type: MatMenuItem, decorators: [{ type: Optional }, { type: Self }] },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: FocusMonitor }\n    ]; };\n    MatMenuTrigger.propDecorators = {\n        _deprecatedMatMenuTriggerFor: [{ type: Input, args: ['mat-menu-trigger-for',] }],\n        menu: [{ type: Input, args: ['matMenuTriggerFor',] }],\n        menuData: [{ type: Input, args: ['matMenuTriggerData',] }],\n        restoreFocus: [{ type: Input, args: ['matMenuTriggerRestoreFocus',] }],\n        menuOpened: [{ type: Output }],\n        onMenuOpen: [{ type: Output }],\n        menuClosed: [{ type: Output }],\n        onMenuClose: [{ type: Output }]\n    };\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) { return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MatMenu, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\nMatMenuTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenuTrigger, selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]], hostAttrs: [\"aria-haspopup\", \"true\", 1, \"mat-menu-trigger\"], hostVars: 2, hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) { return ctx._handleMousedown($event); })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null)(\"aria-controls\", ctx.menuOpen ? ctx.menu.panelId : null);\n    } }, inputs: { restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"], _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, exportAs: [\"matMenuTrigger\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n        type: Directive,\n        args: [{\n                selector: \"[mat-menu-trigger-for], [matMenuTriggerFor]\",\n                host: {\n                    'class': 'mat-menu-trigger',\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'menuOpen || null',\n                    '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(click)': '_handleClick($event)'\n                },\n                exportAs: 'matMenuTrigger'\n            }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_SCROLL_STRATEGY]\n            }] }, { type: MatMenu, decorators: [{\n                type: Optional\n            }] }, { type: MatMenuItem, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }]; }, { restoreFocus: [{\n            type: Input,\n            args: ['matMenuTriggerRestoreFocus']\n        }], menuOpened: [{\n            type: Output\n        }], onMenuOpen: [{\n            type: Output\n        }], menuClosed: [{\n            type: Output\n        }], onMenuClose: [{\n            type: Output\n        }], _deprecatedMatMenuTriggerFor: [{\n            type: Input,\n            args: ['mat-menu-trigger-for']\n        }], menu: [{\n            type: Input,\n            args: ['matMenuTriggerFor']\n        }], menuData: [{\n            type: Input,\n            args: ['matMenuTriggerData']\n        }] }); })();\n    return MatMenuTrigger;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\nvar _MatMenuDirectivesModule = /** @class */ (function () {\n    function _MatMenuDirectivesModule() {\n    }\n_MatMenuDirectivesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatMenuDirectivesModule });\n_MatMenuDirectivesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatMenuDirectivesModule_Factory(t) { return new (t || _MatMenuDirectivesModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatMenuDirectivesModule, { declarations: function () { return [MatMenuTrigger,\n        MatMenuContent]; }, exports: function () { return [MatMenuTrigger,\n        MatMenuContent,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenuDirectivesModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n                declarations: [\n                    MatMenuTrigger,\n                    MatMenuContent,\n                ],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], function () { return []; }, null); })();\n    return _MatMenuDirectivesModule;\n}());\nvar MatMenuModule = /** @class */ (function () {\n    function MatMenuModule() {\n    }\nMatMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatMenuModule });\nMatMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatMenuModule_Factory(t) { return new (t || MatMenuModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            CommonModule,\n            MatCommonModule,\n            MatRippleModule,\n            OverlayModule,\n            _MatMenuDirectivesModule,\n        ],\n        _MatMenuDirectivesModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, { declarations: function () { return [_MatMenu,\n        MatMenuItem]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule,\n        _MatMenuDirectivesModule]; }, exports: function () { return [_MatMenu,\n        MatMenuItem,\n        _MatMenuDirectivesModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    MatRippleModule,\n                    OverlayModule,\n                    _MatMenuDirectivesModule,\n                ],\n                exports: [_MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n                declarations: [_MatMenu, MatMenuItem],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], function () { return []; }, null); })();\n    return MatMenuModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenu, _MatMenuBase, _MatMenuDirectivesModule, fadeInItems, matMenuAnimations, transformMenu, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵangular_material_src_material_menu_menu_a, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵangular_material_src_material_menu_menu_b, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵangular_material_src_material_menu_menu_c };\n\n//# sourceMappingURL=menu.js.map"],"sourceRoot":"webpack:///"}