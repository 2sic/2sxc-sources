{"version":3,"file":"projects_eav-ui_src_app_content-import_content-import_component_ts.db3b15f47a56659c.js","mappings":"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","names":["i0","_r10","_r8","click","$event","ctx_r11","fileChange","ctx_r12","formValues","resourcesReferences","ctx_r13","clearEntities","ctx_r14","closeDialog","ctx_r15","evaluateContent","ctx_r3","file","name","ctx_r17","vm_r1","evaluationResult","Detail","DocumentElementsCount","LanguagesInDocumentCount","AttributeNamesInDocument","length","join","AmountOfEntitiesCreated","AmountOfEntitiesUpdated","AmountOfEntitiesDeleted","AttributeNamesNotImported","error_r21","ErrorDetail","LineNumber","LineDetail","ContentImportComponent_div_0_ng_container_10_ng_container_4_ng_container_1_div_2_li_4_div_3_Template","ContentImportComponent_div_0_ng_container_10_ng_container_4_ng_container_1_div_2_li_4_div_4_Template","ContentImportComponent_div_0_ng_container_10_ng_container_4_ng_container_1_div_2_li_4_div_5_Template","ctx_r20","errors","ErrorCode","ContentImportComponent_div_0_ng_container_10_ng_container_4_ng_container_1_div_2_li_4_Template","ctx_r18","Errors","ContentImportComponent_div_0_ng_container_10_ng_container_4_ng_container_1_div_1_Template","ContentImportComponent_div_0_ng_container_10_ng_container_4_ng_container_1_div_2_Template","_r30","ctx_r29","back","ctx_r31","importContent","Success","ContentImportComponent_div_0_ng_container_10_ng_container_4_ng_container_1_Template","ContentImportComponent_div_0_ng_container_10_ng_container_5_div_1_p_1_Template","ContentImportComponent_div_0_ng_container_10_ng_container_5_div_1_p_2_Template","importResult","ContentImportComponent_div_0_ng_container_10_ng_container_5_div_1_Template","_r39","ctx_r38","ContentImportComponent_div_0_ng_container_10_form_2_Template","ContentImportComponent_div_0_ng_container_10_div_3_Template","ContentImportComponent_div_0_ng_container_10_ng_container_4_Template","ContentImportComponent_div_0_ng_container_10_ng_container_5_Template","viewStateSelected","_r43","ctx_r42","filesDropped","ContentImportComponent_div_0_ng_container_10_Template","contentType","Name","ctx_r0","ContentImportComponent","_class","constructor","dialogData","dialogRef","route","contentImportService","appDialogConfigService","contentTypesService","this","hostClass","contentType$","BehaviorSubject","loading$","viewStates","waiting","default","evaluated","imported","viewStateSelected$","evaluationResult$","importResult$","viewModel$","combineLatest","pipe","map","loading","contentTypeStaticName","snapshot","paramMap","get","ngOnInit","next","retrieveContentType","dialogSettings$","getShared$","forkJoin","subscribe","dialogSettings","defaultLanguage","Context","Language","Primary","files","ngOnDestroy","complete","close","result","event","target","MAT_DIALOG_DATA","i1","i2","i3","i4","i5","selectors","hostVars","hostBindings","rf","ctx","ContentImportComponent_div_0_Template","DragAndDropDirective","BaseSubsinkComponent","elementRef","zone","snackBar","super","markStyle","allowedFileTypes","EventEmitter","dropAreaClass","dragClass","timeouts","element","nativeElement","markStyleClass","classList","add","runOutsideAngular","subscription","fromEvent","preventDefault","stopPropagation","clearTimeouts","push","window","setTimeout","remove","onDrop","Array","from","dataTransfer","filterTypes","emit","timeout","clearTimeout","allowedTypes","split","type","toLocaleLowerCase","filtered","filter","extIndex","lastIndexOf","ext","substring","includes","allowedTypesString","replace","open","duration"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/content-import/content-import.component.html","./projects/eav-ui/src/app/content-import/content-import.component.ts","./projects/eav-ui/src/app/shared/directives/drag-and-drop.directive.ts"],"sourcesContent":["<div class=\"eav-dialog\" *ngIf=\"viewModel$ | async as vm\" appDragAndDrop \r\n  [allowedFileTypes]=\"'xml'\" (filesDropped)=\"filesDropped($event)\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">{{ vm.contentType?.Name }} Import Data</div>\r\n  </div>\r\n  <div class=\"eav-dialog-description\">\r\n    <p>\r\n      This will import content-items into 2sxc. It requires that you already defined the content-type before you try\r\n      importing, and that you created the import-file using the template provided by the Export. Please visit\r\n      <a href=\"https://2sxc.org/help\" target=\"_blank\">https://2sxc.org/help</a> for more instructions.\r\n    </p>\r\n  </div>\r\n  <ng-container *ngIf=\"formValues != null\">\r\n    <ng-container [ngSwitch]=\"vm.viewStateSelected\">\r\n  \r\n      <!-- FORM -->\r\n      <form #ngForm=\"ngForm\" *ngSwitchCase=\"1\">\r\n        <div class=\"eav-dialog-content\">\r\n          <div>\r\n            <button mat-raised-button tippy=\"Open file browser\" (click)=\"fileInput.click()\">\r\n              <span>{{ formValues.file ? formValues.file.name : 'Select or drop file' }}</span>\r\n            </button>\r\n            <input #fileInput type=\"file\" (change)=\"fileChange($event)\" class=\"hide\" />\r\n          </div>\r\n  \r\n          <div>\r\n            <p class=\"eav-radio-group-label\">References to pages / files</p>\r\n            <mat-radio-group class=\"eav-radio-group\" [(ngModel)]=\"formValues.resourcesReferences\" name=\"ResourcesReferences\">\r\n              <mat-radio-button value=\"Keep\">\r\n                Import links as written in the file (for example /Portals/...)\r\n              </mat-radio-button>\r\n              <mat-radio-button value=\"Resolve\">\r\n                Try to resolve paths to references\r\n              </mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n  \r\n          <div>\r\n            <p class=\"eav-radio-group-label\">Clear all other entities</p>\r\n            <mat-radio-group class=\"eav-radio-group\" [(ngModel)]=\"formValues.clearEntities\" name=\"ClearEntities\">\r\n              <mat-radio-button value=\"None\">\r\n                Keep all entities not found in import\r\n              </mat-radio-button>\r\n              <mat-radio-button value=\"All\">\r\n                Remove all entities not found in import\r\n              </mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n  \r\n          <p class=\"eav-hint\">Remember to backup your DNN first!</p>\r\n        </div>\r\n  \r\n        <mat-dialog-actions align=\"end\">\r\n          <button mat-raised-button (click)=\"closeDialog()\">Cancel</button>\r\n          <button mat-raised-button color=\"accent\" [disabled]=\"!formValues.file || !formValues.file.name\"\r\n            (click)=\"evaluateContent()\">\r\n            Preview Import\r\n          </button>\r\n        </mat-dialog-actions>\r\n      </form>\r\n      <!-- END FORM -->\r\n  \r\n      <!-- WAITING -->\r\n      <div class=\"eav-dialog-content\" *ngSwitchCase=\"0\">\r\n        <p>Please wait while processing...</p>\r\n      </div>\r\n      <!-- END WAITING -->\r\n  \r\n      <!-- EVALUATION RESULT -->\r\n      <ng-container *ngSwitchCase=\"2\">\r\n        <ng-container *ngIf=\"vm.evaluationResult\">\r\n          <!-- DETAILS / STATISTICS -->\r\n          <div *ngIf=\"vm.evaluationResult.Success\" class=\"eav-dialog-content\">\r\n            <p class=\"eav-evaluation__title\">Try to import file '{{ formValues.file.name }}'</p>\r\n            <p class=\"eav-evaluation__title\">File contains:</p>\r\n            <ul class=\"eav-evaluation__content\">\r\n              <li>{{ vm.evaluationResult.Detail.DocumentElementsCount }} content-items (records/entities)</li>\r\n              <li>{{ vm.evaluationResult.Detail.LanguagesInDocumentCount }} languages</li>\r\n              <li>{{ vm.evaluationResult.Detail.AttributeNamesInDocument.length }} columns:\r\n                {{ vm.evaluationResult.Detail.AttributeNamesInDocument.join(', ') }}</li>\r\n            </ul>\r\n            <p class=\"eav-evaluation__title\">If you press Import, it will:</p>\r\n            <ul class=\"eav-evaluation__content\">\r\n              <li>Create {{ vm.evaluationResult.Detail.AmountOfEntitiesCreated }} content-items</li>\r\n              <li>Update {{ vm.evaluationResult.Detail.AmountOfEntitiesUpdated }} content-items</li>\r\n              <li>Delete {{ vm.evaluationResult.Detail.AmountOfEntitiesDeleted }} content-items</li>\r\n              <li>Ignore {{ vm.evaluationResult.Detail.AttributeNamesNotImported.length }} columns:\r\n                {{ vm.evaluationResult.Detail.AttributeNamesNotImported.join(', ') }}</li>\r\n            </ul>\r\n            <p class=\"eav-hint\">Note: The import validates much data and may take several minutes.</p>\r\n          </div>\r\n          <!-- END DETAILS / STATISTICS -->\r\n          <!-- ERRORS -->\r\n          <div *ngIf=\"!vm.evaluationResult.Success\" class=\"eav-dialog-content\">\r\n            <p class=\"eav-evaluation__title\">Try to import file '{{ formValues.file.name }}'</p>\r\n            <ul class=\"eav-evaluation__content\">\r\n              <li *ngFor=\"let error of vm.evaluationResult.Errors\">\r\n                <div>{{ errors[error.ErrorCode] }}</div>\r\n                <div *ngIf=\"error.ErrorDetail\"><i>Details: {{ error.ErrorDetail }}</i></div>\r\n                <div *ngIf=\"error.LineNumber\"><i>Line-no: {{ error.LineNumber }}</i></div>\r\n                <div *ngIf=\"error.LineDetail\"><i>Line-details: {{ error.LineDetail }}</i></div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <!-- END ERRORS -->\r\n          <mat-dialog-actions align=\"end\">\r\n            <button mat-raised-button (click)=\"back()\">Back</button>\r\n            <button mat-raised-button color=\"accent\" [disabled]=\"!vm.evaluationResult.Success\" (click)=\"importContent()\">\r\n              Import\r\n            </button>\r\n          </mat-dialog-actions>\r\n        </ng-container>\r\n      </ng-container>\r\n      <!-- END EVALUATION RESULT -->\r\n  \r\n      <!-- IMPORT RESULT -->\r\n      <ng-container *ngSwitchCase=\"3\">\r\n        <div *ngIf=\"vm.importResult\" class=\"eav-dialog-content\">\r\n          <p *ngIf=\"vm.importResult.Success\">Import done.</p>\r\n          <p *ngIf=\"!vm.importResult.Success\">Import failed.</p>\r\n        </div>\r\n        <mat-dialog-actions align=\"end\">\r\n          <button mat-raised-button color=\"accent\" (click)=\"closeDialog()\">Close</button>\r\n        </mat-dialog-actions>\r\n      </ng-container>\r\n      <!-- END IMPORT RESULT -->\r\n    </ng-container>\r\n  </ng-container>\r\n</div>","import { Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, forkJoin, map } from 'rxjs';\r\nimport { ContentType } from '../app-administration/models/content-type.model';\r\nimport { AppDialogConfigService } from '../app-administration/services/app-dialog-config.service';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { ContentImportDialogData } from './content-import-dialog.config';\r\nimport { ContentImport, EvaluateContentResult, ImportContentResult } from './models/content-import.model';\r\nimport { ContentImportService } from './services/content-import.service';\r\n\r\n@Component({\r\n  selector: 'app-content-import',\r\n  templateUrl: './content-import.component.html',\r\n  styleUrls: ['./content-import.component.scss'],\r\n})\r\nexport class ContentImportComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  formValues: ContentImport;\r\n  private contentType$ = new BehaviorSubject<ContentType>(null);\r\n  private loading$ = new BehaviorSubject(false);\r\n  private viewStates = {\r\n    waiting: 0,\r\n    default: 1,\r\n    evaluated: 2,\r\n    imported: 3,\r\n  };\r\n  private viewStateSelected$ = new BehaviorSubject<number>(this.viewStates.default);\r\n  private evaluationResult$ = new BehaviorSubject<EvaluateContentResult>(null);\r\n  private importResult$ = new BehaviorSubject<ImportContentResult>(null);\r\n  viewModel$ = combineLatest([\r\n    this.contentType$, this.loading$, this.viewStateSelected$, this.evaluationResult$, this.importResult$,\r\n  ]).pipe(\r\n    map(([contentType, loading, viewStateSelected, evaluationResult, importResult]) =>\r\n      ({ contentType, loading, viewStateSelected, evaluationResult, importResult })),\r\n  );\r\n  errors: Record<number, string> = {\r\n    0: 'Unknown error occured.',\r\n    1: 'Selected content-type does not exist.',\r\n    2: 'Document is not a valid XML file.',\r\n    3: 'Selected content-type does not match the content-type in the XML file.',\r\n    4: 'The language is not supported.',\r\n    5: 'The document does not specify all languages for all entities.',\r\n    6: 'Language reference cannot be parsed, the language is not supported.',\r\n    7: 'Language reference cannot be parsed, the read-write protection is not supported.',\r\n    8: 'Value cannot be read, because of it has an invalid format.'\r\n  };\r\n\r\n  private contentTypeStaticName = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: ContentImportDialogData,\r\n    private dialogRef: MatDialogRef<ContentImportComponent>,\r\n    private route: ActivatedRoute,\r\n    private contentImportService: ContentImportService,\r\n    private appDialogConfigService: AppDialogConfigService,\r\n    private contentTypesService: ContentTypesService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loading$.next(true);\r\n    const contentType$ = this.contentTypesService.retrieveContentType(this.contentTypeStaticName);\r\n    const dialogSettings$ = this.appDialogConfigService.getShared$(); // .getDialogSettings();\r\n    forkJoin([contentType$, dialogSettings$]).subscribe(([contentType, dialogSettings]) => {\r\n      this.contentType$.next(contentType);\r\n      this.formValues = {\r\n        defaultLanguage: dialogSettings.Context.Language.Primary,\r\n        contentType: this.contentTypeStaticName,\r\n        file: this.dialogData.files != null ? this.dialogData.files[0] : null,\r\n        resourcesReferences: 'Keep',\r\n        clearEntities: 'None',\r\n      };\r\n      this.loading$.next(false);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.contentType$.complete();\r\n    this.loading$.complete();\r\n    this.viewStateSelected$.complete();\r\n    this.evaluationResult$.complete();\r\n    this.importResult$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  evaluateContent() {\r\n    this.viewStateSelected$.next(this.viewStates.waiting);\r\n    this.contentImportService.evaluateContent(this.formValues).subscribe(result => {\r\n      this.evaluationResult$.next(result);\r\n      this.viewStateSelected$.next(this.viewStates.evaluated);\r\n    });\r\n  }\r\n\r\n  importContent() {\r\n    this.viewStateSelected$.next(this.viewStates.waiting);\r\n    this.contentImportService.importContent(this.formValues).subscribe(result => {\r\n      this.importResult$.next(result);\r\n      this.viewStateSelected$.next(this.viewStates.imported);\r\n    });\r\n  }\r\n\r\n  back() {\r\n    this.viewStateSelected$.next(this.viewStates.default);\r\n    this.evaluationResult$.next(null);\r\n  }\r\n\r\n  fileChange(event: Event) {\r\n    this.formValues.file = (event.target as HTMLInputElement).files[0];\r\n  }\r\n\r\n  filesDropped(files: File[]) {\r\n    const importFile = files[0];\r\n    this.formValues.file = importFile;\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, HostListener, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { BaseSubsinkComponent } from '../components/base-subsink-component/base-subsink.component';\r\n\r\n@Directive({ selector: '[appDragAndDrop]' })\r\nexport class DragAndDropDirective extends BaseSubsinkComponent implements OnInit, OnDestroy {\r\n  @Input() markStyle: 'outline' | 'fill' | 'shadow' = 'outline';\r\n  /** Comma separated file types, e.g. 'txt,doc,docx' */\r\n  @Input() allowedFileTypes = '';\r\n  @Output() private filesDropped = new EventEmitter<File[]>();\r\n\r\n  private element: HTMLElement;\r\n  private dropAreaClass = 'eav-droparea';\r\n  private markStyleClass: string;\r\n  private dragClass = 'eav-dragover';\r\n  private timeouts: number[] = [];\r\n\r\n  constructor(elementRef: ElementRef, private zone: NgZone, private snackBar: MatSnackBar) {\r\n    super();\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.markStyleClass = `eav-droparea-${this.markStyle}`;\r\n    this.element.classList.add(this.dropAreaClass, this.markStyleClass);\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscription.add(\r\n        fromEvent<DragEvent>(this.element, 'dragover').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.clearTimeouts();\r\n          this.element.classList.add(this.dragClass);\r\n        })\r\n      );\r\n      this.subscription.add(\r\n        fromEvent<DragEvent>(this.element, 'dragleave').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.timeouts.push(\r\n            window.setTimeout(() => { this.element.classList.remove(this.dragClass); }, 50)\r\n          );\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dropAreaClass, this.markStyleClass, this.dragClass);\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(event: DragEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dragClass);\r\n    const fileList = event.dataTransfer.files;\r\n    let files = Array.from(fileList);\r\n    files = this.filterTypes(files, this.allowedFileTypes);\r\n    if (files.length > 0) {\r\n      this.filesDropped.emit(files);\r\n    }\r\n  }\r\n\r\n  private clearTimeouts() {\r\n    for (const timeout of this.timeouts) {\r\n      clearTimeout(timeout);\r\n    }\r\n    this.timeouts = [];\r\n  }\r\n\r\n  private filterTypes(files: File[], allowedFileTypes: string) {\r\n    if (allowedFileTypes === '') { return files; }\r\n\r\n    const allowedTypes = allowedFileTypes.split(',').map(type => type.toLocaleLowerCase());\r\n    const filtered = files.filter(file => {\r\n      const extIndex = file.name.lastIndexOf('.');\r\n      if (extIndex <= 0) { return false; }\r\n      const ext = file.name.substring(extIndex + 1).toLocaleLowerCase();\r\n      const allowed = allowedTypes.includes(ext);\r\n      return allowed;\r\n    });\r\n\r\n    if (files.length !== filtered.length) {\r\n      const allowedTypesString = this.allowedFileTypes.replace(/\\,/g, ', ');\r\n      const message = filtered.length\r\n        ? 'Some files were filtered out. This drop location only accepts file types: ' + allowedTypesString\r\n        : 'This drop location only accepts file types: ' + allowedTypesString;\r\n      this.snackBar.open(message, null, { duration: 5000 });\r\n    }\r\n    return filtered;\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}