{"version":3,"file":"default-projects_eav-ui_src_app_app-administration_services_index_ts-projects_eav-ui_src_app_-ecbb79.js","mappings":"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","sources":["./projects/eav-ui/src/app/app-administration/services/index.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/dev-rest/tab-permissions/tab-permissions.component.ts","./projects/eav-ui/src/app/dev-rest/tab-permissions/tab-permissions.component.html","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts"],"sourcesContent":["export * from './dialog-config-global.service';\r\nexport * from './content-types.service';\r\nexport * from './export-app-parts.service';\r\nexport * from './export-app.service';\r\nexport * from './import-app-parts.service';\r\nexport * from './pipelines.service';\r\nexport * from './views.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Query } from '../models/query.model';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService extends HttpServiceBase {\r\n\r\n  getAll(contentType: string) {\r\n    return this.getHttpApiUrl<Query[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiQueryImport), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.getHttpApiUrl<null>(webApiQueryClone, {\r\n      params: { Id: id.toString(), appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService extends HttpServiceBase {\r\n\r\n  getAll() {\r\n    return this.getHttpApiUrl<View[]>(webApiViews, {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.getHttpApiUrl<boolean>(webApiViewDelete, {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.getHttpApiUrl<Polymorphism>(webApiViewPolymorph, {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.getHttpApiUrl<ViewUsage[]>(webApiViewUsage, {\r\n      params: { appId: this.appId, guid }\r\n    });\r\n  }\r\n}\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { DevRestBaseModel } from '..';\r\nimport { transient } from '../../../../../core';\r\nimport { GoToPermissions } from '../../permissions/go-to-permissions';\r\nimport { ColumnDefinitions } from '../../shared/ag-grid/column-definitions';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\n\r\n@Component({\r\n  selector: 'app-dev-rest-tab-permissions',\r\n  templateUrl: './tab-permissions.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    TippyDirective,\r\n    MatIconModule,\r\n    MatBadgeModule,\r\n    SxcGridModule,\r\n  ],\r\n})\r\nexport class DevRestTabPermissionsComponent {\r\n  @Input() data: DevRestBaseModel;\r\n\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  openPermissions() {\r\n    this.#dialogRouter.navRelative([GoToPermissions.getUrlContentType(this.data.permissionTarget)]);\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.Id\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Name',\r\n          field: 'Title',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Identity',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Condition',\r\n        },\r\n        {\r\n          field: 'Grant',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-outline',\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","<h3>Permissions ({{ data.permissions.length }})</h3>\r\n<p>\r\n  This target <code>{{ data.name }}</code> has {{ data.permissions.length }} permissions\r\n  configured.\r\n  <button mat-icon-button tippy=\"Open permissions\" (click)=\"openPermissions()\">\r\n    @if (data.permissions.length) {\r\n      <mat-icon [matBadge]=\"data.permissions.length\" matBadgeColor=\"accent\" matBadgeSize=\"small\"\r\n        matBadgePosition=\"below after\" aria-hidden=\"false\">\r\n        person\r\n      </mat-icon>\r\n    }\r\n    @if (!data.permissions.length) {\r\n      <mat-icon>person</mat-icon>\r\n    }\r\n  </button>\r\n</p>\r\n@if (!data.permissions.length) {\r\n  <p class=\"warning info-box\">\r\n    <mat-icon>warning</mat-icon>\r\n    Warning: you don't have any permissions configured. So only Super-Users (Host) will be able to use the API\r\n    endpoints.\r\n  </p>\r\n}\r\n\r\n<ag-grid-angular class=\"ag-theme-material\" [rowData]=\"data.permissions\" [gridOptions]=\"gridOptions\"\r\n  [style.height]=\"(33 + data.permissions.length * 48) + 'px'\">\r\n</ag-grid-angular>\r\n\r\n<h4>Super-Users (Host) can use all Endpoints</h4>\r\n<p>\r\n  As a super-user you can always access these REST endpoints, so this will make development easy.\r\n  Just remember to change the content-type permissions when you publish your work to public pages.\r\n</p>\r\n\r\n<h4>Set permissions for visitors to use this</h4>\r\n<p>\r\n  To let JavaScript access the REST endpoints for normal users, you must set the permissions of the\r\n  content-type.\r\n  Usually you will just want to set it like <em>if user has view-permissions, let him read this\r\n    content-type</em>.\r\n  In rare cases (eg. JS based forms) you may also want to give it some write permissions. Just be careful.\r\n  If you give write permissions, you will usually <em>only</em> want to give create, but not edit.\r\n</p>\r\n\r\n<h4>Setting permissions for use outside of DNN</h4>\r\n<p>\r\n  When calling API endpoints from a DNN page you will usually use the <code>$2sxc</code> or the DNN\r\n  Services-Framework.\r\n  These automatically add some HTTP-Headers (see tab about HTTP Headers) which let DNN determine that the\r\n  API-Call\r\n  was made on a specific page/module - and DNN uses this to check the permissions.\r\n</p>\r\n<p>\r\n  IF you are calling the endpoint from outside of DNN then these headers will be missing.\r\n  Because of this, permissions saying \"If has VIEW permissions, allow read\" will fail - because DNN cannot\r\n  determine\r\n  if the user has view permissions.\r\n</p>\r\n<p>\r\n  So to enable use from external, the condition must be \"If has ANONYMOUS permissions, allow ...\".\r\n  Because the ANONYMOUS check passes even if DNN doesn't know what page the module is on.\r\n</p>\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n"],"names":["from","map","switchMap","toBase64","webApiEntityList","HttpServiceBase","webApiQueryImport","webApiQueryClone","webApiQueryDelete","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","contentType","getHttpApiUrl","params","appId","importQuery","file","pipe","fileBase64","http","post","apiUrl","AppId","ContentBase64","success","result","Success","Messages","clonePipeline","id","Id","toString","delete","__ngFactoryType__","factory","ɵfac","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","import","formData","FormData","append","zoneId","export","url","window","open","getPolymorphism","getUsage","guid","MatBadgeModule","MatButtonModule","MatIconModule","transient","GoToPermissions","ColumnDefinitions","defaultGridOptions","TippyDirective","SxcGridModule","DialogRoutingService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","data","permissions","length","DevRestTabPermissionsComponent","constructor","dialogRouter","gridOptions","buildGridOptions","openPermissions","navRelative","getUrlContentType","permissionTarget","columnDefs","TextWide","headerName","field","width","headerClass","cellClass","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","DevRestTabPermissionsComponent_Template","rf","ctx","ɵɵlistener","DevRestTabPermissionsComponent_Template_button_click_7_listener","ɵɵtemplate","DevRestTabPermissionsComponent_Conditional_8_Template","DevRestTabPermissionsComponent_Conditional_9_Template","DevRestTabPermissionsComponent_Conditional_10_Template","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","ɵɵtextInterpolate","name","ɵɵconditional","ɵɵstyleProp","i1","MatIconButton","i2","MatIcon","i3","MatBadge","i4","AgGridAngular","encapsulation","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","split","onerror","error","readAsText"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}