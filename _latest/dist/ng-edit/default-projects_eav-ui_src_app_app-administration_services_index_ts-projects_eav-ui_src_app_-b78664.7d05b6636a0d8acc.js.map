{"version":3,"file":"default-projects_eav-ui_src_app_app-administration_services_index_ts-projects_eav-ui_src_app_-b78664.7d05b6636a0d8acc.js","mappings":"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","names":["AppDialogConfigService","ServiceBase","constructor","http","context","globalConfigService","featuresService","super","EavLogger","this","dialogSettings$","log","add","svcId","loadFromService","ngOnDestroy","destroy","getCurrent$","appId","getShared$","getSitePrimaryApp$","pipe","map","dc","Context","Site","PrimaryApp","getGlobalPrimaryApp$","System","getDialogSettings","shareReplay","refCount","reqBy","get","params","toString","dlgSettings","Language","List","filter","language","IsEnabled","tap","allowDebug","Enable","DebugMode","static","t","i0","i1","i2","i3","i4","_angular_core__WEBPACK_IMPORTED_MODULE_8__","wxM","factory","ɵfac","ExportAppPartsService","dnnContext","getContentInfo","scope","$2sxc","apiUrl","webApiAppPartsRoot","appid","zoneId","exportParts","contentTypeIds","entityIds","templateIds","url","join","window","open","_angular_core__WEBPACK_IMPORTED_MODULE_2__","ExportAppService","getAppInfo","webApiAppRoot","exportApp","includeContentGroups","resetAppGuid","exportForVersionControl","withFiles","withPortalFiles","ImportAppPartsService","importAppParts","file","formData","FormData","append","post","resetApp","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","contentType","webApiEntityList","importQuery","from","toBase64","switchMap","fileBase64","AppId","ContentBase64","success","Success","Messages","clonePipeline","id","Id","delete","_angular_core__WEBPACK_IMPORTED_MODULE_6__","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","import","export","getPolymorphism","getUsage","guid","_angular_core__WEBPACK_IMPORTED_MODULE_1__","ImportAppService","importApp","changedName","retryOnDuplicate","result","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","of","_angular_core__WEBPACK_IMPORTED_MODULE_4__","BaseComponent","BaseSubsinkComponent","router","route","refreshOnChildClosedShallow","events","event","NavigationEnd","startWith","snapshot","firstChild","pairwise","hadChild","hasChild","_angular_core__WEBPACK_IMPORTED_MODULE_7__","Sc5","features","BooleanFilterComponent","agInit","filterParams","isFilterActive","doesFilterPass","value","valueGetter","api","colDef","column","columnApi","data","node","getValue","field","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","_angular_core__WEBPACK_IMPORTED_MODULE_0__","In1","selectors","decls","vars","consts","template","rf","ctx","$event","FieldHintComponent_Case_1_ng_container_1_Template","_r3","FieldHintComponent_Case_2_ng_container_1_Template","FieldHintComponent","isError","isShort","toggleIsShort","inputs","ngContentSelectors","_c1","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c0","FieldHintComponent_contFlowTmp","IdFieldComponent","snackBar","align","tooltip","tooltipGetter","refresh","copy","copyToClipboard","duration","defaultGridOptions","accentedSort","animateRows","enableCellTextSelection","headerHeight","suppressScrollOnNewData","valueCache","defaultColDef","newRowsAction","tooltipShowDelay","tooltipHideDelay","suppressMovableColumns","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/app-dialog-config.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/shared/components/base-component/base.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.html","./projects/eav-ui/src/app/shared/constants/default-grid-options.constants.ts","./projects/eav-ui/src/app/shared/helpers/copy-to-clipboard.helper.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { map, Observable, shareReplay, tap } from 'rxjs';\r\nimport { GlobalConfigService } from '../../edit/shared/store/ngrx-data';\r\nimport { DialogSettings } from '../../shared/models/dialog-settings.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { ServiceBase } from '../../shared/services/service-base';\r\nimport { EavLogger } from '../../shared/logging/eav-logger';\r\nimport { DialogContextSiteApp } from '../../shared/models/dialog-context.models';\r\n\r\nconst logThis = false;\r\n\r\nconst webApiSettings = 'admin/dialog/settings';\r\n\r\n\r\n@Injectable()\r\nexport class AppDialogConfigService extends ServiceBase implements OnDestroy {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private context: Context,\r\n    // private dnnContext: DnnContext,\r\n    private globalConfigService: GlobalConfigService,\r\n    featuresService: FeaturesService,\r\n  ) {\r\n    super(new EavLogger('AppDialogConfigService', logThis));\r\n    this.log.add('using context #', this.context.log.svcId);\r\n    featuresService.loadFromService(this);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.destroy();\r\n    // TODO: probably should add an onDestroy and ensure all subscriptions in dialogSettings$ are killed\r\n  }\r\n\r\n  private dialogSettings$: Record<number, Observable<DialogSettings>> = {};\r\n\r\n  getCurrent$(): Observable<DialogSettings> {\r\n    const appId = this.context.appId;\r\n    this.log.add('getCurrent$', 'appId', appId);\r\n    return this.getShared$(appId);\r\n  }\r\n\r\n    // new 2dg\r\n    getSitePrimaryApp$(): Observable<DialogContextSiteApp> {\r\n      return this.getCurrent$().pipe(map(dc => dc?.Context.Site.PrimaryApp));\r\n    }\r\n  \r\n    getGlobalPrimaryApp$(): Observable<DialogContextSiteApp> {\r\n      return this.getCurrent$().pipe(map(dc => dc?.Context.System.PrimaryApp));\r\n    }\r\n  \r\n\r\n  getShared$(appId: number): Observable<DialogSettings> {\r\n    this.log.add('getShared$', 'appId', appId);\r\n    // if (!this.dialogSettings$[appIdToUse])\r\n    this.dialogSettings$[appId] ??= this.getDialogSettings(appId, 'getShared$').pipe(shareReplay({ refCount: false }));\r\n    return this.dialogSettings$[appId];\r\n  }\r\n\r\n  getDialogSettings(appId?: number, reqBy?: string): Observable<DialogSettings> {\r\n    this.log.add('getDialogSettings', 'appId', appId, 'reqBy', reqBy);\r\n    return this.http.get<DialogSettings>(webApiSettings, {\r\n      params: { appId: appId ?? this.context.appId.toString() },\r\n    }).pipe(\r\n      map(dlgSettings => {\r\n        dlgSettings.Context.Language.List = dlgSettings.Context.Language.List.filter(language => language.IsEnabled);\r\n        return dlgSettings;\r\n      }),\r\n      tap(dlgSettings => {\r\n        this.globalConfigService.allowDebug(dlgSettings.Context.Enable.DebugMode);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\n\r\n@Injectable()\r\nexport class ExportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getContentInfo(scope: string) {\r\n    return this.http.get<ContentInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Get'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString(), scope },\r\n    });\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.context.appId.toString()\r\n      + '&zoneId=' + this.context.zoneId.toString()\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AppInfo } from '../models/app-info.model';\r\n\r\n@Injectable()\r\nexport class ExportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAppInfo() {\r\n    return this.http.get<AppInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Statistics'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString() },\r\n    });\r\n  }\r\n\r\n  exportApp(includeContentGroups: boolean, resetAppGuid: boolean) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Export')\r\n      + '?appId=' + this.context.appId\r\n      + '&zoneId=' + this.context.zoneId\r\n      + '&includeContentGroups=' + includeContentGroups\r\n      + '&resetAppGuid=' + resetAppGuid;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'SaveData'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { webApiEntityList } from '../../edit/shared/services';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Query } from '../models/query.model';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get<Query[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryImport), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViews), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.context.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.dnnContext.$2sxc.http.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.context.appId.toString(), guid }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Directive, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { BaseSubsinkComponent } from '../base-subsink-component/base-subsink.component';\r\nimport { EavLogger } from '../../logging/eav-logger';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class BaseComponent extends BaseSubsinkComponent implements OnDestroy {\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    public log?: EavLogger\r\n  ) {\r\n    super();\r\n    this.log ??= new EavLogger('BaseComponent', false);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  // TODO @2dg not longer in use after refactoring SideNav with Routing\r\n  // protected refreshOnChildClosedDeep() {\r\n  //   return this.router.events.pipe(\r\n  //     filter(event => event instanceof NavigationEnd),\r\n  //     startWith(!!this.route.snapshot.firstChild.firstChild),\r\n  //     map(() => !!this.route.snapshot.firstChild.firstChild),\r\n  //     pairwise(),\r\n  //     filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n  //   )\r\n  // }\r\n\r\n  protected refreshOnChildClosedShallow() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { BooleanFilterModel } from './boolean-filter.model';\r\n\r\n@Component({\r\n  selector: 'app-boolean-filter',\r\n  templateUrl: './boolean-filter.component.html',\r\n  styleUrls: ['./boolean-filter.component.scss'],\r\n})\r\nexport class BooleanFilterComponent implements IFilterAngularComp {\r\n  filter = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.filter !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: boolean = this.filterParams.valueGetter(valueGetterParams);\r\n    if (value == null) { return false; }\r\n    return value.toString() === this.filter;\r\n  }\r\n\r\n  getModel(): BooleanFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n    return {\r\n      filterType: 'boolean',\r\n      filter: this.filter,\r\n    };\r\n  }\r\n\r\n  setModel(model: BooleanFilterModel) {\r\n    this.filter = model ? model.filter : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<mat-radio-group [(ngModel)]=\"filter\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">True</mat-radio-button>\r\n  <mat-radio-button value=\"false\">False</mat-radio-button>\r\n</mat-radio-group>\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(): void {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>","import { GridOptions } from '@ag-grid-community/core';\r\n\r\nexport const defaultGridOptions: GridOptions = {\r\n  accentedSort: true,\r\n  animateRows: true,\r\n  enableCellTextSelection: true,\r\n  headerHeight: 32,\r\n  suppressScrollOnNewData: true,\r\n  valueCache: true,\r\n  defaultColDef: { filterParams: { newRowsAction: 'keep' } },\r\n  tooltipShowDelay: 0,\r\n  tooltipHideDelay: 100000,\r\n  suppressMovableColumns: true,\r\n} as const;\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}