{"version":3,"file":"projects_eav-ui_src_app_apps-management_system-info_system-info_component_ts-projects_eav-ui_-f65b81.ebbfbd0aa0a548ad.js","mappings":"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","names":["SxcInsightsService","constructor","http","dnnContext","this","activatePageLog","duration","get","$2sxc","apiUrl","webApiLogRoot","params","toString","static","t","i0","i1","i2","core","jDH","factory","ɵfac","_r5","info_r3","$implicit","ctx_r3","openSideNavPath","link","url","_c4","label","_r2","copyToClipboard","value","SystemInfoComponent_For_12_Conditional_6_Template","_r8","info_r7","target","SystemInfoComponent_For_36_Conditional_6_Conditional_0_Template","SystemInfoComponent_For_36_Conditional_6_Conditional_1_Template","_r6","SystemInfoComponent_For_36_Conditional_6_Template","SystemInfoComponent_Conditional_119_Conditional_0_Template","duration_r10","errors","pattern","info_r12","SystemInfoComponent_For_135_Conditional_6_Conditional_0_Template","SystemInfoComponent_For_135_Conditional_6_Conditional_1_Template","_r11","SystemInfoComponent_For_135_Conditional_6_Template","tmp_9_0","icon_r13","undefined","label_r14","SystemInfoComponent","#dialogSettings","#sxcInsightsService","#zoneSvc","#dialogSvc","#dialogRouter","snackBar","features","inject","FeaturesScopedService","transient","DialogConfigAppService","ZoneService","DialogService","DialogRoutingService","positiveWholeNumber","loading","signal","languages","systemInfoSet","systemInfos","computed","systemInfoSetValue","router","System","EavVersion","Platform","PlatformVersion","Zones","Fingerprint","License","Owner","siteInfos","languagesValue","allLanguages","length","activeLanguages","filter","l","IsEnabled","Site","ZoneId","SiteId","Apps","warningIcon","Messages","WarningsObsolete","WarningsOther","warningInfos","window","lsEnabled","isEnabled","FeatureNames","LightSpeed","cspEnabled","ContentSecurityPolicy","ngOnInit","getSystemInfo","getLanguages","doOnDialogClosed","text","open","openSiteSettings","openParentAppSettings","openGlobalSettings","partName","getCurrent$","pipe","map","dc","Context","PrimaryApp","take","subscribe","appIdentity","openAppAdministration","AppId","openInsights","sideNavPath","includes","navigate","replace","form","set","pageLogDuration","res","document","activeElement","HTMLElement","blur","resetForm","error","next","VBU","selectors","standalone","decls","vars","consts","template","rf","ctx","SystemInfoComponent_For_12_Template","SystemInfoComponent_ng_container_19_Template","_r1","SystemInfoComponent_For_36_Template","SystemInfoComponent_ng_container_44_Template","SystemInfoComponent_Conditional_61_Template","SystemInfoComponent_ng_container_64_Template","SystemInfoComponent_Conditional_76_Template","SystemInfoComponent_ng_container_79_Template","SystemInfoComponent_ng_container_98_Template","activateLogForm_r9","$event","SystemInfoComponent_Conditional_119_Template","SystemInfoComponent_For_135_Template","SystemInfoComponent_ng_template_137_Template","docsLink_r16","_c0","_c1","_c2","_c3","touched","valid","MatCardModule","MatIconModule","i3","RouterLink","NgTemplateOutlet","MatButtonModule","i4","FormsModule","i5","MatFormFieldModule","i6","MatInputModule","i7","RouterOutlet","FeatureTextInfoComponent","FieldHintComponent","TippyDirective","AppSyncWithSiteFiles","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","PermissionsByLanguage","FieldShareConfigManagement","AppExportAssetsAdvanced","PickerUiCheckbox","PickerUiRadio","PickerSourceCsv","ctx_r1","openDialog","vm_r3","feature","icon","FeatureTextInfoComponent_Conditional_0_Conditional_0_Template","show","FeatureComponentBase","asInfo","asInfo$","super","BehaviorSubject","viewModel$","combineLatest","feature$","show$","_angular_core__WEBPACK_IMPORTED_MODULE_1__","inputs","FeatureTextInfoComponent_Conditional_0_Template","FeatureTextInfoComponent_Conditional_2_Template","FeatureTextInfoComponent_ng_template_3_Template","tmp_1_0","AsyncPipe","TranslateModule","styles","FeatureDetailService","getFeatureDetails","featureNameId","webApiRoot","nameId","id_r3","FeatureInfoDialogComponent_Conditional_0_Conditional_15_Template","feature_r5","findOutMore","closeDialog","name","description","tmp_6_0","FeatureInfoDialogComponent","dialogData","dialogRef","featureDetailService","close","MAT_DIALOG_DATA","FeatureInfoDialogComponent_Conditional_0_Template","tmp_0_0","SafeHtmlPipe","featureNameId$","showIf","showIf$","#dialog","#viewContainerRef","#changeDetectorRef","#featuresService","MatDialog","ViewContainerRef","ChangeDetectorRef","switchMap","featName","get$","feat","openFeatureDialog","FsC","dialog","featureId","viewContainerRef","changeDetectorRef","autoFocus","data","width","markForCheck","webApiAppRoot","ImportAppService","context","importApp","file","changedName","retryOnDuplicate","formData","FormData","append","post","zoneId","result","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","of","_angular_core__WEBPACK_IMPORTED_MODULE_4__","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","isError","isShort","toggleIsShort","_angular_core__WEBPACK_IMPORTED_MODULE_0__","ngContentSelectors","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","tmp_2_0","NgClass","str","el","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","logSpecs","ServiceBase","route","log","classLog","snapshot","getParam","key","paramMap","getParams","keys","reduce","acc","getQueryParam","queryParamMap","getQueryParams","state","getCurrentNavigation","extras","callback","fnIf","subscriptions","add","childDialogClosed$","end","navPath","navRelative","commands","relativeTo","navParentFirstChild","parent","firstChild","events","event","NavigationEnd","startWith","pairwise","hadChildBefore","hasChildNow","_angular_core__WEBPACK_IMPORTED_MODULE_7__","Subscription","ngOnDestroy","destroy","unsubscribe"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/apps-management/services/sxc-insights.service.ts","./projects/eav-ui/src/app/apps-management/system-info/system-info.component.html","./projects/eav-ui/src/app/apps-management/system-info/system-info.component.ts","./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.html","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.ts","./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/helpers/copy-to-clipboard.helper.ts","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts","./projects/eav-ui/src/app/shared/services/service-base.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nconst webApiLogRoot = 'sys/log/';\r\n\r\n@Injectable()\r\nexport class SxcInsightsService {\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext) { }\r\n\r\n  activatePageLog(duration: number) {\r\n    return this.http.get<string>(this.dnnContext.$2sxc.http.apiUrl(webApiLogRoot + 'EnableDebug'), {\r\n      params: { duration: duration.toString() }\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-cards-box\">\r\n  <!-- Platform Info -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">settings_applications</mat-icon>\r\n      </div>\r\n      <mat-card-title>Platform</mat-card-title>\r\n      <mat-card-subtitle>What you are running</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      @for (info of systemInfos(); track info) {\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ info.label }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span class=\"eav-info-row__value__span eav-click\" [tippy]=\"info.value\"\r\n            (click)=\"copyToClipboard(info.value)\">{{ info.value }}</span>\r\n          @if (info.link) {\r\n          <a class=\"eav-info-row__link\" [routerLink]=\"['/']\" (click)=\"openSideNavPath(info.link.url)\">\r\n            {{ info.link.label }}\r\n          </a>\r\n          }\r\n        </div>\r\n      </div>\r\n      }\r\n      <h4>Global Settings</h4>\r\n      <p>\r\n        This includes both pre-defined SystemSettings as well as custom Settings.\r\n        It will affect the entire Installation.\r\n      </p>\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"start\">\r\n      <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/settings' }\"></ng-container>\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"openGlobalSettings()\">\r\n        <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n        <span>Open Global Settings</span>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n  <!-- Site Info -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">public</mat-icon>\r\n      </div>\r\n      <mat-card-title>This Site</mat-card-title>\r\n      <mat-card-subtitle>The current Site you're on</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      @for (info of siteInfos(); track info) {\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ info.label }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">{{ info.value }}</span>\r\n          @if (info.link) {\r\n          @if (info.link.target === 'angular') {\r\n          <a [routerLink]=\"['/']\" class=\"eav-info-row__link\" (click)=\"openSideNavPath(info.link.url)\">\r\n            {{info.link.label }}\r\n          </a>\r\n          }\r\n          @if (info.link.target !== 'angular') {\r\n          <a class=\"eav-info-row__link\" [href]=\"info.link.url\" [target]=\"info.link.target\">{{ info.link.label }}</a>\r\n          }\r\n          }\r\n        </div>\r\n      </div>\r\n      }\r\n      <div class=\"card-content-separator\"></div>\r\n      <h4>Site Settings</h4>\r\n      <p>\r\n        This includes both pre-defined SystemSettings as well as custom Settings.\r\n        It will affect the entire Site / Portal.\r\n      </p>\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"start\">\r\n      <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/settings' }\"></ng-container>\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"openSiteSettings()\">\r\n        <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n        <span>Open Site Settings</span>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n  <!-- Performance / Lightspeed -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">bolt</mat-icon>\r\n      </div>\r\n      <mat-card-title>Performance</mat-card-title>\r\n      <mat-card-subtitle>Performance Enhancements and Caching</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <app-feature-text-info [featureNameId]=\"'LightSpeedOutputCache'\" [asInfo]=\"true\"></app-feature-text-info>\r\n      @if (lsEnabled()) {\r\n      <div>\r\n        LightSpeed is enabled.\r\n        Configure it in each site/app as you need.\r\n      </div>\r\n      }\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"start\">\r\n      <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/lightspeed' }\"></ng-container>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n  <!-- Security -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">local_police</mat-icon>\r\n      </div>\r\n      <mat-card-title>Security</mat-card-title>\r\n      <mat-card-subtitle>System Security Features</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <app-feature-text-info [featureNameId]=\"'ContentSecurityPolicy'\" [asInfo]=\"true\"></app-feature-text-info>\r\n      @if (cspEnabled()) {\r\n      <div>\r\n        ContentSecurityPolicy is enabled.\r\n        Configure it in each site/app as you need.\r\n      </div>\r\n      }\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"start\">\r\n      <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/csp' }\"></ng-container>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n  <!-- Insights -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">speed</mat-icon>\r\n      </div>\r\n      <mat-card-title>2sxc Insights</mat-card-title>\r\n      <mat-card-subtitle>See what's happening under the hood</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <h4>2sxc Insights for Super Users</h4>\r\n      <p>\r\n        This is to access a special section to see what is really in the server memory.\r\n        It's intended for extensive debugging - see also\r\n        <a href=\"https://2sxc.org/en/blog/post/using-2sxc-insights\" target=\"_blank\">this blog post</a>.\r\n      </p>\r\n      <div align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/insights' }\"></ng-container>\r\n        <button mat-button class=\"eav-button__with-icon\" (click)=\"openInsights()\">\r\n          <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n          <span>Open 2sxc Insights</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"card-content-separator\"></div>\r\n      <h4>Activate Page Level Logging</h4>\r\n      <form #activateLogForm=\"ngForm\" class=\"activate-log-form\" (ngSubmit)=\"activatePageLog(activateLogForm)\">\r\n        <div>\r\n          This will place insights-logs in the HTML of the user output for users with <code>?debug=true</code> in the\r\n          url.\r\n          It can only be activated for short periods of time.\r\n        </div>\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Duration in Minutes</mat-label>\r\n          <input matInput type=\"number\" min=\"0\" required [pattern]=\"positiveWholeNumber\" [(ngModel)]=\"pageLogDuration\"\r\n            name=\"Duration\" #duration=\"ngModel\" [disabled]=\"loading()\">\r\n        </mat-form-field>\r\n        @if (duration.touched && duration.errors) {\r\n        @if (duration.errors.pattern) {\r\n        <app-field-hint [isError]=\"true\">\r\n          Only positive whole numbers\r\n        </app-field-hint>\r\n        }\r\n        }\r\n      </form>\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"end\">\r\n      <button mat-raised-button type=\"submit\" color=\"accent\" [disabled]=\"!activateLogForm.valid || loading()\">\r\n        Activate\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n  <!-- Warnings -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">{{ warningIcon() }}</mat-icon>\r\n      </div>\r\n      <mat-card-title>Warnings</mat-card-title>\r\n      <mat-card-subtitle>System and Code Warnings</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      @for (info of warningInfos(); track info) {\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label eav-long\">{{ info.label }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">{{ info.value }}</span>\r\n          @if (info.link) {\r\n          @if (info.link.target === 'angular') {\r\n          <a class=\"eav-info-row__link\" [routerLink]=\"info.link.url\">\r\n            {{info.link.label}}</a>\r\n          }\r\n          @if (info.link.target !== 'angular') {\r\n          <a class=\"eav-info-row__link\" [href]=\"info.link.url\" [target]=\"info.link.target\">{{ info.link.label }}</a>\r\n          }\r\n          }\r\n        </div>\r\n      </div>\r\n      }\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n  </mat-card>\r\n</div>\r\n\r\n\r\n<ng-template #docsLink let-icon let-label let-link=\"link\">\r\n  <a mat-button class=\"eav-button__with-icon\" href=\"{{link}}\" target=\"_blank\" [tippy]=\"'online documentation'\">\r\n    <mat-icon class=\"eav-icon\">{{ icon ?? \"menu_book\" }}</mat-icon>\r\n    <span>{{ label }}</span>\r\n  </a>\r\n</ng-template>\r\n\r\n<router-outlet></router-outlet>\r\n","import { Component, OnInit, computed, inject, signal } from '@angular/core';\r\nimport { NgForm, FormsModule } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterLink, RouterOutlet } from '@angular/router';\r\nimport { map, take } from 'rxjs';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\nimport { FeaturesScopedService } from '../../features/features-scoped.service';\r\nimport { SiteLanguage } from '../models/site-language.model';\r\nimport { SystemInfoSet } from '../models/system-info.model';\r\nimport { SxcInsightsService } from '../services/sxc-insights.service';\r\nimport { ZoneService } from '../services/zone.service';\r\nimport { InfoTemplate } from './system-info.models';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgTemplateOutlet } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { FeatureTextInfoComponent } from '../../features/feature-text-info/feature-text-info.component';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { transient } from '../../core';\r\nimport { DialogConfigAppService } from '../../app-administration/services/dialog-config-app.service';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-system-info',\r\n  templateUrl: './system-info.component.html',\r\n  styleUrls: ['./system-info.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatIconModule,\r\n    RouterLink,\r\n    NgTemplateOutlet,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    RouterOutlet,\r\n    FeatureTextInfoComponent,\r\n    FieldHintComponent,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class SystemInfoComponent implements OnInit {\r\n\r\n  public features = inject(FeaturesScopedService);\r\n\r\n  #dialogSettings = transient(DialogConfigAppService);\r\n  #sxcInsightsService = transient(SxcInsightsService);\r\n  #zoneSvc = transient(ZoneService);\r\n  #dialogSvc = transient(DialogService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  pageLogDuration: number;\r\n  positiveWholeNumber = /^[1-9][0-9]*$/;\r\n\r\n\r\n  loading = signal(false);\r\n  languages = signal<SiteLanguage[] | undefined>(undefined);\r\n  systemInfoSet = signal<SystemInfoSet | undefined>(undefined);\r\n\r\n  systemInfos = computed(() => {\r\n    const systemInfoSetValue = this.systemInfoSet();\r\n    if (systemInfoSetValue == null) return;\r\n    const url = this.#dialogRouter.router.url + '/' + \"registration\";\r\n    const info: InfoTemplate[] = [\r\n      { label: 'CMS', value: `2sxc v.${systemInfoSetValue.System.EavVersion}` },\r\n      { label: 'Platform', value: `${systemInfoSetValue.System.Platform} v.${systemInfoSetValue.System.PlatformVersion}` },\r\n      { label: 'Zones', value: systemInfoSetValue.System.Zones.toString() },\r\n      { label: 'Fingerprint', value: systemInfoSetValue.System.Fingerprint },\r\n      {\r\n        label: 'Registered to',\r\n        value: systemInfoSetValue.License.Owner || '(unregistered)',\r\n        link: systemInfoSetValue.License.Owner\r\n          ? {\r\n            url,\r\n            label: 'manage',\r\n            target: 'angular',\r\n          }\r\n          : {\r\n            url,\r\n            label: 'register',\r\n            target: 'angular',\r\n          },\r\n      },\r\n    ];\r\n    return info;\r\n  });\r\n\r\n  siteInfos = computed(() => {\r\n    const systemInfoSetValue = this.systemInfoSet();\r\n    const languagesValue = this.languages();\r\n\r\n    if (systemInfoSetValue == null || languagesValue == null) return;\r\n\r\n    const allLanguages = languagesValue.length;\r\n    const activeLanguages = languagesValue.filter(l => l.IsEnabled).length;\r\n\r\n    const info: InfoTemplate[] = [\r\n      { label: 'Zone', value: systemInfoSetValue.Site.ZoneId.toString() },\r\n      { label: 'Site', value: systemInfoSetValue.Site.SiteId.toString() },\r\n      {\r\n        label: 'Languages',\r\n        value: `${activeLanguages}/${allLanguages}`,\r\n        link: {\r\n          url: 'languages',\r\n          label: 'manage',\r\n          target: 'angular',\r\n        },\r\n      },\r\n      {\r\n        label: 'Apps',\r\n        value: systemInfoSetValue.Site.Apps.toString(),\r\n        link: {\r\n          url: 'list',\r\n          label: 'manage',\r\n          target: 'angular',\r\n        },\r\n      },\r\n    ];\r\n\r\n    return info;\r\n  });\r\n\r\n  warningIcon = computed(() => {\r\n    const systemInfoSetValue = this.systemInfoSet();\r\n    if (systemInfoSetValue == null) return undefined;\r\n    if (systemInfoSetValue.Messages.WarningsObsolete || systemInfoSetValue.Messages.WarningsOther) {\r\n      return 'warning';\r\n    }\r\n    return 'check';\r\n  });\r\n\r\n  warningInfos = computed(() => {\r\n    const systemInfoSetValue = this.systemInfoSet();\r\n    if (systemInfoSetValue == null) return undefined;\r\n\r\n    const info: InfoTemplate[] = [\r\n      {\r\n        label: 'Warnings Obsolete',\r\n        value: systemInfoSetValue.Messages.WarningsObsolete.toString(),\r\n        link: !systemInfoSetValue.Messages.WarningsObsolete\r\n          ? undefined\r\n          : {\r\n            url: window.$2sxc.http.apiUrl('sys/insights/logs?key=warnings-obsolete'),\r\n            label: 'review',\r\n            target: '_blank',\r\n          },\r\n      },\r\n      {\r\n        label: 'Warnings Other',\r\n        value: systemInfoSetValue.Messages.WarningsOther.toString(),\r\n        link: !systemInfoSetValue.Messages.WarningsOther\r\n          ? undefined\r\n          : {\r\n            url: window.$2sxc.http.apiUrl('sys/insights/logs'),\r\n            label: 'review',\r\n            target: '_blank',\r\n          },\r\n      },\r\n    ];\r\n    return info;\r\n  });\r\n\r\n  protected lsEnabled = this.features.isEnabled(FeatureNames.LightSpeed);\r\n  protected cspEnabled = this.features.isEnabled(FeatureNames.ContentSecurityPolicy);\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getSystemInfo();\r\n    this.getLanguages();\r\n    this.#dialogRouter.doOnDialogClosed(() => {\r\n      this.getSystemInfo();\r\n      this.getLanguages();\r\n    });\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  openSiteSettings(): void {\r\n    this.openParentAppSettings(\"Site\");\r\n  }\r\n\r\n  openGlobalSettings(): void {\r\n    this.openParentAppSettings(\"System\");\r\n  }\r\n\r\n  openParentAppSettings(partName: \"System\" | \"Site\"): void {\r\n    this.#dialogSettings.getCurrent$()\r\n      .pipe(map(dc => dc?.Context[partName].PrimaryApp), take(1))\r\n      .subscribe(appIdentity => {\r\n        this.#dialogSvc.openAppAdministration(appIdentity.ZoneId, appIdentity.AppId, 'app');\r\n      })\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/help'), '_blank');\r\n  }\r\n\r\n\r\n  openSideNavPath(sideNavPath: string): void {\r\n\r\n    // Url are /2/apps/system/registration, sideNavPath are only the last part of the url\r\n    if (sideNavPath.includes('registration'))\r\n      sideNavPath = 'registration';\r\n\r\n    const router = this.#dialogRouter.router;\r\n    router.navigate([router.url.replace('system', '') + sideNavPath]);\r\n  }\r\n\r\n  activatePageLog(form: NgForm) {\r\n    this.loading.set(true);\r\n    this.snackBar.open('Activating...');\r\n    this.#sxcInsightsService.activatePageLog(this.pageLogDuration).subscribe(res => {\r\n      this.loading.set(false);\r\n      this.snackBar.open(res, null, { duration: 4000 });\r\n    });\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n    form.resetForm();\r\n  }\r\n\r\n  private getSystemInfo(): void {\r\n    this.#zoneSvc.getSystemInfo().subscribe({\r\n      error: () => {\r\n        this.systemInfoSet.set(undefined);\r\n      },\r\n      next: (systemInfoSet) => {\r\n        this.systemInfoSet.set(systemInfoSet);\r\n      },\r\n    });\r\n  }\r\n\r\n  private getLanguages(): void {\r\n    this.#zoneSvc.getLanguages().subscribe({\r\n      error: () => {\r\n        this.languages.set(undefined);\r\n      },\r\n      next: (languages) => {\r\n        this.languages.set(languages);\r\n      },\r\n    });\r\n  }\r\n}\r\n","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  FieldShareConfigManagement: 'FieldShareConfigManagement',\r\n  AppExportAssetsAdvanced: 'AppExportAssetsAdvanced',\r\n\r\n  // Picker features\r\n  PickerUiCheckbox: 'PickerUiCheckbox',\r\n  PickerUiRadio: 'PickerUiRadio',\r\n  PickerSourceCsv: 'PickerSourceCsv',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","@if (viewModel$ | async; as vm) {\r\n  @if (vm.show) {\r\n    <div class=\"feature-text-info\" (click)=\"openDialog()\" [tippy]=\"'Features.Tooltip' | translate: vm.feature\">\r\n      <mat-icon class=\"icon icon-{{vm.icon}}\">{{ vm.icon }}</mat-icon>\r\n      <div class=\"feature-text-info-content\">\r\n        <div class=\"feature-text-info-title\">{{ 'Features.FeatureNotActivated' | translate }}</div>\r\n        <div class=\"feature-text-info-subtitle\">{{ 'Features.ClickToFindOutMore' | translate }}</div>\r\n      </div>\r\n    </div>\r\n  }\r\n} @else {\r\n  <div>loading...</div>\r\n}\r\n<ng-template #loading>\r\n  <div>loading...</div>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\nimport { FeatureSummary } from '../models';\r\nimport { FeatureComponentBase } from '../shared/base-feature.component';\r\nimport { BehaviorSubject, map, Observable, combineLatest } from 'rxjs';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-feature-text-info',\r\n  templateUrl: './feature-text-info.component.html',\r\n  styleUrls: ['./feature-text-info.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class FeatureTextInfoComponent extends FeatureComponentBase {\r\n  @Input()\r\n  public set asInfo(value: boolean) { this.asInfo$.next(value); }\r\n  asInfo$ = new BehaviorSubject<boolean>(false);\r\n\r\n  viewModel$: Observable<FeatureTextInfoViewModel>;\r\n\r\n  constructor() {\r\n    super();\r\n    this.viewModel$ = combineLatest([this.feature$, this.asInfo$, this.show$]).pipe(\r\n      map(([feature, asInfo, show]) =>\r\n      ({\r\n        feature,\r\n        icon: asInfo ? 'info' : 'warning',\r\n        show\r\n      }))\r\n    );\r\n  }\r\n\r\n}\r\n\r\ninterface FeatureTextInfoViewModel {\r\n  feature: FeatureSummary;\r\n  icon: string;\r\n  show: boolean;\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Feature } from '../models';\r\n\r\nexport const webApiRoot = \"admin/feature/\";\r\n\r\n@Injectable()\r\nexport class FeatureDetailService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private dnnContext: DnnContext\r\n  ) { }\r\n\r\n  getFeatureDetails(featureNameId: string): Observable<Feature> {\r\n    return this.http.get<Feature>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot + 'details'), {\r\n      params: { nameId: featureNameId }\r\n    });\r\n  }\r\n}\r\n","@if (viewModel$ | async; as feature) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ feature.name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"feature.description | safeHtml\"></p>\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ \"Features.Status\" | translate }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ (feature.isEnabled ? \"Features.Active\" : \"Features.NotActive\") | translate }}</span>\r\n        </div>\r\n      </div>\r\n      @if (feature.nameId; as id) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">ID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      <button mat-raised-button color=\"accent\"\r\n        class=\"eav-card-action-button\" (click)=\"findOutMore(feature.link)\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        {{ \"Features.FindOutMore\" | translate }}\r\n      </button>\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">\r\n        {{ \"Features.Close\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable } from 'rxjs';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { Feature } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\nimport { transient } from '../../core';\r\n\r\n@Component({\r\n  selector: 'app-feature-info-dialog',\r\n  templateUrl: './feature-info-dialog.component.html',\r\n  styleUrls: ['./feature-info-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n    TippyDirective,\r\n    SafeHtmlPipe,\r\n  ]\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  viewModel$: Observable<Feature>;\r\n\r\n  private featureDetailService = transient(FeatureDetailService);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    private dialogRef: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.viewModel$ = this.featureDetailService.getFeatureDetails(this.dialogData);\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  findOutMore(link: string): void {\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Directive, Input, ViewContainerRef, inject } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesScopedService } from '../features-scoped.service';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { BehaviorSubject, switchMap, Observable, map, combineLatest } from 'rxjs';\r\nimport { FeatureSummary } from '../models';\r\n\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n  // TODO: @2dg - convert this to signal using 'input(...)'\r\n  /** Feature NameId to check */\r\n  @Input()\r\n  public set featureNameId(value: string) { this.featureNameId$.next(value); }\r\n  protected featureNameId$ = new BehaviorSubject<string>(null);\r\n\r\n  // TODO: @2dg - convert this to signal using 'input(...)'\r\n  /** By default, it will show if it's false - here we can change it to show if true */\r\n  @Input()\r\n  public set showIf(value: boolean) { this.showIf$.next(value == true); }\r\n  protected showIf$ = new BehaviorSubject<boolean>(false);\r\n\r\n  #dialog = inject(MatDialog);\r\n  #viewContainerRef = inject(ViewContainerRef);\r\n  #changeDetectorRef = inject(ChangeDetectorRef);\r\n  #featuresService = inject(FeaturesScopedService);\r\n\r\n  constructor() {\r\n    this.feature$ = this.featureNameId$.pipe(\r\n      switchMap(featName => this.#featuresService.get$(featName))\r\n    );\r\n    this.show$ = combineLatest([this.feature$, this.showIf$]).pipe(\r\n      map(([feat, showIf]) => showIf == (feat?.isEnabled ?? false))\r\n    );\r\n  }\r\n\r\n  // TODO: @2dg - convert this to signal\r\n  // Note that this is a base class, so the change will affect a few components\r\n  feature$: Observable<FeatureSummary>;\r\n  show$: Observable<boolean>;\r\n\r\n  openDialog() {\r\n    openFeatureDialog(this.#dialog, this.featureNameId$.value, this.#viewContainerRef, this.#changeDetectorRef);\r\n  }\r\n}\r\n\r\n\r\nexport function openFeatureDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n  dialog.open(FeatureInfoDialogComponent, {\r\n    autoFocus: false,\r\n    data: featureId,\r\n    viewContainerRef: viewContainerRef,\r\n    width: '400px',\r\n  });\r\n\r\n  changeDetectorRef.markForCheck();\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    NgClass,\r\n    NgTemplateOutlet\r\n  ]\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n","import { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { ServiceBase } from '../services/service-base';\r\nimport { classLog } from '../logging';\r\n\r\nconst logSpecs = {\r\n  doOnDialogClosed: true,\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase {\r\n\r\n  log = classLog({DialogRoutingService}, logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  getParam(key: string): string {\r\n    return this.route.snapshot.paramMap.get(key);\r\n  }\r\n\r\n  getParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const paramMap = this.route.snapshot.paramMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = paramMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  getQueryParam(key: string): string {\r\n    return this.route.snapshot.queryParamMap.get(key);\r\n  }\r\n\r\n  getQueryParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const queryParamMap = this.route.snapshot.queryParamMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = queryParamMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe(() => callback())\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  public navParentFirstChild(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route.parent.firstChild });\r\n  }\r\n  \r\n  childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}