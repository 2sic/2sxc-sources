{"version":3,"file":"projects_eav-ui_src_app_edit_dialog_footer_edit-dialog-footer_component_ts.24fba9672610420f.js","mappings":"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","names":["EntitiesService","constructor","http","context","dnnContext","this","create","contentType","entity","post","params","appId","zoneId","update","entityId","delete","type","id","tryForce","$2sxc","apiUrl","webApiEntityRoot","toString","force","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_2__","jDH","factory","ɵfac","DebugTypes","Data","Formulas","Logs","log_r2","_r1","$implicit","ctx_r2","logToConsole","_c0","severity","LogSeverities","Error","Warn","time","label","LogsDumpComponent","loggingService","logs","getLogsSignal","log","Log","console","error","warn","core","VBU","selectors","standalone","features","decls","vars","consts","template","rf","ctx","LogsDumpComponent_Conditional_1_Template","LogsDumpComponent_For_3_Template","length","NgClass","ExtendedModule","DatePipe","styles","SelectTargets","Entity","Field","Target","SnippetLabelSizePipe","maxLength","transform","substring","EJ8","pure","entityOption_r3","entityGuid","_c2","hasFormula","fieldOption_r4","fieldName","targetOption_r6","target","$event","_r5","ctx_r1","selectedChanged","FormulaDesignerComponent_Conditional_0_Conditional_16_For_2_Template","state","targetOptions","_r7","snippet_r9","_r8","copyToClipboard","code","snippet_r11","_r10","result","value","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_0_Conditional_0_Template","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_0_Conditional_1_Template","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_0_Conditional_2_Template","undefined","isOnlyPromise","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_0_Template","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_1_Template","isError","_r12","save","editMode","tmp_3_0","currentFormula","source","tmp_4_0","saving","FormulaDesignerComponent_Conditional_0_For_6_Template","trackEntityOptions","FormulaDesignerComponent_Conditional_0_For_12_Template","trackFieldOptions","FormulaDesignerComponent_Conditional_0_Conditional_16_Template","FormulaDesignerComponent_Conditional_0_Conditional_17_Template","toggleFreeText","formulaChanged","onFocused","onBlurred","FormulaDesignerComponent_Conditional_0_For_32_Template","trackSnippets","FormulaDesignerComponent_Conditional_0_Conditional_33_Template","FormulaDesignerComponent_Conditional_0_For_35_Template","FormulaDesignerComponent_Conditional_0_Conditional_40_Template","toggleEdit","deleteFormula","reset","FormulaDesignerComponent_Conditional_0_Conditional_60_Template","run","entityOptions","fieldsOptions","freeTextTarget","focused","filename","tmp_12_0","v2JsTypings","monacoOptions","_c1","v1DataSnippets","tmp_17_0","v1ContextSnippets","isDeleted","menu_r13","tmp_21_0","sourceId","allowSaveFormula","tmp_23_0","FormulaDesignerComponent","#designerSvc","snackBar","formConfig","itemService","contentTypeService","translate","loadError","config","enableFormulaSave","signal","minimap","enabled","lineHeight","lineNumbers","lineDecorationsWidth","folding","scrollBeyondLastLine","tabSize","fixedOverflowWidgets","formId","entitiesService","transient","inject","FormulaDesignerService","designerState","formulaResult","currentTargetOptions","computed","Object","values","FormulaListItemTargets","includes","listItemFormulaNow","defaultFormulaNow","EavLogger","ngOnInit","keys","itemSettingsServices","setDesignerOpen","initAfterItemSettingsAreReady","ngOnDestroy","index","entityOption","fieldOption","snippet","newState","selectedSettingsSvc","getFieldsProps","set","formula","designer","cache","updateFormulaFromEditor","text","open","duration","oldState","resetFormula","retriggerFormulas","item","getItem","contentTypeId","ItemHelper","getContentTypeNameId","atAllFieldSettings","getContentType","Attributes","find","a","Name","Metadata","m","Type","Id","eavConstants","contentTypes","formulas","Title","Formula","Enabled","ParentRelationship","Add","EntityId","Index","Parent","Guid","subscribe","savedFormula","updateSaved","sourceGuid","confirm","instant","title","next","_","i4","FormulaDesignerComponent_Conditional_0_Template","MatFormFieldModule","i5","MatSelectModule","i6","i7","FormsModule","i8","MatOptionModule","i9","MatInputModule","i10","MatButtonModule","i11","MatIconModule","i12","MonacoEditorComponent","MatMenuModule","i13","JsonPipe","TippyDirective","DataDumpComponent","items","getItemsSignal","itemGuids","EditDialogFooterComponent_Conditional_20_Conditional_1_Template","EditDialogFooterComponent_Conditional_20_Conditional_2_Template","EditDialogFooterComponent_Conditional_20_Conditional_3_Template","ctx_r0","activeDebug","EditDialogFooterComponent","debugInfoOpened","EventEmitter","sxcVer","window","sxcVersion","lastIndexOf","toggleDialog","emit","outputs","EditDialogFooterComponent_Conditional_20_Template","MatCardModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/content-items/services/entities.service.ts","./projects/eav-ui/src/app/edit/dialog/footer/edit-dialog-footer.models.ts","./projects/eav-ui/src/app/edit/dialog/footer/logs-dump/logs-dump.component.html","./projects/eav-ui/src/app/edit/dialog/footer/logs-dump/logs-dump.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/formula-designer/formula-designer.models.ts","./projects/eav-ui/src/app/edit/dialog/footer/formula-designer/snippet-label-size.pipe.ts","./projects/eav-ui/src/app/edit/dialog/footer/formula-designer/formula-designer.component.html","./projects/eav-ui/src/app/edit/dialog/footer/formula-designer/formula-designer.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/data-dump/data-dump.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/data-dump/data-dump.component.html","./projects/eav-ui/src/app/edit/dialog/footer/edit-dialog-footer.component.html","./projects/eav-ui/src/app/edit/dialog/footer/edit-dialog-footer.component.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../edit/shared/models/eav';\r\nimport { ItemInListIdentifier } from '../../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { webApiEntityRoot } from '../../shared/services/entity.service';\r\n\r\n@Injectable()\r\nexport class EntitiesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.context.appId.toString(), force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n\r\nexport interface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: ItemInListIdentifier;\r\n  [field: string]: any;\r\n}\r\n\r\nexport interface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n","export const DebugTypes = {\r\n  Data: 'data',\r\n  Formulas: 'formulas',\r\n  Logs: 'logs',\r\n} as const;\r\n\r\nexport type DebugType = typeof DebugTypes[keyof typeof DebugTypes];\r\n","<div class=\"logs-box fancy-scrollbar-light\">\r\n  @if (logs().length === 0) {\r\n  <div>Logs are empty</div>\r\n  }\r\n  @for (log of logs(); track log) {\r\n  <div class=\"log-entry\" [ngClass]=\"{\r\n        'log-error': log.severity === LogSeverities.Error,\r\n        'log-warn': log.severity === LogSeverities.Warn\r\n        }\">\r\n    <span class=\"log-entry-part log-entry-time\">{{ log.time | date : 'HH:mm:ss' }}:</span>\r\n    <span class=\"log-entry-part log-entry-label\">{{ log.label }}</span>\r\n    <span class=\"log-entry-part log-entry-show\" tippy=\"Log to console\" (click)=\"logToConsole(log)\">\r\n      console\r\n    </span>\r\n  </div>\r\n  }\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ExtendedModule } from '@angular/flex-layout/extended';\r\nimport { NgClass, AsyncPipe, DatePipe } from '@angular/common';\r\nimport { LogEntry, LoggingService, LogSeverities } from '../../../shared/services/logging.service';\r\n\r\n@Component({\r\n  selector: 'app-logs-dump',\r\n  templateUrl: './logs-dump.component.html',\r\n  styleUrls: ['./logs-dump.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    ExtendedModule,\r\n    AsyncPipe,\r\n    DatePipe,\r\n  ],\r\n})\r\nexport class LogsDumpComponent {\r\n  LogSeverities = LogSeverities;\r\n\r\n  protected logs = this.loggingService.getLogsSignal();\r\n\r\n  constructor(private loggingService: LoggingService) { }\r\n\r\n  logToConsole(log: LogEntry): void {\r\n    switch (log.severity) {\r\n      case LogSeverities.Log:\r\n        console.log(log.label, log.error);\r\n        break;\r\n      case LogSeverities.Warn:\r\n        console.warn(log.label, log.error);\r\n        break;\r\n      case LogSeverities.Error:\r\n        console.error(log.label, log.error);\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { FormulaCacheItem, FormulaTarget } from '../../../formulas/models/formula.models';\r\n\r\nexport interface EntityOption {\r\n  entityGuid: string;\r\n  formulas: FormulaCacheItem[];\r\n  hasFormula: boolean;\r\n  label: string;\r\n}\r\n\r\nexport interface FieldOption {\r\n  fieldName: string;\r\n  formulas: FormulaCacheItem[];\r\n  hasFormula: boolean;\r\n  inputType: string;\r\n  label: string;\r\n}\r\n\r\nexport interface TargetOption {\r\n  hasFormula: boolean;\r\n  label: string;\r\n  target: FormulaTarget;\r\n}\r\n\r\nexport interface DesignerSnippet {\r\n  code: string;\r\n  label: string;\r\n}\r\n\r\nexport const SelectTargets = {\r\n  Entity: 'entityGuid',\r\n  Field: 'fieldValue',\r\n  Target: 'formulaTarget',\r\n} as const;\r\n\r\nexport type SelectTarget = typeof SelectTargets[keyof typeof SelectTargets];\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'snippetLabelSize',\r\n    standalone: true\r\n})\r\nexport class SnippetLabelSizePipe implements PipeTransform {\r\n\r\n  private maxLength = 24;\r\n\r\n  transform(label: string): string {\r\n    if (label.length <= this.maxLength) { return label; }\r\n    return `…${label.substring(label.length - this.maxLength)}`;\r\n  }\r\n}\r\n","@if (!loadError) {\r\n  <div class=\"formula-context-box\">\r\n    <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n      <mat-label>Entity</mat-label>\r\n      <mat-select [ngModel]=\"state().entityGuid\" (ngModelChange)=\"selectedChanged(SelectTargets.Entity, $event)\">\r\n        @for (entityOption of entityOptions(); track trackEntityOptions($index, entityOption)) {\r\n          <mat-option\r\n            [value]=\"entityOption.entityGuid\">\r\n            <span [ngClass]=\"{ 'has-formula': entityOption.hasFormula }\">\r\n              {{ entityOption.label }}\r\n            </span>\r\n          </mat-option>\r\n        }\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n      <mat-label>Attribute</mat-label>\r\n      <mat-select [ngModel]=\"state().fieldName\" (ngModelChange)=\"selectedChanged(SelectTargets.Field, $event)\"\r\n        [disabled]=\"state().entityGuid == null\">\r\n        @for (fieldOption of fieldsOptions(); track trackFieldOptions($index, fieldOption)) {\r\n          <mat-option\r\n            [value]=\"fieldOption.fieldName\">\r\n            <span [ngClass]=\"{ 'has-formula': fieldOption.hasFormula }\">\r\n              {{ fieldOption.fieldName }}\r\n            </span>\r\n          </mat-option>\r\n        }\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n      <mat-label>Target</mat-label>\r\n      @if (!freeTextTarget) {\r\n        <mat-select [ngModel]=\"state().target\"\r\n          (ngModelChange)=\"selectedChanged(SelectTargets.Target, $event)\"\r\n          [disabled]=\"state().entityGuid == null || state().fieldName == null\">\r\n          @for (targetOption of targetOptions(); track targetOption) {\r\n            <mat-option [value]=\"targetOption.target\">\r\n              <span [ngClass]=\"{ 'has-formula': targetOption.hasFormula }\">\r\n                {{ targetOption.label }}\r\n              </span>\r\n            </mat-option>\r\n          }\r\n        </mat-select>\r\n      }\r\n      @if (freeTextTarget) {\r\n        <input matInput [ngModel]=\"state().target\"\r\n          (ngModelChange)=\"selectedChanged(SelectTargets.Target, $event)\"\r\n          [disabled]=\"state().entityGuid == null || state().fieldName == null\">\r\n      }\r\n    </mat-form-field>\r\n    <button mat-icon-button tippy=\"FreeText Target\" class=\"eav-formula-button\"\r\n      [disabled]=\"state().entityGuid == null || state().fieldName == null\" (click)=\"toggleFreeText()\">\r\n      <mat-icon>text_fields</mat-icon>\r\n    </button>\r\n    <div class=\"spacer\"></div>\r\n    <a mat-icon-button tippy=\"Help\" class=\"eav-formula-button\" href=\"https://go.2sxc.org/formulas\" target=\"_blank\">\r\n      <mat-icon>help</mat-icon>\r\n    </a>\r\n  </div>\r\n  <div class=\"formula-box\">\r\n    <div class=\"formula-field\" [ngClass]=\"{\r\n      'disabled': !state().editMode || state().entityGuid == null || state().fieldName == null || state().target == null,\r\n      'focused': focused\r\n      }\">\r\n      <mat-label class=\"label\">Function</mat-label>\r\n      <app-monaco-editor class=\"editor\" [filename]=\"filename\" [value]=\"currentFormula()?.source ?? template()\"\r\n        [jsTypings]=\"v2JsTypings()\" (valueChanged)=\"formulaChanged($event)\" [options]=\"monacoOptions\"\r\n        (focused)=\"onFocused()\" (blurred)=\"onBlurred()\">\r\n      </app-monaco-editor>\r\n    </div>\r\n    <div class=\"formula-snippets fancy-scrollbar-light\" [ngClass]=\"{ 'disabled': !state().editMode }\">\r\n      @for (snippet of v1DataSnippets(); track trackSnippets($index, snippet)) {\r\n        <div class=\"snippet\" [title]=\"snippet.code\"\r\n          (click)=\"copyToClipboard(snippet.code)\">\r\n          {{ snippet.label | snippetLabelSize }}\r\n        </div>\r\n      }\r\n      @if (v1DataSnippets()?.length && v1ContextSnippets().length) {\r\n        <div class=\"separator\"></div>\r\n      }\r\n      @for (snippet of v1ContextSnippets(); track trackSnippets($index, snippet)) {\r\n        <div class=\"snippet\" [title]=\"snippet.code\"\r\n          (click)=\"copyToClipboard(snippet.code)\">\r\n          {{ snippet.label | snippetLabelSize }}\r\n        </div>\r\n      }\r\n    </div>\r\n  </div>\r\n  <div class=\"formula-footer-box\">\r\n    <div class=\"formula-result-box hide-scrollbar\">\r\n      <span class=\"label\">Result:&nbsp;</span>\r\n      @if (result() != null && !isDeleted()) {\r\n        @if (!result().isError) {\r\n          @if (result().value !== undefined) {\r\n            <span>{{ result().value | json }}</span>\r\n          }\r\n          @else if (!result().isOnlyPromise) {\r\n            <span class=\"result-undefined\">undefined</span>\r\n          }\r\n          @else {\r\n            <span>promise(🤞🏽)</span>\r\n          }\r\n        }\r\n        @else {\r\n          <span class=\"result-error\">\r\n            Calculation failed. Please check logs for more info\r\n          </span>\r\n        }\r\n      }\r\n    </div>\r\n    <div class=\"formula-actions-box\">\r\n      <button mat-icon-button tippy=\"Edit\" class=\"eav-formula-action-button\" (click)=\"toggleEdit()\">\r\n        <mat-icon>edit</mat-icon>\r\n      </button>\r\n      <button mat-icon-button tippy=\"Menu\" class=\"eav-formula-action-button\" [matMenuTriggerFor]=\"menu\">\r\n        <mat-icon>more_vert</mat-icon>\r\n      </button>\r\n      <mat-menu #menu=\"matMenu\">\r\n        <button mat-menu-item (click)=\"deleteFormula()\"\r\n          [disabled]=\"!currentFormula()?.sourceId\">\r\n          <mat-icon>delete</mat-icon>\r\n          <span>Delete</span>\r\n        </button>\r\n        <button mat-menu-item (click)=\"reset()\">\r\n          <mat-icon>history</mat-icon>\r\n          <span>Reset</span>\r\n        </button>\r\n      </mat-menu>\r\n      @if (allowSaveFormula) {\r\n        <button mat-icon-button tippy=\"Save\" class=\"eav-formula-action-button\"\r\n          [tippyDisabled]=\"!state().editMode || !currentFormula()?.source\"\r\n          [disabled]=\"!state().editMode || !currentFormula()?.source || saving()\" (click)=\"save()\">\r\n          <mat-icon>save</mat-icon>\r\n        </button>\r\n      }\r\n      <button mat-icon-button class=\"eav-formula-action-button\" tippy=\"Run\"\r\n        [disabled]=\"!state().editMode || !currentFormula()?.source\" (click)=\"run()\">\r\n        <mat-icon>play_arrow</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, computed, inject, OnDestroy, OnInit, signal } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport type * as Monaco from 'monaco-editor';\r\nimport { EntitiesService } from '../../../../content-items/services/entities.service';\r\nimport { eavConstants } from '../../../../shared/constants/eav.constants';\r\nimport { copyToClipboard } from '../../../../shared/helpers/copy-to-clipboard.helper';\r\nimport { FormulaDesignerService } from '../../../formulas/formula-designer.service';\r\nimport { defaultFormulaNow, listItemFormulaNow } from '../../../formulas/formula.constants';\r\nimport { FormulaListItemTargets, FormulaTarget } from '../../../formulas/models/formula.models';\r\nimport { ContentTypeService, ItemService } from '../../../shared/store/ngrx-data';\r\nimport { DesignerSnippet, EntityOption, FieldOption, SelectTarget, SelectTargets } from './formula-designer.models';\r\nimport { DesignerState } from '../../../formulas/models/formula-results.models';\r\nimport { SnippetLabelSizePipe } from './snippet-label-size.pipe';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MonacoEditorComponent } from '../../../../monaco-editor/monaco-editor.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ExtendedModule } from '@angular/flex-layout/extended';\r\nimport { NgClass, AsyncPipe, JsonPipe } from '@angular/common';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { transient } from '../../../../core/transient';\r\nimport { EavLogger } from '../../../../shared/logging/eav-logger';\r\nimport { FormConfigService } from '../../../state/form-config.service';\r\nimport { ItemHelper } from '../../../shared/helpers/item.helper';\r\n\r\nconst logThis = true;\r\nconst nameOfThis = 'FormulaDesignerComponent';\r\n\r\n@Component({\r\n  selector: 'app-formula-designer',\r\n  templateUrl: './formula-designer.component.html',\r\n  styleUrls: ['./formula-designer.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    MatOptionModule,\r\n    NgClass,\r\n    ExtendedModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MonacoEditorComponent,\r\n    MatMenuModule,\r\n    AsyncPipe,\r\n    JsonPipe,\r\n    SnippetLabelSizePipe,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class FormulaDesignerComponent implements OnInit, OnDestroy {\r\n  SelectTargets = SelectTargets;\r\n  loadError = false;\r\n  freeTextTarget = false;\r\n  allowSaveFormula = this.formConfig.config.enableFormulaSave;\r\n  isDeleted = signal(false);\r\n  saving = signal(false);\r\n  monacoOptions: Monaco.editor.IStandaloneEditorConstructionOptions = {\r\n    minimap: {\r\n      enabled: false,\r\n    },\r\n    lineHeight: 19,\r\n    lineNumbers: 'off',\r\n    lineDecorationsWidth: 0,\r\n    folding: false,\r\n    scrollBeyondLastLine: false,\r\n    tabSize: 2,\r\n    fixedOverflowWidgets: true,\r\n  };\r\n  filename = `formula${this.formConfig.config.formId}.js`;\r\n  focused = false;\r\n\r\n  private entitiesService = transient(EntitiesService);\r\n\r\n  #designerSvc = inject(FormulaDesignerService);\r\n  protected state = this.#designerSvc.designerState;\r\n  protected result = this.#designerSvc.formulaResult;\r\n  protected targetOptions = this.#designerSvc.currentTargetOptions;\r\n  \r\n  protected entityOptions = this.#designerSvc.entityOptions;\r\n  protected fieldsOptions = this.#designerSvc.fieldsOptions;\r\n  protected currentFormula = this.#designerSvc.currentFormula;\r\n\r\n  protected v2JsTypings = this.#designerSvc.v2JsTypings;\r\n\r\n  protected v1ContextSnippets = this.#designerSvc.v1ContextSnippets;\r\n  protected v1DataSnippets = this.#designerSvc.v1DataSnippets;\r\n\r\n  protected template = computed(() => {\r\n    return Object.values(FormulaListItemTargets).includes(this.state().target)\r\n    ? listItemFormulaNow\r\n    : defaultFormulaNow;\r\n  });\r\n\r\n  private log = new EavLogger(nameOfThis, logThis);\r\n  \r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private formConfig: FormConfigService,\r\n    private itemService: ItemService,\r\n    private contentTypeService: ContentTypeService,\r\n    private translate: TranslateService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadError = false;\r\n    if (Object.keys(this.#designerSvc.itemSettingsServices).length < 1) {\r\n      this.loadError = true;\r\n      return;\r\n    }\r\n    \r\n    this.#designerSvc.setDesignerOpen(true);\r\n    this.#designerSvc.initAfterItemSettingsAreReady();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.#designerSvc.setDesignerOpen(false);\r\n  }\r\n\r\n  trackEntityOptions(index: number, entityOption: EntityOption): string {\r\n    return entityOption.entityGuid;\r\n  }\r\n\r\n  trackFieldOptions(index: number, fieldOption: FieldOption): string {\r\n    return fieldOption.fieldName;\r\n  }\r\n\r\n  trackSnippets(index: number, snippet: DesignerSnippet): string {\r\n    return snippet.code;\r\n  }\r\n\r\n  selectedChanged(target: SelectTarget, value: string | FormulaTarget): void {\r\n    const newState: DesignerState = {\r\n      ...this.#designerSvc.designerState(),\r\n      editMode: false,\r\n    };\r\n    switch (target) {\r\n      case SelectTargets.Entity:\r\n        newState.entityGuid = value;\r\n        const selectedSettingsSvc = this.#designerSvc.itemSettingsServices[newState.entityGuid];\r\n        newState.fieldName = Object.keys(selectedSettingsSvc.getFieldsProps())[0];\r\n        break;\r\n      case SelectTargets.Field:\r\n        newState.fieldName = value;\r\n        break;\r\n      case SelectTargets.Target:\r\n        newState.target = value as FormulaTarget;\r\n        break;\r\n    }\r\n\r\n    this.#designerSvc.designerState.set(newState);\r\n  }\r\n\r\n  toggleFreeText(): void {\r\n    this.freeTextTarget = !this.freeTextTarget;\r\n  }\r\n\r\n  formulaChanged(formula: string): void {\r\n    const designer = this.#designerSvc.designerState();\r\n    this.#designerSvc.cache.updateFormulaFromEditor(designer, formula, false);\r\n  }\r\n\r\n  onFocused(): void {\r\n    this.focused = true;\r\n  }\r\n\r\n  onBlurred(): void {\r\n    this.focused = false;\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  toggleEdit(): void {\r\n    const oldState = this.#designerSvc.designerState();\r\n    const designer: DesignerState = {\r\n      ...oldState,\r\n      editMode: !oldState.editMode,\r\n    };\r\n    this.#designerSvc.designerState.set(designer);\r\n    if (designer.editMode) {\r\n      const formula = this.#designerSvc.currentFormula();\r\n      if (formula == null) {\r\n        this.#designerSvc.cache.updateFormulaFromEditor(designer, Object.values(FormulaListItemTargets).includes(designer.target) ? listItemFormulaNow : defaultFormulaNow, false);\r\n      }\r\n    }\r\n  }\r\n\r\n  reset(): void {\r\n    const designer: DesignerState = {\r\n      ...this.#designerSvc.designerState(),\r\n      editMode: false,\r\n    };\r\n    this.#designerSvc.designerState.set(designer);\r\n    this.#designerSvc.cache.resetFormula(designer);\r\n    this.#designerSvc.itemSettingsServices[designer.entityGuid].retriggerFormulas();\r\n  }\r\n\r\n  run(): void {\r\n    const designer = this.#designerSvc.designerState();\r\n    const formula = this.#designerSvc.currentFormula();\r\n    this.#designerSvc.cache.updateFormulaFromEditor(designer, formula.source, true);\r\n    this.#designerSvc.itemSettingsServices[designer.entityGuid].retriggerFormulas();\r\n    this.isDeleted.set(false);\r\n  }\r\n\r\n  save(): void {\r\n    this.saving.set(true);\r\n    const formula = this.#designerSvc.currentFormula();\r\n\r\n    if (formula.sourceId == null) {\r\n      const item = this.itemService.getItem(formula.entityGuid);\r\n      const contentTypeId = ItemHelper.getContentTypeNameId(item);\r\n      const contentType = this.contentTypeService.getContentType(contentTypeId);\r\n      const attributeDef = contentType.Attributes.find(a => a.Name === formula.fieldName);\r\n      const atAllFieldSettings = attributeDef.Metadata.find(m => m.Type.Id === '@All');\r\n      if (!atAllFieldSettings) {\r\n        this.snackBar.open('Field configuration is missing. Please create formula in Administration', undefined, { duration: 3000 });\r\n        this.saving.set(false);\r\n        return;\r\n      }\r\n      this.entitiesService.create(\r\n        eavConstants.contentTypes.formulas,\r\n        {\r\n          Title: formula.target,\r\n          Target: formula.target,\r\n          Formula: formula.source,\r\n          Enabled: true,\r\n          ParentRelationship: {\r\n            Add: null,\r\n            EntityId: null,\r\n            Field: 'Formulas',\r\n            Index: 0,\r\n            Parent: atAllFieldSettings.Guid,\r\n          },\r\n        },\r\n      ).subscribe(savedFormula => {\r\n        this.#designerSvc.cache.updateSaved(formula, savedFormula.Guid, savedFormula.Id);\r\n        this.snackBar.open('Formula saved', null, { duration: 2000 });\r\n        this.saving.set(false);\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.entitiesService.update(eavConstants.contentTypes.formulas, formula.sourceId, { Formula: formula.source }).subscribe(() => {\r\n      this.#designerSvc.cache.updateSaved(formula, formula.sourceGuid, formula.sourceId);\r\n      this.snackBar.open('Formula saved', null, { duration: 2000 });\r\n      this.saving.set(false);\r\n    });\r\n  }\r\n\r\n  deleteFormula(): void {\r\n    const designer = this.#designerSvc.designerState();\r\n    const formula = this.#designerSvc.currentFormula();\r\n\r\n    const id = formula.sourceId;\r\n    const title = formula.fieldName + ' - ' + formula.target;\r\n\r\n    const confirmed = confirm(this.translate.instant('Data.Delete.Question', { title, id }));\r\n    if (!confirmed)\r\n      return;\r\n\r\n    this.entitiesService.delete(eavConstants.contentTypes.formulas, formula.sourceId, true).subscribe({\r\n      next: () => {\r\n        this.#designerSvc.cache.delete(formula);\r\n        this.snackBar.open(this.translate.instant('Message.Deleted'), null, { duration: 2000 });\r\n        this.isDeleted.set(true);\r\n        if (designer.editMode)\r\n          this.toggleEdit();\r\n      },\r\n      error: (_: HttpErrorResponse) => {\r\n        this.snackBar.open(this.translate.instant('Message.DeleteError'), null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  \r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ItemService } from '../../../shared/store/ngrx-data';\r\nimport { JsonPipe } from '@angular/common';\r\nimport { FormConfigService } from '../../../state/form-config.service';\r\n\r\n@Component({\r\n  selector: 'app-data-dump',\r\n  templateUrl: './data-dump.component.html',\r\n  styleUrls: ['./data-dump.component.scss'],\r\n  standalone: true,\r\n  imports: [JsonPipe],\r\n})\r\nexport class DataDumpComponent {\r\n  protected items = this.itemService.getItemsSignal(this.formConfig.config.itemGuids);\r\n  constructor(private itemService: ItemService, private formConfig: FormConfigService) { }\r\n}\r\n","  <textarea readonly class=\"fancy-scrollbar-light\">{{ items() | json }}</textarea>\r\n\r\n","<mat-card appearance=\"raised\" class=\"mat-elevation-z4\" [ngClass]=\"{ 'debug-enabled': activeDebug != null }\">\r\n\r\n  <div class=\"debug-buttons-container\">\r\n    <button mat-button tippy=\"Show Data JSON\" (click)=\"toggleDialog(DebugTypes.Data)\">\r\n      <mat-icon>offline_bolt</mat-icon>\r\n      <span>Data</span>\r\n    </button>\r\n    <button mat-button tippy=\"Show Formula Designer\" (click)=\"toggleDialog(DebugTypes.Formulas)\">\r\n      <mat-icon>functions</mat-icon>\r\n      <span>Formulas</span>\r\n    </button>\r\n    <button mat-button tippy=\"Show Logs\" (click)=\"toggleDialog(DebugTypes.Logs)\">\r\n      <mat-icon>speed</mat-icon>\r\n      <span>Logs</span>\r\n    </button>\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"sxc-version\">2sxc {{ sxcVer }}</div>\r\n  </div>\r\n\r\n  @if (activeDebug != null) {\r\n    <div class=\"debug-info-container\">\r\n      @if (activeDebug === DebugTypes.Data) {\r\n        <app-data-dump></app-data-dump>\r\n      }\r\n      @if (activeDebug === DebugTypes.Formulas) {\r\n        <app-formula-designer>\r\n        </app-formula-designer>\r\n      }\r\n      @if (activeDebug === DebugTypes.Logs) {\r\n        <app-logs-dump></app-logs-dump>\r\n      }\r\n    </div>\r\n  }\r\n</mat-card>","import { Component, EventEmitter, Input, Output, QueryList } from '@angular/core';\r\nimport { EavWindow } from '../../../shared/models/eav-window.model';\r\nimport { EntityFormBuilderComponent } from '../../entity-form/entity-form-builder/form-builder.component';\r\nimport { DebugType, DebugTypes } from './edit-dialog-footer.models';\r\nimport { LogsDumpComponent } from './logs-dump/logs-dump.component';\r\nimport { FormulaDesignerComponent } from './formula-designer/formula-designer.component';\r\nimport { DataDumpComponent } from './data-dump/data-dump.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { ExtendedModule } from '@angular/flex-layout/extended';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-edit-dialog-footer',\r\n  templateUrl: './edit-dialog-footer.component.html',\r\n  styleUrls: ['./edit-dialog-footer.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    NgClass,\r\n    ExtendedModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    DataDumpComponent,\r\n    FormulaDesignerComponent,\r\n    LogsDumpComponent,\r\n  ],\r\n})\r\nexport class EditDialogFooterComponent {\r\n  @Output() private debugInfoOpened = new EventEmitter<boolean>();\r\n\r\n  DebugTypes = DebugTypes;\r\n  activeDebug: DebugType;\r\n  sxcVer = window.sxcVersion.substring(0, window.sxcVersion.lastIndexOf('.'));\r\n\r\n  toggleDialog(type: DebugType): void {\r\n    this.activeDebug = type !== this.activeDebug ? type : null;\r\n    this.debugInfoOpened.emit(this.activeDebug != null);\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}