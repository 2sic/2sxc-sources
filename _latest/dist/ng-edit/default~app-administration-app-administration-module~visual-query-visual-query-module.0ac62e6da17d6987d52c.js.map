{"version":3,"sources":["./src/app/dev-rest/selector-with-help/selector-with-help.component.ts","./src/app/dev-rest/selector-with-help/selector-with-help.component.html","./src/app/permissions/permissions-routing.module.ts","./src/app/content-items/services/entities.service.ts","./src/app/shared/components/id-field/id-field.component.ts","./src/app/shared/components/id-field/id-field.component.html","./src/app/app-administration/services/app-dialog-config.service.ts","./src/app/dev-rest/scenarios/all-scenarios.ts","./src/app/dev-rest/examples/api-call.ts","./src/app/dev-rest/examples/code-sample.ts","./src/app/dev-rest/examples/generate-samples.ts","./src/app/dev-rest/examples/index.ts","./src/app/dev-rest/help-popup/help-popup.component.html","./src/app/dev-rest/help-popup/help-popup.component.ts","./src/app/dev-rest/routing-helpers.ts","./src/app/permissions/services/permissions.service.ts","./src/app/permissions/ag-grid-components/permissions-actions/permissions-actions.component.ts","./src/app/permissions/ag-grid-components/permissions-actions/permissions-actions.component.html","./src/app/permissions/permissions.component.ts","./src/app/permissions/permissions.component.html","./src/app/permissions/permissions-dialog.config.ts","./src/app/permissions/go-to-permissions.ts","./src/app/app-administration/services/import-app-parts.service.ts","./src/app/shared/helpers/file-to-base64.helper.ts","./src/app/import-app/services/import-app.service.ts","./src/app/app-administration/services/export-app-parts.service.ts","./src/app/shared/helpers/copy-to-clipboard.helper.ts","./src/app/dev-rest/info-box/hint.ts","./src/app/app-administration/services/index.ts","./src/app/app-administration/services/pipelines.service.ts","./src/app/dev-rest/go-to-dev-rest.ts","./src/app/permissions/permissions.module.ts","./src/app/app-administration/services/web-apis.service.ts","./src/app/app-administration/services/export-app.service.ts","./src/app/dev-rest/dev-rest-base.component.ts","./src/app/app-administration/services/views.service.ts","./src/app/permissions/services/metadata.service.ts"],"names":["dialog","valueChange","ngOnInit","selectionChange","key","this","value","scenario","items","find","item","emit","showHelp","open","width","data","name","body","description","notes","autoFocus","SelectorWithHelpComponent","routes","path","component","children","matcher","loadChildren","then","m","EditModule","RefreshEditModule","PermissionsRoutingModule","forChild","http","context","dnnContext","delete","type","id","tryForce","$2sxc","apiUrl","params","contentType","toString","appId","force","EntitiesService","snackBar","agInit","tooltip","tooltipGetter","refresh","copy","duration","IdFieldComponent","getDialogSettings","get","webApiDialogRoot","appid","AppDialogConfigService","AllScenarios","in2sxc","useVirtual","inSameSite","inSameContext","needsAnonymous","virtual","verb","url","teaser","instructions","enableButton","code","browseUrl","title","runInConsole","hints","trim","generateApiCalls","root","startsWith","withId","contextParams","tabId","moduleId","directUrl","directWId","ApiCall","snippetsGet","snippetsCreate","snippetsUpdate","snippetsDelete","list","pathWithContext","push","CodeSample","hint$2sxc","endPointGetter","endPointGetWithParams","warningExternal","warningSimpleSampleOnly","dialogRef","dialogData","closeDialog","close","HelpPopupComponent","fireOnStartAndWhenSubDialogCloses","router","route","events","pipe","filter","event","startWith","snapshot","firstChild","map","pairwise","metadataService","entitiesService","getAll","targetType","keyType","getMetadata","contentTypes","permissions","PermissionsService","deletePermission","onDelete","PermissionsActionsComponent","permissionsService","permissions$","BehaviorSubject","modules","gridOptions","frameworkComponents","idFieldComponent","permissionsActionsComponent","columnDefs","headerName","field","headerClass","cellClass","cellRenderer","sortable","cellRendererParams","paramsData","Id","Guid","flex","minWidth","sort","onCellClicked","editPermission","bind","pinned","subscription","Subscription","parseInt","paramMap","fetchPermissions","refreshOnChildClosed","ngOnDestroy","complete","unsubscribe","subscribe","next","form","target","Object","values","metadata","metaValue","ContentTypeName","For","Target","keyTypes","guid","number","Number","string","String","EntityId","formUrl","navigate","relativeTo","permission","confirm","Title","add","PermissionsComponent","permissionsDialog","initContext","panelSize","panelClass","getComponent","GoToPermissions","go","goEntity","entity","goContentType","goAttribute","attribute","goApp","app","PermissionsModule","webApiAppPartsRoot","importAppParts","file","formData","FormData","append","post","zoneId","resetApp","ImportAppPartsService","toBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","split","onerror","error","readAsText","webApiAppRoot","importApp","changedName","ImportAppService","getContentInfo","scope","exportParts","contentTypeIds","entityIds","templateIds","join","window","ExportAppPartsService","copyToClipboard","str","el","document","createElement","setAttribute","style","position","left","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","infoBoxIconMap","alert","info","tip","warning","message","link","icon","webApiQueryRun","webApiQueryRoot","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","importQuery","fileBase64","AppId","ContentBase64","clonePipeline","PipelinesService","base","GoToDevRest","routeData","paramTypeName","paramQuery","paramApiPath","goToData","StaticName","goToQuery","queryGuid","goToWebApi","api","encodeURIComponent","DevRestModule","withComponents","global","mask","withSubfolders","paths","splitIndex","lastIndexOf","fileExtIndex","folder","substring","create","details","apiPath","WebApisService","getAppInfo","exportApp","includeContentGroups","resetAppGuid","exportForVersionControl","ExportAppService","appDialogConfigService","scenarios","scenario$","dialogSettings$","buildPermissionStream","routeTargetName","pm","rootBasedOnScenario","domainPrefix","location","protocol","host","buildBaseTemplateVars","identity","diag","apiCalls","currentScenario","encodeURI","Context","App","Folder","permissionsHasAnonymous","p","Condition","indexOf","length","permissionTarget","changeScenario","DevRestBase","webApiViewRoot","import","export","getPolymorphism","getUsage","ViewsService","typeId","contentTypeName","MetadataService"],"mappings":"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","file":"default~app-administration-app-administration-module~visual-query-visual-query-module.0ac62e6da17d6987d52c.js","sourcesContent":["import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { HelpPopupComponent } from '..';\r\nimport { HelpPopupData } from '../help-popup/help-popup.models';\r\nimport { Scenario } from '../scenarios';\r\n\r\n@Component({\r\n  selector: 'app-selector-with-help',\r\n  templateUrl: './selector-with-help.component.html',\r\n  styleUrls: ['./selector-with-help.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SelectorWithHelpComponent implements OnInit {\r\n  @Input() label: string;\r\n  @Input() items: Scenario[];\r\n  @Input() value: string;\r\n  @Output() private valueChange = new EventEmitter<Scenario>();\r\n\r\n  constructor(private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  selectionChange(key: string) {\r\n    this.value = key;\r\n    const scenario = this.items.find(item => item.key === this.value);\r\n    this.valueChange.emit(scenario);\r\n  }\r\n\r\n  showHelp() {\r\n    const scenario = this.items.find(item => item.key === this.value);\r\n    const data: HelpPopupData = {\r\n      name: scenario.name,\r\n      body: scenario.description,\r\n      notes: scenario.notes,\r\n    };\r\n\r\n    this.dialog.open(HelpPopupComponent, {\r\n      width: '500px',\r\n      data,\r\n      autoFocus: false,\r\n    });\r\n  }\r\n}\r\n","<div class=\"selector\">\r\n  <mat-form-field class=\"selector__dropdown\" color=\"accent\">\r\n    <mat-label>{{ label }}</mat-label>\r\n    <mat-select [value]=\"value\" (selectionChange)=\"selectionChange($event.value)\">\r\n      <mat-option *ngFor=\"let item of items\" [value]=\"item.key\">{{ item.name }}</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <button mat-icon-button (click)=\"showHelp()\">\r\n    <mat-icon>help_outline</mat-icon>\r\n  </button>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { edit, refreshEdit } from '../../../../edit/edit.matcher';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { permissionsDialog } from './permissions-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: permissionsDialog }, children: [\r\n      {\r\n        matcher: edit,\r\n        loadChildren: () => import('../../../../edit/edit.module').then(m => m.EditModule)\r\n      },\r\n      {\r\n        matcher: refreshEdit,\r\n        loadChildren: () => import('../../../../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PermissionsRoutingModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiEntityRoot } from '../../../../../edit/shared/services';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Injectable()\r\nexport class EntitiesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.context.appId.toString(), force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: IdFieldParams) {\r\n    this.id = params.value;\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy() {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [matTooltip]=\"tooltip\" (click)=\"copy()\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { DialogSettings } from '../models/dialog-settings.model';\r\n\r\nconst webApiDialogRoot = 'admin/dialog/';\r\n\r\n@Injectable()\r\nexport class AppDialogConfigService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getDialogSettings() {\r\n    return this.http.get<DialogSettings>(this.dnnContext.$2sxc.http.apiUrl(webApiDialogRoot + 'settings'), {\r\n      params: { appid: this.context.appId.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Scenario } from './scenario';\r\n\r\nexport const AllScenarios: Array<Scenario> = [\r\n  {\r\n    key: 'internal',\r\n    in2sxc: true,\r\n    useVirtual: true,\r\n    inSameSite: true,\r\n    inSameContext: true,\r\n    name: 'JS in this App on a page (easiest)',\r\n    description: `Internal access means that your JS code is running in a 2sxc-module on a DNN-page.\r\n    This is the default access.\r\n    In this scenario, various headers are included in the request,\r\n    incl. the module it\\'s coming from, which allows various automatic things to happen.\r\n    This results in simpler REST requests.`,\r\n    notes: `This mode makes it easy to re-distribute your app, as you can perform API calls relative to the module that\\'s hosting it.\r\n    This means, that even if you export/import the app to another system, the API-calls stay the same.`,\r\n  },\r\n  {\r\n    key: 'internal2',\r\n    in2sxc: true,\r\n    useVirtual: true,\r\n    inSameSite: true,\r\n    inSameContext: false,\r\n    name: 'JS in a DIFFERENT 2sxc App on the SAME site',\r\n    description: `When using JS from another app, you cannot auto-detect of the app, so the path is slightly different.`,\r\n    notes: '',\r\n  },\r\n  // {\r\n  //   key: 'external1',\r\n  //   in2sxc: false,\r\n  //   useVirtual: false,\r\n  //   inSameSite: false,\r\n  //   inSameContext: false,\r\n  //   name: 'JS from a DIFFERENT site',\r\n  //   description: `When coding from another site, the path needs to be complete (not virtual), since auto-detection of site etc. can't work.\r\n  //   In addition, most DNN-headers cause trouble because they tell the server a context which isn't actually true. `,\r\n  //   notes: '',\r\n  // },\r\n  {\r\n    key: 'external',\r\n    in2sxc: false,\r\n    useVirtual: false,\r\n    inSameSite: false,\r\n    inSameContext: false,\r\n    needsAnonymous: true,\r\n    name: 'External (other website, mobile device, etc.)',\r\n    description: `External access means that the JS code could be on another page / module in DNN (which is not the same app),\r\n    or it could be coming from a mobile App, or another website altogether.\r\n    In this case, automatic app-detection can\\'t work, as various headers are missing, and you must access the endpoint more explicitly.`,\r\n    notes: `This mode requires you to define the exact, full URL, so if you create copies of this app on another system,\r\n    the URL must be updated to access that system specifically.\r\n    Note that our samples are in JS, you'll have to figure it out yourself for other programming languages.`,\r\n  },\r\n];\r\n","import { CodeSample } from './code-sample';\r\n\r\nexport class ApiCall {\r\n  constructor(\r\n    public virtual: boolean,\r\n    public verb: 'GET' | 'POST' | 'DELETE',\r\n    public url: string,\r\n    public teaser: string,\r\n    public instructions: string,\r\n    public enableButton: boolean,\r\n    public code: CodeSample[] = [],\r\n    public browseUrl: string = null,\r\n  ) { }\r\n}\r\n","import { Hint } from '../info-box/hint';\r\n\r\nexport class CodeSample {\r\n  constructor(\r\n    public title: string,\r\n    public description: string,\r\n    public code: string,\r\n    public runInConsole: boolean,\r\n    public hints: Hint[] = [],\r\n    // public warning = '',\r\n  ) {\r\n    // the code often has a leading new-line - so we'll trim this\r\n    this.code = this.code.trim();\r\n  }\r\n}\r\n","import { SxcRoot } from '@2sic.com/2sxc-typings';\r\nimport { ApiCall, CodeSample, hint$2sxc, Scenario, warningExternal, warningSimpleSampleOnly } from '..';\r\nimport { Context } from '../../shared/services/context';\r\n// tslint:disable: curly\r\n\r\n\r\nexport function generateApiCalls($2sxc: SxcRoot, scenario: Scenario, context: Context, root: string, id: number) {\r\n  const virtual = root[0] !== '/' && !root.startsWith('http');\r\n  root = root + '/';\r\n  const withId = root + id;\r\n  const contextParams = virtual ? `?PageId=${context.tabId}&ModuleId=${context.moduleId}` : '';\r\n  const directUrl = $2sxc.http.apiUrl(root) + contextParams;\r\n  const directWId = $2sxc.http.apiUrl(withId) + contextParams;\r\n\r\n  return [\r\n    new ApiCall(virtual, 'GET', root, 'read all', 'Read list of all items', true, snippetsGet(scenario, root, context),\r\n      directUrl),\r\n    new ApiCall(virtual, 'GET', withId, 'read one', 'Read a single item #' + id, true, snippetsGet(scenario, withId, context),\r\n      directWId),\r\n    new ApiCall(virtual, 'POST', root, 'create', 'Create an item', false, snippetsCreate(scenario, root, context.moduleId)),\r\n    new ApiCall(virtual, 'POST', withId, 'update', 'Update the item #' + id, false, snippetsUpdate(scenario, withId, context.moduleId)),\r\n    new ApiCall(virtual, 'DELETE', withId, 'delete', 'Delete item #' + id, false, snippetsDelete(scenario, withId, context.moduleId)),\r\n  ];\r\n}\r\n\r\nfunction snippetsGet(scenario: Scenario, path: string, context: Context): CodeSample[] {\r\n  const moduleId = context.moduleId;\r\n  const virtual = path[0] !== '/';\r\n  const list: CodeSample[] = [];\r\n  const pathWithContext = `${path}?PageId=${context.tabId}&ModuleId=${context.moduleId}`;\r\n\r\n  if (scenario.inSameContext)\r\n    list.push(new CodeSample('Example with global $2sxc and event-context',\r\n      'This example finds the context information from the HTML where an action started.',\r\n      `\r\n<button onclick=\"$2sxc(this).webApi.get('${path}').then(data => console.log(data))\">\r\n  get it\r\n</button>`, false, [hint$2sxc]));\r\n\r\n  if (scenario.in2sxc)\r\n    list.push(new CodeSample(`Example with global $2sxc and a Module-Id ${moduleId}`,\r\n      `This is how you get the context when your code doesn't start with a DOM context, so you need the moduleId.`,\r\n      `\r\n// get the sxc-controller for this module\r\nvar sxc = $2sxc(${moduleId});\r\n// now get the data in the promise\r\nsxc.webApi.get('${path}')\r\n  .then(data => {\r\n    console.log(data)\r\n  });`,\r\n      false, [hint$2sxc]),\r\n      new CodeSample(`Same example as one-liner`,\r\n        'This is the same as above, but as a one-liner so you can run it directly in the F12 console right now.',\r\n        `$2sxc(${moduleId}).webApi.get('${path}').then(data => console.log('just got:', data));`, true));\r\n\r\n  if (scenario.in2sxc && scenario.inSameContext)\r\n    list.push(new CodeSample('Example where you get the Module-Id from Razor',\r\n      `This example doesn't use a fixed moduleId but let's the Razor add the current moduleId when the page is rendered.`,\r\n      `\r\n// this will be replaced on the server with the ID\r\nvar moduleId = @Dnn.Module.ModuleID;\r\nvar sxc = $2sxc(moduleId);\r\nvar promise = sxc.webApi.get('${path}');`, false, [hint$2sxc]));\r\n\r\n  // jquery examples, they differ based on the scenario\r\n  const endPointGetter = virtual ? `$2sxc.http.apiUrl('${path}')` : `'${path}'`;\r\n  const endPointGetWithParams = virtual ? `$2sxc.http.apiUrl('${pathWithContext}')` : `'${pathWithContext}'`;\r\n  if (scenario.inSameSite) {\r\n    // jQuery using setModuleHeaders\r\n    list.push(new CodeSample('Using jQuery inside DNN',\r\n      `This example uses jQuery instead of the $2sxc to do the AJAX call.\r\n      It shows you how to resolve the virtual path for use in other ways.`,\r\n      `\r\nvar endpoint = ${endPointGetter};\r\n$.ajax({\r\n  url:endpoint,\r\n  beforeSend: $.dnnSF(${moduleId}).setModuleHeaders\r\n}).then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, []));\r\n\r\n    // jQuery Single-Liner\r\n    list.push(new CodeSample('Using jQuery as single-liner',\r\n      `The same example as above, just as single-liner so you can test it directly in the F12 console.\r\n      This will only work if you're on a DNN page with this module.`,\r\n      `$.ajax({url: ${endPointGetter}, beforeSend: $.dnnSF(${moduleId}).setModuleHeaders }).then(data => console.log(data))`,\r\n      false, []));\r\n\r\n    // jQuery without setModuleHeaders\r\n    list.push(new CodeSample('Using jQuery and add Context in URL',\r\n      `This example uses jQuery instead of the $2sxc to do the AJAX call.\r\n      But instead of using the DNN Services Framework it adds relevant headers to the url.`,\r\n      `\r\n$.ajax(${endPointGetWithParams}).then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, []));\r\n\r\n    // jQuery Single-Liner without SetModuleHeaders\r\n    list.push(new CodeSample('Using jQuery with url-context as single-liner',\r\n      `The same example as above, just as single-liner so you can test it directly in the F12 console.\r\n      This will work on a DNN page which has jQuery activated. `,\r\n      `$.ajax(${endPointGetWithParams}).then(data => console.log(data))`,\r\n      false, []));\r\n\r\n  } else {\r\n    // jQuery External\r\n    list.push(new CodeSample('Using jQuery in another Site or External',\r\n      `This example uses jQuery and doesn't use $2sxc or the DNN ServicesFramework,\r\n      because they would be either missing, or give wrong context-headers.`,\r\n      `\r\n$.ajax('${path}').then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, [ warningExternal  ]));\r\n\r\n    // jQuery External with Context\r\n    list.push(new CodeSample('Using jQuery with Context in URL',\r\n      `This example uses jQuery and includes a module-context. This is unusual for external access, but may be needed sometime.`,\r\n      `\r\n$.ajax('${pathWithContext}').then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, [ warningExternal ]));\r\n  }\r\n  // return generated snippets\r\n  return list;\r\n}\r\n\r\n/** Snippets for basic Post-Create */\r\nfunction snippetsCreate(scenario: Scenario, path: string, moduleId: number): CodeSample[] {\r\n  const showWarning = !scenario.inSameContext;\r\n  return [\r\n    new CodeSample('Basic Example',\r\n      `This example uses the ModuleId to get the context information.\r\nTo see other ways to get the context and headers, check out the GET examples.\r\nNote that this snippet doesn't use real names of properties to add.`,\r\n      `// get the sxc-controller for this module\r\nvar sxc = $2sxc(${moduleId});\r\n\r\n// The object we'll send to get created. It's just a simple object with properties\r\nvar newThing = {\r\n  property1: 17,\r\n  property2: 'Some Text',\r\n  // related items like tags can be assigned with IDs\r\n  // which you would usually get from somewhere first\r\n  propertyPointingToOtherIds: [74,50203],\r\n};\r\n\r\n// now create it and get the id back\r\nsxc.webApi.post('${path}', newThing)\r\n  .then(data => {\r\n    console.log('Got this ID information: ', data)\r\n  });`,\r\n      false,\r\n      showWarning ? [warningSimpleSampleOnly] : []),\r\n  ];\r\n}\r\n\r\n/** Snippets for basic Post-Update */\r\nfunction snippetsUpdate(scenario: Scenario, path: string, moduleId: number): CodeSample[] {\r\n  const showWarning = !scenario.inSameContext;\r\n  return [\r\n    new CodeSample('Basic Example',\r\n      `This example uses the ModuleId to get the context information.\r\nTo see other ways to get the context and headers, check out the GET examples.\r\nNote that this snippet doesn't use real names of properties to add.`,\r\n      `// get the sxc-controller for this module\r\nvar sxc = $2sxc(${moduleId});\r\n\r\n// The object we'll send to update the data. It's just a simple object with properties\r\nvar updateProperty1And2 = {\r\n  property1: 2742,\r\n  property2: 'Changed Text',\r\n};\r\n\r\n// now update the item\r\nsxc.webApi.post('${path}', updateProperty1And2)\r\n  .then(data => {\r\n    console.log('Update completed', data)\r\n  });`,\r\n      false,\r\n      showWarning ? [warningSimpleSampleOnly] : []),\r\n  ];\r\n}\r\n\r\n/** Snippets for basic Post-Update */\r\nfunction snippetsDelete(scenario: Scenario, path: string, moduleId: number): CodeSample[] {\r\n  const showWarning = !scenario.inSameContext;\r\n  return [\r\n    new CodeSample('Basic Example',\r\n      `This example uses the ModuleId to get the context information.\r\nTo see other ways to get the context and headers, check out the GET examples.\r\nNote that this snippet doesn't use real names of properties to add.`,\r\n      `// get the sxc-controller for this module\r\nvar sxc = $2sxc(${moduleId});\r\n\r\n// delete the item\r\nsxc.webApi.delete('${path}')\r\n  .then(data => {\r\n    console.log('Delete completed', data)\r\n  });`,\r\n      false,\r\n      showWarning ? [warningSimpleSampleOnly] : []),\r\n  ];\r\n}\r\n","\r\nexport * from '../info-box/hint';\r\nexport * from './api-call';\r\nexport * from './code-sample';\r\nexport * from './generate-samples';\r\n\r\n\r\nimport { Hint } from '../info-box/hint';\r\nexport const hint$2sxc = new Hint('tip', `The <code>$2sxc</code> is a helper JS from 2sxc. It's always included for super-users (hosts).\r\nBut if you need normal visitors to use the API, you must request it in your Razor using @Edit.Enable(...).\r\n<a href=\"https://r.2sxc.org/js-2sxc-root\" target=\"_blank\">see docs</a>`);\r\n\r\nexport const warningSimpleSampleOnly = new Hint('warning', `WARNING: We only prepared the basic example running in the same app. You can of course also run this elsewhere,\r\nbut you'll have to compare it with the GET examples to be sure you have the right headers etc. `, '');\r\n\r\nexport const warningExternal = new Hint('alert', 'IMPORTANT: This will only work if you set anonymous permissions on the content-type.');\r\n","<div mat-dialog-title>\r\n  <div class=\"dialog-title-box\">\r\n    <div>{{ dialogData.name }}</div>\r\n    <button mat-icon-button matTooltip=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"dialog-component-content fancy-scrollbar-light\">\r\n  <p class=\"dialog-description\">\r\n    {{ dialogData.body }}\r\n  </p>\r\n\r\n  <p class=\"dialog-description\" *ngIf=\"dialogData.notes\">\r\n    <em>{{ dialogData.notes }}</em>\r\n  </p>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HelpPopupData } from './help-popup.models';\r\n\r\n@Component({\r\n  selector: 'app-help-popup',\r\n  templateUrl: './help-popup.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HelpPopupComponent implements OnInit {\r\n\r\n  constructor(private dialogRef: MatDialogRef<HelpPopupComponent>, @Inject(MAT_DIALOG_DATA) public dialogData: HelpPopupData) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { ActivatedRoute, NavigationEnd, Route, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs/operators';\r\n\r\n// This observable fires when a sub-dialog was openend and closed again\r\nexport function fireOnStartAndWhenSubDialogCloses(\r\n  router: Router,\r\n  route: ActivatedRoute\r\n) {\r\n  return router.events.pipe(\r\n    filter((event) => event instanceof NavigationEnd),\r\n    startWith(!!route.snapshot.firstChild),\r\n    map(() => !!route.snapshot.firstChild),\r\n    pairwise(),\r\n    filter(([prevHadChild, newHasChild]) => prevHadChild && !newHasChild),\r\n    startWith([]) // this ensures it fires once in the beginning\r\n  );\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntitiesService } from '../../content-items/services/entities.service';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { Permission } from '../models/permission.model';\r\nimport { MetadataService } from './metadata.service';\r\n\r\n@Injectable()\r\nexport class PermissionsService {\r\n  constructor(private metadataService: MetadataService, private entitiesService: EntitiesService) { }\r\n\r\n  getAll(targetType: number, keyType: string, key: string) {\r\n    return this.metadataService.getMetadata<Permission[]>(targetType, keyType, key, eavConstants.contentTypes.permissions);\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.entitiesService.delete(eavConstants.contentTypes.permissions, id, false);\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Permission } from '../../models/permission.model';\r\nimport { PermissionsActionsParams } from './permissions-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-permissions-actions',\r\n  templateUrl: './permissions-actions.component.html',\r\n  styleUrls: ['./permissions-actions.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PermissionsActionsComponent implements ICellRendererAngularComp {\r\n  private params: PermissionsActionsParams;\r\n\r\n  agInit(params: PermissionsActionsParams) {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deletePermission() {\r\n    const permission: Permission = this.params.data;\r\n    this.params.onDelete(permission);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Delete\" (click)=\"deletePermission()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","import { AllCommunityModules, CellClickedEvent, GridOptions } from '@ag-grid-community/all-modules';\r\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { filter, map, pairwise, startWith } from 'rxjs/operators';\r\nimport { IdFieldComponent } from '../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { PermissionsActionsComponent } from './ag-grid-components/permissions-actions/permissions-actions.component';\r\nimport { PermissionsActionsParams } from './ag-grid-components/permissions-actions/permissions-actions.models';\r\nimport { Permission } from './models/permission.model';\r\nimport { PermissionsService } from './services/permissions.service';\r\n\r\n@Component({\r\n  selector: 'app-permissions',\r\n  templateUrl: './permissions.component.html',\r\n  styleUrls: ['./permissions.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PermissionsComponent implements OnInit, OnDestroy {\r\n  permissions$ = new BehaviorSubject<Permission[]>(null);\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      idFieldComponent: IdFieldComponent,\r\n      permissionsActionsComponent: PermissionsActionsComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'Id', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter',\r\n        cellRendererParams: {\r\n          tooltipGetter: (paramsData: Permission) => `ID: ${paramsData.Id}\\nGUID: ${paramsData.Guid}`,\r\n        } as IdFieldParams,\r\n      },\r\n      {\r\n        headerName: 'Name', field: 'Title', flex: 2, minWidth: 250, cellClass: 'primary-action highlight',\r\n        sortable: true, sort: 'asc', filter: 'agTextColumnFilter', onCellClicked: this.editPermission.bind(this),\r\n      },\r\n      {\r\n        headerName: 'Identity', field: 'Identity', flex: 2, minWidth: 250, cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter',\r\n      },\r\n      {\r\n        headerName: 'Condition', field: 'Condition', flex: 2, minWidth: 250, cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter',\r\n      },\r\n      {\r\n        headerName: 'Grant', field: 'Grant', width: 70, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'agTextColumnFilter',\r\n      },\r\n      {\r\n        width: 40, cellClass: 'secondary-action no-padding', cellRenderer: 'permissionsActionsComponent', pinned: 'right',\r\n        cellRendererParams: {\r\n          onDelete: this.deletePermission.bind(this),\r\n        } as PermissionsActionsParams,\r\n      },\r\n    ],\r\n  };\r\n\r\n  private subscription = new Subscription();\r\n  private targetType = parseInt(this.route.snapshot.paramMap.get('type'), 10);\r\n  private keyType = this.route.snapshot.paramMap.get('keyType');\r\n  private key = this.route.snapshot.paramMap.get('key');\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<PermissionsComponent>,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private permissionsService: PermissionsService,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchPermissions();\r\n    this.refreshOnChildClosed();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.permissions$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private fetchPermissions() {\r\n    this.permissionsService.getAll(this.targetType, this.keyType, this.key).subscribe(permissions => {\r\n      this.permissions$.next(permissions);\r\n    });\r\n  }\r\n\r\n  editPermission(params: CellClickedEvent) {\r\n    let form: EditForm;\r\n    if (params == null) {\r\n      const target = Object.values(eavConstants.metadata).find(metaValue => metaValue.type === this.targetType)?.target;\r\n      form = {\r\n        items: [{\r\n          ContentTypeName: eavConstants.contentTypes.permissions,\r\n          For: {\r\n            Target: target,\r\n            ...(this.keyType === eavConstants.keyTypes.guid && { Guid: this.key }),\r\n            ...(this.keyType === eavConstants.keyTypes.number && { Number: parseInt(this.key, 10) }),\r\n            ...(this.keyType === eavConstants.keyTypes.string && { String: this.key }),\r\n          }\r\n        }],\r\n      };\r\n    } else {\r\n      const permission: Permission = params.data;\r\n      form = {\r\n        items: [{ EntityId: permission.Id }],\r\n      };\r\n    }\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private deletePermission(permission: Permission) {\r\n    if (!confirm(`Delete '${permission.Title}' (${permission.Id})?`)) { return; }\r\n    this.snackBar.open('Deleting...');\r\n    this.permissionsService.delete(permission.Id).subscribe(() => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.fetchPermissions();\r\n    });\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        startWith(!!this.route.snapshot.firstChild),\r\n        map(() => !!this.route.snapshot.firstChild),\r\n        pairwise(),\r\n        filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n      ).subscribe(() => {\r\n        this.fetchPermissions();\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"nav-component-wrapper\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Permissions</div>\r\n      <button mat-icon-button matTooltip=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <div class=\"grid-wrapper\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"permissions$ | async\" [modules]=\"modules\"\r\n      [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n\r\n    <div class=\"grid-more-actions-box\"></div>\r\n\r\n    <button mat-fab mat-elevation-z24 class=\"grid-fab\" matTooltip=\"Create a new permission\"\r\n      (click)=\"editPermission(null)\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const permissionsDialog: DialogConfig = {\r\n  name: 'SET_PERMISSIONS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { PermissionsComponent } = await import('./permissions.component');\r\n    return PermissionsComponent;\r\n  }\r\n};\r\n","import { Route } from '@angular/router';\r\nimport { eavConstants } from '../shared/constants/eav.constants';\r\n\r\n/**\r\n * Navigation system to access permissions dialogs as sub-dialogs for many use cases\r\n */\r\nexport const GoToPermissions = {\r\n\r\n  go(targetType: number, keyType: string, key: string) {\r\n    return `permissions/${targetType}/${keyType}/${key}`;\r\n  },\r\n\r\n  /** Go to edit permissions for entity */\r\n  goEntity(key: string) {\r\n    return this.go(eavConstants.metadata.entity.type, eavConstants.keyTypes.guid, key);\r\n  },\r\n\r\n  /** Go to edit permissions for content-type. For historic reasons, it's the same as Entity */\r\n  goContentType(key: string) {\r\n    return this.goEntity(key);\r\n  },\r\n\r\n  goAttribute(id: number) {\r\n    return this.go(eavConstants.metadata.attribute.type, eavConstants.keyTypes.number, id);\r\n  },\r\n\r\n  goApp(appId: number) {\r\n    return this.go(eavConstants.metadata.app.type, eavConstants.keyTypes.number, appId);\r\n  },\r\n\r\n  /**\r\n   * The route definition for use in all routing components which can route to this dialog\r\n   */\r\n  route: {\r\n    path: 'permissions/:type/:keyType/:key',\r\n    loadChildren: () => import('./permissions.module').then(m => m.PermissionsModule),\r\n    data: { title: 'Permission' },\r\n  } as Route,\r\n};\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ImportAppResult } from '../../import-app/models/import-app-result.model';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<ImportAppResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp() {\r\n    return this.http.post<ImportAppResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ImportAppResult } from '../models/import-app-result.model';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ? changedName : '');\r\n    return this.http.post<ImportAppResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\n\r\n@Injectable()\r\nexport class ExportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getContentInfo(scope: string) {\r\n    return this.http.get<ContentInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Get'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString(), scope },\r\n    });\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.context.appId.toString()\r\n      + '&zoneId=' + this.context.zoneId.toString()\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n","export type InfoBoxType = 'alert' | 'info' | 'tip' | 'warning';\r\n\r\nexport const infoBoxIconMap: { [name in InfoBoxType]: string } = {\r\n  alert: 'warning',\r\n  info: 'menu_book',\r\n  tip: 'star',\r\n  warning: 'warning',\r\n};\r\n\r\nexport class Hint {\r\n  public icon: string;\r\n\r\n  constructor(public type: InfoBoxType, public message: string, public link = '') {\r\n    this.icon = infoBoxIconMap[type];\r\n  }\r\n}\r\n","\r\nexport * from './app-dialog-config.service';\r\nexport * from './content-types.service';\r\nexport * from './export-app-parts.service';\r\nexport * from './export-app.service';\r\nexport * from './import-app-parts.service';\r\nexport * from './pipelines.service';\r\nexport * from './views.service'\r\nexport * from './web-apis.service';\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { webApiEntityList } from '../../../../../edit/shared/services';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Query } from '../models/query.model';\r\n\r\nconst webApiQueryRoot = 'admin/query/';\r\nconst webApiQueryImport = webApiQueryRoot + 'import';\r\nconst webApiQueryClone = webApiQueryRoot + 'Clone';\r\nconst webApiQueryDelete = webApiQueryRoot + 'Delete';\r\nexport const webApiQueryRun = webApiQueryRoot + 'Run';\r\nexport const webApiQueryDebugStream = webApiQueryRoot + 'DebugStream';\r\nexport const webApiQuerySave = webApiQueryRoot + 'Save';\r\nexport const webApiQueryGet = webApiQueryRoot + 'Get';\r\nexport const webApiQueryDataSources = webApiQueryRoot + 'DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get<Query[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      mergeMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryImport), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { ContentType, WebApi } from '../app-administration/models';\r\n\r\nconst base = 'restapi';\r\n\r\nexport const GoToDevRest = {\r\n  routeData: 'data',\r\n  paramTypeName: 'contentTypeStaticName',\r\n  paramQuery: 'queryGuid',\r\n  paramApiPath: 'webApiPath',\r\n\r\n  goToData(contentType: ContentType) {\r\n    return `${base}/data/${contentType.StaticName}`;\r\n  },\r\n\r\n  goToQuery(queryGuid: string) {\r\n    return `${base}/query/${queryGuid}`;\r\n  },\r\n\r\n  goToWebApi(api: WebApi) {\r\n    return `${base}/custom/${encodeURIComponent(api.path)}`;\r\n  },\r\n\r\n  /**\r\n   * The route definition for use in all routing components which can route to this dialog\r\n   */\r\n  route: {\r\n    path: base,\r\n    loadChildren: () => import('./dev-rest.module').then(m => m.DevRestModule)\r\n  } as Route,\r\n};\r\n","import { AgGridModule } from '@ag-grid-community/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { EntitiesService } from '../content-items/services/entities.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { PermissionsActionsComponent } from './ag-grid-components/permissions-actions/permissions-actions.component';\r\nimport { PermissionsRoutingModule } from './permissions-routing.module';\r\nimport { PermissionsComponent } from './permissions.component';\r\nimport { MetadataService } from './services/metadata.service';\r\nimport { PermissionsService } from './services/permissions.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PermissionsComponent,\r\n    PermissionsActionsComponent,\r\n  ],\r\n  entryComponents: [\r\n    PermissionsComponent,\r\n    PermissionsActionsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PermissionsRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    AgGridModule.withComponents([]),\r\n    MatRippleModule,\r\n    MatSnackBarModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    PermissionsService,\r\n    MetadataService,\r\n    EntitiesService,\r\n  ]\r\n})\r\nexport class PermissionsModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { webApiAppFileCreate, webApiAppFilesAll, webApiExplorer } from '../../../../../edit/shared/services';\r\nimport { Context } from '../../shared/services/context';\r\nimport { WebApi, WebApiDetails } from '../models';\r\n\r\n@Injectable()\r\nexport class WebApisService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<string[]>(this.dnnContext.$2sxc.http.apiUrl(webApiAppFilesAll), {\r\n      params: { appId: this.context.appId.toString(), global: 'false', path: '', mask: '*Controller.cs', withSubfolders: 'true' },\r\n    }).pipe(\r\n      map(paths => {\r\n        const webApis: WebApi[] = paths.map(path => {\r\n          const splitIndex = path.lastIndexOf('/');\r\n          const fileExtIndex = path.lastIndexOf('.');\r\n          const folder = path.substring(0, splitIndex);\r\n          const name = path.substring(splitIndex + 1, fileExtIndex);\r\n          const webApi: WebApi = { path, folder, name };\r\n          return webApi;\r\n        });\r\n        return webApis;\r\n      }),\r\n    );\r\n  }\r\n\r\n  create(name: string) {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiAppFileCreate), {}, {\r\n      params: { appId: this.context.appId.toString(), global: 'false', path: `api/${name}` },\r\n    });\r\n  }\r\n\r\n  details(apiPath: string) {\r\n    return this.http.get<WebApiDetails>(this.dnnContext.$2sxc.http.apiUrl(webApiExplorer), {\r\n      params: { path: apiPath },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AppInfo } from '../models/app-info.model';\r\n\r\n@Injectable()\r\nexport class ExportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAppInfo() {\r\n    return this.http.get<AppInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Statistics'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString() },\r\n    });\r\n  }\r\n\r\n  exportApp(includeContentGroups: boolean, resetAppGuid: boolean) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Export')\r\n      + '?appId=' + this.context.appId\r\n      + '&zoneId=' + this.context.zoneId\r\n      + '&includeContentGroups=' + includeContentGroups\r\n      + '&resetAppGuid=' + resetAppGuid;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportForVersionControl(includeContentGroups: boolean, resetAppGuid: boolean) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'SaveData'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { Component, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, Subscription, Observable, combineLatest } from 'rxjs';\r\nimport { map, share, switchMap } from 'rxjs/operators';\r\nimport { AllScenarios, DevRestBaseTemplateVars, fireOnStartAndWhenSubDialogCloses, Scenario } from '.';\r\nimport { DialogSettings } from '../app-administration/models';\r\nimport { AppDialogConfigService } from '../app-administration/services';\r\nimport { Permission, PermissionsService } from '../permissions';\r\nimport { eavConstants } from '../shared/constants/eav.constants';\r\nimport { Context } from '../shared/services/context';\r\n\r\n@Component({\r\n  selector: 'app-dev-rest-base',\r\n  template: ''\r\n})\r\nexport class DevRestBase<TemplateVarType> implements OnDestroy {\r\n\r\n  /** Template variables for the HTML template */\r\n  public templateVars$: Observable<TemplateVarType>;\r\n\r\n\r\n  /** Subscription Sink */\r\n  subscription = new Subscription();\r\n\r\n  /** List of scenarios */\r\n  scenarios = AllScenarios;\r\n\r\n  /** Currently selected scenario */\r\n  scenario$ = new BehaviorSubject<Scenario>(AllScenarios[0]);\r\n\r\n  permissions$: Observable<Permission[]>;\r\n  dialogSettings$: Observable<DialogSettings>;\r\n\r\n  // Shared Constructor for things all the Dev-REST things will need\r\n  constructor(\r\n    appDialogConfigService: AppDialogConfigService,\r\n    /** Context for this dialog. Used for appId, zoneId, tabId, etc. */\r\n    private context: Context,\r\n    private dialogRef: MatDialogRef<any>,\r\n    /** dnn-sxc-angular context. Used to resolve urls */\r\n    private dnnContext: DnnContext,\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private permissionsService: PermissionsService,\r\n  ) {\r\n\r\n    // Build Dialog Settings Stream\r\n    // Note: this is probably already loaded somewhere, so I'm not sure why we're getting it again\r\n    this.dialogSettings$ = appDialogConfigService.getDialogSettings().pipe(share());\r\n\r\n  }\r\n\r\n  buildPermissionStream(routeTargetName: string) {\r\n    // Build Permissions Stream\r\n    // This is triggered on start and everything a sub-dialog closes\r\n    return combineLatest([\r\n      fireOnStartAndWhenSubDialogCloses(this.router, this.route),\r\n      this.route.paramMap.pipe(map(pm => pm.get(routeTargetName))),\r\n    ]).pipe(\r\n      switchMap(([_, permissionTarget]) => {\r\n        // TODO: 2dm - something looks wrong here, we're getting Entity-metadata for content-type!\r\n        return this.permissionsService.getAll(eavConstants.metadata.entity.type, eavConstants.keyTypes.guid, permissionTarget);\r\n      }),\r\n      share()\r\n    );\r\n  }\r\n\r\n\r\n  rootBasedOnScenario(root: string, scenario: Scenario): string {\r\n    const domainPrefix = document.location.protocol + '//' + document.location.host;\r\n    return scenario.useVirtual\r\n      ? root\r\n      : (scenario.inSameSite ? '' : domainPrefix) + this.dnnContext.$2sxc.http.apiUrl(root);\r\n  }\r\n\r\n  buildBaseTemplateVars(name: string, identity: string, diag: DialogSettings, permissions: Permission[], root: string, scenario: Scenario): DevRestBaseTemplateVars {\r\n    return {\r\n      apiCalls: null,\r\n      name,\r\n      currentScenario: scenario,\r\n      folder: encodeURI(diag.Context.App.Folder),\r\n      moduleId: this.context.moduleId,\r\n      root,\r\n      scenario,\r\n      permissions,\r\n      permissionsHasAnonymous: permissions?.filter(p => p.Condition.indexOf('.Anonymous') > 0).length > 0,\r\n      permissionTarget: identity,\r\n    }\r\n  }\r\n\r\n  changeScenario(scenario: Scenario) {\r\n    this.scenario$.next(scenario);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.scenario$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ImportAppResult } from '../../import-app/models/import-app-result.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViews), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<ImportAppResult>(this.dnnContext.$2sxc.http.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.context.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.dnnContext.$2sxc.http.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.context.appId.toString(), guid }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nconst webApiRoot = 'admin/metadata/get';\r\n\r\n@Injectable()\r\nexport class MetadataService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param typeId metadataOf something. For more info checkout out eavConstants file\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of content type for which we search for permissions. Key is connected with keyType\r\n   * @param contentTypeName name of content type where permissions are stored\r\n   */\r\n  getMetadata<T>(typeId: number, keyType: string, key: string, contentTypeName: string) {\r\n    return this.http.get<T>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        targetType: typeId.toString(),\r\n        keyType,\r\n        key,\r\n        contentType: contentTypeName,\r\n      },\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}