{"version":3,"file":"projects_eav-ui_src_app_apps-management_system-info_system-info_component_ts-projects_eav-ui_-3fbe4a.754c998d9e8533c0.js","mappings":"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","names":["DocsLinkHelperComponent","constructor","this","link","input","label","icon","selectors","inputs","decls","vars","consts","template","rf","ctx","i0","tmp_1_0","undefined","MatIconModule","i1","MatButtonModule","i2","TippyDirective","encapsulation","ctx_r1","feature","isEnabled","_r3","clipboard","copyToClipboard","guid","_r4","dialog","close","_r1","nameId","FeatureDetailsDialogComponent_Conditional_0_Conditional_13_Template","FeatureDetailsDialogComponent_Conditional_0_Conditional_14_Template","FeatureDetailsDialogComponent_Conditional_0_Conditional_26_Template","name","description","mySpecs","showStatus","showGuid","security","Impact","Message","showClose","FeatureDetailsDialogComponent","dialogSpecs","specs","computedObj","transient","ClipboardService","MAT_DIALOG_DATA","FeatureDetailsDialogComponent_Conditional_0_Template","MatCardModule","i3","i4","SafeHtmlPipe","TranslateModule","i5","SxcInsightsService","HttpServiceBase","activatePageLog","duration","getHttp","webApiLogRoot","params","toString","__ngFactoryType__","factory","ɵfac","_r5","info_r3","$implicit","ctx_r3","openSideNavPath","url","_c0","_r2","value","SystemInfoComponent_For_12_Conditional_6_Template","_r8","info_r7","target","SystemInfoComponent_For_36_Conditional_6_Conditional_0_Template","SystemInfoComponent_For_36_Conditional_6_Conditional_1_Template","_r6","SystemInfoComponent_For_36_Conditional_6_Template","SystemInfoComponent_Conditional_119_Conditional_0_Template","duration_r10","errors","pattern","info_r12","SystemInfoComponent_For_135_Conditional_6_Conditional_0_Template","SystemInfoComponent_For_135_Conditional_6_Conditional_1_Template","_r11","SystemInfoComponent_For_135_Conditional_6_Template","SystemInfoComponent","#dialogSettings","#sxcInsightsService","#zoneSvc","#dialogSvc","#dialogRouter","#refresh","snackBar","features","inject","FeaturesService","DialogConfigAppService","ZoneService","DialogService","DialogRoutingService","positiveWholeNumber","loading","signal","languages","computed","getLanguage","systemInfoSet","getSystemInfo","systemInfos","systemInfoSetValue","router","System","EavVersion","Platform","PlatformVersion","Zones","Fingerprint","License","Owner","siteInfos","languagesValue","allLanguages","length","activeLanguages","filter","l","IsEnabled","Site","ZoneId","SiteId","Apps","warningIcon","Messages","WarningsObsolete","WarningsOther","warningInfos","window","$2sxc","http","apiUrl","lsEnabled","FeatureNames","LightSpeed","cspEnabled","ContentSecurityPolicy","ngOnInit","doOnDialogClosed","set","openSiteSettings","openParentAppSettings","openGlobalSettings","partName","getCurrent$","pipe","map","dc","Context","PrimaryApp","take","subscribe","appIdentity","openAppAdministration","AppId","openInsights","open","sideNavPath","includes","navigate","replace","form","pageLogDuration","res","document","activeElement","HTMLElement","blur","resetForm","SystemInfoComponent_For_12_Template","SystemInfoComponent_For_36_Template","SystemInfoComponent_Conditional_61_Template","SystemInfoComponent_Conditional_76_Template","activateLogForm_r9","$event","SystemInfoComponent_Conditional_119_Template","SystemInfoComponent_For_135_Template","touched","valid","RouterLink","FormsModule","MatFormFieldModule","i6","MatInputModule","i7","RouterOutlet","FeatureTextInfoComponent","FieldHintComponent","FeatureInfoDialogComponent","#featureDetailSvc","dialogData","route","FeatureDetailService","featureId","snapshot","data","featureDetails","getFeatureDetail","FeatureInfoDialogComponent_Conditional_0_Template","tmp_0_0","AppSyncWithSiteFiles","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","PermissionsByLanguage","ContentTypeFieldsReuseDefinitions","AppExportAssetsAdvanced","PickerUiCheckbox","PickerUiRadio","PickerSourceCsv","PickerSourceAppAssets","PickerFormulas","PickerUiMoreInfo","openDialog","FeatureComponentBase","super","asInfo","ngContentSelectors","FeatureTextInfoComponent_Conditional_0_Template","show","styles","webApiFeatureDetails","getSignal","getFeatureDetails","nameIds","featureList","xx","update","prev","getHttpApiUrl","#matDialog","#viewContainerRef","#changeDetectorRef","#featuresService","featureNameId","required","showIf","MatDialog","ViewContainerRef","ChangeDetectorRef","getCurrent","feat","openFeatureDialog","viewContainerRef","changeDetectorRef","autoFocus","width","markForCheck","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","isError","isShort","toggleIsShort","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c1","tmp_2_0","NgClass","NgTemplateOutlet","str","el","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","sanitizer","transform","html","bypassSecurityTrustHtml","pure","logSpecs","ServiceBase","log","classLog","getParam","key","paramMap","get","getParams","keys","reduce","acc","getQueryParam","queryParamMap","getQueryParams","state","getCurrentNavigation","extras","callback","fnIf","subscriptions","add","childDialogClosed$","end","urlSubRoute","tree","createUrlTree","relativeTo","serializeUrl","navPath","navRelative","commands","events","event","NavigationEnd","startWith","firstChild","pairwise","hadChildBefore","hasChildNow","Subscription","ngOnDestroy","destroy","unsubscribe"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/admin-shared/docs-link-helper/docs-link-helper.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.html","./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.ts","./projects/eav-ui/src/app/apps-management/services/sxc-insights.service.ts","./projects/eav-ui/src/app/apps-management/system-info/system-info.component.html","./projects/eav-ui/src/app/apps-management/system-info/system-info.component.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.html","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.ts","./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/helpers/copy-to-clipboard.helper.ts","./projects/eav-ui/src/app/shared/pipes/safe-html.pipe.ts","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts","./projects/eav-ui/src/app/shared/services/service-base.ts"],"sourcesContent":["import { Component, input } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n    selector: 'app-docs-link-helper',\r\n    imports: [\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        TippyDirective,\r\n    ],\r\n    template: `\r\n  <a mat-button class=\"eav-button__with-icon\" href=\"{{ link() }}\" target=\"_blank\" tippy=\"online documentation\">\r\n    <mat-icon mat-icon class=\"eav-icon\">{{ icon() ?? 'menu_book' }}</mat-icon>\r\n    <span>{{ label() }}</span>\r\n  </a>\r\n`\r\n})\r\nexport class DocsLinkHelperComponent {\r\n  link = input<string>();   \r\n  label = input<string>();\r\n  icon = input<string>();\r\n}\r\n","@if (feature()) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ feature().name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"feature().description | safeHtml\"></p>\r\n      <!-- Name ID -->\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">ID:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span (click)=\"clipboard.copyToClipboard(feature().nameId)\">{{ feature().nameId }}</span>\r\n        </div>\r\n      </div>\r\n      <!-- Status -->\r\n      @if (mySpecs().showStatus) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">{{ 'Features.Status' | translate }}:</div>\r\n          <div class=\"eav-info-row__value\">\r\n            <span>{{ (feature().isEnabled ? 'Features.Active' : 'Features.NotActive') | translate }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n      <!-- GUID -->\r\n      @if (mySpecs().showGuid) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">GUID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span (click)=\"clipboard.copyToClipboard(feature().guid)\">{{ feature().guid }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n      <!-- Security Rating -->\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">Security Rating:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ feature().security.Impact + ': ' + feature().security.Message }}</span>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      <a [href]=\"feature().link\" target=\"_blank\" mat-raised-button class=\"eav-card-action-button\" color=\"accent\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        Find out more\r\n      </a>\r\n      @if (mySpecs().showClose != false) {\r\n        <button mat-raised-button class=\"eav-card-action-button\" (click)=\"dialog.close()\">Close</button>\r\n      }\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}\r\n","import { Component, Inject, input, Optional } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { transient } from '../../../../../../core/transient';\r\nimport { SafeHtmlPipe } from '../../../shared/pipes/safe-html.pipe';\r\nimport { ClipboardService } from '../../../shared/services/clipboard.service';\r\nimport { computedObj } from '../../../shared/signals/signal.utilities';\r\nimport { FeatureDetailsDialogData } from './feature-details-dialog.models';\r\n\r\n@Component({\r\n    selector: 'app-feature-details-dialog',\r\n    templateUrl: './feature-details-dialog.component.html',\r\n    imports: [\r\n        MatCardModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        SafeHtmlPipe,\r\n        TranslateModule,\r\n    ]\r\n})\r\nexport class FeatureDetailsDialogComponent {\r\n  specs = input<FeatureDetailsDialogData>();\r\n\r\n  constructor(\r\n    @Optional() @Inject(MAT_DIALOG_DATA) private dialogSpecs: FeatureDetailsDialogData,\r\n    protected dialog: MatDialogRef<FeatureDetailsDialogComponent>,\r\n  ) { }\r\n\r\n  protected mySpecs = computedObj('mySpecs', () =>  this.specs() ?? this.dialogSpecs );\r\n  protected feature = computedObj('feature', () => this.mySpecs()?.feature);\r\n  protected clipboard = transient(ClipboardService);\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiLogRoot = 'sys/log/';\r\n\r\n@Injectable()\r\nexport class SxcInsightsService extends HttpServiceBase {\r\n\r\n  activatePageLog(duration: number) {\r\n    return this.getHttp<string>(webApiLogRoot + 'EnableDebug', {\r\n      params: { duration: duration.toString() }\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-cards-box\">\r\n  <!-- Platform Info -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">settings_applications</mat-icon>\r\n      </div>\r\n      <mat-card-title>Platform</mat-card-title>\r\n      <mat-card-subtitle>What you are running</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      @for (info of systemInfos(); track info) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">{{ info.label }}:</div>\r\n          <div class=\"eav-info-row__value\">\r\n            <span class=\"eav-info-row__value__span eav-click\" [tippy]=\"info.value\" (click)=\"clipboard.copyToClipboard(info.value)\">{{\r\n              info.value\r\n            }}</span>\r\n            @if (info.link) {\r\n              <a class=\"eav-info-row__link\" [routerLink]=\"['/']\" (click)=\"openSideNavPath(info.link.url)\">\r\n                {{ info.link.label }}\r\n              </a>\r\n            }\r\n          </div>\r\n        </div>\r\n      }\r\n      <h4>Global Settings</h4>\r\n      <p>This includes both pre-defined SystemSettings as well as custom Settings. It will affect the entire Installation.</p>\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"start\">\r\n      <app-docs-link-helper [link]=\"'https://go.2sxc.org/settings'\" [label]=\"\" [icon]=\"\"></app-docs-link-helper>\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"openGlobalSettings()\">\r\n        <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n        <span>Open Global Settings</span>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n  <!-- Site Info -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">public</mat-icon>\r\n      </div>\r\n      <mat-card-title>This Site</mat-card-title>\r\n      <mat-card-subtitle>The current Site you're on</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      @for (info of siteInfos(); track info) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">{{ info.label }}:</div>\r\n          <div class=\"eav-info-row__value\">\r\n            <span [tippy]=\"info.value\" (click)=\"clipboard.copyToClipboard(info.value)\">{{ info.value }}</span>\r\n            @if (info.link) {\r\n              @if (info.link.target === 'angular') {\r\n                <a [routerLink]=\"['/']\" class=\"eav-info-row__link\" (click)=\"openSideNavPath(info.link.url)\">\r\n                  {{ info.link.label }}\r\n                </a>\r\n              }\r\n              @if (info.link.target !== 'angular') {\r\n                <a class=\"eav-info-row__link\" [href]=\"info.link.url\" [target]=\"info.link.target\">{{ info.link.label }}</a>\r\n              }\r\n            }\r\n          </div>\r\n        </div>\r\n      }\r\n      <div class=\"card-content-separator\"></div>\r\n      <h4>Site Settings</h4>\r\n      <p>This includes both pre-defined SystemSettings as well as custom Settings. It will affect the entire Site / Portal.</p>\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"start\">\r\n      <app-docs-link-helper [link]=\"'https://go.2sxc.org/settings'\" [label]=\"\" [icon]=\"\"></app-docs-link-helper>\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"openSiteSettings()\">\r\n        <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n        <span>Open Site Settings</span>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n  <!-- Performance / Lightspeed -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">bolt</mat-icon>\r\n      </div>\r\n      <mat-card-title>Performance</mat-card-title>\r\n      <mat-card-subtitle>Performance Enhancements and Caching</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <app-feature-text-info [featureNameId]=\"'LightSpeedOutputCache'\" [asInfo]=\"true\"></app-feature-text-info>\r\n      @if (lsEnabled()) {\r\n        <div>LightSpeed is enabled. Configure it in each site/app as you need.</div>\r\n      }\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"start\">\r\n      <app-docs-link-helper [link]=\"'https://go.2sxc.org/lightspeed'\" [label]=\"\" [icon]=\"\"></app-docs-link-helper>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n  <!-- Security -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">local_police</mat-icon>\r\n      </div>\r\n      <mat-card-title>Security</mat-card-title>\r\n      <mat-card-subtitle>System Security Features</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <app-feature-text-info [featureNameId]=\"'ContentSecurityPolicy'\" [asInfo]=\"true\"></app-feature-text-info>\r\n      @if (cspEnabled()) {\r\n        <div>ContentSecurityPolicy is enabled. Configure it in each site/app as you need.</div>\r\n      }\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"start\">\r\n      <app-docs-link-helper [link]=\"'https://go.2sxc.org/csp'\" [label]=\"\" [icon]=\"\"></app-docs-link-helper>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n  <!-- Insights -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">speed</mat-icon>\r\n      </div>\r\n      <mat-card-title>2sxc Insights</mat-card-title>\r\n      <mat-card-subtitle>See what's happening under the hood</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <h4>2sxc Insights for Super Users</h4>\r\n      <p>\r\n        This is to access a special section to see what is really in the server memory. It's intended for extensive debugging - see also\r\n        <a href=\"https://2sxc.org/en/blog/post/using-2sxc-insights\" target=\"_blank\">this blog post</a>.\r\n      </p>\r\n      <div align=\"start\">\r\n        <app-docs-link-helper [link]=\"'https://go.2sxc.org/insights'\" [label]=\"\" [icon]=\"\"></app-docs-link-helper>\r\n        <button mat-button class=\"eav-button__with-icon\" (click)=\"openInsights()\">\r\n          <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n          <span>Open 2sxc Insights</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"card-content-separator\"></div>\r\n      <h4>Activate Page Level Logging</h4>\r\n      <form #activateLogForm=\"ngForm\" class=\"activate-log-form\" (ngSubmit)=\"activatePageLog(activateLogForm)\">\r\n        <div>\r\n          This will place insights-logs in the HTML of the user output for users with <code>?debug=true</code> in the url. It can only be\r\n          activated for short periods of time.\r\n        </div>\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Duration in Minutes</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"number\"\r\n            min=\"0\"\r\n            required\r\n            [pattern]=\"positiveWholeNumber\"\r\n            [(ngModel)]=\"pageLogDuration\"\r\n            name=\"Duration\"\r\n            #duration=\"ngModel\"\r\n            [disabled]=\"loading()\"\r\n          />\r\n        </mat-form-field>\r\n        @if (duration.touched && duration.errors) {\r\n          @if (duration.errors.pattern) {\r\n            <app-field-hint [isError]=\"true\"> Only positive whole numbers </app-field-hint>\r\n          }\r\n        }\r\n      </form>\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"end\">\r\n      <button mat-raised-button type=\"submit\" color=\"accent\" [disabled]=\"!activateLogForm.valid || loading()\">Activate</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n  <!-- Warnings -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">{{ warningIcon() }}</mat-icon>\r\n      </div>\r\n      <mat-card-title>Warnings</mat-card-title>\r\n      <mat-card-subtitle>System and Code Warnings</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      @for (info of warningInfos(); track info) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label eav-long\">{{ info.label }}:</div>\r\n          <div class=\"eav-info-row__value\">\r\n            <span [tippy]=\"info.value\" (click)=\"clipboard.copyToClipboard(info.value)\">{{ info.value }}</span>\r\n            @if (info.link) {\r\n              @if (info.link.target === 'angular') {\r\n                <a class=\"eav-info-row__link\" [routerLink]=\"info.link.url\"> {{ info.link.label }}</a>\r\n              }\r\n              @if (info.link.target !== 'angular') {\r\n                <a class=\"eav-info-row__link\" [href]=\"info.link.url\" [target]=\"info.link.target\">{{ info.link.label }}</a>\r\n              }\r\n            }\r\n          </div>\r\n        </div>\r\n      }\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n  </mat-card>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n","import { Component, OnInit, computed, inject, signal } from '@angular/core';\r\nimport { FormsModule, NgForm } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterLink, RouterOutlet } from '@angular/router';\r\nimport { map, take } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { DocsLinkHelperComponent } from '../../admin-shared/docs-link-helper/docs-link-helper.component';\r\nimport { DialogConfigAppService } from '../../app-administration/services/dialog-config-app.service';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { FeatureTextInfoComponent } from '../../features/feature-text-info/feature-text-info.component';\r\nimport { FeaturesService } from '../../features/features.service';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { ClipboardService } from '../../shared/services/clipboard.service';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\nimport { SxcInsightsService } from '../services/sxc-insights.service';\r\nimport { ZoneService } from '../services/zone.service';\r\nimport { InfoTemplate } from './system-info.models';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n    selector: 'app-system-info',\r\n    templateUrl: './system-info.component.html',\r\n    imports: [\r\n        MatCardModule,\r\n        MatIconModule,\r\n        RouterLink,\r\n        MatButtonModule,\r\n        FormsModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        RouterOutlet,\r\n        FeatureTextInfoComponent,\r\n        FieldHintComponent,\r\n        TippyDirective,\r\n        DocsLinkHelperComponent,\r\n    ]\r\n})\r\nexport class SystemInfoComponent implements OnInit {\r\n\r\n  public features = inject(FeaturesService);\r\n\r\n  #dialogSettings = transient(DialogConfigAppService);\r\n  #sxcInsightsService = transient(SxcInsightsService);\r\n  #zoneSvc = transient(ZoneService);\r\n  #dialogSvc = transient(DialogService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  pageLogDuration: number;\r\n  positiveWholeNumber = /^[1-9][0-9]*$/;\r\n\r\n  loading = signal(false);\r\n  #refresh = signal(0);\r\n\r\n  languages = computed(() => {\r\n    const r = this.#refresh();\r\n    return this.#zoneSvc.getLanguage(undefined);\r\n  })\r\n\r\n  systemInfoSet = computed(() => {\r\n    const r = this.#refresh();\r\n    return this.#zoneSvc.getSystemInfo(undefined);\r\n  })\r\n\r\n  systemInfos = computed(() => {\r\n    const systemInfoSetValue = this.systemInfoSet()();\r\n    if (systemInfoSetValue == null) return;\r\n    const url = this.#dialogRouter.router.url + '/' + \"registration\";\r\n    const info: InfoTemplate[] = [\r\n      { label: 'CMS', value: `2sxc v.${systemInfoSetValue.System.EavVersion}` },\r\n      { label: 'Platform', value: `${systemInfoSetValue.System.Platform} v.${systemInfoSetValue.System.PlatformVersion}` },\r\n      { label: 'Zones', value: systemInfoSetValue.System.Zones.toString() },\r\n      { label: 'Fingerprint', value: systemInfoSetValue.System.Fingerprint },\r\n      {\r\n        label: 'Registered to',\r\n        value: systemInfoSetValue.License.Owner || '(unregistered)',\r\n        link: systemInfoSetValue.License.Owner\r\n          ? {\r\n            url,\r\n            label: 'manage',\r\n            target: 'angular',\r\n          }\r\n          : {\r\n            url,\r\n            label: 'register',\r\n            target: 'angular',\r\n          },\r\n      },\r\n    ];\r\n    return info;\r\n  });\r\n\r\n  siteInfos = computed(() => {\r\n    const systemInfoSetValue = this.systemInfoSet()();\r\n    const languagesValue = this.languages()();\r\n\r\n    if (systemInfoSetValue == null || languagesValue == null) return;\r\n\r\n    const allLanguages = languagesValue.length;\r\n    const activeLanguages = languagesValue.filter(l => l.IsEnabled).length;\r\n\r\n    const info: InfoTemplate[] = [\r\n      { label: 'Zone', value: systemInfoSetValue.Site.ZoneId.toString() },\r\n      { label: 'Site', value: systemInfoSetValue.Site.SiteId.toString() },\r\n      {\r\n        label: 'Languages',\r\n        value: `${activeLanguages}/${allLanguages}`,\r\n        link: {\r\n          url: 'languages',\r\n          label: 'manage',\r\n          target: 'angular',\r\n        },\r\n      },\r\n      {\r\n        label: 'Apps',\r\n        value: systemInfoSetValue.Site.Apps.toString(),\r\n        link: {\r\n          url: 'list',\r\n          label: 'manage',\r\n          target: 'angular',\r\n        },\r\n      },\r\n    ];\r\n\r\n    return info;\r\n  });\r\n\r\n  warningIcon = computed(() => {\r\n    const systemInfoSetValue = this.systemInfoSet()();\r\n    if (systemInfoSetValue == null) return undefined;\r\n    if (systemInfoSetValue.Messages.WarningsObsolete || systemInfoSetValue.Messages.WarningsOther) {\r\n      return 'warning';\r\n    }\r\n    return 'check';\r\n  });\r\n\r\n  warningInfos = computed(() => {\r\n    const systemInfoSetValue = this.systemInfoSet()();\r\n    if (systemInfoSetValue == null) return undefined;\r\n\r\n    const info: InfoTemplate[] = [\r\n      {\r\n        label: 'Warnings Obsolete',\r\n        value: systemInfoSetValue.Messages.WarningsObsolete.toString(),\r\n        link: !systemInfoSetValue.Messages.WarningsObsolete\r\n          ? undefined\r\n          : {\r\n            url: window.$2sxc.http.apiUrl('sys/insights/logs?key=warnings-obsolete'),\r\n            label: 'review',\r\n            target: '_blank',\r\n          },\r\n      },\r\n      {\r\n        label: 'Warnings Other',\r\n        value: systemInfoSetValue.Messages.WarningsOther.toString(),\r\n        link: !systemInfoSetValue.Messages.WarningsOther\r\n          ? undefined\r\n          : {\r\n            url: window.$2sxc.http.apiUrl('sys/insights/logs'),\r\n            label: 'review',\r\n            target: '_blank',\r\n          },\r\n      },\r\n    ];\r\n    return info;\r\n  });\r\n\r\n  protected lsEnabled = this.features.isEnabled[FeatureNames.LightSpeed];\r\n  protected cspEnabled = this.features.isEnabled[FeatureNames.ContentSecurityPolicy];\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  protected clipboard = transient(ClipboardService);\r\n\r\n  ngOnInit(): void {\r\n    this.#dialogRouter.doOnDialogClosed(() => {\r\n      this.#refresh.set(this.#refresh() + 1);\r\n    });\r\n  }\r\n\r\n  openSiteSettings(): void {\r\n    this.openParentAppSettings(\"Site\");\r\n  }\r\n\r\n  openGlobalSettings(): void {\r\n    this.openParentAppSettings(\"System\");\r\n  }\r\n\r\n  openParentAppSettings(partName: \"System\" | \"Site\"): void {\r\n    this.#dialogSettings.getCurrent$()\r\n      .pipe(map(dc => dc?.Context[partName].PrimaryApp), take(1))\r\n      .subscribe(appIdentity => {\r\n        this.#dialogSvc.openAppAdministration(appIdentity.ZoneId, appIdentity.AppId, 'app');\r\n      })\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/help'), '_blank');\r\n  }\r\n\r\n\r\n  openSideNavPath(sideNavPath: string): void {\r\n\r\n    // Url are /2/apps/system/registration, sideNavPath are only the last part of the url\r\n    if (sideNavPath.includes('registration'))\r\n      sideNavPath = 'registration';\r\n\r\n    const router = this.#dialogRouter.router;\r\n    router.navigate([router.url.replace('system', '') + sideNavPath]);\r\n  }\r\n\r\n  // TODO: 2dg new with Signals\r\n  activatePageLog(form: NgForm) {\r\n    this.loading.set(true);\r\n    this.snackBar.open('Activating...');\r\n    this.#sxcInsightsService.activatePageLog(this.pageLogDuration).subscribe(res => {\r\n      this.loading.set(false);\r\n      this.snackBar.open(res, null, { duration: 4000 });\r\n    });\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n    form.resetForm();\r\n  }\r\n\r\n}\r\n","@if (featureDetails(); as feature) {\r\n  <app-feature-details-dialog [specs]=\"{ feature: feature, showGuid: false, showStatus: true, showClose: true }\"></app-feature-details-dialog>\r\n}\r\n","import { Component, Inject, OnInit, signal } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { transient } from \"projects/core\";\r\nimport { FeatureDetailsDialogComponent } from \"../../apps-management/licence-info/feature-details-dialog/feature-details-dialog.component\";\r\nimport { ClipboardService } from \"../../shared/services/clipboard.service\";\r\nimport { FeatureDetailService } from \"../services/feature-detail.service\";\r\n\r\n@Component({\r\n    selector: 'app-feature-info-dialog',\r\n    templateUrl: './feature-info-dialog.component.html',\r\n    imports: [\r\n        FeatureDetailsDialogComponent\r\n    ]\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  #featureDetailSvc = transient(FeatureDetailService);\r\n  featureId = signal<string>('');\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    protected dialog: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.featureId.set(this.route.snapshot.data['featureId'] || this.dialogData || '');\r\n    this.featureDetails = this.#featureDetailSvc.getFeatureDetail(this.featureId());\r\n  }\r\n\r\n  protected featureDetails: any;\r\n  protected clipboard = transient(ClipboardService);\r\n}\r\n","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  ContentTypeFieldsReuseDefinitions: 'ContentTypeFieldsReuseDefinitions',\r\n  AppExportAssetsAdvanced: 'AppExportAssetsAdvanced',\r\n\r\n  // Picker features\r\n  PickerUiCheckbox: 'PickerUiCheckbox',\r\n  PickerUiRadio: 'PickerUiRadio',\r\n  PickerSourceCsv: 'PickerSourceCsv',\r\n  PickerSourceAppAssets: 'PickerSourceAppAssets',\r\n  PickerFormulas: 'PickerFormulas',\r\n  PickerUiMoreInfo: 'PickerUiMoreInfo',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","@if (show()) {\r\n  <div class=\"feature-text-info\" (click)=\"openDialog()\" [tippy]=\"'Features.Tooltip' | translate: feature()\">\r\n    <!-- Icon column -->\r\n    <mat-icon class=\"icon icon-{{icon()}}\">{{ icon() }}</mat-icon>\r\n    <!-- Text column -->\r\n    <div class=\"feature-text-info-content\">\r\n      <div class=\"feature-text-info-title\">{{ 'Features.FeatureNotActivated' | translate }}</div>\r\n      <div class=\"feature-text-info-subtitle\">{{ 'Features.ClickToFindOutMore' | translate }}</div>\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n}\r\n","import { Component, input } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { computedObj } from '../../shared/signals/signal.utilities';\r\nimport { FeatureComponentBase } from '../shared/base-feature.component';\r\n\r\n@Component({\r\n    selector: 'app-feature-text-info',\r\n    templateUrl: './feature-text-info.component.html',\r\n    styleUrls: ['./feature-text-info.component.scss'],\r\n    imports: [\r\n        MatIconModule,\r\n        TranslateModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class FeatureTextInfoComponent extends FeatureComponentBase {\r\n  asInfo = input<boolean>(false);\r\n\r\n  constructor() { super(); }\r\n\r\n  icon = computedObj('icon', () => this.asInfo() ? 'info' : 'warning');\r\n}\r\n","import { Injectable, signal, Signal } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Feature } from '../models';\r\n\r\nconst webApiFeatureDetails = \"admin/feature/details\";\r\n\r\n@Injectable()\r\nexport class FeatureDetailService extends HttpServiceBase {\r\n\r\n  getFeatureDetail(nameId: string): Signal<Feature> {\r\n    return this.getSignal<Feature>(webApiFeatureDetails, {\r\n      params: { nameId }\r\n    });\r\n  }\r\n\r\n  getFeatureDetails(nameIds: string[]): Signal<Feature[]> {\r\n    const featureList = signal<Feature[]>([]);\r\n    for (const nameId of nameIds) {\r\n      this.xx(nameId).subscribe(feature => {\r\n        featureList.update(prev => [...prev, feature]);\r\n      });\r\n    }\r\n    return featureList;\r\n  }\r\n\r\n  // TODO: Daniel fragen, getFeatureDetails(nameIds: string[]) ist nicht korrekt\r\n  // getFeatureDetails(nameIds: string[]): Signal<Feature[]> {\r\n  //   console.log('getFeatureDetails', nameIds);\r\n  //   const featureList = signal<Feature[]>([]);\r\n  //   for (const nameId of nameIds) {\r\n  //   console.log('getFeatureDetails', nameId);\r\n\r\n\r\n  //     const x = this.getFeatureDetail(nameId) ;\r\n  //     featureList.update(prev => [...prev, x()]);\r\n  //   }\r\n  //   return featureList;\r\n  // }\r\n\r\n  // Remove later\r\n  xx(nameId: string): Observable<Feature> {\r\n    return this.getHttpApiUrl<Feature>(webApiFeatureDetails, {\r\n      params: { nameId }\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Directive, ViewContainerRef, inject, input } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { computedObj } from '../../shared/signals/signal.utilities';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { FeaturesService } from '../features.service';\r\n\r\n/**\r\n * Base component for various UI components which inform that a feature is not enabled.\r\n * It's meant to show the indicator/warning, and open a dialog with more information about the feature.\r\n */\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n\r\n  /** Feature NameId to check */\r\n  featureNameId = input.required<string>();\r\n\r\n  /** When to show it - typically when it is _not_ enabled (default) */\r\n  showIf = input<boolean>(false);\r\n\r\n  #matDialog = inject(MatDialog);\r\n  #viewContainerRef = inject(ViewContainerRef);\r\n  #changeDetectorRef = inject(ChangeDetectorRef);\r\n  #featuresService = inject(FeaturesService);\r\n\r\n  constructor() { }\r\n\r\n  feature = computedObj('feature', () => this.#featuresService.getCurrent(this.featureNameId()));\r\n\r\n  show = computedObj('show', () => {\r\n    const feat = this.feature();\r\n    if (feat == null) return false;\r\n    return this.showIf() == (feat?.isEnabled ?? false);\r\n  })\r\n\r\n  openDialog() {\r\n    openFeatureDialog(this.#matDialog, this.featureNameId(), this.#viewContainerRef, this.#changeDetectorRef);\r\n  }\r\n}\r\n\r\nexport function openFeatureDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n  dialog.open(FeatureInfoDialogComponent, {\r\n    autoFocus: false,\r\n    data: featureId,\r\n    viewContainerRef: viewContainerRef,\r\n    width: '400px',\r\n  });\r\n\r\n  changeDetectorRef?.markForCheck();\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError()) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n    selector: 'app-field-hint',\r\n    templateUrl: './field-hint.component.html',\r\n    styleUrls: ['./field-hint.component.scss'],\r\n    imports: [\r\n        MatFormFieldModule,\r\n        NgClass,\r\n        NgTemplateOutlet\r\n    ]\r\n})\r\nexport class FieldHintComponent {\r\n  isError = input<boolean>(false);\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safeHtml',\r\n})\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { classLog } from '../logging';\r\nimport { ServiceBase } from '../services/service-base';\r\n\r\nconst logSpecs = {\r\n  doOnDialogClosed: true,\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase {\r\n\r\n  log = classLog({ DialogRoutingService }, logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) { super(); }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  getParam(key: string): string {\r\n    return this.route.snapshot.paramMap.get(key);\r\n  }\r\n\r\n  getParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const paramMap = this.route.snapshot.paramMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = paramMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  getQueryParam(key: string): string {\r\n    return this.route.snapshot.queryParamMap.get(key);\r\n  }\r\n\r\n  getQueryParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const queryParamMap = this.route.snapshot.queryParamMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = queryParamMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe(() => callback())\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Get the URL for a sub-route of the current route.\r\n   */\r\n  public urlSubRoute(params: string) {\r\n    const tree = this.router.createUrlTree([params], { relativeTo: this.route });\r\n    const routeUrl = this.router.serializeUrl(tree);\r\n    return routeUrl;\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}