{"version":3,"file":"projects_eav-ui_src_app_apps-management_add-app-from-folder_add-app-from-folder_component_ts--ecd9e6.js","mappings":"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","sources":["./projects/eav-ui/src/app/apps-management/add-app-from-folder/add-app-from-folder.component.ts","./projects/eav-ui/src/app/apps-management/add-app-from-folder/add-app-from-folder.component.html","./projects/eav-ui/src/app/apps-management/add-app-from-folder/app-name-show/app-name-show.component.ts","./projects/eav-ui/src/app/apps-management/add-app-from-folder/app-name-show/app-name-show.component.html","./projects/eav-ui/src/app/apps-management/add-app-from-folder/checkbox-cell/checkbox-cell.component.ts","./projects/eav-ui/src/app/apps-management/add-app-from-folder/checkbox-cell/checkbox-cell.component.html","./projects/eav-ui/src/app/core/transient.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts"],"sourcesContent":["import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, HostBinding, OnDestroy, OnInit, inject } from \"@angular/core\";\r\nimport { MatDialogRef, MatDialogActions } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { catchError, combineLatest, map, Observable, of, share, startWith, Subject, switchMap } from \"rxjs\";\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { BaseComponent } from '../../shared/components/base.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from \"../../shared/constants/default-grid-options.constants\";\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { PendingApp } from \"../models/app.model\";\r\nimport { AppsListService } from \"../services/apps-list.service\";\r\nimport { AppNameShowComponent } from './app-name-show/app-name-show.component';\r\nimport { CheckboxCellComponent } from './checkbox-cell/checkbox-cell.component';\r\nimport { CheckboxCellParams } from './checkbox-cell/checkbox-cell.model';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FeatureTextInfoComponent } from '../../features/feature-text-info/feature-text-info.component';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { transient } from '../../core';\r\n\r\n@Component({\r\n  selector: 'app-add-app-from-folder',\r\n  templateUrl: './add-app-from-folder.component.html',\r\n  styleUrls: ['./add-app-from-folder.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogActions,\r\n    MatButtonModule,\r\n    AsyncPipe,\r\n    FeatureTextInfoComponent,\r\n    SxcGridModule,\r\n  ],\r\n})\r\nexport class AddAppFromFolderComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  gridOptions = this.buildGridOptions();\r\n  pendingApps: PendingApp[] = [];\r\n  installing: boolean = false;\r\n\r\n  private refreshApps$ = new Subject<void>();\r\n\r\n  viewModel$: Observable<AddAppFromFolderViewModel>;\r\n\r\n  public features: FeaturesService = inject(FeaturesService);\r\n  private isAddFromFolderEnabled = this.features.isEnabled(FeatureNames.AppSyncWithSiteFiles);\r\n  private appsListService = transient(AppsListService);\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AddAppFromFolderComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.viewModel$ = combineLatest([\r\n      this.refreshApps$.pipe(\r\n        startWith(undefined),\r\n        switchMap(() => this.appsListService.getPendingApps().pipe(catchError(() => of(undefined)))),\r\n        share()\r\n      )\r\n    ]).pipe(\r\n      map(([pendingApps]) => ({ pendingApps })),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.refreshApps$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onChange(app: PendingApp, enabled: boolean) {\r\n    if (enabled)\r\n      this.pendingApps.push(app);\r\n    else\r\n      this.pendingApps.splice(this.pendingApps.indexOf(app), 1);\r\n  }\r\n\r\n  install(): void {\r\n    this.installing = true;\r\n    this.snackBar.open('Installing', undefined, { duration: 2000 });\r\n    this.appsListService.installPendingApps(this.pendingApps).subscribe({\r\n      error: () => {\r\n        this.installing = false;\r\n        this.snackBar.open('Failed to install app. Please check console for more information', undefined, { duration: 3000 });\r\n      },\r\n      next: () => {\r\n        this.installing = false;\r\n        this.snackBar.open('Installed app', undefined, { duration: 2000 });\r\n        this.closeDialog();\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          field: '',\r\n          width: 40,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          cellRenderer: CheckboxCellComponent,\r\n          cellRendererParams: (() => {\r\n            const params: CheckboxCellParams = {\r\n              isDisabled: !this.isAddFromFolderEnabled,\r\n              onChange: (app, enabled) => this.onChange(app, enabled),\r\n            };\r\n            return params;\r\n          }),\r\n        },\r\n        {\r\n          field: 'Name',\r\n          flex: 1,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          sort: 'asc',\r\n          filter: 'agTextColumnFilter',\r\n          cellRenderer: AppNameShowComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<PendingApp> = {\r\n              tooltipGetter: (pendingApp) => `Server folder: ${pendingApp.ServerFolder}\\nFolder: ${pendingApp.Folder}\\nVersion: ${pendingApp.Version}\\nDescription: ${pendingApp.Description}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ]\r\n    }\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface AddAppFromFolderViewModel {\r\n  pendingApps: PendingApp[];\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">Add App from Folder</div>\r\n    </div>\r\n    <div class=\"eav-dialog-content\">\r\n      <app-feature-text-info [featureNameId]=\"'AppSyncWithSiteFiles'\"></app-feature-text-info>\r\n      <p>\r\n        Select an app from the apps-folder which has been copied there (or git-cloned) but not installed yet.\r\n      </p>\r\n      @if (vm.pendingApps?.length == 0) {\r\n        <p>\r\n          Nothing to show. All apps in the 2sxc folder are already installed.\r\n        </p>\r\n      }\r\n      @if (vm.pendingApps?.length > 0) {\r\n        <div>\r\n          <ag-grid-angular class=\"ag-theme-material eav-grid\" [rowData]=\"vm.pendingApps\"\r\n            [gridOptions]=\"gridOptions\">\r\n          </ag-grid-angular>\r\n        </div>\r\n      }\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button type=\"button\" mat-raised-button (click)=\"closeDialog()\">\r\n        Cancel\r\n      </button>\r\n      <button type=\"button\" mat-raised-button color=\"accent\" [disabled]=\"pendingApps.length === 0 || installing\"\r\n        (click)=\"install()\">\r\n        Install\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { IdFieldParams } from '../../../shared/components/id-field/id-field.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-app-name-show',\r\n  templateUrl: './app-name-show.component.html',\r\n  styleUrls: ['./app-name-show.component.scss'],\r\n  standalone: true,\r\n  imports: [MatIconModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class AppNameShowComponent implements ICellRendererAngularComp {\r\n  name: string;\r\n  tooltip: string;\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.name = params.value;\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"name-box\">\r\n  <span>{{ name }}</span>\r\n  <mat-icon class=\"info-icon\" [tippy]=\"tooltip\">info</mat-icon>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { CheckboxCellParams } from './checkbox-cell.model';\r\n\r\n@Component({\r\n  selector: 'app-checkbox-cell',\r\n  templateUrl: './checkbox-cell.component.html',\r\n  styleUrls: ['./checkbox-cell.component.scss'],\r\n  standalone: true,\r\n})\r\nexport class CheckboxCellComponent implements ICellRendererAngularComp {\r\n  params: ICellRendererParams & CheckboxCellParams;\r\n\r\n  agInit(params: ICellRendererParams & CheckboxCellParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  public onChange(event: any) {\r\n    this.params.onChange(this.params.data, event.currentTarget.checked);\r\n  }\r\n}\r\n","<div class=\"checkbox-box\">\r\n  <input class=\"checkbox-input\" type=\"checkbox\" [disabled]=\"params.isDisabled\" [checked]=\"params.value\" (change)=\"onChange($event)\">\r\n</div>\r\n","import { Injector, ProviderToken, TypeProvider, inject } from '@angular/core';\r\n\r\n/**\r\n * Transient dependency injection provider.\r\n * This will create a new instance of the provided token,\r\n * without making it available in sub-components\r\n * as would happen with providers in a component.\r\n * \r\n * @param token the class which is injectable\r\n * @param injector the injector to use, if not provided, the current injector will be used.\r\n *     Not not necessary when using transient in the class properties construction or in the constructor,\r\n *     as the injector will be available in the constructor.\r\n *     But necessary when using transient inside anything else.\r\n * @returns \r\n */\r\nexport function transient<T>(token: ProviderToken<T>, injector?: Injector): T {\r\n  // make sure we have an injector\r\n  // this will throw an error, if transient is used outside of construction and without providing an injector\r\n  injector ??= inject(Injector);\r\n\r\n  // create a new injector which is only meant to be used for this transient instance\r\n  const subInjector = Injector.create({\r\n    providers: [\r\n      token as TypeProvider\r\n    ],\r\n    parent: injector\r\n  });\r\n\r\n  // return the instance\r\n  return subInjector.get(token, undefined, { self: true });\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n"],"names":["inject","MatDialogRef","MatDialogActions","MatSnackBar","catchError","combineLatest","map","of","share","startWith","Subject","switchMap","FeatureNames","BaseComponent","defaultGridOptions","FeaturesService","AppsListService","AppNameShowComponent","CheckboxCellComponent","AsyncPipe","MatButtonModule","FeatureTextInfoComponent","SxcGridModule","transient","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","vm_r2","pendingApps","ctx_r2","gridOptions","ɵɵtemplate","AddAppFromFolderComponent_Conditional_0_Conditional_8_Template","AddAppFromFolderComponent_Conditional_0_Conditional_9_Template","ɵɵlistener","AddAppFromFolderComponent_Conditional_0_Template_button_click_11_listener","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵresetView","closeDialog","AddAppFromFolderComponent_Conditional_0_Template_button_click_13_listener","install","ɵɵconditional","length","installing","AddAppFromFolderComponent","constructor","dialogRef","snackBar","hostClass","buildGridOptions","refreshApps$","features","isAddFromFolderEnabled","isEnabled","AppSyncWithSiteFiles","appsListService","ngOnInit","viewModel$","pipe","undefined","getPendingApps","ngOnDestroy","complete","close","onChange","app","enabled","push","splice","indexOf","open","duration","installPendingApps","subscribe","error","next","columnDefs","field","width","cellClass","sortable","cellRenderer","cellRendererParams","params","isDisabled","flex","sort","filter","tooltipGetter","pendingApp","ServerFolder","Folder","Version","Description","_","ɵɵdirectiveInject","i1","i2","_2","selectors","hostVars","hostBindings","AddAppFromFolderComponent_HostBindings","rf","ctx","ɵɵhostProperty","AddAppFromFolderComponent_Conditional_0_Template","tmp_0_0","ɵɵpipeBind1","i3","MatButton","i4","AgGridAngular","styles","MatIconModule","TippyDirective","agInit","name","value","tooltip","data","refresh","standalone","ɵɵStandaloneFeature","decls","vars","consts","template","AppNameShowComponent_Template","ɵɵtextInterpolate","MatIcon","event","currentTarget","checked","CheckboxCellComponent_Template","CheckboxCellComponent_Template_input_change_1_listener","$event","Injector","token","injector","subInjector","create","providers","parent","get","self","Context","DnnContext","HttpClient","FileUploadMessageTypes","webApiAppRoot","ImportAppService","http","context","dnnContext","importApp","file","changedName","retryOnDuplicate","formData","FormData","append","post","$2sxc","apiUrl","zoneId","toString","result","Messages","MessageType","Warning","folderName","prompt","Text","ɵɵinject","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}