{"version":3,"file":"projects_eav-ui_src_app_features_feature-names_ts-projects_eav-ui_src_app_features_feature-te-84c97c1.1d7bf6025a3635f0.js","mappings":"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","names":["FeatureNames","AppSyncWithSiteFiles","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","LightSpeed","ContentSecurityPolicy","PermissionsByLanguage","FieldShareConfigManagement","i0","_r7","ctx_r6","openDialog","vm_r4","feature","icon","FeatureTextInfoComponent_Conditional_0_Conditional_0_Template","ctx","show","FeatureTextInfoComponent","FeatureComponentBase","asInfo","value","this","asInfo$","next","constructor","dialog","viewContainerRef","featuresService","changeDetectorRef","super","BehaviorSubject","viewModel$","combineLatest","feature$","show$","pipe","map","static","t","i1","i2","_angular_core__WEBPACK_IMPORTED_MODULE_0__","In1","selectors","inputs","features","decls","vars","consts","template","rf","FeatureTextInfoComponent_Conditional_0_Template","FeatureTextInfoComponent_Conditional_2_Template","FeatureTextInfoComponent_ng_template_3_Template","FeatureTextInfoComponent_contFlowTmp","FeaturesModule","a4G","s3X","FeatureDetailService","imports","CommonModule","MatButtonModule","MatIconModule","MatCardModule","SharedComponentsModule","TranslateModule","forChild","buildTranslateConfiguration","translateLoaderFactory","http","dnnContext","getFeatureDetails","featureNameId","get","$2sxc","apiUrl","webApiRoot","params","nameId","wxM","factory","Éµfac","id_r4","_r6","ctx_r5","copyToClipboard","link_r7","_r9","ctx_r8","findOutMore","FeatureInfoDialogComponent_Conditional_0_Conditional_15_Template","FeatureInfoDialogComponent_Conditional_0_Conditional_17_Template","_r11","ctx_r10","closeDialog","Name","Description","IsEnabled","FeatureInfoDialogComponent_Conditional_0_contFlowTmp","NameId","Link","FeatureInfoDialogComponent","dialogData","dialogRef","snackBar","featureDetailService","ngOnInit","text","open","duration","link","window","close","MAT_DIALOG_DATA","i3","core","FeatureInfoDialogComponent_Conditional_0_Template","FeatureInfoDialogComponent_contFlowTmp","featureNameId$","showIf","showIf$","switchMap","featName","get$","feat","featureId","autoFocus","data","width","markForCheck","Sc5","FieldHintComponent_Case_1_ng_container_1_Template","_r3","FieldHintComponent_Case_2_ng_container_1_Template","FieldHintComponent","isError","isShort","toggleIsShort","ngContentSelectors","_c1","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c0","FieldHintComponent_contFlowTmp","ClickStopPropagationDirective","onClick","event","stopPropagation","hostBindings","$event","SafeHtmlPipe","sanitizer","transform","html","bypassSecurityTrustHtml","UTH","pure","loader","provide","TranslateLoader","useFactory","deps","HttpClient","defaultLanguage","isolate","TranslateLoaderWithErrorHandling","sxcVersion","prefix","suffix","getTranslation","lang","catchError","error","console","warn","of"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.html","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.ts","./projects/eav-ui/src/app/features/features.module.ts","./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/pipes/safe-html.pipe.ts","./projects/eav-ui/src/app/shared/translation/translate-configuration.ts","./projects/eav-ui/src/app/shared/translation/translate-loader-factory.ts","./projects/eav-ui/src/app/shared/translation/translate-loader-with-error-handling.ts"],"sourcesContent":["// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  FieldShareConfigManagement: 'FieldShareConfigManagement',\r\n};\r\n","@if (viewModel$ | async; as vm) {\r\n  @if (vm.show) {\r\n    <div class=\"feature-text-info\" (click)=\"openDialog()\" [tippy]=\"'Features.Tooltip' | translate: vm.feature\">\r\n      <mat-icon class=\"icon icon-{{vm.icon}}\">{{ vm.icon }}</mat-icon>\r\n      <div class=\"feature-text-info-content\">\r\n        <div class=\"feature-text-info-title\">{{ 'Features.FeatureNotActivated' | translate }}</div>\r\n        <div class=\"feature-text-info-subtitle\">{{ 'Features.ClickToFindOutMore' | translate }}</div>\r\n      </div>\r\n    </div>\r\n  }\r\n} @else {\r\n  <div>loading...</div>\r\n}\r\n<ng-template #loading>\r\n  <div>loading...</div>\r\n</ng-template>","import { ChangeDetectorRef, Component, Input, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureSummary } from '../models';\r\nimport { FeatureComponentBase } from '../shared/base-feature.component';\r\nimport { BehaviorSubject, map, Observable, combineLatest, switchMap } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-feature-text-info',\r\n  templateUrl: './feature-text-info.component.html',\r\n  styleUrls: ['./feature-text-info.component.scss']\r\n})\r\nexport class FeatureTextInfoComponent extends FeatureComponentBase {\r\n  @Input()\r\n  public set asInfo(value: boolean) { this.asInfo$.next(value); }\r\n  asInfo$ = new BehaviorSubject<boolean>(false);\r\n\r\n  viewModel$: Observable<FeatureTextInfoViewModel>;\r\n\r\n  constructor(\r\n    dialog: MatDialog,\r\n    viewContainerRef: ViewContainerRef,\r\n    featuresService: FeaturesService,\r\n    changeDetectorRef: ChangeDetectorRef\r\n  ) {\r\n    super(dialog, viewContainerRef, changeDetectorRef , featuresService);\r\n    this.viewModel$ = combineLatest([this.feature$, this.asInfo$, this.show$]).pipe(map(([feature, asInfo, show]) => \r\n      ({\r\n        feature,\r\n        icon: asInfo ? 'info' : 'warning',\r\n        show\r\n      })));\r\n  }\r\n\r\n}\r\n\r\ninterface FeatureTextInfoViewModel {\r\n  feature: FeatureSummary;\r\n  icon: string;\r\n  show: boolean;\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FeatureIconTextComponent } from './feature-icon-text/feature-icon-text.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { buildTranslateConfiguration } from '../shared/translation';\r\nimport { translateLoaderFactory } from '../shared/translation/translate-loader-factory';\r\nimport { FeatureInfoDialogComponent } from './feature-info-dialog/feature-info-dialog.component';\r\nimport { FeatureIconComponent } from './feature-icon/feature-icon.component';\r\nimport { FeatureTextInfoComponent } from './feature-text-info/feature-text-info.component';\r\nimport { FeatureIconIndicatorComponent } from './feature-icon-indicator/feature-icon-indicator.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { FeatureDetailService } from './services/feature-detail.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FeatureIconComponent,\r\n    FeatureIconTextComponent,\r\n    FeatureInfoDialogComponent,\r\n    FeatureTextInfoComponent,\r\n    FeatureIconIndicatorComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    SharedComponentsModule,\r\n    TranslateModule.forChild(buildTranslateConfiguration(translateLoaderFactory)),\r\n  ],\r\n  exports: [\r\n    FeatureIconComponent,\r\n    FeatureIconTextComponent,\r\n    FeatureInfoDialogComponent,\r\n    FeatureTextInfoComponent,\r\n    FeatureIconIndicatorComponent,\r\n  ],\r\n  providers: [\r\n    FeatureDetailService\r\n  ]\r\n})\r\nexport class FeaturesModule { }\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Feature } from '../models';\r\n\r\nexport const webApiRoot = \"admin/feature/\";\r\n\r\n@Injectable()\r\nexport class FeatureDetailService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private dnnContext: DnnContext\r\n  ) { }\r\n\r\n  getFeatureDetails(featureNameId: string): Observable<Feature> {\r\n    return this.http.get<Feature>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot + 'details'), {\r\n      params: { nameId: featureNameId }\r\n    });\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ vm.feature.Name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"vm.feature.Description | safeHtml\"></p>\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ \"Features.Status\" | translate }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ (vm.feature.IsEnabled ? \"Features.Active\" : \"Features.NotActive\") | translate }}</span>\r\n        </div>\r\n      </div>\r\n      @if (vm.feature.NameId; as id) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">ID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      @if (vm.feature.Link; as link) {\r\n        <button mat-raised-button color=\"accent\"\r\n          class=\"eav-card-action-button\" (click)=\"findOutMore(link)\">\r\n          <mat-icon>open_in_new</mat-icon>\r\n          {{ \"Features.FindOutMore\" | translate }}\r\n        </button>\r\n      }\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">\r\n        {{ \"Features.Close\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable, combineLatest, map } from 'rxjs';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { Feature } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\n\r\n@Component({\r\n  selector: 'app-feature-info-dialog',\r\n  templateUrl: './feature-info-dialog.component.html',\r\n  styleUrls: ['./feature-info-dialog.component.scss']\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  viewModel$: Observable<FeatureInfoViewModel>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    private dialogRef: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private featureDetailService: FeatureDetailService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.viewModel$ = combineLatest([\r\n      this.featureDetailService.getFeatureDetails(this.dialogData)\r\n    ]).pipe(map(([feature]) => ({ feature })));\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  findOutMore(link: string): void { \r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\r\ninterface FeatureInfoViewModel {\r\n  feature: Feature;\r\n}","import { ChangeDetectorRef, Directive, Input, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { BehaviorSubject, switchMap, Observable, map, combineLatest } from 'rxjs';\r\nimport { FeatureSummary } from '../models';\r\n\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n  /** Feature NameId to check */\r\n  @Input()\r\n  public set featureNameId(value: string) { this.featureNameId$.next(value); }\r\n  protected featureNameId$ = new BehaviorSubject<string>(null);\r\n\r\n  /** By default, it will show if it's false - here we can change it to show if true */\r\n  @Input()\r\n  public set showIf(value: boolean) { this.showIf$.next(value == true); }\r\n  protected showIf$ = new BehaviorSubject<boolean>(false);\r\n\r\n  // TODO: @SDV - MAKE REACTIVE - SEE text-info-component example\r\n  // featureOn: boolean = true;\r\n  feature$: Observable<FeatureSummary>;\r\n  show$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    protected featuresService: FeaturesService\r\n  ) {\r\n    this.feature$ = this.featureNameId$.pipe(\r\n      switchMap(featName => this.featuresService.get$(featName)\r\n    ));\r\n    this.show$ = combineLatest([this.feature$, this.showIf$]).pipe(\r\n      // tap(data => console.log('2dm - show$', data)),\r\n      map(([feat,showIf]) => showIf == (feat?.IsEnabled ?? false))\r\n    );\r\n  }\r\n\r\n  openDialog() {\r\n    FeatureComponentBase.openDialog(this.dialog, this.featureNameId$.value, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n\r\n  /** Public/Static so it can be called from elsewhere */\r\n  public static openDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n    dialog.open(FeatureInfoDialogComponent, {\r\n      autoFocus: false,\r\n      data: featureId,\r\n      viewContainerRef: viewContainerRef,\r\n      width: '400px',\r\n    });\r\n\r\n    changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({ selector: '[appClickStopPropagation]' })\r\nexport class ClickStopPropagationDirective {\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeHtml' })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader, TranslateModuleConfig } from '@ngx-translate/core';\r\n\r\nexport function buildTranslateConfiguration(factory: (http: HttpClient) => TranslateLoader): TranslateModuleConfig {\r\n  const config: TranslateModuleConfig = {\r\n    loader: {\r\n      provide: TranslateLoader,\r\n      useFactory: factory,\r\n      deps: [HttpClient],\r\n    },\r\n    defaultLanguage: 'en',\r\n    isolate: true,\r\n  };\r\n  return config;\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { TranslateLoader } from \"@ngx-translate/core\";\r\nimport { EavWindow } from \"../models/eav-window.model\";\r\nimport { TranslateLoaderWithErrorHandling } from \"./translate-loader-with-error-handling\";\r\n\r\ndeclare const window: EavWindow;\r\n\r\n// AoT requires an exported function for factories\r\n// at least according to https://github.com/ngx-translate/http-loader\r\nexport function translateLoaderFactory(http: HttpClient): TranslateLoader {\r\n    return new TranslateLoaderWithErrorHandling(http, './i18n/', `.js?${window.sxcVersion}`);\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader } from '@ngx-translate/core';\r\nimport { catchError, Observable, of } from 'rxjs';\r\n\r\n/**\r\n * This loader should catch a 404 if the file doesn't exist and not result in errors.\r\n * https://stackoverflow.com/questions/47391613/how-to-set-a-fallback-assets-i18n-en-json-when-url-is-not-available-ngx-trans\r\n */\r\nexport class TranslateLoaderWithErrorHandling implements TranslateLoader {\r\n  constructor(private http: HttpClient, private prefix: string, private suffix: string) { }\r\n\r\n  getTranslation(lang: string): Observable<Record<string, any>> {\r\n    return this.http.get<Record<string, any>>(`${this.prefix}${lang}${this.suffix}`).pipe(\r\n      catchError(error => {\r\n        console.warn(`Translation: Failed to get language '${lang}' from ${this.prefix}`, error);\r\n        return of({});\r\n      }),\r\n    );\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}