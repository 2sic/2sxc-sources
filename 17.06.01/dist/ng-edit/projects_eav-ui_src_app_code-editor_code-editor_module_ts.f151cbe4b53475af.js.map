{"version":3,"file":"projects_eav-ui_src_app_code-editor_code-editor_module_ts.f151cbe4b53475af.js","mappings":"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","names":["webApiTypeRoot","webApiTypeScopes","ContentTypesService","constructor","http","context","dnnContext","this","apiUrl","name","$2sxc","retrieveContentType","staticName","get","params","appId","toString","contentTypeId","retrieveContentTypes","scope","getScopes","pipe","map","scopesData","scopes","old","Object","keys","key","value","getScopesV2","save","contentType","post","appid","delete","StaticName","import","files","formData","FormData","file","append","zoneId","createGhost","sourceStaticName","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_2__","wxM","factory","ɵfac","ctx_r0","snackBarData","fileName","codeFile","ctx_r3","edition","CodeAndEditionWarningsComponent_Conditional_2_Conditional_1_Template","CodeAndEditionWarningsComponent_Conditional_2_Conditional_3_Template","ctx_r1","otherEditions","_r6","ctx_r5","openCodeBehind","CodeAndEditionWarningsComponent","snackRef","dismissWithAction","MAT_SNACK_BAR_DATA","fesm2022_core","In1","selectors","decls","vars","consts","template","rf","ctx","CodeAndEditionWarningsComponent_Conditional_1_Template","CodeAndEditionWarningsComponent_Conditional_2_Template","CodeAndEditionWarningsComponent_Conditional_4_Template","Explorers","Templates","Snippets","SnippetsService","translate","getTooltips","language","getSnippets","view","res","relevant","filterAwayNotNeededSnippetsList","snippets","standardAndInputSnips","extractInputTypeSnippets","sets","initSnippetsWithConfig","standardArray","inputTypeSnippets","list","keyPrefixes","keyPrefixIndex","v","Type","indexOf","newList","itm","setHasPrefix","set","substring","push","inputTypeArray","catalogInputTypeSnippets","inputTypeList","undefined","subset","templateConfiguration","makeTree","Content","assign","Fields","PresentationFields","TypeContent","loadContentType","TypeContentPresentation","HasList","List","TypeList","TypeListPresentation","HasApp","App","Resources","Settings","tree","o","reformatted","label","snip","content","help","links","linksList","getHelpKey","result","instant","addition","linksString","llist","split","l","pair","length","link","trim","url","target","type","prefix","getFields","AppId","subscribe","fields","field","fieldname","valuePlaceholder","Metadata","merged","Notes","toLowerCase","snipDefaults","cloneDeep","attachSnippets","InputType","std","i","obj","val","replace","webApiFieldsAll","filter","DataTypeConstants","Empty","fld","md","All","inputType","genericSnippet","fieldType","typeSnips","concat","more","fieldSnips","g","localizeGenericSnippet","collapse","objName","fieldName","ObjectToArrayPipe","transform","Array","isArray","values","UTH","pure","_r25","snippet_r15","$implicit","ctx_r23","toggleMore","ctx_r20","toggledMores","includes","link_r28","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Conditional_7_For_4_Template","link_r42","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Conditional_8_For_1_Conditional_6_For_4_Template","more_r35","_r49","ctx_r48","addSnippet","ctx_r50","toggleInfo","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Conditional_8_For_1_Conditional_6_Template","ctx_r34","toggledInfos","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Conditional_8_For_1_Template","_r53","ctx_r52","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Conditional_4_Template","ctx_r54","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Conditional_7_Template","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Conditional_8_Template","ctx_r14","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Template","folder_r8","_r57","ctx_r56","toggleFolder","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_Template","section_r1","ctx_r7","toggledFolders","CodeSnippetsComponent_For_2_Conditional_8_For_1_Template","_r61","ctx_r60","toggleSection","CodeSnippetsComponent_For_2_Conditional_8_Template","toggledSections","CodeSnippetsComponent","insertSnippet","EventEmitter","snippet","emit","GeneralHelpers","toggleInArray","inputs","outputs","CodeSnippetsComponent_For_2_Template","calculateTree","templates","parent","paths","Path","last","pathFromRoot","path","existing","find","item","children","depth","isShared","Shared","isFolder","DepthPaddingPipe","sanitizer","padding","bypassSecurityTrustStyle","SortItemsPipe","items","sort","item1","item2","CodeTemplatesComponent_For_3_ng_container_0_Template","_r2","_c0","item_r4","_r15","item_r10","ctx_r13","openTemplate","_c1","ctx_r11","isToggled","CodeTemplatesComponent_ng_template_5_Conditional_1_Conditional_11_For_1_ng_container_0_Template","item1_r19","CodeTemplatesComponent_ng_template_5_Conditional_1_Conditional_11_For_1_Template","_r28","ctx_r26","toggleItem","ctx_r29","addFile","CodeTemplatesComponent_ng_template_5_Conditional_1_Conditional_11_Template","_c2","ctx_r12","CodeTemplatesComponent_ng_template_5_Conditional_0_Template","CodeTemplatesComponent_ng_template_5_Conditional_1_Template","CodeTemplatesComponent","openView","createTemplate","toggledItemsApp","toggledItemsShared","ngOnChanges","changes","calculateTreeAppShared","f","previousView","previousValue","FileName","IsShared","showFileInTree","shared","folder","toggledItems","features","CodeTemplatesComponent_For_3_Template","CodeTemplatesComponent_ng_template_5_Template","_r3","tab_r6","viewKey","CodeEditorComponent_Conditional_0_Conditional_11_For_2_Conditional_2_Template","CodeEditorComponent_Conditional_0_Conditional_11_For_2_Conditional_6_Template","CodeEditorComponent_Conditional_0_Conditional_11_For_2_Conditional_7_Template","ctx_r16","closeEditor","isActive","isModified","isLoading","CodeEditorComponent_Conditional_0_Conditional_11_For_2_Template","vm_r1","tabs","$event","_r20","ctx_r18","codeChanged","Code","monacoOptions","editorSnipps","tooltips","_r23","ctx_r22","ctx_r24","toggleExplorer","ctx_r27","ctx_r28","CodeEditorComponent_Conditional_0_Conditional_11_Template","CodeEditorComponent_Conditional_0_Conditional_12_Template","CodeEditorComponent_Conditional_0_Conditional_13_Template","theme","activeExplorer","explorerSnipps","activeView","routes","component","CodeEditorComponent","BaseSubsinkComponent","route","snackBar","sourceService","snippetsService","zone","titleService","dialog","viewContainerRef","super","tabSize","fixedOverflowWidgets","init","codeItems","JSON","parse","sessionStorage","getItem","keyItems","keyIsShared","forEach","codeItem","startsWith","urlItems","ngOnInit","templates$","BehaviorSubject","initialViews","EntityId","activeView$","openViews$","viewInfos$","attachListeners","getAll","next","subscription","add","combineLatest","openViews","viewInfos","notLoaded","some","objectsEqual","forkJoin","newViewInfo","view$","share","snippets$","switchMap","tooltips$","Extension","of","results","viewInfos1","selectedIndex","findIndex","savedCode","slice","showCodeAndEditionWarnings","active","defaultTitle","newTitle","getTitle","setTitle","viewModel$","viewInfo","activeViewInfo","ngOnDestroy","complete","explorer","createFileDialogData","global","purpose","open","CreateFileDialogComponent","autoFocus","data","width","afterClosed","create","templateKey","monacoEditorRef","code","selectedViewInfo","oldOpenViews","newOpenViews","oldActiveView","newActiveView","codeToSave","duration","newViewInfos","error","pathAndName","pathSeparator","lastIndexOf","pathWithSlash","fullName","nameCode","endsWith","Edition","snackBarRef","openFromComponent","onAction","containerInstance","snackBarConfig","runOutsideAngular","fromEvent","window","event","preventDefault","returnValue","keyCode","navigator","platform","match","metaKey","ctrlKey","run","i4","i5","i6","i7","viewQuery","MonacoEditorComponent","CodeEditorComponent_Conditional_0_Template","CodeEditorComponent_contFlowTmp","CodeEditorRoutingModule","a4G","s3X","RouterModule","forChild","translateLoaderFactoryCode","TranslateLoaderWithErrorHandling","sxcVersion","CodeEditorModule","Context","SourceService","TranslateService","imports","SharedComponentsModule","CommonModule","MatDialogModule","MatButtonModule","MatIconModule","MatSnackBarModule","MatRippleModule","MatMenuModule","TranslateModule","buildTranslateConfiguration","MonacoEditorModule","MatProgressSpinnerModule","CreateFileDialogModule","webApiFieldsRoot","webApiFieldsGetShared","ContentTypesFieldsService","typeListRetrieve","getInputTypesList","inputConfigs","config","dataType","Label","description","Description","isDefault","IsDefault","isObsolete","IsObsolete","isRecommended","IsRecommended","obsoleteMessage","ObsoleteMessage","icon","getReservedNames","contentTypeStaticName","getShareableFields","getShareableFieldsFor","attributeId","addInheritedField","targetContentTypeId","sourceContentTypeStaticName","sourceFieldGuid","newName","ContentTypeId","SourceType","SourceField","inherit","inheritMetadataOf","reOrder","idArray","Id","order","stringify","rename","fieldId","IsTitle","Error","newField","Index","SortOrder","updateInputType","id","_angular_core__WEBPACK_IMPORTED_MODULE_3__","core","voidElements","el","toLocaleLowerCase","MonacoInstance","monaco","filename","container","options","globalCache","createGlobalCache","defineThemes","cachedValue","editorInstance","createInstance","completionItemProviders","addSnippets","resizeObserver","createResizeObserver","restoreState","addEvents","destroy","saveState","disconnect","completionItemProvider","dispose","jsTypingsLib","getModel","updateValue","setValue","focus","onValueChange","callback","valueChangedCallback","onFocus","focusedCallback","onBlur","blurredCallback","getContribution","insert","setSnippets","setTooltips","setJsonSchema","jsonSchema","uri","oldJsonDiagnostics","languages","json","jsonDefaults","diagnosticsOptions","exists","schemas","schema","fileMatch","newSchema","newJsonDiagnostics","enableSchemaRequest","setDiagnosticsOptions","setJsonComments","comments","jsonDiagnostics","setJsDiagnostics","javascriptDiagnostics","typescript","javascriptDefaults","getDiagnosticsOptions","setJsTypings","typings","addExtraLib","_2sxc","themesAreDefined","savedStates","editor","defineTheme","base","rules","token","foreground","colors","editorModelUri","Uri","editorModel","createModel","setModel","viewState","saveViewState","savedState","restoreViewState","registerCompletionItemProvider","getLanguageId","triggerCharacters","provideCompletionItems","model","position","suggestions","textUntilPosition","getValueInRange","startLineNumber","lineNumber","startColumn","endLineNumber","endColumn","column","tagStartIndex","codeInTag","quotes","from","c","tagEndIndex","tag","test","kind","CompletionItemKind","Snippet","insertText","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","range","word","getWordUntilPosition","documentation","title","suggestion","registerHoverProvider","provideHover","getWordAtPosition","tooltip","Term","contents","Help","ResizeObserver","layout","observe","onDidChangeContent","newValue","getValue","onDidFocusEditorWidget","onDidBlurEditorWidget","valueChanged","focused","blurred","ngAfterViewInit","require","vs","createEditor","monacoInstance","jsonComments","jsTypings","jsDiagnostics","editorRef","nativeElement","ToggleDebugDirective","globalConfigService","onClick","shiftKey","altKey","toggleDebugEnabled","getSelection","removeAllRanges","_angular_core__WEBPACK_IMPORTED_MODULE_1__","Sc5","hostBindings","SafeHtmlPipe","html","bypassSecurityTrustHtml","_angular_core__WEBPACK_IMPORTED_MODULE_0__","loader","provide","TranslateLoader","useFactory","deps","HttpClient","defaultLanguage","isolate","suffix","getTranslation","lang","catchError","console","warn"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/code-editor/code-and-edition-warnings/code-and-edition-warnings.component.html","./projects/eav-ui/src/app/code-editor/code-and-edition-warnings/code-and-edition-warnings.component.ts","./projects/eav-ui/src/app/code-editor/code-editor.models.ts","./projects/eav-ui/src/app/code-editor/services/snippets.service.ts","./projects/eav-ui/src/app/code-editor/code-snippets/object-to-array.pipe.ts","./projects/eav-ui/src/app/code-editor/code-snippets/code-snippets.component.html","./projects/eav-ui/src/app/code-editor/code-snippets/code-snippets.component.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.helpers.ts","./projects/eav-ui/src/app/code-editor/code-templates/depth-padding.pipe.ts","./projects/eav-ui/src/app/code-editor/code-templates/order-items.pipe.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.component.html","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.component.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.models.ts","./projects/eav-ui/src/app/code-editor/code-editor.component.html","./projects/eav-ui/src/app/code-editor/code-editor-routing.module.ts","./projects/eav-ui/src/app/code-editor/code-editor.component.ts","./projects/eav-ui/src/app/code-editor/code-editor.module.ts","./projects/eav-ui/src/app/content-type-fields/services/content-types-fields.service.ts","./projects/eav-ui/src/app/monaco-editor/monaco-editor.module.ts","./projects/eav-ui/src/app/shared/typescript-helpers/name-of.ts","./projects/eav-ui/src/app/monaco-editor/monaco-instance.ts","./projects/eav-ui/src/app/monaco-editor/monaco-editor.component.ts","./projects/eav-ui/src/app/monaco-editor/monaco-editor.component.html","./projects/eav-ui/src/app/shared/directives/toggle-debug.directive.ts","./projects/eav-ui/src/app/shared/pipes/safe-html.pipe.ts","./projects/eav-ui/src/app/shared/translation/translate-configuration.ts","./projects/eav-ui/src/app/shared/translation/translate-loader-with-error-handling.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\n\r\n// We should list all the \"full\" paths here, so it's easier to find when searching for API calls\r\nexport const webApiTypeRoot = 'admin/type/';\r\nconst webApiTypeGet = 'admin/type/get';\r\nconst webApiTypes = 'admin/type/list';\r\nconst webApiTypeScopes = 'admin/type/scopes';\r\nconst webApiTypeSave = 'admin/type/save';\r\nconst webApiTypeDelete = 'admin/type/delete';\r\nconst webApiTypeImport = 'admin/type/import';\r\nconst webApiTypeAddGhost = 'admin/type/addghost';\r\n\r\n@Injectable()\r\nexport class ContentTypesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get<ContentType>(this.apiUrl(webApiTypeGet), {\r\n      params: { appId: this.context.appId.toString(), contentTypeId: staticName }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get<ContentType[]>(this.apiUrl(webApiTypes), {\r\n      params: { appId: this.context.appId.toString(), scope }\r\n    });\r\n  }\r\n\r\n  // TODO: remove this method after upgrade to V2\r\n  getScopes() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopesData => {\r\n        // wip during upgrade:\r\n        const scopes = scopesData.old;\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getScopesV2() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopesData => scopesData.scopes),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeSave), contentType, {\r\n      params: { appid: this.context.appId.toString() },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeDelete), {\r\n      params: { appid: this.context.appId.toString(), staticName: contentType.StaticName },\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeAddGhost), null, {\r\n      params: { appid: this.context.appId.toString(), sourceStaticName },\r\n    });\r\n  }\r\n}\r\n","<div class=\"messages\">\r\n  @if (snackBarData.codeFile) {\r\n    <div>\"{{ snackBarData.fileName }}\" also has a code-behind file \"{{ snackBarData.codeFile }}\".</div>\r\n    <br>\r\n  }\r\n\r\n  @if (snackBarData.otherEditions) {\r\n    <div>\r\n      @if (snackBarData.edition) {\r\n        You are editing \"{{ snackBarData.edition }}\" edition.\r\n      }\r\n      There are {{ snackBarData.otherEditions }} other editions of \"{{ snackBarData.fileName }}\".\r\n      @if (!snackBarData.edition) {\r\n        You may be editing an edition which is not the one you see.\r\n      }\r\n      See <a href=\"https://go.2sxc.org/polymorphism\" target=\"_blank\">docs</a>.\r\n    </div>\r\n  }\r\n</div>\r\n\r\n<div class=\"actions\">\r\n  @if (snackBarData.codeFile) {\r\n    <button mat-button color=\"primary\" (click)=\"openCodeBehind()\">\r\n      Open code-behind file\r\n    </button>\r\n  }\r\n</div>","import { Component, Inject } from '@angular/core';\r\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\nimport { CodeAndEditionWarningsSnackBarData } from './code-and-edition-warnings.models';\r\n\r\n@Component({\r\n  selector: 'app-code-and-edition-warnings',\r\n  templateUrl: './code-and-edition-warnings.component.html',\r\n  styleUrls: ['./code-and-edition-warnings.component.scss'],\r\n})\r\nexport class CodeAndEditionWarningsComponent {\r\n  constructor(\r\n    private snackRef: MatSnackBarRef<CodeAndEditionWarningsComponent>,\r\n    @Inject(MAT_SNACK_BAR_DATA) public snackBarData: CodeAndEditionWarningsSnackBarData,\r\n  ) { }\r\n\r\n  openCodeBehind(): void {\r\n    this.snackBarData.openCodeBehind = true;\r\n    this.snackRef.dismissWithAction();\r\n  }\r\n}\r\n","import { FileAsset } from './models/file-asset.model';\r\nimport { Snippet, SnippetsSets } from './models/snippet.model';\r\nimport { SourceView } from './models/source-view.model';\r\nimport { Tooltip } from './models/tooltip.model';\r\n\r\nexport interface Tab {\r\n  viewKey: ViewKey;\r\n  label: string;\r\n  isActive: boolean;\r\n  isModified: boolean;\r\n  isLoading: boolean;\r\n}\r\n\r\nexport interface CodeEditorViewModel {\r\n  activeView: ViewKey;\r\n  tabs: Tab[];\r\n  viewKey: ViewKey;\r\n  view?: SourceView;\r\n  templates: FileAsset[];\r\n  explorerSnipps: SnippetsSets;\r\n  editorSnipps: Snippet[];\r\n  tooltips?: Tooltip[];\r\n}\r\n\r\nexport const Explorers = {\r\n  Templates: 'Templates',\r\n  Snippets: 'Snippets',\r\n} as const;\r\n\r\nexport type ExplorerOption = typeof Explorers[keyof typeof Explorers];\r\n\r\nexport interface ViewInfo {\r\n  viewKey: ViewKey;\r\n  view?: SourceView;\r\n  explorerSnipps?: SnippetsSets;\r\n  editorSnipps?: Snippet[];\r\n  tooltips?: Tooltip[];\r\n  savedCode?: string;\r\n}\r\n\r\nexport interface ViewKey {\r\n  /** ViewKey is templateId or path */\r\n  key: string;\r\n  shared: boolean;\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { map, Observable } from 'rxjs';\r\nimport { DataTypeConstants } from '../../content-type-fields/constants/data-type.constants';\r\nimport { Field } from '../../content-type-fields/models/field.model';\r\nimport { webApiFieldsAll } from '../../content-type-fields/services/content-types-fields.service';\r\nimport { MoreSnippet, SetSnippet, SetSnippetLink, Snippet, SnippetsSets, SnippetsSubSubSets } from '../models/snippet.model';\r\nimport { SourceView } from '../models/source-view.model';\r\nimport { Tooltip } from '../models/tooltip.model';\r\nimport { InputTypeStrict } from '../../content-type-fields/constants/input-type.constants';\r\n\r\nexport const inlineHelp = 'admin/Code/InlineHelp';\r\n\r\n@Injectable()\r\nexport class SnippetsService {\r\n\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext, private translate: TranslateService) { }\r\n\r\n  getTooltips(language: string): Observable<Tooltip[]> {\r\n    return this.http.get<Tooltip[]>(this.dnnContext.$2sxc.http.apiUrl(inlineHelp), {\r\n      params: {\r\n        language,\r\n      },\r\n    });\r\n  }\r\n\r\n  getSnippets(view: SourceView): Observable<{ list: Snippet[]; sets: SnippetsSets; }> {\r\n    return this.http.get<{ snippets: Snippet[] }>('../ng-assets/snippets.json.js').pipe(\r\n      map(res => {\r\n        const relevant = this.filterAwayNotNeededSnippetsList(res.snippets, view);\r\n        const standardAndInputSnips = this.extractInputTypeSnippets(relevant);\r\n        const sets = this.initSnippetsWithConfig(standardAndInputSnips.standardArray, view, standardAndInputSnips.inputTypeSnippets);\r\n        const sorted: { list: Snippet[]; sets: SnippetsSets; } = {\r\n          list: standardAndInputSnips.standardArray,\r\n          sets\r\n        };\r\n        return sorted;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** Scan the list for sets starting with @ or [ and filter if not needed right now */\r\n  private filterAwayNotNeededSnippetsList(list: Snippet[], view: SourceView): Snippet[] {\r\n    const keyPrefixes = ['@', '['];\r\n    const keyPrefixIndex = (v: SourceView) => (v.Type.indexOf('Razor') > -1) ? 0 : 1;\r\n\r\n    const newList: Snippet[] = [];\r\n    for (const itm of list) {\r\n      const setHasPrefix = keyPrefixes.indexOf(itm.set[0]);\r\n      if (setHasPrefix === -1 || (setHasPrefix === keyPrefixIndex(view))) {\r\n        // if necessary, remove first char\r\n        if (setHasPrefix === keyPrefixIndex(view)) {\r\n          itm.set = itm.set.substring(1);\r\n        }\r\n        newList.push(itm);\r\n      }\r\n    }\r\n    return newList;\r\n  }\r\n\r\n  private extractInputTypeSnippets(list: Snippet[]): { standardArray: Snippet[]; inputTypeSnippets: Record<string, Snippet[]>; } {\r\n    const standardArray: Snippet[] = [];\r\n    const inputTypeArray: Snippet[] = [];\r\n\r\n    for (const itm of list) {\r\n      const systemSnippet = itm.set[0] === '\\\\';\r\n      if (!systemSnippet) {\r\n        standardArray.push(itm);\r\n      } else {\r\n        itm.set = itm.set.substring(1);\r\n        inputTypeArray.push(itm);\r\n      }\r\n    }\r\n    const inputTypeSnippets = this.catalogInputTypeSnippets(inputTypeArray);\r\n    const extracted: { standardArray: Snippet[]; inputTypeSnippets: Record<string, Snippet[]>; } = {\r\n      standardArray,\r\n      inputTypeSnippets,\r\n    };\r\n    return extracted;\r\n  }\r\n\r\n  private catalogInputTypeSnippets(list: Snippet[]): Record<string, Snippet[]> {\r\n    const inputTypeList: Record<string, Snippet[]> = {};\r\n    for (const itm of list) {\r\n      if (inputTypeList[itm.subset] === undefined) {\r\n        inputTypeList[itm.subset] = [];\r\n      }\r\n      inputTypeList[itm.subset].push(itm);\r\n    }\r\n    return inputTypeList;\r\n  }\r\n\r\n  private initSnippetsWithConfig(\r\n    standardArray: Snippet[],\r\n    templateConfiguration: SourceView,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): SnippetsSets {\r\n    const sets = this.makeTree(standardArray);\r\n\r\n    // retrieve all relevant content-types and infos\r\n    sets.Content = Object.assign({}, sets.Content, { Fields: {}, PresentationFields: {} });\r\n    if (templateConfiguration.TypeContent) {\r\n      this.loadContentType(\r\n        sets.Content.Fields as SnippetsSubSubSets,\r\n        templateConfiguration.TypeContent,\r\n        'Content',\r\n        templateConfiguration,\r\n        inputTypeSnippets,\r\n      );\r\n    }\r\n    if (templateConfiguration.TypeContentPresentation) {\r\n      this.loadContentType(\r\n        sets.Content.PresentationFields as SnippetsSubSubSets,\r\n        templateConfiguration.TypeContentPresentation,\r\n        'Content.Presentation',\r\n        templateConfiguration,\r\n        inputTypeSnippets,\r\n      );\r\n    }\r\n\r\n    if (templateConfiguration.HasList) {\r\n      sets.List = Object.assign({}, sets.List, { Fields: {}, PresentationFields: {} });\r\n      if (templateConfiguration.TypeList) {\r\n        this.loadContentType(\r\n          sets.List.Fields as SnippetsSubSubSets,\r\n          templateConfiguration.TypeList,\r\n          'Header',\r\n          templateConfiguration,\r\n          inputTypeSnippets,\r\n        );\r\n      }\r\n      if (templateConfiguration.TypeListPresentation) {\r\n        this.loadContentType(\r\n          sets.List.PresentationFields as SnippetsSubSubSets,\r\n          templateConfiguration.TypeListPresentation,\r\n          'Header.Presentation',\r\n          templateConfiguration,\r\n          inputTypeSnippets,\r\n        );\r\n      }\r\n    } else {\r\n      delete sets.List;\r\n    }\r\n\r\n    // maybe App-infos\r\n    if (templateConfiguration.HasApp) {\r\n      sets.App.Resources = {};\r\n      sets.App.Settings = {};\r\n      this.loadContentType(sets.App.Resources, 'App-Resources', 'App.Resources', templateConfiguration, inputTypeSnippets);\r\n      this.loadContentType(sets.App.Settings, 'App-Settings', 'App.Settings', templateConfiguration, inputTypeSnippets);\r\n    }\r\n\r\n    return sets;\r\n  }\r\n\r\n  /** Convert the list into a tree with set/subset/item */\r\n  private makeTree(list: Snippet[]): SnippetsSets {\r\n    const tree: SnippetsSets = {};\r\n    for (const o of list) {\r\n      if (tree[o.set] === undefined) {\r\n        tree[o.set] = {};\r\n      }\r\n      if (tree[o.set][o.subset] === undefined) {\r\n        tree[o.set][o.subset] = [];\r\n      }\r\n      const reformatted: SetSnippet = {\r\n        key: o.name,\r\n        label: this.label(o.set, o.subset, o.name),\r\n        snip: o.content,\r\n        help: o.help || this.help(o.set, o.subset, o.name),\r\n        links: this.linksList(o.links)\r\n      };\r\n\r\n      (tree[o.set][o.subset] as SetSnippet[]).push(reformatted);\r\n    }\r\n    return tree;\r\n  }\r\n\r\n  private label(set: string, subset: string, snip: string): string {\r\n    const key = this.getHelpKey(set, subset, snip, '.Key');\r\n\r\n    let result: string = this.translate.instant(key);\r\n    if (result === key) {\r\n      result = snip;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private getHelpKey(set: string, subset: string, snip: string, addition: string): string {\r\n    return 'SourceEditorSnippets' + '.' + set + '.' + subset + '.' + snip + addition;\r\n  }\r\n\r\n  private help(set: string, subset: string, snip: string): string {\r\n    const key = this.getHelpKey(set, subset, snip, '.Help');\r\n\r\n    let result: string = this.translate.instant(key);\r\n    if (result === key) {\r\n      result = '';\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private linksList(linksString: string): SetSnippetLink[] {\r\n    if (!linksString) { return null; }\r\n\r\n    const links: SetSnippetLink[] = [];\r\n    const llist = linksString.split('\\n');\r\n    for (const l of llist) {\r\n      const pair = l.split(':');\r\n      if (pair.length === 3) {\r\n        const link: SetSnippetLink = {\r\n          name: pair[0].trim(),\r\n          url: pair[1].trim() + ':' + pair[2].trim(),\r\n        };\r\n        links.push(link);\r\n      }\r\n    }\r\n    if (links.length === 0) { return null; }\r\n    return links;\r\n  }\r\n\r\n  /** spm TODO: this happens after snippets are calculated for the first time. Needs to be fixed */\r\n  private loadContentType(\r\n    target: SnippetsSubSubSets,\r\n    type: string,\r\n    prefix: string,\r\n    templateConfiguration: SourceView,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): void {\r\n    this.getFields(templateConfiguration.AppId, type).subscribe(fields => {\r\n      // first add common items if the content-type actually exists\r\n      for (const field of fields) {\r\n        const fieldname = field.StaticName;\r\n        target[fieldname] = {\r\n          key: fieldname,\r\n          label: fieldname,\r\n          snip: this.valuePlaceholder(prefix, fieldname, templateConfiguration),\r\n          help: field.Metadata.merged.Notes || ' (' + field.Type.toLowerCase() + ') '\r\n        };\r\n        // try to add generic snippets specific to this input-type\r\n        const snipDefaults = cloneDeep(target[fieldname]); // must be a copy, because target[fieldname] will grow\r\n        this.attachSnippets(target, prefix, fieldname, field.InputType, snipDefaults, inputTypeSnippets);\r\n      }\r\n\r\n      if (fields.length) {\r\n        const std = ['EntityId', 'EntityTitle', 'EntityGuid', 'EntityType', 'IsPublished', 'Modified'];\r\n        // tslint:disable-next-line:prefer-for-of\r\n        for (let i = 0; i < std.length; i++) {\r\n          target[std[i]] = {\r\n            key: std[i],\r\n            label: std[i],\r\n            snip: this.valuePlaceholder(prefix, std[i], templateConfiguration),\r\n            help: this.translate.instant('SourceEditorSnippets.StandardFields.' + std[i] + '.Help'),\r\n          };\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private valuePlaceholder(obj: string, val: string, templateConfiguration: SourceView): string {\r\n    return (templateConfiguration.Type.indexOf('Razor') > -1)\r\n      ? '@' + obj + '.' + val\r\n      : '[' + obj.replace('.', ':') + ':' + val + ']';\r\n  }\r\n\r\n  private getFields(appId: number, staticName: string): Observable<Field[]> {\r\n    return this.http.get<Field[]>(this.dnnContext.$2sxc.http.apiUrl(webApiFieldsAll), {\r\n      params: { appid: appId.toString(), staticName },\r\n    }).pipe(\r\n      map(fields => {\r\n        fields = fields.filter(field => field.Type !== DataTypeConstants.Empty);\r\n        for (const fld of fields) {\r\n          if (!fld.Metadata) { continue; }\r\n          const md = fld.Metadata;\r\n          const allMd = md.All;\r\n          const typeMd = md[fld.Type];\r\n          const inputMd = md[fld.InputType];\r\n          md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n        }\r\n        return fields;\r\n      }),\r\n    );\r\n  }\r\n\r\n  private attachSnippets(\r\n    target: SnippetsSubSubSets,\r\n    prefix: string,\r\n    fieldname: string,\r\n    inputType: InputTypeStrict,\r\n    snipDefaults: SetSnippet,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): void {\r\n    let genericSnippet = inputTypeSnippets[inputType];\r\n    if (inputType.indexOf('-')) { // if it's a sub-type, let's also get the master-type\r\n      const fieldType = inputType.substring(0, inputType.indexOf('-'));\r\n      if (fieldType) {\r\n        const typeSnips = inputTypeSnippets[fieldType];\r\n        if (typeSnips) {\r\n          genericSnippet = genericSnippet ? genericSnippet.concat(typeSnips) : typeSnips;\r\n        }\r\n      }\r\n    }\r\n    if (!genericSnippet) { return; }\r\n\r\n    if (target[fieldname].more === undefined) {\r\n      target[fieldname].more = {};\r\n    }\r\n    const fieldSnips = target[fieldname].more;\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let g = 0; g < genericSnippet.length; g++) {\r\n      try {\r\n        fieldSnips[fieldname + '-' + genericSnippet[g].name] = Object.assign({}, snipDefaults, {\r\n          key: fieldname + ' - ' + genericSnippet[g].name,\r\n          label: genericSnippet[g].name,\r\n          snip: this.localizeGenericSnippet(genericSnippet[g].content, prefix, fieldname),\r\n          collapse: true,\r\n        } as MoreSnippet);\r\n      } finally { }\r\n    }\r\n  }\r\n\r\n  private localizeGenericSnippet(snip: string, objName: string, fieldName: string): string {\r\n    snip = snip\r\n      .replace(/(\\$\\{[0-9]+\\:)var(\\})/gi, '$1' + objName + '$2')\r\n      .replace(/(\\$\\{[0-9]+\\:)prop(\\})/gi, '$1' + fieldName + '$2');\r\n    return snip;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'objectToArray' })\r\nexport class ObjectToArrayPipe implements PipeTransform {\r\n  transform(obj: Record<string, any> | Record<string, any>[]): Record<string, any>[] {\r\n    if (obj == null) { return; }\r\n\r\n    if (Array.isArray(obj)) { return obj; }\r\n\r\n    return Object.values(obj);\r\n  }\r\n}\r\n","<div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n  @for (section of snippets | keyvalue; track section) {\r\n    <div>\r\n      <div class=\"collapsible-header section\" [tippy]=\"'SourceEditorSnippets.' + section.key + '.Help' | translate\"\r\n        tippyShowDelay=\"750\" (click)=\"toggleSection(section.key)\">\r\n        <mat-icon>\r\n          {{ toggledSections.includes(section.key) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n        </mat-icon>\r\n        <span>{{ 'SourceEditorSnippets.' + section.key + '.Title' | translate }}</span>\r\n      </div>\r\n      @if (toggledSections.includes(section.key)) {\r\n        @for (folder of section.value | keyvalue; track folder) {\r\n          <div>\r\n            <div class=\"collapsible-header folder\"\r\n              [tippy]=\"'SourceEditorSnippets.' + section.key + '.' + folder.key + '.Help' | translate\" tippyShowDelay=\"750\"\r\n              (click)=\"toggleFolder(folder.key)\">\r\n              <mat-icon>\r\n                {{ toggledFolders.includes(folder.key) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n              </mat-icon>\r\n              <span>{{ 'SourceEditorSnippets.' + section.key + '.' + folder.key + '.Title' | translate }}</span>\r\n            </div>\r\n            @if (toggledFolders.includes(folder.key)) {\r\n              @for (snippet of (folder.value | objectToArray); track snippet) {\r\n                <div class=\"snippet\">\r\n                  <div class=\"snippet-label\">\r\n                    <div matRipple class=\"text\" [tippy]=\"snippet.snip\" tippyShowDelay=\"750\"\r\n                      (click)=\"addSnippet(snippet.snip)\">\r\n                      {{ snippet.label }}\r\n                    </div>\r\n                    @if (snippet.more) {\r\n                      <mat-icon tippy=\"Show More\" tippyShowDelay=\"750\" (click)=\"toggleMore(snippet.key)\">\r\n                        {{ toggledMores.includes(snippet.key) ? 'more_vert' : 'more_horiz' }}\r\n                      </mat-icon>\r\n                    }\r\n                    <mat-icon tippy=\"Show Help\" tippyShowDelay=\"750\" appClickStopPropagation\r\n                    (click)=\"toggleInfo(snippet.key)\">info</mat-icon>\r\n                  </div>\r\n                  @if (toggledInfos.includes(snippet.key)) {\r\n                    <div class=\"snippet-help\">\r\n                      <div class=\"text\" [innerHTML]=\"snippet.help | safeHtml\"></div>\r\n                      @for (link of snippet.links; track link) {\r\n                        <div>\r\n                          <a [href]=\"link.url\" target=\"_blank\">{{ link.name }}</a>\r\n                        </div>\r\n                      }\r\n                    </div>\r\n                  }\r\n                  @if (toggledMores.includes(snippet.key)) {\r\n                    @for (more of (snippet.more | objectToArray); track more) {\r\n                      <div>\r\n                        <div class=\"snippet-label\">\r\n                          <div matRipple class=\"text text-more\" [tippy]=\"more.snip\" tippyShowDelay=\"750\"\r\n                            (click)=\"addSnippet(more.snip)\">\r\n                            {{ more.label }}\r\n                          </div>\r\n                          <mat-icon tippy=\"Show Help\" tippyShowDelay=\"750\" appClickStopPropagation\r\n                          (click)=\"toggleInfo(more.key)\">info</mat-icon>\r\n                        </div>\r\n                        @if (toggledInfos.includes(more.key)) {\r\n                          <div class=\"snippet-help snippet-help-more\">\r\n                            <div class=\"text\" [innerHTML]=\"more.help | safeHtml\"></div>\r\n                            @for (link of more.links; track link) {\r\n                              <div>\r\n                                <a [href]=\"link.url\" target=\"_blank\">{{ link.name }}</a>\r\n                              </div>\r\n                            }\r\n                          </div>\r\n                        }\r\n                      </div>\r\n                    }\r\n                  }\r\n                </div>\r\n              }\r\n            }\r\n          </div>\r\n        }\r\n      }\r\n    </div>\r\n  }\r\n</div>","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { GeneralHelpers } from '../../edit/shared/helpers';\r\nimport { SnippetsSets } from '../models/snippet.model';\r\n\r\n@Component({\r\n  selector: 'app-code-snippets',\r\n  templateUrl: './code-snippets.component.html',\r\n  styleUrls: ['./code-snippets.component.scss'],\r\n})\r\nexport class CodeSnippetsComponent {\r\n  @Input() snippets: SnippetsSets;\r\n  @Output() insertSnippet: EventEmitter<string> = new EventEmitter();\r\n  toggledSections: string[] = [];\r\n  toggledFolders: string[] = [];\r\n  toggledInfos: string[] = [];\r\n  toggledMores: string[] = [];\r\n\r\n  constructor() { }\r\n\r\n  addSnippet(snippet: string): void {\r\n    this.insertSnippet.emit(snippet);\r\n  }\r\n\r\n  toggleSection(key: string): void {\r\n    GeneralHelpers.toggleInArray(key, this.toggledSections);\r\n  }\r\n\r\n  toggleFolder(key: string): void {\r\n    GeneralHelpers.toggleInArray(key, this.toggledFolders);\r\n  }\r\n\r\n  toggleInfo(key: string): void {\r\n    GeneralHelpers.toggleInArray(key, this.toggledInfos);\r\n  }\r\n\r\n  toggleMore(key: string): void {\r\n    GeneralHelpers.toggleInArray(key, this.toggledMores);\r\n  }\r\n}\r\n","import { FileAsset } from '../models/file-asset.model';\r\nimport { TreeItem } from '../models/tree-item.model';\r\nimport { appSharedRoot } from './code-templates.models';\r\n\r\nexport function calculateTreeAppShared(templates: FileAsset[]): TreeItem[] {\r\n  const tree: TreeItem[] = [\r\n    {\r\n      depth: -1,\r\n      name: 'App Files',\r\n      pathFromRoot: appSharedRoot,\r\n      isShared: false,\r\n      isFolder: true,\r\n      children: calculateTree(templates.filter(f => !f.Shared)),\r\n    },\r\n    {\r\n      depth: -1,\r\n      name: 'Shared App Files',\r\n      pathFromRoot: appSharedRoot,\r\n      isShared: true,\r\n      isFolder: true,\r\n      children: calculateTree(templates.filter(f => f.Shared)),\r\n    },\r\n  ];\r\n  return tree;\r\n}\r\n\r\nfunction calculateTree(templates: FileAsset[]): TreeItem[] {\r\n  if (!templates) { return []; }\r\n\r\n  const tree: TreeItem[] = [];\r\n  for (const template of templates) {\r\n    let parent: TreeItem[] = tree;\r\n    const paths = template.Path.split('/');\r\n    const last = paths[paths.length - 1];\r\n    let pathFromRoot = '';\r\n    for (let i = 0; i < paths.length; i++) {\r\n      const path = paths[i];\r\n      pathFromRoot += i ? `/${path}` : path;\r\n      const existing = parent.find(item => item.name === path);\r\n      if (existing) {\r\n        parent = existing.children;\r\n      } else {\r\n        const item: TreeItem = {\r\n          depth: i,\r\n          name: path,\r\n          pathFromRoot,\r\n          isShared: template.Shared,\r\n          isFolder: path !== last,\r\n          ...(path !== last && { children: [] }),\r\n        };\r\n        parent.push(item);\r\n        parent = item.children;\r\n      }\r\n    }\r\n  }\r\n\r\n  return tree;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'depthPadding' })\r\nexport class DepthPaddingPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(depth: number, isFolder: boolean): SafeStyle {\r\n    let padding: number;\r\n    if (isFolder) {\r\n      padding = depth * 8;\r\n    } else {\r\n      padding = (depth === 0) ? 8 : (depth * 8 + 16);\r\n    }\r\n    return this.sanitizer.bypassSecurityTrustStyle(`padding-left: ${padding}px;`);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TreeItem } from '../models/tree-item.model';\r\n\r\n/** Sorts folders before files */\r\n@Pipe({ name: 'sortItems' })\r\nexport class SortItemsPipe implements PipeTransform {\r\n\r\n  transform(items: TreeItem[]) {\r\n    if (items == null) { return items; }\r\n\r\n    items.sort((item1, item2) => {\r\n      if (item1.isFolder < item2.isFolder) {\r\n        return 1;\r\n      } else if (item1.isFolder > item2.isFolder) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    return items;\r\n  }\r\n}\r\n","<div class=\"editor-active-explorer fancy-scrollbar-dark explorer-wrapper\">\r\n\r\n  <div>\r\n    @for (item of (tree | sortItems); track item) {\r\n      <ng-container *ngTemplateOutlet=\"fileOrFolder; context: {item: item}\"></ng-container>\r\n    }\r\n\r\n    <ng-template #fileOrFolder let-item=\"item\">\r\n\r\n      @if (!item.isFolder) {\r\n        <div class=\"file\" [style]=\"item.depth | depthPadding: item.isFolder\"\r\n          [ngClass]=\"{'active': isToggled(item.pathFromRoot, item.isShared) }\" [tippy]=\"item.name\" tippyShowDelay=\"750\"\r\n          (click)=\"openTemplate(item.pathFromRoot, item.isShared)\">\r\n          {{ item.name }}\r\n        </div>\r\n      }\r\n\r\n      @if (item.isFolder) {\r\n        <div>\r\n          <div class=\"folder-name-wrapper\" [ngClass]=\"{'app-shared-root': item.depth < 0}\"\r\n            [style]=\"item.depth + 1 | depthPadding: item.isFolder\" (click)=\"toggleItem(item.pathFromRoot, item.isShared)\">\r\n            <div class=\"folder-name\" [tippy]=\"item.name\" tippyShowDelay=\"750\">\r\n              <mat-icon> {{ isToggled(item.pathFromRoot, item.isShared) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n              </mat-icon>\r\n              <span>{{ item.name }}</span>\r\n            </div>\r\n            <div class=\"add-item\" tippy=\"Create file in this folder\" tippyShowDelay=\"750\" appClickStopPropagation\r\n              (click)=\"addFile(item.pathFromRoot, item.isShared)\">\r\n              <mat-icon>add</mat-icon>\r\n            </div>\r\n          </div>\r\n          @if (isToggled(item.pathFromRoot, item.isShared)) {\r\n            @for (item1 of (item.children | sortItems); track item1) {\r\n              <ng-container *ngTemplateOutlet=\"fileOrFolder; context: {item: item1}\"></ng-container>\r\n            }\r\n          }\r\n        </div>\r\n      }\r\n\r\n    </ng-template>\r\n  </div>\r\n\r\n  <div class=\"create-button-wrapper\">\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" tippy=\"Create file\" tippyPlacement=\"left\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button mat-menu-item  (click)=\"addFile('', false)\">\r\n        <span>App</span>\r\n      </button>\r\n      <button mat-menu-item  (click)=\"addFile('', true)\">\r\n        <span>Shared (global)</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\r\nimport { GeneralHelpers } from '../../edit/shared/helpers';\r\nimport { ViewKey } from '../code-editor.models';\r\nimport { FileAsset } from '../models/file-asset.model';\r\nimport { SourceView } from '../models/source-view.model';\r\nimport { TreeItem } from '../models/tree-item.model';\r\nimport { calculateTreeAppShared } from './code-templates.helpers';\r\nimport { appSharedRoot, CreateTemplateParams } from './code-templates.models';\r\n\r\n@Component({\r\n  selector: 'app-code-templates',\r\n  templateUrl: './code-templates.component.html',\r\n  styleUrls: ['./code-templates.component.scss'],\r\n})\r\nexport class CodeTemplatesComponent implements OnChanges {\r\n  @Input() view?: SourceView;\r\n  @Input() templates: FileAsset[];\r\n  @Output() openView: EventEmitter<ViewKey> = new EventEmitter();\r\n  @Output() createTemplate: EventEmitter<CreateTemplateParams> = new EventEmitter();\r\n  tree: TreeItem[];\r\n  toggledItemsApp: string[] = [];\r\n  toggledItemsShared: string[] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.templates != null) {\r\n      this.tree = calculateTreeAppShared(this.templates);\r\n    }\r\n    if (changes.view != null) {\r\n      const previousView: SourceView = changes.view?.previousValue;\r\n      if (previousView) {\r\n        this.toggleItem(previousView.FileName, previousView.IsShared);\r\n      }\r\n      if (this.view) {\r\n        this.showFileInTree(this.view.FileName, this.view.IsShared);\r\n      }\r\n    }\r\n  }\r\n\r\n  isToggled(path: string, isShared: boolean): boolean {\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    return toggledItems.includes(path);\r\n  }\r\n\r\n  openTemplate(path: string, isShared: boolean): void {\r\n    const viewKey: ViewKey = { key: path, shared: isShared };\r\n    this.openView.emit(viewKey);\r\n  }\r\n\r\n  toggleItem(path: string, isShared: boolean): void {\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    GeneralHelpers.toggleInArray(path, toggledItems);\r\n  }\r\n\r\n  addFile(folder?: string, isShared?: boolean): void {\r\n    const params: CreateTemplateParams = { folder, isShared };\r\n    this.createTemplate.emit(params);\r\n  }\r\n\r\n  private showFileInTree(file: string, isShared: boolean): void {\r\n    if (file == null) { return; }\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    if (toggledItems.includes(file)) { return; }\r\n\r\n    const paths = [appSharedRoot, ...file.split('/')];\r\n    let pathFromRoot = '';\r\n    for (const path of paths) {\r\n      pathFromRoot = !pathFromRoot ? path : `${pathFromRoot}/${path}`;\r\n      if (toggledItems.includes(pathFromRoot)) { continue; }\r\n      this.toggleItem(pathFromRoot, isShared);\r\n    }\r\n  }\r\n}\r\n","export const appSharedRoot = '' as const;\r\n\r\nexport interface CreateTemplateParams {\r\n  folder?: string;\r\n  isShared?: boolean;\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"editor-root\" appToggleDebug [ngClass]=\"{ 'sxc-dark': monacoOptions.theme === '2sxc-dark' }\">\r\n    <div class=\"editor-side-toolbar\">\r\n      <div class=\"button\" [ngClass]=\"{ 'active': activeExplorer === Explorers.Templates }\" tippy=\"Templates\"\r\n        (click)=\"toggleExplorer(Explorers.Templates)\">\r\n        <mat-icon>file_copy</mat-icon>\r\n      </div>\r\n      <div class=\" button\" [ngClass]=\"{ 'active': activeExplorer === Explorers.Snippets }\" tippy=\"Snippets\"\r\n        (click)=\"toggleExplorer(Explorers.Snippets)\">\r\n        <mat-icon>code</mat-icon>\r\n      </div>\r\n    </div>\r\n    <app-code-templates [hidden]=\"activeExplorer !== Explorers.Templates\" [view]=\"vm.view\" [templates]=\"vm.templates\"\r\n      (openView)=\"openView($event)\" (createTemplate)=\"createTemplate($event)\">\r\n    </app-code-templates>\r\n    <app-code-snippets [hidden]=\"activeExplorer !== Explorers.Snippets\" [snippets]=\"vm.explorerSnipps\"\r\n      (insertSnippet)=\"insertSnippet($event)\">\r\n    </app-code-snippets>\r\n    <div class=\"editor-group\">\r\n      @if (vm.tabs.length > 0) {\r\n        <div class=\"tabs-container fancy-scrollbar-dark\">\r\n          @for (tab of vm.tabs; track tab) {\r\n            <div class=\"tab\" [ngClass]=\"{\r\n              'active': tab.isActive,\r\n              'modified': tab.isModified,\r\n              'loading': tab.isLoading\r\n              }\" (click)=\"openView(tab.viewKey)\">\r\n              <div class=\"tab-label-container\" [tippy]=\"tab.label\" tippyShowDelay=\"750\">\r\n                @if (tab.viewKey.shared) {\r\n                  <mat-icon class=\"icon-shared\">share</mat-icon>\r\n                }\r\n                <span class=\"tab-label\">{{ tab.label }}</span>\r\n              </div>\r\n              <div class=\"tab-actions-container\">\r\n                @if (tab.isModified) {\r\n                  <mat-icon class=\"tab-action icon-modified\" fontSet=\"material-icons\">circle</mat-icon>\r\n                }\r\n                @if (tab.isLoading) {\r\n                  <mat-spinner class=\"spinner\" mode=\"indeterminate\" diameter=\"14\" color=\"white\">\r\n                  </mat-spinner>\r\n                }\r\n                <mat-icon class=\"tab-action icon-close\" tippy=\"Close\" appClickStopPropagation\r\n                (click)=\"closeEditor(tab.viewKey)\">close</mat-icon>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n      @if (vm.view) {\r\n        <app-monaco-editor [filename]=\"vm.view.FileName\" [value]=\"vm.view.Code\"\r\n          (valueChanged)=\"codeChanged($event, vm.viewKey)\" [options]=\"monacoOptions\" [snippets]=\"vm.editorSnipps\"\r\n          [tooltips]=\"vm.tooltips\" [autoFocus]=\"true\">\r\n        </app-monaco-editor>\r\n      }\r\n    </div>\r\n    @if (vm.activeView) {\r\n      <button mat-fab mat-elevation-z24 tippy=\"Click to save or CTRL + S\" (click)=\"save()\">\r\n        <mat-icon>done</mat-icon>\r\n      </button>\r\n    }\r\n  </div>\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CodeEditorComponent } from './code-editor.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CodeEditorComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CodeEditorRoutingModule { }\r\n","import { Component, NgZone, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport type * as Monaco from 'monaco-editor';\r\nimport { BehaviorSubject, combineLatest, forkJoin, fromEvent, map, Observable, of, share, Subscription, switchMap } from 'rxjs';\r\n// tslint:disable-next-line:max-line-length\r\nimport { CreateFileDialogComponent, CreateFileDialogData, CreateFileDialogResult, FileLocationDialogComponent } from '../create-file-dialog';\r\nimport { GeneralHelpers } from '../edit/shared/helpers';\r\nimport { MonacoEditorComponent } from '../monaco-editor';\r\nimport { BaseSubsinkComponent } from '../shared/components/base-subsink-component/base-subsink.component';\r\nimport { keyIsShared, keyItems } from '../shared/constants/session.constants';\r\nimport { ViewOrFileIdentifier } from '../shared/models/edit-form.model';\r\nimport { Context } from '../shared/services/context';\r\nimport { CodeAndEditionWarningsComponent } from './code-and-edition-warnings/code-and-edition-warnings.component';\r\nimport { CodeAndEditionWarningsSnackBarData } from './code-and-edition-warnings/code-and-edition-warnings.models';\r\nimport { CodeEditorViewModel, ExplorerOption, Explorers, Tab, ViewInfo, ViewKey } from './code-editor.models';\r\nimport { CreateTemplateParams } from './code-templates/code-templates.models';\r\nimport { FileAsset } from './models/file-asset.model';\r\nimport { SourceView } from './models/source-view.model';\r\nimport { SnippetsService } from './services/snippets.service';\r\nimport { SourceService } from './services/source.service';\r\n\r\n@Component({\r\n  selector: 'app-code-editor',\r\n  templateUrl: './code-editor.component.html',\r\n  styleUrls: ['./code-editor.component.scss'],\r\n})\r\nexport class CodeEditorComponent extends BaseSubsinkComponent implements OnInit, OnDestroy {\r\n  @ViewChild(MonacoEditorComponent) private monacoEditorRef: MonacoEditorComponent;\r\n\r\n  Explorers = Explorers;\r\n  activeExplorer: ExplorerOption = Explorers.Templates;\r\n  monacoOptions: Monaco.editor.IStandaloneEditorConstructionOptions = {\r\n    theme: '2sxc-dark',\r\n    tabSize: 2,\r\n    fixedOverflowWidgets: true,\r\n  };\r\n  viewModel$: Observable<CodeEditorViewModel>;\r\n\r\n  private templates$: BehaviorSubject<FileAsset[]>;\r\n  private activeView$: BehaviorSubject<ViewKey>;\r\n  private openViews$: BehaviorSubject<ViewKey[]>;\r\n  private viewInfos$: BehaviorSubject<ViewInfo[]>;\r\n  private urlItems: ViewOrFileIdentifier[];\r\n\r\n  constructor(\r\n    private context: Context,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n    private sourceService: SourceService,\r\n    private snippetsService: SnippetsService,\r\n    private zone: NgZone,\r\n    private titleService: Title,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) {\r\n    super();\r\n    this.context.init(this.route);\r\n    const codeItems: ViewOrFileIdentifier[] = JSON.parse(sessionStorage.getItem(keyItems));\r\n    const isShared = sessionStorage.getItem(keyIsShared) === 'true' ?? false;\r\n    codeItems.forEach(codeItem => {\r\n      // remove leading \"/\" from path\r\n      if (codeItem.Path.startsWith('/')) {\r\n        codeItem.Path = codeItem.Path.substring(1);\r\n      }\r\n      codeItem.IsShared ??= isShared;\r\n    });\r\n    this.urlItems = codeItems;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.templates$ = new BehaviorSubject<FileAsset[]>([]);\r\n    const initialViews = this.urlItems.map(item => {\r\n      const viewKey: ViewKey = { key: item.EntityId?.toString() ?? item.Path, shared: item.IsShared };\r\n      return viewKey;\r\n    });\r\n    this.activeView$ = new BehaviorSubject<ViewKey>(initialViews[0]);\r\n    this.openViews$ = new BehaviorSubject<ViewKey[]>(initialViews);\r\n    this.viewInfos$ = new BehaviorSubject<ViewInfo[]>([]);\r\n\r\n    this.attachListeners();\r\n\r\n    this.sourceService.getAll().subscribe(templates => {\r\n      this.templates$.next(templates);\r\n    });\r\n\r\n    this.subscription.add(\r\n      combineLatest([this.templates$, this.openViews$]).subscribe(([templates, openViews]) => {\r\n        if (templates.length === 0) { return; }\r\n\r\n        let viewInfos = this.viewInfos$.value;\r\n        const notLoaded = openViews.filter(viewKey => !viewInfos.some(v => GeneralHelpers.objectsEqual(v.viewKey, viewKey)));\r\n        if (notLoaded.length === 0) { return; }\r\n\r\n        forkJoin(\r\n          notLoaded.map(viewKey => {\r\n            // set viewKey in viewInfos to mark that view is being fetched\r\n            const newViewInfo: ViewInfo = {\r\n              viewKey,\r\n            };\r\n            viewInfos = [...viewInfos, newViewInfo];\r\n\r\n            const view$ = this.sourceService.get(viewKey.key, viewKey.shared, this.urlItems).pipe(share());\r\n            const snippets$ = view$.pipe(switchMap(view => this.snippetsService.getSnippets(view)));\r\n            const tooltips$ = view$.pipe(switchMap(view => this.snippetsService.getTooltips(view.Extension.substring(1))));\r\n            return forkJoin([of(viewKey), view$, snippets$, tooltips$]);\r\n          })\r\n        ).subscribe(results => {\r\n          let viewInfos1 = this.viewInfos$.value;\r\n\r\n          results.forEach(([viewKey, view, snippets, tooltips]) => {\r\n            const selectedIndex = viewInfos1.findIndex(v => GeneralHelpers.objectsEqual(v.viewKey, viewKey));\r\n            if (selectedIndex < 0) { return; }\r\n\r\n            const newViewInfo: ViewInfo = {\r\n              viewKey,\r\n              view,\r\n              explorerSnipps: snippets.sets,\r\n              editorSnipps: snippets.list,\r\n              tooltips,\r\n              savedCode: view.Code,\r\n            };\r\n            viewInfos1 = [...viewInfos1.slice(0, selectedIndex), newViewInfo, ...viewInfos1.slice(selectedIndex + 1)];\r\n            this.showCodeAndEditionWarnings(viewKey, view, templates);\r\n          });\r\n\r\n          this.viewInfos$.next(viewInfos1);\r\n        });\r\n\r\n        this.viewInfos$.next(viewInfos);\r\n      })\r\n    );\r\n\r\n    this.subscription.add(\r\n      combineLatest([this.activeView$, this.viewInfos$]).subscribe(([activeView, viewInfos]) => {\r\n        const active = viewInfos.find(v => GeneralHelpers.objectsEqual(v.viewKey, activeView));\r\n        const defaultTitle = 'Code Editor';\r\n        const newTitle = active == null ? defaultTitle : `${active.view?.FileName} - ${defaultTitle}`;\r\n        const oldTitle = this.titleService.getTitle();\r\n        if (newTitle !== oldTitle) {\r\n          this.titleService.setTitle(newTitle);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.viewModel$ = combineLatest([this.templates$, this.activeView$, this.openViews$, this.viewInfos$]).pipe(\r\n      map(([templates, activeView, openViews, viewInfos]) => {\r\n        const tabs = openViews.map(viewKey => {\r\n          const viewInfo = viewInfos.find(v => GeneralHelpers.objectsEqual(v.viewKey, viewKey));\r\n          const label: Tab = {\r\n            viewKey,\r\n            label: viewInfo?.view?.FileName ?? viewKey.key,\r\n            isActive: GeneralHelpers.objectsEqual(viewKey, activeView),\r\n            isModified: viewInfo?.view?.Code !== viewInfo?.savedCode,\r\n            isLoading: viewInfo?.view == null,\r\n          };\r\n          return label;\r\n        });\r\n        const activeViewInfo = viewInfos.find(v => GeneralHelpers.objectsEqual(v.viewKey, activeView));\r\n\r\n        const viewModel: CodeEditorViewModel = {\r\n          activeView,\r\n          tabs,\r\n          viewKey: activeViewInfo?.viewKey,\r\n          view: activeViewInfo?.view,\r\n          templates,\r\n          explorerSnipps: activeViewInfo?.explorerSnipps,\r\n          editorSnipps: activeViewInfo?.editorSnipps,\r\n          tooltips: activeViewInfo?.tooltips,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.templates$.complete();\r\n    this.activeView$.complete();\r\n    this.openViews$.complete();\r\n    this.viewInfos$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  toggleExplorer(explorer: ExplorerOption): void {\r\n    this.activeExplorer = (this.activeExplorer !== explorer) ? explorer : null;\r\n  }\r\n\r\n  createTemplate(params: CreateTemplateParams): void {\r\n    // This FileLocationDialogComponent dialog is currently never going to be opened because it has been replaced by mat-menu\r\n    // in the code-templates.component.html template. If you want to use the dialog instead of the menu, you need to remove the\r\n    // mat-menu and replace it with a button that opens the dialog with empty parameters.\r\n    // Dialog has been replaced by menu because from update to Angular 16 CreateFileDialogComponent wasn't opening anymore if \r\n    // FileLocationDialogComponent dialog was used.\r\n    // if (params.isShared == null) {\r\n    //   const fileLocationDialogRef = this.dialog.open(FileLocationDialogComponent, {\r\n    //     autoFocus: false,\r\n    //     viewContainerRef: this.viewContainerRef,\r\n    //     width: '650px',\r\n    //   });\r\n    //   fileLocationDialogRef.afterClosed().subscribe((isShared?: boolean) => {\r\n    //     if (isShared == null) { return; }\r\n    //     params.isShared = isShared;\r\n    //     this.createTemplate(params);\r\n    //   });\r\n    //   return;\r\n    // }\r\n\r\n    const createFileDialogData: CreateFileDialogData = {\r\n      folder: params.folder,\r\n      global: params.isShared,\r\n      purpose: params.folder === 'api' || params.folder?.startsWith('api/') ? 'Api' : undefined,\r\n    };\r\n    const createFileDialogRef = this.dialog.open(CreateFileDialogComponent, {\r\n      autoFocus: false,\r\n      data: createFileDialogData,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n\r\n    createFileDialogRef.afterClosed().subscribe((result?: CreateFileDialogResult) => {\r\n      if (!result) { return; }\r\n\r\n      this.sourceService.create(result.name, params.isShared, result.templateKey).subscribe(() => {\r\n        this.sourceService.getAll().subscribe(files => {\r\n          this.templates$.next(files);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  insertSnippet(snippet: string): void {\r\n    this.monacoEditorRef?.insertSnippet(snippet);\r\n  }\r\n\r\n  codeChanged(code: string, viewKey: ViewKey): void {\r\n    let viewInfos = this.viewInfos$.value;\r\n    const selectedIndex = viewInfos.findIndex(v => GeneralHelpers.objectsEqual(v.viewKey, viewKey));\r\n    const selectedViewInfo = viewInfos[selectedIndex];\r\n    const newViewInfo: ViewInfo = {\r\n      ...selectedViewInfo,\r\n      view: {\r\n        ...selectedViewInfo.view,\r\n        Code: code,\r\n      },\r\n    };\r\n    viewInfos = [...viewInfos.slice(0, selectedIndex), newViewInfo, ...viewInfos.slice(selectedIndex + 1)];\r\n    this.viewInfos$.next(viewInfos);\r\n  }\r\n\r\n  openView(viewKey: ViewKey): void {\r\n    // fix viewKey because it can be a templateId or a path, and file might already be open\r\n    viewKey = this.viewInfos$.value.find(\r\n      v => !GeneralHelpers.objectsEqual(v.viewKey, viewKey) && v.view?.FileName === viewKey.key && v.view?.IsShared === viewKey.shared\r\n    )?.viewKey ?? viewKey;\r\n\r\n    const oldActiveView = this.activeView$.value;\r\n    if (!GeneralHelpers.objectsEqual(oldActiveView, viewKey)) {\r\n      this.activeView$.next(viewKey);\r\n    }\r\n    const oldOpenViews = this.openViews$.value;\r\n    if (!oldOpenViews.some(v => GeneralHelpers.objectsEqual(v, viewKey))) {\r\n      const newOpenViews = [...oldOpenViews, viewKey];\r\n      this.openViews$.next(newOpenViews);\r\n    }\r\n  }\r\n\r\n  closeEditor(viewKey: ViewKey): void {\r\n    const oldOpenViews = this.openViews$.value;\r\n    const newOpenViews = oldOpenViews.filter(key => !GeneralHelpers.objectsEqual(key, viewKey));\r\n\r\n    const oldActiveView = this.activeView$.value;\r\n    if (GeneralHelpers.objectsEqual(oldActiveView, viewKey)) {\r\n      const newActiveView = oldOpenViews[oldOpenViews.findIndex(v => GeneralHelpers.objectsEqual(v, oldActiveView)) - 1] ?? newOpenViews[0];\r\n      this.activeView$.next(newActiveView);\r\n    }\r\n\r\n    this.openViews$.next(newOpenViews);\r\n  }\r\n\r\n  save(viewKey?: ViewKey): void {\r\n    viewKey ??= this.activeView$.value;\r\n    const viewInfo = this.viewInfos$.value.find(v => GeneralHelpers.objectsEqual(v.viewKey, viewKey));\r\n    if (viewInfo?.view == null) { return; }\r\n\r\n    this.snackBar.open('Saving...');\r\n    const codeToSave = viewInfo.view.Code;\r\n    this.sourceService.save(viewKey.key, viewKey.shared, viewInfo.view, this.urlItems).subscribe({\r\n      next: res => {\r\n        if (!res) {\r\n          this.snackBar.open('Failed', null, { duration: 2000 });\r\n          return;\r\n        }\r\n\r\n        let newViewInfos = [...this.viewInfos$.value];\r\n        const selectedIndex = newViewInfos.findIndex(v => GeneralHelpers.objectsEqual(v.viewKey, viewKey));\r\n        if (selectedIndex < 0) { return; }\r\n\r\n        const selectedViewInfo = newViewInfos[selectedIndex];\r\n        const newViewInfo: ViewInfo = {\r\n          ...selectedViewInfo,\r\n          savedCode: codeToSave,\r\n        };\r\n        newViewInfos = [...newViewInfos.slice(0, selectedIndex), newViewInfo, ...newViewInfos.slice(selectedIndex + 1)];\r\n        this.viewInfos$.next(newViewInfos);\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n      },\r\n      error: () => {\r\n        this.snackBar.open('Failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Show info about editions if other files with the same name exist */\r\n  private showCodeAndEditionWarnings(viewKey: ViewKey, view: SourceView, files: FileAsset[]): void {\r\n    const pathAndName = view.FileName;\r\n    const pathSeparator = pathAndName.indexOf('/') > -1 ? pathAndName.lastIndexOf('/') + 1 : 0;\r\n    const pathWithSlash = pathSeparator === 0 ? '' : pathAndName.substring(0, pathSeparator);\r\n    const fullName = pathAndName.substring(pathSeparator);\r\n    const name = fullName.substring(0, fullName.length - view.Extension.length);\r\n    const nameCode = name + '.code' + view.Extension;\r\n    // find out if we also have a code file\r\n    const codeFile = files.find(file => file.Path === pathWithSlash + nameCode && file.Shared === view.IsShared);\r\n    const otherEditions = files.filter(file => file.Path.endsWith(fullName) && file.Shared === view.IsShared).length - 1;\r\n\r\n    if (codeFile || otherEditions) {\r\n      const snackBarData: CodeAndEditionWarningsSnackBarData = {\r\n        fileName: fullName,\r\n        codeFile: codeFile?.Path,\r\n        edition: this.urlItems\r\n          .find(i => i.EntityId?.toString() === viewKey.key && i.IsShared === view.IsShared && i.Path === view.FileName)?.Edition,\r\n        otherEditions,\r\n        openCodeBehind: false,\r\n      };\r\n      const snackBarRef = this.snackBar.openFromComponent(CodeAndEditionWarningsComponent, {\r\n        data: snackBarData,\r\n        duration: 10000,\r\n      });\r\n\r\n      snackBarRef.onAction().subscribe(() => {\r\n        if ((snackBarRef.containerInstance.snackBarConfig.data as CodeAndEditionWarningsSnackBarData).openCodeBehind) {\r\n          const openViewKey: ViewKey = { key: codeFile?.Path, shared: codeFile?.Shared };\r\n          this.openView(openViewKey);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private attachListeners(): void {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscription.add(\r\n        fromEvent<BeforeUnloadEvent>(window, 'beforeunload').subscribe(event => {\r\n          const allSaved = !this.viewInfos$.value.some(v => v.view != null && v.view.Code !== v.savedCode);\r\n          if (allSaved) { return; }\r\n          event.preventDefault();\r\n          event.returnValue = ''; // fix for Chrome\r\n        })\r\n      );\r\n      this.subscription.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown').subscribe(event => {\r\n          const CTRL_S = event.keyCode === 83 && (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey);\r\n          if (!CTRL_S) { return; }\r\n          event.preventDefault();\r\n          this.zone.run(() => { this.save(); });\r\n        })\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { CreateFileDialogModule } from '../create-file-dialog';\r\nimport { MonacoEditorModule } from '../monaco-editor';\r\nimport { EavWindow } from '../shared/models/eav-window.model';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { buildTranslateConfiguration, TranslateLoaderWithErrorHandling } from '../shared/translation';\r\nimport { CodeAndEditionWarningsComponent } from './code-and-edition-warnings/code-and-edition-warnings.component';\r\nimport { CodeEditorRoutingModule } from './code-editor-routing.module';\r\nimport { CodeEditorComponent } from './code-editor.component';\r\nimport { CodeSnippetsComponent } from './code-snippets/code-snippets.component';\r\nimport { ObjectToArrayPipe } from './code-snippets/object-to-array.pipe';\r\nimport { CodeTemplatesComponent } from './code-templates/code-templates.component';\r\nimport { DepthPaddingPipe } from './code-templates/depth-padding.pipe';\r\nimport { SortItemsPipe } from './code-templates/order-items.pipe';\r\nimport { SnippetsService } from './services/snippets.service';\r\nimport { SourceService } from './services/source.service';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n// AoT requires an exported function for factories\r\n// at least according to https://github.com/ngx-translate/http-loader\r\nexport function translateLoaderFactoryCode(http: HttpClient) {\r\n  return new TranslateLoaderWithErrorHandling(http, './i18n/code-editor.', `.js?${window.sxcVersion}`);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CodeEditorComponent,\r\n    CodeSnippetsComponent,\r\n    ObjectToArrayPipe,\r\n    CodeTemplatesComponent,\r\n    DepthPaddingPipe,\r\n    SortItemsPipe,\r\n    CodeAndEditionWarningsComponent,\r\n  ],\r\n  imports: [\r\n    CodeEditorRoutingModule,\r\n    SharedComponentsModule,\r\n    CommonModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n    MatRippleModule,\r\n    MatMenuModule,\r\n    TranslateModule.forChild(buildTranslateConfiguration(translateLoaderFactoryCode)),\r\n    MonacoEditorModule,\r\n    MatProgressSpinnerModule,\r\n    CreateFileDialogModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    SourceService,\r\n    SnippetsService,\r\n    TranslateService,\r\n  ],\r\n})\r\nexport class CodeEditorModule { }\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { ContentType } from '../../app-administration/models/content-type.model';\r\nimport { webApiTypeRoot } from '../../app-administration/services/content-types.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Field, FieldInputTypeOption } from '../models/field.model';\r\nimport { InputType } from '../models/input-type.model';\r\nimport { ReservedNames } from '../models/reserved-names.model';\r\nimport { InputTypeStrict } from '../constants/input-type.constants';\r\n\r\nexport const webApiFieldsRoot = 'admin/field/';\r\nexport const webApiFieldsAll = 'admin/field/all';\r\nexport const webApiFieldsGetShared = 'admin/field/GetSharedFields';\r\n\r\n@Injectable()\r\nexport class ContentTypesFieldsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  typeListRetrieve() {\r\n    return this.http.get<string[]>(this.apiUrl(webApiFieldsRoot + 'DataTypes'), {\r\n      params: { appid: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getInputTypesList() {\r\n    return this.http\r\n      .get<InputType[]>(this.apiUrl(webApiFieldsRoot + 'InputTypes'), { params: { appid: this.context.appId.toString() } })\r\n      .pipe(\r\n        map(inputConfigs => {\r\n          const inputTypeOptions = inputConfigs.map(config => {\r\n            const option: FieldInputTypeOption = {\r\n              dataType: config.Type.substring(0, config.Type.indexOf('-')),\r\n              inputType: config.Type,\r\n              label: config.Label,\r\n              description: config.Description,\r\n              isDefault: config.IsDefault,\r\n              isObsolete: config.IsObsolete,\r\n              isRecommended: config.IsRecommended,\r\n              obsoleteMessage: config.ObsoleteMessage,\r\n              icon: config.IsDefault ? 'star' : config.IsRecommended ? 'star_outline' : null,\r\n            };\r\n            return option;\r\n          });\r\n          return inputTypeOptions;\r\n        }),\r\n      );\r\n  }\r\n\r\n  getReservedNames() {\r\n    return this.http.get<ReservedNames>(this.apiUrl(webApiFieldsRoot + 'ReservedNames'));\r\n  }\r\n\r\n  /** Get all fields for some content type */\r\n  getFields(contentTypeStaticName: string) {\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsAll), {\r\n        params: { appid: this.context.appId.toString(), staticName: contentTypeStaticName },\r\n      })\r\n      .pipe(\r\n        map(fields => {\r\n          if (fields) {\r\n            for (const fld of fields) {\r\n              if (!fld.Metadata) { continue; }\r\n              const md = fld.Metadata;\r\n              const allMd = md.All;\r\n              const typeMd = md[fld.Type];\r\n              const inputMd = md[fld.InputType];\r\n              md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n            }\r\n          }\r\n          return fields;\r\n        }),\r\n      );\r\n  }\r\n\r\n  /** Get all possible sharable fields for a new sharing */\r\n  getShareableFields() {\r\n    return this.http.get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString() },\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Get sharable fields which are possible for this attribute.\r\n   * \r\n   * Reason is that eg. a bool-attribute can only receive metadata from a bool attribute, etc.\r\n   * \r\n   * @param attributeId the existing attributeId which will receive the new metadata\r\n   */\r\n  getShareableFieldsFor(attributeId: number) {\r\n    // TODO: @SDV - do the same as in getShareableFields()\r\n    // but add parameter attributeId to the webapi call\r\n    // I'll create the backend afterwards\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString(), attributeId: attributeId.toString() },\r\n      });\r\n  }\r\n\r\n  addInheritedField(targetContentTypeId: number, sourceContentTypeStaticName: string, sourceFieldGuid: string, newName: string) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'AddInheritedField'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: targetContentTypeId.toString(),\r\n        SourceType: sourceContentTypeStaticName,\r\n        SourceField: sourceFieldGuid,\r\n        name: newName,\r\n      }\r\n    });\r\n  }\r\n\r\n  share(attributeId: number, share: boolean = true) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Share'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        share,\r\n      },\r\n    });\r\n  }\r\n\r\n  inherit(attributeId: number, sourceFieldGuid: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Inherit'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        inheritMetadataOf: sourceFieldGuid,\r\n      },\r\n    });\r\n  }\r\n\r\n  reOrder(idArray: number[], contentType: ContentType) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'Sort'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        order: JSON.stringify(idArray),\r\n      },\r\n    });\r\n  }\r\n\r\n  setTitle(item: Field, contentType: ContentType) {\r\n    return this.http.post<null>(this.apiUrl(webApiTypeRoot + 'SetTitle'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  rename(fieldId: number, contentTypeId: number, newName: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Rename'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentTypeId.toString(),\r\n        attributeId: fieldId.toString(),\r\n        newName,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(item: Field, contentType: ContentType) {\r\n    if (item.IsTitle) {\r\n      throw new Error('Can\\'t delete Title');\r\n    }\r\n\r\n    return this.http.delete<boolean>(this.apiUrl(webApiFieldsRoot + 'Delete'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  add(newField: Partial<Field>, contentTypeId: number) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'Add'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: contentTypeId.toString(),\r\n        Id: newField.Id.toString(),\r\n        Type: newField.Type,\r\n        InputType: newField.InputType,\r\n        StaticName: newField.StaticName,\r\n        IsTitle: newField.IsTitle.toString(),\r\n        Index: newField.SortOrder.toString(),\r\n      }\r\n    });\r\n  }\r\n\r\n  updateInputType(id: number, staticName: string, inputType: InputTypeStrict) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'InputType'), null, {\r\n      params: { appId: this.context.appId.toString(), attributeId: id.toString(), field: staticName, inputType }\r\n    });\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MonacoEditorComponent } from './monaco-editor.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    MonacoEditorComponent,\r\n  ],\r\n  exports: [\r\n    MonacoEditorComponent,\r\n  ],\r\n})\r\nexport class MonacoEditorModule { }\r\n","// Inspired by https://schneidenbach.gitbooks.io/typescript-cookbook/content/nameof-operator.html\r\nexport const nameof = <T>(name: keyof T) => name;\r\n","import type * as Monaco from 'monaco-editor';\r\nimport { JsonSchema, Monaco2sxc } from '.';\r\nimport { Snippet } from '../code-editor/models/snippet.model';\r\nimport { Tooltip } from '../code-editor/models/tooltip.model';\r\n\r\nexport const voidElements = 'area, base, br, col, embed, hr, img, input, link, meta, param, source, track, wbr'\r\n  .split(',')\r\n  .map(el => el.trim().toLocaleLowerCase());\r\n\r\nexport class MonacoInstance {\r\n  /** Editor instance configuration */\r\n  private editorInstance: Monaco.editor.IStandaloneCodeEditor;\r\n  private completionItemProviders: Monaco.IDisposable[];\r\n  private jsTypingsLib?: Monaco.IDisposable;\r\n  private resizeObserver: ResizeObserver;\r\n  private globalCache: Monaco2sxc;\r\n  private cachedValue: string;\r\n  private valueChangedCallback?: (value: string) => void;\r\n  private focusedCallback?: () => void;\r\n  private blurredCallback?: () => void;\r\n\r\n  constructor(\r\n    /** Global Monaco configuration */\r\n    private monaco: typeof Monaco,\r\n    private filename: string,\r\n    value: string,\r\n    container: HTMLElement,\r\n    options: Monaco.editor.IStandaloneEditorConstructionOptions,\r\n    private snippets: Snippet[],\r\n    private tooltips: Tooltip[],\r\n  ) {\r\n    this.globalCache = this.createGlobalCache(monaco);\r\n    this.defineThemes(this.globalCache, this.monaco);\r\n    this.cachedValue = value;\r\n    this.editorInstance = this.createInstance(this.monaco, filename, value, container, options);\r\n    this.completionItemProviders = this.addSnippets(this.monaco, this.editorInstance);\r\n    this.resizeObserver = this.createResizeObserver(container, this.editorInstance);\r\n    this.restoreState(this.globalCache, this.editorInstance);\r\n    this.addEvents(this.editorInstance);\r\n  }\r\n\r\n  destroy(): void {\r\n    this.saveState(this.globalCache, this.editorInstance);\r\n    this.resizeObserver.disconnect();\r\n    this.completionItemProviders.forEach(completionItemProvider => completionItemProvider.dispose());\r\n    this.jsTypingsLib?.dispose();\r\n    this.editorInstance.getModel().dispose();\r\n    this.editorInstance.dispose();\r\n  }\r\n\r\n  updateValue(value: string): void {\r\n    if (this.cachedValue === value) { return; }\r\n    this.cachedValue = value;\r\n    this.editorInstance.getModel().setValue(value);\r\n  }\r\n\r\n  focus(): void {\r\n    this.editorInstance.focus();\r\n  }\r\n\r\n  onValueChange(callback: (value: string) => void): void {\r\n    this.valueChangedCallback = callback;\r\n  }\r\n\r\n  onFocus(callback: () => void): void {\r\n    this.focusedCallback = callback;\r\n  }\r\n\r\n  onBlur(callback: () => void): void {\r\n    this.blurredCallback = callback;\r\n  }\r\n\r\n  insertSnippet(snippet: string): void {\r\n    const snippetController = this.editorInstance\r\n      .getContribution<Monaco.editor.IEditorContribution & { insert(template: string, opts?: Record<string, any>): void; }>('snippetController2');\r\n    snippetController.insert(snippet);\r\n  }\r\n\r\n  setSnippets(snippets: Snippet[]): void {\r\n    this.snippets = snippets;\r\n  }\r\n\r\n  setTooltips(tooltips: Tooltip[]): void {\r\n    this.tooltips = tooltips;\r\n  }\r\n\r\n  setJsonSchema(jsonSchema?: JsonSchema): void {\r\n    const uri = this.editorInstance.getModel().uri.toString();\r\n    const oldJsonDiagnostics = this.monaco.languages.json.jsonDefaults.diagnosticsOptions;\r\n    const exists = oldJsonDiagnostics.schemas?.some(schema => schema.fileMatch[0] === uri) ?? false;\r\n\r\n    const newSchema: Monaco.languages.json.DiagnosticsOptions['schemas'][0] = jsonSchema?.type === 'link'\r\n      ? { uri: jsonSchema.value, fileMatch: [uri] }\r\n      : jsonSchema?.type === 'raw'\r\n        ? { uri, fileMatch: [uri], schema: JSON.parse(jsonSchema.value) }\r\n        : undefined;\r\n\r\n    if (!exists && !newSchema) { return; }\r\n\r\n    const newJsonDiagnostics: Monaco.languages.json.DiagnosticsOptions = {\r\n      ...oldJsonDiagnostics,\r\n      enableSchemaRequest: true,\r\n      schemas: exists && !newSchema\r\n        ? oldJsonDiagnostics.schemas.filter(schema => schema.fileMatch[0] !== uri)\r\n        : exists\r\n          ? oldJsonDiagnostics.schemas.map(schema => schema.fileMatch[0] === uri ? newSchema : schema)\r\n          : [...(oldJsonDiagnostics.schemas ?? []), newSchema],\r\n    };\r\n\r\n    this.monaco.languages.json.jsonDefaults.setDiagnosticsOptions(newJsonDiagnostics);\r\n  }\r\n\r\n  setJsonComments(comments?: Monaco.languages.json.SeverityLevel): void {\r\n    if (!comments) { return; }\r\n\r\n    const jsonDiagnostics: Monaco.languages.json.DiagnosticsOptions = {\r\n      ...this.monaco.languages.json.jsonDefaults.diagnosticsOptions,\r\n      comments,\r\n    };\r\n    this.monaco.languages.json.jsonDefaults.setDiagnosticsOptions(jsonDiagnostics);\r\n  }\r\n\r\n  setJsDiagnostics(options: Monaco.languages.typescript.DiagnosticsOptions): void {\r\n    if (!options) { return; }\r\n\r\n    const javascriptDiagnostics: Monaco.languages.typescript.DiagnosticsOptions = {\r\n      ...this.monaco.languages.typescript.javascriptDefaults.getDiagnosticsOptions(),\r\n      ...options,\r\n    };\r\n    this.monaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions(javascriptDiagnostics);\r\n  }\r\n\r\n  setJsTypings(typings: string): void {\r\n    if (!typings) {\r\n      this.jsTypingsLib?.dispose();\r\n      return;\r\n    }\r\n    this.jsTypingsLib = this.monaco.languages.typescript.javascriptDefaults.addExtraLib(typings, `js-typings-${this.filename}`);\r\n  }\r\n\r\n  private createGlobalCache(monaco: typeof Monaco & { _2sxc?: Monaco2sxc }): Monaco2sxc {\r\n    if (monaco._2sxc == null) {\r\n      const _2sxc: Monaco2sxc = {\r\n        themesAreDefined: false,\r\n        savedStates: {},\r\n      };\r\n      monaco._2sxc = _2sxc;\r\n    }\r\n    return monaco._2sxc;\r\n  }\r\n\r\n  /** Registers our themes. Themes are global. Run before creating editor */\r\n  private defineThemes(globalCache: Monaco2sxc, monaco: typeof Monaco): void {\r\n    // there is currently no official way to get defined themes from Monaco to check if some theme was already defined\r\n    if (globalCache.themesAreDefined) { return; }\r\n    globalCache.themesAreDefined = true;\r\n\r\n    monaco.editor.defineTheme('2sxc-dark', {\r\n      base: 'vs-dark',\r\n      inherit: true,\r\n      rules: [\r\n        { token: 'metatag.cs', foreground: 'ffff00' },\r\n      ],\r\n      colors: {\r\n      },\r\n    });\r\n  }\r\n\r\n  private createInstance(\r\n    monaco: typeof Monaco,\r\n    filename: string,\r\n    value: string,\r\n    container: HTMLElement,\r\n    options: Monaco.editor.IStandaloneEditorConstructionOptions,\r\n  ): Monaco.editor.IStandaloneCodeEditor {\r\n    const editorInstance = monaco.editor.create(container, options);\r\n    const editorModelUri = monaco.Uri.file(filename);\r\n    const editorModel = monaco.editor.createModel(value, undefined, editorModelUri);\r\n    editorInstance.setModel(editorModel);\r\n    return editorInstance;\r\n  }\r\n\r\n  private saveState(globalCache: Monaco2sxc, editorInstance: Monaco.editor.IStandaloneCodeEditor): void {\r\n    const uri = editorInstance.getModel().uri.toString();\r\n    const viewState = JSON.stringify(editorInstance.saveViewState());\r\n\r\n    if (globalCache.savedStates[uri] == null) {\r\n      globalCache.savedStates[uri] = { viewState };\r\n    } else {\r\n      globalCache.savedStates[uri].viewState = viewState;\r\n    }\r\n  }\r\n\r\n  private restoreState(globalCache: Monaco2sxc, editorInstance: Monaco.editor.IStandaloneCodeEditor): void {\r\n    const uri = editorInstance.getModel().uri.toString();\r\n    const savedState = globalCache.savedStates[uri];\r\n    if (savedState == null) { return; }\r\n\r\n    const viewState: Monaco.editor.ICodeEditorViewState = JSON.parse(savedState.viewState);\r\n    editorInstance.restoreViewState(viewState);\r\n  }\r\n\r\n  private addSnippets(monaco: typeof Monaco, editorInstance: Monaco.editor.IStandaloneCodeEditor): Monaco.IDisposable[] {\r\n    const completionItemProviders = [\r\n      monaco.languages.registerCompletionItemProvider(editorInstance.getModel().getLanguageId(), {\r\n        triggerCharacters: ['>'],\r\n        provideCompletionItems: (model, position) => {\r\n          if (editorInstance.getModel() !== model) { return { suggestions: [] }; }\r\n\r\n          const textUntilPosition: string = model.getValueInRange({\r\n            startLineNumber: position.lineNumber,\r\n            startColumn: 1,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column,\r\n          });\r\n\r\n          // sometimes trigger character is wrong\r\n          const trigger = textUntilPosition[textUntilPosition.length - 1];\r\n          if (trigger !== '>') { return { suggestions: [] }; }\r\n\r\n          const tagStartIndex = textUntilPosition.lastIndexOf('<');\r\n          if (tagStartIndex === -1) { return { suggestions: [] }; }\r\n\r\n          const codeInTag = textUntilPosition.substring(tagStartIndex);\r\n          // check that > is not in between quotes like in <div class=\"car>\"\r\n          let quotes = 0;\r\n          Array.from(codeInTag).forEach(c => {\r\n            if (c === '\"') { quotes++; }\r\n          });\r\n          if (quotes % 2 !== 0) { return { suggestions: [] }; }\r\n          // check that it's not a closing tag\r\n          if (codeInTag.startsWith('</')) { return { suggestions: [] }; }\r\n          // check that tag is not already closed\r\n          if (codeInTag.indexOf('>') !== codeInTag.length - 1) { return { suggestions: [] }; }\r\n\r\n          // tag name ends with space or tag is closed completely\r\n          let tagEndIndex = codeInTag.indexOf(' ');\r\n          if (tagEndIndex === -1) {\r\n            tagEndIndex = codeInTag.indexOf('>');\r\n          }\r\n          if (tagEndIndex === -1) { return { suggestions: [] }; }\r\n\r\n          const tag = codeInTag.substring(1, tagEndIndex);\r\n          if (!tag) { return { suggestions: [] }; }\r\n          if (voidElements.includes(tag.toLocaleLowerCase())) { return { suggestions: [] }; }\r\n          if (!/[a-zA-Z0-9_-]/.test(tag)) { return { suggestions: [] }; }\r\n\r\n          const suggestions: Monaco.languages.CompletionItem[] = [{\r\n            label: `</${tag}>`,\r\n            kind: monaco.languages.CompletionItemKind.Snippet,\r\n            insertText: `\\$0</${tag}>`,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            range: {\r\n              startLineNumber: position.lineNumber,\r\n              endLineNumber: position.lineNumber,\r\n              startColumn: position.column,\r\n              endColumn: position.column,\r\n            },\r\n          }];\r\n          return { suggestions };\r\n        },\r\n      }),\r\n\r\n      monaco.languages.registerCompletionItemProvider(editorInstance.getModel().getLanguageId(), {\r\n        provideCompletionItems: (model, position) => {\r\n          if (this.snippets == null || editorInstance.getModel() !== model) { return { suggestions: [] }; }\r\n\r\n          const word = model.getWordUntilPosition(position);\r\n          const suggestions = this.snippets.map(snippet => {\r\n            if (!snippet.content) { return; }\r\n            const suggestion: Monaco.languages.CompletionItem = {\r\n              label: snippet.name,\r\n              kind: monaco.languages.CompletionItemKind.Snippet,\r\n              documentation: `${snippet.title ?? ''}\\n${snippet.help ?? ''}\\n${snippet.links ?? ''}`,\r\n              insertText: snippet.content,\r\n              insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n              range: {\r\n                startLineNumber: position.lineNumber,\r\n                endLineNumber: position.lineNumber,\r\n                startColumn: word.startColumn,\r\n                endColumn: word.endColumn\r\n              },\r\n            };\r\n            return suggestion;\r\n          }).filter(suggestion => !!suggestion);\r\n          return { suggestions };\r\n        },\r\n      }),\r\n\r\n      monaco.languages.registerHoverProvider(editorInstance.getModel().getLanguageId(), {\r\n        provideHover: (model, position) => {\r\n          if (this.tooltips == null || editorInstance.getModel() !== model) { return; }\r\n\r\n          const word = model.getWordAtPosition(position);\r\n          if (!word) { return; }\r\n\r\n          const tooltip = this.tooltips.find(i => i.Term === word.word);\r\n          if (!tooltip) { return; }\r\n\r\n          return {\r\n            contents: tooltip.Help.map(value => {\r\n              const content: Monaco.IMarkdownString = {\r\n                value,\r\n              };\r\n              return content;\r\n            }),\r\n            range: {\r\n              startLineNumber: position.lineNumber,\r\n              endLineNumber: position.lineNumber,\r\n              startColumn: word.startColumn,\r\n              endColumn: word.endColumn,\r\n            },\r\n          };\r\n        }\r\n      }),\r\n    ];\r\n\r\n    return completionItemProviders;\r\n  }\r\n\r\n  private createResizeObserver(container: HTMLElement, editorInstance: Monaco.editor.IStandaloneCodeEditor): ResizeObserver {\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      editorInstance.layout();\r\n    });\r\n    resizeObserver.observe(container);\r\n    return resizeObserver;\r\n  }\r\n\r\n  private addEvents(editorInstance: Monaco.editor.IStandaloneCodeEditor): void {\r\n    editorInstance.getModel().onDidChangeContent(() => {\r\n      const newValue = editorInstance.getModel().getValue();\r\n      if (newValue === this.cachedValue) { return; }\r\n      this.cachedValue = newValue;\r\n      this.valueChangedCallback?.(newValue);\r\n    });\r\n\r\n    editorInstance.onDidFocusEditorWidget(() => {\r\n      this.focusedCallback?.();\r\n    });\r\n\r\n    editorInstance.onDidBlurEditorWidget(() => {\r\n      this.blurredCallback?.();\r\n    });\r\n\r\n    // this.editorInstance.onDidChangeModelDecorations(e => {\r\n    //   const value = this.editorInstance.getModel().getValue();\r\n    //   const markers = this.monaco.editor.getModelMarkers({}).filter(marker => marker.resource.path === `/${this.filename}`);\r\n    //   const valid = !markers.some(\r\n    //     marker => marker.severity === this.monaco.MarkerSeverity.Error || marker.severity === this.monaco.MarkerSeverity.Warning\r\n    //   );\r\n    // });\r\n\r\n    // this.monaco.editor.onDidChangeMarkers(() => {\r\n    //   // markers updates are async and lagging behind value updates\r\n    //   const markers = this.monaco.editor.getModelMarkers({}).filter(marker => marker.resource.path === `/${this.filename}`);\r\n    //   if (markers.some(marker => marker.severity === this.monaco.MarkerSeverity.Error)) {\r\n    //     // has errors\r\n    //   } else if (markers.some(marker => marker.severity === this.monaco.MarkerSeverity.Warning)) {\r\n    //     // has warnings\r\n    //   } else {\r\n    //     // has no errors or warnings\r\n    //   }\r\n    // });\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport type * as Monaco from 'monaco-editor';\r\nimport { JsonSchema } from '.';\r\nimport { Snippet } from '../code-editor/models/snippet.model';\r\nimport { Tooltip } from '../code-editor/models/tooltip.model';\r\nimport { EavWindow } from '../shared/models/eav-window.model';\r\nimport { nameof } from '../shared/typescript-helpers';\r\nimport { MonacoInstance } from './monaco-instance';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-monaco-editor',\r\n  templateUrl: './monaco-editor.component.html',\r\n  styleUrls: ['./monaco-editor.component.scss'],\r\n})\r\nexport class MonacoEditorComponent implements AfterViewInit, OnChanges, OnDestroy {\r\n  @ViewChild('editor') private editorRef: ElementRef<HTMLElement>;\r\n  @Input() filename: string;\r\n  @Input() value: string;\r\n  @Input() snippets?: Snippet[];\r\n  @Input() tooltips?: Tooltip[];\r\n  @Input() options?: Monaco.editor.IStandaloneEditorConstructionOptions;\r\n  @Input() jsonSchema?: JsonSchema;\r\n  @Input() jsonComments?: Monaco.languages.json.SeverityLevel;\r\n  @Input() jsTypings?: string;\r\n  @Input() jsDiagnostics?: Monaco.languages.typescript.DiagnosticsOptions;\r\n  @Input() autoFocus = false;\r\n  @Output() private valueChanged = new EventEmitter<string>();\r\n  @Output() private focused = new EventEmitter<undefined>();\r\n  @Output() private blurred = new EventEmitter<undefined>();\r\n\r\n  private monaco?: typeof Monaco;\r\n  private monacoInstance?: MonacoInstance;\r\n\r\n  constructor() { }\r\n\r\n  ngAfterViewInit(): void {\r\n    window.require.config({\r\n      paths: {\r\n        vs: ['https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.46.0/min/vs'],\r\n      },\r\n    });\r\n\r\n    window.require(['vs/editor/editor.main'], (monaco: typeof Monaco) => {\r\n      this.monaco = monaco;\r\n      this.createEditor(this.autoFocus);\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes[nameof<MonacoEditorComponent>('filename')] != null && this.monacoInstance != null) {\r\n      this.monacoInstance.destroy();\r\n      this.createEditor(true);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('value')] != null) {\r\n      this.monacoInstance?.updateValue(this.value);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('jsonSchema')] != null) {\r\n      this.monacoInstance?.setJsonSchema(this.jsonSchema);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('jsonComments')] != null) {\r\n      this.monacoInstance?.setJsonComments(this.jsonComments);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('snippets')] != null) {\r\n      this.monacoInstance?.setSnippets(this.snippets);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('tooltips')] != null) {\r\n      this.monacoInstance?.setTooltips(this.tooltips);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('jsTypings')] != null) {\r\n      this.monacoInstance?.setJsTypings(this.jsTypings);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('jsDiagnostics')] != null) {\r\n      this.monacoInstance?.setJsDiagnostics(this.jsDiagnostics);\r\n    }\r\n  }\r\n\r\n  insertSnippet(snippet: string): void {\r\n    this.monacoInstance?.insertSnippet(snippet);\r\n    this.monacoInstance?.focus();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.monacoInstance?.destroy();\r\n  }\r\n\r\n  private createEditor(autoFocus: boolean): void {\r\n    this.monacoInstance = new MonacoInstance(\r\n      this.monaco, this.filename, this.value, this.editorRef.nativeElement, this.options, this.snippets, this.tooltips,\r\n    );\r\n\r\n    this.monacoInstance.setJsonSchema(this.jsonSchema);\r\n    this.monacoInstance.setJsonComments(this.jsonComments);\r\n    this.monacoInstance.setJsTypings(this.jsTypings);\r\n    this.monacoInstance.setJsDiagnostics(this.jsDiagnostics);\r\n\r\n    this.monacoInstance.onValueChange(value => {\r\n      this.valueChanged.emit(value);\r\n    });\r\n\r\n    this.monacoInstance.onFocus(() => {\r\n      this.focused.emit();\r\n    });\r\n\r\n    this.monacoInstance.onBlur(() => {\r\n      this.blurred.emit();\r\n    });\r\n\r\n    if (autoFocus) {\r\n      this.monacoInstance.focus();\r\n    }\r\n  }\r\n}\r\n","<div class=\"editor\" #editor></div>\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { GlobalConfigService } from '../../edit/shared/store/ngrx-data';\r\n\r\n@Directive({ selector: '[appToggleDebug]' })\r\nexport class ToggleDebugDirective {\r\n\r\n  constructor(private globalConfigService: GlobalConfigService) { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    const CTRL_SHIFT_ALT_CLICK = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.shiftKey && event.altKey;\r\n    if (CTRL_SHIFT_ALT_CLICK) {\r\n      this.globalConfigService.toggleDebugEnabled();\r\n      window.getSelection().removeAllRanges();\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeHtml' })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader, TranslateModuleConfig } from '@ngx-translate/core';\r\n\r\nexport function buildTranslateConfiguration(factory: (http: HttpClient) => TranslateLoader): TranslateModuleConfig {\r\n  const config: TranslateModuleConfig = {\r\n    loader: {\r\n      provide: TranslateLoader,\r\n      useFactory: factory,\r\n      deps: [HttpClient],\r\n    },\r\n    defaultLanguage: 'en',\r\n    isolate: true,\r\n  };\r\n  return config;\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader } from '@ngx-translate/core';\r\nimport { catchError, Observable, of } from 'rxjs';\r\n\r\n/**\r\n * This loader should catch a 404 if the file doesn't exist and not result in errors.\r\n * https://stackoverflow.com/questions/47391613/how-to-set-a-fallback-assets-i18n-en-json-when-url-is-not-available-ngx-trans\r\n */\r\nexport class TranslateLoaderWithErrorHandling implements TranslateLoader {\r\n  constructor(private http: HttpClient, private prefix: string, private suffix: string) { }\r\n\r\n  getTranslation(lang: string): Observable<Record<string, any>> {\r\n    return this.http.get<Record<string, any>>(`${this.prefix}${lang}${this.suffix}`).pipe(\r\n      catchError(error => {\r\n        console.warn(`Translation: Failed to get language '${lang}' from ${this.prefix}`, error);\r\n        return of({});\r\n      }),\r\n    );\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}