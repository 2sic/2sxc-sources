{"version":3,"mappings":"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","names":["appFilesAsset","SourceService","constructor","http","context","dnnContext","this","get","viewKey","global","urlItems","$2sxc","apiUrl","params","Object","appId","templateIdOrPath","pipe","map","view","Type","toLocaleLowerCase","Extension","save","post","getAll","mask","Files","forEach","file","f","Shared","_a","d","getWebApis","files","splitIndex","Path","lastIndexOf","fileExtIndex","folder","substring","name","path","isShared","getWebApiDetails","apiPath","zoneId","getPredefinedTemplates","purpose","type","getPreview","templateKey","create","test","find","i","A","EntityId","toString","IsShared","templateId","i0","factory","FileLocationDialogComponent","dialogRef","ngOnInit","form","FormGroup","FormControl","Validators","closeDialog","close","confirm","formValues","getRawValue","selectors","ctx","defaultThrottleConfig","leading","trailing","MatInputAutofocusDirective","matInput","elementRef","setTimeout","focus","toBoolean","autofocusSelectValue","nativeElement","setSelectionRange","value","length","valueLowerCase","ctx_r14","ctx_r16","CreateFileDialogComponent","BaseSubsinkComponent","dialogData","sourceService","super","templates$","BehaviorSubject","loadingPreview$","buildForm","fetchTemplates","buildTemplateVars","ngOnDestroy","complete","result","finalName","subscribe","response","controls","Default","patchValue","next","Templates","platform","all","e","disabled","n","_b","v","_c","subscription","add","combineLatest","valueChanges","startWith","distinctUntilChanged","templates","template","t","Key","suggestedName","s","l","SuggestedFileName","trim","SanitizeHelper","r","g","Prefix","h","Suffix","x","replace","platforms$","platformsMap","Platforms","keys","purposes$","purposesMap","Purpose","filter","includes","tap","some","newTemplateKey","preview$","duration","scheduler","asyncScheduler","config","duration$","timer","durationSelector","operate","source","subscriber","hasValue","sendValue","throttled","isComplete","endThrottling","unsubscribe","send","cleanupThrottling","startThrottle","innerFrom","OperatorSubscriber","closed","throttle","throttleTime","switchMap","forkJoin","preview","of","undefined","templateVars$","platforms","purposes","loadingPreview","Preview","previewValid","IsValid","previewError","Error","MAT_DIALOG_DATA","CreateFileDialogModule","Context","imports","CommonModule","SharedComponentsModule","MatButtonModule","MatSelectModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","MatProgressSpinnerModule"],"sources":["./projects/eav-ui/src/app/code-editor/services/source.service.ts","./projects/eav-ui/src/app/create-file-dialog/file-location-dialog/file-location-dialog.component.html","./projects/eav-ui/src/app/create-file-dialog/file-location-dialog/file-location-dialog.component.ts","./node_modules/rxjs/dist/esm/internal/operators/throttle.js","./projects/eav-ui/src/app/shared/directives/mat-input-autofocus.directive.ts","./projects/eav-ui/src/app/create-file-dialog/create-file-dialog.component.html","./projects/eav-ui/src/app/create-file-dialog/create-file-dialog.component.ts","./node_modules/rxjs/dist/esm/internal/operators/throttleTime.js","./projects/eav-ui/src/app/create-file-dialog/create-file-dialog.module.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { WebApi, WebApiDetails } from '../../app-administration/models';\r\nimport { ViewOrFileIdentifier } from '../../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FileAsset } from '../models/file-asset.model';\r\nimport { PredefinedTemplatesResponse } from '../models/predefined-template.model';\r\nimport { Preview } from '../models/preview.models';\r\nimport { SourceView } from '../models/source-view.model';\r\n\r\nconst appFilesAll = 'admin/AppFiles/AppFiles';\r\nconst appFilesAsset = 'admin/AppFiles/asset';\r\nconst appFilesCreate = 'admin/AppFiles/create';\r\nconst apiExplorerInspect = 'admin/ApiExplorer/inspect';\r\nconst appFilesPredefinedTemplates = 'admin/AppFiles/GetTemplates';\r\nconst appFilesPreview = 'admin/AppFiles/preview';\r\n\r\n@Injectable()\r\nexport class SourceService {\r\n\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /** ViewKey is templateId or path */\r\n  get(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[]): Observable<SourceView> {\r\n    return this.http.get<SourceView>(this.dnnContext.$2sxc.http.apiUrl(appFilesAsset), {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    }).pipe(\r\n      map(view => {\r\n        if (view.Type.toLocaleLowerCase() === 'auto') {\r\n          switch (view.Extension.toLocaleLowerCase()) {\r\n            case '.cs':\r\n            case '.cshtml':\r\n              view.Type = 'Razor';\r\n              break;\r\n            case '.html':\r\n            case '.css':\r\n            case '.js':\r\n              view.Type = 'Token';\r\n              break;\r\n          }\r\n        }\r\n        return view;\r\n      })\r\n    );\r\n  }\r\n\r\n  /** ViewKey is templateId or path */\r\n  save(viewKey: string, global: boolean, view: SourceView, urlItems: ViewOrFileIdentifier[]): Observable<boolean> {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(appFilesAsset), view, {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    });\r\n  }\r\n\r\n  getAll(mask?: string): Observable<FileAsset[]> {\r\n    return this.http.get<{ Files: FileAsset[] }>(this.dnnContext.$2sxc.http.apiUrl(appFilesAll), {\r\n      params: {\r\n        appId: this.context.appId,\r\n        ...(mask && { mask }),\r\n      },\r\n    }).pipe(\r\n      map(({ Files }) => {\r\n        Files.forEach(file => {\r\n          file.Shared ??= false;\r\n        });\r\n        return Files;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getWebApis(): Observable<WebApi[]> {\r\n    return this.getAll('*Controller.cs').pipe(\r\n      map(files => {\r\n        const webApis: WebApi[] = files.map(file => {\r\n          const splitIndex = file.Path.lastIndexOf('/');\r\n          const fileExtIndex = file.Path.lastIndexOf('.');\r\n          const folder = file.Path.substring(0, splitIndex);\r\n          const name = file.Path.substring(splitIndex + 1, fileExtIndex);\r\n          const webApi: WebApi = { path: file.Path, folder, name, isShared: file.Shared };\r\n          return webApi;\r\n        });\r\n        return webApis;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getWebApiDetails(apiPath: string): Observable<WebApiDetails> {\r\n    return this.http.get<WebApiDetails>(this.dnnContext.$2sxc.http.apiUrl(apiExplorerInspect), {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId, path: apiPath },\r\n    });\r\n  }\r\n\r\n  getPredefinedTemplates(purpose?: 'Template' | 'Search' | 'Api', type?: 'Token' | 'Razor'): Observable<PredefinedTemplatesResponse> {\r\n    return this.http.get<PredefinedTemplatesResponse>(this.dnnContext.$2sxc.http.apiUrl(appFilesPredefinedTemplates), {\r\n      params: {\r\n        ...(purpose && { purpose }),\r\n        ...(type && { type }),\r\n      },\r\n    });\r\n  }\r\n\r\n  getPreview(path: string, global: boolean, templateKey: string): Observable<Preview> {\r\n    return this.http.get<Preview>(this.dnnContext.$2sxc.http.apiUrl(appFilesPreview), {\r\n      params: {\r\n        appId: this.context.appId,\r\n        path,\r\n        templateKey,\r\n        global,\r\n      },\r\n    });\r\n  }\r\n\r\n  create(path: string, global: boolean, templateKey: string): Observable<boolean> {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(appFilesCreate), {}, {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        purpose: 'auto',\r\n        path,\r\n        templateKey,\r\n      },\r\n    });\r\n  }\r\n\r\n  private templateIdOrPath(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[]) {\r\n    if (/^[0-9]*$/g.test(viewKey)) {\r\n      const path = urlItems.find(i => i.EntityId?.toString() === viewKey && i.IsShared === global)?.Path;\r\n      return {\r\n        templateId: viewKey,\r\n        ...(path != null && { path }),\r\n      };\r\n    } else {\r\n      return { path: viewKey };\r\n    }\r\n  }\r\n}\r\n","<div mat-dialog-title>\r\n  <div class=\"dialog-title-box\">New file location</div>\r\n</div>\r\n\r\n<form [formGroup]=\"form\" class=\"dialog-form\">\r\n  <div class=\"dialog-form-content fancy-scrollbar-light\">\r\n\r\n    <!-- Shared -->\r\n    <mat-form-field appearance=\"standard\" color=\"accent\">\r\n      <mat-label>Location</mat-label>\r\n      <mat-select formControlName=\"isShared\">\r\n        <mat-option [value]=\"false\">App</mat-option>\r\n        <mat-option [value]=\"true\">Shared (global)</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <app-field-hint *ngIf=\"form.controls.isShared.touched && form.controls.isShared.errors?.required\" [isError]=\"true\">\r\n      This field is required\r\n    </app-field-hint>\r\n\r\n    <div class=\"dialog-form-actions\">\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\" [disabled]=\"!form.valid\" (click)=\"confirm()\">\r\n        Confirm\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, HostBinding, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { FileLocationFormValues } from '..';\r\n\r\n@Component({\r\n  selector: 'app-file-location-dialog',\r\n  templateUrl: './file-location-dialog.component.html',\r\n  styleUrls: ['./file-location-dialog.component.scss']\r\n})\r\nexport class FileLocationDialogComponent implements OnInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private dialogRef: MatDialogRef<FileLocationDialogComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      isShared: new FormControl(null, Validators.required),\r\n    });\r\n  }\r\n\r\n  closeDialog(isShared?: boolean): void {\r\n    this.dialogRef.close(isShared);\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: FileLocationFormValues = this.form.getRawValue();\r\n    this.closeDialog(formValues.isShared);\r\n  }\r\n}\r\n","import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false,\n};\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n    return operate((source, subscriber) => {\n        const { leading, trailing } = config;\n        let hasValue = false;\n        let sendValue = null;\n        let throttled = null;\n        let isComplete = false;\n        const endThrottling = () => {\n            throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();\n            throttled = null;\n            if (trailing) {\n                send();\n                isComplete && subscriber.complete();\n            }\n        };\n        const cleanupThrottling = () => {\n            throttled = null;\n            isComplete && subscriber.complete();\n        };\n        const startThrottle = (value) => (throttled = innerFrom(durationSelector(value)).subscribe(new OperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n        const send = () => {\n            if (hasValue) {\n                hasValue = false;\n                const value = sendValue;\n                sendValue = null;\n                subscriber.next(value);\n                !isComplete && startThrottle(value);\n            }\n        };\n        source.subscribe(new OperatorSubscriber(subscriber, (value) => {\n            hasValue = true;\n            sendValue = value;\n            !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        }, () => {\n            isComplete = true;\n            !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }));\n    });\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\r\nimport { MatInput } from '@angular/material/input';\r\n\r\n@Directive({ selector: '[appMatInputAutofocus]' })\r\nexport class MatInputAutofocusDirective implements OnInit {\r\n  @Input() autofocusSelectValue: string | boolean | null | undefined = false;\r\n\r\n  constructor(private matInput: MatInput, private elementRef: ElementRef<HTMLInputElement>) { }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.matInput.focus();\r\n\r\n      if (this.toBoolean(this.autofocusSelectValue)) {\r\n        this.elementRef.nativeElement.setSelectionRange(0, this.matInput.value.length);\r\n      }\r\n    });\r\n  }\r\n\r\n  private toBoolean(value: any): boolean | null | undefined {\r\n    if (typeof value === 'boolean') { return value; }\r\n    if (typeof value === 'string') {\r\n      const valueLowerCase = value.toLocaleLowerCase();\r\n      if (valueLowerCase === 'true') { return true; }\r\n      if (valueLowerCase === 'false') { return false; }\r\n      return;\r\n    }\r\n    if (value == null) { return value; }\r\n  }\r\n}\r\n","<ng-container *ngIf=\"templateVars$ | async as data\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box hide-scrollbar\">\r\n      <span>Create</span>\r\n      <span class=\"file-name\">{{\r\n        controls.finalName.value\r\n        || (controls.folder.value ? controls.folder.value.trim() + '/' : '')\r\n        }}</span>\r\n    </div>\r\n  </div>\r\n\r\n  <form [formGroup]=\"form\" class=\"dialog-form\">\r\n    <div class=\"dialog-form-content fancy-scrollbar-light\">\r\n\r\n      <div class=\"field-container multiple\">\r\n        <!-- Platform -->\r\n        <div class=\"multiple-field\">\r\n          <mat-form-field appearance=\"standard\" color=\"accent\">\r\n            <mat-label>Platform</mat-label>\r\n            <mat-select formControlName=\"platform\">\r\n              <mat-option *ngFor=\"let platform of data.platforms\" [value]=\"platform\">\r\n                {{ platform }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <!-- Purpose -->\r\n        <div class=\"multiple-field\">\r\n          <mat-form-field appearance=\"standard\" color=\"accent\">\r\n            <mat-label>Purpose</mat-label>\r\n            <mat-select formControlName=\"purpose\">\r\n              <mat-option *ngFor=\"let purpose of data.purposes\" [value]=\"purpose\">\r\n                {{ purpose }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Template -->\r\n      <div class=\"field-container\">\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Template</mat-label>\r\n          <mat-select formControlName=\"templateKey\">\r\n            <mat-option *ngFor=\"let template of data.templates\" [value]=\"template.Key\">\r\n              {{ template.Name }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <!-- Name -->\r\n      <div class=\"field-container\">\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"name\" required appMatInputAutofocus autofocusSelectValue=\"true\">\r\n        </mat-form-field>\r\n        <app-field-hint *ngIf=\"controls.name.touched && controls.name.errors?.required\" [isError]=\"true\">\r\n          This field is required\r\n        </app-field-hint>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"dialog-form-actions\">\r\n      <ng-container *ngIf=\"data.loadingPreview\">\r\n        <mat-spinner mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n        <div class=\"spacer\"></div>\r\n      </ng-container>\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\"\r\n        [disabled]=\"!form.valid || data.loadingPreview || !data.previewValid\" (click)=\"confirm()\">\r\n        Create\r\n      </button>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"data.preview\">\r\n      <div class=\"preview-label-box\">\r\n        <label class=\"preview-label\" [ngClass]=\"{ 'disabled': data.loadingPreview }\">Preview</label>\r\n      </div>\r\n      <pre class=\"fancy-scrollbar-light\" [ngClass]=\"{ 'disabled': data.loadingPreview }\">{{ data.preview }}</pre>\r\n    </ng-container>\r\n\r\n    <div class=\"preview-error\" *ngIf=\"!data.loadingPreview && data.previewError\">\r\n      {{ data.previewError }}\r\n    </div>\r\n  </form>\r\n</ng-container>\r\n","import { Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n// tslint:disable-next-line:max-line-length\r\nimport { asyncScheduler, BehaviorSubject, combineLatest, distinctUntilChanged, forkJoin, map, Observable, of, startWith, Subscription, switchMap, tap, throttleTime, timer } from 'rxjs';\r\nimport { CreateFileDialogData, CreateFileDialogResult, CreateFileFormControls, CreateFileFormValues, CreateFileTemplateVars } from '.';\r\nimport { PredefinedTemplate } from '../code-editor/models/predefined-template.model';\r\nimport { Preview } from '../code-editor/models/preview.models';\r\nimport { SourceService } from '../code-editor/services/source.service';\r\nimport { SanitizeHelper } from '../edit/shared/helpers';\r\nimport { BaseSubsinkComponent } from '../shared/components/base-subsink-component/base-subsink.component';\r\n\r\n@Component({\r\n  selector: 'app-create-file-dialog',\r\n  templateUrl: './create-file-dialog.component.html',\r\n  styleUrls: ['./create-file-dialog.component.scss']\r\n})\r\nexport class CreateFileDialogComponent extends BaseSubsinkComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: FormGroup;\r\n  controls: CreateFileFormControls;\r\n  templateVars$: Observable<CreateFileTemplateVars>;\r\n\r\n  private all = 'All' as const;\r\n  private templates$: BehaviorSubject<PredefinedTemplate[]>;\r\n  private loadingPreview$: BehaviorSubject<boolean>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: CreateFileDialogData,\r\n    private dialogRef: MatDialogRef<CreateFileDialogComponent>,\r\n    private sourceService: SourceService,\r\n  ) { \r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.templates$ = new BehaviorSubject<PredefinedTemplate[]>([]);\r\n    this.loadingPreview$ = new BehaviorSubject(false);\r\n\r\n    this.buildForm();\r\n    this.fetchTemplates();\r\n    this.buildTemplateVars();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.templates$.complete();\r\n    this.loadingPreview$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(result?: CreateFileDialogResult): void {\r\n    this.dialogRef.close(result);\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: CreateFileFormValues = this.form.getRawValue();\r\n\r\n    const result: CreateFileDialogResult = {\r\n      name: formValues.finalName,\r\n      templateKey: formValues.templateKey,\r\n    };\r\n    this.closeDialog(result);\r\n  }\r\n\r\n  private fetchTemplates(): void {\r\n    this.sourceService.getPredefinedTemplates(this.dialogData.purpose, this.dialogData.type).subscribe(response => {\r\n      if (this.controls.templateKey.value !== response.Default) {\r\n        this.controls.templateKey.patchValue(response.Default);\r\n      }\r\n      this.templates$.next(response.Templates);\r\n    });\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new FormGroup({\r\n      platform: new FormControl(this.all),\r\n      purpose: new FormControl({ value: this.dialogData.purpose ?? this.all, disabled: this.dialogData.purpose != null }),\r\n      templateKey: new FormControl(null, Validators.required),\r\n      name: new FormControl(this.dialogData.name ?? null, Validators.required),\r\n      finalName: new FormControl({ value: null, disabled: true }),\r\n      folder: new FormControl({ value: this.dialogData.folder ?? '', disabled: true }),\r\n    });\r\n\r\n    this.controls = this.form.controls as any;\r\n\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.templates$,\r\n        this.controls.templateKey.valueChanges.pipe(\r\n          startWith<string>(this.controls.templateKey.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n      ]).subscribe(([templates, templateKey]) => {\r\n        const template = templates.find(t => t.Key === templateKey);\r\n        const suggestedName = this.dialogData.name\r\n          ? this.controls.name.value || this.dialogData.name\r\n          : template?.SuggestedFileName ?? null;\r\n\r\n        if (this.controls.name.value !== suggestedName) {\r\n          this.controls.name.patchValue(suggestedName);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.templates$,\r\n        this.controls.templateKey.valueChanges.pipe(\r\n          startWith<string>(this.controls.templateKey.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n        this.controls.name.valueChanges.pipe(\r\n          startWith<string>(this.controls.name.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n        this.controls.folder.valueChanges.pipe(\r\n          startWith<string>(this.controls.folder.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n      ]).subscribe(([templates, templateKey, name, folder]) => {\r\n        const template = templates.find(t => t.Key === templateKey);\r\n\r\n        let finalName: string = null;\r\n        if (name) {\r\n          folder = folder.trim();\r\n          name = SanitizeHelper.sanitizePath(name.trim());\r\n          name = `${template?.Prefix ?? ''}${name}${template?.Suffix ?? ''}${template?.Extension ?? ''}`;\r\n          finalName = `${folder ? `${folder}/` : ''}${name}`.replace(/\\/{2,}/g, '/');\r\n        }\r\n\r\n        if (this.controls.finalName.value !== finalName) {\r\n          this.controls.finalName.patchValue(finalName);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private buildTemplateVars(): void {\r\n    const platforms$ = this.templates$.pipe(\r\n      map(templates => {\r\n        const platformsMap: Record<string, string> = {\r\n          [this.all]: this.all,\r\n        };\r\n        templates.forEach(template => {\r\n          template.Platforms?.forEach(platform => {\r\n            platformsMap[platform] = platform;\r\n          });\r\n        });\r\n        return Object.keys(platformsMap);\r\n      }),\r\n    );\r\n    const purposes$ = this.templates$.pipe(\r\n      map(templates => {\r\n        const purposesMap: Record<string, string> = {\r\n          [this.all]: this.all,\r\n        };\r\n        templates.forEach(template => {\r\n          purposesMap[template.Purpose] = template.Purpose;\r\n        });\r\n        return Object.keys(purposesMap);\r\n      }),\r\n    );\r\n    const templates$ = combineLatest([\r\n      this.templates$,\r\n      this.controls.platform.valueChanges.pipe(\r\n        startWith<string>(this.controls.platform.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n      this.controls.purpose.valueChanges.pipe(\r\n        startWith<string>(this.controls.purpose.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n    ]).pipe(\r\n      map(([templates, platform, purpose]) => {\r\n        const filtered = templates.filter(template => {\r\n          const platformMatch = platform === this.all || (template.Platforms?.includes(platform) ?? false);\r\n          const purposeMatch = purpose === this.all || template.Purpose === purpose;\r\n          return platformMatch && purposeMatch;\r\n        });\r\n        return filtered;\r\n      }),\r\n      tap(templates => {\r\n        if (!templates.some(t => t.Key === this.controls.templateKey.value)) {\r\n          const newTemplateKey = templates[0]?.Key ?? null;\r\n          if (this.controls.templateKey.value !== newTemplateKey) {\r\n            this.controls.templateKey.patchValue(newTemplateKey);\r\n          }\r\n        }\r\n      }),\r\n    );\r\n    const preview$ = combineLatest([\r\n      this.controls.finalName.valueChanges.pipe(\r\n        startWith<string>(this.controls.finalName.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n      this.controls.templateKey.valueChanges.pipe(\r\n        startWith<string>(this.controls.templateKey.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n    ]).pipe(\r\n      throttleTime(100, asyncScheduler, { leading: true, trailing: true }),\r\n      tap(() => {\r\n        this.loadingPreview$.next(true);\r\n      }),\r\n      switchMap(([finalName, templateKey]) => {\r\n        return !finalName || !templateKey\r\n          ? of<Preview | undefined>(undefined)\r\n          : forkJoin([\r\n            this.sourceService.getPreview(finalName, this.dialogData.global, templateKey),\r\n            timer(500),\r\n          ]).pipe(map(([preview]) => preview));\r\n      }),\r\n      tap(() => {\r\n        this.loadingPreview$.next(false);\r\n      }),\r\n    );\r\n    this.templateVars$ = combineLatest([platforms$, purposes$, templates$, preview$, this.loadingPreview$]).pipe(\r\n      map(([platforms, purposes, templates, preview, loadingPreview]) => {\r\n        const templateVars: CreateFileTemplateVars = {\r\n          platforms,\r\n          purposes,\r\n          templates,\r\n          loadingPreview,\r\n          preview: preview?.Preview,\r\n          previewValid: preview?.IsValid ?? false,\r\n          previewError: preview?.Error,\r\n        };\r\n        return templateVars;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { asyncScheduler } from '../scheduler/async';\nimport { defaultThrottleConfig, throttle } from './throttle';\nimport { timer } from '../observable/timer';\nexport function throttleTime(duration, scheduler = asyncScheduler, config = defaultThrottleConfig) {\n    const duration$ = timer(duration, scheduler);\n    return throttle(() => duration$, config);\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { CreateFileDialogComponent, FileLocationDialogComponent } from '.';\r\nimport { SourceService } from '../code-editor/services/source.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CreateFileDialogComponent,\r\n    FileLocationDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedComponentsModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  exports: [\r\n    CreateFileDialogComponent,\r\n    FileLocationDialogComponent,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    SourceService,\r\n  ],\r\n})\r\nexport class CreateFileDialogModule { }\r\n"],"sourceRoot":"webpack:///","file":"default-projects_eav-ui_src_app_create-file-dialog_index_ts.0c7ea8c4112a4780.js"}