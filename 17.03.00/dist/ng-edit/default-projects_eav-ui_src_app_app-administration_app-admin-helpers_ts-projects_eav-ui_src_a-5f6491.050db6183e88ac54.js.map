{"version":3,"file":"default-projects_eav-ui_src_app_app-administration_app-admin-helpers_ts-projects_eav-ui_src_a-5f6491.050db6183e88ac54.js","mappings":"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","names":["AppAdminHelpers","getLightSpeedEditParams","appId","items","ContentTypeName","eavConstants","appMetadata","LightSpeed","For","Target","metadata","app","target","TargetType","targetType","Number","Singleton","webApiZoneRoot","ZoneService","constructor","http","context","dnnContext","this","getLanguages","get","$2sxc","apiUrl","toggleLanguage","code","enable","params","cultureCode","toString","getSystemInfo","getLanguagesPermissions","webApiAppRoot","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_2__","wxM","factory","ɵfac","FeatureNames","AppSyncWithSiteFiles","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","ContentSecurityPolicy","PermissionsByLanguage","FieldShareConfigManagement","_r7","ctx_r6","openDialog","vm_r4","feature","icon","FeatureTextInfoComponent_Conditional_0_Conditional_0_Template","ctx","show","FeatureTextInfoComponent","FeatureComponentBase","asInfo","value","asInfo$","next","dialog","viewContainerRef","featuresService","changeDetectorRef","super","BehaviorSubject","viewModel$","combineLatest","feature$","show$","pipe","map","_angular_core__WEBPACK_IMPORTED_MODULE_0__","In1","selectors","inputs","features","decls","vars","consts","template","rf","FeatureTextInfoComponent_Conditional_0_Template","FeatureTextInfoComponent_Conditional_2_Template","FeatureTextInfoComponent_ng_template_3_Template","FeatureTextInfoComponent_contFlowTmp","FeaturesModule","a4G","s3X","FeatureDetailService","imports","CommonModule","MatButtonModule","MatIconModule","MatCardModule","SharedComponentsModule","TranslateModule","forChild","buildTranslateConfiguration","translateLoaderFactory","getFeatureDetails","featureNameId","webApiRoot","nameId","id_r4","_r6","ctx_r5","copyToClipboard","link_r7","_r9","ctx_r8","findOutMore","FeatureInfoDialogComponent_Conditional_0_Conditional_15_Template","FeatureInfoDialogComponent_Conditional_0_Conditional_17_Template","_r11","ctx_r10","closeDialog","Name","Description","IsEnabled","FeatureInfoDialogComponent_Conditional_0_contFlowTmp","NameId","Link","FeatureInfoDialogComponent","dialogData","dialogRef","snackBar","featureDetailService","ngOnInit","text","open","duration","link","window","close","MAT_DIALOG_DATA","core","FeatureInfoDialogComponent_Conditional_0_Template","FeatureInfoDialogComponent_contFlowTmp","featureNameId$","showIf","showIf$","switchMap","featName","get$","feat","featureId","autoFocus","data","width","markForCheck","Sc5","BooleanFilterComponent","filter","agInit","filterParams","isFilterActive","doesFilterPass","valueGetter","api","colDef","column","columnApi","node","getValue","field","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","$event","DialogService","openCodeFile","path","isShared","templateId","form","Path","EntityId","hashParams","buildHashParam","keyDialog","DialogTypeConstants","Develop","keyIsShared","keyItems","JSON","stringify","url","buildFullUrl","openQueryDesigner","queryId","PipelineDesigner","keyPipelineId","openAppsManagement","zoneId","tab","extras","keyZoneId","Zone","Object","keys","length","keyExtras","openAppAdministration","scope","keyAppId","App","buildSharedHashParams","keyModuleId","moduleId","keyContentBlockId","contentBlockId","keyPartOfPage","sessionStorage","getItem","keyDebug","key","rawKey","replace","prefix","valueTemp","_","encodeURIComponent","oldHref","keyUrl","oldUrl","URL","newHref","origin","pathname","search","allHashParams","entries","reduce","acc","_angular_core__WEBPACK_IMPORTED_MODULE_3__","loader","provide","TranslateLoader","useFactory","deps","HttpClient","defaultLanguage","isolate","TranslateLoaderWithErrorHandling","sxcVersion","suffix","getTranslation","lang","catchError","error","console","warn","of","nextId","BADGE_CONTENT_CLASS","MatBadge","color","_color","_setColor","content","_content","newContent","_updateRenderedContent","description","_description","newDescription","_updateDescription","_ngZone","_elementRef","_ariaDescriber","_renderer","_animationMode","overlap","position","size","_id","_isInitialized","_interactivityChecker","inject","InteractivityChecker","_document","DOCUMENT","isAbove","indexOf","isAfter","getBadgeElement","_badgeElement","_clearExistingBadges","_createBadgeElement","ngOnDestroy","destroyNode","_inlineBadgeDescription","remove","removeDescription","nativeElement","_isHostInteractive","isFocusable","ignoreVisibility","badgeElement","createElement","activeClass","setAttribute","classList","add","appendChild","requestAnimationFrame","runOutsideAngular","newContentNormalized","trim","textContent","_removeInlineDescription","describe","_updateInlineDescription","undefined","colorPalette","badges","querySelectorAll","Array","from","ANIMATION_MODULE_TYPE","ɵdir","type","hostAttrs","hostVars","hostBindings","hidden","disabled","booleanAttribute","MatBadgeModule","ɵmod","ɵinj","A11yModule","MatCommonModule","_c0","_c1","MatDrawerContainer_Conditional_0_Template","_r3","ctx_r2","_onBackdropClicked","ctx_r0","_isShowingBackdrop","MatDrawerContainer_Conditional_3_Template","_c2","_c3","MatSidenavContainer_Conditional_0_Template","MatSidenavContainer_Conditional_3_Template","_c4","_c5","matDrawerAnimations","transformDrawer","trigger","state","style","transform","visibility","transition","animate","MAT_DRAWER_DEFAULT_AUTOSIZE","InjectionToken","providedIn","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","CdkScrollable","_changeDetectorRef","_container","elementRef","scrollDispatcher","ngZone","ngAfterContentInit","_contentMarginChanges","subscribe","forwardRef","MatDrawerContainer","ɵcmp","_contentMargins","left","right","useExisting","ngContentSelectors","encapsulation","changeDetection","MatDrawer","_position","_isAttached","_updatePositionInParent","onPositionChanged","emit","mode","_mode","_updateFocusTrapState","_modeChanged","disableClose","_disableClose","coerceBooleanProperty","_autoFocus","opened","_opened","toggle","_focusTrapFactory","_focusMonitor","_platform","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_animationStarted","Subject","_animationEnd","_animationState","openedChange","EventEmitter","_openedStream","o","openedStart","e","fromState","toState","mapTo","_closedStream","closedStart","_destroyed","activeElement","_takeFocus","_isFocusWithinDrawer","_restoreFocus","_openedVia","fromEvent","event","keyCode","ESCAPE","hasModifierKey","takeUntil","run","stopPropagation","preventDefault","distinctUntilChanged","x","y","_forceFocus","element","options","tabIndex","callback","removeEventListener","removeAttribute","addEventListener","focus","_focusByCssSelector","selector","elementToFocus","querySelector","_focusTrap","focusInitialElementWhenReady","then","hasMovedFocus","focusOrigin","focusVia","blur","activeEl","contains","ngAfterViewInit","create","ngAfterContentChecked","isBrowser","destroy","_anchor","complete","openedVia","_closeViaBackdropClick","_setOpen","isOpen","result","restoreFocus","Promise","resolve","take","_getWidth","offsetWidth","enabled","hasBackdrop","newPosition","parent","parentNode","createComment","insertBefore","viewQuery","_t","first","outputs","exportAs","dependencies","animation","start","_start","end","_end","autosize","_autosize","_drawerHasBackdrop","_backdropOverride","scrollable","_userContent","_dir","_element","viewportRuler","defaultAutosize","_drawers","QueryList","backdropClick","_doCheckSubject","change","_validateDrawers","updateContentMargins","_allDrawers","changes","startWith","drawer","reset","item","notifyOnChanges","forEach","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","debounceTime","_left","_right","ngDoCheck","_isPushed","_setContainerClass","onMicrotaskEmpty","merge","isAdd","className","_closeModalDrawersViaBackdrop","i4","contentQueries","dirIndex","styles","MatSidenavContent","container","MatSidenavContainer","MatSidenav","arguments","_fixedInViewport","_fixedTopGap","_fixedBottomGap","fixedInViewport","fixedTopGap","coerceNumberProperty","fixedBottomGap","ɵMatSidenav_BaseFactory","ɵMatSidenavContainer_BaseFactory","MatSidenavModule","CdkScrollableModule","_MatToolbarBase","mixinColor","MatToolbarRow","MatToolbar","document","_checkToolbarMixedModes","_toolbarRows","MatToolbarModule"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/app-admin-helpers.ts","./projects/eav-ui/src/app/apps-management/services/zone.service.ts","./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.html","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.ts","./projects/eav-ui/src/app/features/features.module.ts","./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.html","./projects/eav-ui/src/app/shared/services/dialog.service.ts","./projects/eav-ui/src/app/shared/translation/translate-configuration.ts","./projects/eav-ui/src/app/shared/translation/translate-loader-factory.ts","./projects/eav-ui/src/app/shared/translation/translate-loader-with-error-handling.ts","./node_modules/@angular/material/fesm2022/badge.mjs","./node_modules/@angular/material/fesm2022/sidenav.mjs","./node_modules/@angular/material/fesm2022/toolbar.mjs"],"sourcesContent":["import { eavConstants } from '../shared/constants/eav.constants';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\n\r\nexport class AppAdminHelpers {\r\n  public static getLightSpeedEditParams(appId: number) {\r\n    const form: EditForm = {\r\n      items: [\r\n        {\r\n          ContentTypeName: eavConstants.appMetadata.LightSpeed.ContentTypeName,\r\n          For: {\r\n            Target: eavConstants.metadata.app.target,\r\n            TargetType: eavConstants.metadata.app.targetType,\r\n            Number: appId,\r\n            Singleton: true,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    return form;\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { SiteLanguage, SiteLanguagePermissions } from '../models/site-language.model';\r\nimport { SystemInfoSet } from '../models/system-info.model';\r\n\r\nconst webApiZoneRoot = 'admin/zone/';\r\n\r\n@Injectable()\r\nexport class ZoneService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getLanguages() {\r\n    return this.http.get<SiteLanguage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiZoneRoot + 'GetLanguages'));\r\n  }\r\n\r\n  toggleLanguage(code: string, enable: boolean) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiZoneRoot + 'SwitchLanguage'), {\r\n      params: { cultureCode: code, enable: enable.toString() },\r\n    });\r\n  }\r\n\r\n  getSystemInfo() {\r\n    return this.http.get<SystemInfoSet>(this.dnnContext.$2sxc.http.apiUrl(webApiZoneRoot + 'GetSystemInfo'));\r\n  }\r\n\r\n  getLanguagesPermissions() {\r\n    return this.http.get<SiteLanguagePermissions[]>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'languages'), {\r\n      params: { appId: this.context.appId },\r\n    });\r\n  }\r\n}\r\n","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  FieldShareConfigManagement: 'FieldShareConfigManagement',\r\n};\r\n","@if (viewModel$ | async; as vm) {\r\n  @if (vm.show) {\r\n    <div class=\"feature-text-info\" (click)=\"openDialog()\" [tippy]=\"'Features.Tooltip' | translate: vm.feature\">\r\n      <mat-icon class=\"icon icon-{{vm.icon}}\">{{ vm.icon }}</mat-icon>\r\n      <div class=\"feature-text-info-content\">\r\n        <div class=\"feature-text-info-title\">{{ 'Features.FeatureNotActivated' | translate }}</div>\r\n        <div class=\"feature-text-info-subtitle\">{{ 'Features.ClickToFindOutMore' | translate }}</div>\r\n      </div>\r\n    </div>\r\n  }\r\n} @else {\r\n  <div>loading...</div>\r\n}\r\n<ng-template #loading>\r\n  <div>loading...</div>\r\n</ng-template>","import { ChangeDetectorRef, Component, Input, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureSummary } from '../models';\r\nimport { FeatureComponentBase } from '../shared/base-feature.component';\r\nimport { BehaviorSubject, map, Observable, combineLatest, switchMap } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-feature-text-info',\r\n  templateUrl: './feature-text-info.component.html',\r\n  styleUrls: ['./feature-text-info.component.scss']\r\n})\r\nexport class FeatureTextInfoComponent extends FeatureComponentBase {\r\n  @Input()\r\n  public set asInfo(value: boolean) { this.asInfo$.next(value); }\r\n  asInfo$ = new BehaviorSubject<boolean>(false);\r\n\r\n  viewModel$: Observable<FeatureTextInfoViewModel>;\r\n\r\n  constructor(\r\n    dialog: MatDialog,\r\n    viewContainerRef: ViewContainerRef,\r\n    featuresService: FeaturesService,\r\n    changeDetectorRef: ChangeDetectorRef\r\n  ) {\r\n    super(dialog, viewContainerRef, changeDetectorRef , featuresService);\r\n    this.viewModel$ = combineLatest([this.feature$, this.asInfo$, this.show$]).pipe(map(([feature, asInfo, show]) => \r\n      ({\r\n        feature,\r\n        icon: asInfo ? 'info' : 'warning',\r\n        show\r\n      })));\r\n  }\r\n\r\n}\r\n\r\ninterface FeatureTextInfoViewModel {\r\n  feature: FeatureSummary;\r\n  icon: string;\r\n  show: boolean;\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FeatureIconTextComponent } from './feature-icon-text/feature-icon-text.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { buildTranslateConfiguration } from '../shared/translation';\r\nimport { translateLoaderFactory } from '../shared/translation/translate-loader-factory';\r\nimport { FeatureInfoDialogComponent } from './feature-info-dialog/feature-info-dialog.component';\r\nimport { FeatureIconComponent } from './feature-icon/feature-icon.component';\r\nimport { FeatureTextInfoComponent } from './feature-text-info/feature-text-info.component';\r\nimport { FeatureIconIndicatorComponent } from './feature-icon-indicator/feature-icon-indicator.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { FeatureDetailService } from './services/feature-detail.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FeatureIconComponent,\r\n    FeatureIconTextComponent,\r\n    FeatureInfoDialogComponent,\r\n    FeatureTextInfoComponent,\r\n    FeatureIconIndicatorComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    SharedComponentsModule,\r\n    TranslateModule.forChild(buildTranslateConfiguration(translateLoaderFactory)),\r\n  ],\r\n  exports: [\r\n    FeatureIconComponent,\r\n    FeatureIconTextComponent,\r\n    FeatureInfoDialogComponent,\r\n    FeatureTextInfoComponent,\r\n    FeatureIconIndicatorComponent,\r\n  ],\r\n  providers: [\r\n    FeatureDetailService\r\n  ]\r\n})\r\nexport class FeaturesModule { }\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Feature } from '../models';\r\n\r\nexport const webApiRoot = \"admin/feature/\";\r\n\r\n@Injectable()\r\nexport class FeatureDetailService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private dnnContext: DnnContext\r\n  ) { }\r\n\r\n  getFeatureDetails(featureNameId: string): Observable<Feature> {\r\n    return this.http.get<Feature>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot + 'details'), {\r\n      params: { nameId: featureNameId }\r\n    });\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ vm.feature.Name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"vm.feature.Description | safeHtml\"></p>\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ \"Features.Status\" | translate }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ (vm.feature.IsEnabled ? \"Features.Active\" : \"Features.NotActive\") | translate }}</span>\r\n        </div>\r\n      </div>\r\n      @if (vm.feature.NameId; as id) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">ID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      @if (vm.feature.Link; as link) {\r\n        <button mat-raised-button color=\"accent\"\r\n          class=\"eav-card-action-button\" (click)=\"findOutMore(link)\">\r\n          <mat-icon>open_in_new</mat-icon>\r\n          {{ \"Features.FindOutMore\" | translate }}\r\n        </button>\r\n      }\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">\r\n        {{ \"Features.Close\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable, combineLatest, map } from 'rxjs';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { Feature } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\n\r\n@Component({\r\n  selector: 'app-feature-info-dialog',\r\n  templateUrl: './feature-info-dialog.component.html',\r\n  styleUrls: ['./feature-info-dialog.component.scss']\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  viewModel$: Observable<FeatureInfoViewModel>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    private dialogRef: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private featureDetailService: FeatureDetailService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.viewModel$ = combineLatest([\r\n      this.featureDetailService.getFeatureDetails(this.dialogData)\r\n    ]).pipe(map(([feature]) => ({ feature })));\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  findOutMore(link: string): void { \r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\r\ninterface FeatureInfoViewModel {\r\n  feature: Feature;\r\n}","import { ChangeDetectorRef, Directive, Input, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { BehaviorSubject, switchMap, Observable, map, combineLatest } from 'rxjs';\r\nimport { FeatureSummary } from '../models';\r\n\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n  /** Feature NameId to check */\r\n  @Input()\r\n  public set featureNameId(value: string) { this.featureNameId$.next(value); }\r\n  protected featureNameId$ = new BehaviorSubject<string>(null);\r\n\r\n  /** By default, it will show if it's false - here we can change it to show if true */\r\n  @Input()\r\n  public set showIf(value: boolean) { this.showIf$.next(value == true); }\r\n  protected showIf$ = new BehaviorSubject<boolean>(false);\r\n\r\n  // TODO: @SDV - MAKE REACTIVE - SEE text-info-component example\r\n  // featureOn: boolean = true;\r\n  feature$: Observable<FeatureSummary>;\r\n  show$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    protected featuresService: FeaturesService\r\n  ) {\r\n    this.feature$ = this.featureNameId$.pipe(\r\n      switchMap(featName => this.featuresService.get$(featName)\r\n    ));\r\n    this.show$ = combineLatest([this.feature$, this.showIf$]).pipe(\r\n      // tap(data => console.log('2dm - show$', data)),\r\n      map(([feat,showIf]) => showIf == (feat?.IsEnabled ?? false))\r\n    );\r\n  }\r\n\r\n  openDialog() {\r\n    FeatureComponentBase.openDialog(this.dialog, this.featureNameId$.value, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n\r\n  /** Public/Static so it can be called from elsewhere */\r\n  public static openDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n    dialog.open(FeatureInfoDialogComponent, {\r\n      autoFocus: false,\r\n      data: featureId,\r\n      viewContainerRef: viewContainerRef,\r\n      width: '400px',\r\n    });\r\n\r\n    changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { BooleanFilterModel } from './boolean-filter.model';\r\n\r\n@Component({\r\n  selector: 'app-boolean-filter',\r\n  templateUrl: './boolean-filter.component.html',\r\n  styleUrls: ['./boolean-filter.component.scss'],\r\n})\r\nexport class BooleanFilterComponent implements IFilterAngularComp {\r\n  filter = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.filter !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: boolean = this.filterParams.valueGetter(valueGetterParams);\r\n    if (value == null) { return false; }\r\n    return value.toString() === this.filter;\r\n  }\r\n\r\n  getModel(): BooleanFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n    return {\r\n      filterType: 'boolean',\r\n      filter: this.filter,\r\n    };\r\n  }\r\n\r\n  setModel(model: BooleanFilterModel) {\r\n    this.filter = model ? model.filter : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<mat-radio-group [(ngModel)]=\"filter\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">True</mat-radio-button>\r\n  <mat-radio-button value=\"false\">False</mat-radio-button>\r\n</mat-radio-group>\r\n","import { Injectable } from '@angular/core';\r\nimport { DialogTypeConstants } from '../constants/dialog-type.constants';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyAppId, keyContentBlockId, keyDebug, keyDialog, keyExtras, keyIsShared, keyItems, keyModuleId, keyPartOfPage, keyPipelineId, keyUrl, keyZoneId, prefix } from '../constants/session.constants';\r\nimport { DialogHashParams, ExtrasParam } from '../models/dialog-url-params.model';\r\nimport { EditForm, ViewOrFileIdentifier } from '../models/edit-form.model';\r\nimport { Context } from './context';\r\n\r\n@Injectable()\r\nexport class DialogService {\r\n  constructor(private context: Context) { }\r\n\r\n  openCodeFile(path: string, isShared: boolean, templateId?: number) {\r\n    const dialog = DialogTypeConstants.Develop;\r\n    const form = {\r\n      items: [{\r\n        Path: path,\r\n        ...(templateId != null && { EntityId: templateId }),\r\n      }] as ViewOrFileIdentifier[]\r\n    };\r\n\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyDialog, dialog),\r\n      ...this.buildHashParam(keyIsShared, isShared.toString()),\r\n      ...this.buildHashParam(keyItems, JSON.stringify(form.items)),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openQueryDesigner(queryId: number) {\r\n    const dialog = DialogTypeConstants.PipelineDesigner;\r\n    const form: EditForm = {\r\n      items: [{ EntityId: queryId }],\r\n    };\r\n\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyDialog, dialog),\r\n      ...this.buildHashParam(keyPipelineId, queryId.toString()),\r\n      ...this.buildHashParam(keyItems, JSON.stringify(form.items)),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openAppsManagement(zoneId: number, tab?: string) {\r\n    const extras: ExtrasParam = {\r\n      ...(tab && { tab }),\r\n    };\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyZoneId, zoneId.toString()),\r\n      ...this.buildHashParam(keyDialog, DialogTypeConstants.Zone),\r\n      ...(Object.keys(extras).length ? this.buildHashParam(keyExtras, JSON.stringify(extras)) : ''),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openAppAdministration(zoneId: number, appId: number, tab?: string, scope?: string) {\r\n    const extras: ExtrasParam = {\r\n      ...(tab && { tab }),\r\n      ...(scope && { scope }),\r\n    };\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyZoneId, zoneId.toString()),\r\n      ...this.buildHashParam(keyAppId, appId.toString()),\r\n      ...this.buildHashParam(keyDialog, DialogTypeConstants.App),\r\n      ...(Object.keys(extras).length ? this.buildHashParam(keyExtras, JSON.stringify(extras)) : ''),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  /** A lot of the link is identical when opening the admin-dialogs in a new window */\r\n  private buildSharedHashParams() {\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyZoneId, this.context.zoneId.toString()),\r\n      ...this.buildHashParam(keyAppId, this.context.appId.toString()),\r\n      ...this.buildHashParam(keyModuleId, this.context.moduleId?.toString()),\r\n      ...this.buildHashParam(keyContentBlockId, this.context.contentBlockId?.toString()),\r\n      ...this.buildHashParam(keyPartOfPage),\r\n      ...(sessionStorage.getItem(keyDebug) ? this.buildHashParam(keyDebug) : {}),\r\n    };\r\n    return hashParams;\r\n  }\r\n\r\n  /** Encodes param if necessary */\r\n  private buildHashParam(key: string, value?: string) {\r\n    const rawKey = key.replace(prefix, '');\r\n    const valueTemp = (value != null) ? value : sessionStorage.getItem(key);\r\n    const rawValue = encodeURIComponent(valueTemp);\r\n    const hashParam: DialogHashParams = { [rawKey]: rawValue };\r\n    return hashParam;\r\n  }\r\n\r\n  private buildFullUrl(hashParams: DialogHashParams) {\r\n    const oldHref = sessionStorage.getItem(keyUrl);\r\n    const oldUrl = new URL(oldHref);\r\n    const newHref = oldUrl.origin + oldUrl.pathname + oldUrl.search;\r\n\r\n    const allHashParams: DialogHashParams = {\r\n      ...this.buildSharedHashParams(),\r\n      ...hashParams,\r\n    };\r\n    const hashUrl = Object.entries(allHashParams).reduce((acc, [key, value]) => `${acc}&${key}=${value}`, '').replace('&', '#');\r\n    return newHref + hashUrl;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader, TranslateModuleConfig } from '@ngx-translate/core';\r\n\r\nexport function buildTranslateConfiguration(factory: (http: HttpClient) => TranslateLoader): TranslateModuleConfig {\r\n  const config: TranslateModuleConfig = {\r\n    loader: {\r\n      provide: TranslateLoader,\r\n      useFactory: factory,\r\n      deps: [HttpClient],\r\n    },\r\n    defaultLanguage: 'en',\r\n    isolate: true,\r\n  };\r\n  return config;\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { TranslateLoader } from \"@ngx-translate/core\";\r\nimport { EavWindow } from \"../models/eav-window.model\";\r\nimport { TranslateLoaderWithErrorHandling } from \"./translate-loader-with-error-handling\";\r\n\r\ndeclare const window: EavWindow;\r\n\r\n// AoT requires an exported function for factories\r\n// at least according to https://github.com/ngx-translate/http-loader\r\nexport function translateLoaderFactory(http: HttpClient): TranslateLoader {\r\n    return new TranslateLoaderWithErrorHandling(http, './i18n/', `.js?${window.sxcVersion}`);\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader } from '@ngx-translate/core';\r\nimport { catchError, Observable, of } from 'rxjs';\r\n\r\n/**\r\n * This loader should catch a 404 if the file doesn't exist and not result in errors.\r\n * https://stackoverflow.com/questions/47391613/how-to-set-a-fallback-assets-i18n-en-json-when-url-is-not-available-ngx-trans\r\n */\r\nexport class TranslateLoaderWithErrorHandling implements TranslateLoader {\r\n  constructor(private http: HttpClient, private prefix: string, private suffix: string) { }\r\n\r\n  getTranslation(lang: string): Observable<Record<string, any>> {\r\n    return this.http.get<Record<string, any>>(`${this.prefix}${lang}${this.suffix}`).pipe(\r\n      catchError(error => {\r\n        console.warn(`Translation: Failed to get language '${lang}' from ${this.prefix}`, error);\r\n        return of({});\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import * as i0 from '@angular/core';\nimport { inject, booleanAttribute, Directive, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { InteractivityChecker, A11yModule } from '@angular/cdk/a11y';\nimport { DOCUMENT } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\nlet nextId = 0;\nconst BADGE_CONTENT_CLASS = 'mat-badge-content';\n/** Directive to display a text badge. */\nclass MatBadge {\n    /** The color of the badge. Can be `primary`, `accent`, or `warn`. */\n    get color() {\n        return this._color;\n    }\n    set color(value) {\n        this._setColor(value);\n        this._color = value;\n    }\n    /** The content for the badge */\n    get content() {\n        return this._content;\n    }\n    set content(newContent) {\n        this._updateRenderedContent(newContent);\n    }\n    /** Message used to describe the decorated element via aria-describedby */\n    get description() {\n        return this._description;\n    }\n    set description(newDescription) {\n        this._updateDescription(newDescription);\n    }\n    constructor(_ngZone, _elementRef, _ariaDescriber, _renderer, _animationMode) {\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        this._renderer = _renderer;\n        this._animationMode = _animationMode;\n        this._color = 'primary';\n        /** Whether the badge should overlap its contents or not */\n        this.overlap = true;\n        /**\n         * Position the badge should reside.\n         * Accepts any combination of 'above'|'below' and 'before'|'after'\n         */\n        this.position = 'above after';\n        /** Size of the badge. Can be 'small', 'medium', or 'large'. */\n        this.size = 'medium';\n        /** Unique id for the badge */\n        this._id = nextId++;\n        /** Whether the OnInit lifecycle hook has run yet */\n        this._isInitialized = false;\n        /** InteractivityChecker to determine if the badge host is focusable. */\n        this._interactivityChecker = inject(InteractivityChecker);\n        this._document = inject(DOCUMENT);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const nativeElement = _elementRef.nativeElement;\n            if (nativeElement.nodeType !== nativeElement.ELEMENT_NODE) {\n                throw Error('matBadge must be attached to an element node.');\n            }\n            const matIconTagName = 'mat-icon';\n            // Heads-up for developers to avoid putting matBadge on <mat-icon>\n            // as it is aria-hidden by default docs mention this at:\n            // https://material.angular.io/components/badge/overview#accessibility\n            if (nativeElement.tagName.toLowerCase() === matIconTagName &&\n                nativeElement.getAttribute('aria-hidden') === 'true') {\n                console.warn(`Detected a matBadge on an \"aria-hidden\" \"<mat-icon>\". ` +\n                    `Consider setting aria-hidden=\"false\" in order to surface the information assistive technology.` +\n                    `\\n${nativeElement.outerHTML}`);\n            }\n        }\n    }\n    /** Whether the badge is above the host or not */\n    isAbove() {\n        return this.position.indexOf('below') === -1;\n    }\n    /** Whether the badge is after the host or not */\n    isAfter() {\n        return this.position.indexOf('before') === -1;\n    }\n    /**\n     * Gets the element into which the badge's content is being rendered. Undefined if the element\n     * hasn't been created (e.g. if the badge doesn't have content).\n     */\n    getBadgeElement() {\n        return this._badgeElement;\n    }\n    ngOnInit() {\n        // We may have server-side rendered badge that we need to clear.\n        // We need to do this in ngOnInit because the full content of the component\n        // on which the badge is attached won't necessarily be in the DOM until this point.\n        this._clearExistingBadges();\n        if (this.content && !this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n            this._updateRenderedContent(this.content);\n        }\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        // ViewEngine only: when creating a badge through the Renderer, Angular remembers its index.\n        // We have to destroy it ourselves, otherwise it'll be retained in memory.\n        if (this._renderer.destroyNode) {\n            this._renderer.destroyNode(this._badgeElement);\n            this._inlineBadgeDescription?.remove();\n        }\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.description);\n    }\n    /** Gets whether the badge's host element is interactive. */\n    _isHostInteractive() {\n        // Ignore visibility since it requires an expensive style caluclation.\n        return this._interactivityChecker.isFocusable(this._elementRef.nativeElement, {\n            ignoreVisibility: true,\n        });\n    }\n    /** Creates the badge element */\n    _createBadgeElement() {\n        const badgeElement = this._renderer.createElement('span');\n        const activeClass = 'mat-badge-active';\n        badgeElement.setAttribute('id', `mat-badge-content-${this._id}`);\n        // The badge is aria-hidden because we don't want it to appear in the page's navigation\n        // flow. Instead, we use the badge to describe the decorated element with aria-describedby.\n        badgeElement.setAttribute('aria-hidden', 'true');\n        badgeElement.classList.add(BADGE_CONTENT_CLASS);\n        if (this._animationMode === 'NoopAnimations') {\n            badgeElement.classList.add('_mat-animation-noopable');\n        }\n        this._elementRef.nativeElement.appendChild(badgeElement);\n        // animate in after insertion\n        if (typeof requestAnimationFrame === 'function' && this._animationMode !== 'NoopAnimations') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    badgeElement.classList.add(activeClass);\n                });\n            });\n        }\n        else {\n            badgeElement.classList.add(activeClass);\n        }\n        return badgeElement;\n    }\n    /** Update the text content of the badge element in the DOM, creating the element if necessary. */\n    _updateRenderedContent(newContent) {\n        const newContentNormalized = `${newContent ?? ''}`.trim();\n        // Don't create the badge element if the directive isn't initialized because we want to\n        // append the badge element to the *end* of the host element's content for backwards\n        // compatibility.\n        if (this._isInitialized && newContentNormalized && !this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n        }\n        if (this._badgeElement) {\n            this._badgeElement.textContent = newContentNormalized;\n        }\n        this._content = newContentNormalized;\n    }\n    /** Updates the host element's aria description via AriaDescriber. */\n    _updateDescription(newDescription) {\n        // Always start by removing the aria-describedby; we will add a new one if necessary.\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.description);\n        // NOTE: We only check whether the host is interactive here, which happens during\n        // when then badge content changes. It is possible that the host changes\n        // interactivity status separate from one of these. However, watching the interactivity\n        // status of the host would require a `MutationObserver`, which is likely more code + overhead\n        // than it's worth; from usages inside Google, we see that the vats majority of badges either\n        // never change interactivity, or also set `matBadgeHidden` based on the same condition.\n        if (!newDescription || this._isHostInteractive()) {\n            this._removeInlineDescription();\n        }\n        this._description = newDescription;\n        // We don't add `aria-describedby` for non-interactive hosts elements because we\n        // instead insert the description inline.\n        if (this._isHostInteractive()) {\n            this._ariaDescriber.describe(this._elementRef.nativeElement, newDescription);\n        }\n        else {\n            this._updateInlineDescription();\n        }\n    }\n    _updateInlineDescription() {\n        // Create the inline description element if it doesn't exist\n        if (!this._inlineBadgeDescription) {\n            this._inlineBadgeDescription = this._document.createElement('span');\n            this._inlineBadgeDescription.classList.add('cdk-visually-hidden');\n        }\n        this._inlineBadgeDescription.textContent = this.description;\n        this._badgeElement?.appendChild(this._inlineBadgeDescription);\n    }\n    _removeInlineDescription() {\n        this._inlineBadgeDescription?.remove();\n        this._inlineBadgeDescription = undefined;\n    }\n    /** Adds css theme class given the color to the component host */\n    _setColor(colorPalette) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-badge-${this._color}`);\n        if (colorPalette) {\n            classList.add(`mat-badge-${colorPalette}`);\n        }\n    }\n    /** Clears any existing badges that might be left over from server-side rendering. */\n    _clearExistingBadges() {\n        // Only check direct children of this host element in order to avoid deleting\n        // any badges that might exist in descendant elements.\n        const badges = this._elementRef.nativeElement.querySelectorAll(`:scope > .${BADGE_CONTENT_CLASS}`);\n        for (const badgeElement of Array.from(badges)) {\n            if (badgeElement !== this._badgeElement) {\n                badgeElement.remove();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatBadge, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i1.AriaDescriber }, { token: i0.Renderer2 }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.0.4\", type: MatBadge, selector: \"[matBadge]\", inputs: { color: [\"matBadgeColor\", \"color\"], overlap: [\"matBadgeOverlap\", \"overlap\", booleanAttribute], disabled: [\"matBadgeDisabled\", \"disabled\", booleanAttribute], position: [\"matBadgePosition\", \"position\"], content: [\"matBadge\", \"content\"], description: [\"matBadgeDescription\", \"description\"], size: [\"matBadgeSize\", \"size\"], hidden: [\"matBadgeHidden\", \"hidden\", booleanAttribute] }, host: { properties: { \"class.mat-badge-overlap\": \"overlap\", \"class.mat-badge-above\": \"isAbove()\", \"class.mat-badge-below\": \"!isAbove()\", \"class.mat-badge-before\": \"!isAfter()\", \"class.mat-badge-after\": \"isAfter()\", \"class.mat-badge-small\": \"size === \\\"small\\\"\", \"class.mat-badge-medium\": \"size === \\\"medium\\\"\", \"class.mat-badge-large\": \"size === \\\"large\\\"\", \"class.mat-badge-hidden\": \"hidden || !content\", \"class.mat-badge-disabled\": \"disabled\" }, classAttribute: \"mat-badge\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatBadge, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matBadge]',\n                    host: {\n                        'class': 'mat-badge',\n                        '[class.mat-badge-overlap]': 'overlap',\n                        '[class.mat-badge-above]': 'isAbove()',\n                        '[class.mat-badge-below]': '!isAbove()',\n                        '[class.mat-badge-before]': '!isAfter()',\n                        '[class.mat-badge-after]': 'isAfter()',\n                        '[class.mat-badge-small]': 'size === \"small\"',\n                        '[class.mat-badge-medium]': 'size === \"medium\"',\n                        '[class.mat-badge-large]': 'size === \"large\"',\n                        '[class.mat-badge-hidden]': 'hidden || !content',\n                        '[class.mat-badge-disabled]': 'disabled',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i1.AriaDescriber }, { type: i0.Renderer2 }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { color: [{\n                type: Input,\n                args: ['matBadgeColor']\n            }], overlap: [{\n                type: Input,\n                args: [{ alias: 'matBadgeOverlap', transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'matBadgeDisabled', transform: booleanAttribute }]\n            }], position: [{\n                type: Input,\n                args: ['matBadgePosition']\n            }], content: [{\n                type: Input,\n                args: ['matBadge']\n            }], description: [{\n                type: Input,\n                args: ['matBadgeDescription']\n            }], size: [{\n                type: Input,\n                args: ['matBadgeSize']\n            }], hidden: [{\n                type: Input,\n                args: [{ alias: 'matBadgeHidden', transform: booleanAttribute }]\n            }] } });\n\nclass MatBadgeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatBadgeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: MatBadgeModule, declarations: [MatBadge], imports: [A11yModule, MatCommonModule], exports: [MatBadge, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatBadgeModule, imports: [A11yModule, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatBadgeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, MatCommonModule],\n                    exports: [MatBadge, MatCommonModule],\n                    declarations: [MatBadge],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatBadge, MatBadgeModule };\n","import * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollable, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, EventEmitter, Optional, Input, Output, ViewChild, QueryList, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i2 from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i3 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nconst matDrawerAnimations = {\n    /** Animation that slides a drawer in and out. */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n    ]),\n};\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatDrawerContent, deps: [{ token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatDrawerContainer) }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.4\", type: MatDrawerContent, selector: \"mat-drawer-content\", host: { attributes: { \"ngSkipHydration\": \"\" }, properties: { \"style.margin-left.px\": \"_container._contentMargins.left\", \"style.margin-right.px\": \"_container._contentMargins.right\" }, classAttribute: \"mat-drawer-content\" }, providers: [\n            {\n                provide: CdkScrollable,\n                useExisting: MatDrawerContent,\n            },\n        ], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatDrawerContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-drawer-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                        'ngSkipHydration': '',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        {\n                            provide: CdkScrollable,\n                            useExisting: MatDrawerContent,\n                        },\n                    ],\n                }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatDrawerContainer)]\n                }] }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.NgZone }] });\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    /** The side that the drawer is attached to. */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value !== this._position) {\n            // Static inputs in Ivy are set before the element is in the DOM.\n            if (this._isAttached) {\n                this._updatePositionInParent(value);\n            }\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n    get mode() {\n        return this._mode;\n    }\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n    get disableClose() {\n        return this._disableClose;\n    }\n    set disableClose(value) {\n        this._disableClose = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or AutoFocusTarget\n     * instead.\n     */\n    get autoFocus() {\n        const value = this._autoFocus;\n        // Note that usually we don't allow autoFocus to be set to `first-tabbable` in `side` mode,\n        // because we don't know how the sidenav is being used, but in some cases it still makes\n        // sense to do it. The consumer can explicitly set `autoFocus`.\n        if (value == null) {\n            if (this.mode === 'side') {\n                return 'dialog';\n            }\n            else {\n                return 'first-tabbable';\n            }\n        }\n        return value;\n    }\n    set autoFocus(value) {\n        if (value === 'true' || value === 'false' || value == null) {\n            value = coerceBooleanProperty(value);\n        }\n        this._autoFocus = value;\n    }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n    get opened() {\n        return this._opened;\n    }\n    set opened(value) {\n        this.toggle(coerceBooleanProperty(value));\n    }\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _interactivityChecker, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._interactivityChecker = _interactivityChecker;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /** Whether the drawer is initialized. Used for disabling the initial animation. */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /** Emits whenever the drawer has started animating. */\n        this._animationStarted = new Subject();\n        /** Emits whenever the drawer is done animating. */\n        this._animationEnd = new Subject();\n        /** Current state of the sidenav animation. */\n        this._animationState = 'void';\n        /** Event emitted when the drawer open state is changed. */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /** Event emitted when the drawer has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the drawer has started opening. */\n        this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n        /** Event emitted when the drawer has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the drawer has started closing. */\n        this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Event emitted when the drawer's position changes. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n                }\n                this._takeFocus();\n            }\n            else if (this._isFocusWithinDrawer()) {\n                this._restoreFocus(this._openedVia || 'program');\n            }\n        });\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular(() => {\n            fromEvent(this._elementRef.nativeElement, 'keydown')\n                .pipe(filter(event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            }), takeUntil(this._destroyed))\n                .subscribe(event => this._ngZone.run(() => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }));\n        });\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe((event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        });\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                const callback = () => {\n                    element.removeEventListener('blur', callback);\n                    element.removeEventListener('mousedown', callback);\n                    element.removeAttribute('tabindex');\n                };\n                element.addEventListener('blur', callback);\n                element.addEventListener('mousedown', callback);\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n    _takeFocus() {\n        if (!this._focusTrap) {\n            return;\n        }\n        const element = this._elementRef.nativeElement;\n        // When autoFocus is not on the sidenav, if the element cannot be focused or does\n        // not exist, focus the sidenav itself so the keyboard navigation still works.\n        // We need to check that `focus` is a function due to Universal.\n        switch (this.autoFocus) {\n            case false:\n            case 'dialog':\n                return;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n                    if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                        element.focus();\n                    }\n                });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this.autoFocus);\n                break;\n        }\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n    _restoreFocus(focusOrigin) {\n        if (this.autoFocus === 'dialog') {\n            return;\n        }\n        if (this._elementFocusedBeforeDrawerWasOpened) {\n            this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, focusOrigin);\n        }\n        else {\n            this._elementRef.nativeElement.blur();\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n    }\n    /** Whether focus is currently within the drawer. */\n    _isFocusWithinDrawer() {\n        const activeEl = this._doc.activeElement;\n        return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n    ngAfterViewInit() {\n        this._isAttached = true;\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n        // Only update the DOM position when the sidenav is positioned at\n        // the end since we project the sidenav before the content by default.\n        if (this._position === 'end') {\n            this._updatePositionInParent('end');\n        }\n    }\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._anchor?.remove();\n        this._anchor = null;\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n    close() {\n        return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n    _closeViaBackdropClick() {\n        // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n        // don't need to check whether focus is currently in the drawer, as clicking on the\n        // backdrop causes blurs the active element.\n        return this._setOpen(/* isOpen */ false, /* restoreFocus */ true, 'mouse');\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    toggle(isOpen = !this.opened, openedVia) {\n        // If the focus is currently inside the drawer content and we are closing the drawer,\n        // restore the focus to the initially focused element (when the drawer opened).\n        if (isOpen && openedVia) {\n            this._openedVia = openedVia;\n        }\n        const result = this._setOpen(isOpen, \n        /* restoreFocus */ !isOpen && this._isFocusWithinDrawer(), this._openedVia || 'program');\n        if (!isOpen) {\n            this._openedVia = null;\n        }\n        return result;\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param focusOrigin Origin to use when restoring focus.\n     */\n    _setOpen(isOpen, restoreFocus, focusOrigin) {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n        }\n        else {\n            this._animationState = 'void';\n            if (restoreFocus) {\n                this._restoreFocus(focusOrigin);\n            }\n        }\n        this._updateFocusTrapState();\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    _getWidth() {\n        return this._elementRef.nativeElement ? this._elementRef.nativeElement.offsetWidth || 0 : 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // Trap focus only if the backdrop is enabled. Otherwise, allow end user to interact with the\n            // sidenav content.\n            this._focusTrap.enabled = !!this._container?.hasBackdrop;\n        }\n    }\n    /**\n     * Updates the position of the drawer in the DOM. We need to move the element around ourselves\n     * when it's in the `end` position so that it comes after the content and the visual order\n     * matches the tab order. We also need to be able to move it back to `start` if the sidenav\n     * started off as `end` and was changed to `start`.\n     */\n    _updatePositionInParent(newPosition) {\n        const element = this._elementRef.nativeElement;\n        const parent = element.parentNode;\n        if (newPosition === 'end') {\n            if (!this._anchor) {\n                this._anchor = this._doc.createComment('mat-drawer-anchor');\n                parent.insertBefore(this._anchor, element);\n            }\n            parent.appendChild(element);\n        }\n        else if (this._anchor) {\n            this._anchor.parentNode.insertBefore(element, this._anchor);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatDrawer, deps: [{ token: i0.ElementRef }, { token: i2.FocusTrapFactory }, { token: i2.FocusMonitor }, { token: i3.Platform }, { token: i0.NgZone }, { token: i2.InteractivityChecker }, { token: DOCUMENT, optional: true }, { token: MAT_DRAWER_CONTAINER, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.4\", type: MatDrawer, selector: \"mat-drawer\", inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\", onPositionChanged: \"positionChanged\" }, host: { attributes: { \"tabIndex\": \"-1\", \"ngSkipHydration\": \"\" }, listeners: { \"@transform.start\": \"_animationStarted.next($event)\", \"@transform.done\": \"_animationEnd.next($event)\" }, properties: { \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"class.mat-drawer-opened\": \"opened\", \"@transform\": \"_animationState\" }, classAttribute: \"mat-drawer\" }, viewQueries: [{ propertyName: \"_content\", first: true, predicate: [\"content\"], descendants: true }], exportAs: [\"matDrawer\"], ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", dependencies: [{ kind: \"directive\", type: i1.CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], animations: [matDrawerAnimations.transformDrawer], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatDrawer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer', exportAs: 'matDrawer', animations: [matDrawerAnimations.transformDrawer], host: {\n                        'class': 'mat-drawer',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        '[class.mat-drawer-opened]': 'opened',\n                        'tabIndex': '-1',\n                        '[@transform]': '_animationState',\n                        '(@transform.start)': '_animationStarted.next($event)',\n                        '(@transform.done)': '_animationEnd.next($event)',\n                        'ngSkipHydration': '',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i2.FocusTrapFactory }, { type: i2.FocusMonitor }, { type: i3.Platform }, { type: i0.NgZone }, { type: i2.InteractivityChecker }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: MatDrawerContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DRAWER_CONTAINER]\n                }] }], propDecorators: { position: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], disableClose: [{\n                type: Input\n            }], autoFocus: [{\n                type: Input\n            }], opened: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], openedStart: [{\n                type: Output\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], closedStart: [{\n                type: Output\n            }], onPositionChanged: [{\n                type: Output,\n                args: ['positionChanged']\n            }], _content: [{\n                type: ViewChild,\n                args: ['content']\n            }] } });\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    /** The drawer child with the `start` position. */\n    get start() {\n        return this._start;\n    }\n    /** The drawer child with the `end` position. */\n    get end() {\n        return this._end;\n    }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n    get autosize() {\n        return this._autosize;\n    }\n    set autosize(value) {\n        this._autosize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n    get hasBackdrop() {\n        return this._drawerHasBackdrop(this._start) || this._drawerHasBackdrop(this._end);\n    }\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** Drawers that belong to this container. */\n        this._drawers = new QueryList();\n        /** Event emitted when the drawer backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Emits on every ngDoCheck. Used for debouncing reflows. */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            });\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateContentMargins());\n        this._autosize = defaultAutosize;\n    }\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((drawer) => {\n            this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n            this._drawers.notifyOnChanges();\n        });\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        // Avoid hitting the NgZone through the debounce timeout.\n        this._ngZone.runOutsideAngular(() => {\n            this._doCheckSubject\n                .pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n            takeUntil(this._destroyed))\n                .subscribe(() => this.updateContentMargins());\n        });\n    }\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /** Calls `close` of both start and end drawers */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        let left = 0;\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._getWidth();\n            }\n            else if (this._left.mode == 'push') {\n                const width = this._left._getWidth();\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._getWidth();\n            }\n            else if (this._right.mode == 'push') {\n                const width = this._right._getWidth();\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || null;\n        right = right || null;\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n        }\n    }\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted\n            .pipe(filter((event) => event.fromState !== event.toState), takeUntil(this._drawers.changes))\n            .subscribe((event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange\n                .pipe(takeUntil(this._drawers.changes))\n                .subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n                this._validateDrawers();\n            });\n        });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged\n                .pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe(() => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    _setContainerClass(isAdd) {\n        const classList = this._element.nativeElement.classList;\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /** Validate the state of the drawer children components. */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    _isPushed() {\n        return ((this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over'));\n    }\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawersViaBackdrop();\n    }\n    _closeModalDrawersViaBackdrop() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && this._drawerHasBackdrop(drawer))\n            .forEach(drawer => drawer._closeViaBackdropClick());\n    }\n    _isShowingBackdrop() {\n        return ((this._isDrawerOpen(this._start) && this._drawerHasBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._drawerHasBackdrop(this._end)));\n    }\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n    // Whether argument drawer should have a backdrop when it opens\n    _drawerHasBackdrop(drawer) {\n        if (this._backdropOverride == null) {\n            return !!drawer && drawer.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatDrawerContainer, deps: [{ token: i4.Directionality, optional: true }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1.ViewportRuler }, { token: MAT_DRAWER_DEFAULT_AUTOSIZE }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.0.4\", type: MatDrawerContainer, selector: \"mat-drawer-container\", inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, host: { attributes: { \"ngSkipHydration\": \"\" }, properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container\" }, providers: [\n            {\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer,\n            },\n        ], queries: [{ propertyName: \"_content\", first: true, predicate: MatDrawerContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatDrawer, descendants: true }], viewQueries: [{ propertyName: \"_userContent\", first: true, predicate: MatDrawerContent, descendants: true }], exportAs: [\"matDrawerContainer\"], ngImport: i0, template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-drawer-content>\\n    <ng-content></ng-content>\\n  </mat-drawer-content>\\n}\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"], dependencies: [{ kind: \"component\", type: MatDrawerContent, selector: \"mat-drawer-content\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatDrawerContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer-container', exportAs: 'matDrawerContainer', host: {\n                        'class': 'mat-drawer-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                        'ngSkipHydration': '',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatDrawerContainer,\n                        },\n                    ], template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-drawer-content>\\n    <ng-content></ng-content>\\n  </mat-drawer-content>\\n}\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"] }]\n        }], ctorParameters: () => [{ type: i4.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1.ViewportRuler }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatDrawer, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatDrawerContent]\n            }], _userContent: [{\n                type: ViewChild,\n                args: [MatDrawerContent]\n            }], autosize: [{\n                type: Input\n            }], hasBackdrop: [{\n                type: Input\n            }], backdropClick: [{\n                type: Output\n            }] } });\n\nclass MatSidenavContent extends MatDrawerContent {\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSidenavContent, deps: [{ token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatSidenavContainer) }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.4\", type: MatSidenavContent, selector: \"mat-sidenav-content\", host: { attributes: { \"ngSkipHydration\": \"\" }, properties: { \"style.margin-left.px\": \"_container._contentMargins.left\", \"style.margin-right.px\": \"_container._contentMargins.right\" }, classAttribute: \"mat-drawer-content mat-sidenav-content\" }, providers: [\n            {\n                provide: CdkScrollable,\n                useExisting: MatSidenavContent,\n            },\n        ], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSidenavContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-sidenav-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content mat-sidenav-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                        'ngSkipHydration': '',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        {\n                            provide: CdkScrollable,\n                            useExisting: MatSidenavContent,\n                        },\n                    ],\n                }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatSidenavContainer)]\n                }] }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.NgZone }] });\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /** Whether the sidenav is fixed in the viewport. */\n    get fixedInViewport() {\n        return this._fixedInViewport;\n    }\n    set fixedInViewport(value) {\n        this._fixedInViewport = coerceBooleanProperty(value);\n    }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n    get fixedTopGap() {\n        return this._fixedTopGap;\n    }\n    set fixedTopGap(value) {\n        this._fixedTopGap = coerceNumberProperty(value);\n    }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n    get fixedBottomGap() {\n        return this._fixedBottomGap;\n    }\n    set fixedBottomGap(value) {\n        this._fixedBottomGap = coerceNumberProperty(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSidenav, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.4\", type: MatSidenav, selector: \"mat-sidenav\", inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, host: { attributes: { \"tabIndex\": \"-1\", \"ngSkipHydration\": \"\" }, properties: { \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"class.mat-drawer-opened\": \"opened\", \"class.mat-sidenav-fixed\": \"fixedInViewport\", \"style.top.px\": \"fixedInViewport ? fixedTopGap : null\", \"style.bottom.px\": \"fixedInViewport ? fixedBottomGap : null\" }, classAttribute: \"mat-drawer mat-sidenav\" }, exportAs: [\"matSidenav\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", dependencies: [{ kind: \"directive\", type: i1.CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], animations: [matDrawerAnimations.transformDrawer], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSidenav, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav', exportAs: 'matSidenav', animations: [matDrawerAnimations.transformDrawer], host: {\n                        'class': 'mat-drawer mat-sidenav',\n                        'tabIndex': '-1',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        '[class.mat-drawer-opened]': 'opened',\n                        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null',\n                        'ngSkipHydration': '',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], propDecorators: { fixedInViewport: [{\n                type: Input\n            }], fixedTopGap: [{\n                type: Input\n            }], fixedBottomGap: [{\n                type: Input\n            }] } });\nclass MatSidenavContainer extends MatDrawerContainer {\n    constructor() {\n        super(...arguments);\n        this._allDrawers = undefined;\n        // We need an initializer here to avoid a TS error.\n        this._content = undefined;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSidenavContainer, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.0.4\", type: MatSidenavContainer, selector: \"mat-sidenav-container\", host: { attributes: { \"ngSkipHydration\": \"\" }, properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container mat-sidenav-container\" }, providers: [\n            {\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer,\n            },\n        ], queries: [{ propertyName: \"_content\", first: true, predicate: MatSidenavContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatSidenav, descendants: true }], exportAs: [\"matSidenavContainer\"], usesInheritance: true, ngImport: i0, template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-sidenav-content>\\n    <ng-content></ng-content>\\n  </mat-sidenav-content>\\n}\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"], dependencies: [{ kind: \"component\", type: MatSidenavContent, selector: \"mat-sidenav-content\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSidenavContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav-container', exportAs: 'matSidenavContainer', host: {\n                        'class': 'mat-drawer-container mat-sidenav-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                        'ngSkipHydration': '',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatSidenavContainer,\n                        },\n                    ], template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-sidenav-content>\\n    <ng-content></ng-content>\\n  </mat-sidenav-content>\\n}\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"] }]\n        }], propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatSidenav, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatSidenavContent]\n            }] } });\n\nclass MatSidenavModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSidenavModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSidenavModule, declarations: [MatDrawer,\n            MatDrawerContainer,\n            MatDrawerContent,\n            MatSidenav,\n            MatSidenavContainer,\n            MatSidenavContent], imports: [MatCommonModule, CdkScrollableModule], exports: [CdkScrollableModule,\n            MatCommonModule,\n            MatDrawer,\n            MatDrawerContainer,\n            MatDrawerContent,\n            MatSidenav,\n            MatSidenavContainer,\n            MatSidenavContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSidenavModule, imports: [MatCommonModule, CdkScrollableModule, CdkScrollableModule,\n            MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatSidenavModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, CdkScrollableModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCommonModule,\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                    declarations: [\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.4\", type: MatToolbarRow, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatToolbar, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.4\", type: MatToolbar, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".mat-toolbar{background:var(--mat-toolbar-container-background-color);color:var(--mat-toolbar-container-text-color)}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font-family:var(--mat-toolbar-title-text-font);font-size:var(--mat-toolbar-title-text-size);line-height:var(--mat-toolbar-title-text-line-height);font-weight:var(--mat-toolbar-title-text-weight);letter-spacing:var(--mat-toolbar-title-text-tracking);margin:0}.cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar .mat-mdc-button-base.mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap;height:var(--mat-toolbar-standard-height)}@media(max-width: 599px){.mat-toolbar-row,.mat-toolbar-single-row{height:var(--mat-toolbar-mobile-height)}}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%;min-height:var(--mat-toolbar-standard-height)}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:var(--mat-toolbar-mobile-height)}}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', inputs: ['color'], host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".mat-toolbar{background:var(--mat-toolbar-container-background-color);color:var(--mat-toolbar-container-text-color)}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font-family:var(--mat-toolbar-title-text-font);font-size:var(--mat-toolbar-title-text-size);line-height:var(--mat-toolbar-title-text-line-height);font-weight:var(--mat-toolbar-title-text-weight);letter-spacing:var(--mat-toolbar-title-text-tracking);margin:0}.cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar .mat-mdc-button-base.mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap;height:var(--mat-toolbar-standard-height)}@media(max-width: 599px){.mat-toolbar-row,.mat-toolbar-single-row{height:var(--mat-toolbar-mobile-height)}}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%;min-height:var(--mat-toolbar-standard-height)}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:var(--mat-toolbar-mobile-height)}}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }], propDecorators: { _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\nclass MatToolbarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: MatToolbarModule, declarations: [MatToolbar, MatToolbarRow], imports: [MatCommonModule], exports: [MatToolbar, MatToolbarRow, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatToolbarModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n"],"x_google_ignoreList":[16,17,18]}