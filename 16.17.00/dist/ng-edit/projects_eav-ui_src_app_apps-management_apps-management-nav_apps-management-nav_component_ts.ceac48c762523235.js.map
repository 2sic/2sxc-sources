{"version":3,"file":"projects_eav-ui_src_app_apps-management_apps-management-nav_apps-management-nav_component_ts.ceac48c762523235.js","mappings":"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","names":["i0","_r7","ctx_r6","openLightspeedFeatureInfo","_r11","ctx_r10","openLightspeed","AppsListActionsComponent_div_5_mat_icon_1_Template","AppsListActionsComponent_div_5_mat_icon_2_Template","ctx_r3","appHasLightSpeed","app","Lightspeed","Title","appLightSpeedEnabled","_r13","ctx_r12","flushCache","ctx_r14","deleteApp","ctx_r5","IsApp","AppsListActionsComponent","_class","agInit","params","this","data","lightspeedEnabled","Id","IsEnabled","refresh","onOpenLightspeed","onFlush","onDelete","selectors","decls","vars","consts","template","rf","ctx","AppsListActionsComponent_mat_icon_2_Template","AppsListActionsComponent_mat_icon_3_Template","AppsListActionsComponent_div_4_Template","AppsListActionsComponent_div_5_Template","AppsListActionsComponent_ng_template_11_Template","IsGlobal","IsInherited","_r4","AppListShowIcons","states","true","tooltip","icon","false","AppListCodeErrorIcons","clickable","getUrl","window","$2sxc","http","apiUrl","AgBoolCellIconsDefault","AgBoolIconRenderer_a_1_ng_container_1_Template","ctx_r0","url","_r1","_c0","ctx_r2","AgBoolIconRenderer","value","allSettings","settings","d","AgBoolIconRenderer_a_1_Template","AgBoolIconRenderer_ng_template_2_Template","$event","_r3","importApp","ctx_r4","openChange","browseCatalog","createInheritedApp","ctx_r7","addFromFolder","ctx_r8","ctx_r9","createApp","vm_r1","apps","gridOptions","fabOpen","isAddFromFolderEnabled","AppsListComponent","BaseComponent","constructor","router","route","appsListService","snackBar","context","featuresService","dialog","viewContainerRef","changeDetectorRef","super","fabOpen$","BehaviorSubject","buildGridOptions","lightspeedEnabled$","refreshApps$","Subject","ngOnInit","apps$","pipe","startWith","undefined","switchMap","getAll","catchError","of","share","subscription","add","refreshOnChildClosedDeep","subscribe","next","isAddFromFolderEnabled$","isEnabled$","FeatureNames","AppSyncWithSiteFiles","LightSpeed","viewModel$","combineLatest","map","ngOnDestroy","complete","open","navigate","relativeTo","firstChild","files","state","result","prompt","Name","delete","error","duration","alert","flushApp","confirm","openLightSpeed","formUrl","convertFormToUrl","AppAdminHelpers","getLightSpeedEditParams","zoneId","openApp","toString","openLightSpeedFeatInfo","FeatureComponentBase","openDialog","defaultGridOptions","columnDefs","headerName","field","width","headerClass","cellClass","split","sortable","filter","valueGetter","cellRenderer","IdFieldComponent","cellRendererParams","tooltipGetter","Guid","BooleanFilterComponent","IsHidden","flex","minWidth","sort","onCellClicked","Thumbnail","Folder","Version","Items","pinned","i1","i2","i3","i4","i5","i6","features","AppsListComponent_div_0_Template","SiteLanguagesStatusComponent","toggleLanguage","event","onToggleLanguage","checked","languages","SiteLanguagesComponent","zoneService","refreshLanguages$","getLanguages","language","enable","Code","Culture","SiteLanguagesComponent_div_0_Template","info_r17","link","label","_r21","$implicit","ctx_r20","copyToClipboard","SystemInfoComponent_ng_container_0_div_12_ng_container_6_Template","info_r22","target","SystemInfoComponent_ng_container_0_div_35_ng_container_6_a_1_Template","SystemInfoComponent_ng_container_0_div_35_ng_container_6_a_2_Template","_r30","ctx_r29","SystemInfoComponent_ng_container_0_div_35_ng_container_6_Template","SystemInfoComponent_ng_container_0_ng_container_118_app_field_hint_1_Template","_r14","errors","pattern","info_r32","SystemInfoComponent_ng_container_0_div_133_ng_container_6_a_1_Template","SystemInfoComponent_ng_container_0_div_133_ng_container_6_a_2_Template","_r40","ctx_r39","SystemInfoComponent_ng_container_0_div_133_ng_container_6_Template","SystemInfoComponent_ng_container_0_div_12_Template","SystemInfoComponent_ng_container_0_ng_container_19_Template","_r42","ctx_r41","openGlobalSettings","SystemInfoComponent_ng_container_0_div_35_Template","SystemInfoComponent_ng_container_0_ng_container_43_Template","ctx_r43","openSiteSettings","SystemInfoComponent_ng_container_0_div_60_Template","SystemInfoComponent_ng_container_0_ng_container_63_Template","SystemInfoComponent_ng_container_0_div_75_Template","SystemInfoComponent_ng_container_0_ng_container_78_Template","SystemInfoComponent_ng_container_0_ng_container_97_Template","ctx_r44","openInsights","ctx_r45","activatePageLog","ctx_r46","pageLogDuration","SystemInfoComponent_ng_container_0_ng_container_118_Template","SystemInfoComponent_ng_container_0_div_133_Template","vm_r3","systemInfos","siteInfos","lsEnabled","_c1","cspEnabled","_c2","_c3","positiveWholeNumber","loading","touched","valid","warningIcon","warningInfos","tmp_2_0","icon_r47","label_r48","SystemInfoComponent","dialogService","sxcInsightsService","systemInfoSet$","languages$","loading$","buildViewModel","getSystemInfo","text","sitePrimaryApp","dialogSettings","Context","Site","PrimaryApp","openAppAdministration","ZoneId","AppId","globalPrimaryApp","System","form","res","document","activeElement","HTMLElement","blur","resetForm","systemInfoSet","systemInfos$","EavVersion","Platform","PlatformVersion","Zones","Fingerprint","License","Owner","GoToRegistration","siteInfos$","allLanguages","length","activeLanguages","l","SiteId","Apps","warningIcon$","Messages","WarningsObsolete","WarningsOther","warningInfos$","lsEnabled$","cspEnabled$","ContentSecurityPolicy","inputs","SystemInfoComponent_ng_container_0_Template","SystemInfoComponent_ng_template_2_Template","id_r4","_r6","ngIf","guid_r7","_r9","security_r10","link_r11","findOutMore","FeatureDetailsDialogComponent","dialogData","dialogRef","closeDialog","close","MAT_DIALOG_DATA","FeatureDetailsDialogComponent_div_7_Template","FeatureDetailsDialogComponent_div_8_Template","FeatureDetailsDialogComponent_div_9_Template","FeatureDetailsDialogComponent_button_11_Template","feature","Description","NameId","Security","Impact","Message","Link","FeaturesListEnabledReasonComponent","EnabledReasonDetailed","FeaturesListEnabledComponent","FeaturesStatusComponent","disabled","isDisabled","toggle","nextValue","onToggle","ExpirationExtension","expandFeature","getExpiration","Expiration","expandLicense","license","lowestExpiration","Features","f","dateString","ExpMessage","ExpIcon","ExpWarningIcon","expires","startsWith","expDate","Date","toDateString","setDate","getDate","endsWith","AgGridHeightDirective","elementRef","itemsCount","headerHeight","rowHeight","maxRows","extraHeight","element","nativeElement","ngOnChanges","changes","style","height","LicensesOrderPipe","transform","licenses","Array","isArray","a","b","Priority","pure","ActiveFeaturesCountPipe","license_r3","LicenseInfoComponent_mat_accordion_0_mat_expansion_panel_1_ng_container_17_Template","expanded","LicenseInfoComponent_mat_accordion_0_mat_expansion_panel_1_Template","trackLicenses","LicenseInfoComponent","featuresConfigService","disabled$","refreshLicenses$","getLicenses","tap","index","openRegistration","showFeatureDetails","autoFocus","markForCheck","toggleFeature","enabled","forkJoin","saveFeatures","FeatureGuid","Enabled","timer","cellDefaults","cellDefaultsTextFilter","tooltipValueGetter","IsConfigurable","viewQuery","AgGridAngular","LicenseInfoComponent_mat_accordion_0_Template","_r12","ctx_r11","ctx_r13","changeTab","AppsManagementNavComponent_div_0_div_11_Template","AppsManagementNavComponent_div_0_app_system_info_12_Template","AppsManagementNavComponent_div_0_div_14_Template","AppsManagementNavComponent_div_0_app_apps_list_15_Template","AppsManagementNavComponent_div_0_div_17_Template","AppsManagementNavComponent_div_0_app_site_languages_18_Template","AppsManagementNavComponent_div_0_div_20_Template","AppsManagementNavComponent_div_0_app_license_info_21_Template","tabIndex","AppsManagementNavComponent","appDialogConfigService","dialogSettings$","tabs","fetchDialogSettings","events","NavigationEnd","indexOf","snapshot","path","getShared$","AppsManagementNavComponent_div_0_Template","BaseSubsinkComponent","pairwise","hadChild","hasChild","refreshOnChildClosedShallow","FieldHintComponent_mat_hint_1_ng_container_1_Template","_r2","FieldHintComponent_mat_error_2_ng_container_1_Template","FieldHintComponent","isError","isShort","toggleIsShort","ngContentSelectors","FieldHintComponent_mat_hint_1_Template","FieldHintComponent_mat_error_2_Template","FieldHintComponent_ng_template_3_Template","id","align","copy","accentedSort","animateRows","enableCellTextSelection","suppressScrollOnNewData","valueCache","defaultColDef","filterParams","newRowsAction","tooltipShowDelay","tooltipHideDelay","suppressMovableColumns","str","el","createElement","setAttribute","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/apps-management/apps-list/apps-list-actions/apps-list-actions.component.html","./projects/eav-ui/src/app/apps-management/apps-list/apps-list-actions/apps-list-actions.component.ts","./projects/eav-ui/src/app/apps-management/apps-list/app-list-grid-config.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-params.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.html","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.component.ts","./projects/eav-ui/src/app/apps-management/apps-list/apps-list.component.html","./projects/eav-ui/src/app/apps-management/apps-list/apps-list.component.ts","./projects/eav-ui/src/app/apps-management/site-languages/site-languages-status/site-languages-status.component.ts","./projects/eav-ui/src/app/apps-management/site-languages/site-languages-status/site-languages-status.component.html","./projects/eav-ui/src/app/apps-management/site-languages/site-languages.component.html","./projects/eav-ui/src/app/apps-management/site-languages/site-languages.component.ts","./projects/eav-ui/src/app/apps-management/system-info/system-info.component.html","./projects/eav-ui/src/app/apps-management/system-info/system-info.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.html","./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled-reason/features-list-enabled-reason.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled-reason/features-list-enabled-reason.component.html","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled/features-list-enabled.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled/features-list-enabled.component.html","./projects/eav-ui/src/app/apps-management/licence-info/features-status/features-status.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-status/features-status.component.html","./projects/eav-ui/src/app/features/expiration-extension.ts","./projects/eav-ui/src/app/apps-management/licence-info/ag-grid-height.directive.ts","./projects/eav-ui/src/app/apps-management/licence-info/licenses-order.pipe.ts","./projects/eav-ui/src/app/apps-management/licence-info/active-features-count.pipe.ts","./projects/eav-ui/src/app/apps-management/licence-info/license-info.component.html","./projects/eav-ui/src/app/apps-management/licence-info/license-info.component.ts","./projects/eav-ui/src/app/apps-management/apps-management-nav/apps-management-nav.component.html","./projects/eav-ui/src/app/apps-management/apps-management-nav/apps-management-nav.component.ts","./projects/eav-ui/src/app/shared/components/base-component/base.component.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.html","./projects/eav-ui/src/app/shared/constants/default-grid-options.constants.ts","./projects/eav-ui/src/app/shared/helpers/copy-to-clipboard.helper.ts"],"sourcesContent":["<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button icon\"\r\n    [tippy]=\"app.IsGlobal ? 'This app is global' : app.IsInherited ? 'This app is inherited' : ''\"\r\n    [tippyDisabled]=\"!app.IsGlobal && !app.IsInherited\">\r\n    <mat-icon *ngIf=\"app.IsGlobal\">foundation</mat-icon>\r\n    <mat-icon *ngIf=\"app.IsInherited\">holiday_village</mat-icon>\r\n  </div>\r\n  <div *ngIf=\"!lightspeedEnabled\" class=\"eav-grid-action-button disabled\" tippy=\"Lightspeed is disabled\"\r\n    (click)=\"openLightspeedFeatureInfo()\">\r\n    <mat-icon matBadgeSize=\"small\" matBadge=\"💎\" matBadgePosition=\"below after\" aria-hidden=\"false\">\r\n      bolt\r\n    </mat-icon>\r\n  </div>\r\n\r\n  <div *ngIf=\"lightspeedEnabled\" class=\"eav-grid-action-button {{ appHasLightSpeed ? '' : 'disabled'}}\" matRipple\r\n    [tippy]=\"appHasLightSpeed ? app.Lightspeed.Title : 'App not yet configured for LightSpeed'\"\r\n    (click)=\"openLightspeed()\">\r\n    <mat-icon *ngIf=\"appLightSpeedEnabled\" matBadgeSize=\"small\" matBadge=\"✅\" matBadgePosition=\"below after\"\r\n      aria-hidden=\"false\">\r\n      bolt\r\n    </mat-icon>\r\n    <mat-icon *ngIf=\"!appLightSpeedEnabled\" matBadgeSize=\"small\" matBadge=\"⛔\" matBadgePosition=\"below after\"\r\n      aria-hidden=\"false\">\r\n      bolt\r\n    </mat-icon>\r\n  </div>\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"More\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"grid-more-menu\">\r\n  <ng-template matMenuContent>\r\n    <button mat-menu-item (click)=\"flushCache()\">\r\n      <mat-icon>cached</mat-icon>\r\n      <span>Flush cache</span>\r\n    </button>\r\n    <button mat-menu-item [disabled]=\"!app.IsApp\" (click)=\"deleteApp()\">\r\n      <mat-icon>delete</mat-icon>\r\n      <span>Delete</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { App } from '../../models/app.model';\r\nimport { AppsListActionsParams } from './apps-list-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-apps-list-actions',\r\n  templateUrl: './apps-list-actions.component.html',\r\n  styleUrls: ['./apps-list-actions.component.scss'],\r\n})\r\nexport class AppsListActionsComponent implements ICellRendererAngularComp {\r\n  app: App;\r\n\r\n  public params: ICellRendererParams & AppsListActionsParams;\r\n  public lightspeedEnabled: boolean;\r\n  public appHasLightSpeed: boolean;\r\n  public appLightSpeedEnabled: boolean;\r\n\r\n  agInit(params: ICellRendererParams & AppsListActionsParams): void {\r\n    this.params = params;\r\n    this.app = this.params.data;\r\n    this.lightspeedEnabled = this.params.lightspeedEnabled();\r\n    this.appHasLightSpeed = this.app.Lightspeed?.Id != null; //.IsEnabled == true;\r\n    this.appLightSpeedEnabled = this.app.Lightspeed?.IsEnabled == true;\r\n  }\r\n\r\n//   appLightSpeedExits(): boolean {\r\n// console.log('2dm app ls check', this.app.Lightspeed);\r\n//     return this.app.Lightspeed?.IsEnabled == true;\r\n//   }\r\n\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  openLightspeed(): void {\r\n    this.params.onOpenLightspeed(this.app);\r\n  }\r\n\r\n  openLightspeedFeatureInfo(): void {\r\n    this.params.openLightspeedFeatureInfo();\r\n  }\r\n\r\n  flushCache(): void {\r\n    this.params.onFlush(this.app);\r\n  }\r\n\r\n  deleteApp(): void {\r\n    this.params.onDelete(this.app);\r\n  }\r\n}\r\n","import { AgBoolCellIconSettings } from '../../shared/ag-grid/apps-list-show/ag-bool-icon-params';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { App } from '../models/app.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport const AppListShowIcons: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      tooltip: 'Show this app to users',\r\n      icon: 'visibility',\r\n    },\r\n    false: {\r\n      tooltip: 'Hide this app from users',\r\n      icon: 'visibility_off',\r\n    }\r\n  }\r\n};\r\n\r\nexport const AppListCodeErrorIcons: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      clickable: true,\r\n      tooltip: 'This App uses obsolete code which will cause problems on future upgrades. Click to see details.',\r\n      icon: 'bug_report',\r\n      getUrl: (data: App) => window.$2sxc.http.apiUrl('sys/insights/logs?key=warnings-obsolete&filter=AppId=' + data.Id),\r\n    },\r\n    false: {\r\n      tooltip: 'Hide this app from users',\r\n      icon: '',\r\n    }\r\n  }\r\n};\r\n","export interface AgBoolCellIconSetting {\r\n  clickable?: boolean;\r\n  tooltip: string;\r\n  icon: string;\r\n  url?: string;\r\n  getUrl?: (data: any) => string;\r\n}\r\n\r\nexport interface AgBoolCellIconSettings {\r\n  states: Record<'true' | 'false' | string, AgBoolCellIconSetting>;\r\n}\r\n\r\nexport interface AgBoolCellIconsParams<T = any> {\r\n  settings(data: T): AgBoolCellIconSettings;\r\n}\r\n\r\nexport const AgBoolCellIconsDefault: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      tooltip: 'true/on',\r\n      icon: 'radio_button_checked',\r\n    },\r\n    false: {\r\n      tooltip: 'false/off',\r\n      icon: 'radio_button_unchecked',\r\n    }\r\n  }\r\n};","<div class=\"icon-container\">\r\n  <a *ngIf=\"data.url else showIcon\" [href]=\"data.url\" target=\"_blank\">\r\n    <ng-container *ngTemplateOutlet=\"showIcon\"></ng-container>\r\n  </a>\r\n</div>\r\n\r\n<ng-template #showIcon>\r\n  <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n    <mat-icon>{{ data.icon }}</mat-icon>\r\n  </div>\r\n</ng-template>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { AgBoolCellIconSetting, AgBoolCellIconSettings, AgBoolCellIconsDefault, AgBoolCellIconsParams } from './ag-bool-icon-params';\r\n\r\n@Component({\r\n  selector: 'app-ag-bool-icon-renderer',\r\n  templateUrl: './ag-bool-icon-renderer.html',\r\n})\r\nexport class AgBoolIconRenderer implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  private allSettings: AgBoolCellIconSettings;\r\n\r\n  data: AgBoolCellIconSetting; // | { link: boolean  };\r\n\r\n  agInit(params: ICellRendererParams & AgBoolCellIconsParams): void {\r\n    this.value = params.value;\r\n\r\n    this.allSettings = params.settings?.(params.data) ?? AgBoolCellIconsDefault;\r\n    const d = this.allSettings.states[this.value ? 'true' : 'false'];\r\n    this.data = { \r\n      ...d,\r\n      url: d.url ?? d.getUrl?.(params.data),\r\n      // link: !!(d.url || d.getUrl),\r\n    };\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"grid-wrapper mat-tab-grid-wrapper\" *ngIf=\"viewModel$ | async as vm\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.apps\" [gridOptions]=\"gridOptions\" appDragAndDrop\r\n    [allowedFileTypes]=\"'zip'\" (filesDropped)=\"importApp($event)\">\r\n  </ag-grid-angular>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <eco-fab-speed-dial class=\"eav-eco-fab-speed-dial\" [ngClass]=\"{ 'fab-opened': vm.fabOpen }\" (openChange)=\"openChange($event)\">\r\n      <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n        <button mat-fab>\r\n          <mat-icon class=\"spin180\">{{ vm.fabOpen ? 'close' : 'add' }}</mat-icon>\r\n        </button>\r\n      </eco-fab-speed-dial-trigger>\r\n      <eco-fab-speed-dial-actions class=\"eav-eco-fab-speed-dial-actions\">\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Find more apps\" (click)=\"browseCatalog()\">\r\n          <mat-icon>search</mat-icon>\r\n        </button>\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Create inherited app\" (click)=\"createInheritedApp()\">\r\n          <mat-icon>holiday_village</mat-icon>\r\n        </button>\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Add from folder\" (click)=\"addFromFolder()\">\r\n          <mat-icon [matBadgeHidden]=\"vm.isAddFromFolderEnabled\" matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadge=\"💎\"\r\n            matBadgePosition=\"below after\" aria-hidden=\"false\">\r\n            add\r\n          </mat-icon>\r\n        </button>\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Import app\" (click)=\"importApp()\">\r\n          <mat-icon>cloud_upload</mat-icon>\r\n        </button>\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Create app\" (click)=\"createApp()\">\r\n          <mat-icon>add</mat-icon>\r\n        </button>\r\n      </eco-fab-speed-dial-actions>\r\n    </eco-fab-speed-dial>\r\n  </mat-dialog-actions>\r\n</div>","import { GridOptions, ICellRendererParams } from '@ag-grid-community/core';\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, catchError, combineLatest, map, Observable, of, share, startWith, Subject, switchMap } from 'rxjs';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { BaseComponent } from '../../shared/components/base-component/base.component';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { FileUploadDialogData } from '../../shared/components/file-upload-dialog';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { App } from '../models/app.model';\r\nimport { AppsListService } from '../services/apps-list.service';\r\nimport { AppsListActionsComponent } from './apps-list-actions/apps-list-actions.component';\r\nimport { AppsListActionsParams } from './apps-list-actions/apps-list-actions.models';\r\nimport { FeatureComponentBase } from '../../features/shared/base-feature.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AppAdminHelpers } from '../../app-administration/app-admin-helpers';\r\nimport { AppListCodeErrorIcons, AppListShowIcons } from './app-list-grid-config';\r\nimport { AgBoolIconRenderer } from '../../shared/ag-grid/apps-list-show/ag-bool-icon-renderer.component';\r\nimport { AgBoolCellIconsParams } from '../../shared/ag-grid/apps-list-show/ag-bool-icon-params';\r\n\r\n@Component({\r\n  selector: 'app-apps-list',\r\n  templateUrl: './apps-list.component.html',\r\n  styleUrls: ['./apps-list.component.scss'],\r\n})\r\nexport class AppsListComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  apps$: Observable<App[]>;\r\n  fabOpen$ = new BehaviorSubject(false);\r\n  gridOptions = this.buildGridOptions();\r\n  isAddFromFolderEnabled$: Observable<boolean>;\r\n  lightspeedEnabled$ = new BehaviorSubject<boolean>(false);\r\n\r\n  private refreshApps$ = new Subject<void>();\r\n\r\n  viewModel$: Observable<AppsListViewModel>;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private appsListService: AppsListService,\r\n    private snackBar: MatSnackBar,\r\n    private context: Context,\r\n    // Services for showing features in the menu\r\n    private featuresService: FeaturesService,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.apps$ = this.refreshApps$.pipe(\r\n      startWith(undefined),\r\n      switchMap(() => this.appsListService.getAll().pipe(catchError(() => of(undefined)))),\r\n      share(),\r\n    );\r\n    this.subscription.add(this.refreshOnChildClosedDeep().subscribe(() => { this.refreshApps$.next(); }));\r\n    this.isAddFromFolderEnabled$ = this.featuresService.isEnabled$(FeatureNames.AppSyncWithSiteFiles);\r\n    this.subscription.add(this.featuresService.isEnabled$(FeatureNames.LightSpeed).subscribe(this.lightspeedEnabled$));\r\n    this.viewModel$ = combineLatest([this.apps$, this.fabOpen$, this.isAddFromFolderEnabled$]).pipe(\r\n      map(([apps, fabOpen, isAddFromFolderEnabled]) => {\r\n        return { apps, fabOpen, isAddFromFolderEnabled};\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.fabOpen$.complete();\r\n    this.refreshApps$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  openChange(open: boolean): void {\r\n    this.fabOpen$.next(open);\r\n  }\r\n\r\n  browseCatalog(): void {\r\n    window.open('https://2sxc.org/apps', '_blank');\r\n  }\r\n\r\n  createApp(): void {\r\n    this.router.navigate(['create'], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  createInheritedApp(): void {\r\n    this.router.navigate(['create-inherited'], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  addFromFolder(): void {\r\n    this.router.navigate(['add-app-from-folder'], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  importApp(files?: File[]): void {\r\n    const dialogData: FileUploadDialogData = { files };\r\n    this.router.navigate(['import'], { relativeTo: this.route.firstChild, state: dialogData });\r\n  }\r\n\r\n  private deleteApp(app: App): void {\r\n    const result = prompt(`This cannot be undone. To really delete this app, type 'yes!' or type/paste the app-name here. Are you sure want to delete '${app.Name}' (${app.Id})?`);\r\n    if (result === null) { return; }\r\n    if (result === app.Name || result === 'yes!') {\r\n      this.snackBar.open('Deleting...');\r\n      this.appsListService.delete(app.Id).subscribe({\r\n        error: () => {\r\n          this.snackBar.open('Delete failed. Please check console for more information', undefined, { duration: 3000 });\r\n          this.refreshApps$.next();\r\n        },\r\n        next: () => {\r\n          this.snackBar.open('Deleted', undefined, { duration: 2000 });\r\n          this.refreshApps$.next();\r\n        },\r\n      });\r\n    } else {\r\n      alert('Input did not match - will not delete');\r\n    }\r\n  }\r\n\r\n  private flushApp(app: App): void {\r\n    if (!confirm(`Flush the App Cache for ${app.Name} (${app.Id})?`)) { return; }\r\n    this.snackBar.open('Flushing cache...');\r\n    this.appsListService.flushCache(app.Id).subscribe({\r\n      error: () => {\r\n        this.snackBar.open('Cache flush failed. Please check console for more information', undefined, { duration: 3000 });\r\n      },\r\n      next: () => {\r\n        this.snackBar.open('Cache flushed', undefined, { duration: 2000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  private openLightSpeed(app: App): void {\r\n    const formUrl = convertFormToUrl(AppAdminHelpers.getLightSpeedEditParams(app.Id));\r\n    this.router.navigate([`${this.context.zoneId}/${app.Id}/edit/${formUrl}`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private openApp(app: App): void {\r\n    this.router.navigate([app.Id.toString()], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  openLightSpeedFeatInfo() {\r\n    FeatureComponentBase.openDialog(this.dialog, FeatureNames.LightSpeed, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          headerName: 'ID',\r\n          field: 'Id',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'id-action no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agNumberColumnFilter',\r\n          valueGetter: (params) => {\r\n            const app: App = params.data;\r\n            return app.Id;\r\n          },\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<App> = {\r\n              tooltipGetter: (app) => `ID: ${app.Id}\\nGUID: ${app.Guid}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          field: 'Show',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'icons no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: BooleanFilterComponent,\r\n          valueGetter: (params) => {\r\n            const app: App = params.data;\r\n            return !app.IsHidden;\r\n          },\r\n          cellRenderer: AgBoolIconRenderer,\r\n          cellRendererParams: (() => ({ settings: () => AppListShowIcons }))(),\r\n        },\r\n        {\r\n          field: 'Name',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'apps-list-primary-action highlight'.split(' '),\r\n          sortable: true,\r\n          sort: 'asc',\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const app: App = params.data;\r\n            return app.Name;\r\n          },\r\n          onCellClicked: (params) => {\r\n            const app: App = params.data;\r\n            this.openApp(app);\r\n          },\r\n          cellRenderer: (params: ICellRendererParams) => {\r\n            const app: App = params.data;\r\n            return `\r\n            <div class=\"container\">\r\n              ${app.Thumbnail\r\n                ? `<img class=\"image logo\" src=\"${app.Thumbnail}?w=40&h=40&mode=crop\"></img>`\r\n                : `<div class=\"image logo\"><span class=\"material-icons-outlined\">star_border</span></div>`\r\n              }\r\n              <div class=\"text\">${params.value}</div>\r\n            </div>\r\n            `;\r\n          },\r\n        },\r\n        {\r\n          field: 'Folder',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const app: App = params.data;\r\n            return app.Folder;\r\n          },\r\n        },\r\n        {\r\n          field: 'Version',\r\n          width: 78,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const app: App = params.data;\r\n            return app.Version;\r\n          },\r\n        },\r\n        {\r\n          field: 'Items',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'number-cell no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agNumberColumnFilter',\r\n          valueGetter: (params) => {\r\n            const app: App = params.data;\r\n            return app.Items;\r\n          },\r\n        },\r\n        {\r\n          field: 'HasCodeWarnings',\r\n          headerName: 'Code',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'icons no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: BooleanFilterComponent,\r\n          cellRenderer: AgBoolIconRenderer,\r\n          cellRendererParams: (() => ({ settings: (app) => AppListCodeErrorIcons } as AgBoolCellIconsParams<App>))(),\r\n        },\r\n        {\r\n          width: 122,\r\n          cellClass: 'secondary-action no-padding'.split(' '),\r\n          pinned: 'right',\r\n          cellRenderer: AppsListActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: AppsListActionsParams = {\r\n              onDelete: (app) => this.deleteApp(app),\r\n              onFlush: (app) => this.flushApp(app),\r\n              onOpenLightspeed: (app) => this.openLightSpeed(app),\r\n              lightspeedEnabled: () => this.lightspeedEnabled$.value,\r\n              openLightspeedFeatureInfo: () => this.openLightSpeedFeatInfo(),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface AppsListViewModel {\r\n  apps: App[];\r\n  fabOpen: any;\r\n  isAddFromFolderEnabled: boolean;\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { SiteLanguage } from '../../models/site-language.model';\r\nimport { SiteLanguagesStatusParams } from './site-languages-status.models';\r\n\r\n@Component({\r\n  selector: 'app-site-languages-status',\r\n  templateUrl: './site-languages-status.component.html',\r\n  styleUrls: ['./site-languages-status.component.scss'],\r\n})\r\nexport class SiteLanguagesStatusComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  private params: ICellRendererParams & SiteLanguagesStatusParams;\r\n\r\n  agInit(params: ICellRendererParams & SiteLanguagesStatusParams): void {\r\n    this.params = params;\r\n    this.value = this.params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  toggleLanguage(event: MatSlideToggleChange): void {\r\n    const language: SiteLanguage = this.params.data;\r\n    this.params.onToggleLanguage(language, event.checked);\r\n  }\r\n}\r\n","<mat-slide-toggle [checked]=\"value\" (change)=\"toggleLanguage($event)\"></mat-slide-toggle>\r\n","<div class=\"grid-wrapper mat-tab-grid-wrapper\" *ngIf=\"viewModel$ | async as vm\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.languages\" [gridOptions]=\"gridOptions\">\r\n  </ag-grid-angular>\r\n\r\n  <mat-dialog-actions align=\"end\"></mat-dialog-actions>\r\n</div>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { catchError, combineLatest, map, Observable, of, share, startWith, Subject, switchMap } from 'rxjs';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { SiteLanguage } from '../models/site-language.model';\r\nimport { ZoneService } from '../services/zone.service';\r\nimport { SiteLanguagesStatusComponent } from './site-languages-status/site-languages-status.component';\r\nimport { SiteLanguagesStatusParams } from './site-languages-status/site-languages-status.models';\r\n\r\n@Component({\r\n  selector: 'app-site-languages',\r\n  templateUrl: './site-languages.component.html',\r\n  styleUrls: ['./site-languages.component.scss'],\r\n})\r\nexport class SiteLanguagesComponent implements OnInit, OnDestroy {\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private refreshLanguages$ = new Subject<void>();\r\n\r\n  viewModel$: Observable<SiteLanguagesViewModel>;\r\n\r\n  constructor(private zoneService: ZoneService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.viewModel$ = combineLatest([\r\n      this.refreshLanguages$.pipe(\r\n        startWith(undefined),\r\n        switchMap(() => this.zoneService.getLanguages().pipe(catchError(() => of(undefined)))),\r\n        share(),\r\n      )\r\n    ]).pipe(\r\n      map(([languages]) => {\r\n        return { languages };\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.refreshLanguages$.complete();\r\n  }\r\n\r\n  private toggleLanguage(language: SiteLanguage, enable: boolean): void {\r\n    this.zoneService.toggleLanguage(language.Code, enable).subscribe({\r\n      error: () => {\r\n        this.refreshLanguages$.next();\r\n      },\r\n      next: () => {\r\n        this.refreshLanguages$.next();\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          headerName: 'ID',\r\n          field: 'Id',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'id-action no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const language: SiteLanguage = params.data;\r\n            return language.Code;\r\n          },\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<SiteLanguage> = {\r\n              tooltipGetter: (language: SiteLanguage) => `ID: ${language.Code}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          field: 'Name',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'primary-action highlight no-outline'.split(' '),\r\n          sortable: true,\r\n          sort: 'asc',\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const language: SiteLanguage = params.data;\r\n            return language.Culture;\r\n          },\r\n          onCellClicked: (params) => {\r\n            const language: SiteLanguage = params.data;\r\n            this.toggleLanguage(language, !language.IsEnabled);\r\n          },\r\n        },\r\n        {\r\n          field: 'Status',\r\n          width: 72,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: BooleanFilterComponent,\r\n          valueGetter: (params) => {\r\n            const language: SiteLanguage = params.data;\r\n            return language.IsEnabled;\r\n          },\r\n          cellRenderer: SiteLanguagesStatusComponent,\r\n          cellRendererParams: (() => {\r\n            const params: SiteLanguagesStatusParams = {\r\n              onToggleLanguage: (language, enable) => this.toggleLanguage(language, enable),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface SiteLanguagesViewModel {\r\n  languages: SiteLanguage[];\r\n}\r\n","<ng-container *ngIf=\"viewModel$ | async as vm\">\r\n  <div class=\"eav-cards-box\">\r\n    <!-- Platform Info -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">settings_applications</mat-icon>\r\n        </div>\r\n        <mat-card-title>Platform</mat-card-title>\r\n        <mat-card-subtitle>What you are running</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div class=\"eav-info-row\" *ngFor=\"let info of vm.systemInfos\">\r\n          <div class=\"eav-info-row__label\">{{ info.label }}:</div>\r\n          <div class=\"eav-info-row__value\">\r\n            <span class=\"eav-info-row__value__span eav-click\" [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">{{ info.value }}</span>\r\n            <ng-container *ngIf=\"info.link\">\r\n              <a class=\"eav-info-row__link\" [routerLink]=\"info.link.url\">{{ info.link.label }}</a>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n        <h4>Global Settings</h4>\r\n        <p>\r\n          This includes both pre-defined SystemSettings as well as custom Settings.\r\n          It will affect the entire Installation.\r\n        </p>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/settings' }\"></ng-container>\r\n        <button mat-button class=\"eav-button__with-icon\" (click)=\"openGlobalSettings()\">\r\n          <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n          <span>Open Global Settings</span>\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    \r\n    <!-- Site Info -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">public</mat-icon>\r\n        </div>\r\n        <mat-card-title>This Site</mat-card-title>\r\n        <mat-card-subtitle>The current Site you're on</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div class=\"eav-info-row\" *ngFor=\"let info of vm.siteInfos\">\r\n          <div class=\"eav-info-row__label\">{{ info.label }}:</div>\r\n          <div class=\"eav-info-row__value\">\r\n            <span [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">{{ info.value }}</span>\r\n            <ng-container *ngIf=\"info.link\">\r\n              <a class=\"eav-info-row__link\" *ngIf=\"info.link.target === 'angular'\" [routerLink]=\"info.link.url\">{{\r\n                info.link.label\r\n                }}</a>\r\n              <a class=\"eav-info-row__link\" *ngIf=\"info.link.target !== 'angular'\" [href]=\"info.link.url\"\r\n                [target]=\"info.link.target\">{{ info.link.label }}</a>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-content-separator\"></div>\r\n        <h4>Site Settings</h4>\r\n        <p>\r\n          This includes both pre-defined SystemSettings as well as custom Settings.\r\n          It will affect the entire Site / Portal.\r\n        </p>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/settings' }\"></ng-container>\r\n        <button mat-button class=\"eav-button__with-icon\" (click)=\"openSiteSettings()\">\r\n          <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n          <span>Open Site Settings</span>\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    \r\n    <!-- Performance / Lightspeed -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">bolt</mat-icon>\r\n        </div>\r\n        <mat-card-title>Performance</mat-card-title>\r\n        <mat-card-subtitle>Performance Enhancements and Caching</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <app-feature-text-info [featureNameId]=\"'LightSpeedOutputCache'\" [asInfo]=\"true\"></app-feature-text-info>\r\n        <div *ngIf=\"vm.lsEnabled\">\r\n          LightSpeed is enabled.\r\n          Configure it in each site/app as you need.\r\n        </div>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/lightspeed' }\"></ng-container>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    \r\n    <!-- Security -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">local_police</mat-icon>\r\n        </div>\r\n        <mat-card-title>Security</mat-card-title>\r\n        <mat-card-subtitle>System Security Features</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <app-feature-text-info [featureNameId]=\"'ContentSecurityPolicy'\" [asInfo]=\"true\"></app-feature-text-info>\r\n        <div *ngIf=\"vm.cspEnabled\">\r\n          ContentSecurityPolicy is enabled.\r\n          Configure it in each site/app as you need.\r\n        </div>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/csp' }\"></ng-container>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    \r\n    <!-- Insights -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">speed</mat-icon>\r\n        </div>\r\n        <mat-card-title>2sxc Insights</mat-card-title>\r\n        <mat-card-subtitle>See what's happening under the hood</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <h4>2sxc Insights for Super Users</h4>\r\n        <p>\r\n          This is to access a special section to see what is really in the server memory.\r\n          It's intended for extensive debugging - see also\r\n          <a href=\"https://2sxc.org/en/blog/post/using-2sxc-insights\" target=\"_blank\">this blog post</a>.\r\n        </p>\r\n        <div align=\"start\">\r\n          <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/insights' }\"></ng-container>\r\n          <button mat-button class=\"eav-button__with-icon\" (click)=\"openInsights()\">\r\n            <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n            <span>Open 2sxc Insights</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"card-content-separator\"></div>\r\n        <h4>Activate Page Level Logging</h4>\r\n        <form #activateLogForm=\"ngForm\" class=\"activate-log-form\" (ngSubmit)=\"activatePageLog(activateLogForm)\">\r\n          <div>\r\n            This will place insights-logs in the HTML of the user output for users with <code>?debug=true</code> in the url.\r\n            It can only be activated for short periods of time.\r\n          </div>\r\n          <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n            <mat-label>Duration in Minutes</mat-label>\r\n            <input matInput type=\"number\" min=\"0\" required [pattern]=\"positiveWholeNumber\" [(ngModel)]=\"pageLogDuration\"\r\n              name=\"Duration\" #duration=\"ngModel\" [disabled]=\"vm.loading\">\r\n          </mat-form-field>\r\n          <ng-container *ngIf=\"duration.touched && duration.errors\">\r\n            <app-field-hint *ngIf=\"duration.errors.pattern\" [isError]=\"true\">\r\n              Only positive whole numbers\r\n            </app-field-hint>\r\n          </ng-container>\r\n        </form>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"end\">\r\n        <button mat-raised-button type=\"submit\" color=\"accent\" [disabled]=\"!activateLogForm.valid || vm.loading\">\r\n          Activate\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    \r\n    <!-- Warnings -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">{{ vm.warningIcon }}</mat-icon>\r\n        </div>\r\n        <mat-card-title>Warnings</mat-card-title>\r\n        <mat-card-subtitle>System and Code Warnings</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div class=\"eav-info-row\" *ngFor=\"let info of vm.warningInfos\">\r\n          <div class=\"eav-info-row__label eav-long\">{{ info.label }}:</div>\r\n          <div class=\"eav-info-row__value\">\r\n            <span [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">{{ info.value }}</span>\r\n            <ng-container *ngIf=\"info.link\">\r\n              <a class=\"eav-info-row__link\" *ngIf=\"info.link.target === 'angular'\" [routerLink]=\"info.link.url\">\r\n               {{info.link.label}}</a>\r\n              <a class=\"eav-info-row__link\" *ngIf=\"info.link.target !== 'angular'\" [href]=\"info.link.url\"\r\n                [target]=\"info.link.target\">{{ info.link.label }}</a>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n    </mat-card>\r\n  </div>\r\n</ng-container>\r\n\r\n\r\n<ng-template #docsLink let-icon let-label let-link=\"link\">\r\n  <a mat-button class=\"eav-button__with-icon\" href=\"{{link}}\" target=\"_blank\" [tippy]=\"'online documentation'\">\r\n    <mat-icon class=\"eav-icon\">{{ icon ?? \"menu_book\" }}</mat-icon>\r\n    <span>{{ label }}</span>\r\n  </a>\r\n</ng-template>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { DialogSettings } from '../../app-administration/models';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { BaseComponent } from '../../shared/components/base-component/base.component';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { SiteLanguage } from '../models/site-language.model';\r\nimport { SystemInfoSet } from '../models/system-info.model';\r\nimport { SxcInsightsService } from '../services/sxc-insights.service';\r\nimport { ZoneService } from '../services/zone.service';\r\nimport { GoToRegistration } from '../sub-dialogs/registration/go-to-registration';\r\nimport { InfoTemplate, SystemInfoViewModel } from './system-info.models';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-system-info',\r\n  templateUrl: './system-info.component.html',\r\n  styleUrls: ['./system-info.component.scss'],\r\n})\r\nexport class SystemInfoComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @Input() dialogSettings: DialogSettings;\r\n\r\n  pageLogDuration: number;\r\n  positiveWholeNumber = /^[1-9][0-9]*$/;\r\n  viewModel$: Observable<SystemInfoViewModel>;\r\n\r\n  private systemInfoSet$: BehaviorSubject<SystemInfoSet | undefined>;\r\n  private languages$: BehaviorSubject<SiteLanguage[] | undefined>;\r\n  private loading$: BehaviorSubject<boolean>;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private zoneService: ZoneService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogService: DialogService,\r\n    private sxcInsightsService: SxcInsightsService,\r\n    private featuresService: FeaturesService,\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.systemInfoSet$ = new BehaviorSubject<SystemInfoSet | undefined>(undefined);\r\n    this.languages$ = new BehaviorSubject<SiteLanguage[] | undefined>(undefined);\r\n    this.loading$ = new BehaviorSubject<boolean>(false);\r\n\r\n    this.buildViewModel();\r\n    this.getSystemInfo();\r\n    this.getLanguages();\r\n    this.subscription.add(this.refreshOnChildClosedDeep().subscribe(() => {\r\n      this.buildViewModel();\r\n      this.getSystemInfo();\r\n      this.getLanguages();\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.systemInfoSet$.complete();\r\n    this.languages$.complete();\r\n    this.loading$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  openSiteSettings(): void {\r\n    const sitePrimaryApp = this.dialogSettings.Context.Site.PrimaryApp;\r\n    this.dialogService.openAppAdministration(sitePrimaryApp.ZoneId, sitePrimaryApp.AppId, 'app');\r\n  }\r\n\r\n  openGlobalSettings(): void {\r\n    const globalPrimaryApp = this.dialogSettings.Context.System.PrimaryApp;\r\n    this.dialogService.openAppAdministration(globalPrimaryApp.ZoneId, globalPrimaryApp.AppId, 'app');\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/help'), '_blank');\r\n  }\r\n\r\n  activatePageLog(form: NgForm) {\r\n    this.loading$.next(true);\r\n    this.snackBar.open('Activating...');\r\n    this.sxcInsightsService.activatePageLog(this.pageLogDuration).subscribe(res => {\r\n      this.loading$.next(false);\r\n      this.snackBar.open(res, null, { duration: 4000 });\r\n    });\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n    form.resetForm();\r\n  }\r\n\r\n  private getSystemInfo(): void {\r\n    this.zoneService.getSystemInfo().subscribe({\r\n      error: () => {\r\n        this.systemInfoSet$.next(undefined);\r\n      },\r\n      next: (systemInfoSet) => {\r\n        this.systemInfoSet$.next(systemInfoSet);\r\n      },\r\n    });\r\n  }\r\n\r\n  private getLanguages(): void {\r\n    this.zoneService.getLanguages().subscribe({\r\n      error: () => {\r\n        this.languages$.next(undefined);\r\n      },\r\n      next: (languages) => {\r\n        this.languages$.next(languages);\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildViewModel(): void {\r\n    const systemInfos$ = this.systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) { return; }\r\n        const info: InfoTemplate[] = [\r\n          { label: 'CMS', value: `2sxc v.${systemInfoSet.System.EavVersion}` },\r\n          { label: 'Platform', value: `${systemInfoSet.System.Platform} v.${systemInfoSet.System.PlatformVersion}` },\r\n          { label: 'Zones', value: systemInfoSet.System.Zones.toString() },\r\n          { label: 'Fingerprint', value: systemInfoSet.System.Fingerprint },\r\n          {\r\n            label: 'Registered to',\r\n            value: systemInfoSet.License.Owner || '(unregistered)',\r\n            link: systemInfoSet.License.Owner\r\n              ? {\r\n                url: this.router.url + '/' + GoToRegistration.getUrl(),\r\n                label: 'manage',\r\n                target: 'angular',\r\n              }\r\n              : {\r\n                url: this.router.url + '/' + GoToRegistration.getUrl(),\r\n                label: 'register',\r\n                target: 'angular',\r\n              },\r\n          },\r\n        ];\r\n        return info;\r\n      })\r\n    );\r\n    const siteInfos$ = combineLatest([this.systemInfoSet$, this.languages$]).pipe(\r\n      map(([systemInfoSet, languages]) => {\r\n        if (systemInfoSet == null || languages == null) { return; }\r\n        const allLanguages = languages.length;\r\n        const activeLanguages = languages.filter(l => l.IsEnabled).length;\r\n        const info: InfoTemplate[] = [\r\n          { label: 'Zone', value: systemInfoSet.Site.ZoneId.toString() },\r\n          { label: 'Site', value: systemInfoSet.Site.SiteId.toString() },\r\n          {\r\n            label: 'Languages',\r\n            value: `${activeLanguages}/${allLanguages}`,\r\n            link: {\r\n              url: 'languages',\r\n              label: 'manage',\r\n              target: 'angular',\r\n            },\r\n          },\r\n          {\r\n            label: 'Apps',\r\n            value: systemInfoSet.Site.Apps.toString(),\r\n            link: {\r\n              url: 'list',\r\n              label: 'manage',\r\n              target: 'angular',\r\n            },\r\n          },\r\n        ];\r\n        return info;\r\n      })\r\n    );\r\n    const warningIcon$ = this.systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) { return; }\r\n        if (systemInfoSet.Messages.WarningsObsolete || systemInfoSet.Messages.WarningsOther) {\r\n          return 'warning';\r\n        }\r\n        return 'check';\r\n      }),\r\n    );\r\n    const warningInfos$ = this.systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) { return; }\r\n        const info: InfoTemplate[] = [\r\n          {\r\n            label: 'Warnings Obsolete',\r\n            value: systemInfoSet.Messages.WarningsObsolete.toString(),\r\n            link: !systemInfoSet.Messages.WarningsObsolete\r\n              ? undefined\r\n              : {\r\n                url: window.$2sxc.http.apiUrl('sys/insights/logs?key=warnings-obsolete'),\r\n                label: 'review',\r\n                target: '_blank',\r\n              },\r\n          },\r\n          {\r\n            label: 'Warnings Other',\r\n            value: systemInfoSet.Messages.WarningsOther.toString(),\r\n            link: !systemInfoSet.Messages.WarningsOther\r\n              ? undefined\r\n              : {\r\n                url: window.$2sxc.http.apiUrl('sys/insights/logs'),\r\n                label: 'review',\r\n                target: '_blank',\r\n              },\r\n          },\r\n        ];\r\n        return info;\r\n      }),\r\n    );\r\n    const lsEnabled$ = this.featuresService.isEnabled$(FeatureNames.LightSpeed);\r\n    const cspEnabled$ = this.featuresService.isEnabled$(FeatureNames.ContentSecurityPolicy);\r\n    this.viewModel$ = combineLatest([systemInfos$, siteInfos$, this.loading$, warningIcon$, warningInfos$, lsEnabled$, cspEnabled$]).pipe(\r\n      map(([systemInfos, siteInfos, loading, warningIcon, warningInfos, lsEnabled, cspEnabled]) => {\r\n        const viewModel: SystemInfoViewModel = {\r\n          systemInfos,\r\n          siteInfos,\r\n          loading,\r\n          warningIcon,\r\n          warningInfos,\r\n          lsEnabled,\r\n          cspEnabled\r\n        };\r\n        // console.log('2dm VM', viewModel);\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>{{ dialogData.feature.Name }}</mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <p [innerHtml]=\"dialogData.feature.Description | safeHtml\"></p>\r\n    <div class=\"eav-info-row\" *ngIf=\"dialogData.feature.NameId as id\">\r\n      <div class=\"eav-info-row__label\">ID:</div>\r\n      <div class=\"eav-info-row__value\">\r\n        <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"eav-info-row\" *ngIf=\"dialogData.feature.Guid as guid\">\r\n      <div class=\"eav-info-row__label\">GUID:</div>\r\n      <div class=\"eav-info-row__value eav_click\">\r\n        <span [tippy]=\"guid\" (click)=\"copyToClipboard(guid)\">{{ guid }}</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"eav-info-row\" *ngIf=\"(dialogData.feature.Security.Impact + ': ' + dialogData.feature.Security.Message) as security\">\r\n      <div class=\"eav-info-row__label\">Security Rating:</div>\r\n      <div class=\"eav-info-row__value\">\r\n        <span>{{ security }}</span>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n  <mat-card-actions align=\"end\">\r\n    <button *ngIf=\"dialogData.feature.Link as link\" mat-raised-button class=\"eav-card-action-button\" color=\"accent\"\r\n      (click)=\"findOutMore(link)\">\r\n      <mat-icon>open_in_new</mat-icon>\r\n      Find out more\r\n    </button>\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">\r\n      Close\r\n    </button>\r\n  </mat-card-actions>\r\n</mat-card>","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../../shared/helpers/copy-to-clipboard.helper';\r\nimport { FeatureDetailsDialogData } from './feature-details-dialog.models';\r\n\r\n@Component({\r\n  selector: 'app-feature-details-dialog',\r\n  templateUrl: './feature-details-dialog.component.html',\r\n  styleUrls: ['./feature-details-dialog.component.scss']\r\n})\r\nexport class FeatureDetailsDialogComponent {\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: FeatureDetailsDialogData,\r\n    private dialogRef: MatDialogRef<FeatureDetailsDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  findOutMore(link: string): void {\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../../features/models/feature.model';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled-reason',\r\n  templateUrl: './features-list-enabled-reason.component.html',\r\n  styleUrls: ['./features-list-enabled-reason.component.scss'],\r\n})\r\nexport class FeaturesListEnabledReasonComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n  feature: Feature;\r\n\r\n  agInit(params: ICellRendererParams): void {\r\n    this.value = params.value;\r\n    this.feature = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div [tippy]=\"feature.EnabledReasonDetailed\">{{ value }}</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled',\r\n  templateUrl: './features-list-enabled.component.html',\r\n  styleUrls: ['./features-list-enabled.component.scss'],\r\n})\r\nexport class FeaturesListEnabledComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams): void {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon>{{ value ? 'check_box' : 'check_box_outline_blank' }}</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../../features/models/feature.model';\r\nimport { FeaturesStatusParams } from './features-status.models';\r\nimport { IdFieldParams } from '../../../shared/components/id-field/id-field.models';\r\n\r\n@Component({\r\n  selector: 'app-features-status',\r\n  templateUrl: './features-status.component.html',\r\n  styleUrls: ['./features-status.component.scss'],\r\n})\r\nexport class FeaturesStatusComponent implements ICellRendererAngularComp {\r\n  value: boolean | null;\r\n  disabled: boolean;\r\n  tooltip: string;\r\n\r\n  private params: ICellRendererParams & FeaturesStatusParams;\r\n\r\n  agInit(params: ICellRendererParams & FeaturesStatusParams & IdFieldParams<Feature>): void {\r\n    this.params = params;\r\n    this.value = params.value;\r\n    this.disabled = params.isDisabled(params.data);\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params: ICellRendererParams & FeaturesStatusParams): boolean {\r\n    this.disabled = this.params.isDisabled(this.params.data);\r\n    return true;\r\n  }\r\n\r\n  toggle(): void {\r\n    const feature: Feature = this.params.data;\r\n    let nextValue: boolean;\r\n    switch (this.value) {\r\n      case false:\r\n        nextValue = null;\r\n        break;\r\n      case null:\r\n        nextValue = true;\r\n        break;\r\n      case true:\r\n        nextValue = false;\r\n        break;\r\n    }\r\n    this.value = nextValue;\r\n    this.params.onToggle(feature, nextValue);\r\n  }\r\n}\r\n","<mat-slide-toggle [checked]=\"value\" [tippy]=\"tooltip\" [disabled]=\"disabled\" (change)=\"toggle()\" [ngClass]=\"{\r\n  'toggle-false': value === false,\r\n  'toggle-null': value === null\r\n  }\">\r\n</mat-slide-toggle>\r\n","import { License } from '../apps-management/models/license.model';\r\nimport { Feature } from './models';\r\n\r\n/**\r\n * Helper class used in union with other classes to add expiration hints to features.\r\n * It's implemented as a class, so it's easier to bundle static functions.\r\n */\r\nexport class ExpirationExtension {\r\n\r\n  /** The expiration date as a human readable string. Not from the server; generated on the client */\r\n  ExpMessage?: string;\r\n  ExpIcon?: string;\r\n\r\n  ExpWarningIcon?: string;\r\n\r\n  static expandFeature(feature: Feature): Feature & ExpirationExtension {\r\n    return {\r\n      ...feature,\r\n      ...ExpirationExtension.getExpiration(feature?.Expiration)\r\n    };\r\n  }\r\n\r\n  static expandLicense(license: License): License & ExpirationExtension {\r\n    // Wrap in Try-Catch to avoid errors in the UI\r\n    try {\r\n      // find the lowest expiration date on the features\r\n      const lowestExpiration = license?.Features?.map(f => f.Expiration).sort()[0];\r\n      // if there is no lowest expiration date, skip the rest\r\n      if (lowestExpiration == null) return license;\r\n\r\n      // debugger;\r\n      const withState = {\r\n        ...license,\r\n        ...ExpirationExtension.getExpiration(lowestExpiration),\r\n      };\r\n\r\n      return withState;\r\n    } catch (error) {\r\n      return license;\r\n    }\r\n  }\r\n\r\n  private static getExpiration(dateString: string): ExpirationExtension {\r\n    // Inner helper to create the final result\r\n    const result = (icon: string, text: string) => ({\r\n      ExpMessage: (icon != null ? icon + ' ' : '') + text,\r\n      ExpIcon: icon,\r\n      ExpWarningIcon: icon != '✅' ? icon : null,\r\n    })\r\n    const expires = dateString?.split('T')[0];\r\n    // no valid expiration date\r\n    if (expires == null) return result(null, null);\r\n    // never expires\r\n    if (expires.startsWith('9999')) return result('✅', 'never');\r\n    const expDate = new Date(expires);\r\n    // show \"expired\" if it's over-due\r\n    if (expDate < new Date()) return result('🛑', 'expired');\r\n    // return \"today\" if it's today\r\n    if (expDate.toDateString() === new Date().toDateString()) return result('⚠️', 'today');\r\n    // return \"tomorrow\" if it's tomorrow\r\n    if (expDate.toDateString() === new Date(new Date().setDate(new Date().getDate() + 1)).toDateString()) return result('⚠️', 'tomorrow');\r\n    // Warn if it's within 30 days\r\n    if (expDate < new Date(new Date().setDate(new Date().getDate() + 30))) return result('⚠️', expires);\r\n    // Show special EOY if it's at the end of the year - the most common expiration\r\n    if (expires.endsWith('12-31')) return result('✅', `EOY ${expires.split('-')[0]}`);\r\n    // otherwise: just show the date\r\n    return result('❓', expires);\r\n  }\r\n\r\n}","import { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n@Directive({ selector: '[appAgGridHeight]' })\r\nexport class AgGridHeightDirective implements OnChanges {\r\n  @Input() itemsCount = 0;\r\n  @Input() headerHeight = 32;\r\n  @Input() rowHeight = 48;\r\n  @Input() maxRows = 100;\r\n\r\n  /** Fixes a bug where scrollbar appears when then is no overflow */\r\n  private extraHeight = 2;\r\n\r\n  private element: HTMLElement;\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.itemsCount != null) {\r\n      const rows = this.itemsCount === 0 ? 2 : this.itemsCount > this.maxRows ? this.maxRows : this.itemsCount;\r\n      this.element.style.height = `${this.headerHeight + rows * this.rowHeight + this.extraHeight}px`;\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { License } from '../models/license.model';\r\n\r\n@Pipe({ name: 'licensesOrder' })\r\nexport class LicensesOrderPipe implements PipeTransform {\r\n\r\n  transform(licenses: License[]): any {\r\n    if (!Array.isArray(licenses)) { return licenses; }\r\n\r\n    const sorted = [...licenses].sort((a: License, b: License) => {\r\n      if (a.Priority < b.Priority) {\r\n        return -1;\r\n      } else if (a.Priority > b.Priority) {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    return sorted;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { License } from '../models/license.model';\r\n\r\n@Pipe({ name: 'activeFeaturesCount' })\r\nexport class ActiveFeaturesCountPipe implements PipeTransform {\r\n\r\n  transform(license: License) {\r\n    return `${license.Features.filter(f => f.IsEnabled).length}/${license.Features.length}`;\r\n  }\r\n}\r\n","<mat-accordion multi *ngIf=\"viewModel$ | async as vm\">\r\n  <mat-expansion-panel #panel *ngFor=\"let license of vm.licenses | licensesOrder; trackBy: trackLicenses\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        <mat-icon class=\"panel-icon\" [tippy]=\"license.IsEnabled ? 'License is active' : 'License is not active'\">{{\r\n          license.IsEnabled ? 'check_circle_outline' : 'cancel' }}</mat-icon>\r\n        <div>\r\n          <div class=\"panel-title\">\r\n            <span>{{ license.Name }}</span>\r\n            <span class=\"active-features-count\">{{ license | activeFeaturesCount }}</span>\r\n            <span> {{ license.ExpWarningIcon }}</span>\r\n          </div>\r\n          <div class=\"panel-description\" [ngClass]=\"{ 'expanded': panel.expanded }\">\r\n            {{ license.Description }}\r\n          </div>\r\n        </div>\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n\r\n    <ng-container *ngIf=\"panel.expanded\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"license.Features\" [gridOptions]=\"gridOptions\"\r\n        appAgGridHeight [itemsCount]=\"license.Features?.length\">\r\n      </ag-grid-angular>\r\n    </ng-container>\r\n  </mat-expansion-panel>\r\n</mat-accordion>\r\n\r\n<mat-dialog-actions align=\"start\">\r\n  <button mat-button class=\"eav-button__with-icon\" tippy=\"Registration\" (click)=\"openRegistration()\">\r\n    <mat-icon class=\"eav-icon\">app_registration</mat-icon>\r\n    <span>Registration</span>\r\n  </button>\r\n</mat-dialog-actions>","import { AgGridAngular } from '@ag-grid-community/angular';\r\nimport { GridOptions } from '@ag-grid-community/core';\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\n// tslint:disable-next-line:max-line-length\r\nimport { BehaviorSubject, catchError, forkJoin, map, Observable, of, share, startWith, Subject, switchMap, tap, timer } from 'rxjs';\r\nimport { FeatureState } from '../../features/models';\r\nimport { BaseComponent } from '../../shared/components/base-component/base.component';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { Feature } from '../../features/models/feature.model';\r\nimport { License } from '../models/license.model';\r\nimport { FeaturesConfigService } from '../services/features-config.service';\r\nimport { GoToRegistration } from '../sub-dialogs/registration/go-to-registration';\r\nimport { FeatureDetailsDialogComponent } from './feature-details-dialog/feature-details-dialog.component';\r\nimport { FeatureDetailsDialogData } from './feature-details-dialog/feature-details-dialog.models';\r\nimport { FeaturesListEnabledReasonComponent } from './features-list-enabled-reason/features-list-enabled-reason.component';\r\nimport { FeaturesListEnabledComponent } from './features-list-enabled/features-list-enabled.component';\r\nimport { FeaturesStatusComponent } from './features-status/features-status.component';\r\nimport { FeaturesStatusParams } from './features-status/features-status.models';\r\nimport { ExpirationExtension } from '../../features/expiration-extension';\r\n\r\n@Component({\r\n  selector: 'app-license-info',\r\n  templateUrl: './license-info.component.html',\r\n  styleUrls: ['./license-info.component.scss'],\r\n})\r\nexport class LicenseInfoComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @ViewChild(AgGridAngular) private gridRef?: AgGridAngular;\r\n\r\n  disabled$ = new BehaviorSubject(false);\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private refreshLicenses$ = new Subject<void>();\r\n  \r\n  viewModel$: Observable<LicenseInfoViewModel>;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private featuresConfigService: FeaturesConfigService,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription.add(this.refreshOnChildClosedDeep().subscribe(() => { this.refreshLicenses$.next(); }));\r\n    this.viewModel$ = //combineLatest([\r\n      this.refreshLicenses$.pipe(\r\n        startWith(undefined),\r\n        switchMap(() => this.featuresConfigService.getLicenses().pipe(catchError(() => of(undefined)))),\r\n        tap(() => this.disabled$.next(false)),\r\n\r\n        // Fiddle with the data for development tests\r\n        // 2023-11-16 2dm disabled - causes trouble in production\r\n        // @STV - do you still need this? or is this a forgotten debug code?\r\n        // map(licenses => {\r\n        //   var licTesting = licenses[licenses.length - 2];\r\n        //   licTesting.Features[licTesting.Features.length - 1].Expiration = \"2023-08-25\";\r\n        //   return licenses;\r\n        // }),\r\n\r\n        // Expand the data to have pre-calculated texts/states\r\n        map(licenses => licenses.map(l => {\r\n          // const expandedFeatures = l.Features.map(f => ExpirationExtension.expandFeature(f));\r\n          return ({\r\n            ...ExpirationExtension.expandLicense(l),\r\n            Features: l.Features.map(f => ExpirationExtension.expandFeature(f)),\r\n          });\r\n        })),\r\n\r\n        // Share the resulting stream with all subscribers\r\n        share(),\r\n      )\r\n    //])\r\n    .pipe(\r\n      map((licenses) => ({ licenses })),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.disabled$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  trackLicenses(index: number, license: License): string {\r\n    return license.Guid;\r\n  }\r\n\r\n  openRegistration(): void {\r\n    this.router.navigate([GoToRegistration.getUrl()], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private showFeatureDetails(feature: Feature): void {\r\n    const data: FeatureDetailsDialogData = {\r\n      feature,\r\n    };\r\n    this.dialog.open(FeatureDetailsDialogComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '600px',\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private toggleFeature(feature: Feature, enabled: boolean): void {\r\n    this.disabled$.next(true);\r\n    const state: FeatureState = {\r\n      FeatureGuid: feature.Guid,\r\n      Enabled: enabled,\r\n    };\r\n    forkJoin([this.featuresConfigService.saveFeatures([state]), timer(100)]).subscribe({\r\n      error: () => {\r\n        this.refreshLicenses$.next();\r\n      },\r\n      next: () => {\r\n        this.refreshLicenses$.next();\r\n      },\r\n    });\r\n  }\r\n\r\n  // Note: @SDV\r\n  // I think this should serve as a good example of how to use the grid\r\n  // 1. eg. with cellDefaults and similar initial objects containing most commonly used options here\r\n  // 2. Also we should probably never add a valueGetter for the simple properties\r\n  // ...not sure why it's even in here, my guess is copy-paste of code which wasn't understood properly\r\n  // 3. I think the header-name should always be the first line, then the field\r\n  private buildGridOptions(): GridOptions {\r\n    const cellDefaults = {\r\n      cellClass: 'no-outline',\r\n      sortable: true,\r\n    };\r\n    const cellDefaultsTextFilter = {\r\n      ...cellDefaults,\r\n      filter: 'agTextColumnFilter',\r\n    };\r\n\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          headerName: 'ID',\r\n          field: 'NameId',\r\n          ...cellDefaultsTextFilter,\r\n          width: 200,\r\n          headerClass: 'dense',\r\n          cellClass: 'id-action no-padding no-outline'.split(' '),\r\n          // TODO: @SDV - most of these columns had a valueGetter that was 3 lines long\r\n          // it was easy to reduce to 1 - but actually it is not needed!\r\n          // Original - too long\r\n          // valueGetter: (params) => {\r\n          //   const feature: Feature = params.data;\r\n          //   return feature.NameId;\r\n          // },\r\n          // Optimized - 1 line - but actually not needed\r\n          // valueGetter: (params) => (params.data as Feature).NameId,\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<Feature> = {\r\n              tooltipGetter: (feature: Feature) => feature.NameId,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          field: 'Name',\r\n          ...cellDefaultsTextFilter,\r\n          flex: 3,\r\n          minWidth: 250,\r\n          cellClass: 'primary-action highlight'.split(' '),\r\n          onCellClicked: (params) => {\r\n            this.showFeatureDetails(params.data as Feature);\r\n          },\r\n          // valueGetter: (params) => (params.data as Feature).Name,\r\n        },\r\n        {\r\n          field: 'IsEnabled',\r\n          headerName: 'Enabled',\r\n          ...cellDefaults,\r\n          width: 80,\r\n          headerClass: 'dense',\r\n          filter: BooleanFilterComponent,\r\n          cellRenderer: FeaturesListEnabledComponent,\r\n          // valueGetter: (params) => (params.data as Feature).Enabled,\r\n        },\r\n        {\r\n          headerName: 'Reason',\r\n          field: 'EnabledReason',\r\n          ...cellDefaultsTextFilter,\r\n          flex: 1,\r\n          minWidth: 150,\r\n          cellRenderer: FeaturesListEnabledReasonComponent,\r\n          // valueGetter: (params) => (params.data as Feature).EnabledReason,\r\n        },\r\n        {\r\n          headerName: 'Expiration',\r\n          field: 'ExpMessage',\r\n          ...cellDefaultsTextFilter,\r\n          width: 120,\r\n          // valueGetter: (params) => (params.data as FeatureWithUi)?.ExpirationText,\r\n          tooltipValueGetter: (params) => (params.data as Feature & ExpirationExtension)?.Expiration,\r\n        },\r\n        {\r\n          headerName: '',\r\n          field: 'EnabledInConfiguration',\r\n          width: 62,\r\n          cellClass: 'secondary-action no-outline no-padding'.split(' '),\r\n          pinned: 'right',\r\n          cellRenderer: FeaturesStatusComponent,\r\n          // valueGetter: (params) => (params.data as Feature).EnabledInConfiguration,\r\n          cellRendererParams: (() => {\r\n            const params: FeaturesStatusParams & IdFieldParams<Feature> = {\r\n              isDisabled: (feature) => !feature.IsConfigurable || this.disabled$.value,\r\n              onToggle: (feature, enabled) => this.toggleFeature(feature, enabled),\r\n              tooltipGetter: (feature: Feature) => feature.IsConfigurable ? \"Toggle off | default | on\" : \"This feature can't be configured\",\r\n            };\r\n            return params;\r\n          }),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\n\r\ninterface LicenseInfoViewModel {\r\n  licenses: (License & ExpirationExtension)[];\r\n}\r\n","<div class=\"eav-dialog nav-component-wrapper eav-no-scrollbar\" appToggleDebug *ngIf=\"viewModel$ | async as vm\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      Manage Zone {{ zoneId }}\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-tab-content nav-component-wrapper\">\r\n    <router-outlet></router-outlet>\r\n    \r\n    <!-- spm NOTE: we use mat-tab-group because mat-tab-nav-bar doesn't have animations and doesn't look pretty -->\r\n    <mat-tab-group class=\"mat-mdc-tab-group-max-height\" dynamicHeight color=\"accent\" (selectedTabChange)=\"changeTab($event)\"\r\n      [selectedIndex]=\"vm.tabIndex\">\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"System Info\">\r\n          <mat-icon>settings</mat-icon>\r\n          <span>System</span>\r\n        </div>\r\n        <app-system-info *matTabContent [dialogSettings]=\"vm.dialogSettings\"></app-system-info>\r\n      </mat-tab>\r\n    \r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Apps\">\r\n          <mat-icon>star_border</mat-icon>\r\n          <span>Apps</span>\r\n        </div>\r\n        <app-apps-list *matTabContent></app-apps-list>\r\n      </mat-tab>\r\n    \r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Languages\">\r\n          <mat-icon>translate</mat-icon>\r\n          <span>Languages</span>\r\n        </div>\r\n        <app-site-languages *matTabContent></app-site-languages>\r\n      </mat-tab>\r\n    \r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Extensions and Features\">\r\n          <mat-icon>tune</mat-icon>\r\n          <span>Extensions / Features</span>\r\n        </div>\r\n        <app-license-info *matTabContent></app-license-info>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable, combineLatest, filter, map, startWith } from 'rxjs';\r\nimport { DialogSettings } from '../../app-administration/models';\r\nimport { AppDialogConfigService } from '../../app-administration/services';\r\nimport { BaseComponent } from '../../shared/components/base-component/base.component';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Component({\r\n  selector: 'app-apps-management-nav',\r\n  templateUrl: './apps-management-nav.component.html',\r\n  styleUrls: ['./apps-management-nav.component.scss'],\r\n})\r\nexport class AppsManagementNavComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  zoneId = this.context.zoneId;\r\n  dialogSettings$ = new BehaviorSubject<DialogSettings>(undefined);\r\n\r\n  private tabs = ['system', 'list', 'languages', 'license']; // tabs order has to match template\r\n\r\n  viewModel$: Observable<AppsManagementNavViewModel>;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<AppsManagementNavComponent>,\r\n    private context: Context,\r\n    private appDialogConfigService: AppDialogConfigService,\r\n  ) {\r\n    super(router, route);\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.fetchDialogSettings();\r\n    this.subscription.add(this.refreshOnChildClosedDeep().subscribe(() => { this.fetchDialogSettings(); }));\r\n    this.viewModel$ = combineLatest([\r\n      this.dialogSettings$,\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        map(() => this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path)),\r\n        filter(tabIndex => tabIndex >= 0),\r\n        startWith(this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path)),\r\n      )\r\n    ]).pipe(\r\n      map(([dialogSettings, tabIndex]) => ({ dialogSettings, tabIndex })),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dialogSettings$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeTab(event: MatTabChangeEvent) {\r\n    const path = this.tabs[event.index];\r\n    this.router.navigate([path], { relativeTo: this.route });\r\n  }\r\n\r\n  private fetchDialogSettings() {\r\n    this.appDialogConfigService.getShared$(0)/*.getDialogSettings(0)*/.subscribe(dialogSettings => {\r\n      this.dialogSettings$.next(dialogSettings);\r\n    });\r\n  }\r\n}\r\n\r\ninterface AppsManagementNavViewModel {\r\n  dialogSettings: DialogSettings;\r\n  tabIndex: number;\r\n}\r\n","import { Directive, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith, Subscription } from 'rxjs';\r\nimport { BaseSubsinkComponent } from '../base-subsink-component/base-subsink.component';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class BaseComponent extends BaseSubsinkComponent implements OnDestroy {\r\n  \r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  protected refreshOnChildClosedDeep() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n\r\n  protected refreshOnChildClosedShallow() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\" [ngSwitch]=\"isError\">\r\n  <mat-hint *ngSwitchCase=\"false\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-hint>\r\n\r\n  <mat-error *ngSwitchCase=\"true\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-error>\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(): void {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>","import { GridOptions } from '@ag-grid-community/core';\r\n\r\nexport const defaultGridOptions: GridOptions = {\r\n  accentedSort: true,\r\n  animateRows: true,\r\n  enableCellTextSelection: true,\r\n  headerHeight: 32,\r\n  suppressScrollOnNewData: true,\r\n  valueCache: true,\r\n  defaultColDef: { filterParams: { newRowsAction: 'keep' } },\r\n  tooltipShowDelay: 0,\r\n  tooltipHideDelay: 100000,\r\n  suppressMovableColumns: true,\r\n} as const;\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}