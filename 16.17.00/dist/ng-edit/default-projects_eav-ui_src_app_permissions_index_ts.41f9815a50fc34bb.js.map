{"version":3,"file":"default-projects_eav-ui_src_app_permissions_index_ts.41f9815a50fc34bb.js","mappings":"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","names":["EntitiesService","_class","constructor","http","context","dnnContext","this","create","contentType","entity","post","params","appId","zoneId","update","entityId","delete","type","id","tryForce","$2sxc","apiUrl","webApiEntityRoot","toString","force","i0","i1","i2","i3","factory","Éµfac","GoToPermissions","getUrl","targetType","keyType","key","getUrlApp","eavConstants","metadata","app","getUrlAttribute","attribute","getUrlContentType","guid","getUrlEntity","getUrlLanguage","language","route","path","loadChildren","__webpack_require__","e","then","bind","m","PermissionsModule","data","title","permissionsDialog","name","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","PermissionsComponent","routes","component","DialogEntryComponent","dialog","children","matcher","edit","Promise","all","EditModule","refreshEdit","RefreshEditModule","PermissionsRoutingModule","RouterModule","forChild","PermissionsActionsComponent","agInit","refresh","deletePermission","onDelete","selectors","decls","vars","consts","template","rf","ctx","_r3","ctx_r2","closeDialog","ctx_r4","editPermission","vm_r1","permissions","ctx_r0","gridOptions","BaseComponent","router","dialogRef","permissionsService","snackBar","super","permissions$","BehaviorSubject","undefined","buildGridOptions","parseInt","snapshot","paramMap","get","prefills","PermissionType","ngOnInit","fetchPermissions","subscription","add","refreshOnChildClosedShallow","subscribe","viewModel$","combineLatest","pipe","map","ngOnDestroy","complete","close","getAll","next","permission","form","items","ContentTypeName","contentTypes","For","Target","Object","values","find","target","TargetType","keyTypes","Guid","number","Number","string","String","Prefill","EntityId","Id","formUrl","convertFormToUrl","navigate","relativeTo","confirm","Title","open","duration","defaultGridOptions","columnDefs","headerName","field","width","headerClass","cellClass","split","sortable","filter","valueGetter","cellRenderer","IdFieldComponent","cellRendererParams","tooltipGetter","flex","minWidth","sort","onCellClicked","Identity","Condition","Grant","pinned","i4","features","PermissionsComponent_div_0_Template","Context","PermissionsService","MetadataService","imports","CommonModule","SharedComponentsModule","MatDialogModule","MatButtonModule","MatIconModule","SxcGridModule","MatRippleModule","MatSnackBarModule","getMetadata","contentTypeName","metadataService","entitiesService","Items","BaseSubsinkComponent","refreshOnChildClosedDeep","events","event","NavigationEnd","startWith","firstChild","pairwise","hadChild","hasChild","value","align","tooltip","copy","copyToClipboard","_c0","accentedSort","animateRows","enableCellTextSelection","headerHeight","suppressScrollOnNewData","valueCache","defaultColDef","filterParams","newRowsAction","tooltipShowDelay","tooltipHideDelay","suppressMovableColumns","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/content-items/services/entities.service.ts","./projects/eav-ui/src/app/permissions/go-to-permissions.ts","./projects/eav-ui/src/app/permissions/permissions-dialog.config.ts","./projects/eav-ui/src/app/permissions/permissions-routing.module.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.html","./projects/eav-ui/src/app/permissions/permissions.component.html","./projects/eav-ui/src/app/permissions/permissions.component.ts","./projects/eav-ui/src/app/permissions/permissions.module.ts","./projects/eav-ui/src/app/permissions/services/metadata.service.ts","./projects/eav-ui/src/app/permissions/services/permissions.service.ts","./projects/eav-ui/src/app/shared/components/base-component/base.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.html","./projects/eav-ui/src/app/shared/constants/default-grid-options.constants.ts","./projects/eav-ui/src/app/shared/helpers/copy-to-clipboard.helper.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../edit/shared/models/eav';\r\nimport { webApiEntityRoot } from '../../edit/shared/services';\r\nimport { ItemInListIdentifier } from '../../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Injectable()\r\nexport class EntitiesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.context.appId.toString(), force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n\r\nexport interface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: ItemInListIdentifier;\r\n  [field: string]: any;\r\n}\r\n\r\nexport interface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\n\r\nexport class GoToPermissions {\r\n\r\n  static route: Route = {\r\n    path: 'permissions/:targetType/:keyType/:key',\r\n    loadChildren: () => import('./permissions.module').then(m => m.PermissionsModule),\r\n    data: { title: 'Permissions' },\r\n  };\r\n\r\n  static getUrl(targetType: number, keyType: MetadataKeyType, key: string): string {\r\n    return `permissions/${targetType}/${keyType}/${key}`;\r\n  }\r\n\r\n  static getUrlApp(appId: number): string {\r\n    return this.getUrl(eavConstants.metadata.app.targetType, eavConstants.metadata.app.keyType, appId.toString());\r\n  }\r\n\r\n  static getUrlAttribute(id: number): string {\r\n    return this.getUrl(eavConstants.metadata.attribute.targetType, eavConstants.metadata.attribute.keyType, id.toString());\r\n  }\r\n\r\n  /** For historic reasons, it's the same as Entity */\r\n  static getUrlContentType(guid: string): string {\r\n    return this.getUrlEntity(guid);\r\n  }\r\n\r\n  static getUrlEntity(guid: string): string {\r\n    return this.getUrl(eavConstants.metadata.entity.targetType, eavConstants.metadata.entity.keyType, guid);\r\n  }\r\n\r\n  static getUrlLanguage(id: string): string {\r\n    return this.getUrl(eavConstants.metadata.language.targetType, eavConstants.metadata.language.keyType, id);\r\n  }\r\n\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const permissionsDialog: DialogConfig = {\r\n  name: 'SET_PERMISSIONS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { PermissionsComponent } = await import('./permissions.component');\r\n    return PermissionsComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { edit, refreshEdit } from '../edit/edit.matcher';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { permissionsDialog } from './permissions-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: permissionsDialog }, children: [\r\n      {\r\n        matcher: edit,\r\n        loadChildren: () => import('../edit/edit.module').then(m => m.EditModule)\r\n      },\r\n      {\r\n        matcher: refreshEdit,\r\n        loadChildren: () => import('../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PermissionsRoutingModule { }\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Permission } from '../models/permission.model';\r\nimport { PermissionsActionsParams } from './permissions-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-permissions-actions',\r\n  templateUrl: './permissions-actions.component.html',\r\n  styleUrls: ['./permissions-actions.component.scss'],\r\n})\r\nexport class PermissionsActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & PermissionsActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & PermissionsActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deletePermission(): void {\r\n    const permission: Permission = this.params.data;\r\n    this.params.onDelete(permission);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deletePermission()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>","<div class=\"eav-dialog nav-component-wrapper\" *ngIf=\"viewModel$ | async as vm\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Permissions</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content nav-component-wrapper\">\r\n    <router-outlet></router-outlet>\r\n    <div class=\"grid-wrapper\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.permissions\" [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new permission\" (click)=\"editPermission(null)\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n</div>","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable, combineLatest, map } from 'rxjs';\r\nimport { BaseComponent } from '../shared/components/base-component/base.component';\r\nimport { IdFieldComponent } from '../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { Permission } from './models/permission.model';\r\nimport { PermissionsActionsComponent } from './permissions-actions/permissions-actions.component';\r\nimport { PermissionsActionsParams } from './permissions-actions/permissions-actions.models';\r\nimport { PermissionsService } from './services/permissions.service';\r\n\r\n@Component({\r\n  selector: 'app-permissions',\r\n  templateUrl: './permissions.component.html',\r\n  styleUrls: ['./permissions.component.scss'],\r\n})\r\nexport class PermissionsComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  permissions$ = new BehaviorSubject<Permission[]>(undefined);\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private targetType = parseInt(this.route.snapshot.paramMap.get('targetType'), 10);\r\n  private keyType = this.route.snapshot.paramMap.get('keyType') as MetadataKeyType;\r\n  private key = this.route.snapshot.paramMap.get('key');\r\n  private prefills: Record<string, Record<string, string>> = {\r\n    [eavConstants.metadata.language.targetType]: {\r\n      PermissionType: 'language',\r\n    },\r\n  };\r\n\r\n  viewModel$: Observable<PermissionsViewModel>;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<PermissionsComponent>,\r\n\r\n    private permissionsService: PermissionsService,\r\n    private snackBar: MatSnackBar,\r\n  ) { \r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchPermissions();\r\n    this.subscription.add(this.refreshOnChildClosedShallow().subscribe(() => { this.fetchPermissions(); }));\r\n    this.viewModel$ = combineLatest([\r\n      this.permissions$\r\n    ]).pipe(map(([permissions]) => ({ permissions })));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.permissions$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private fetchPermissions() {\r\n    this.permissionsService.getAll(this.targetType, this.keyType, this.key).subscribe(permissions => {\r\n      this.permissions$.next(permissions);\r\n    });\r\n  }\r\n\r\n  editPermission(permission?: Permission) {\r\n    let form: EditForm;\r\n    if (permission == null) {\r\n      form = {\r\n        items: [{\r\n          ContentTypeName: eavConstants.contentTypes.permissions,\r\n          For: {\r\n            Target: Object.values(eavConstants.metadata).find(m => m.targetType === this.targetType)?.target ?? this.targetType.toString(),\r\n            TargetType: this.targetType,\r\n            ...(this.keyType === eavConstants.keyTypes.guid && { Guid: this.key }),\r\n            ...(this.keyType === eavConstants.keyTypes.number && { Number: parseInt(this.key, 10) }),\r\n            ...(this.keyType === eavConstants.keyTypes.string && { String: this.key }),\r\n          },\r\n          ...(this.prefills[this.targetType] && { Prefill: this.prefills[this.targetType] }),\r\n        }],\r\n      };\r\n    } else {\r\n      form = {\r\n        items: [{ EntityId: permission.Id }],\r\n      };\r\n    }\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private deletePermission(permission: Permission) {\r\n    if (!confirm(`Delete '${permission.Title}' (${permission.Id})?`)) { return; }\r\n    this.snackBar.open('Deleting...');\r\n    this.permissionsService.delete(permission.Id).subscribe(() => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.fetchPermissions();\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          headerName: 'ID',\r\n          field: 'Id',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'id-action no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agNumberColumnFilter',\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Id;\r\n          },\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<Permission> = {\r\n              tooltipGetter: (permission: Permission) => `ID: ${permission.Id}\\nGUID: ${permission.Guid}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          field: 'Name',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'primary-action highlight'.split(' '),\r\n          sortable: true,\r\n          sort: 'asc',\r\n          filter: 'agTextColumnFilter',\r\n          onCellClicked: (params) => {\r\n            const permission: Permission = params.data;\r\n            this.editPermission(permission);\r\n          },\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Title;\r\n          },\r\n        },\r\n        {\r\n          field: 'Identity',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Identity;\r\n          },\r\n        },\r\n        {\r\n          field: 'Condition',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Condition;\r\n          },\r\n        },\r\n        {\r\n          field: 'Grant',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Grant;\r\n          },\r\n        },\r\n        {\r\n          width: 42,\r\n          cellClass: 'secondary-action no-padding'.split(' '),\r\n          pinned: 'right',\r\n          cellRenderer: PermissionsActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: PermissionsActionsParams = {\r\n              onDelete: (permission) => this.deletePermission(permission),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface PermissionsViewModel {\r\n  permissions: Permission[];\r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { EntitiesService } from '../content-items/services/entities.service';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { PermissionsActionsComponent } from './permissions-actions/permissions-actions.component';\r\nimport { PermissionsRoutingModule } from './permissions-routing.module';\r\nimport { PermissionsComponent } from './permissions.component';\r\nimport { MetadataService } from './services/metadata.service';\r\nimport { PermissionsService } from './services/permissions.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PermissionsComponent,\r\n    PermissionsActionsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PermissionsRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    SxcGridModule,\r\n    MatRippleModule,\r\n    MatSnackBarModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    PermissionsService,\r\n    MetadataService,\r\n    EntitiesService,\r\n  ]\r\n})\r\nexport class PermissionsModule { }\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Metadata } from '../../metadata';\r\nimport { MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nconst webApiRoot = 'admin/metadata/get';\r\n\r\n@Injectable()\r\nexport class MetadataService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param targetType type of target metadata item is for, e.g. for Entity, or ContentType\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of target metadata item is for\r\n   * @param contentTypeName name of content type where permissions are stored. If blank, backend returns all metadata except permissions\r\n   */\r\n  getMetadata(targetType: number, keyType: MetadataKeyType, key: string | number, contentTypeName?: string): Observable<Metadata> {\r\n    return this.http.get<Metadata>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        targetType: targetType.toString(),\r\n        keyType,\r\n        key: key.toString(),\r\n        ...(contentTypeName && { contentType: contentTypeName }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { EntitiesService } from '../../content-items/services/entities.service';\r\nimport { eavConstants, MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Permission } from '../models/permission.model';\r\nimport { MetadataService } from './metadata.service';\r\n\r\n@Injectable()\r\nexport class PermissionsService {\r\n  constructor(private metadataService: MetadataService, private entitiesService: EntitiesService) { }\r\n\r\n  getAll(targetType: number, keyType: MetadataKeyType, key: string): Observable<Permission[]> {\r\n    return this.metadataService.getMetadata(targetType, keyType, key, eavConstants.contentTypes.permissions).pipe(\r\n      map(metadata => metadata.Items as Permission[]),\r\n    );\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.entitiesService.delete(eavConstants.contentTypes.permissions, id, false);\r\n  }\r\n}\r\n","import { Directive, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith, Subscription } from 'rxjs';\r\nimport { BaseSubsinkComponent } from '../base-subsink-component/base-subsink.component';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class BaseComponent extends BaseSubsinkComponent implements OnDestroy {\r\n  \r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  protected refreshOnChildClosedDeep() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n\r\n  protected refreshOnChildClosedShallow() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(): void {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>","import { GridOptions } from '@ag-grid-community/core';\r\n\r\nexport const defaultGridOptions: GridOptions = {\r\n  accentedSort: true,\r\n  animateRows: true,\r\n  enableCellTextSelection: true,\r\n  headerHeight: 32,\r\n  suppressScrollOnNewData: true,\r\n  valueCache: true,\r\n  defaultColDef: { filterParams: { newRowsAction: 'keep' } },\r\n  tooltipShowDelay: 0,\r\n  tooltipHideDelay: 100000,\r\n  suppressMovableColumns: true,\r\n} as const;\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}