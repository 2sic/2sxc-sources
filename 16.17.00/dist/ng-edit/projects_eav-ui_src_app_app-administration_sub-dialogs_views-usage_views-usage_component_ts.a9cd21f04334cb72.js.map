{"version":3,"file":"projects_eav-ui_src_app_app-administration_sub-dialogs_views-usage_views-usage_component_ts.a9cd21f04334cb72.js","mappings":"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","names":["blockIdValueGetter","params","data","Block","Id","Guid","moduleIdValueGetter","Module","UsageId","Title","moduleIdClassGetter","value","split","pageIdValueGetter","PageId","pageIdClassGetter","nameClassGetter","onNameClicked","window","open","Url","statusCellRenderer","status","IsVisible","IsDeleted","i0","_r2","ctx_r1","copy","ctx_r0","tooltip","id","ViewsUsageIdComponent","_class","constructor","snackBar","this","agInit","idPart","refresh","copyToClipboard","duration","i1","selectors","decls","vars","consts","template","rf","ctx","ViewsUsageIdComponent_div_0_Template","ViewsUsageStatusFilterComponent","isVisible","isDeleted","filterParams","isFilterActive","doesFilterPass","visiblePassed","deletedPassed","valueGetter","api","colDef","column","columnApi","context","node","getValue","field","toString","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","$event","_r3","ctx_r2","closeDialog","vm_r1","viewTooltip","viewUsage","Name","gridOptions","ViewsUsageComponent","dialogRef","route","viewsService","viewUsage$","BehaviorSubject","undefined","viewTooltip$","data$","buildGridOptions","ngOnInit","viewGuid","snapshot","paramMap","get","getUsage","subscribe","viewUsages","next","buildData","block","Blocks","Modules","length","push","module","Page","Language","CultureCode","Status","Visible","viewModel$","combineLatest","pipe","map","ngOnDestroy","complete","close","defaultGridOptions","columnDefs","width","headerClass","cellClass","sortable","filter","cellRenderer","flex","minWidth","sort","onCellClicked","i2","i3","ViewsUsageComponent_div_0_Template"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-grid.helpers.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-id/views-usage-id.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-id/views-usage-id.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-status-filter/views-usage-status-filter.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-status-filter/views-usage-status-filter.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage.helpers.ts"],"sourcesContent":["import { CellClassParams, CellClickedEvent, ICellRendererParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { ViewUsageData, ViewUsageDataStatus } from '../../models/view-usage-data.model';\r\n\r\nexport function blockIdValueGetter(params: ValueGetterParams) {\r\n  const data: ViewUsageData = params.data;\r\n  return `ID: ${data.Block.Id}\\nGUID: ${data.Block.Guid}`;\r\n}\r\n\r\nexport function moduleIdValueGetter(params: ValueGetterParams) {\r\n  const data: ViewUsageData = params.data;\r\n  if (data.Module == null) { return; }\r\n  return `ID: ${data.Module.Id}\\nUsageId: ${data.Module.UsageId}\\nTitle: ${data.Module.Title}`;\r\n}\r\n\r\nexport function moduleIdClassGetter(params: CellClassParams): string[] {\r\n  return `${params.value != null ? 'id-action no-padding' : ''} no-outline`.split(' ');\r\n}\r\n\r\nexport function pageIdValueGetter(params: ValueGetterParams) {\r\n  const data: ViewUsageData = params.data;\r\n  if (data.PageId == null) { return; }\r\n  return `ID: ${data.PageId}`;\r\n}\r\n\r\nexport function pageIdClassGetter(params: CellClassParams): string[] {\r\n  return `${params.value != null ? 'id-action no-padding' : ''} no-outline`.split(' ');\r\n}\r\n\r\nexport function nameClassGetter(params: CellClassParams): string[] {\r\n  return `${params.value != null ? 'primary-action highlight' : 'no-outline'}`.split(' ');\r\n}\r\n\r\nexport function onNameClicked(params: CellClickedEvent) {\r\n  if (params.value == null) { return; }\r\n  const data: ViewUsageData = params.data;\r\n  window.open(data.Url, '_blank');\r\n}\r\n\r\nexport function statusCellRenderer(params: ICellRendererParams) {\r\n  const status: ViewUsageDataStatus = params.value;\r\n  if (status == null) { return; }\r\n  return `\r\n    <div style=\"height: 100%;display: flex;align-items: center;\">\r\n      ${status.IsVisible ? '<span class=\"material-icons-outlined\">visibility</span>' : '<span class=\"material-icons-outlined\">visibility_off</span>'}\r\n      ${status.IsDeleted ? '<span style=\"margin-left: 8px;\" class=\"material-icons-outlined\">delete</span>' : ''}\r\n    </div>\r\n  `;\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" *ngIf=\"id\" (click)=\"copy()\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../../../shared/helpers/copy-to-clipboard.helper';\r\n\r\n@Component({\r\n  selector: 'app-views-usage-id',\r\n  templateUrl: './views-usage-id.component.html',\r\n  styleUrls: ['./views-usage-id.component.scss'],\r\n})\r\nexport class ViewsUsageIdComponent implements ICellRendererAngularComp {\r\n  tooltip: string;\r\n  id: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.tooltip = params.value;\r\n    if (this.tooltip == null) { return; }\r\n    const idPart = this.tooltip.split('\\n')[0];\r\n    this.id = idPart.split(' ')[1];\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy() {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { ViewUsageDataStatus } from '../../../models/view-usage-data.model';\r\nimport { ViewsUsageStatusFilterModel } from './views-usage-status-filter.model';\r\n\r\n@Component({\r\n  selector: 'app-views-usage-status-filter',\r\n  templateUrl: './views-usage-status-filter.component.html',\r\n  styleUrls: ['./views-usage-status-filter.component.scss'],\r\n})\r\nexport class ViewsUsageStatusFilterComponent implements IFilterAngularComp {\r\n  isVisible = '';\r\n  isDeleted = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.isVisible !== '' || this.isDeleted !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    let visiblePassed = false;\r\n    let deletedPassed = false;\r\n\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: ViewUsageDataStatus = this.filterParams.valueGetter(valueGetterParams);\r\n    if (value == null) { return false; }\r\n    if (this.isVisible !== '') {\r\n      visiblePassed = (value.IsVisible == null) ? false : value.IsVisible.toString() === this.isVisible;\r\n    } else {\r\n      visiblePassed = true;\r\n    }\r\n    if (this.isDeleted !== '') {\r\n      deletedPassed = (value.IsDeleted == null) ? false : value.IsDeleted.toString() === this.isDeleted;\r\n    } else {\r\n      deletedPassed = true;\r\n    }\r\n    return visiblePassed && deletedPassed;\r\n  }\r\n\r\n  getModel(): ViewsUsageStatusFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n    return {\r\n      filterType: 'views-usage-status',\r\n      isVisible: this.isVisible,\r\n      isDeleted: this.isDeleted,\r\n    };\r\n  }\r\n\r\n  setModel(model: ViewsUsageStatusFilterModel) {\r\n    this.isVisible = model ? model.isVisible : '';\r\n    this.isDeleted = model ? model.isDeleted : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<div class=\"title\">Visible</div>\r\n<mat-radio-group [(ngModel)]=\"isVisible\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">Visible</mat-radio-button>\r\n  <mat-radio-button value=\"false\">Hidden</mat-radio-button>\r\n</mat-radio-group>\r\n\r\n<div class=\"title\">Deleted</div>\r\n<mat-radio-group [(ngModel)]=\"isDeleted\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">Is deleted</mat-radio-button>\r\n  <mat-radio-button value=\"false\">Is not deleted</mat-radio-button>\r\n</mat-radio-group>\r\n","<div class=\"nav-component-wrapper\" *ngIf=\"viewModel$ | async as vm\">\r\n  <div mat-mdc-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div [tippy]=\"vm.viewTooltip\">View: {{ vm.viewUsage?.Name }}</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <p class=\"dialog-description\">\r\n    This shows where this view is being used. Read about the\r\n    <a href=\"https://go.2sxc.org/content-in-dnn\" target=\"_blank\">connections between DNN and 2sxc Views</a>\r\n    to make good decisions if you're doing clean-up or just want to better know what this is all about.\r\n    <em>Before you get confused about some things you see here, do read the FAQ on that page.</em>\r\n  </p>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <div class=\"grid-wrapper\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.data\" [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n\r\n    <div class=\"grid-more-actions-box\"></div>\r\n  </div>\r\n</div>","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject, Observable, combineLatest, map } from 'rxjs';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { ViewUsageData } from '../../models/view-usage-data.model';\r\nimport { ViewUsage } from '../../models/view-usage.model';\r\nimport { ViewsService } from '../../services/views.service';\r\n// tslint:disable-next-line:max-line-length\r\nimport { blockIdValueGetter, moduleIdClassGetter, moduleIdValueGetter, nameClassGetter, onNameClicked, pageIdClassGetter, pageIdValueGetter, statusCellRenderer } from './views-usage-grid.helpers';\r\nimport { ViewsUsageIdComponent } from './views-usage-id/views-usage-id.component';\r\nimport { ViewsUsageStatusFilterComponent } from './views-usage-status-filter/views-usage-status-filter.component';\r\nimport { buildData } from './views-usage.helpers';\r\n\r\n@Component({\r\n  selector: 'app-views-usage',\r\n  templateUrl: './views-usage.component.html',\r\n  styleUrls: ['./views-usage.component.scss'],\r\n})\r\nexport class ViewsUsageComponent implements OnInit, OnDestroy {\r\n  viewUsage$ = new BehaviorSubject<ViewUsage>(undefined);\r\n  viewTooltip$ = new BehaviorSubject(undefined);\r\n  data$ = new BehaviorSubject<ViewUsageData[]>(undefined);\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  viewModel$: Observable<ViewsUsageViewModel>;\r\n\r\n  constructor(private dialogRef: MatDialogRef<ViewsUsageComponent>, private route: ActivatedRoute, private viewsService: ViewsService) { }\r\n\r\n  ngOnInit() {\r\n    const viewGuid = this.route.snapshot.paramMap.get('guid');\r\n    this.viewsService.getUsage(viewGuid).subscribe(viewUsages => {\r\n      const viewUsage = viewUsages[0];\r\n      this.viewUsage$.next(viewUsage);\r\n      const viewTooltip = `ID: ${viewUsage.Id}\\nGUID: ${viewUsage.Guid}`;\r\n      this.viewTooltip$.next(viewTooltip);\r\n      const data = buildData(viewUsage);\r\n      this.data$.next(data);\r\n    });\r\n\r\n    this.viewModel$ = combineLatest([this.viewUsage$, this.viewTooltip$, this.data$]).pipe(\r\n      map(([viewUsage, viewTooltip, data]) => ({ viewUsage, viewTooltip, data }))\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.viewUsage$.complete();\r\n    this.viewTooltip$.complete();\r\n    this.data$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          field: 'Block',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'id-action no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: blockIdValueGetter,\r\n          cellRenderer: ViewsUsageIdComponent,\r\n        },\r\n        {\r\n          field: 'Module',\r\n          width: 76,\r\n          headerClass: 'dense',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: moduleIdValueGetter,\r\n          cellClass: moduleIdClassGetter,\r\n          cellRenderer: ViewsUsageIdComponent,\r\n        },\r\n        {\r\n          field: 'Page',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: pageIdValueGetter,\r\n          cellClass: pageIdClassGetter,\r\n          cellRenderer: ViewsUsageIdComponent,\r\n        },\r\n        {\r\n          field: 'Name',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          sortable: true,\r\n          sort: 'asc',\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const data: ViewUsageData = params.data;\r\n            return data.Name;\r\n          },\r\n          cellClass: nameClassGetter,\r\n          onCellClicked: onNameClicked,\r\n        },\r\n        {\r\n          field: 'Language',\r\n          width: 90,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const data: ViewUsageData = params.data;\r\n            return data.Language;\r\n          },\r\n        },\r\n        {\r\n          field: 'Status',\r\n          width: 80,\r\n          cellClass: 'icon no-outline'.split(' '),\r\n          filter: ViewsUsageStatusFilterComponent,\r\n          cellRenderer: statusCellRenderer,\r\n          valueGetter: (params) => {\r\n            const data: ViewUsageData = params.data;\r\n            return data.Status;\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface ViewsUsageViewModel {\r\n  viewUsage: ViewUsage;\r\n  viewTooltip: any;\r\n  data: ViewUsageData[];\r\n}\r\n","import { ViewUsageData } from '../../models/view-usage-data.model';\r\nimport { ViewUsage } from '../../models/view-usage.model';\r\n\r\nexport function buildData(viewUsage: ViewUsage) {\r\n  const data: ViewUsageData[] = [];\r\n  for (const block of viewUsage.Blocks) {\r\n    if (block.Modules.length === 0) {\r\n      data.push({\r\n        Block: { Id: block.Id, Guid: block.Guid },\r\n      });\r\n    }\r\n    for (const module of block.Modules) {\r\n      data.push({\r\n        Block: { Id: block.Id, Guid: block.Guid },\r\n        Module: module,\r\n        PageId: module.Page.Id,\r\n        Name: module.Page.Name,\r\n        Url: module.Page.Url,\r\n        Language: module.Page.CultureCode,\r\n        Status: { IsVisible: module.Page.Visible, IsDeleted: module.IsDeleted },\r\n      });\r\n    }\r\n  }\r\n  return data;\r\n}\r\n"],"x_google_ignoreList":[]}