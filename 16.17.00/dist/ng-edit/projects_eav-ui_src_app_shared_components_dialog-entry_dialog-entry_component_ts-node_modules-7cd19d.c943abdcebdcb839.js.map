{"version":3,"file":"projects_eav-ui_src_app_shared_components_dialog-entry_dialog-entry_component_ts-node_modules-7cd19d.c943abdcebdcb839.js","mappings":"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","names":["DialogEntryComponent","_class","constructor","dialog","viewContainerRef","router","route","context","changeDetectorRef","this","navigation","getCurrentNavigation","dialogData","extras","state","ngOnInit","dialogConfig","snapshot","data","Error","consoleLogAngular","name","id","getComponent","then","component","_dialogAnimatingOpen","_lastDialogRef","afterOpened","subscribe","openDialogComponent","ngOnDestroy","dialogRef","close","initContext","init","open","autoFocus","backdropClass","closeOnNavigation","panelClass","panelSize","showScrollbar","position","top","afterClosed","navRes","navigateUrl","pathFromRoot","length","window","parent","$2sxc","totalPopup","navigate","url","relativeTo","markForCheck","i0","i1","i2","i3","selectors","decls","vars","template","rf","ctx","MatDivider","_vertical","_inset","vertical","value","coerceBooleanProperty","inset","ɵfac","t","ɵcmp","type","hostAttrs","hostVars","hostBindings","inputs","styles","encapsulation","changeDetection","MatDividerModule","_class2","ɵmod","ɵinj","imports","MatCommonModule","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","_asyncToGenerator","fn","self","args","arguments","apply","err"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/components/dialog-entry/dialog-entry.component.ts","./node_modules/@angular/material/fesm2022/divider.mjs","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { ChangeDetectorRef, Component, OnDestroy, OnInit, Type, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NavigateFormResult } from '../../../edit/shared/models';\r\nimport { consoleLogAngular } from '../../helpers/console-log-angular.helper';\r\nimport { DialogConfig } from '../../models/dialog-config.model';\r\nimport { EavWindow } from '../../models/eav-window.model';\r\nimport { Context } from '../../services/context';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-dialog-entry',\r\n  templateUrl: './dialog-entry.component.html',\r\n  styleUrls: ['./dialog-entry.component.scss'],\r\n})\r\nexport class DialogEntryComponent implements OnInit, OnDestroy {\r\n  private dialogData: Record<string, any>;\r\n  private dialogRef: MatDialogRef<any>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.dialogData = navigation?.extras?.state || {};\r\n  }\r\n\r\n  ngOnInit() {\r\n    const dialogConfig: DialogConfig = this.route.snapshot.data.dialog;\r\n    if (dialogConfig == null) {\r\n      throw new Error(`Could not find config for dialog. Did you forget to add DialogConfig to route data?`);\r\n    }\r\n    consoleLogAngular('Open dialog:', dialogConfig.name, 'Context id:', this.context.id, 'Context:', this.context);\r\n\r\n    dialogConfig.getComponent().then(component => {\r\n      // spm Workaround for \"feature\" where you can't open new dialog while last one is still opening\r\n      // https://github.com/angular/components/commit/728cf1c8ebd49e089f4bae945511bb0918972c26\r\n      if ((this.dialog as any)._dialogAnimatingOpen && (this.dialog as any)._lastDialogRef) {\r\n        ((this.dialog as any)._lastDialogRef as MatDialogRef<any>).afterOpened().subscribe(() => {\r\n          this.openDialogComponent(dialogConfig, component);\r\n        });\r\n      } else {\r\n        this.openDialogComponent(dialogConfig, component);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private openDialogComponent(dialogConfig: DialogConfig, component: Type<any>) {\r\n    if (dialogConfig.initContext) {\r\n      this.context.init(this.route);\r\n    }\r\n\r\n    this.dialogRef = this.dialog.open(component, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: this.dialogData,\r\n      panelClass: [\r\n        'dialog-panel',\r\n        `dialog-panel-${dialogConfig.panelSize}`,\r\n        dialogConfig.showScrollbar ? 'show-scrollbar' : 'no-scrollbar',\r\n        ...(dialogConfig.panelClass ? dialogConfig.panelClass : []),\r\n      ],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n\r\n    this.dialogRef.afterClosed().subscribe((data: any) => {\r\n      consoleLogAngular('Dialog was closed:', dialogConfig.name, 'Data:', data);\r\n\r\n      const navRes = data as NavigateFormResult;\r\n      if (navRes?.navigateUrl != null) {\r\n        this.router.navigate([navRes.navigateUrl]);\r\n        return;\r\n      }\r\n\r\n      if (this.route.pathFromRoot.length <= 3) {\r\n        try {\r\n          window.parent.$2sxc.totalPopup.close();\r\n        } catch (error) { }\r\n        return;\r\n      }\r\n\r\n      if (this.route.snapshot.url.length > 0) {\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent, state: data });\r\n      } else {\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent.parent, state: data });\r\n      }\r\n    });\r\n\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /** Whether the divider is vertically aligned. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Whether the divider is an inset divider. */\n    get inset() {\n        return this._inset;\n    }\n    set inset(value) {\n        this._inset = coerceBooleanProperty(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatDivider, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatDivider, selector: \"mat-divider\", inputs: { vertical: \"vertical\", inset: \"inset\" }, host: { attributes: { \"role\": \"separator\" }, properties: { \"attr.aria-orientation\": \"vertical ? \\\"vertical\\\" : \\\"horizontal\\\"\", \"class.mat-divider-vertical\": \"vertical\", \"class.mat-divider-horizontal\": \"!vertical\", \"class.mat-divider-inset\": \"inset\" }, classAttribute: \"mat-divider\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-divider{--mat-divider-width:1px;display:block;margin:0;border-top-style:solid;border-top-color:var(--mat-divider-color);border-top-width:var(--mat-divider-width)}.mat-divider.mat-divider-vertical{border-top:0;border-right-style:solid;border-right-color:var(--mat-divider-color);border-right-width:var(--mat-divider-width)}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatDivider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-divider', host: {\n                        'role': 'separator',\n                        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                        '[class.mat-divider-vertical]': 'vertical',\n                        '[class.mat-divider-horizontal]': '!vertical',\n                        '[class.mat-divider-inset]': 'inset',\n                        'class': 'mat-divider',\n                    }, template: '', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-divider{--mat-divider-width:1px;display:block;margin:0;border-top-style:solid;border-top-color:var(--mat-divider-color);border-top-width:var(--mat-divider-width)}.mat-divider.mat-divider-vertical{border-top:0;border-right-style:solid;border-right-color:var(--mat-divider-color);border-right-width:var(--mat-divider-width)}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"] }]\n        }], propDecorators: { vertical: [{\n                type: Input\n            }], inset: [{\n                type: Input\n            }] } });\n\nclass MatDividerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatDividerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatDividerModule, declarations: [MatDivider], imports: [MatCommonModule], exports: [MatDivider, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatDividerModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatDividerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatDivider, MatCommonModule],\n                    declarations: [MatDivider],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"x_google_ignoreList":[1,2]}