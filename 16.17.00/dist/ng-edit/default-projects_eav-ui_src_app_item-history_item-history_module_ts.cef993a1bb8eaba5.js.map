{"version":3,"file":"default-projects_eav-ui_src_app_item-history_item-history_module_ts.cef993a1bb8eaba5.js","mappings":"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","names":["itemHistoryDialog","name","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","ItemHistoryComponent","__webpack_require__","e","then","bind","routes","path","component","DialogEntryComponent","data","dialog","title","ItemHistoryRoutingModule","_class","RouterModule","forChild","ItemHistoryModule","Context","VersionsService","provide","MAT_FORM_FIELD_DEFAULT_OPTIONS","useValue","subscriptSizing","MAT_SELECT_CONFIG","hideSingleSelectionIndicator","imports","CommonModule","SharedComponentsModule","MatDialogModule","MatButtonModule","MatIconModule","MatExpansionModule","MatSnackBarModule","MatPaginatorModule","MatFormFieldModule","MatSelectModule","MatDividerModule","webApiVersions","constructor","http","context","dnnContext","this","fetchVersions","entityId","post","$2sxc","apiUrl","params","appId","toString","restore","changeId","i0","i1","i2","i3","factory","ɵfac","_c0","MAT_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","Overlay","useFactory","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","scrollThrottle","MAT_TOOLTIP_DEFAULT_OPTIONS","providedIn","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","PANEL_CLASS","passiveListenerOptions","normalizePassiveListenerOptions","passive","_MatTooltipBase","position","_position","value","_overlayRef","_updatePosition","_tooltipInstance","show","updatePosition","positionAtOrigin","_positionAtOrigin","coerceBooleanProperty","_detach","disabled","_disabled","hide","_setupPointerEnterEventsIfNeeded","_showDelay","coerceNumberProperty","_hideDelay","_mouseLeaveHideDelay","message","_message","_ariaDescriber","removeDescription","_elementRef","nativeElement","String","trim","_isTooltipVisible","_updateTooltipMessage","_ngZone","runOutsideAngular","Promise","resolve","describe","tooltipClass","_tooltipClass","_setTooltipClass","_overlay","_scrollDispatcher","_viewContainerRef","_platform","_focusMonitor","scrollStrategy","_dir","_defaultOptions","_document","_viewInitialized","_pointerExitEventsInitialized","_viewportMargin","_cssClassPrefix","touchGestures","_passiveListeners","_destroyed","Subject","_scrollStrategy","change","pipe","takeUntil","subscribe","ngAfterViewInit","monitor","origin","run","ngOnDestroy","clearTimeout","_touchstartTimeout","dispose","forEach","event","listener","removeEventListener","length","next","complete","stopMonitoring","delay","_cancelPendingAnimations","overlayRef","_createOverlay","_portal","ComponentPortal","_tooltipComponent","instance","attach","_triggerElement","afterHidden","isVisible","toggle","undefined","existingStrategy","getConfig","positionStrategy","_origin","ElementRef","scrollableAncestors","getAncestorScrollContainers","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","_updateCurrentPositionClass","connectionPair","scrollableViewProperties","isOverlayClipped","create","direction","detachments","outsidePointerEvents","_handleBodyInteraction","keydownEvents","keyCode","ESCAPE","hasModifierKey","preventDefault","stopPropagation","disableTooltipInteractivity","addPanelClass","hasAttached","detach","_getOrigin","_getOverlayPosition","withPositions","_addOffset","main","fallback","isLtr","originPosition","originX","originY","x","y","_invertPosition","overlayPosition","overlayX","overlayY","_markForCheck","onMicrotaskEmpty","take","newPosition","_currentPosition","classPrefix","removePanelClass","_platformSupportsMouseEvents","push","point","_setupPointerExitEventsIfNeeded","_disableNativeGesturesIfNecessary","touch","targetTouches","clientX","clientY","setTimeout","_addListeners","exitListeners","newTarget","relatedTarget","overlayElement","contains","_wheelListener","touchendListener","listeners","addEventListener","IOS","ANDROID","elementUnderPointer","elementFromPoint","element","gestures","style","nodeName","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","t","ɵdir","type","inputs","MatTooltip","_class2","elementRef","scrollDispatcher","viewContainerRef","ngZone","platform","ariaDescriber","focusMonitor","dir","defaultOptions","super","TooltipComponent","offsetY","offsetX","i4","DOCUMENT","selectors","hostAttrs","hostVars","hostBindings","rf","ctx","exportAs","features","_TooltipComponentBase","_class3","_changeDetectorRef","animationMode","_closeOnInteraction","_isVisible","_onHide","_animationsDisabled","_hideTimeoutId","_showTimeoutId","_toggleVisibility","markForCheck","_handleMouseLeave","_finalizeAnimation","_onShow","_handleAnimationEnd","animationName","_showAnimation","_hideAnimation","toVisible","tooltip","_tooltip","showClass","hideClass","classList","remove","add","getComputedStyle","styles","getPropertyValue","ANIMATION_MODULE_TYPE","_class4","changeDetectorRef","_isMultiline","_isTooltipMultiline","rect","getBoundingClientRect","height","width","ɵcmp","viewQuery","_t","first","$event","decls","vars","consts","template","dependencies","i5","encapsulation","changeDetection","MatTooltipModule","_class5","ɵmod","ɵinj","providers","A11yModule","OverlayModule","MatCommonModule","CdkScrollableModule","_class3_div_2_mat_form_field_3_mat_option_2_Template","pageSizeOption_r6","$implicit","_class3_div_2_mat_form_field_3_Template","_r8","ctx_r7","_changePageSize","ctx_r3","_formFieldAppearance","color","pageSize","_pageSizeLabelId","selectConfig","disableOptionCentering","_displayedPageSizeOptions","_class3_div_2_div_4_Template","ctx_r4","_class3_div_2_Template","ctx_r0","_intl","itemsPerPageLabel","_class3_button_6_Template","_r10","ctx_r9","firstPage","ctx_r1","firstPageLabel","_previousButtonsDisabled","_class3_button_13_Template","_r12","ctx_r11","lastPage","ctx_r2","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","changes","nextPageLabel","previousPageLabel","getRangeLabel","page","startIndex","Math","max","min","ɵprov","token","MAT_PAGINATOR_INTL_PROVIDER","Optional","SkipSelf","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_DEFAULT_OPTIONS","_MatPaginatorMixinBase","mixinDisabled","mixinInitialized","_MatPaginatorBase","pageIndex","_pageIndex","_length","_pageSize","_updateDisplayedPageSizeOptions","pageSizeOptions","_pageSizeOptions","map","p","hidePageSize","_hidePageSize","showFirstLastButtons","_showFirstLastButtons","defaults","EventEmitter","_intlChanges","ngOnInit","_initialized","_markInitialized","unsubscribe","nextPage","hasNextPage","previousPageIndex","_emitPageEvent","previousPage","hasPreviousPage","getNumberOfPages","maxPageIndex","ceil","floor","slice","indexOf","sort","a","b","emit","outputs","nextUniqueId","MatPaginator","intl","formFieldAppearance","i6","i7"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/item-history/item-history-dialog.config.ts","./projects/eav-ui/src/app/item-history/item-history-routing.module.ts","./projects/eav-ui/src/app/item-history/item-history.module.ts","./projects/eav-ui/src/app/item-history/services/versions.service.ts","./node_modules/@angular/material/fesm2022/tooltip.mjs","./node_modules/@angular/material/fesm2022/paginator.mjs"],"sourcesContent":["import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const itemHistoryDialog: DialogConfig = {\r\n  name: 'ITEM_HISTORY_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ItemHistoryComponent } = await import('./item-history.component');\r\n    return ItemHistoryComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { itemHistoryDialog } from './item-history-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: DialogEntryComponent, data: { dialog: itemHistoryDialog, title: 'Item History' } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ItemHistoryRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MAT_SELECT_CONFIG, MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { ItemHistoryRoutingModule } from './item-history-routing.module';\r\nimport { ItemHistoryComponent } from './item-history.component';\r\nimport { VersionsService } from './services/versions.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ItemHistoryComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ItemHistoryRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatExpansionModule,\r\n    MatSnackBarModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatDividerModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    VersionsService,\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { subscriptSizing: 'dynamic' } },\r\n    { provide: MAT_SELECT_CONFIG, useValue: { hideSingleSelectionIndicator: true } }\r\n  ]\r\n})\r\nexport class ItemHistoryModule { }\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Version } from '../models/version.model';\r\n\r\nconst webApiVersions = 'cms/history/';\r\n\r\n@Injectable()\r\nexport class VersionsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  fetchVersions(entityId: number) {\r\n    return this.http.post<Version[]>(\r\n      this.dnnContext.$2sxc.http.apiUrl(webApiVersions + 'get'),\r\n      { entityId },\r\n      {\r\n        params: { appId: this.context.appId.toString() },\r\n      },\r\n    );\r\n  }\r\n\r\n  restore(entityId: number, changeId: number) {\r\n    return this.http.post<boolean>(\r\n      this.dnnContext.$2sxc.http.apiUrl(webApiVersions + 'restore'),\r\n      { entityId },\r\n      {\r\n        params: { appId: this.context.appId.toString(), changeId: changeId.toString() },\r\n      },\r\n    );\r\n  }\r\n}\r\n","import { takeUntil, take } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ElementRef, Directive, Inject, Input, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport * as i5 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i3 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\nimport * as i1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/** @docs-private */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/** @docs-private */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/** @docs-private */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-mdc-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n */\nconst LONGPRESS_DELAY = 500;\n// These constants were taken from MDC's `numbers` object. We can't import them from MDC,\n// because they have some top-level references to `window` which break during SSR.\nconst MIN_VIEWPORT_TOOLTIP_THRESHOLD = 8;\nconst UNBOUNDED_ANCHOR_GAP = 8;\nconst MIN_HEIGHT = 24;\nconst MAX_WIDTH = 200;\nclass _MatTooltipBase {\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n                this._tooltipInstance?.show(0);\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /**\n     * Whether tooltip should be relative to the click or touch origin\n     * instead of outside the element bounding box.\n     */\n    get positionAtOrigin() {\n        return this._positionAtOrigin;\n    }\n    set positionAtOrigin(value) {\n        this._positionAtOrigin = coerceBooleanProperty(value);\n        this._detach();\n        this._overlayRef = null;\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n        }\n    }\n    /** The default delay in ms before showing the tooltip after show is called */\n    get showDelay() {\n        return this._showDelay;\n    }\n    set showDelay(value) {\n        this._showDelay = coerceNumberProperty(value);\n    }\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    get hideDelay() {\n        return this._hideDelay;\n    }\n    set hideDelay(value) {\n        this._hideDelay = coerceNumberProperty(value);\n        if (this._tooltipInstance) {\n            this._tooltipInstance._mouseLeaveHideDelay = this._hideDelay;\n        }\n    }\n    /** The message to be displayed in the tooltip */\n    get message() {\n        return this._message;\n    }\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message, 'tooltip');\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n        // away the string-conversion: https://github.com/angular/components/issues/20684\n        this._message = value != null ? String(value).trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular(() => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then(() => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n                });\n            });\n        }\n    }\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() {\n        return this._tooltipClass;\n    }\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, _document) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._positionAtOrigin = false;\n        this._disabled = false;\n        this._viewInitialized = false;\n        this._pointerExitEventsInitialized = false;\n        this._viewportMargin = 8;\n        this._cssClassPrefix = 'mat';\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /** Manually-bound passive event listeners. */\n        this._passiveListeners = [];\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        this._scrollStrategy = scrollStrategy;\n        this._document = _document;\n        if (_defaultOptions) {\n            this._showDelay = _defaultOptions.showDelay;\n            this._hideDelay = _defaultOptions.hideDelay;\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.positionAtOrigin) {\n                this.positionAtOrigin = _defaultOptions.positionAtOrigin;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n            }\n        });\n    }\n    ngAfterViewInit() {\n        // This needs to happen after view init so the initial values for all inputs have been set.\n        this._viewInitialized = true;\n        this._setupPointerEnterEventsIfNeeded();\n        this._focusMonitor\n            .monitor(this._elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                this._ngZone.run(() => this.hide(0));\n            }\n            else if (origin === 'keyboard') {\n                this._ngZone.run(() => this.show());\n            }\n        });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        this._passiveListeners.forEach(([event, listener]) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        });\n        this._passiveListeners.length = 0;\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay, origin) {\n        if (this.disabled || !this.message || this._isTooltipVisible()) {\n            this._tooltipInstance?._cancelPendingAnimations();\n            return;\n        }\n        const overlayRef = this._createOverlay(origin);\n        this._detach();\n        this._portal =\n            this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n        const instance = (this._tooltipInstance = overlayRef.attach(this._portal).instance);\n        instance._triggerElement = this._elementRef.nativeElement;\n        instance._mouseLeaveHideDelay = this._hideDelay;\n        instance\n            .afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        instance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n        const instance = this._tooltipInstance;\n        if (instance) {\n            if (instance.isVisible()) {\n                instance.hide(delay);\n            }\n            else {\n                instance._cancelPendingAnimations();\n                this._detach();\n            }\n        }\n    }\n    /** Shows/hides the tooltip */\n    toggle(origin) {\n        this._isTooltipVisible() ? this.hide() : this.show(undefined, origin);\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay(origin) {\n        if (this._overlayRef) {\n            const existingStrategy = this._overlayRef.getConfig()\n                .positionStrategy;\n            if ((!this.positionAtOrigin || !origin) && existingStrategy._origin instanceof ElementRef) {\n                return this._overlayRef;\n            }\n            this._detach();\n        }\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this.positionAtOrigin ? origin || this._elementRef : this._elementRef)\n            .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)\n            .withFlexibleDimensions(false)\n            .withViewportMargin(this._viewportMargin)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            this._updateCurrentPositionClass(change.connectionPair);\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n            scrollStrategy: this._scrollStrategy(),\n        });\n        this._updatePosition(this._overlayRef);\n        this._overlayRef\n            .detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._overlayRef\n            .outsidePointerEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._tooltipInstance?._handleBodyInteraction());\n        this._overlayRef\n            .keydownEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run(() => this.hide(0));\n            }\n        });\n        if (this._defaultOptions?.disableTooltipInteractivity) {\n            this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`);\n        }\n        return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n        const position = overlayRef.getConfig().positionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            this._addOffset({ ...origin.main, ...overlay.main }),\n            this._addOffset({ ...origin.fallback, ...overlay.fallback }),\n        ]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n        return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y },\n        };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y },\n        };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                if (this._tooltipInstance) {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n        const { overlayY, originX, originY } = connectionPair;\n        let newPosition;\n        // If the overlay is in the middle along the Y axis,\n        // it means that it's either before or after.\n        if (overlayY === 'center') {\n            // Note that since this information is used for styling, we want to\n            // resolve `start` and `end` to their real values, otherwise consumers\n            // would have to remember to do it themselves on each consumption.\n            if (this._dir && this._dir.value === 'rtl') {\n                newPosition = originX === 'end' ? 'left' : 'right';\n            }\n            else {\n                newPosition = originX === 'start' ? 'left' : 'right';\n            }\n        }\n        else {\n            newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n        }\n        if (newPosition !== this._currentPosition) {\n            const overlayRef = this._overlayRef;\n            if (overlayRef) {\n                const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n                overlayRef.removePanelClass(classPrefix + this._currentPosition);\n                overlayRef.addPanelClass(classPrefix + newPosition);\n            }\n            this._currentPosition = newPosition;\n        }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n        // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n        if (this._disabled ||\n            !this.message ||\n            !this._viewInitialized ||\n            this._passiveListeners.length) {\n            return;\n        }\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (this._platformSupportsMouseEvents()) {\n            this._passiveListeners.push([\n                'mouseenter',\n                event => {\n                    this._setupPointerExitEventsIfNeeded();\n                    let point = undefined;\n                    if (event.x !== undefined && event.y !== undefined) {\n                        point = event;\n                    }\n                    this.show(undefined, point);\n                },\n            ]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            this._passiveListeners.push([\n                'touchstart',\n                event => {\n                    const touch = event.targetTouches?.[0];\n                    const origin = touch ? { x: touch.clientX, y: touch.clientY } : undefined;\n                    // Note that it's important that we don't `preventDefault` here,\n                    // because it can prevent click events from firing on the element.\n                    this._setupPointerExitEventsIfNeeded();\n                    clearTimeout(this._touchstartTimeout);\n                    this._touchstartTimeout = setTimeout(() => this.show(undefined, origin), LONGPRESS_DELAY);\n                },\n            ]);\n        }\n        this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n        if (this._pointerExitEventsInitialized) {\n            return;\n        }\n        this._pointerExitEventsInitialized = true;\n        const exitListeners = [];\n        if (this._platformSupportsMouseEvents()) {\n            exitListeners.push([\n                'mouseleave',\n                event => {\n                    const newTarget = event.relatedTarget;\n                    if (!newTarget || !this._overlayRef?.overlayElement.contains(newTarget)) {\n                        this.hide();\n                    }\n                },\n            ], ['wheel', event => this._wheelListener(event)]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            const touchendListener = () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            };\n            exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n        }\n        this._addListeners(exitListeners);\n        this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n        listeners.forEach(([event, listener]) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        });\n    }\n    _platformSupportsMouseEvents() {\n        return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n        if (this._isTooltipVisible()) {\n            const elementUnderPointer = this._document.elementFromPoint(event.clientX, event.clientY);\n            const element = this._elementRef.nativeElement;\n            // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n            // won't fire if the user scrolls away using the wheel without moving their cursor. We\n            // work around it by finding the element under the user's cursor and closing the tooltip\n            // if it's not the trigger.\n            if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n                this.hide();\n            }\n        }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            const element = this._elementRef.nativeElement;\n            const style = element.style;\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect =\n                    style.msUserSelect =\n                        style.webkitUserSelect =\n                            style.MozUserSelect =\n                                'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                style.webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatTooltipBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: _MatTooltipBase, inputs: { position: [\"matTooltipPosition\", \"position\"], positionAtOrigin: [\"matTooltipPositionAtOrigin\", \"positionAtOrigin\"], disabled: [\"matTooltipDisabled\", \"disabled\"], showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatTooltipBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i2.Platform }, { type: i3.AriaDescriber }, { type: i3.FocusMonitor }, { type: undefined }, { type: i4.Directionality }, { type: undefined }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { position: [{\n                type: Input,\n                args: ['matTooltipPosition']\n            }], positionAtOrigin: [{\n                type: Input,\n                args: ['matTooltipPositionAtOrigin']\n            }], disabled: [{\n                type: Input,\n                args: ['matTooltipDisabled']\n            }], showDelay: [{\n                type: Input,\n                args: ['matTooltipShowDelay']\n            }], hideDelay: [{\n                type: Input,\n                args: ['matTooltipHideDelay']\n            }], touchGestures: [{\n                type: Input,\n                args: ['matTooltipTouchGestures']\n            }], message: [{\n                type: Input,\n                args: ['matTooltip']\n            }], tooltipClass: [{\n                type: Input,\n                args: ['matTooltipClass']\n            }] } });\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip extends _MatTooltipBase {\n    constructor(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document) {\n        super(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document);\n        this._tooltipComponent = TooltipComponent;\n        this._cssClassPrefix = 'mat-mdc';\n        this._viewportMargin = MIN_VIEWPORT_TOOLTIP_THRESHOLD;\n    }\n    _addOffset(position) {\n        const offset = UNBOUNDED_ANCHOR_GAP;\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        if (position.originY === 'top') {\n            position.offsetY = -offset;\n        }\n        else if (position.originY === 'bottom') {\n            position.offsetY = offset;\n        }\n        else if (position.originX === 'start') {\n            position.offsetX = isLtr ? -offset : offset;\n        }\n        else if (position.originX === 'end') {\n            position.offsetX = isLtr ? offset : -offset;\n        }\n        return position;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatTooltip, deps: [{ token: i1.Overlay }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.ViewContainerRef }, { token: i0.NgZone }, { token: i2.Platform }, { token: i3.AriaDescriber }, { token: i3.FocusMonitor }, { token: MAT_TOOLTIP_SCROLL_STRATEGY }, { token: i4.Directionality, optional: true }, { token: MAT_TOOLTIP_DEFAULT_OPTIONS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatTooltip, selector: \"[matTooltip]\", host: { properties: { \"class.mat-mdc-tooltip-disabled\": \"disabled\" }, classAttribute: \"mat-mdc-tooltip-trigger\" }, exportAs: [\"matTooltip\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatTooltip, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTooltip]',\n                    exportAs: 'matTooltip',\n                    host: {\n                        'class': 'mat-mdc-tooltip-trigger',\n                        '[class.mat-mdc-tooltip-disabled]': 'disabled',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i2.Platform }, { type: i3.AriaDescriber }, { type: i3.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n                }] }, { type: i4.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\nclass _TooltipComponentBase {\n    constructor(_changeDetectorRef, animationMode) {\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Whether interactions on the page should close the tooltip */\n        this._closeOnInteraction = false;\n        /** Whether the tooltip is currently visible. */\n        this._isVisible = false;\n        /** Subject for notifying that the tooltip has been hidden from the view */\n        this._onHide = new Subject();\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = setTimeout(() => {\n            this._toggleVisibility(true);\n            this._showTimeoutId = undefined;\n        }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        this._hideTimeoutId = setTimeout(() => {\n            this._toggleVisibility(false);\n            this._hideTimeoutId = undefined;\n        }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n        return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n        return this._isVisible;\n    }\n    ngOnDestroy() {\n        this._cancelPendingAnimations();\n        this._onHide.complete();\n        this._triggerElement = null;\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    _handleMouseLeave({ relatedTarget }) {\n        if (!relatedTarget || !this._triggerElement.contains(relatedTarget)) {\n            if (this.isVisible()) {\n                this.hide(this._mouseLeaveHideDelay);\n            }\n            else {\n                this._finalizeAnimation(false);\n            }\n        }\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() { }\n    /** Event listener dispatched when an animation on the tooltip finishes. */\n    _handleAnimationEnd({ animationName }) {\n        if (animationName === this._showAnimation || animationName === this._hideAnimation) {\n            this._finalizeAnimation(animationName === this._showAnimation);\n        }\n    }\n    /** Cancels any pending animation sequences. */\n    _cancelPendingAnimations() {\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = this._hideTimeoutId = undefined;\n    }\n    /** Handles the cleanup after an animation has finished. */\n    _finalizeAnimation(toVisible) {\n        if (toVisible) {\n            this._closeOnInteraction = true;\n        }\n        else if (!this.isVisible()) {\n            this._onHide.next();\n        }\n    }\n    /** Toggles the visibility of the tooltip element. */\n    _toggleVisibility(isVisible) {\n        // We set the classes directly here ourselves so that toggling the tooltip state\n        // isn't bound by change detection. This allows us to hide it even if the\n        // view ref has been detached from the CD tree.\n        const tooltip = this._tooltip.nativeElement;\n        const showClass = this._showAnimation;\n        const hideClass = this._hideAnimation;\n        tooltip.classList.remove(isVisible ? hideClass : showClass);\n        tooltip.classList.add(isVisible ? showClass : hideClass);\n        this._isVisible = isVisible;\n        // It's common for internal apps to disable animations using `* { animation: none !important }`\n        // which can break the opening sequence. Try to detect such cases and work around them.\n        if (isVisible && !this._animationsDisabled && typeof getComputedStyle === 'function') {\n            const styles = getComputedStyle(tooltip);\n            // Use `getPropertyValue` to avoid issues with property renaming.\n            if (styles.getPropertyValue('animation-duration') === '0s' ||\n                styles.getPropertyValue('animation-name') === 'none') {\n                this._animationsDisabled = true;\n            }\n        }\n        if (isVisible) {\n            this._onShow();\n        }\n        if (this._animationsDisabled) {\n            tooltip.classList.add('_mat-animation-noopable');\n            this._finalizeAnimation(isVisible);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _TooltipComponentBase, deps: [{ token: i0.ChangeDetectorRef }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: _TooltipComponentBase, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _TooltipComponentBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; } });\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent extends _TooltipComponentBase {\n    constructor(changeDetectorRef, _elementRef, animationMode) {\n        super(changeDetectorRef, animationMode);\n        this._elementRef = _elementRef;\n        /* Whether the tooltip text overflows to multiple lines */\n        this._isMultiline = false;\n        this._showAnimation = 'mat-mdc-tooltip-show';\n        this._hideAnimation = 'mat-mdc-tooltip-hide';\n    }\n    _onShow() {\n        this._isMultiline = this._isTooltipMultiline();\n        this._markForCheck();\n    }\n    /** Whether the tooltip text has overflown to the next line */\n    _isTooltipMultiline() {\n        const rect = this._elementRef.nativeElement.getBoundingClientRect();\n        return rect.height > MIN_HEIGHT && rect.width >= MAX_WIDTH;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TooltipComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: TooltipComponent, selector: \"mat-tooltip-component\", host: { attributes: { \"aria-hidden\": \"true\" }, listeners: { \"mouseleave\": \"_handleMouseLeave($event)\" }, properties: { \"style.zoom\": \"isVisible() ? 1 : null\" } }, viewQueries: [{ propertyName: \"_tooltip\", first: true, predicate: [\"tooltip\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mdc-tooltip--shown mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mdc-tooltip__surface mdc-tooltip__surface-animation\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mdc-tooltip__surface{word-break:break-all;word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip--showing-transition .mdc-tooltip__surface-animation{transition:opacity 150ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-tooltip--hide-transition .mdc-tooltip__surface-animation{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - (2 * 8px));margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - (2 * 8px));align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mat-mdc-tooltip{--mdc-plain-tooltip-container-shape:4px;--mdc-plain-tooltip-supporting-text-line-height:16px}.mat-mdc-tooltip .mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color)}.mat-mdc-tooltip .mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__caret-surface-top,.mat-mdc-tooltip .mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color)}.mat-mdc-tooltip .mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font);line-height:var(--mdc-plain-tooltip-supporting-text-line-height);font-size:var(--mdc-plain-tooltip-supporting-text-size);font-weight:var(--mdc-plain-tooltip-supporting-text-weight);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"], dependencies: [{ kind: \"directive\", type: i5.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TooltipComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tooltip-component', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                        // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                        '[style.zoom]': 'isVisible() ? 1 : null',\n                        '(mouseleave)': '_handleMouseLeave($event)',\n                        'aria-hidden': 'true',\n                    }, template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mdc-tooltip--shown mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mdc-tooltip__surface mdc-tooltip__surface-animation\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mdc-tooltip__surface{word-break:break-all;word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip--showing-transition .mdc-tooltip__surface-animation{transition:opacity 150ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-tooltip--hide-transition .mdc-tooltip__surface-animation{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - (2 * 8px));margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - (2 * 8px));align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mat-mdc-tooltip{--mdc-plain-tooltip-container-shape:4px;--mdc-plain-tooltip-supporting-text-line-height:16px}.mat-mdc-tooltip .mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color)}.mat-mdc-tooltip .mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__caret-surface-top,.mat-mdc-tooltip .mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color)}.mat-mdc-tooltip .mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font);line-height:var(--mdc-plain-tooltip-supporting-text-line-height);font-size:var(--mdc-plain-tooltip-supporting-text-size);font-weight:var(--mdc-plain-tooltip-supporting-text-weight);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _tooltip: [{\n                type: ViewChild,\n                args: ['tooltip', {\n                        // Use a static query here since we interact directly with\n                        // the DOM which can happen before `ngAfterViewInit`.\n                        static: true,\n                    }]\n            }] } });\n\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nconst matTooltipAnimations = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        // TODO(crisbeto): these values are based on MDC's CSS.\n        // We should be able to use their styles directly once we land #19432.\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0.8)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => hidden', animate('75ms cubic-bezier(0.4, 0, 1, 1)')),\n    ]),\n};\n\nclass MatTooltipModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatTooltipModule, declarations: [MatTooltip, TooltipComponent], imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule], exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatTooltipModule, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule, MatCommonModule, CdkScrollableModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule],\n                    exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                    declarations: [MatTooltip, TooltipComponent],\n                    providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, _MatTooltipBase, _TooltipComponentBase, getMatTooltipInvalidPositionError, matTooltipAnimations };\n","import * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Directive, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i3 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i5 from '@angular/material/select';\nimport { MatSelectModule } from '@angular/material/select';\nimport * as i7 from '@angular/material/tooltip';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport * as i6 from '@angular/material/core';\nimport { mixinDisabled, mixinInitialized } from '@angular/material/core';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i4 from '@angular/material/form-field';\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPaginatorIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPaginatorIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPaginatorIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY,\n};\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to _MatPaginatorBase.\n/** @docs-private */\nconst _MatPaginatorMixinBase = mixinDisabled(mixinInitialized(class {\n}));\n/**\n * Base class with all of the `MatPaginator` functionality.\n * @docs-private\n */\nclass _MatPaginatorBase extends _MatPaginatorMixinBase {\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() {\n        return this._pageIndex;\n    }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() {\n        return this._length;\n    }\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() {\n        return this._pageSize;\n    }\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() {\n        return this._pageSizeOptions;\n    }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** Whether to hide the page size selection UI from the user. */\n    get hidePageSize() {\n        return this._hidePageSize;\n    }\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /** Whether to show the first/last buttons UI to the user. */\n    get showFirstLastButtons() {\n        return this._showFirstLastButtons;\n    }\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /** Used to configure the underlying `MatSelect` inside the paginator. */\n        this.selectConfig = {};\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex + 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize =\n                this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length,\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatPaginatorBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: _MatPaginatorBase, inputs: { color: \"color\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", selectConfig: \"selectConfig\" }, outputs: { page: \"page\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatPaginatorBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined }]; }, propDecorators: { color: [{\n                type: Input\n            }], pageIndex: [{\n                type: Input\n            }], length: [{\n                type: Input\n            }], pageSize: [{\n                type: Input\n            }], pageSizeOptions: [{\n                type: Input\n            }], hidePageSize: [{\n                type: Input\n            }], showFirstLastButtons: [{\n                type: Input\n            }], selectConfig: [{\n                type: Input\n            }], page: [{\n                type: Output\n            }] } });\nlet nextUniqueId = 0;\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    constructor(intl, changeDetectorRef, defaults) {\n        super(intl, changeDetectorRef, defaults);\n        /** ID for the DOM node containing the paginator's items per page label. */\n        this._pageSizeLabelId = `mat-paginator-page-size-label-${nextUniqueId++}`;\n        this._formFieldAppearance = defaults?.formFieldAppearance || 'outline';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPaginator, deps: [{ token: MatPaginatorIntl }, { token: i0.ChangeDetectorRef }, { token: MAT_PAGINATOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatPaginator, selector: \"mat-paginator\", inputs: { disabled: \"disabled\" }, host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-mdc-paginator\" }, exportAs: [\"matPaginator\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    <div class=\\\"mat-mdc-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-mdc-paginator-page-size-label\\\" id=\\\"{{_pageSizeLabelId}}\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-mdc-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n          [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n          [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n          hideSingleSelectionIndicator>\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-mdc-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color);background-color:var(--mat-paginator-container-background-color);font-family:var(--mat-paginator-container-text-font);line-height:var(--mat-paginator-container-text-line-height);font-size:var(--mat-paginator-container-text-size);font-weight:var(--mat-paginator-container-text-weight);letter-spacing:var(--mat-paginator-container-text-tracking)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size)}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color)}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}\"], dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i3.MatIconButton, selector: \"button[mat-icon-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { kind: \"component\", type: i4.MatFormField, selector: \"mat-form-field\", inputs: [\"hideRequiredMarker\", \"color\", \"floatLabel\", \"appearance\", \"subscriptSizing\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { kind: \"component\", type: i5.MatSelect, selector: \"mat-select\", inputs: [\"disabled\", \"disableRipple\", \"tabIndex\", \"panelWidth\", \"hideSingleSelectionIndicator\"], exportAs: [\"matSelect\"] }, { kind: \"component\", type: i6.MatOption, selector: \"mat-option\", exportAs: [\"matOption\"] }, { kind: \"directive\", type: i7.MatTooltip, selector: \"[matTooltip]\", exportAs: [\"matTooltip\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPaginator, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-paginator', exportAs: 'matPaginator', inputs: ['disabled'], host: {\n                        'class': 'mat-mdc-paginator',\n                        'role': 'group',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    <div class=\\\"mat-mdc-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-mdc-paginator-page-size-label\\\" id=\\\"{{_pageSizeLabelId}}\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-mdc-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n          [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n          [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n          hideSingleSelectionIndicator>\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-mdc-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color);background-color:var(--mat-paginator-container-background-color);font-family:var(--mat-paginator-container-text-font);line-height:var(--mat-paginator-container-text-line-height);font-size:var(--mat-paginator-container-text-size);font-weight:var(--mat-paginator-container-text-weight);letter-spacing:var(--mat-paginator-container-text-tracking)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size)}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color)}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}\"] }]\n        }], ctorParameters: function () { return [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n                }] }]; } });\n\nclass MatPaginatorModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPaginatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPaginatorModule, declarations: [MatPaginator], imports: [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule], exports: [MatPaginator] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPaginatorModule, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPaginatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule],\n                    exports: [MatPaginator],\n                    declarations: [MatPaginator],\n                    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent, _MatPaginatorBase };\n"],"x_google_ignoreList":[4,5]}