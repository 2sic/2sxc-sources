{"version":3,"file":"projects_eav-ui_src_app_content-items_import-content-item_import-content-item_component_ts.5a121cb6190a1840.js","mappings":"oSAWA,MAAMA,EAAW,CACfC,QAAQ,EACRC,WAAW,GAIN,IAAMC,EAAoB,MAA3B,MAAOA,UAA4BC,IADzCC,kCAGEC,KAAAC,OAAMC,MAAS,CAAEL,uBAAuBH,GAExCC,OAAOQ,GACL,OAAAH,KAAKC,IAAIG,KAAK,SAAU,CAAED,0BACnBH,KAAKK,cAA6BC,KAAkB,CACzDC,OAAQ,CAAEC,MAAOR,KAAKQ,MAAOC,YAAaN,IAE9C,CAEAP,UAAUO,EAA+BO,GACvC,OAAAV,KAAKC,IAAIG,KAAK,YAAa,CAAED,wBAAuBO,YAC7CV,KAAKW,UAAyBL,KAAkB,CACrDC,OAAQ,CAAEC,MAAOR,KAAKQ,MAAOC,YAAaN,IACzCO,EACL,CAEAE,WAAWT,GACT,OAAOH,KAAKK,cAAuBQ,IAAiB,CAClDN,OAAQ,CAAEC,MAAOR,KAAKQ,MAAOM,WAAYX,IAE7C,CAEAY,WAAWC,GACT,SAAOC,QAAKC,KAASF,IAAOG,QAC1BC,KAAUC,GACDrB,KAAKsB,KAAKC,KAAcvB,KAAKwB,OAAOC,KAAmB,UAAW,CACvEC,MAAO1B,KAAKQ,MACZmB,cAAeN,MAElB,EACDO,KAAIC,KAEAC,QAASD,EACTE,SAAU,MAKlB,yEAxCWlC,KAAmBmC,GAAnBnC,EAAmB,0CAAnBA,EAAmBoC,QAAnBpC,EAAmBqC,WAAA,SAAnBrC,CAAoB,2HCN1B,IAAMsC,EAA0B,MAAjC,MAAOA,EAMXpC,YAAqCqC,GAJrCpC,KAAAqC,WAAaC,KAAYC,YAEjBvC,KAAAwC,uBAAsBC,KAAU5C,KAGtCuC,EAAWM,QAAU,qBACrBN,EAAWO,cAAgB,2DAC3BP,EAAWQ,mBAAqB,OAChCR,EAAWS,UAAaC,GAAU9C,KAAKwC,oBAAoBzB,WAAW+B,EAAM,GAC9E,iDAXWX,GAA0BY,MAMjBC,MAAe,oCANxBb,EAA0Bc,UAAA,8BAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,mBAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GCXvCP,MAAA,mCAAwBA,MAAA,aAAAQ,EAAAlB,2BDSVmB,MAAyBC,cAAA,YAE1BtB,CAA0B","names":["logSpecs","getAll","getAllSig","ContentItemsService","HttpServiceBase","constructor","this","log","classLog","contentTypeStaticName","fnIf","getHttpApiUrl","webApiEntityList","params","appId","contentType","initial","getSignal","getColumns","webApiFieldsAll","staticName","importItem","file","from","toBase64","pipe","switchMap","fileBase64","http","post","apiUrl","webApiEntityRoot","AppId","ContentBase64","map","success","Success","Messages","__ngFactoryType__","factory","Éµfac","ImportContentItemComponent","dialogData","uploadType","UploadTypes","ContentItem","contentItemsService","transient","title","description","allowedFileTypes","upload$","files","i0","MAT_DIALOG_DATA","selectors","decls","vars","consts","template","rf","ctx","FileUploadDialogComponent","encapsulation"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/content-items/services/content-items.service.ts","./projects/eav-ui/src/app/content-items/import-content-item/import-content-item.component.ts","./projects/eav-ui/src/app/content-items/import-content-item/import-content-item.component.html"],"sourcesContent":["import { Injectable, Signal } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { webApiFieldsAll } from '../../shared/fields/content-types-fields.service';\r\nimport { Field } from '../../shared/fields/field.model';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { classLog } from '../../shared/logging';\r\nimport { webApiEntityList, webApiEntityRoot } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentItem } from '../models/content-item.model';\r\n\r\nconst logSpecs = {\r\n  getAll: true,\r\n  getAllSig: true,\r\n}\r\n\r\n@Injectable()\r\nexport class ContentItemsService extends HttpServiceBase {\r\n\r\n  log = classLog({ ContentItemsService }, logSpecs);\r\n\r\n  getAll(contentTypeStaticName: string) {\r\n    this.log.fnIf('getAll', { contentTypeStaticName });\r\n    return this.getHttpApiUrl<ContentItem[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  getAllSig(contentTypeStaticName: string, initial: undefined): Signal<ContentItem[]> {\r\n    this.log.fnIf('getAllSig', { contentTypeStaticName, initial });\r\n    return this.getSignal<ContentItem[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType: contentTypeStaticName }\r\n    }, initial);\r\n  }\r\n\r\n  getColumns(contentTypeStaticName: string) {\r\n    return this.getHttpApiUrl<Field[]>(webApiFieldsAll, {\r\n      params: { appId: this.appId, staticName: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  importItem(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiEntityRoot + 'upload'), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { transient } from '../../../../../core';\r\nimport { FileUploadDialogComponent, FileUploadDialogData, UploadTypes } from '../../shared/components/file-upload-dialog';\r\nimport { ContentItemsService } from '../services/content-items.service';\r\n\r\n@Component({\r\n    selector: 'app-import-content-item',\r\n    templateUrl: './import-content-item.component.html',\r\n    imports: [FileUploadDialogComponent,]\r\n})\r\nexport class ImportContentItemComponent {\r\n\r\n  uploadType = UploadTypes.ContentItem;\r\n\r\n  private contentItemsService = transient(ContentItemsService);\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) dialogData: FileUploadDialogData) {\r\n    dialogData.title ??= `Import Single Item`;\r\n    dialogData.description ??= `Select an item file (json) from your computer to import.`;\r\n    dialogData.allowedFileTypes ??= 'json';\r\n    dialogData.upload$ ??= (files) => this.contentItemsService.importItem(files[0]);\r\n  }\r\n\r\n}\r\n","<app-file-upload-dialog [uploadType]=\"uploadType\"></app-file-upload-dialog>\r\n"],"x_google_ignoreList":[]}