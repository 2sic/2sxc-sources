{"version":3,"file":"projects_eav-ui_src_app_manage-content-list_manage-content-list_component_ts-projects_eav-ui_-8d5b99.951e4a4e6fdb245b.js","mappings":"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","names":["ServiceBase","constructor","this","subscriptions","Subscription","ngOnDestroy","destroy","unsubscribe","factory","Éµfac","$item","Id","i0","_r2","ctx_r2","editHeader","header","Title","ManageContentListComponent_Conditional_0_Conditional_8_Conditional_4_Template","ManageContentListComponent_Conditional_0_Conditional_8_Conditional_5_Template","Type","reordered","tmp_2_0","items","length","item_r5","_r4","$implicit","addFromExisting","Index","addBelow","remove","editItem","ManageContentListComponent_Conditional_0_Conditional_8_Template","ManageContentListComponent_Conditional_0_Conditional_9_Template","$event","_r1","drop","ManageContentListComponent_Conditional_0_For_12_Template","_forTrack0","closeDialog","saveList","saveAndCloseList","ManageContentListComponent","#dialogRoutes","#contentGroupSvc","#dialogConfigSvc","dialog","snackBar","translate","hostClass","transient","DialogRoutingService","ContentGroupService","DialogConfigAppService","signalObj","#contentGroup","convert","getParams","p","id","guid","part","index","parseInt","refresh","signal","computed","getHeader","undefined","ngOnInit","#fetchList","#fetchDialogSettings","doOnDialogClosed","#fetchHeader","getCurrent$","subscribe","dialogSettings","setDefaultLang","Context","Language","Primary","split","use","Current","close","open","duration","form","EditPrep","relationship","formUrl","convertFormToUrl","navRelative","editId","queryParams","add","item","confirm","instant","removeItem","event","moveItemInArray","previousIndex","currentIndex","set","keepOrder","getList","oldIds","map","some","includes","sortOrder","sort","a","b","aIndex","indexOf","bIndex","i1","i2","i3","selectors","hostVars","hostBindings","rf","ctx","ManageContentListComponent_Conditional_0_Template","RouterOutlet","CdkScrollable","MatButtonModule","i4","MatIconModule","i5","CdkDropList","CdkDrag","MatDialogActions","TranslateModule","MatDialogModule","TippyDirective","MousedownStopPropagationDirective","styles"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/services/service-base.ts","./projects/eav-ui/src/app/manage-content-list/manage-content-list.component.html","./projects/eav-ui/src/app/manage-content-list/manage-content-list.component.ts"],"sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","@if (header() && items()) {\r\n  <div class=\"eav-dialog eav-no-scrollbar\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">{{ 'ManageContentList.Title' | translate }}</div>\r\n    </div>\r\n    <div class=\"eav-dialog-content\">\r\n      <router-outlet></router-outlet>\r\n      <div class=\"dialog-component-content fancy-scrollbar-light\" cdkScrollable>\r\n        @if (header()()) {\r\n          <p>\r\n            {{ 'ManageContentList.Description' | translate }}\r\n          </p>\r\n          <p>\r\n            @if (header()().Type) {\r\n              <span>{{ header()().Title }}</span>\r\n              <button mat-icon-button tippy=\"Edit header\" (click)=\"editHeader()\">\r\n                <mat-icon>edit</mat-icon>\r\n              </button>\r\n            } @else {\r\n              {{ 'ManageContentList.NoHeader' | translate }}\r\n            }\r\n          </p>\r\n        }\r\n        @if (items()) {\r\n          <p class=\"eav-sort-title\">\r\n            {{\r\n              'ManageContentList.' + (reordered() ? 'ListHasBeenReordered' : items()?.length < 25 ? 'SortItems' : 'SortLotsOfItems')\r\n                | translate\r\n            }}\r\n          </p>\r\n        }\r\n\r\n        <!-- Items - with drag-and-drop -->\r\n        <div class=\"eav-dnd-list\" cdkDropList (cdkDropListDropped)=\"drop($event)\">\r\n          <!-- we use both Index and Id because all demo items have Id=0 -->\r\n          @for (item of items(); track item.Index + '+' + item.Id) {\r\n            <div class=\"eav-dnd-item\" cdkDrag>\r\n              <div class=\"eav-dnd-item__title\">\r\n                <mat-icon class=\"eav-dnd-item__title-icon\" tippy=\"Drag to reorder the list\">drag_handle</mat-icon>\r\n                <span class=\"eav-dnd-item__title-text\" tippy=\"{{ item.Title }} ({{ item.Id }})\"> {{ item.Title }} ({{ item.Id }}) </span>\r\n              </div>\r\n              <div>\r\n                <!-- most buttons should only exist if it has a real ID, except for remove - which should also remove null-entries -->\r\n                <button\r\n                  mat-icon-button\r\n                  tippyTranslate=\"Fields.Picker.AddExistingItem\"\r\n                  appMousedownStopPropagation\r\n                  [disabled]=\"item.Id === 0\"\r\n                  (click)=\"addFromExisting(item.Index)\"\r\n                >\r\n                  <mat-icon>playlist_add</mat-icon>\r\n                </button>\r\n                <button\r\n                  mat-icon-button\r\n                  tippyTranslate=\"Fields.Picker.AddItemBelow\"\r\n                  appMousedownStopPropagation\r\n                  [disabled]=\"item.Id === 0 || reordered()\"\r\n                  (click)=\"addBelow(item.Index)\"\r\n                >\r\n                  <mat-icon>add</mat-icon>\r\n                </button>\r\n                <button\r\n                  mat-icon-button\r\n                  tippyTranslate=\"Fields.Picker.Remove\"\r\n                  appMousedownStopPropagation\r\n                  [disabled]=\"reordered()\"\r\n                  (click)=\"remove(item)\"\r\n                >\r\n                  <mat-icon>remove</mat-icon>\r\n                </button>\r\n                <button\r\n                  mat-icon-button\r\n                  tippyTranslate=\"Fields.Picker.Edit\"\r\n                  appMousedownStopPropagation\r\n                  [disabled]=\"item.Id === 0\"\r\n                  (click)=\"editItem(item.Id)\"\r\n                >\r\n                  <mat-icon>edit</mat-icon>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-raised-button (click)=\"closeDialog()\">{{ 'General.Buttons.Cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"accent\" (click)=\"saveList()\">{{ 'General.Buttons.Save' | translate }}</button>\r\n      <button mat-raised-button color=\"accent\" (click)=\"saveAndCloseList()\" tippyTranslate=\"Form.Buttons.SaveAndClose\">\r\n        <mat-icon class=\"eav-raised-button-icon\">done</mat-icon>\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n}\r\n","import { CdkDrag, CdkDragDrop, CdkDropList, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { CdkScrollable } from '@angular/cdk/scrolling';\r\nimport { Component, computed, HostBinding, OnInit, signal } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogActions, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { convert, transient } from '../../../../core';\r\nimport { DialogConfigAppService } from '../app-administration/services/dialog-config-app.service';\r\nimport { MousedownStopPropagationDirective } from '../shared/directives/mousedown-stop-propagation.directive';\r\nimport { TippyDirective } from '../shared/directives/tippy.directive';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep } from '../shared/models/edit-form.model';\r\nimport { DialogRoutingService } from '../shared/routing/dialog-routing.service';\r\nimport { signalObj } from '../shared/signals/signal.utilities';\r\nimport { ContentGroup } from './models/content-group.model';\r\nimport { GroupHeader } from './models/group-header.model';\r\nimport { ContentGroupService } from './services/content-group.service';\r\n\r\n@Component({\r\n    selector: 'app-manage-content-list',\r\n    templateUrl: './manage-content-list.component.html',\r\n    styleUrls: ['./manage-content-list.component.scss'],\r\n    imports: [\r\n        RouterOutlet,\r\n        CdkScrollable,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        CdkDropList,\r\n        CdkDrag,\r\n        MatDialogActions,\r\n        TranslateModule,\r\n        MatDialogModule,\r\n        TippyDirective,\r\n        MousedownStopPropagationDirective,\r\n    ]\r\n})\r\nexport class ManageContentListComponent implements OnInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  #dialogRoutes = transient(DialogRoutingService);\r\n  #contentGroupSvc = transient(ContentGroupService);\r\n  #dialogConfigSvc = transient(DialogConfigAppService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<ManageContentListComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private translate: TranslateService,\r\n  ) { }\r\n\r\n  protected items = signalObj<GroupHeader[]>('items', null);\r\n\r\n  #contentGroup = convert(this.#dialogRoutes.getParams(['guid', 'part', 'index']), p => ({\r\n    id: null as number,\r\n    guid: p.guid,\r\n    part: p.part,\r\n    index: parseInt(p.index, 10),\r\n  } satisfies ContentGroup));\r\n\r\n  refresh = signal(0);\r\n\r\n  header = computed(() => {\r\n    const r = this.refresh();\r\n    return this.#contentGroupSvc.getHeader(this.#contentGroup, undefined);\r\n  });\r\n\r\n\r\n  protected reordered = signalObj('reordered', false);\r\n\r\n  ngOnInit() {\r\n    this.#fetchList();\r\n    this.#fetchDialogSettings();\r\n    this.#dialogRoutes.doOnDialogClosed(() => {\r\n      this.#fetchList(true);\r\n      this.#fetchHeader();\r\n    });\r\n  }\r\n\r\n  #fetchDialogSettings() {\r\n    this.#dialogConfigSvc.getCurrent$().subscribe(dialogSettings => {\r\n      this.translate.setDefaultLang(dialogSettings.Context.Language.Primary.split('-')[0]);\r\n      this.translate.use(dialogSettings.Context.Language.Current.split('-')[0]);\r\n    });\r\n  }\r\n\r\n  protected closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  protected saveList() {\r\n    this.snackBar.open('Saving...');\r\n    this.#contentGroupSvc.saveList(this.#contentGroup, this.items()).subscribe(() => {\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.#fetchList();\r\n      this.#fetchHeader();\r\n    });\r\n  }\r\n\r\n  protected saveAndCloseList() {\r\n    this.snackBar.open('Saving...');\r\n    this.#contentGroupSvc.saveList(this.#contentGroup, this.items()).subscribe(() => {\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.closeDialog();\r\n    });\r\n  }\r\n\r\n  protected editHeader() {\r\n    const form: EditForm = {\r\n      items: [\r\n        EditPrep.relationship(this.#contentGroup.guid, 'listcontent', 0, this.header()().Id === 0),\r\n        EditPrep.relationship(this.#contentGroup.guid, 'listpresentation', 0, this.header()().Id === 0),\r\n      ],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  protected editItem(id: number) {\r\n    const form: EditForm = {\r\n      items: [EditPrep.editId(id)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  protected addFromExisting(index: number) {\r\n    const queryParams = { add: true };\r\n    this.#dialogRoutes.navRelative([`${this.#contentGroup.guid}/${this.#contentGroup.part}/${index + 1}/replace`], { queryParams });\r\n  }\r\n\r\n  addBelow(index: number) {\r\n    const form: EditForm = {\r\n      items: [EditPrep.relationship(this.#contentGroup.guid, this.#contentGroup.part, index + 1, true)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  protected remove(item: GroupHeader) {\r\n    if (!confirm(this.translate.instant('ManageContentList.ConfirmRemove'))) return;\r\n    this.snackBar.open('Removing...');\r\n    this.#contentGroupSvc.removeItem(this.#contentGroup, item.Index).subscribe(() => {\r\n      this.snackBar.open('Removed', null, { duration: 2000 });\r\n      this.#fetchList();\r\n    });\r\n  }\r\n\r\n  protected drop(event: CdkDragDrop<GroupHeader[]>) {\r\n    const items = [...this.items()];\r\n    moveItemInArray(items, event.previousIndex, event.currentIndex);\r\n    this.items.set(items);\r\n    this.reordered.set(true);\r\n  }\r\n\r\n  #fetchList(keepOrder = false) {\r\n    this.#contentGroupSvc.getList(this.#contentGroup).subscribe(items => {\r\n      if (this.reordered()) {\r\n        const oldIds = this.items().map(item => item.Id);\r\n        const idsChanged = this.items().length !== items.length || items.some(item => !oldIds.includes(item.Id));\r\n        // for usecase where list is fetched on child closed and wasn't changed in the meantime keeps the order before child was opened\r\n        if (!idsChanged && keepOrder) {\r\n          const sortOrder = this.items().map(item => item.Index);\r\n          items.sort((a, b) => {\r\n            const aIndex = sortOrder.indexOf(a.Index);\r\n            const bIndex = sortOrder.indexOf(b.Index);\r\n            if (aIndex === -1 || bIndex === -1) { return 0; }\r\n            return aIndex - bIndex;\r\n          });\r\n        } else if (keepOrder)\r\n          this.snackBar.open('List was changed from somewhere else. Order of items is reset', null, { duration: 5000 });\r\n      }\r\n      this.items.set(items);\r\n      this.reordered.set(false);\r\n    });\r\n  }\r\n\r\n  #fetchHeader() {\r\n    this.refresh.set(this.refresh() + 1);\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}