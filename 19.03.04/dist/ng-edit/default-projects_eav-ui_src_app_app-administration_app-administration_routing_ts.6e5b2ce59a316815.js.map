{"version":3,"file":"default-projects_eav-ui_src_app_app-administration_app-administration_routing_ts.6e5b2ce59a316815.js","mappings":"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","names":["logSpecs","getAll","getAllSig","ContentItemsService","HttpServiceBase","constructor","this","log","classLog","contentTypeStaticName","fnIf","getHttpApiUrl","webApiEntityList","params","appId","contentType","initial","getSignal","getColumns","webApiFieldsAll","staticName","importItem","file","from","toBase64","pipe","switchMap","fileBase64","http","post","apiUrl","webApiEntityRoot","AppId","ContentBase64","map","success","Success","Messages","__ngFactoryType__","factory","ɵfac","AgGridHelper","cellLink","link","body","classes","featureInfoDialog","name","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","FeatureInfoDialogComponent","Promise","resolve","then","__webpack_require__","bind","appAdministrationDialog","AppAdminMainComponent","all","e","messageDialog","MessageComponent","AppStateComponent","#importAppPartsSvc","transient","ImportAppPartsService","#exportAppSvc","ExportAppService","snackBar","ngOnDestroy","dismiss","exportAppXml","withFiles","open","exportForVersionControl","includeContentGroups","resetAppGuid","subscribe","next","_","duration","error","resetApp","confirm","i0","i1","selectors","decls","vars","consts","template","rf","ctx","MatCardModule","MatIconModule","i2","MatButtonModule","i3","FeatureTextInfoComponent","MatDialogActions","encapsulation","dataBundlesDialog","DataBundlesDetailComponent","DataBundleActionsComponent","agInit","item","data","refresh","do","verb","MatRippleModule","MatMenuModule","TippyDirective","file_r3","_c0","message_r4","MessageType","ctx_r4","FileUploadMessageTypes","Warning","Error","Text","DataBundlesComponent_Conditional_34_Conditional_1_Template","DataBundlesComponent_Conditional_34_Conditional_2_Template","DataBundlesComponent_Conditional_34_For_4_Template","result","_r6","upload","files","length","uploading","DataBundlesComponent","#contentItemsSvc","#dialogRouter","#dataBundlesQueryService","#dataBundlesService","#queryResults","DialogRoutingService","DataBundlesQueryService","DataBundlesService","signal","#defaultContentTypeId","gridOptions","#buildGridOptions","#refresh","undefined","importData","title","allowedFileTypes","upload$","import","#dataBundles","computed","dataSourceData","dataBundles","queryResults","bundle","entityCount","contentTypeCount","guid","find","Guid","Result","filter","TypeName","countEntitiesAndContentTypes","FileName","Name","Id","Entities","ContentType","heightStyle","effect","forEach","dataBundle","fetchQuery","untracked","bundleQuery","update","results","err","console","ngOnInit","doOnDialogClosed","#fetchItems","value","filesDropped","importFile","substring","lastIndexOf","toLocaleLowerCase","#importDataBundles","filesChanged","event","Array","target","#setFiles","set","take","multiple","slice","navRelative","state","editItem","form","items","EditPrep","newFromType","editId","formUrl","convertFormToUrl","#export","exportDataBundle","#saveState","saveDataBundles","#restoreState","restoreDataBundles","defaultGridOptions","columnDefs","ColumnDefinitions","TextWideMin100","headerName","field","flex","cellRenderer","p","urlSubRoute","Number2","ActionsPinnedRight3","cellRendererParams","$event","_r1","DataBundlesComponent_Conditional_26_Template","fileInput_r2","click","DataBundlesComponent_Conditional_29_Template","DataBundlesComponent_For_31_Template","DataBundlesComponent_Conditional_34_Template","DataBundlesComponent_Conditional_35_Template","tmp_11_0","SxcGridModule","i4","RouterModule","i5","DragAndDropDirective","NgClass","MatProgressSpinnerModule","i6","styles","scopeOption_r1","template_r5","_r4","$implicit","_export","ExportAppPartsComponent_Conditional_27_For_5_Conditional_5_For_4_Template","contentType_r3","Templates","entity_r7","Title","ExportAppPartsComponent_Conditional_27_For_5_Conditional_6_For_4_Template","_r2","ExportAppPartsComponent_Conditional_27_For_5_Conditional_5_Template","ExportAppPartsComponent_Conditional_27_For_5_Conditional_6_Template","template_r9","_r8","ExportAppPartsComponent_Conditional_27_For_5_Template","ExportAppPartsComponent_Conditional_27_For_10_Template","ctx_r9","contentInfo","ContentTypes","TemplatesWithoutContentTypes","ExportAppPartsComponent","#exportAppPartsSvc","#contentTypesSvc","hostClass","ExportAppPartsService","ContentTypesService","lockScope","dropdownInsertValue","isExporting","exportScope","eavConstants","scopes","default","getContentInfo","scopeOptions","getScopesSig","loading","exportAppParts","contentTypeIds","#selectedContentTypes","templateIds","#selectedTemplates","entityIds","#selectedEntities","entity","concat","exportParts","changeScope","newScope","prompt","option","newScopeOption","scopeOptionsTemp","unshift","unlockScope","entities","templates","hostVars","hostBindings","ExportAppPartsComponent_For_17_Template","ExportAppPartsComponent_Conditional_27_Template","MatFormFieldModule","MatSelectModule","FormsModule","MatOptionModule","MatCheckboxModule","i7","FieldHintComponent","ClickStopPropagationDirective","MatDialogModule","ExportAppComponent","#exportAppService","appInfo","getAppInfo","features","inject","FeaturesService","expAssetsAdvEnabled","isEnabled","FeatureNames","AppExportAssetsAdvanced","model","assetsAdam","assetsAdamDeleted","assetsSite","downloadUrl","exportAppUrl","inputs","outputs","tmp_1_0","tmp_2_0","tmp_3_0","Version","tmp_4_0","EntitiesCount","tmp_5_0","LanguagesCount","tmp_6_0","TemplatesCount","HasTokenTemplates","HasRazorTemplates","tmp_7_0","TransferableFilesCount","tmp_8_0","FilesCount","FeatureIconComponent","DocsLinkHelperComponent","_c1","ImportAppPartsComponent_Conditional_19_Conditional_1_Template","ImportAppPartsComponent_Conditional_19_Conditional_2_Template","ImportAppPartsComponent_Conditional_19_For_4_Template","ImportAppPartsComponent","BaseComponent","sanitizer","context","changeDetectorRef","super","importAppPartsService","uploadType","UploadTypes","AppPart","showAppCatalog$","BehaviorSubject","showProgress","remoteInstallerUrl","ready","description","importAppParts","installerService","InstallerService","installSettingsService","AppInstallSettingsService","alreadyProcessing","messages$","fromEvent","window","evt","origin","JSON","parse","Number","moduleId","subscriptions","add","settings$","settings","bypassSecurityTrustResourceUrl","remoteUrl","loadGettingStarted","action","tap","winFrame","installerWindow","nativeElement","specsMsg","installedApps","rules","app","appGuid","mode","url","specsJson","stringify","contentWindow","postMessage","Object","values","packages","msg","reduce","t","c","displayName","detectChanges","installPackages","currentPackage","alert","top","location","reload","catchError","Message","message","of","setFiles","viewQuery","ImportAppPartsComponent_Conditional_5_Template","ImportAppPartsComponent_Conditional_14_Template","ImportAppPartsComponent_For_16_Template","ImportAppPartsComponent_Conditional_19_Template","ImportAppPartsComponent_Conditional_20_Template","tmp_9_0","SafeHtmlPipe","ImportExportComponent","router","linkToPage","replace","analyzeSettingsDialog","AnalyzeSettingsComponent","settingsItemDetailsDialog","SettingsItemDetailsComponent","editContentTypeDialog","EditContentTypeComponent","importDataBundlesDialog","ImportDataBundlesComponent","importQueryDialog","ImportQueryComponent","importViewDialog","ImportViewComponent","languagePermissionsDialog","LanguagePermissionsComponent","viewsUsageDialog","ViewsUsageComponent","appAdministrationRoutes","path","component","DialogEntryComponent","dialog","children","redirectTo","pathMatch","loadComponent","mod","GettingStartedComponent","breadcrumb","DataComponent","ImportContentTypeComponent","loadChildren","m","contentItemsRoutes","EditRoutes","GoToMetadata","getRoutes","GoToDevRest","route","contentTypeFieldsRoutes","ContentExportRoutes","contentImportRoutes","GoToPermissions","GoToCopilot","CopilotPageComponent","CopilotSpecs","routeData","DataRestApiComponent","paramTypeName","DevRestDataComponent","QueriesComponent","EditRoutesNoHistory","routeQuery","QueriesRestApiComponent","paramQuery","DevRestQueryComponent","ViewsComponent","views","WebApiComponent","webApi","routeWebApi","WebApiRestApiComponent","paramApiPath","DevRestApiComponent","AppConfigurationComponent","featureId","PermissionsByLanguage","i18n","errComponent","defaultRoute","metadataRoutes","getUrl","targetType","keyType","key","dialogTitle","getUrlApp","metadata","toString","getUrlAttribute","attributeId","attribute","getUrlContentType","getUrlEntity","formData","FormData","append","zoneId","URLSearchParams","exportConfiguration","indentation","get","fileName","#queryService","QueryService","translate","stream","getFromQuery","instant","throwError","routeDefinition","part","icon","svgIcon","input","label","intro","heading","teaser","outputType"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/content-items/services/content-items.service.ts","./projects/eav-ui/src/app/shared/ag-grid/ag-grid-helper.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.config.ts","./projects/eav-ui/src/app/app-administration/app-admin-main/app-admin-main.dialog-config.ts","./projects/eav-ui/src/app/app-administration/app-configuration/message/message-dialog.config.ts","./projects/eav-ui/src/app/app-administration/import-export-menu/app-state/app-state.component.ts","./projects/eav-ui/src/app/app-administration/import-export-menu/app-state/app-state.component.html","./projects/eav-ui/src/app/app-administration/import-export-menu/data-bundles/data-bundles-detail/data-bundles-dialog.config.ts","./projects/eav-ui/src/app/app-administration/import-export-menu/data-bundles/data-bundles-actions/data-bundles-actions.component.ts","./projects/eav-ui/src/app/app-administration/import-export-menu/data-bundles/data-bundles-actions/data-bundles-actions.component.html","./projects/eav-ui/src/app/app-administration/import-export-menu/data-bundles/data-bundles.component.html","./projects/eav-ui/src/app/app-administration/import-export-menu/data-bundles/data-bundles.component.ts","./projects/eav-ui/src/app/app-administration/import-export-menu/export-app-parts/export-app-parts.component.html","./projects/eav-ui/src/app/app-administration/import-export-menu/export-app-parts/export-app-parts.component.ts","./projects/eav-ui/src/app/app-administration/import-export-menu/export-app/export-app.component.ts","./projects/eav-ui/src/app/app-administration/import-export-menu/export-app/export-app.component.html","./projects/eav-ui/src/app/app-administration/import-export-menu/import-app-parts/import-app-parts.component.html","./projects/eav-ui/src/app/app-administration/import-export-menu/import-app-parts/import-app-parts.component.ts","./projects/eav-ui/src/app/app-administration/import-export-menu/import-export/import-export.component.ts","./projects/eav-ui/src/app/app-administration/import-export-menu/import-export/import-export.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/settings-item-details/settings-item-details.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/edit-content-type/edit-content-type-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-data-bundles/import-data-bundles-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-query/import-query-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-view/import-view-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/language-permissions/language-permissions-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-dialog.config.ts","./projects/eav-ui/src/app/app-administration/app-administration.routing.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-content-type/import-content-type-dialog.config.ts","./projects/eav-ui/src/app/metadata/go-to-metadata.ts","./projects/eav-ui/src/app/app-administration/import-export-menu/data-bundles/data-bundles.service.ts","./projects/eav-ui/src/app/app-administration/import-export-menu/data-bundles/data-bundles-query.service.ts","./projects/eav-ui/src/app/shared/constants/dropdown-insert-value.constant.ts","./projects/eav-ui/src/app/app-administration/copilot/go-to-copilot.ts","./projects/eav-ui/src/app/admin-shared/docs-link-helper/docs-link-helper.component.ts","./projects/eav-ui/src/app/app-administration/copilot/copilot-specs.ts"],"sourcesContent":["import { Injectable, Signal } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { webApiFieldsAll } from '../../shared/fields/content-types-fields.service';\r\nimport { Field } from '../../shared/fields/field.model';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { classLog } from '../../shared/logging';\r\nimport { webApiEntityList, webApiEntityRoot } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentItem } from '../models/content-item.model';\r\n\r\nconst logSpecs = {\r\n  getAll: true,\r\n  getAllSig: true,\r\n}\r\n\r\n@Injectable()\r\nexport class ContentItemsService extends HttpServiceBase {\r\n\r\n  log = classLog({ ContentItemsService }, logSpecs);\r\n\r\n  getAll(contentTypeStaticName: string) {\r\n    this.log.fnIf('getAll', { contentTypeStaticName });\r\n    return this.getHttpApiUrl<ContentItem[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  getAllSig(contentTypeStaticName: string, initial: undefined): Signal<ContentItem[]> {\r\n    this.log.fnIf('getAllSig', { contentTypeStaticName, initial });\r\n    return this.getSignal<ContentItem[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType: contentTypeStaticName }\r\n    }, initial);\r\n  }\r\n\r\n  getColumns(contentTypeStaticName: string) {\r\n    return this.getHttpApiUrl<Field[]>(webApiFieldsAll, {\r\n      params: { appId: this.appId, staticName: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  importItem(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiEntityRoot + 'upload'), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","export class AgGridHelper {\r\n  public static cellLink(link: string, body: string, classes?: string): string {\r\n    return `<a class=\"default-link fill-cell ${classes}\" href=\"${link}\">${body}</a>`;\r\n  }\r\n}","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const featureInfoDialog: DialogConfig = {\r\n  name: 'FEATURE_INFO_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'small',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { FeatureInfoDialogComponent } = await import('./feature-info-dialog.component');\r\n    return FeatureInfoDialogComponent;\r\n  }\r\n};","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const appAdministrationDialog: DialogConfig = {\r\n  name: 'APP_ADMINISTRATION_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { AppAdminMainComponent } = await import('./app-admin-main.component');\r\n    return AppAdminMainComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const messageDialog: DialogConfig = {\r\n  name: 'ERROR_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'small',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { MessageComponent } = await import('./message.component');\r\n    return MessageComponent;\r\n  }\r\n};","import { Component, OnDestroy } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialogActions } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { transient } from '../../../../../../core';\r\nimport { FeatureTextInfoComponent } from '../../../features/feature-text-info/feature-text-info.component';\r\nimport { ExportAppService } from '../../services/export-app.service';\r\nimport { ImportAppPartsService } from '../../services/import-app-parts.service';\r\n\r\n@Component({\r\n    selector: 'app-app-state',\r\n    templateUrl: './app-state.component.html',\r\n    styleUrls: ['./app-state.component.scss'],\r\n    imports: [\r\n        MatCardModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        FeatureTextInfoComponent,\r\n        MatDialogActions,\r\n    ]\r\n})\r\nexport class AppStateComponent implements OnDestroy {\r\n\r\n  #importAppPartsSvc = transient(ImportAppPartsService);\r\n  #exportAppSvc = transient(ExportAppService);\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  ngOnDestroy() {\r\n    this.snackBar.dismiss();\r\n  }\r\n\r\n  exportAppXml(withFiles: boolean) {\r\n    this.snackBar.open('Exporting...');\r\n    this.#exportAppSvc.exportForVersionControl({ includeContentGroups: true, resetAppGuid: false, withFiles }).subscribe({\r\n      next: _ => this.snackBar.open('Export completed into the \\'App_Data\\' folder.', null, { duration: 3000 }),\r\n      error: _ => this.snackBar.open('Export failed. Please check console for more information', null, { duration: 3000 }),\r\n    });\r\n  }\r\n\r\n  resetApp(withFiles: boolean) {\r\n    if (!confirm('Are you sure? All changes since last xml export will be lost'))\r\n      return;\r\n    this.snackBar.open('Resetting...');\r\n    this.#importAppPartsSvc.resetApp(withFiles).subscribe({\r\n      next: _ => this.snackBar.open('Reset worked! Since this is a complex operation, please restart the Website to ensure all caches are correct', null, { duration: 30000 }),\r\n      error: _ => this.snackBar.open('Reset failed. Please check console for more details', null, { duration: 3000 }),\r\n    });\r\n  }\r\n}\r\n","<div class=\"outer-container-app\">\r\n  <!-- Title -->\r\n  <h3>App-State Versioning - Basic</h3>\r\n  <!-- Content -->\r\n  <p>\r\n    You can save / restore the app with data and configuration in <code>App_Data/app.xml</code>.\r\n    <br>\r\n    This file can then also be versioned using git to sync with another installation.\r\n  </p>\r\n  <!-- Button -->\r\n  <mat-dialog-actions class=\"eav-dialog-actions\" style=\"height: 73px;\">\r\n    <div class=\"eav-dialog-actions-div\">\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"exportAppXml(false)\">\r\n        <mat-icon class=\"eav-icon\">more_time</mat-icon>\r\n        <span>Save state</span>\r\n      </button>\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"resetApp(false)\">\r\n        <mat-icon class=\"eav-icon\">restore</mat-icon>\r\n        <span>Restore state</span>\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n\r\n  <!-- Advanced, with Assets-->\r\n  <h3>App-State Versioning - Advanced</h3>\r\n  <p>\r\n    In Advanced mode you can sync all the site files (e.g. ADAM) used by this app <em>together with the data</em>.\r\n    <br>\r\n    They will be placed in a folder inside <code>App_Data</code> and allow sync/restore with git or another server.\r\n  </p>\r\n  <app-feature-text-info [featureNameId]=\"'AppSyncWithSiteFiles'\"></app-feature-text-info>\r\n  <mat-dialog-actions class=\"eav-dialog-actions\" style=\"height: 73px;\">\r\n    <div class=\"eav-dialog-actions-div\">\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"exportAppXml(true)\">\r\n        <mat-icon class=\"eav-icon\">more_time</mat-icon>\r\n        <span>Save with Assets</span>\r\n      </button>\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"resetApp(true)\">\r\n        <mat-icon class=\"eav-icon\">restore</mat-icon>\r\n        <span>Restore with Assets</span>\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n\r\n</div>\r\n","import { DialogConfig } from 'projects/eav-ui/src/app/shared/models/dialog-config.model';\r\n\r\nexport const dataBundlesDialog: DialogConfig = {\r\n  name: 'Data Bundles Details',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { DataBundlesDetailComponent } = await import('./data-bundles-detail.component');\r\n    return DataBundlesDetailComponent;\r\n  }\r\n};\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { ContentItem } from 'projects/eav-ui/src/app/content-items/models/content-item.model';\r\nimport { TippyDirective } from 'projects/eav-ui/src/app/shared/directives/tippy.directive';\r\nimport { DataBundlesActionsParams, DataBundlesType } from './data-bundles-actions.models';\r\n\r\n@Component({\r\n    selector: 'app-data-bundle-actions',\r\n    templateUrl: './data-bundles-actions.component.html',\r\n    imports: [\r\n        MatRippleModule,\r\n        MatIconModule,\r\n        MatMenuModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class DataBundleActionsComponent implements ICellRendererAngularComp {\r\n  item: ContentItem;\r\n\r\n  private params: ICellRendererParams & DataBundlesActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & DataBundlesActionsParams): void {\r\n    this.params = params;\r\n    this.item = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  do(verb: DataBundlesType) {\r\n    this.params.do(verb, this.item);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Edit\" (click)=\"do('edit')\">\r\n    <mat-icon>edit</mat-icon>\r\n  </div>\r\n\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Download\" (click)=\"do('download')\">\r\n    <mat-icon>cloud_download</mat-icon>\r\n  </div>\r\n\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Save State\" (click)=\"do('saveState')\">\r\n    <mat-icon>save</mat-icon>\r\n  </div>\r\n\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Restore State\" (click)=\"do('restoreState')\">\r\n    <mat-icon>history</mat-icon>\r\n  </div>\r\n</div>\r\n","<div class=\"outer-container-app\" appDragAndDrop [allowedFileTypes]=\"'xml,json'\" (filesDropped)=\"filesDropped($event)\">\r\n  <!-- Intro -->\r\n  <h2>Data Bundles (BETA)</h2>\r\n  <p>\r\n    Data Bundles are a new feature which allow you to mark parts of your app as a bundle, and then export/import them. This allows you to do\r\n    a partial sync of data and schema between environments.\r\n  </p>\r\n\r\n  <app-feature-text-info [featureNameId]=\"'DataExportImportBundles'\"></app-feature-text-info>\r\n\r\n  <!-- Explanation about other places to export/import -->\r\n  <div class=\"info-container\">\r\n    <div>\r\n      <h3>Bundle Export Configurations</h3>\r\n      <p>\r\n        Bundles must be defined by creating a <strong>Bundle Configuration</strong>, and then assigning Content-Types and Data to that\r\n        configuration.\r\n      </p>\r\n    </div>\r\n    <div>\r\n      <!-- Add new Export Config -->\r\n      <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Add item\" (click)=\"editItem(null)\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"grid-height\" [style]=\"heightStyle()\">\r\n    <div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"dataSourceData()\" [gridOptions]=\"gridOptions\"> </ag-grid-angular>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Import Bundles -->\r\n  <h3>Import Bundles</h3>\r\n  <p>To import a bundle, Note that all data and schema will be overwritten by the imported data in the bundle.</p>\r\n\r\n  <!-- New Import Button -->\r\n  @if (uploading()) {\r\n    <mat-spinner mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n  }\r\n  <!--  Select Button -->\r\n  <div>\r\n    <button class=\"select-btn\" mat-raised-button tippy=\"Open file browser\" [disabled]=\"uploading()\" (click)=\"fileInput.click()\">\r\n      @if (!files().length) {\r\n        <div>Select or drop file</div>\r\n      }\r\n      @for (file of files(); track file) {\r\n        <div>{{ file.name }}</div>\r\n      }\r\n    </button>\r\n    <input #fileInput type=\"file\" multiple (change)=\"filesChanged($event)\" class=\"hide\" />\r\n  </div>\r\n  <!-- Info Div -->\r\n  @if (result()) {\r\n    <div class=\"eav-result-container\">\r\n      @if (result().Success) {\r\n        <div class=\"sxc-message sxc-message-info\">Upload succeeded. See the messages below for more information.</div>\r\n      }\r\n      @if (!result().Success) {\r\n        <div class=\"sxc-message sxc-message-error\">Upload failed. See the messages below for more information.</div>\r\n      }\r\n      @for (message of result().Messages; track message) {\r\n        <div\r\n          class=\"sxc-message\"\r\n          [ngClass]=\"{\r\n            'sxc-message-warning': message.MessageType === FileUploadMessageTypes.Warning,\r\n            'sxc-message-success': message.MessageType === FileUploadMessageTypes.Success,\r\n            'sxc-message-error': message.MessageType === FileUploadMessageTypes.Error,\r\n          }\"\r\n        >\r\n          {{ message.Text }}\r\n        </div>\r\n      }\r\n    </div>\r\n  }\r\n<!-- Upload Button -->\r\n  @if (!result()?.Success) {\r\n    <button\r\n      style=\"margin-top: 16px\"\r\n      mat-button\r\n      class=\"eav-button__with-icon\"\r\n      tippy=\"Import File\"\r\n      [disabled]=\"!files().length || uploading() || !!result()\"\r\n      (click)=\"upload()\"\r\n    >\r\n      <mat-icon class=\"eav-icon\">cloud_upload</mat-icon>\r\n      <span>Upload</span>\r\n    </button>\r\n  }\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { NgClass } from '@angular/common';\r\nimport { Component, computed, effect, signal, untracked } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterModule } from '@angular/router';\r\nimport { transient } from 'projects/core';\r\nimport { EntityLightIdentifier } from 'projects/edit-types/src/EntityLight';\r\nimport { take } from 'rxjs';\r\nimport { ContentItem } from '../../../content-items/models/content-item.model';\r\nimport { ContentItemsService } from '../../../content-items/services/content-items.service';\r\nimport { FeatureTextInfoComponent } from '../../../features/feature-text-info/feature-text-info.component';\r\nimport { AgGridHelper } from '../../../shared/ag-grid/ag-grid-helper';\r\nimport { ColumnDefinitions } from '../../../shared/ag-grid/column-definitions';\r\nimport { FileUploadDialogData, FileUploadMessageTypes, FileUploadResult } from '../../../shared/components/file-upload-dialog';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { DragAndDropDirective } from '../../../shared/directives/drag-and-drop.directive';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { convertFormToUrl } from '../../../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep } from '../../../shared/models/edit-form.model';\r\nimport { SxcGridModule } from '../../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../../shared/routing/dialog-routing.service';\r\nimport { DataBundleActionsComponent } from './data-bundles-actions/data-bundles-actions.component';\r\nimport { DataBundlesActionsParams } from './data-bundles-actions/data-bundles-actions.models';\r\nimport { DataBundlesQueryService } from './data-bundles-query.service';\r\nimport { DataBundlesService } from './data-bundles.service';\r\n\r\ninterface BundleQuery {\r\n  Guid: string;\r\n  Result: ContentItem[] | EntityLightIdentifier[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-data-bundles',\r\n  imports: [\r\n    FeatureTextInfoComponent,\r\n    SxcGridModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterModule,\r\n    DragAndDropDirective,\r\n    NgClass,\r\n    MatProgressSpinnerModule,\r\n    TippyDirective,\r\n  ],\r\n  templateUrl: './data-bundles.component.html',\r\n  styleUrl: './data-bundles.component.scss'\r\n})\r\nexport class DataBundlesComponent {\r\n\r\n  #contentItemsSvc = transient(ContentItemsService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n  #dataBundlesQueryService = transient(DataBundlesQueryService);\r\n  #dataBundlesService = transient(DataBundlesService);\r\n\r\n\r\n  #queryResults = signal<BundleQuery[]>([]);\r\n\r\n  constructor(private snackBar: MatSnackBar) {\r\n\r\n    effect(() => {\r\n      const dataBundles = this.#dataBundles()();\r\n      if (!dataBundles) return;\r\n    \r\n      dataBundles.forEach(dataBundle => {\r\n        if (!dataBundle?.Guid) return;\r\n    \r\n        this.#dataBundlesQueryService.fetchQuery(dataBundle.Guid).subscribe({\r\n          next: (data) => {\r\n            untracked(() => {\r\n              const bundleQuery = {\r\n                Guid: dataBundle.Guid,\r\n                Result: data\r\n              } satisfies BundleQuery;\r\n    \r\n              this.#queryResults.update(results => [...results, bundleQuery]);\r\n            });\r\n          },\r\n          error: (err) => console.error(\"Query error: \", err)\r\n        });\r\n      });\r\n    });\r\n\r\n   }\r\n\r\n  #defaultContentTypeId = \"d7f2e4fa-5306-41bb-a3cd-d9529c838879\";\r\n  FileUploadMessageTypes = FileUploadMessageTypes;\r\n  gridOptions = this.#buildGridOptions();\r\n\r\n  #refresh = signal(0);\r\n  uploading = signal(false);\r\n  files = signal<File[]>([]);\r\n  result = signal<FileUploadResult>(undefined);\r\n\r\n  importData: FileUploadDialogData = {\r\n    title: 'Import Data Bundles into this App',\r\n    allowedFileTypes: 'json',\r\n    upload$: (files: File[]) => this.#dataBundlesService.import(files),\r\n  };\r\n\r\n  #dataBundles = computed(() => {\r\n    this.#refresh(); // is use to trigger a refresh when new data or data are modified\r\n    return this.#contentItemsSvc.getAllSig(this.#defaultContentTypeId,  /* initial: */ null);\r\n  });\r\n\r\n  // Data from QueryData for Table\r\n  dataSourceData = computed(() => {\r\n    const dataBundles = this.#dataBundles()() || [];\r\n    const queryResults = this.#queryResults();\r\n\r\n    const countEntitiesAndContentTypes = (guid: string) => {\r\n      const result = queryResults.find((result: BundleQuery) => result.Guid === guid)?.Result || [];\r\n      const entityCount = result.filter((item: ContentItem) => item.TypeName == \"ContentType\").length;\r\n      const contentTypeCount = result.filter((item: ContentItem) => item.TypeName != \"ContentType\").length;\r\n      return { entityCount, contentTypeCount };\r\n    };\r\n\r\n    const result = dataBundles.map(bundle => {\r\n      const { entityCount, contentTypeCount } = countEntitiesAndContentTypes(bundle.Guid);\r\n      return {\r\n        FileName: bundle.FileName,\r\n        Name: bundle.Name,\r\n        Guid: bundle.Guid,\r\n        Id: bundle.Id,\r\n        Entities: entityCount,\r\n        ContentType: contentTypeCount,\r\n      };\r\n    });\r\n    return result;\r\n  });\r\n\r\n  heightStyle = computed(() => {\r\n    const dataSourceData = this.dataSourceData();\r\n    if(dataSourceData.length === 0) \r\n      return `height: 135px`;\r\n    \r\n    return `height: ${dataSourceData.length * 46 + 90}px`;\r\n  });\r\n\r\n\r\n  ngOnInit() {\r\n    // Reload Data after Close Dialog\r\n    this.#dialogRouter.doOnDialogClosed(() => this.#fetchItems());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.snackBar.dismiss();\r\n  }\r\n\r\n  #fetchItems() {\r\n    this.#refresh.update(value => value + 1)\r\n  }\r\n\r\n  // Files Drop\r\n  filesDropped(files: File[]) {\r\n    const importFile = files[0];\r\n    const ext = importFile.name.substring(importFile.name.lastIndexOf('.') + 1).toLocaleLowerCase();\r\n    switch (ext) {\r\n      case 'xml':\r\n        this.#importDataBundles(files);\r\n        break;\r\n      case 'json':\r\n        this.#importDataBundles(files);\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Import Files Button Logic\r\n  /**\r\n * Handles file selection from an input event.\r\n * Converts the selected file(s) into an array and updates the internal file state.\r\n * @param event - The file input change event.\r\n */\r\n  filesChanged(event: Event): void {\r\n    const fileList = (event.target as HTMLInputElement).files;\r\n    const files = Array.from(fileList);\r\n    this.#setFiles(files);\r\n  }\r\n\r\n  /**\r\n * Initiates the upload process for the selected files.\r\n * Sets the uploading state to true and subscribes to the upload process.\r\n * On success, updates the result and fetches items; on error, resets the state and shows an error message.\r\n */\r\n  upload(): void {\r\n    this.uploading.set(true);\r\n    this.importData.upload$(this.files()).pipe(take(1)).subscribe({\r\n      next: (result) => {\r\n        this.uploading.set(false);\r\n        this.result.set(result);\r\n        this.#fetchItems();\r\n      },\r\n      error: () => {\r\n        this.uploading.set(false);\r\n        this.result.set(undefined);\r\n        this.snackBar.open('Upload failed. Please check console for more information', undefined, { duration: 3000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n * Sets the internal file list, ensuring only a single file is kept\r\n * if the `multiple` flag in `importData` is set to false.\r\n * @param files - The array of files to set.\r\n */\r\n  #setFiles(files: File[]): void {\r\n    if (!this.importData.multiple) {\r\n      files = files.slice(0, 1);\r\n    }\r\n    this.files.set(files);\r\n  }\r\n\r\n  // Import Data Bundles from File Drop\r\n  #importDataBundles(files?: File[]) {\r\n    const dialogData: FileUploadDialogData = { files };\r\n    this.#dialogRouter.navRelative(['import'], { state: dialogData });\r\n  }\r\n\r\n  // Open Edit Dialog\r\n  editItem(item?: ContentItem) {\r\n    const form: EditForm = {\r\n      items: [\r\n        item == null\r\n          ? EditPrep.newFromType(this.#defaultContentTypeId)\r\n          : EditPrep.editId(item.Id)\r\n      ],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRouter.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  // Export Data to Download Json File\r\n  #export(item: ContentItem) {\r\n    this.#dataBundlesService.exportDataBundle(item.Guid);\r\n  }\r\n\r\n  // Save State\r\n  #saveState(item: ContentItem) {\r\n    this.snackBar.open('Save Bundle State...');\r\n    this.#dataBundlesService.saveDataBundles(item.Guid).subscribe({\r\n      next: _ => this.snackBar.open('Export completed into the \\'App_Data\\' folder.', null, { duration: 3000 }),\r\n      error: _ => this.snackBar.open('Export failed. Please check console for more information', null, { duration: 3000 }),\r\n    });\r\n  }\r\n\r\n  // Restore State\r\n  #restoreState(item: ContentItem) {\r\n    this.snackBar.open('Restore Bundle State...');\r\n    this.#dataBundlesService.restoreDataBundles(item.FileName).subscribe({\r\n      next: _ => this.snackBar.open('Reset worked! Since this is a complex operation, please restart the Website to ensure all caches are correct', null, { duration: 30000 }),\r\n      error: _ => this.snackBar.open('Reset failed. Please check console for more details', null, { duration: 3000 }),\r\n    });\r\n  }\r\n\r\n  // Grid Options Config\r\n  #buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.TextWideMin100,\r\n          headerName: 'Name',\r\n          field: 'Name',\r\n          flex: 2,\r\n          cellRenderer: (p: { data: ContentItem }) => AgGridHelper.cellLink('#' + this.#dialogRouter.urlSubRoute(`details/${p.data.Guid}/${p.data.Name}`), p.data.Name),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWideMin100,\r\n          headerName: 'File-Name',\r\n          field: 'FileName',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Number2,\r\n          headerName: 'Entities',\r\n          field: 'Entities',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Number2,\r\n          headerName: 'Content-Type',\r\n          field: 'ContentType',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight3,\r\n          cellRenderer: DataBundleActionsComponent,\r\n          cellRendererParams: {\r\n            do: (verb, item) => {\r\n              switch (verb) {\r\n                case 'edit': this.editItem(item); break;\r\n                case 'download': this.#export(item); break;\r\n                case 'saveState': this.#saveState(item); break;\r\n                case 'restoreState': this.#restoreState(item); break;\r\n              }\r\n            }\r\n          } satisfies DataBundlesActionsParams,\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","<div class=\"outer-container-app\">\r\n  <h3>Export Content and Templates from this App</h3>\r\n  <div class=\"form-height\">\r\n    <p>To export Content-Types, Queries, Views or Data, use the respective tabs.</p>\r\n    <p>\r\n      This is an advanced feature to export parts of the app. The export will create an xml file which can be imported into another site or\r\n      app. To export the entire content of the app (for example when duplicating the entire site), go to the app export. For further help\r\n      visit <a href=\"https://2sxc.org/en/help?tag=export\" target=\"_blank\">2sxc Help</a>.\r\n    </p>\r\n    <div class=\"eav-edit-input\">\r\n\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Scope</mat-label>\r\n        <mat-select [ngModel]=\"exportScope()\" name=\"Scope\" [disabled]=\"lockScope\" (ngModelChange)=\"changeScope($event)\">\r\n          @for (scopeOption of scopeOptions(); track scopeOption) {\r\n            <mat-option [value]=\"scopeOption.value\">\r\n              {{ scopeOption.name }}\r\n            </mat-option>\r\n          }\r\n          <mat-option [value]=\"dropdownInsertValue\">Other...</mat-option>\r\n        </mat-select>\r\n        <button class=\"enable\" mat-icon-button matTextSuffix [tippy]=\"lockScope ? 'Unlock' : 'Lock'\">\r\n          <mat-icon appClickStopPropagation (click)=\"unlockScope()\">\r\n            {{ lockScope ? 'lock' : 'lock_open' }}\r\n          </mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n\r\n      <app-field-hint>\r\n        The scope should almost never be changed -\r\n        <a appClickStopPropagation href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\">see help</a>\r\n      </app-field-hint>\r\n    </div>\r\n    @if (contentInfo()()) {\r\n      <div>\r\n        <ul class=\"eav-content-info__list eav-content-info__base\">\r\n          <p class=\"eav-content-info__title\">Content Types</p>\r\n          @for (contentType of contentInfo()().ContentTypes; track contentType) {\r\n            <li class=\"eav-content-info__item\">\r\n              <div class=\"eav-option-box\">\r\n                <mat-checkbox [(ngModel)]=\"contentType._export\">\r\n                  <span class=\"eav-option-box__text\">{{ contentType.Name }} ({{ contentType.Id }})</span>\r\n                </mat-checkbox>\r\n              </div>\r\n              @if (contentType.Templates.length > 0) {\r\n                <ul class=\"eav-content-info__list\">\r\n                  <p class=\"eav-content-info__subtitle\">Templates</p>\r\n                  @for (template of contentType.Templates; track template) {\r\n                    <li class=\"eav-content-info__item\">\r\n                      <div class=\"eav-option-box\">\r\n                        <mat-checkbox [(ngModel)]=\"template._export\">\r\n                          <span class=\"eav-option-box__text\">{{ template.Name }} ({{ template.Id }})</span>\r\n                        </mat-checkbox>\r\n                      </div>\r\n                    </li>\r\n                  }\r\n                </ul>\r\n              }\r\n              @if (contentType.Entities.length > 0) {\r\n                <ul class=\"eav-content-info__list\">\r\n                  <p class=\"eav-content-info__subtitle\">Entities</p>\r\n                  @for (entity of contentType.Entities; track entity) {\r\n                    <li class=\"eav-content-info__item\">\r\n                      <div class=\"eav-option-box\">\r\n                        <mat-checkbox [(ngModel)]=\"entity._export\">\r\n                          <span class=\"eav-option-box__text\">{{ entity.Title }} ({{ entity.Id }})</span>\r\n                        </mat-checkbox>\r\n                      </div>\r\n                    </li>\r\n                  }\r\n                </ul>\r\n              }\r\n            </li>\r\n          }\r\n        </ul>\r\n        <ul class=\"eav-content-info__list eav-content-info__base\">\r\n          <p class=\"eav-content-info__title\">Templates Without Content Types</p>\r\n          @for (template of contentInfo()().TemplatesWithoutContentTypes; track template) {\r\n            <li class=\"eav-content-info__item\">\r\n              <div class=\"eav-option-box\">\r\n                <mat-checkbox [(ngModel)]=\"template._export\">\r\n                  <span class=\"eav-option-box__text\">{{ template.Name }} ({{ template.Id }})</span>\r\n                </mat-checkbox>\r\n              </div>\r\n            </li>\r\n          }\r\n        </ul>\r\n      </div>\r\n    }\r\n  </div>\r\n\r\n  <mat-dialog-actions class=\"eav-dialog-actions\" style=\"height: 73px\">\r\n    <button\r\n      mat-button\r\n      class=\"eav-button__with-icon\"\r\n      tippy=\"Export selected Parts\"\r\n      [disabled]=\"loading() || isExporting()\"\r\n      (click)=\"exportAppParts()\"\r\n    >\r\n      <mat-icon class=\"eav-icon\">cloud_download</mat-icon>\r\n      <span>Export Parts</span>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { Component, computed, HostBinding, signal, WritableSignal } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogActions, MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { transient } from '../../../../../../core';\r\nimport { FieldHintComponent } from '../../../shared/components/field-hint/field-hint.component';\r\nimport { dropdownInsertValue } from '../../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants, ScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { ClickStopPropagationDirective } from '../../../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { ContentInfoEntity, ContentInfoTemplate } from '../../models/content-info.model';\r\nimport { ContentTypesService } from '../../services/content-types.service';\r\nimport { ExportAppPartsService } from '../../services/export-app-parts.service';\r\n\r\n@Component({\r\n    selector: 'app-export-app-parts',\r\n    templateUrl: './export-app-parts.component.html',\r\n    styleUrls: ['./export-app-parts.component.scss'],\r\n    imports: [\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        FormsModule,\r\n        MatOptionModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatCheckboxModule,\r\n        MatDialogActions,\r\n        FieldHintComponent,\r\n        ClickStopPropagationDirective,\r\n        TippyDirective,\r\n        MatDialogModule,\r\n    ]\r\n})\r\nexport class ExportAppPartsComponent {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  #exportAppPartsSvc = transient(ExportAppPartsService);\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n\r\n  constructor() { }\r\n\r\n  lockScope = true;\r\n  dropdownInsertValue = dropdownInsertValue;\r\n  isExporting = signal(false);\r\n  exportScope = signal(eavConstants.scopes.default.value);\r\n\r\n  contentInfo = computed(() => {\r\n    const exportScope = this.exportScope();\r\n    return this.#exportAppPartsSvc.getContentInfo(exportScope, null)\r\n  });\r\n\r\n  scopeOptions = this.#contentTypesSvc.getScopesSig(null) as WritableSignal<ScopeOption[]>;\r\n\r\n  loading = computed(() => {\r\n    const contentInfo = this.contentInfo();\r\n    const scopeOptions = this.scopeOptions();\r\n    return !contentInfo || !scopeOptions;\r\n  });\r\n\r\n  exportAppParts() {\r\n    this.isExporting.set(true);\r\n    // spm TODO: maybe optimize these functions to not loop content types and entities multiple times for no reason\r\n    // spm TODO: figure out how to capture window loading to disable export button\r\n    const contentTypeIds = this.#selectedContentTypes().map(contentType => contentType.Id);\r\n    const templateIds = this.#selectedTemplates().map(template => template.Id);\r\n    let entityIds = this.#selectedEntities().map(entity => entity.Id);\r\n    entityIds = entityIds.concat(templateIds);\r\n\r\n    this.#exportAppPartsSvc.exportParts(contentTypeIds, entityIds, templateIds);\r\n    this.isExporting.set(false);\r\n\r\n  }\r\n\r\n  changeScope(newScope: string) {\r\n    if (newScope === dropdownInsertValue) {\r\n      newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n      if (!this.scopeOptions().find(option => option.value === newScope)) {\r\n        const newScopeOption: ScopeOption = {\r\n          name: newScope,\r\n          value: newScope,\r\n        };\r\n        const scopeOptionsTemp = this.scopeOptions();\r\n        scopeOptionsTemp.unshift(newScopeOption);\r\n        this.scopeOptions.set(scopeOptionsTemp);\r\n      }\r\n    }\r\n    this.exportScope.set(newScope);\r\n  }\r\n\r\n  unlockScope() {\r\n    this.lockScope = !this.lockScope;\r\n    if (this.lockScope) {\r\n      this.exportScope.set(eavConstants.scopes.default.value);\r\n\r\n    }\r\n  }\r\n\r\n  #selectedContentTypes() {\r\n    return this.contentInfo()().ContentTypes.filter(contentType => contentType._export);\r\n  }\r\n\r\n  #selectedEntities() {\r\n    let entities: ContentInfoEntity[] = [];\r\n    for (const contentType of this.contentInfo()().ContentTypes) {\r\n      entities = entities.concat(contentType.Entities.filter(entity => entity._export));\r\n    }\r\n    return entities;\r\n  }\r\n\r\n  #selectedTemplates() {\r\n    let templates: ContentInfoTemplate[] = [];\r\n    // The ones with...\r\n    for (const contentType of this.contentInfo()().ContentTypes)\r\n      templates = templates.concat(contentType.Templates.filter(template => template._export));\r\n    // ...and without content types\r\n    templates = templates.concat(this.contentInfo()().TemplatesWithoutContentTypes.filter(template => template._export));\r\n    return templates;\r\n  }\r\n}\r\n","import { Component, computed, inject, model } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDialogActions } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { transient } from '../../../../../../core';\r\nimport { DocsLinkHelperComponent } from '../../../admin-shared/docs-link-helper/docs-link-helper.component';\r\nimport { FeatureIconComponent } from '../../../features/feature-icon/feature-icon.component';\r\nimport { FeatureNames } from '../../../features/feature-names';\r\nimport { FeaturesService } from '../../../features/features.service';\r\nimport { ExportAppService } from '../../services/export-app.service';\r\n\r\n@Component({\r\n    selector: 'app-export-app',\r\n    templateUrl: './export-app.component.html',\r\n    styleUrls: ['./export-app.component.scss'],\r\n    imports: [\r\n        MatCheckboxModule,\r\n        FormsModule,\r\n        MatDialogActions,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        FeatureIconComponent,\r\n        DocsLinkHelperComponent,\r\n    ]\r\n})\r\nexport class ExportAppComponent {\r\n\r\n  #exportAppService = transient(ExportAppService);\r\n\r\n  appInfo = this.#exportAppService.getAppInfo(undefined);\r\n\r\n\r\n  protected features = inject(FeaturesService);\r\n  protected expAssetsAdvEnabled = this.features.isEnabled[FeatureNames.AppExportAssetsAdvanced];\r\n\r\n  // Use Signals\r\n  includeContentGroups = model(false);\r\n  resetAppGuid = model(false);\r\n  assetsAdam = model(true);\r\n  assetsAdamDeleted = model(false);\r\n  assetsSite = model(true);\r\n\r\n  downloadUrl = computed(() => this.#exportAppService.exportAppUrl()\r\n    + `&includeContentGroups=${this.includeContentGroups()}&resetAppGuid=${this.resetAppGuid()}`\r\n    + `&assetsAdam=${this.assetsAdam()}&assetsSite=${this.assetsSite()}`\r\n  );\r\n\r\n}\r\n","<div class=\"outer-container-app\">\r\n  <h3>\r\n    Export app\r\n    {{ appInfo() == null ? '(loading details...)' : '' }}\r\n  </h3>\r\n  <div class=\"form-height\">\r\n    <p>\r\n      Pack the entire app to a <em>zip</em> folder which can be imported again to another site. For further help visit\r\n      <a href=\"https://2sxc.org/en/help?tag=export-app\" target=\"_blank\">2sxc Help</a>.\r\n    </p>\r\n\r\n    <p class=\"eav-app-info__title\">Specs</p>\r\n    <ul class=\"eav-app-info__content\">\r\n      <li>Name: {{ appInfo()?.Name }}</li>\r\n      <li>Guid: {{ appInfo()?.Guid }}</li>\r\n      <li>Version: {{ appInfo()?.Version }}</li>\r\n    </ul>\r\n\r\n    <p class=\"eav-app-info__title\">Contains</p>\r\n    <ul class=\"eav-app-info__content\">\r\n      <li>{{ appInfo()?.EntitiesCount }} entities</li>\r\n      <li>{{ appInfo()?.LanguagesCount }} languages</li>\r\n      <li>\r\n        {{ appInfo()?.TemplatesCount }} templates (Token: {{ appInfo()?.HasTokenTemplates }}, Razor: {{ appInfo()?.HasRazorTemplates }})\r\n      </li>\r\n      <li>{{ appInfo()?.TransferableFilesCount }} files to export</li>\r\n      <li>{{ appInfo()?.FilesCount }} files in the app folder totally</li>\r\n    </ul>\r\n\r\n    <p class=\"eav-app-info__title\">Advanced</p>\r\n    <ul class=\"checkboxes\">\r\n      <li>\r\n        <mat-checkbox [(ngModel)]=\"includeContentGroups\" [disabled]=\"resetAppGuid()\">\r\n          <br />\r\n          Include all content-groups to re-import the app in an exact copy of this site.\r\n          <br />\r\n          Only select this option when you copy an entire DNN site.\r\n        </mat-checkbox>\r\n      </li>\r\n      <li>\r\n        <mat-checkbox [(ngModel)]=\"resetAppGuid\" [disabled]=\"includeContentGroups()\">\r\n          <br />\r\n          Reset the app GUID to zero.\r\n          <br />\r\n          You only need this option for special tutorial apps, and usually must not select it.\r\n        </mat-checkbox>\r\n      </li>\r\n      <li>\r\n        <app-feature-icon [featureNameId]=\"'AppExportAssetsAdvanced'\"></app-feature-icon>\r\n        <mat-checkbox [(ngModel)]=\"assetsAdam\" [disabled]=\"!expAssetsAdvEnabled()\">\r\n          <br />\r\n          Include all ADAM assets.\r\n          <br />\r\n          This will include all App files in the <code>/adam</code> folder in your portal.\r\n        </mat-checkbox>\r\n      </li>\r\n      <li>\r\n        <app-feature-icon [featureNameId]=\"'AppExportAssetsAdvanced'\"></app-feature-icon>\r\n        <mat-checkbox [(ngModel)]=\"assetsAdamDeleted\" [disabled]=\"!expAssetsAdvEnabled()\">\r\n          <br />\r\n          Skip ADAM assets of deleted entities.\r\n          <br />\r\n          This will skip all ADAM files which are probably not in use any more, since the owning entities were deleted.\r\n        </mat-checkbox>\r\n      </li>\r\n      <li>\r\n        <app-feature-icon [featureNameId]=\"'AppExportAssetsAdvanced'\"></app-feature-icon>\r\n        <mat-checkbox [(ngModel)]=\"assetsSite\" [disabled]=\"!expAssetsAdvEnabled()\">\r\n          <br />\r\n          Include all Site assets like images which are not in ADAM.\r\n          <br />\r\n          This will include all files used by your entities (eg. in link fields) which are not in you App-ADAM folder.\r\n        </mat-checkbox>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <mat-dialog-actions class=\"eav-dialog-actions\" style=\"height: 73px\">\r\n    <app-docs-link-helper [link]=\"'https://go.2sxc.org/app-export'\" [label]=\"'Export App Info'\" [icon]=\"\"></app-docs-link-helper>\r\n    <a mat-button class=\"eav-button__with-icon\" [href]=\"downloadUrl()\" download>\r\n      <mat-icon class=\"eav-icon\">deployed_code_update</mat-icon>\r\n      <span>Download</span>\r\n    </a>\r\n  </mat-dialog-actions>\r\n</div>\r\n","<div class=\"outer-container-app\" appDragAndDrop [allowedFileTypes]=\"importData.allowedFileTypes\"\r\n  (filesDropped)=\"filesDropped($event)\">\r\n  <div>\r\n    <h3 [innerHtml]=\"importData.title | safeHtml\"></h3>\r\n  </div>\r\n  <div>\r\n    @if (uploading()) {\r\n    <mat-spinner mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n    }\r\n    <p>To import Content-Types, Queries, Views or Data, use the respective tabs.</p>\r\n    <p>Create an xml containing parts of the app, e.g. content and templates. Import parts from such an xml into this\r\n      app.\r\n    </p>\r\n    <p [innerHtml]=\"importData.description | safeHtml\"></p>\r\n    <div>\r\n      <button class=\"select-btn\" mat-raised-button tippy=\"Open file browser\" [disabled]=\"uploading()\"\r\n        (click)=\"fileInput.click()\">\r\n        @if (!files().length) {\r\n        <div>Select or drop file</div>\r\n        }\r\n        @for (file of files(); track file) {\r\n        <div>{{ file.name }}</div>\r\n        }\r\n      </button>\r\n      <input #fileInput type=\"file\" multiple (change)=\"filesChanged($event)\" class=\"hide\" />\r\n    </div>\r\n    @if (result()) {\r\n    <div class=\"eav-result-container\">\r\n      @if (result().Success) {\r\n      <div class=\"sxc-message sxc-message-info\">\r\n        Upload succeeded. See the messages below for more information.\r\n      </div>\r\n      }\r\n      @if (!result().Success) {\r\n      <div class=\"sxc-message sxc-message-error\">\r\n        Upload failed. See the messages below for more information.\r\n      </div>\r\n      }\r\n      @for (message of result().Messages; track message) {\r\n      <div class=\"sxc-message\" [ngClass]=\"{\r\n                'sxc-message-warning': message.MessageType === FileUploadMessageTypes.Warning,\r\n                'sxc-message-success': message.MessageType === FileUploadMessageTypes.Success,\r\n                'sxc-message-error': message.MessageType === FileUploadMessageTypes.Error\r\n                }\">\r\n        {{ message.Text }}\r\n      </div>\r\n      }\r\n    </div>\r\n    }\r\n  </div>\r\n  @if (!result()?.Success) {\r\n  <mat-dialog-actions class=\"eav-dialog-actions\" style=\"height: 73px;\">\r\n    <button mat-button class=\"eav-button__with-icon\" tippy=\"Import File\"\r\n      [disabled]=\"!files().length || uploading() || !!result()\" (click)=\"upload()\">\r\n      <mat-icon class=\"eav-icon\">cloud_upload</mat-icon>\r\n      <span>Upload</span>\r\n    </button>\r\n  </mat-dialog-actions>\r\n  }\r\n</div>\r\n","import { NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, effect, ElementRef, HostBinding, OnDestroy, OnInit, signal, ViewChild } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { BehaviorSubject, catchError, filter, fromEvent, map, of, switchMap, take, tap } from 'rxjs';\r\nimport { transient } from '../../../../../../core';\r\nimport { BaseComponent } from '../../../shared/components/base.component';\r\nimport { FileUploadDialogData, FileUploadMessageTypes, FileUploadResult, UploadTypes } from '../../../shared/components/file-upload-dialog';\r\nimport { DragAndDropDirective } from '../../../shared/directives/drag-and-drop.directive';\r\nimport { CrossWindowMessage, InstallPackage, InstallSettings, SpecsForInstaller } from '../../../shared/models/installer-models';\r\nimport { SafeHtmlPipe } from '../../../shared/pipes/safe-html.pipe';\r\nimport { Context } from '../../../shared/services/context';\r\nimport { AppInstallSettingsService } from '../../../shared/services/getting-started.service';\r\nimport { InstallerService } from '../../../shared/services/installer.service';\r\nimport { ImportAppPartsService } from '../../services/import-app-parts.service';\r\n\r\n@Component({\r\n    selector: 'app-import-app-parts',\r\n    templateUrl: './import-app-parts.component.html',\r\n    styleUrls: ['./import-app-parts.component.scss'],\r\n    imports: [\r\n        NgClass,\r\n        MatDialogModule,\r\n        MatProgressSpinnerModule,\r\n        SafeHtmlPipe,\r\n        DragAndDropDirective,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n    ]\r\n})\r\nexport class ImportAppPartsComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  // Code are copied from file-upload-dialog\r\n\r\n  private importAppPartsService = transient(ImportAppPartsService);\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n  @ViewChild('installerWindow') installerWindow: ElementRef;\r\n\r\n  uploadType = UploadTypes.AppPart;\r\n\r\n  uploading = signal(false);\r\n  // showAppCatalogTemp = signal(false);\r\n  result = signal<FileUploadResult>(undefined);\r\n  files = signal<File[]>([]);\r\n\r\n  FileUploadMessageTypes = FileUploadMessageTypes;\r\n\r\n  UploadTypes = UploadTypes;\r\n  showAppCatalog$ = new BehaviorSubject<boolean>(false);\r\n\r\n  showProgress: boolean = false;\r\n  currentPackage: InstallPackage;\r\n  remoteInstallerUrl = '';\r\n  ready = false;\r\n  settings: InstallSettings;\r\n\r\n  importData: FileUploadDialogData = {\r\n    title: 'Import Content and Templates into this App',\r\n    description: `\r\n    Import content and templates from a content export (zip) or partial export (xml) to this app.\r\n    The entire content of the selected file will be imported.\r\n    If you want to import an entire app, go to the <em>Apps Management</em>.\r\n    For further help visit <a href=\"https://2sxc.org/en/help?tag=import\" target=\"_blank\">2sxc Help</a>.\r\n    `,\r\n    allowedFileTypes: 'xml',\r\n    upload$: (files: File[]) => this.importAppPartsService.importAppParts(files[0]),\r\n  };\r\n\r\n  private installerService = transient(InstallerService);\r\n  private installSettingsService = transient(AppInstallSettingsService);\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private sanitizer: DomSanitizer,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n\r\n    // TODO:: @2dg Check with Daniel\r\n     // TODO:: Old Code\r\n    //  this.subscriptions.add(\r\n    //   this.files$.subscribe(() => {\r\n    //     console.log('files changed');\r\n    //     if (this.result() !== undefined)\r\n    //       this.result.set(undefined);\r\n    //   }),\r\n    // );\r\n    effect(() => {\r\n      this.files();\r\n      if (this.result() != undefined) {\r\n        this.result.set(undefined);\r\n      }\r\n    });\r\n\r\n    // copied from 2sxc-ui app/installer\r\n    this.subscriptions.add(\r\n      this.installSettingsService.settings$.subscribe(settings => {\r\n        this.settings = settings;\r\n        this.remoteInstallerUrl = <string>this.sanitizer.bypassSecurityTrustResourceUrl(settings.remoteUrl);\r\n        this.ready = true;\r\n      })\r\n    );\r\n  }\r\n\r\n  private alreadyProcessing = false;\r\n  // copied from 2sxc-ui app/installer\r\n  // Initial Observable to monitor messages\r\n  private messages$ = fromEvent(window, 'message').pipe(\r\n    // Ensure only one installation is processed.\r\n    filter(() => !this.alreadyProcessing),\r\n    filter((evt: MessageEvent) => evt.origin === \"https://2sxc.org\"),\r\n    // Get data from event.\r\n    map((evt: MessageEvent) => {\r\n      try {\r\n        return JSON.parse(evt.data) as CrossWindowMessage;\r\n      } catch (e) {\r\n        console.error('error procesing message. Message was ' + evt.data, e);\r\n        return void 0;\r\n      }\r\n    }),\r\n    // Check if data is valid and the moduleID matches\r\n    filter(data => data && Number(data.moduleId) === this.context.moduleId),\r\n  );\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.importData.files != null) {\r\n      this.filesDropped(this.importData.files);\r\n    }\r\n    // copied from 2sxc-ui\r\n    this.installSettingsService.loadGettingStarted(false); // Passed as input from 2sxc-ui\r\n\r\n    // copied from 2sxc-ui app/installer\r\n    this.subscriptions.add(this.messages$.pipe(\r\n      // Verify it's for this action\r\n      filter(data => data.action === 'specs'),\r\n      // Send message to iframe\r\n      tap(() => {\r\n        const winFrame = this.installerWindow.nativeElement as HTMLIFrameElement;\r\n        const specsMsg: SpecsForInstaller = {\r\n          action: 'specs',\r\n          data: {\r\n            //currently not used\r\n            installedApps: this.settings.installedApps,//.map(app => ((app as InstalledApp).guid)),\r\n            //currently used to forbid already installed apps\r\n            rules: this.settings.installedApps.map(app => ({ target: 'guid', appGuid: app.guid, mode: 'f', url: '' })),//this.settings.rules,\r\n          },\r\n        };\r\n        const specsJson = JSON.stringify(specsMsg);\r\n        winFrame.contentWindow.postMessage(specsJson, '*');\r\n        console.log('debug: just sent specs message:' + specsJson, specsMsg, winFrame);\r\n      }),\r\n    ).subscribe());\r\n\r\n    // copied from 2sxc-ui app/installer\r\n    // Subscription to listen to 'install' messages\r\n    this.subscriptions.add(this.messages$.pipe(\r\n      filter(data => data.action === 'install'),\r\n      // Get packages from data.\r\n      map(data => Object.values(data.packages)),\r\n      // Show confirm dialog.\r\n      filter(packages => {\r\n        const packagesDisplayNames = packages\r\n          .reduce((t, c) => `${t} - ${c.displayName}\\n`, '');\r\n\r\n        const msg = `Do you want to install these packages?\r\n\r\n${packagesDisplayNames}\r\nThis takes about 10 seconds per package. Don't reload the page while it's installing.`;\r\n        return confirm(msg);\r\n      }),\r\n      // Install the packages one at a time\r\n      switchMap(packages => {\r\n        this.alreadyProcessing = true;\r\n        this.showProgress = true;\r\n        this.changeDetectorRef.detectChanges(); //without this spinner is not shown\r\n        return this.installerService.installPackages(packages, p => this.currentPackage = p);\r\n      }),\r\n      tap(() => {\r\n        this.showProgress = false;\r\n        this.changeDetectorRef.detectChanges(); //without this spinner is not removed (though window reload will remove it anyway) so maybe unnecessary\r\n        alert('Installation complete 👍');\r\n        window.top.location.reload();\r\n      }),\r\n      catchError(error => {\r\n        console.error('Error: ', error);\r\n        this.showProgress = false;\r\n        this.alreadyProcessing = false;\r\n        this.changeDetectorRef.detectChanges(); //without this spinner is not removed\r\n        const errorMsg = `An error occurred: Package ${this.currentPackage.displayName}\r\n\r\n${error.error?.Message ?? error.error?.message ?? ''}\r\n\r\n${error.message}\r\n\r\nPlease try again later or check how to manually install content-templates: https://azing.org/2sxc/r/0O4OymoA`;\r\n        alert(errorMsg);\r\n        return of(error);\r\n      }),\r\n    ).subscribe());\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n\r\n  filesDropped(files: File[]): void {\r\n    this.setFiles(files);\r\n    this.upload();\r\n  }\r\n\r\n  filesChanged(event: Event): void {\r\n    const fileList = (event.target as HTMLInputElement).files;\r\n    const files = Array.from(fileList);\r\n    this.setFiles(files);\r\n  }\r\n\r\n  upload(): void {\r\n    this.uploading.set(true);\r\n    this.subscriptions.add(\r\n      this.importData.upload$(this.files()).pipe(take(1)).subscribe({\r\n        next: (result) => {\r\n          this.uploading.set(false);\r\n          this.result.set(result);\r\n        },\r\n        error: () => {\r\n\r\n          this.uploading.set(false);\r\n          this.result.set(undefined);\r\n          this.snackBar.open('Upload failed. Please check console for more information', undefined, { duration: 3000 });\r\n        },\r\n      }),\r\n    );\r\n  }\r\n\r\n  private setFiles(files: File[]): void {\r\n    if (!this.importData.multiple) {\r\n      files = files.slice(0, 1);\r\n    }\r\n    this.files.set(files);\r\n  }\r\n}\r\n\r\n\r\n\r\n","import { Component } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n    selector: 'app-import-export',\r\n    imports: [\r\n        RouterModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        TippyDirective\r\n    ],\r\n    templateUrl: './import-export.component.html',\r\n    styleUrl: './import-export.component.scss'\r\n})\r\nexport class ImportExportComponent {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  linkToPage(link: string): string {\r\n    const currentPath = this.router.url.replace('/import-export', '');\r\n    return `${currentPath}/${link}`;\r\n  }\r\n\r\n}\r\n","<div class=\"outer-container-app\">\r\n  <!-- Intro -->\r\n  <h2>Import Export</h2>\r\n  <p>2sxc provides you with many import-export features for all kinds of scenarios.</p>\r\n\r\n  <!-- Explanation about other places to export/import -->\r\n  <h3>Export/Import of Data Lists, Schemas, Views and Queries</h3>\r\n  <p>Before you continue here, you should know that some import/export features are directly available in other parts of the admin UI.</p>\r\n  <ol>\r\n    <li>\r\n      <strong>\r\n        <a [routerLink]=\"linkToPage('data/Default')\">Lists of Data</a>\r\n      </strong>\r\n      can be exported / imported as XML (for editing in Excel) in the [data] section.\r\n    </li>\r\n    <li>\r\n      <strong>\r\n        <a [routerLink]=\"linkToPage('data/Default')\">Content-Types</a>\r\n      </strong>\r\n      can be exported and imported as JSON in the [data] section.\r\n    </li>\r\n    <li>\r\n      <strong>\r\n        <a [routerLink]=\"linkToPage('views')\">Views</a>\r\n      </strong>\r\n      can be exported and imported as JSON (with the template files) in the views section.\r\n    </li>\r\n    <li>\r\n      <strong>\r\n        <a [routerLink]=\"linkToPage('queries')\">Queries</a>\r\n      </strong>\r\n      can be exported and imported as JSON in the queries section.\r\n    </li>\r\n  </ol>\r\n  <!-- App Export / Import -->\r\n  <h3>App Export / Import</h3>\r\n  <p>\r\n    Apps are exported as a ZIP file which can be imported into another site as needed. Export happens here, import is done in the\r\n    <em>Manage Apps</em> section.\r\n  </p>\r\n\r\n  <a [routerLink]=\"linkToPage('export-app')\">\r\n    <button mat-button tippy=\"Go to Export App\">\r\n      <mat-icon>deployed_code_update</mat-icon>\r\n      <span>Export App</span>\r\n    </button>\r\n  </a>\r\n\r\n  <!-- Bundles -->\r\n  <h3>Data Bundles (beta)</h3>\r\n  <p>\r\n    Data Bundles are a new feature which allows you to export and import data from one app to another. This is very useful when you want to\r\n    sync <strong>only parts of the data/schema</strong> from one environment to another. Bundles allow you to define what is in the bundle,\r\n    and repeat the sync many times as the system changes.\r\n  </p>\r\n  <a [routerLink]=\"linkToPage('data-bundles')\">\r\n    <button mat-button tippy=\"Go to Data Bundles\">\r\n      <mat-icon>dataset</mat-icon>\r\n      <span>Data Bundles</span>\r\n    </button>\r\n  </a>\r\n\r\n  <!-- Export / Import Parts -->\r\n  <h3>Export / Import Parts (old)</h3>\r\n  <p>\r\n    This feature is the old way of exporting and importing parts of an app. It's still available, but we recommend using the new Data\r\n    Bundles feature instead. The parts allow you to select some data and export it as XML, then re-import it elsewhere.\r\n  </p>\r\n  <div>\r\n    <a [routerLink]=\"linkToPage('export-parts')\">\r\n      <button mat-button tippy=\"Go to Export Parts\">\r\n        <mat-icon>cloud_download</mat-icon>\r\n        <span>Export Parts</span>\r\n      </button>\r\n    </a>\r\n\r\n    <a [routerLink]=\"linkToPage('import-parts')\">\r\n      <button mat-button tippy=\"Go to Import Parts\">\r\n        <mat-icon>cloud_upload</mat-icon>\r\n        <span>Import Parts</span>\r\n      </button>\r\n    </a>\r\n  </div>\r\n\r\n  <!-- App State Git Sync -->\r\n  <h3>App State Backup and Git Sync</h3>\r\n  <p>\r\n    This feature is for advanced users who want to backup the entire App State. The App State contains all the data, schema, views, queries\r\n    and more. This allows you to:\r\n  </p>\r\n  <ol>\r\n    <li>Do backups, and reset your App to what was in that backup.</li>\r\n    <li>When combined with Git, you can also reset the App to previous states.</li>\r\n    <li>When combined with Git, you can also use it to transfer the <strong>complete App State</strong> from one site to another.</li>\r\n  </ol>\r\n  <a [routerLink]=\"linkToPage('app-state')\">\r\n    <button mat-button tippy=\"Go to App-State Git Sync\">\r\n      <mat-icon>sync</mat-icon>\r\n      <span>App State Git Sync</span>\r\n    </button>\r\n  </a>\r\n</div>\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const analyzeSettingsDialog: DialogConfig = {\r\n  name: 'ANALYZE_SETTINGS',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { AnalyzeSettingsComponent } = await import('./analyze-settings.component');\r\n    return AnalyzeSettingsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../../shared/models/dialog-config.model';\r\n\r\nexport const settingsItemDetailsDialog: DialogConfig = {\r\n  name: 'SETTINGS_ITEM_DETAILS',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { SettingsItemDetailsComponent } = await import('./settings-item-details.component');\r\n    return SettingsItemDetailsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const editContentTypeDialog: DialogConfig = {\r\n  name: 'EDIT_CONTENT_TYPE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'small',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { EditContentTypeComponent } = await import('./edit-content-type.component');\r\n    return EditContentTypeComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importDataBundlesDialog: DialogConfig = {\r\n  name: 'IMPORT_DATA_BUNDLES_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportDataBundlesComponent } = await import('./import-data-bundles.component');\r\n    return ImportDataBundlesComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importQueryDialog: DialogConfig = {\r\n  name: 'IMPORT_QUERY_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportQueryComponent } = await import('./import-query.component');\r\n    return ImportQueryComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importViewDialog: DialogConfig = {\r\n  name: 'IMPORT_VIEW_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportViewComponent } = await import('./import-view.component');\r\n    return ImportViewComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const languagePermissionsDialog: DialogConfig = {\r\n  name: 'LANGUAGE_PERMISSIONS',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { LanguagePermissionsComponent } = await import('./language-permissions.component');\r\n    return LanguagePermissionsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const viewsUsageDialog: DialogConfig = {\r\n  name: 'VIEWS_USAGE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ViewsUsageComponent } = await import('./views-usage.component');\r\n    return ViewsUsageComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { GoToDevRest } from '../dev-rest';\r\nimport { EditRoutes, EditRoutesNoHistory } from '../edit/edit.routing';\r\nimport { featureInfoDialog } from '../features/feature-info-dialog/feature-info-dialog.config';\r\nimport { FeatureNames } from '../features/feature-names';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { GoToPermissions } from '../permissions/go-to-permissions';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { appAdministrationDialog } from './app-admin-main/app-admin-main.dialog-config';\r\nimport { messageDialog } from './app-configuration/message/message-dialog.config';\r\nimport { CopilotSpecs } from './copilot/copilot-specs';\r\nimport { GoToCopilot } from './copilot/go-to-copilot';\r\nimport { AppStateComponent } from './import-export-menu/app-state/app-state.component';\r\nimport { dataBundlesDialog } from './import-export-menu/data-bundles/data-bundles-detail/data-bundles-dialog.config';\r\nimport { DataBundlesComponent } from './import-export-menu/data-bundles/data-bundles.component';\r\nimport { ExportAppPartsComponent } from './import-export-menu/export-app-parts/export-app-parts.component';\r\nimport { ExportAppComponent } from './import-export-menu/export-app/export-app.component';\r\nimport { ImportAppPartsComponent } from './import-export-menu/import-app-parts/import-app-parts.component';\r\nimport { ImportExportComponent } from './import-export-menu/import-export/import-export.component';\r\nimport { analyzeSettingsDialog } from './sub-dialogs/analyze-settings/analyze-settings-dialog.config';\r\nimport { settingsItemDetailsDialog } from './sub-dialogs/analyze-settings/settings-item-details/settings-item-details.config';\r\nimport { editContentTypeDialog } from './sub-dialogs/edit-content-type/edit-content-type-dialog.config';\r\nimport { importContentTypeDialog } from './sub-dialogs/import-content-type/import-content-type-dialog.config';\r\nimport { importDataBundlesDialog } from './sub-dialogs/import-data-bundles/import-data-bundles-dialog.config';\r\nimport { importQueryDialog } from './sub-dialogs/import-query/import-query-dialog.config';\r\nimport { importViewDialog } from './sub-dialogs/import-view/import-view-dialog.config';\r\nimport { languagePermissionsDialog } from './sub-dialogs/language-permissions/language-permissions-dialog.config';\r\nimport { viewsUsageDialog } from './sub-dialogs/views-usage/views-usage-dialog.config';\r\n\r\nexport const appAdministrationRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    // experimental 2dm\r\n    // ...DialogEntryComponent.routeFor(appAdministrationDialog),\r\n    component: DialogEntryComponent,\r\n    data: { dialog: appAdministrationDialog },\r\n    children: [\r\n      {\r\n        path: '', redirectTo: 'home', pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'home',\r\n        loadComponent: () => import('./getting-started/getting-started.component').then(mod => mod.GettingStartedComponent),\r\n        data: { title: 'App Home', breadcrumb: 'Info', }\r\n      },\r\n      {\r\n        path: 'data/:scope',\r\n        loadComponent: () => import('./data/data.component').then(mod => mod.DataComponent),\r\n        children: [\r\n          {\r\n            path: 'import',\r\n            // experimental 2dm\r\n            // ...DialogEntryComponent.routeFor(importContentTypeDialog, { title: 'Import Content Type' }),\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importContentTypeDialog, title: 'Import Content Type' },\r\n          },\r\n          {\r\n            path: 'items/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-items/content-items.routing').then(m => m.contentItemsRoutes)\r\n          },\r\n          ...EditRoutes,\r\n          {\r\n            path: 'add',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: editContentTypeDialog, title: 'Add Content Type' },\r\n          },\r\n          {\r\n            path: ':contentTypeStaticName/edit',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: editContentTypeDialog, title: 'Edit Content Type' },\r\n          },\r\n          ...GoToMetadata.getRoutes(),\r\n          GoToDevRest.route,\r\n          {\r\n            path: 'fields/:contentTypeStaticName',\r\n            // May change how things are injected, so be careful when evaluating\r\n            loadChildren: () => import('../content-type-fields/content-type-fields.routing').then(m => m.contentTypeFieldsRoutes),\r\n            data: { title: 'Content Type Fields' },\r\n          },\r\n          {\r\n            path: 'export/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-export/content-export.routing').then(m => m.ContentExportRoutes),\r\n            data: { title: 'Export Items' },\r\n          },\r\n          {\r\n            path: ':contentTypeStaticName/import',\r\n            loadChildren: () => import('../content-import/content-import.routing').then(m => m.contentImportRoutes),\r\n            data: { title: 'Import Items' },\r\n          },\r\n          GoToPermissions.route,\r\n        ],\r\n        data: { title: 'App Data', breadcrumb: \"Data\" },\r\n      },\r\n      {\r\n        path: `data-${GoToCopilot.route}`,\r\n        loadComponent: () => import('./copilot/page/copilot-page.component').then(mod => mod.CopilotPageComponent),\r\n        data: CopilotSpecs.data,\r\n      },\r\n      {\r\n        path: GoToDevRest.routeData,\r\n        loadComponent: () => import('./data-rest-api/data-rest-api.component').then(mod => mod.DataRestApiComponent),\r\n        data: {\r\n          title: 'Rest-Api Data',\r\n          breadcrumb: 'Rest-Api Data'\r\n        },\r\n        children: [\r\n          {\r\n            path: `:${GoToDevRest.paramTypeName}`,\r\n            loadComponent: () => import('../dev-rest/data/data.component').then(mod => mod.DevRestDataComponent),\r\n            data: {\r\n              breadcrumb: 'Rest-Api Data'\r\n            },\r\n            children: [\r\n              GoToPermissions.route,\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: 'queries',\r\n        loadComponent: () => import('./queries/queries.component').then(mod => mod.QueriesComponent),\r\n        children: [\r\n          {\r\n            path: 'import',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importQueryDialog, title: 'Import Query' }\r\n          },\r\n          ...EditRoutesNoHistory,\r\n          ...GoToMetadata.getRoutes(),\r\n          {\r\n            ...GoToPermissions.route,\r\n            data: { title: 'Query Permissions' }\r\n          },\r\n          GoToDevRest.route,\r\n        ],\r\n        data: { title: 'App Queries', breadcrumb: \"Queries\" },\r\n      },\r\n      {\r\n        path: GoToDevRest.routeQuery,\r\n        loadComponent: () => import('./queries-rest-api/queries-rest-api.component').then(mod => mod.QueriesRestApiComponent),\r\n        data: { title: 'Rest-Api Queries', breadcrumb: 'Rest-Api Queries' },\r\n        children: [\r\n          {\r\n            path: `:${GoToDevRest.paramQuery}`,\r\n            loadComponent: () => import('../dev-rest/query/query.component').then(mod => mod.DevRestQueryComponent),\r\n            data: { breadcrumb: 'Rest-Api Queries', },\r\n            children: [\r\n              GoToPermissions.route,\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: 'views',\r\n        loadComponent: () => import('./views/views.component').then(mod => mod.ViewsComponent),\r\n        children: [\r\n          {\r\n            path: 'import',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importViewDialog, title: 'Import View' },\r\n          },\r\n          {\r\n            path: 'usage/:guid',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: viewsUsageDialog }\r\n          },\r\n          ...EditRoutes,\r\n          { ...GoToPermissions.route, data: { title: 'View Permissions' } },\r\n          ...GoToMetadata.getRoutes(),\r\n        ],\r\n        data: { title: 'App Views', breadcrumb: \"Views\" },\r\n      },\r\n      {\r\n        path: `views-${GoToCopilot.route}`,\r\n        loadComponent: () => import('./copilot/page/copilot-page.component').then(mod => mod.CopilotPageComponent),\r\n        data: CopilotSpecs.views,\r\n      },\r\n      {\r\n        path: 'web-api',\r\n        loadComponent: () => import('./web-api/web-api.component').then(mod => mod.WebApiComponent),\r\n        data: { title: 'App WebApi', breadcrumb: \"WebApi\" },\r\n        children: [\r\n          GoToDevRest.route,\r\n        ],\r\n      },\r\n      {\r\n        path: `web-api-${GoToCopilot.route}`,\r\n        loadComponent: () => import('./copilot/page/copilot-page.component').then(mod => mod.CopilotPageComponent),\r\n        data: CopilotSpecs.webApi,\r\n      },\r\n      {\r\n        path: GoToDevRest.routeWebApi,\r\n        loadComponent: () => import('./web-api-rest-api/web-api-rest-api.component').then(mod => mod.WebApiRestApiComponent),\r\n        data: {\r\n          title: 'Rest-Api Web Api',\r\n          breadcrumb: 'Rest-Api Web Api'\r\n        },\r\n        children: [\r\n          {\r\n            path: `:${GoToDevRest.paramApiPath}`,\r\n            loadComponent: () => import('../dev-rest/api/api.component').then(mod => mod.DevRestApiComponent),\r\n            data: {\r\n              breadcrumb: 'Rest-Api Web Api'\r\n            },\r\n            children: [\r\n              GoToPermissions.route,\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: 'app',\r\n        loadComponent: () => import('./app-configuration/app-configuration.component').then(mod => mod.AppConfigurationComponent),\r\n        data: { title: 'Manage App', breadcrumb: \"Manage App\" },\r\n        children: [\r\n          ...GoToMetadata.getRoutes(),\r\n          // Edit App Properties / Settings / Resources\r\n          ...EditRoutes,\r\n          {\r\n            path: 'fields/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-type-fields/content-type-fields.routing').then(m => m.contentTypeFieldsRoutes),\r\n            data: { title: 'Edit Fields of App Settings & Resources' },\r\n          },\r\n          {\r\n            path: 'language-permissions',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: languagePermissionsDialog, title: 'Language Permissions' },\r\n            children: [\r\n              { ...GoToPermissions.route, data: { title: 'Language Permissions' } },\r\n            ],\r\n          },\r\n          {\r\n            path: 'edit-language-permissions',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: featureInfoDialog, featureId: FeatureNames.PermissionsByLanguage },\r\n            children: [\r\n              { ...GoToPermissions.route },\r\n            ],\r\n          },\r\n          { ...GoToPermissions.route, data: { title: 'App Permissions' } },\r\n          {\r\n            path: 'analyze/:part',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: analyzeSettingsDialog, title: 'Analyze Settings / Resources' }, children: [\r\n              {\r\n                path: 'details/:view/:settingsItemKey',\r\n                component: DialogEntryComponent,\r\n                data: { dialog: settingsItemDetailsDialog, title: 'Settings / Resources Item Details' },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            path: 'message/:type',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: messageDialog, i18n: 'An unexpected error happened.', errComponent: 'not found' },\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        path: 'import-export',\r\n        component: ImportExportComponent,\r\n        data: { breadcrumb: 'Import Export' },\r\n      },\r\n      {\r\n        path: 'export-app',\r\n        component: ExportAppComponent,\r\n        data: { breadcrumb: 'Export this entire App' },\r\n      },\r\n      {\r\n        path: 'data-bundles',\r\n        component: DataBundlesComponent,\r\n        data: { breadcrumb: 'Data Bundles' },\r\n        children: [\r\n          ...EditRoutes,\r\n          {\r\n            path: 'details/:guid/:name',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: dataBundlesDialog, title: 'Data Bundles Details' },\r\n          },\r\n          {\r\n            path: 'import',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importDataBundlesDialog, title: 'Import Data Bundle' },\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: 'export-parts',\r\n        component: ExportAppPartsComponent,\r\n        data: { breadcrumb: 'Export parts of this App' },\r\n      },\r\n      {\r\n        path: 'import-parts',\r\n        component: ImportAppPartsComponent,\r\n        data: { breadcrumb: 'Import parts of this App' },\r\n      },\r\n      {\r\n        path: 'app-state',\r\n        component: AppStateComponent,\r\n        data: { breadcrumb: 'App-State Versioning' },\r\n      },\r\n\r\n    ]\r\n  },\r\n];\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importContentTypeDialog: DialogConfig = {\r\n  name: 'IMPORT_CONTENT_TYPE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportContentTypeComponent } = await import('./import-content-type.component');\r\n    return ImportContentTypeComponent;\r\n  }\r\n};\r\n","import { Route } from '@angular/router';\r\nimport { Of } from '../../../../core';\r\nimport { eavConstants, MetadataKeyTypes } from '../shared/constants/eav.constants';\r\n\r\nexport class GoToMetadata {\r\n\r\n  static getRoutes(): Route[] {\r\n    const defaultRoute: Route = {\r\n      path: 'metadata/:targetType/:keyType/:key',\r\n      loadChildren: () => import('./metadata.routing').then(m => m.metadataRoutes),\r\n      data: { title: 'Metadata' },\r\n    };\r\n    const routes: Route[] = [\r\n      defaultRoute,\r\n      {\r\n        ...defaultRoute,\r\n        path: `${defaultRoute.path}/title/:title`,\r\n      },\r\n      {\r\n        ...defaultRoute,\r\n        path: `${defaultRoute.path}/contentType/:contentTypeStaticName`,\r\n      },\r\n      {\r\n        ...defaultRoute,\r\n        path: `${defaultRoute.path}/title/:title/contentType/:contentTypeStaticName`,\r\n      }\r\n    ];\r\n    return routes;\r\n  }\r\n\r\n  static getUrl(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string, dialogTitle?: string, contentTypeStaticName?: string): string {\r\n    let url = `metadata/${targetType}/${keyType}/${key}`;\r\n    if (dialogTitle) {\r\n      url += `/title/${dialogTitle}`;\r\n    }\r\n    if (contentTypeStaticName) {\r\n      url += `/contentType/${contentTypeStaticName}`;\r\n    }\r\n    return url;\r\n  }\r\n\r\n  static getUrlApp(appId: number, dialogTitle?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.app.targetType,\r\n      eavConstants.metadata.app.keyType,\r\n      appId.toString(),\r\n      dialogTitle,\r\n    );\r\n  }\r\n\r\n  static getUrlAttribute(attributeId: number, dialogTitle?: string, contentTypeStaticName?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.attribute.targetType,\r\n      eavConstants.metadata.attribute.keyType,\r\n      attributeId.toString(),\r\n      dialogTitle,\r\n      contentTypeStaticName,\r\n    );\r\n  }\r\n\r\n  static getUrlContentType(staticName: string, dialogTitle?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.contentType.targetType,\r\n      eavConstants.metadata.contentType.keyType,\r\n      staticName,\r\n      dialogTitle,\r\n    );\r\n  }\r\n\r\n  static getUrlEntity(guid: string, dialogTitle?: string, contentTypeStaticName?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.entity.targetType,\r\n      eavConstants.metadata.entity.keyType,\r\n      guid,\r\n      dialogTitle,\r\n      contentTypeStaticName,\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../../shared/services/http-service-base';\r\n\r\nconst webApiDataRootBundleImport = 'admin/data/BundleImport';\r\nconst webApiDataRootJsonBundleExport = 'admin/data/BundleExport';\r\nconst webApiDataRootBundleSave = 'admin/data/BundleSave';\r\nconst webApiDataRootBundleRestore = 'admin/data/BundleRestore';\r\n\r\n@Injectable()\r\nexport class DataBundlesService extends HttpServiceBase {\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiDataRootBundleImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  exportDataBundle(Guid: string) {\r\n    const params = new URLSearchParams({\r\n      appId: this.appId,\r\n      exportConfiguration: Guid,\r\n      indentation: '1',\r\n    });\r\n    const url = `${this.apiUrl(webApiDataRootJsonBundleExport)}?${params.toString()}`;\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  saveDataBundles(Guid: string) {\r\n    return this.http.get(this.apiUrl(webApiDataRootBundleSave), {\r\n      params: {\r\n        appId: this.appId,\r\n        exportConfiguration: Guid,\r\n        indentation: '1',\r\n      },\r\n    });\r\n  }\r\n\r\n  restoreDataBundles(fileName: string) {\r\n    return this.http.get<FileUploadResult>(this.apiUrl(webApiDataRootBundleRestore), {\r\n      params: {\r\n        fileName: fileName,\r\n        zoneId: this.zoneId,\r\n        appId: this.appId,\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { transient } from 'projects/core';\r\nimport { EntityLightIdentifier } from 'projects/edit-types/src/EntityLight';\r\nimport { catchError, map, Observable, throwError } from 'rxjs';\r\nimport { ContentItem } from '../../../content-items/models/content-item.model';\r\nimport { QueryService } from '../../../shared/services/query.service';\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DataBundlesQueryService {\r\n\r\n  #queryService = transient(QueryService);\r\n\r\n  constructor(private translate: TranslateService) { }\r\n\r\n  fetchQuery(guid?: string): Observable<ContentItem[] | EntityLightIdentifier[]> {\r\n    const stream = 'Default';\r\n    const params = `configurationguid=${guid}`;\r\n    \r\n    return this.#queryService.getFromQuery(`System.BundleDetails/${stream}`, params, null).pipe(\r\n      map((data) => {\r\n        return data[stream];\r\n      }),\r\n      catchError((error) => {\r\n        console.error(`${this.translate.instant('Fields.Picker.QueryError:')} - ${error.data}`);\r\n        alert(`${this.translate.instant('Fields.Picker.QueryError:')} - ${error.data}`);\r\n        return throwError(() => error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","export const dropdownInsertValue = 'DROPDOWN_INSERT_VALUE' as const;\r\n","export class GoToCopilot {\r\n  static route = 'copilot';\r\n\r\n  static routeDefinition(part: string) {\r\n    return {\r\n      name: 'Copilot',\r\n      icon: 'support_agent',\r\n      svgIcon: false,\r\n      path: `${part}-${GoToCopilot.route}`\r\n    };\r\n  }\r\n}","import { Component, input } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n    selector: 'app-docs-link-helper',\r\n    imports: [\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        TippyDirective,\r\n    ],\r\n    template: `\r\n  <a mat-button class=\"eav-button__with-icon\" href=\"{{ link() }}\" target=\"_blank\" tippy=\"online documentation\">\r\n    <mat-icon mat-icon class=\"eav-icon\">{{ icon() ?? 'menu_book' }}</mat-icon>\r\n    <span>{{ label() }}</span>\r\n  </a>\r\n`\r\n})\r\nexport class DocsLinkHelperComponent {\r\n  link = input<string>();   \r\n  label = input<string>();\r\n  icon = input<string>();\r\n}\r\n","export interface CopilotSpec {\r\n  /** Title in the menu */\r\n  title: string;\r\n  /** Title in the breadcrumb */\r\n  breadcrumb: string;\r\n\r\n  heading: string,\r\n  intro: string,\r\n  teaser: string;\r\n  outputType: string;\r\n}\r\n\r\nconst intro = `The Copilot provides tools to help you create code.\r\n    It is still in new, so please use it carefully and report any issues.`;\r\n\r\nexport const CopilotSpecs: { [key: string ]: CopilotSpec } = {\r\n  'data': {\r\n    title: 'Data Copilot',\r\n    breadcrumb: '2sxc Data Copilot',\r\n\r\n    heading: '2sxc Data Copilot',\r\n    intro,\r\n    teaser: 'Autogenerate content types',\r\n\r\n    outputType: 'DataModel',\r\n  },\r\n  'views': {\r\n    title: 'Views Copilot',\r\n    breadcrumb: '2sxc View Copilot',\r\n\r\n    heading: '2sxc View Copilot',\r\n    intro,\r\n    teaser: 'Autogenerate Razor Views',\r\n\r\n    outputType: 'RazorView',\r\n  },\r\n  'webApi': {\r\n    title: 'WebApi Copilot',\r\n    breadcrumb: '2sxc WebApi Copilot',\r\n\r\n    heading: '2sxc WebApi Copilot',\r\n    intro,\r\n    teaser: 'Autogenerate WebApi Controllers',\r\n\r\n    outputType: 'WebApi',\r\n  }\r\n};\r\n"],"x_google_ignoreList":[]}