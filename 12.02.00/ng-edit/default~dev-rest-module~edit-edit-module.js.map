{"version":3,"sources":["./node_modules/@angular/material/__ivy_ngcc__/fesm2015/list.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/divider.js"],"names":["_c0","_c1","_c2","_c3","_c4","MatListOption_mat_pseudo_checkbox_2_Template","rf","ctx","ɵngcc0","ctx_r0","selected","disabled","_c5","_c6","MatListBase","_MatListMixinBase","mixinDisabled","mixinDisableRipple","MatListItemBase","_MatListItemMixinBase","MAT_LIST","InjectionToken","MAT_NAV_LIST","MatNavList","arguments","_stateChanges","Subject","next","complete","ɵfac","MatNavList_Factory","t","ɵMatNavList_BaseFactory","ɵcmp","type","selectors","hostAttrs","inputs","disableRipple","exportAs","features","provide","useExisting","ngContentSelectors","decls","vars","template","MatNavList_Template","styles","encapsulation","changeDetection","ngDevMode","Component","args","selector","host","ViewEncapsulation","None","ChangeDetectionStrategy","OnPush","providers","MatList","_elementRef","_getListType","nativeElement","classList","add","nodeName","toLowerCase","MatList_Factory","MatList_Template","ctorParameters","ElementRef","MatListAvatarCssMatStyler","MatListAvatarCssMatStyler_Factory","ɵdir","Directive","MatListIconCssMatStyler","MatListIconCssMatStyler_Factory","MatListSubheaderCssMatStyler","MatListSubheaderCssMatStyler_Factory","MatListItem","_element","_changeDetectorRef","navList","list","_isInteractiveList","_destroyed","_disabled","_list","element","_getHostElement","hasAttribute","setAttribute","pipe","takeUntil","subscribe","markForCheck","value","coerceBooleanProperty","setLines","_lines","MatListItem_Factory","contentQueries","MatListItem_ContentQueries","dirIndex","MatLine","_t","_avatar","first","_icon","hostVars","hostBindings","MatListItem_HostBindings","consts","MatListItem_Template","_isRippleDisabled","directives","ɵngcc1","ChangeDetectorRef","decorators","Optional","Inject","propDecorators","ContentChildren","descendants","ContentChild","Input","MatSelectionListBase","_MatSelectionListMixinBase","MatListOptionBase","_MatListOptionMixinBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","MatSelectionList","multi","MatSelectionListChange","source","option","options","MatListOption","_changeDetector","selectionList","_selected","_hasFocus","checkboxPosition","_inputsInitialized","_color","color","newValue","_value","compareWith","selectedOptions","isSelected","_setSelected","multiple","_reportValueChange","some","wasSelected","Promise","resolve","then","hadFocus","newActiveItem","_removeOptionFromList","focus","_text","textContent","toggle","_emitChangeEvent","_setFocusedOption","_onTouched","select","deselect","MatListOption_Factory","MatListOption_ContentQueries","viewQuery","MatListOption_Query","MatListOption_HostBindings","MatListOption_focus_HostBindingHandler","_handleFocus","MatListOption_blur_HostBindingHandler","_handleBlur","MatListOption_click_HostBindingHandler","_handleClick","MatListOption_Template","ɵngcc2","ViewChild","tabIndex","_focusMonitor","_multiple","_contentInitialized","selectionChange","EventEmitter","a1","a2","SelectionModel","_tabIndex","_onChange","_","_markOptionsForCheck","Error","_a","_keyManager","FocusKeyManager","withWrap","withTypeAhead","withHomeAndEnd","skipPredicate","withAllowedModifierKeys","_setOptionsFromValues","tabOut","_allowFocusEscape","changes","startWith","_updateTabIndex","changed","event","added","item","removed","monitor","origin","activeIndex","activeItemIndex","setFirstItemActive","setActiveItem","disableRippleChanges","colorChanges","firstChange","stopMonitoring","_isDestroyed","_setAllOptionsSelected","updateActiveItem","optionIndex","_getOptionIndex","length","Math","min","activeItem","keyCode","manager","previousFocusIndex","hasModifier","hasModifierKey","SPACE","ENTER","isTyping","_toggleFocusedOption","preventDefault","A","shouldSelect","onKeydown","UP_ARROW","DOWN_ARROW","shiftKey","_getSelectedOptionValues","emit","values","isDisabled","fn","forEach","correspondingOption","find","filter","map","focusedIndex","_isValidIndex","focusedOption","toArray","skipDisabled","isUserInput","changedOptions","push","index","indexOf","_markForCheck","setTimeout","MatSelectionList_Factory","ɵngcc3","MatSelectionList_ContentQueries","MatSelectionList_HostBindings","MatSelectionList_keydown_HostBindingHandler","$event","_keydown","toString","outputs","MatSelectionList_Template","String","Attribute","FocusMonitor","Output","MatListModule","MatListModule_Factory","ɵmod","ɵinj","imports","MatLineModule","MatRippleModule","MatCommonModule","MatPseudoCheckboxModule","CommonModule","MatDividerModule","ngJitMode","declarations","exports","NgModule","MatDivider","_vertical","_inset","MatDivider_Factory","MatDivider_HostBindings","vertical","inset","MatDivider_Template","MatDividerModule_Factory"],"mappings":"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","file":"default~dev-rest-module~edit-edit-module.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Directive, ChangeDetectorRef, Optional, Inject, ContentChildren, ContentChild, Input, forwardRef, ViewChild, EventEmitter, Attribute, Output, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager, FocusMonitor } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatList.\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\n\nconst _c0 = [\"*\"];\nconst _c1 = \".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\";\nconst _c2 = [[[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c4 = [\"text\"];\nfunction MatListOption_mat_pseudo_checkbox_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 5);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c5 = [\"*\", [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]]];\nconst _c6 = [\"*\", \"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"];\nclass MatListBase {\n}\nconst _MatListMixinBase = mixinDisabled(mixinDisableRipple(MatListBase));\n// Boilerplate for applying mixins to MatListItem.\n/** @docs-private */\nclass MatListItemBase {\n}\nconst _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\n/**\n * Injection token that can be used to inject instances of `MatList`. It serves as\n * alternative token to the actual `MatList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_LIST = new InjectionToken('MatList');\n/**\n * Injection token that can be used to inject instances of `MatNavList`. It serves as\n * alternative token to the actual `MatNavList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_NAV_LIST = new InjectionToken('MatNavList');\nclass MatNavList extends _MatListMixinBase {\n    constructor() {\n        super(...arguments);\n        /** Emits when the state of the list changes. */\n        this._stateChanges = new Subject();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ɵfac = function MatNavList_Factory(t) { return ɵMatNavList_BaseFactory(t || MatNavList); };\nMatNavList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatNavList, selectors: [[\"mat-nav-list\"]], hostAttrs: [\"role\", \"navigation\", 1, \"mat-nav-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matNavList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_NAV_LIST, useExisting: MatNavList }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatNavList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [_c1], encapsulation: 2, changeDetection: 0 });\nconst ɵMatNavList_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatNavList);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNavList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-nav-list',\n                exportAs: 'matNavList',\n                host: {\n                    'role': 'navigation',\n                    'class': 'mat-nav-list mat-list-base'\n                },\n                template: \"<ng-content></ng-content>\\n\\n\",\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{ provide: MAT_NAV_LIST, useExisting: MatNavList }],\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], null, null); })();\nclass MatList extends _MatListMixinBase {\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /** Emits when the state of the list changes. */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    _getListType() {\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ɵfac = function MatList_Factory(t) { return new (t || MatList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatList, selectors: [[\"mat-list\"], [\"mat-action-list\"]], hostAttrs: [1, \"mat-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_LIST, useExisting: MatList }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [_c1], encapsulation: 2, changeDetection: 0 });\nMatList.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list, mat-action-list',\n                exportAs: 'matList',\n                template: \"<ng-content></ng-content>\\n\\n\",\n                host: {\n                    'class': 'mat-list mat-list-base'\n                },\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{ provide: MAT_LIST, useExisting: MatList }],\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ɵfac = function MatListAvatarCssMatStyler_Factory(t) { return new (t || MatListAvatarCssMatStyler)(); };\nMatListAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListAvatarCssMatStyler, selectors: [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"matListAvatar\", \"\"]], hostAttrs: [1, \"mat-list-avatar\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-avatar], [matListAvatar]',\n                host: { 'class': 'mat-list-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ɵfac = function MatListIconCssMatStyler_Factory(t) { return new (t || MatListIconCssMatStyler)(); };\nMatListIconCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListIconCssMatStyler, selectors: [[\"\", \"mat-list-icon\", \"\"], [\"\", \"matListIcon\", \"\"]], hostAttrs: [1, \"mat-list-icon\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListIconCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-icon], [matListIcon]',\n                host: { 'class': 'mat-list-icon' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = function MatListSubheaderCssMatStyler_Factory(t) { return new (t || MatListSubheaderCssMatStyler)(); };\nMatListSubheaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListSubheaderCssMatStyler, selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]], hostAttrs: [1, \"mat-subheader\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListSubheaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-subheader], [matSubheader]',\n                host: { 'class': 'mat-subheader' }\n            }]\n    }], null, null); })();\n/** An item within a Material Design list. */\nclass MatListItem extends _MatListItemMixinBase {\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attribute is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                _changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Whether the option is disabled. */\n    get disabled() { return this._disabled || !!(this._list && this._list.disabled); }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n    _isRippleDisabled() {\n        return !this._isInteractiveList || this.disableRipple ||\n            !!(this._list && this._list.disableRipple);\n    }\n    /** Retrieves the DOM element of the component host. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ɵfac = function MatListItem_Factory(t) { return new (t || MatListItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_NAV_LIST, 8), ɵngcc0.ɵɵdirectiveInject(MAT_LIST, 8)); };\nMatListItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListItem, selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]], contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, hostAttrs: [1, \"mat-list-item\", \"mat-focus-indicator\"], hostVars: 6, hostBindings: function MatListItem_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-avatar\", ctx._avatar || ctx._icon)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n    } }, inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matListItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c3, decls: 6, vars: 2, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-list-text\"]], template: function MatListItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(5, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n    } }, directives: [ɵngcc1.MatRipple], encapsulation: 2, changeDetection: 0 });\nMatListItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatNavList, decorators: [{ type: Optional }, { type: Inject, args: [MAT_NAV_LIST,] }] },\n    { type: MatList, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LIST,] }] }\n];\nMatListItem.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListItem, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                exportAs: 'matListItem',\n                host: {\n                    'class': 'mat-list-item mat-focus-indicator',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                    '[class.mat-list-item-avatar]': '_avatar || _icon',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon'\n                },\n                inputs: ['disableRipple'],\n                template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_NAV_LIST]\n            }] }, { type: MatList, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LIST]\n            }] }]; }, { disabled: [{\n            type: Input\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSelectionListBase {\n}\nconst _MatSelectionListMixinBase = mixinDisableRipple(MatSelectionListBase);\nclass MatListOptionBase {\n}\nconst _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/** @docs-private */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSelectionList),\n    multi: true\n};\n/** Change event that is being fired whenever the selected state of an option changes. */\nclass MatSelectionListChange {\n    constructor(\n    /** Reference to the selection list that emitted the event. */\n    source, \n    /**\n     * Reference to the option that has been changed.\n     * @deprecated Use `options` instead, because some events may change more than one option.\n     * @breaking-change 12.0.0\n     */\n    option, \n    /** Reference to the options that have been changed. */\n    options) {\n        this.source = source;\n        this.option = option;\n        this.options = options;\n    }\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionMixinBase {\n    constructor(_element, _changeDetector, \n    /** @docs-private */\n    selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /** Whether the label should appear before or after the checkbox. Defaults to 'after' */\n        this.checkboxPosition = 'after';\n        /**\n         * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n         * in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /** Theme color of the list option. This sets the color of the checkbox. */\n    get color() { return this._color || this.selectionList.color; }\n    set color(newValue) { this._color = newValue; }\n    /** Value of the option */\n    get value() { return this._value; }\n    set value(newValue) {\n        if (this.selected &&\n            !this.selectionList.compareWith(newValue, this.value) &&\n            this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /** Whether the option is disabled. */\n    get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** Whether the option is selected. */\n    get selected() { return this.selectionList.selectedOptions.isSelected(this); }\n    set selected(value) {\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            if (isSelected || this.selectionList.multiple) {\n                this.selectionList._reportValueChange();\n            }\n        }\n    }\n    ngOnInit() {\n        const list = this.selectionList;\n        if (list._value && list._value.some(value => list.compareWith(value, this._value))) {\n            this._setSelected(true);\n        }\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then(() => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        });\n        this._inputsInitialized = true;\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => {\n                this.selected = false;\n            });\n        }\n        const hadFocus = this._hasFocus;\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /** Toggles the selection state of the option. */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /** Allows for programmatic focusing of the option. */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * @docs-private\n     */\n    getLabel() {\n        return this._text ? (this._text.nativeElement.textContent || '') : '';\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    _handleClick() {\n        if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent([this]);\n        }\n    }\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /** Retrieves the DOM element of the component host. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /** Sets the selected state of the option. Returns whether the value has changed. */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ɵfac = function MatListOption_Factory(t) { return new (t || MatListOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatSelectionList))); };\nMatListOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListOption, selectors: [[\"mat-list-option\"]], contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, viewQuery: function MatListOption_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c4, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._text = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-list-item\", \"mat-list-option\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatListOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatListOption_focus_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatListOption_blur_HostBindingHandler() { return ctx._handleBlur(); })(\"click\", function MatListOption_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled)(\"tabindex\", -1);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon)(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color !== \"primary\" && ctx.color !== \"warn\")(\"mat-warn\", ctx.color === \"warn\")(\"mat-list-single-selected-option\", ctx.selected && !ctx.selectionList.multiple);\n    } }, inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", selected: \"selected\", disabled: \"disabled\" }, exportAs: [\"matListOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c6, decls: 7, vars: 5, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-list-text\"], [\"text\", \"\"], [3, \"state\", \"disabled\"]], template: function MatListOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatListOption_mat_pseudo_checkbox_2_Template, 1, 2, \"mat-pseudo-checkbox\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-content-reverse\", ctx.checkboxPosition == \"after\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selectionList.multiple);\n    } }, directives: [ɵngcc1.MatRipple, ɵngcc2.NgIf, ɵngcc1.MatPseudoCheckbox], encapsulation: 2, changeDetection: 0 });\nMatListOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSelectionList, decorators: [{ type: Inject, args: [forwardRef(() => MatSelectionList),] }] }\n];\nMatListOption.propDecorators = {\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _text: [{ type: ViewChild, args: ['text',] }],\n    checkboxPosition: [{ type: Input }],\n    color: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    selected: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-option',\n                exportAs: 'matListOption',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'option',\n                    'class': 'mat-list-item mat-list-option mat-focus-indicator',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '(click)': '_handleClick()',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                    // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                    // its theme.\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    // Even though accent is the default, we need to set this class anyway, because the  list might\n                    // be placed inside a parent that has one of the other colors with a higher specificity.\n                    '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n                    '[attr.aria-selected]': 'selected',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabindex]': '-1'\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatSelectionList)]\n            }] }]; }, { checkboxPosition: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _text: [{\n            type: ViewChild,\n            args: ['text']\n        }] }); })();\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListMixinBase {\n    constructor(_element, \n    // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n    tabIndex, _changeDetector, \n    // @breaking-change 11.0.0 `_focusMonitor` parameter to become required.\n    _focusMonitor) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._multiple = true;\n        this._contentInitialized = false;\n        /** Emits a change event whenever the selected state of an option changes. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         * @breaking-change 11.0.0 Remove `tabIndex` input.\n         */\n        this.tabIndex = 0;\n        /** Theme color of the selection list. This sets the checkbox color for all list options. */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (a1, a2) => a1 === a2;\n        this._disabled = false;\n        /** The currently selected options. */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /** The tabindex of the selection list. */\n        this._tabIndex = -1;\n        /** View to model callback that should be called whenever the selected options change. */\n        this._onChange = (_) => { };\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /** View to model callback that should be called if the list or its options lost focus. */\n        this._onTouched = () => { };\n    }\n    /** Whether the selection list is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /** Whether selection is limited to one or multiple items (default multiple). */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if (this._contentInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    ngAfterContentInit() {\n        var _a;\n        this._contentInitialized = true;\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate(() => false)\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // If the user attempts to tab out of the selection list, allow focus to escape.\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._allowFocusEscape();\n        });\n        // When the number of options change, update the tabindex of the selection list.\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this._updateTabIndex();\n        });\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe(event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        });\n        // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n        (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.monitor(this._element).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n            if (origin === 'keyboard' || origin === 'program') {\n                const activeIndex = this._keyManager.activeItemIndex;\n                if (!activeIndex || activeIndex === -1) {\n                    // If there is no active index, set focus to the first option.\n                    this._keyManager.setFirstItemActive();\n                }\n                else {\n                    // Otherwise, set focus to the active option.\n                    this._keyManager.setActiveItem(activeIndex);\n                }\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        const disableRippleChanges = changes['disableRipple'];\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    ngOnDestroy() {\n        var _a;\n        // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n        (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.stopMonitoring(this._element);\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /** Focuses the selection list. */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /** Selects all of the options. */\n    selectAll() {\n        this._setAllOptionsSelected(true);\n    }\n    /** Deselects all of the options. */\n    deselectAll() {\n        this._setAllOptionsSelected(false);\n    }\n    /** Sets the focused option of the selection-list. */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @returns Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /** Passes relevant key presses to our key manager. */\n    _keydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        const previousFocusIndex = manager.activeItemIndex;\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier && !manager.isTyping()) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            default:\n                // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n                if (keyCode === A && this.multiple && hasModifierKey(event, 'ctrlKey') &&\n                    !manager.isTyping()) {\n                    const shouldSelect = this.options.some(option => !option.disabled && !option.selected);\n                    this._setAllOptionsSelected(shouldSelect, true, true);\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n        }\n        if (this.multiple && (keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /** Reports a value change to the ControlValueAccessor */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /** Emits a change event if the selected state of an option changed. */\n    _emitChangeEvent(options) {\n        this.selectionChange.emit(new MatSelectionListChange(this, options[0], options));\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Sets the selected options based on the specified values. */\n    _setOptionsFromValues(values) {\n        this.options.forEach(option => option._setSelected(false));\n        values.forEach(value => {\n            const correspondingOption = this.options.find(option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            });\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        });\n    }\n    /** Returns the values of the selected options. */\n    _getSelectedOptionValues() {\n        return this.options.filter(option => option.selected).map(option => option.value);\n    }\n    /** Toggles the state of the currently focused option if enabled. */\n    _toggleFocusedOption() {\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent([focusedOption]);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled, isUserInput) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        const changedOptions = [];\n        this.options.forEach(option => {\n            if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n                changedOptions.push(option);\n            }\n        });\n        if (changedOptions.length) {\n            this._reportValueChange();\n            if (isUserInput) {\n                this._emitChangeEvent(changedOptions);\n            }\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /** Returns the index of the specified list option. */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /** Marks all the options to be checked in the next change detection run. */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach(option => option._markForCheck());\n        }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        this._tabIndex = -1;\n        setTimeout(() => {\n            this._tabIndex = 0;\n            this._changeDetector.markForCheck();\n        });\n    }\n    /** Updates the tabindex based upon if the selection list is empty. */\n    _updateTabIndex() {\n        this._tabIndex = (this.options.length === 0) ? -1 : 0;\n    }\n}\nMatSelectionList.ɵfac = function MatSelectionList_Factory(t) { return new (t || MatSelectionList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor)); };\nMatSelectionList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelectionList, selectors: [[\"mat-selection-list\"]], contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListOption, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-selection-list\", \"mat-list-base\"], hostVars: 3, hostBindings: function MatSelectionList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-multiselectable\", ctx.multiple)(\"aria-disabled\", ctx.disabled.toString())(\"tabindex\", ctx._tabIndex);\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\", multiple: \"multiple\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"matSelectionList\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSelectionList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [_c1], encapsulation: 2, changeDetection: 0 });\nMatSelectionList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor }\n];\nMatSelectionList.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatListOption, { descendants: true },] }],\n    selectionChange: [{ type: Output }],\n    tabIndex: [{ type: Input }],\n    color: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    disabled: [{ type: Input }],\n    multiple: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelectionList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-selection-list',\n                exportAs: 'matSelectionList',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'listbox',\n                    'class': 'mat-selection-list mat-list-base',\n                    '(keydown)': '_keydown($event)',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.tabindex]': '_tabIndex'\n                },\n                template: '<ng-content></ng-content>',\n                encapsulation: ViewEncapsulation.None,\n                providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc3.FocusMonitor }]; }, { selectionChange: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], options: [{\n            type: ContentChildren,\n            args: [MatListOption, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatListModule {\n}\nMatListModule.ɵfac = function MatListModule_Factory(t) { return new (t || MatListModule)(); };\nMatListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatListModule });\nMatListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule], MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatListModule, { declarations: function () { return [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatSelectionList, MatListOption]; }, imports: function () { return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule]; }, exports: function () { return [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatLineModule,\n        MatCommonModule, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatPseudoCheckboxModule, MatSelectionList, MatListOption, MatDividerModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                exports: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatPseudoCheckboxModule,\n                    MatSelectionList,\n                    MatListOption,\n                    MatDividerModule\n                ],\n                declarations: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatSelectionList,\n                    MatListOption\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LIST, MAT_NAV_LIST, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };\n\n//# sourceMappingURL=list.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /** Whether the divider is vertically aligned. */\n    get vertical() { return this._vertical; }\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n    /** Whether the divider is an inset divider. */\n    get inset() { return this._inset; }\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\n}\nMatDivider.ɵfac = function MatDivider_Factory(t) { return new (t || MatDivider)(); };\nMatDivider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDivider, selectors: [[\"mat-divider\"]], hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"], hostVars: 7, hostBindings: function MatDivider_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n    } }, inputs: { vertical: \"vertical\", inset: \"inset\" }, decls: 0, vars: 0, template: function MatDivider_Template(rf, ctx) { }, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDivider.propDecorators = {\n    vertical: [{ type: Input }],\n    inset: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-divider',\n                host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                },\n                template: '',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n            }]\n    }], function () { return []; }, { vertical: [{\n            type: Input\n        }], inset: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵfac = function MatDividerModule_Factory(t) { return new (t || MatDividerModule)(); };\nMatDividerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDividerModule });\nMatDividerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, { declarations: function () { return [MatDivider]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatDivider, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n\n//# sourceMappingURL=divider.js.map"],"sourceRoot":"webpack:///"}