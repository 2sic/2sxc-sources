{"version":3,"sources":["./node_modules/@angular/material/__ivy_ngcc__/fesm2015/divider.js"],"names":["MatDivider","_vertical","_inset","value","coerceBooleanProperty","ɵfac","MatDivider_Factory","t","ɵcmp","ɵngcc0","type","selectors","hostAttrs","hostVars","hostBindings","MatDivider_HostBindings","rf","ctx","vertical","inset","inputs","decls","vars","template","MatDivider_Template","styles","encapsulation","changeDetection","propDecorators","Input","ngDevMode","Component","args","selector","host","ViewEncapsulation","None","ChangeDetectionStrategy","OnPush","MatDividerModule","MatDividerModule_Factory","ɵmod","ɵinj","imports","MatCommonModule","ngJitMode","declarations","exports","NgModule"],"mappings":"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","file":"item-history-item-history-module.js","sourcesContent":["import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /** Whether the divider is vertically aligned. */\n    get vertical() { return this._vertical; }\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n    /** Whether the divider is an inset divider. */\n    get inset() { return this._inset; }\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\n}\nMatDivider.ɵfac = function MatDivider_Factory(t) { return new (t || MatDivider)(); };\nMatDivider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDivider, selectors: [[\"mat-divider\"]], hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"], hostVars: 7, hostBindings: function MatDivider_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n    } }, inputs: { vertical: \"vertical\", inset: \"inset\" }, decls: 0, vars: 0, template: function MatDivider_Template(rf, ctx) { }, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDivider.propDecorators = {\n    vertical: [{ type: Input }],\n    inset: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-divider',\n                host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                },\n                template: '',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n            }]\n    }], function () { return []; }, { vertical: [{\n            type: Input\n        }], inset: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵfac = function MatDividerModule_Factory(t) { return new (t || MatDividerModule)(); };\nMatDividerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDividerModule });\nMatDividerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, { declarations: function () { return [MatDivider]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatDivider, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n\n//# sourceMappingURL=divider.js.map"],"sourceRoot":"webpack:///"}