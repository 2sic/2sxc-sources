{"version":3,"sources":["./node_modules/@angular/material/__ivy_ngcc__/fesm2015/slide-toggle.js"],"names":["_c0","_c1","_c2","_c3","enterDuration","_c4","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","InjectionToken","providedIn","factory","disableToggleValue","nextUniqueId","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MatSlideToggle","multi","MatSlideToggleChange","source","checked","MatSlideToggleBase","_elementRef","_MatSlideToggleMixinBase","mixinTabIndex","mixinColor","mixinDisableRipple","mixinDisabled","elementRef","_focusMonitor","_changeDetectorRef","tabIndex","defaults","_animationMode","_onChange","_","_onTouched","_uniqueId","_required","_checked","name","id","labelPosition","ariaLabel","ariaLabelledby","change","EventEmitter","toggleChange","parseInt","value","coerceBooleanProperty","markForCheck","monitor","subscribe","focusOrigin","_inputElement","nativeElement","focus","Promise","resolve","then","stopMonitoring","event","stopPropagation","emit","_emitChangeEvent","fn","isDisabled","disabled","options","origin","focusVia","detectChanges","ɵfac","MatSlideToggle_Factory","t","ɵngcc0","ɵngcc1","ANIMATION_MODULE_TYPE","ɵcmp","type","selectors","viewQuery","MatSlideToggle_Query","rf","ctx","_t","_thumbEl","first","_thumbBarEl","hostAttrs","hostVars","hostBindings","MatSlideToggle_HostBindings","inputs","disableRipple","color","required","outputs","exportAs","features","ngContentSelectors","decls","vars","consts","template","MatSlideToggle_Template","MatSlideToggle_Template_input_change_4_listener","$event","_onChangeEvent","MatSlideToggle_Template_input_click_4_listener","_onInputClick","MatSlideToggle_Template_span_cdkObserveContent_11_listener","_onLabelTextChange","_r0","_r4","inputId","textContent","trim","toString","directives","ɵngcc2","ɵngcc3","styles","encapsulation","changeDetection","ctorParameters","ElementRef","FocusMonitor","ChangeDetectorRef","String","decorators","Attribute","args","undefined","Inject","Optional","propDecorators","ViewChild","Input","Output","ngDevMode","Component","selector","host","providers","ViewEncapsulation","None","ChangeDetectionStrategy","OnPush","MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR","NG_VALIDATORS","MatSlideToggleRequiredValidator","CheckboxRequiredValidator","MatSlideToggleRequiredValidator_Factory","ɵMatSlideToggleRequiredValidator_BaseFactory","ɵdir","Directive","_MatSlideToggleRequiredValidatorModule","_MatSlideToggleRequiredValidatorModule_Factory","ɵmod","ɵinj","ngJitMode","declarations","exports","NgModule","MatSlideToggleModule","MatSlideToggleModule_Factory","imports","MatRippleModule","MatCommonModule","ObserversModule"],"mappings":"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","file":"default~apps-management-apps-management-module~edit-edit-module~visual-query-visual-query-module.js","sourcesContent":["import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false })\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true\n};\n/** Change event object emitted by a MatSlideToggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nclass MatSlideToggleBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Whether the slide-toggle is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => this._onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options, origin) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlideToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n        ɵngcc0.ɵɵviewQuery(_c1, 1);\n        ɵngcc0.ɵɵviewQuery(_c2, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r4 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r4.textContent || !_r4.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = function MatSlideToggleRequiredValidator_Factory(t) { return ɵMatSlideToggleRequiredValidator_BaseFactory(t || MatSlideToggleRequiredValidator); };\nMatSlideToggleRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatSlideToggleRequiredValidator_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵfac = function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); };\n_MatSlideToggleRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵfac = function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); };\nMatSlideToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ], _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule, MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map"],"sourceRoot":"webpack:///"}