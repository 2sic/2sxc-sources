{"version":3,"sources":["./projects/ng-dialogs/src/app/content-export/content-export.component.scss","./projects/ng-dialogs/src/app/app-administration/services/app-dialog-config.service.ts","./projects/ng-dialogs/src/app/content-export/content-export.component.html","./projects/ng-dialogs/src/app/content-export/content-export.module.ts","./projects/ng-dialogs/src/app/app-administration/services/content-types.service.ts","./projects/ng-dialogs/src/app/content-export/content-export.component.ts","./projects/ng-dialogs/src/app/content-export/content-export-dialog.config.ts","./projects/ng-dialogs/src/app/content-export/content-export-routing.module.ts"],"names":[],"mappings":"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","file":"content-export-content-export-module.js","sourcesContent":["export default \".field-label {\\n  font-size: 18px;\\n  margin: 24px 0 0;\\n}\\n\\n.mat-radio-group {\\n  display: flex;\\n  flex-direction: column;\\n  margin: 8px 0;\\n}\\n\\n.mat-radio-button {\\n  margin: 5px;\\n  font-size: 14px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcY29udGVudC1leHBvcnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLGFBQUE7QUFDRjs7QUFFQTtFQUNFLFdBQUE7RUFDQSxlQUFBO0FBQ0YiLCJmaWxlIjoiY29udGVudC1leHBvcnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmllbGQtbGFiZWwge1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxuICBtYXJnaW46IDI0cHggMCAwO1xyXG59XHJcblxyXG4ubWF0LXJhZGlvLWdyb3VwIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgbWFyZ2luOiA4cHggMDtcclxufVxyXG5cclxuLm1hdC1yYWRpby1idXR0b24ge1xyXG4gIG1hcmdpbjogNXB4O1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG4iXX0= */\";","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { DialogSettings } from '../models/dialog-settings.model';\r\n\r\nconst webApiDialogRoot = 'admin/dialog/';\r\n\r\n@Injectable()\r\nexport class AppDialogConfigService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getDialogSettings() {\r\n    return this.http.get<DialogSettings>(this.dnnContext.$2sxc.http.apiUrl(webApiDialogRoot + 'settings'), {\r\n      params: { appid: this.context.appId.toString() },\r\n    });\r\n  }\r\n}\r\n","export default \"<div mat-dialog-title>\\r\\n  <div class=\\\"dialog-title-box\\\">Export {{ (contentType$ | async)?.Name }}</div>\\r\\n</div>\\r\\n\\r\\n<p class=\\\"dialog-description\\\">\\r\\n  This will generate an XML file which you can edit in Excel. If you just want to import new data, use this to\\r\\n  export the schema that you can then fill in using Excel. Please visit\\r\\n  <a href=\\\"https://2sxc.org/help\\\" target=\\\"_blank\\\">https://2sxc.org/help</a> for more instructions.\\r\\n</p>\\r\\n\\r\\n<form #ngForm=\\\"ngForm\\\" class=\\\"dialog-form\\\" *ngIf=\\\"(loading$ | async) === false\\\">\\r\\n  <div class=\\\"dialog-form-content fancy-scrollbar-light\\\">\\r\\n    <div>\\r\\n      <mat-form-field appearance=\\\"standard\\\" color=\\\"accent\\\">\\r\\n        <mat-label>Languages</mat-label>\\r\\n        <mat-select [(ngModel)]=\\\"formValues.language\\\" name=\\\"Language\\\">\\r\\n          <mat-option value=\\\"\\\">All</mat-option>\\r\\n          <mat-option *ngFor=\\\"let lang of languages\\\" [value]=\\\"lang.key\\\">{{ lang.key }}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n      <p class=\\\"field-label\\\">Export data</p>\\r\\n      <mat-radio-group [(ngModel)]=\\\"formValues.recordExport\\\" name=\\\"RecordExport\\\">\\r\\n        <mat-radio-button value=\\\"Blank\\\">No, just export blank data schema (for new data import)\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button value=\\\"All\\\">Yes, export all content-items</mat-radio-button>\\r\\n        <mat-radio-button *ngIf=\\\"hasIdList\\\" value=\\\"Selection\\\">\\r\\n          Export selected {{ itemIds.length }} items\\r\\n        </mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n      <p class=\\\"field-label\\\">Value references to other languages</p>\\r\\n      <mat-radio-group [(ngModel)]=\\\"formValues.languageReferences\\\" name=\\\"LanguageReferences\\\"\\r\\n        [disabled]=\\\"formValues.recordExport === 'Blank'\\\">\\r\\n        <mat-radio-button value=\\\"Link\\\">Keep references to other languages (for re-import)\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button value=\\\"Resolve\\\">Replace references with values</mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n      <p class=\\\"field-label\\\">File / page references</p>\\r\\n      <mat-radio-group [(ngModel)]=\\\"formValues.resourcesReferences\\\" name=\\\"ResourcesReferences\\\"\\r\\n        [disabled]=\\\"formValues.recordExport === 'Blank'\\\">\\r\\n        <mat-radio-button value=\\\"Link\\\">Keep references (for re-import, for example Page:4711)\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button value=\\\"Resolve\\\">Replace references with real URLs (for example\\r\\n          /Portals/0...)\\r\\n        </mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"dialog-form-actions\\\">\\r\\n    <button mat-raised-button (click)=\\\"closeDialog()\\\">Cancel</button>\\r\\n    <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!ngForm.form.valid\\\" (click)=\\\"exportContent()\\\">\\r\\n      Export Data\\r\\n    </button>\\r\\n  </div>\\r\\n</form>\\r\\n\";","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { AppDialogConfigService } from '../app-administration/services/app-dialog-config.service';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { ContentExportRoutingModule } from './content-export-routing.module';\r\nimport { ContentExportComponent } from './content-export.component';\r\nimport { ContentExportService } from './services/content-export.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ContentExportComponent,\r\n  ],\r\n  entryComponents: [\r\n    ContentExportComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ContentExportRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    ContentExportService,\r\n    AppDialogConfigService,\r\n    ContentTypesService,\r\n  ]\r\n})\r\nexport class ContentExportModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { ImportAppResult } from '../../import-app/models/import-app-result.model';\r\nimport { EavScopeOption } from '../../shared/constants/eav.constants';\r\nimport { Dictionary } from '../../shared/models/dictionary.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\n\r\nexport const webApiTypeRoot = 'admin/type/';\r\n\r\n@Injectable()\r\nexport class ContentTypesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get<ContentType>(this.apiUrl(webApiTypeRoot + 'get'), {\r\n      params: { appId: this.context.appId.toString(), contentTypeId: staticName }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get<ContentType[]>(this.apiUrl(webApiTypeRoot + 'list'), {\r\n      params: { appId: this.context.appId.toString(), scope }\r\n    });\r\n  }\r\n\r\n  getScopes() {\r\n    return this.http.get<Dictionary<string>>(this.apiUrl(webApiTypeRoot + 'scopes'), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopes => {\r\n        const scopeOptions: EavScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeRoot + 'save'), contentType, {\r\n      params: { appid: this.context.appId.toString() },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeRoot + 'delete'), {\r\n      params: { appid: this.context.appId.toString(), staticName: contentType.StaticName },\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<ImportAppResult>(this.apiUrl(webApiTypeRoot + 'import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeRoot + 'addghost'), null, {\r\n      params: { appid: this.context.appId.toString(), sourceStaticName },\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject, forkJoin } from 'rxjs';\r\nimport { Language } from '../../../../edit/shared/models';\r\nimport { ContentType } from '../app-administration/models/content-type.model';\r\nimport { AppDialogConfigService } from '../app-administration/services/app-dialog-config.service';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { ContentExport } from './models/content-export.model';\r\nimport { ContentExportService } from './services/content-export.service';\r\n\r\n@Component({\r\n  selector: 'app-content-export',\r\n  templateUrl: './content-export.component.html',\r\n  styleUrls: ['./content-export.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ContentExportComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  formValues: ContentExport;\r\n  languages: Language[];\r\n  itemIds: number[];\r\n  hasIdList = false;\r\n  loading$ = new BehaviorSubject(false);\r\n  contentType$ = new BehaviorSubject<ContentType>(null);\r\n\r\n  private contentTypeStaticName = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<ContentExportComponent>,\r\n    private route: ActivatedRoute,\r\n    private contentExportService: ContentExportService,\r\n    private appDialogConfigService: AppDialogConfigService,\r\n    private contentTypesService: ContentTypesService,\r\n  ) {\r\n    const selectedIds = this.route.snapshot.paramMap.get('selectedIds');\r\n    this.hasIdList = !!selectedIds;\r\n    if (this.hasIdList) {\r\n      this.itemIds = selectedIds.split(',').map(id => parseInt(id, 10));\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loading$.next(true);\r\n    const contentType$ = this.contentTypesService.retrieveContentType(this.contentTypeStaticName);\r\n    const dialogSettings$ = this.appDialogConfigService.getDialogSettings();\r\n    forkJoin([contentType$, dialogSettings$]).subscribe(([contentType, dialogSettings]) => {\r\n      this.contentType$.next(contentType);\r\n      const languages = dialogSettings.Context.Language.All;\r\n      this.languages = Object.keys(languages).map(key => ({ key, name: languages[key] }));\r\n\r\n      this.formValues = {\r\n        defaultLanguage: dialogSettings.Context.Language.Primary,\r\n        contentTypeStaticName: this.contentTypeStaticName,\r\n        language: '',\r\n        recordExport: this.hasIdList ? 'Selection' : 'All',\r\n        languageReferences: 'Link',\r\n        resourcesReferences: 'Link',\r\n      };\r\n      this.loading$.next(false);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.contentType$.complete();\r\n    this.loading$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  exportContent() {\r\n    this.contentExportService.exportContent(this.formValues,\r\n      this.hasIdList && this.formValues.recordExport === 'Selection' ? this.itemIds : null);\r\n  }\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentExportDialog: DialogConfig = {\r\n  name: 'EXPORT_CONTENT_TYPE_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentExportComponent } = await import('./content-export.component');\r\n    return ContentExportComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { contentExportDialog } from './content-export-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: DialogEntryComponent, data: { dialog: contentExportDialog } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ContentExportRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}