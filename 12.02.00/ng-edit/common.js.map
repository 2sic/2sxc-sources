{"version":3,"sources":["./projects/ng-dialogs/src/app/apps-management/services/apps-list.service.ts","./projects/ng-dialogs/src/app/shared/translation/translate-loader-with-error-handling.ts","./projects/ng-dialogs/src/app/shared/services/dialog.service.ts","./projects/ng-dialogs/src/app/shared/translation/translate-configuration.ts","./projects/ng-dialogs/src/app/content-export/services/content-export.service.ts","./projects/ng-dialogs/src/app/content-items/services/content-items.service.ts","./projects/ng-dialogs/src/app/content-type-fields/constants/data-type.constants.ts","./projects/ng-dialogs/src/app/manage-content-list/services/content-group.service.ts","./projects/ng-dialogs/src/app/shared/translation/index.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { App } from '../models/app.model';\r\n\r\n@Injectable()\r\nexport class AppsListService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  getAll() {\r\n    return this.http.get<App[]>(this.apiUrl(webApiAppRoot + 'list'), {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  create(name: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRoot + 'app'), {}, {\r\n      params: { zoneId: this.context.zoneId.toString(), name }\r\n    });\r\n  }\r\n\r\n  delete(appId: number) {\r\n    return this.http.delete<null>(this.apiUrl(webApiAppRoot + 'app'), {\r\n      params: { zoneId: this.context.zoneId.toString(), appId: appId.toString() },\r\n    });\r\n  }\r\n\r\n  flushCache(appId: number) {\r\n    return this.http.get<null>(this.apiUrl(webApiAppRoot + 'flushcache'), {\r\n      params: { zoneId: this.context.zoneId.toString(), appId: appId.toString() },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader } from '@ngx-translate/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Dictionary } from '../models/dictionary.model';\r\n\r\n/**\r\n * This loader should catch a 404 if the file doesn't exist and not result in errors.\r\n * https://stackoverflow.com/questions/47391613/how-to-set-a-fallback-assets-i18n-en-json-when-url-is-not-available-ngx-trans\r\n */\r\nexport class TranslateLoaderWithErrorHandling implements TranslateLoader {\r\n  constructor(private http: HttpClient, private prefix: string, private suffix: string) { }\r\n\r\n  getTranslation(lang: string): Observable<Dictionary> {\r\n    return this.http.get<Dictionary>(`${this.prefix}${lang}${this.suffix}`).pipe(\r\n      catchError(error => {\r\n        console.warn(`Translation: Failed to get language '${lang}' from ${this.prefix}`, error);\r\n        return of({});\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DialogTypeConstants } from '../constants/dialog-types.constants';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyApi, keyAppId, keyContentBlockId, keyDebug, keyDialog, keyItems, keyModuleId, keyPartOfPage, keyPipelineId, keyRequestToken, keyTabId, keyUrl, keyZoneId, prefix } from '../constants/session.constants';\r\nimport { EditForm } from '../models/edit-form.model';\r\nimport { Context } from './context';\r\n\r\n@Injectable()\r\nexport class DialogService {\r\n  constructor(private context: Context) { }\r\n\r\n  openCodeFile(path: string, isShared: boolean = false) {\r\n    const dialog = DialogTypeConstants.Develop;\r\n    const form: EditForm = {\r\n      items: [{ Path: path }]\r\n    };\r\n    const url = this.sharedUrlRoot() +\r\n      this.buildHashParam(keyDialog, dialog) +\r\n      this.buildHashParam('isshared', isShared.toString()) +\r\n      this.buildHashParam(keyItems, JSON.stringify(form.items)) +\r\n      (sessionStorage.getItem(keyDebug) ? this.buildHashParam(keyDebug) : '') +\r\n      '';\r\n\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openQueryDesigner(queryId: number) {\r\n    const dialog = DialogTypeConstants.PipelineDesigner;\r\n    const form: EditForm = {\r\n      items: [{ EntityId: queryId }],\r\n    };\r\n    const url =\r\n      this.sharedUrlRoot() +\r\n      this.buildHashParam(keyDialog, dialog) +\r\n      this.buildHashParam(keyPipelineId, queryId.toString()) +\r\n      this.buildHashParam(keyItems, JSON.stringify(form.items)) +\r\n      (sessionStorage.getItem(keyDebug) ? this.buildHashParam(keyDebug) : '') +\r\n      '';\r\n\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  /** A lot of the link is identical when opening the admin-dialogs in a new window */\r\n  private sharedUrlRoot() {\r\n    const oldHref = sessionStorage.getItem(keyUrl);\r\n    const oldUrl = new URL(oldHref);\r\n    const newHref = oldUrl.origin + oldUrl.pathname + oldUrl.search;\r\n\r\n    return newHref +\r\n      this.buildHashParam(keyZoneId, this.context.zoneId.toString()).replace('&', '#') +\r\n      this.buildHashParam(keyAppId, this.context.appId.toString()) +\r\n      this.buildHashParam(keyTabId, this.context.tabId.toString()) +\r\n      this.buildHashParam(keyModuleId, this.context.moduleId.toString()) +\r\n      this.buildHashParam(keyContentBlockId, this.context.contentBlockId.toString()) +\r\n      this.buildHashParam(keyPartOfPage) +\r\n      this.buildHashParam(keyRequestToken) +\r\n      this.buildHashParam(keyApi);\r\n  }\r\n\r\n  /** Encodes param if necessary */\r\n  private buildHashParam(key: string, value?: string) {\r\n    const rawKey = key.replace(prefix, '');\r\n    const valueTemp = (value != null) ? value : sessionStorage.getItem(key);\r\n    const rawValue = encodeURIComponent(valueTemp);\r\n    const hashParam = `&${rawKey}=${rawValue}`;\r\n    return hashParam;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader } from '@ngx-translate/core';\r\n\r\nexport function buildTranslateConfiguration(factory: (http: HttpClient) => TranslateLoader) {\r\n  return {\r\n    loader: {\r\n      provide: TranslateLoader,\r\n      useFactory: factory,\r\n      deps: [HttpClient],\r\n    },\r\n    defaultLanguage: 'en',\r\n    isolate: true,\r\n  };\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiEntityRoot } from '../../../../../edit/shared/services';\r\nimport { webApiTypeRoot } from '../../app-administration/services/content-types.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentExport } from '../models/content-export.model';\r\n\r\n@Injectable()\r\nexport class ContentExportService {\r\n  constructor(private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  exportContent(values: ContentExport, selectedIds: number[]) {\r\n    const selectedIdsString = selectedIds ? '&selectedids=' + selectedIds.join() : '';\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'Download')\r\n      + '?appId=' + this.context.appId\r\n      + '&language=' + values.language\r\n      + '&defaultLanguage=' + values.defaultLanguage\r\n      + '&contentType=' + values.contentTypeStaticName\r\n      + '&recordExport=' + values.recordExport\r\n      + '&resourcesReferences=' + values.resourcesReferences\r\n      + '&languageReferences=' + values.languageReferences\r\n      + selectedIdsString;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportJson(typeName: string) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiTypeRoot + 'Json')\r\n      + '?appId=' + this.context.appId\r\n      + '&name=' + typeName;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportEntity(id: number, prefix: string, metadata: boolean) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'Json')\r\n      + '?appId=' + this.context.appId\r\n      + '&id=' + id\r\n      + '&prefix=' + prefix\r\n      + '&withMetadata=' + metadata;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { webApiEntityList, webApiEntityRoot } from '../../../../../edit/shared/services';\r\nimport { Field } from '../../content-type-fields/models/field.model';\r\nimport { webApiFieldsAll } from '../../content-type-fields/services/content-types-fields.service';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentItem } from '../models/content-item.model';\r\n\r\n@Injectable()\r\nexport class ContentItemsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentTypeStaticName: string) {\r\n    return this.http.get<ContentItem[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  getColumns(contentTypeStaticName: string) {\r\n    return this.http.get<Field[]>(this.dnnContext.$2sxc.http.apiUrl(webApiFieldsAll), {\r\n      params: { appId: this.context.appId.toString(), staticName: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  importItem(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      mergeMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'upload'), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      })\r\n    );\r\n  }\r\n}\r\n","export class DataTypeConstants {\r\n  public static readonly String = 'String';\r\n  public static readonly Entity = 'Entity';\r\n  public static readonly Boolean = 'Boolean';\r\n  public static readonly Number = 'Number';\r\n  public static readonly Custom = 'Custom';\r\n  public static readonly DateTime = 'DateTime';\r\n  public static readonly Hyperlink = 'Hyperlink';\r\n  public static readonly Empty = 'Empty';\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ReplaceConfig } from '../../replace-content/models/replace-config.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentGroup, ContentGroupAdd } from '../models/content-group.model';\r\nimport { GroupHeader } from '../models/group-header.model';\r\n\r\nconst webApiContentGroup = 'cms/contentgroup/';\r\n\r\n@Injectable()\r\nexport class ContentGroupService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getItems(item: ContentGroup) {\r\n    return this.http.get<ReplaceConfig>(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'replace'), {\r\n      params: { appId: this.context.appId.toString(), guid: item.guid, part: item.part, index: item.index.toString() }\r\n    });\r\n  }\r\n\r\n  saveItem(item: ContentGroupAdd) {\r\n    return this.http.post<null>(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'replace'), {}, {\r\n      params: { guid: item.guid, part: item.part, index: item.index.toString(), entityId: item.id.toString(), add: `${item.add}` }\r\n    });\r\n  }\r\n\r\n  getList(contentGroup: ContentGroup) {\r\n    return this.http.get<GroupHeader[]>(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'itemlist'), {\r\n      params: { appId: this.context.appId.toString(), guid: contentGroup.guid, part: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  saveList(contentGroup: ContentGroup, resortedList: GroupHeader[]) {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'itemlist'), resortedList, {\r\n      params: { appId: this.context.appId.toString(), guid: contentGroup.guid, part: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  getHeader(contentGroup: ContentGroup) {\r\n    return this.http.get<GroupHeader>(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'header'), {\r\n      params: { appId: this.context.appId.toString(), guid: contentGroup.guid }\r\n    });\r\n  }\r\n}\r\n","\r\nexport * from './translate-configuration';\r\nexport * from './translate-loader-with-error-handling';\r\n"],"sourceRoot":"webpack:///"}