{"version":3,"sources":["./projects/ng-dialogs/src/app/shared/constants/file-names.constants.ts","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js","./projects/ng-dialogs/src/app/shared/constants/guid.constants.ts","./projects/edit/eav-material-controls/adam/sanitize.helper.ts"],"names":["_c0","_c1","enterDuration","_c2","MAT_CHECKBOX_DEFAULT_OPTIONS","InjectionToken","providedIn","factory","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","color","clickAction","nextUniqueId","defaults","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MatCheckbox","multi","MatCheckboxChange","MatCheckboxBase","_elementRef","_MatCheckboxMixinBase","mixinTabIndex","mixinColor","mixinDisableRipple","mixinDisabled","elementRef","_changeDetectorRef","_focusMonitor","_ngZone","tabIndex","_animationMode","_options","ariaLabel","ariaLabelledby","_uniqueId","id","labelPosition","name","change","EventEmitter","indeterminateChange","_onTouched","_currentAnimationClass","_currentCheckState","_controlValueAccessorChangeFn","_checked","_disabled","_indeterminate","defaultColor","parseInt","_required","value","coerceBooleanProperty","monitor","subscribe","focusOrigin","Promise","resolve","then","markForCheck","_syncIndeterminate","stopMonitoring","checked","newValue","disabled","changed","_transitionCheckState","emit","disableRipple","detectChanges","fn","isDisabled","indeterminate","newState","oldState","element","nativeElement","length","classList","remove","_getAnimationClassForCheckStateTransition","add","animationClass","runOutsideAngular","setTimeout","event","source","_inputElement","_a","stopPropagation","toggle","_emitChangeEvent","origin","options","focusVia","focus","animSuffix","nativeCheckbox","ɵfac","MatCheckbox_Factory","t","ɵngcc0","ɵngcc1","ANIMATION_MODULE_TYPE","ɵcmp","type","selectors","viewQuery","MatCheckbox_Query","rf","ctx","MatRipple","_t","first","ripple","hostAttrs","hostVars","hostBindings","MatCheckbox_HostBindings","inputs","required","ariaDescribedby","outputs","exportAs","features","ngContentSelectors","decls","vars","consts","template","MatCheckbox_Template","MatCheckbox_Template_input_change_3_listener","$event","_onInteractionEvent","MatCheckbox_Template_input_click_3_listener","_onInputClick","MatCheckbox_Template_span_cdkObserveContent_12_listener","_onLabelTextChange","_r0","_r2","inputId","textContent","trim","_getAriaChecked","_isRippleDisabled","directives","ɵngcc2","ɵngcc3","styles","encapsulation","changeDetection","ctorParameters","ElementRef","ChangeDetectorRef","FocusMonitor","NgZone","String","decorators","Attribute","args","Optional","Inject","undefined","propDecorators","Input","Output","ViewChild","ngDevMode","Component","selector","host","providers","ViewEncapsulation","None","ChangeDetectionStrategy","OnPush","MAT_CHECKBOX_REQUIRED_VALIDATOR","NG_VALIDATORS","MatCheckboxRequiredValidator","CheckboxRequiredValidator","MatCheckboxRequiredValidator_Factory","ɵMatCheckboxRequiredValidator_BaseFactory","ɵdir","Directive","_MatCheckboxRequiredValidatorModule","_MatCheckboxRequiredValidatorModule_Factory","ɵmod","ɵinj","ngJitMode","declarations","exports","NgModule","MatCheckboxModule","MatCheckboxModule_Factory","imports","MatRippleModule","MatCommonModule","ObserversModule"],"mappings":"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","file":"default~app-administration-app-administration-module~edit-edit-module.js","sourcesContent":["export const defaultControllerName = 'MyController.cs';\r\nexport const defaultTemplateName = '_MyFile.cshtml';\r\nexport const defaultTokenName = 'MyFile.html';\r\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, NgZone, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatCheckbox),\n    multi: true\n};\n/** Change event object emitted by MatCheckbox. */\nclass MatCheckboxChange {\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/** @docs-private */\nclass MatCheckboxBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatCheckboxMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase))));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nclass MatCheckbox extends _MatCheckboxMixinBase {\n    constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, _animationMode, _options) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n        /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n        this.labelPosition = 'after';\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** Event emitted when the checkbox's `checked` value changes. */\n        this.change = new EventEmitter();\n        /** Event emitted when the checkbox's `indeterminate` value changes. */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* Init */;\n        this._controlValueAccessorChangeFn = () => { };\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || defaults;\n        this.color = this.defaultColor = this._options.color || defaults.color;\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /** Whether the checkbox is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state change\n                // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => {\n                    this._onTouched();\n                    this._changeDetectorRef.markForCheck();\n                });\n            }\n        });\n        this._syncIndeterminate(this._indeterminate);\n    }\n    // TODO: Delete next major revision.\n    ngAfterViewChecked() { }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Whether the checkbox is checked.\n     */\n    get checked() { return this._checked; }\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    get indeterminate() { return this._indeterminate; }\n    set indeterminate(value) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = coerceBooleanProperty(value);\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _getAriaChecked() {\n        if (this.checked) {\n            return 'true';\n        }\n        return this.indeterminate ? 'mixed' : 'false';\n    }\n    _transitionCheckState(newState) {\n        let oldState = this._currentCheckState;\n        let element = this._elementRef.nativeElement;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    element.classList.remove(animationClass);\n                }, 1000);\n            });\n        }\n    }\n    _emitChangeEvent() {\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n        // Assigning the value again here is redundant, but we have to do it in case it was\n        // changed inside the `change` listener which will cause the input to be out of sync.\n        if (this._inputElement) {\n            this._inputElement.nativeElement.checked = this.checked;\n        }\n    }\n    /** Toggles the `checked` state of the checkbox. */\n    toggle() {\n        this.checked = !this.checked;\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event) {\n        var _a;\n        const clickAction = (_a = this._options) === null || _a === void 0 ? void 0 : _a.clickAction;\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && clickAction !== 'check') {\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n            this.toggle();\n            this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    /** Focuses the checkbox. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        let animSuffix = '';\n        switch (oldState) {\n            case 0 /* Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* Checked */) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == 3 /* Indeterminate */) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case 2 /* Unchecked */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case 1 /* Checked */:\n                animSuffix = newState === 2 /* Unchecked */ ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case 3 /* Indeterminate */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n                break;\n        }\n        return `mat-checkbox-anim-${animSuffix}`;\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     */\n    _syncIndeterminate(value) {\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n}\nMatCheckbox.ɵfac = function MatCheckbox_Factory(t) { return new (t || MatCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8)); };\nMatCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCheckbox, selectors: [[\"mat-checkbox\"]], viewQuery: function MatCheckbox_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n        ɵngcc0.ɵɵviewQuery(MatRipple, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-checkbox\"], hostVars: 12, hostBindings: function MatCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-indeterminate\", ctx.indeterminate)(\"mat-checkbox-checked\", ctx.checked)(\"mat-checkbox-disabled\", ctx.disabled)(\"mat-checkbox-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", labelPosition: \"labelPosition\", name: \"name\", required: \"required\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], value: \"value\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, exportAs: [\"matCheckbox\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 17, vars: 20, consts: [[1, \"mat-checkbox-layout\"], [\"label\", \"\"], [1, \"mat-checkbox-inner-container\"], [\"type\", \"checkbox\", 1, \"mat-checkbox-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"checked\", \"disabled\", \"tabIndex\", \"change\", \"click\"], [\"input\", \"\"], [\"matRipple\", \"\", 1, \"mat-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleRadius\", \"matRippleCentered\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-checkbox-persistent-ripple\"], [1, \"mat-checkbox-frame\"], [1, \"mat-checkbox-background\"], [\"version\", \"1.1\", \"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", 0, \"xml\", \"space\", \"preserve\", 1, \"mat-checkbox-checkmark\"], [\"fill\", \"none\", \"stroke\", \"white\", \"d\", \"M4.1,12.7 9,17.6 20.3,6.3\", 1, \"mat-checkbox-checkmark-path\"], [1, \"mat-checkbox-mixedmark\"], [1, \"mat-checkbox-label\", 3, \"cdkObserveContent\"], [\"checkboxLabel\", \"\"], [2, \"display\", \"none\"]], template: function MatCheckbox_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"span\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"input\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"change\", function MatCheckbox_Template_input_change_3_listener($event) { return ctx._onInteractionEvent($event); })(\"click\", function MatCheckbox_Template_input_click_3_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"span\", 5);\n        ɵngcc0.ɵɵelement(6, \"span\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(7, \"span\", 7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 8);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(9, \"svg\", 9);\n        ɵngcc0.ɵɵelement(10, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(11, \"span\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"span\", 12, 13);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatCheckbox_Template_span_cdkObserveContent_12_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(14, \"span\", 14);\n        ɵngcc0.ɵɵtext(15, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r2 = ɵngcc0.ɵɵreference(13);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-inner-container-no-side-margin\", !_r2.textContent || !_r2.textContent.trim());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"value\", ctx.value)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx._getAriaChecked())(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleRadius\", 20)(\"matRippleCentered\", true)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(19, _c1));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCheckbox.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_DEFAULT_OPTIONS,] }] }\n];\nMatCheckbox.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    id: [{ type: Input }],\n    required: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    name: [{ type: Input }],\n    change: [{ type: Output }],\n    indeterminateChange: [{ type: Output }],\n    value: [{ type: Input }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }],\n    ripple: [{ type: ViewChild, args: [MatRipple,] }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    indeterminate: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCheckbox, [{\n        type: Component,\n        args: [{\n                selector: 'mat-checkbox',\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <span class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <span matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n      <span class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></span>\\n    </span>\\n    <span class=\\\"mat-checkbox-frame\\\"></span>\\n    <span class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           xml:space=\\\"preserve\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <span class=\\\"mat-checkbox-mixedmark\\\"></span>\\n    </span>\\n  </span>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                exportAs: 'matCheckbox',\n                host: {\n                    'class': 'mat-checkbox',\n                    '[id]': 'id',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                    '[class.mat-checkbox-checked]': 'checked',\n                    '[class.mat-checkbox-disabled]': 'disabled',\n                    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                },\n                providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n                inputs: ['disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], indeterminateChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], indeterminate: [{\n            type: Input\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], value: [{\n            type: Input\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }], ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\nMatCheckboxRequiredValidator.ɵfac = function MatCheckboxRequiredValidator_Factory(t) { return ɵMatCheckboxRequiredValidator_BaseFactory(t || MatCheckboxRequiredValidator); };\nMatCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCheckboxRequiredValidator, selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCheckboxRequiredValidator_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based checkbox implementations. */\nclass _MatCheckboxRequiredValidatorModule {\n}\n_MatCheckboxRequiredValidatorModule.ɵfac = function _MatCheckboxRequiredValidatorModule_Factory(t) { return new (t || _MatCheckboxRequiredValidatorModule)(); };\n_MatCheckboxRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatCheckboxRequiredValidatorModule });\n_MatCheckboxRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatCheckboxRequiredValidatorModule, { declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatCheckboxRequiredValidator],\n                declarations: [MatCheckboxRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatCheckboxModule {\n}\nMatCheckboxModule.ɵfac = function MatCheckboxModule_Factory(t) { return new (t || MatCheckboxModule)(); };\nMatCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCheckboxModule });\nMatCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[\n            MatRippleModule, MatCommonModule, ObserversModule,\n            _MatCheckboxRequiredValidatorModule\n        ], MatCommonModule, _MatCheckboxRequiredValidatorModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCheckboxModule, { declarations: function () { return [MatCheckbox]; }, imports: function () { return [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule]; }, exports: function () { return [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule, MatCommonModule, ObserversModule,\n                    _MatCheckboxRequiredValidatorModule\n                ],\n                exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                declarations: [MatCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n\n//# sourceMappingURL=checkbox.js.map","/**\r\n * Do not reuse regex:\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test#using_test_on_a_regex_with_the_global_flag\r\n */\r\nexport function guidRegex(): RegExp {\r\n  return /[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}/i;\r\n}\r\n","export class SanitizeHelper {\r\n\r\n  private static removeFromStart(sanitized: string, charToRemove: string): string {\r\n    // check for undefined\r\n    if (!sanitized) { return sanitized; }\r\n\r\n    while (sanitized.substring(0, 1) === charToRemove) {\r\n      sanitized = sanitized.substring(1);\r\n    }\r\n    return sanitized;\r\n  }\r\n\r\n  private static removeFromEnd(sanitized: string, charToRemove: string): string {\r\n    // check for undefined\r\n    if (!sanitized) { return sanitized; }\r\n\r\n    while (sanitized.substring(sanitized.length - 1, sanitized.length) === charToRemove) {\r\n      sanitized = sanitized.substring(0, sanitized.length - 1);\r\n    }\r\n    return sanitized;\r\n  }\r\n\r\n  private static cleanBadPath(sanitized: string): string {\r\n    // check for undefined\r\n    if (!sanitized) { return sanitized; }\r\n\r\n    const goodChar = '_';\r\n    const illegalRe = /[\\?<>\\\\:\\*\\|\":]/g;\r\n    const controlRe = /[\\x00-\\x1f\\x80-\\x9f]/g;\r\n    const reservedRe = /^\\.+$/;\r\n    const windowsReservedRe = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\\..*)?$/i;\r\n    const windowsTrailingRe = /[\\. ]+$/;\r\n    return sanitized\r\n      .replace(illegalRe, goodChar)\r\n      .replace(controlRe, goodChar)\r\n      .replace(reservedRe, goodChar)\r\n      .replace(windowsReservedRe, goodChar)\r\n      .replace(windowsTrailingRe, goodChar);\r\n  }\r\n\r\n  // sanitize path\r\n  static sanitizePath(sanitized: string): string {\r\n    // check for undefined\r\n    if (!sanitized) { return sanitized; }\r\n\r\n    // remove slashes form start of path\r\n    sanitized = this.removeFromStart(sanitized, '\\/');\r\n\r\n    // remove slashed form end of path\r\n    sanitized = this.removeFromEnd(sanitized, '\\/');\r\n\r\n    // remove backslashes form start of path\r\n    sanitized = this.removeFromStart(sanitized, '\\\\');\r\n\r\n    // remove backslashes form end of path\r\n    sanitized = this.removeFromEnd(sanitized, '\\\\');\r\n\r\n    // replace bad\r\n    sanitized = this.cleanBadPath(sanitized);\r\n\r\n    return sanitized;\r\n  }\r\n\r\n  // sanitize file or folder name\r\n  static sanitizeName(sanitized: string): string {\r\n    // check for undefined\r\n    if (!sanitized) { return sanitized; }\r\n\r\n    // in addition to all path validation rules\r\n    // slashes are not valid in file or folder name\r\n    const replacement = '_';\r\n    const illegalRe = /\\//g;\r\n    return this.sanitizePath(sanitized).replace(illegalRe, replacement);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}