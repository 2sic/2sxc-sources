{"version":3,"file":"default-projects_eav-ui_src_app_item-history_item-history_module_ts.220f350ec9d249a2.js","mappings":"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","names":["itemHistoryDialog","name","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","ItemHistoryComponent","__webpack_require__","e","then","bind","routes","path","component","DialogEntryComponent","data","dialog","title","ItemHistoryRoutingModule","static","this","t","core","oAB","cJS","RouterModule","forChild","ItemHistoryModule","Context","VersionsService","provide","MAT_FORM_FIELD_DEFAULT_OPTIONS","useValue","subscriptSizing","MAT_SELECT_CONFIG","hideSingleSelectionIndicator","imports","CommonModule","SharedComponentsModule","MatDialogModule","MatButtonModule","MatIconModule","MatExpansionModule","MatSnackBarModule","MatPaginatorModule","MatFormFieldModule","MatSelectModule","MatDividerModule","webApiVersions","constructor","http","context","dnnContext","fetchVersions","entityId","post","$2sxc","apiUrl","params","appId","toString","restore","changeId","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_1__","Yz7","factory","ɵfac","_c0","MAT_TOOLTIP_SCROLL_STRATEGY","InjectionToken","providedIn","overlay","inject","Overlay","scrollStrategies","reposition","scrollThrottle","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","MAT_TOOLTIP_DEFAULT_OPTIONS","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","PANEL_CLASS","passiveListenerOptions","normalizePassiveListenerOptions","passive","MatTooltip","position","_position","value","_overlayRef","_updatePosition","_tooltipInstance","show","updatePosition","positionAtOrigin","_positionAtOrigin","coerceBooleanProperty","_detach","disabled","_disabled","hide","_setupPointerEnterEventsIfNeeded","_showDelay","coerceNumberProperty","_hideDelay","_mouseLeaveHideDelay","message","_message","_ariaDescriber","removeDescription","_elementRef","nativeElement","String","trim","_isTooltipVisible","_updateTooltipMessage","_ngZone","runOutsideAngular","Promise","resolve","describe","tooltipClass","_tooltipClass","_setTooltipClass","_overlay","_scrollDispatcher","_viewContainerRef","_platform","_focusMonitor","scrollStrategy","_dir","_defaultOptions","_document","_viewInitialized","_pointerExitEventsInitialized","_tooltipComponent","TooltipComponent","_viewportMargin","_cssClassPrefix","touchGestures","_passiveListeners","_destroyed","Subject","_scrollStrategy","change","pipe","takeUntil","subscribe","ngAfterViewInit","monitor","origin","run","ngOnDestroy","clearTimeout","_touchstartTimeout","dispose","forEach","event","listener","removeEventListener","length","next","complete","stopMonitoring","delay","_cancelPendingAnimations","overlayRef","_createOverlay","_portal","ComponentPortal","instance","attach","_triggerElement","afterHidden","isVisible","toggle","undefined","existingStrategy","getConfig","positionStrategy","_origin","ElementRef","scrollableAncestors","getAncestorScrollContainers","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","_updateCurrentPositionClass","connectionPair","scrollableViewProperties","isOverlayClipped","create","direction","detachments","outsidePointerEvents","_handleBodyInteraction","keydownEvents","keyCode","ESCAPE","hasModifierKey","preventDefault","stopPropagation","disableTooltipInteractivity","addPanelClass","hasAttached","detach","_getOrigin","_getOverlayPosition","withPositions","_addOffset","main","fallback","isLtr","originY","offsetY","originX","offsetX","originPosition","x","y","_invertPosition","overlayPosition","overlayX","overlayY","_markForCheck","onMicrotaskEmpty","take","newPosition","_currentPosition","classPrefix","removePanelClass","_platformSupportsMouseEvents","push","point","_setupPointerExitEventsIfNeeded","_disableNativeGesturesIfNecessary","touch","targetTouches","clientX","clientY","setTimeout","_addListeners","exitListeners","newTarget","relatedTarget","overlayElement","contains","_wheelListener","touchendListener","listeners","addEventListener","IOS","ANDROID","elementUnderPointer","elementFromPoint","element","gestures","style","nodeName","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","i4","DOCUMENT","ɵdir","type","selectors","hostAttrs","hostVars","hostBindings","rf","ctx","inputs","exportAs","_changeDetectorRef","animationMode","_isMultiline","_closeOnInteraction","_isVisible","_onHide","_showAnimation","_hideAnimation","_animationsDisabled","_hideTimeoutId","_showTimeoutId","_toggleVisibility","markForCheck","_handleMouseLeave","_finalizeAnimation","_onShow","_isTooltipMultiline","rect","getBoundingClientRect","height","width","_handleAnimationEnd","animationName","toVisible","tooltip","_tooltip","showClass","hideClass","classList","remove","add","getComputedStyle","styles","getPropertyValue","ANIMATION_MODULE_TYPE","ɵcmp","viewQuery","_t","first","$event","decls","vars","consts","template","dependencies","i5","encapsulation","changeDetection","MatTooltipModule","ɵmod","ɵinj","providers","A11yModule","OverlayModule","MatCommonModule","CdkScrollableModule","MatPaginator_Conditional_2_Conditional_3_For_3_Template","pageSizeOption_r6","$implicit","MatPaginator_Conditional_2_Conditional_3_Template","_r12","ctx_r11","_changePageSize","ctx_r3","_formFieldAppearance","color","pageSize","_pageSizeLabelId","selectConfig","disableOptionCentering","_displayedPageSizeOptions","MatPaginator_Conditional_2_Conditional_4_Template","ctx_r4","MatPaginator_Conditional_2_Template","ctx_r0","_intl","itemsPerPageLabel","MatPaginator_Conditional_6_Template","_r14","ctx_r13","firstPage","ctx_r1","firstPageLabel","_previousButtonsDisabled","MatPaginator_Conditional_13_Template","_r16","ctx_r15","lastPage","ctx_r2","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","changes","nextPageLabel","previousPageLabel","getRangeLabel","page","startIndex","Math","max","min","ɵprov","token","MAT_PAGINATOR_INTL_PROVIDER","Optional","SkipSelf","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_DEFAULT_OPTIONS","_MatPaginatorMixinBase","mixinDisabled","mixinInitialized","nextUniqueId","MatPaginator","pageIndex","_pageIndex","_length","_pageSize","_updateDisplayedPageSizeOptions","pageSizeOptions","_pageSizeOptions","map","p","hidePageSize","_hidePageSize","showFirstLastButtons","_showFirstLastButtons","defaults","super","EventEmitter","_intlChanges","formFieldAppearance","ngOnInit","_initialized","_markInitialized","unsubscribe","nextPage","hasNextPage","previousPageIndex","_emitPageEvent","previousPage","hasPreviousPage","getNumberOfPages","maxPageIndex","ceil","floor","slice","indexOf","sort","a","b","emit","outputs","features","i6"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/item-history/item-history-dialog.config.ts","./projects/eav-ui/src/app/item-history/item-history-routing.module.ts","./projects/eav-ui/src/app/item-history/item-history.module.ts","./projects/eav-ui/src/app/item-history/services/versions.service.ts","./node_modules/@angular/material/fesm2022/tooltip.mjs","./node_modules/@angular/material/fesm2022/paginator.mjs"],"sourcesContent":["import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const itemHistoryDialog: DialogConfig = {\r\n  name: 'ITEM_HISTORY_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ItemHistoryComponent } = await import('./item-history.component');\r\n    return ItemHistoryComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { itemHistoryDialog } from './item-history-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: DialogEntryComponent, data: { dialog: itemHistoryDialog, title: 'Item History' } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ItemHistoryRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MAT_SELECT_CONFIG, MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { ItemHistoryRoutingModule } from './item-history-routing.module';\r\nimport { ItemHistoryComponent } from './item-history.component';\r\nimport { VersionsService } from './services/versions.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ItemHistoryComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ItemHistoryRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatExpansionModule,\r\n    MatSnackBarModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatDividerModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    VersionsService,\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { subscriptSizing: 'dynamic' } },\r\n    { provide: MAT_SELECT_CONFIG, useValue: { hideSingleSelectionIndicator: true } }\r\n  ]\r\n})\r\nexport class ItemHistoryModule { }\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Version } from '../models/version.model';\r\n\r\nconst webApiVersions = 'cms/history/';\r\n\r\n@Injectable()\r\nexport class VersionsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  fetchVersions(entityId: number) {\r\n    return this.http.post<Version[]>(\r\n      this.dnnContext.$2sxc.http.apiUrl(webApiVersions + 'get'),\r\n      { entityId },\r\n      {\r\n        params: { appId: this.context.appId.toString() },\r\n      },\r\n    );\r\n  }\r\n\r\n  restore(entityId: number, changeId: number) {\r\n    return this.http.post<boolean>(\r\n      this.dnnContext.$2sxc.http.apiUrl(webApiVersions + 'restore'),\r\n      { entityId },\r\n      {\r\n        params: { appId: this.context.appId.toString(), changeId: changeId.toString() },\r\n      },\r\n    );\r\n  }\r\n}\r\n","import { takeUntil, take } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, Directive, Inject, Optional, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport * as i5 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i3 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\nimport * as i1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n    },\n});\n/** @docs-private */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/** @docs-private */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/** @docs-private */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-mdc-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n */\nconst LONGPRESS_DELAY = 500;\n// These constants were taken from MDC's `numbers` object. We can't import them from MDC,\n// because they have some top-level references to `window` which break during SSR.\nconst MIN_VIEWPORT_TOOLTIP_THRESHOLD = 8;\nconst UNBOUNDED_ANCHOR_GAP = 8;\nconst MIN_HEIGHT = 24;\nconst MAX_WIDTH = 200;\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n                this._tooltipInstance?.show(0);\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /**\n     * Whether tooltip should be relative to the click or touch origin\n     * instead of outside the element bounding box.\n     */\n    get positionAtOrigin() {\n        return this._positionAtOrigin;\n    }\n    set positionAtOrigin(value) {\n        this._positionAtOrigin = coerceBooleanProperty(value);\n        this._detach();\n        this._overlayRef = null;\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n        }\n    }\n    /** The default delay in ms before showing the tooltip after show is called */\n    get showDelay() {\n        return this._showDelay;\n    }\n    set showDelay(value) {\n        this._showDelay = coerceNumberProperty(value);\n    }\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    get hideDelay() {\n        return this._hideDelay;\n    }\n    set hideDelay(value) {\n        this._hideDelay = coerceNumberProperty(value);\n        if (this._tooltipInstance) {\n            this._tooltipInstance._mouseLeaveHideDelay = this._hideDelay;\n        }\n    }\n    /** The message to be displayed in the tooltip */\n    get message() {\n        return this._message;\n    }\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message, 'tooltip');\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n        // away the string-conversion: https://github.com/angular/components/issues/20684\n        this._message = value != null ? String(value).trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular(() => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then(() => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n                });\n            });\n        }\n    }\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() {\n        return this._tooltipClass;\n    }\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, _document) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._positionAtOrigin = false;\n        this._disabled = false;\n        this._viewInitialized = false;\n        this._pointerExitEventsInitialized = false;\n        this._tooltipComponent = TooltipComponent;\n        this._viewportMargin = 8;\n        this._cssClassPrefix = 'mat-mdc';\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /** Manually-bound passive event listeners. */\n        this._passiveListeners = [];\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        this._scrollStrategy = scrollStrategy;\n        this._document = _document;\n        if (_defaultOptions) {\n            this._showDelay = _defaultOptions.showDelay;\n            this._hideDelay = _defaultOptions.hideDelay;\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.positionAtOrigin) {\n                this.positionAtOrigin = _defaultOptions.positionAtOrigin;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n            }\n        });\n        this._viewportMargin = MIN_VIEWPORT_TOOLTIP_THRESHOLD;\n    }\n    ngAfterViewInit() {\n        // This needs to happen after view init so the initial values for all inputs have been set.\n        this._viewInitialized = true;\n        this._setupPointerEnterEventsIfNeeded();\n        this._focusMonitor\n            .monitor(this._elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                this._ngZone.run(() => this.hide(0));\n            }\n            else if (origin === 'keyboard') {\n                this._ngZone.run(() => this.show());\n            }\n        });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        this._passiveListeners.forEach(([event, listener]) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        });\n        this._passiveListeners.length = 0;\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay, origin) {\n        if (this.disabled || !this.message || this._isTooltipVisible()) {\n            this._tooltipInstance?._cancelPendingAnimations();\n            return;\n        }\n        const overlayRef = this._createOverlay(origin);\n        this._detach();\n        this._portal =\n            this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n        const instance = (this._tooltipInstance = overlayRef.attach(this._portal).instance);\n        instance._triggerElement = this._elementRef.nativeElement;\n        instance._mouseLeaveHideDelay = this._hideDelay;\n        instance\n            .afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        instance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n        const instance = this._tooltipInstance;\n        if (instance) {\n            if (instance.isVisible()) {\n                instance.hide(delay);\n            }\n            else {\n                instance._cancelPendingAnimations();\n                this._detach();\n            }\n        }\n    }\n    /** Shows/hides the tooltip */\n    toggle(origin) {\n        this._isTooltipVisible() ? this.hide() : this.show(undefined, origin);\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay(origin) {\n        if (this._overlayRef) {\n            const existingStrategy = this._overlayRef.getConfig()\n                .positionStrategy;\n            if ((!this.positionAtOrigin || !origin) && existingStrategy._origin instanceof ElementRef) {\n                return this._overlayRef;\n            }\n            this._detach();\n        }\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this.positionAtOrigin ? origin || this._elementRef : this._elementRef)\n            .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)\n            .withFlexibleDimensions(false)\n            .withViewportMargin(this._viewportMargin)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            this._updateCurrentPositionClass(change.connectionPair);\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n            scrollStrategy: this._scrollStrategy(),\n        });\n        this._updatePosition(this._overlayRef);\n        this._overlayRef\n            .detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._overlayRef\n            .outsidePointerEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._tooltipInstance?._handleBodyInteraction());\n        this._overlayRef\n            .keydownEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run(() => this.hide(0));\n            }\n        });\n        if (this._defaultOptions?.disableTooltipInteractivity) {\n            this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`);\n        }\n        return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n        const position = overlayRef.getConfig().positionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            this._addOffset({ ...origin.main, ...overlay.main }),\n            this._addOffset({ ...origin.fallback, ...overlay.fallback }),\n        ]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n        const offset = UNBOUNDED_ANCHOR_GAP;\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        if (position.originY === 'top') {\n            position.offsetY = -offset;\n        }\n        else if (position.originY === 'bottom') {\n            position.offsetY = offset;\n        }\n        else if (position.originX === 'start') {\n            position.offsetX = isLtr ? -offset : offset;\n        }\n        else if (position.originX === 'end') {\n            position.offsetX = isLtr ? offset : -offset;\n        }\n        return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y },\n        };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y },\n        };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                if (this._tooltipInstance) {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n        const { overlayY, originX, originY } = connectionPair;\n        let newPosition;\n        // If the overlay is in the middle along the Y axis,\n        // it means that it's either before or after.\n        if (overlayY === 'center') {\n            // Note that since this information is used for styling, we want to\n            // resolve `start` and `end` to their real values, otherwise consumers\n            // would have to remember to do it themselves on each consumption.\n            if (this._dir && this._dir.value === 'rtl') {\n                newPosition = originX === 'end' ? 'left' : 'right';\n            }\n            else {\n                newPosition = originX === 'start' ? 'left' : 'right';\n            }\n        }\n        else {\n            newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n        }\n        if (newPosition !== this._currentPosition) {\n            const overlayRef = this._overlayRef;\n            if (overlayRef) {\n                const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n                overlayRef.removePanelClass(classPrefix + this._currentPosition);\n                overlayRef.addPanelClass(classPrefix + newPosition);\n            }\n            this._currentPosition = newPosition;\n        }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n        // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n        if (this._disabled ||\n            !this.message ||\n            !this._viewInitialized ||\n            this._passiveListeners.length) {\n            return;\n        }\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (this._platformSupportsMouseEvents()) {\n            this._passiveListeners.push([\n                'mouseenter',\n                event => {\n                    this._setupPointerExitEventsIfNeeded();\n                    let point = undefined;\n                    if (event.x !== undefined && event.y !== undefined) {\n                        point = event;\n                    }\n                    this.show(undefined, point);\n                },\n            ]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            this._passiveListeners.push([\n                'touchstart',\n                event => {\n                    const touch = event.targetTouches?.[0];\n                    const origin = touch ? { x: touch.clientX, y: touch.clientY } : undefined;\n                    // Note that it's important that we don't `preventDefault` here,\n                    // because it can prevent click events from firing on the element.\n                    this._setupPointerExitEventsIfNeeded();\n                    clearTimeout(this._touchstartTimeout);\n                    this._touchstartTimeout = setTimeout(() => this.show(undefined, origin), LONGPRESS_DELAY);\n                },\n            ]);\n        }\n        this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n        if (this._pointerExitEventsInitialized) {\n            return;\n        }\n        this._pointerExitEventsInitialized = true;\n        const exitListeners = [];\n        if (this._platformSupportsMouseEvents()) {\n            exitListeners.push([\n                'mouseleave',\n                event => {\n                    const newTarget = event.relatedTarget;\n                    if (!newTarget || !this._overlayRef?.overlayElement.contains(newTarget)) {\n                        this.hide();\n                    }\n                },\n            ], ['wheel', event => this._wheelListener(event)]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            const touchendListener = () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            };\n            exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n        }\n        this._addListeners(exitListeners);\n        this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n        listeners.forEach(([event, listener]) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        });\n    }\n    _platformSupportsMouseEvents() {\n        return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n        if (this._isTooltipVisible()) {\n            const elementUnderPointer = this._document.elementFromPoint(event.clientX, event.clientY);\n            const element = this._elementRef.nativeElement;\n            // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n            // won't fire if the user scrolls away using the wheel without moving their cursor. We\n            // work around it by finding the element under the user's cursor and closing the tooltip\n            // if it's not the trigger.\n            if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n                this.hide();\n            }\n        }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            const element = this._elementRef.nativeElement;\n            const style = element.style;\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect =\n                    style.msUserSelect =\n                        style.webkitUserSelect =\n                            style.MozUserSelect =\n                                'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                style.webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatTooltip, deps: [{ token: i1.Overlay }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.ViewContainerRef }, { token: i0.NgZone }, { token: i2.Platform }, { token: i3.AriaDescriber }, { token: i3.FocusMonitor }, { token: MAT_TOOLTIP_SCROLL_STRATEGY }, { token: i4.Directionality }, { token: MAT_TOOLTIP_DEFAULT_OPTIONS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.4\", type: MatTooltip, selector: \"[matTooltip]\", inputs: { position: [\"matTooltipPosition\", \"position\"], positionAtOrigin: [\"matTooltipPositionAtOrigin\", \"positionAtOrigin\"], disabled: [\"matTooltipDisabled\", \"disabled\"], showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, host: { properties: { \"class.mat-mdc-tooltip-disabled\": \"disabled\" }, classAttribute: \"mat-mdc-tooltip-trigger\" }, exportAs: [\"matTooltip\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatTooltip, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTooltip]',\n                    exportAs: 'matTooltip',\n                    host: {\n                        'class': 'mat-mdc-tooltip-trigger',\n                        '[class.mat-mdc-tooltip-disabled]': 'disabled',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i2.Platform }, { type: i3.AriaDescriber }, { type: i3.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n                }] }, { type: i4.Directionality }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }], propDecorators: { position: [{\n                type: Input,\n                args: ['matTooltipPosition']\n            }], positionAtOrigin: [{\n                type: Input,\n                args: ['matTooltipPositionAtOrigin']\n            }], disabled: [{\n                type: Input,\n                args: ['matTooltipDisabled']\n            }], showDelay: [{\n                type: Input,\n                args: ['matTooltipShowDelay']\n            }], hideDelay: [{\n                type: Input,\n                args: ['matTooltipHideDelay']\n            }], touchGestures: [{\n                type: Input,\n                args: ['matTooltipTouchGestures']\n            }], message: [{\n                type: Input,\n                args: ['matTooltip']\n            }], tooltipClass: [{\n                type: Input,\n                args: ['matTooltipClass']\n            }] } });\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent {\n    constructor(_changeDetectorRef, _elementRef, animationMode) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /* Whether the tooltip text overflows to multiple lines */\n        this._isMultiline = false;\n        /** Whether interactions on the page should close the tooltip */\n        this._closeOnInteraction = false;\n        /** Whether the tooltip is currently visible. */\n        this._isVisible = false;\n        /** Subject for notifying that the tooltip has been hidden from the view */\n        this._onHide = new Subject();\n        /** Name of the show animation and the class that toggles it. */\n        this._showAnimation = 'mat-mdc-tooltip-show';\n        /** Name of the hide animation and the class that toggles it. */\n        this._hideAnimation = 'mat-mdc-tooltip-hide';\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = setTimeout(() => {\n            this._toggleVisibility(true);\n            this._showTimeoutId = undefined;\n        }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        this._hideTimeoutId = setTimeout(() => {\n            this._toggleVisibility(false);\n            this._hideTimeoutId = undefined;\n        }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n        return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n        return this._isVisible;\n    }\n    ngOnDestroy() {\n        this._cancelPendingAnimations();\n        this._onHide.complete();\n        this._triggerElement = null;\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    _handleMouseLeave({ relatedTarget }) {\n        if (!relatedTarget || !this._triggerElement.contains(relatedTarget)) {\n            if (this.isVisible()) {\n                this.hide(this._mouseLeaveHideDelay);\n            }\n            else {\n                this._finalizeAnimation(false);\n            }\n        }\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() {\n        this._isMultiline = this._isTooltipMultiline();\n        this._markForCheck();\n    }\n    /** Whether the tooltip text has overflown to the next line */\n    _isTooltipMultiline() {\n        const rect = this._elementRef.nativeElement.getBoundingClientRect();\n        return rect.height > MIN_HEIGHT && rect.width >= MAX_WIDTH;\n    }\n    /** Event listener dispatched when an animation on the tooltip finishes. */\n    _handleAnimationEnd({ animationName }) {\n        if (animationName === this._showAnimation || animationName === this._hideAnimation) {\n            this._finalizeAnimation(animationName === this._showAnimation);\n        }\n    }\n    /** Cancels any pending animation sequences. */\n    _cancelPendingAnimations() {\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = this._hideTimeoutId = undefined;\n    }\n    /** Handles the cleanup after an animation has finished. */\n    _finalizeAnimation(toVisible) {\n        if (toVisible) {\n            this._closeOnInteraction = true;\n        }\n        else if (!this.isVisible()) {\n            this._onHide.next();\n        }\n    }\n    /** Toggles the visibility of the tooltip element. */\n    _toggleVisibility(isVisible) {\n        // We set the classes directly here ourselves so that toggling the tooltip state\n        // isn't bound by change detection. This allows us to hide it even if the\n        // view ref has been detached from the CD tree.\n        const tooltip = this._tooltip.nativeElement;\n        const showClass = this._showAnimation;\n        const hideClass = this._hideAnimation;\n        tooltip.classList.remove(isVisible ? hideClass : showClass);\n        tooltip.classList.add(isVisible ? showClass : hideClass);\n        this._isVisible = isVisible;\n        // It's common for internal apps to disable animations using `* { animation: none !important }`\n        // which can break the opening sequence. Try to detect such cases and work around them.\n        if (isVisible && !this._animationsDisabled && typeof getComputedStyle === 'function') {\n            const styles = getComputedStyle(tooltip);\n            // Use `getPropertyValue` to avoid issues with property renaming.\n            if (styles.getPropertyValue('animation-duration') === '0s' ||\n                styles.getPropertyValue('animation-name') === 'none') {\n                this._animationsDisabled = true;\n            }\n        }\n        if (isVisible) {\n            this._onShow();\n        }\n        if (this._animationsDisabled) {\n            tooltip.classList.add('_mat-animation-noopable');\n            this._finalizeAnimation(isVisible);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: TooltipComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.4\", type: TooltipComponent, selector: \"mat-tooltip-component\", host: { attributes: { \"aria-hidden\": \"true\" }, listeners: { \"mouseleave\": \"_handleMouseLeave($event)\" }, properties: { \"style.zoom\": \"isVisible() ? 1 : null\" } }, viewQueries: [{ propertyName: \"_tooltip\", first: true, predicate: [\"tooltip\"], descendants: true, static: true }], ngImport: i0, template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mdc-tooltip--shown mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mdc-tooltip__surface mdc-tooltip__surface-animation\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mdc-tooltip__surface{word-break:break-all;word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip--showing-transition .mdc-tooltip__surface-animation{transition:opacity 150ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-tooltip--hide-transition .mdc-tooltip__surface-animation{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - 2*8px);margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - 2*8px);align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mat-mdc-tooltip .mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color)}.mat-mdc-tooltip .mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__caret-surface-top,.mat-mdc-tooltip .mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color)}.mat-mdc-tooltip .mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font);line-height:var(--mdc-plain-tooltip-supporting-text-line-height);font-size:var(--mdc-plain-tooltip-supporting-text-size);font-weight:var(--mdc-plain-tooltip-supporting-text-weight);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"], dependencies: [{ kind: \"directive\", type: i5.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: TooltipComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tooltip-component', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                        // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                        '[style.zoom]': 'isVisible() ? 1 : null',\n                        '(mouseleave)': '_handleMouseLeave($event)',\n                        'aria-hidden': 'true',\n                    }, template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mdc-tooltip--shown mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mdc-tooltip__surface mdc-tooltip__surface-animation\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mdc-tooltip__surface{word-break:break-all;word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip--showing-transition .mdc-tooltip__surface-animation{transition:opacity 150ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-tooltip--hide-transition .mdc-tooltip__surface-animation{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - 2*8px);margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - 2*8px);align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mat-mdc-tooltip .mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color)}.mat-mdc-tooltip .mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__caret-surface-top,.mat-mdc-tooltip .mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color)}.mat-mdc-tooltip .mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font);line-height:var(--mdc-plain-tooltip-supporting-text-line-height);font-size:var(--mdc-plain-tooltip-supporting-text-size);font-weight:var(--mdc-plain-tooltip-supporting-text-weight);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { _tooltip: [{\n                type: ViewChild,\n                args: ['tooltip', {\n                        // Use a static query here since we interact directly with\n                        // the DOM which can happen before `ngAfterViewInit`.\n                        static: true,\n                    }]\n            }] } });\n\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nconst matTooltipAnimations = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        // TODO(crisbeto): these values are based on MDC's CSS.\n        // We should be able to use their styles directly once we land #19432.\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0.8)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => hidden', animate('75ms cubic-bezier(0.4, 0, 1, 1)')),\n    ]),\n};\n\nclass MatTooltipModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: MatTooltipModule, declarations: [MatTooltip, TooltipComponent], imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule], exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatTooltipModule, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule, MatCommonModule, CdkScrollableModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule],\n                    exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                    declarations: [MatTooltip, TooltipComponent],\n                    providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, getMatTooltipInvalidPositionError, matTooltipAnimations };\n","import * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i2 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i4 from '@angular/material/select';\nimport { MatSelectModule } from '@angular/material/select';\nimport * as i6 from '@angular/material/tooltip';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport * as i5 from '@angular/material/core';\nimport { mixinDisabled, mixinInitialized } from '@angular/material/core';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i3 from '@angular/material/form-field';\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatPaginatorIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatPaginatorIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatPaginatorIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY,\n};\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to _MatPaginatorBase.\n/** @docs-private */\nconst _MatPaginatorMixinBase = mixinDisabled(mixinInitialized(class {\n}));\nlet nextUniqueId = 0;\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorMixinBase {\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() {\n        return this._pageIndex;\n    }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() {\n        return this._length;\n    }\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() {\n        return this._pageSize;\n    }\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() {\n        return this._pageSizeOptions;\n    }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** Whether to hide the page size selection UI from the user. */\n    get hidePageSize() {\n        return this._hidePageSize;\n    }\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /** Whether to show the first/last buttons UI to the user. */\n    get showFirstLastButtons() {\n        return this._showFirstLastButtons;\n    }\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** ID for the DOM node containing the paginator's items per page label. */\n        this._pageSizeLabelId = `mat-paginator-page-size-label-${nextUniqueId++}`;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /** Used to configure the underlying `MatSelect` inside the paginator. */\n        this.selectConfig = {};\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n        this._formFieldAppearance = defaults?.formFieldAppearance || 'outline';\n    }\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex + 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize =\n                this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length,\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatPaginator, deps: [{ token: MatPaginatorIntl }, { token: i0.ChangeDetectorRef }, { token: MAT_PAGINATOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.0.4\", type: MatPaginator, selector: \"mat-paginator\", inputs: { disabled: \"disabled\", color: \"color\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", selectConfig: \"selectConfig\" }, outputs: { page: \"page\" }, host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-mdc-paginator\" }, exportAs: [\"matPaginator\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"firstPage()\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"lastPage()\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color);background-color:var(--mat-paginator-container-background-color);font-family:var(--mat-paginator-container-text-font);line-height:var(--mat-paginator-container-text-line-height);font-size:var(--mat-paginator-container-text-size);font-weight:var(--mat-paginator-container-text-weight);letter-spacing:var(--mat-paginator-container-text-tracking)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size)}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color)}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}\"], dependencies: [{ kind: \"component\", type: i2.MatIconButton, selector: \"button[mat-icon-button]\", exportAs: [\"matButton\"] }, { kind: \"component\", type: i3.MatFormField, selector: \"mat-form-field\", inputs: [\"hideRequiredMarker\", \"color\", \"floatLabel\", \"appearance\", \"subscriptSizing\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { kind: \"component\", type: i4.MatSelect, selector: \"mat-select\", inputs: [\"disabled\", \"disableRipple\", \"tabIndex\", \"aria-describedby\", \"panelClass\", \"hideSingleSelectionIndicator\", \"placeholder\", \"required\", \"multiple\", \"disableOptionCentering\", \"compareWith\", \"value\", \"aria-label\", \"aria-labelledby\", \"errorStateMatcher\", \"typeaheadDebounceInterval\", \"sortComparator\", \"id\", \"panelWidth\"], outputs: [\"openedChange\", \"opened\", \"closed\", \"selectionChange\", \"valueChange\"], exportAs: [\"matSelect\"] }, { kind: \"component\", type: i5.MatOption, selector: \"mat-option\", inputs: [\"value\", \"id\", \"disabled\"], outputs: [\"onSelectionChange\"], exportAs: [\"matOption\"] }, { kind: \"directive\", type: i6.MatTooltip, selector: \"[matTooltip]\", inputs: [\"matTooltipPosition\", \"matTooltipPositionAtOrigin\", \"matTooltipDisabled\", \"matTooltipShowDelay\", \"matTooltipHideDelay\", \"matTooltipTouchGestures\", \"matTooltip\", \"matTooltipClass\"], exportAs: [\"matTooltip\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatPaginator, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-paginator', exportAs: 'matPaginator', inputs: ['disabled'], host: {\n                        'class': 'mat-mdc-paginator',\n                        'role': 'group',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"firstPage()\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"lastPage()\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color);background-color:var(--mat-paginator-container-background-color);font-family:var(--mat-paginator-container-text-font);line-height:var(--mat-paginator-container-text-line-height);font-size:var(--mat-paginator-container-text-size);font-weight:var(--mat-paginator-container-text-weight);letter-spacing:var(--mat-paginator-container-text-tracking)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size)}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color)}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}\"] }]\n        }], ctorParameters: () => [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n                }] }], propDecorators: { color: [{\n                type: Input\n            }], pageIndex: [{\n                type: Input\n            }], length: [{\n                type: Input\n            }], pageSize: [{\n                type: Input\n            }], pageSizeOptions: [{\n                type: Input\n            }], hidePageSize: [{\n                type: Input\n            }], showFirstLastButtons: [{\n                type: Input\n            }], selectConfig: [{\n                type: Input\n            }], page: [{\n                type: Output\n            }] } });\n\nclass MatPaginatorModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatPaginatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: MatPaginatorModule, declarations: [MatPaginator], imports: [MatButtonModule, MatSelectModule, MatTooltipModule], exports: [MatPaginator] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatPaginatorModule, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [MatButtonModule, MatSelectModule, MatTooltipModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatPaginatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatButtonModule, MatSelectModule, MatTooltipModule],\n                    exports: [MatPaginator],\n                    declarations: [MatPaginator],\n                    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n"],"x_google_ignoreList":[4,5]}