{"version":3,"file":"projects_eav-ui_src_app_content-import_content-import_component_ts.ea7deb9899437224.js","mappings":"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","names":["i0","_r10","_r8","click","$event","ctx_r11","fileChange","ctx_r12","formValues","resourcesReferences","ctx_r13","clearEntities","ctx_r14","closeDialog","ctx_r15","evaluateContent","ctx_r3","file","name","ctx_r17","vm_r1","evaluationResult","Detail","DocumentElementsCount","LanguagesInDocumentCount","AttributeNamesInDocument","length","join","AmountOfEntitiesCreated","AmountOfEntitiesUpdated","AmountOfEntitiesDeleted","AttributeNamesNotImported","error_r21","ErrorDetail","LineNumber","LineDetail","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Conditional_0_Conditional_1_For_5_Conditional_3_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Conditional_0_Conditional_1_For_5_Conditional_4_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Conditional_0_Conditional_1_For_5_Conditional_5_Template","ctx_r20","errors","ErrorCode","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Conditional_0_Conditional_1_For_5_Template","ctx_r18","Errors","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Conditional_0_Conditional_0_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Conditional_0_Conditional_1_Template","_r34","ctx_r33","back","ctx_r35","importContent","Success","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Conditional_0_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_3_Conditional_0_Conditional_1_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_3_Conditional_0_Conditional_2_Template","importResult","ContentImportComponent_Conditional_0_Conditional_10_Case_3_Conditional_0_Template","_r43","ctx_r42","ContentImportComponent_Conditional_0_Conditional_10_Case_0_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_1_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_3_Template","ContentImportComponent_Conditional_0_Conditional_10_contFlowTmp","viewStateSelected","_r47","ctx_r46","filesDropped","ContentImportComponent_Conditional_0_Conditional_10_Template","ctx","contentType","Name","ctx_r0","ContentImportComponent","constructor","dialogData","dialogRef","route","contentImportService","appDialogConfigService","contentTypesService","this","hostClass","contentType$","BehaviorSubject","loading$","viewStates","waiting","default","evaluated","imported","viewStateSelected$","evaluationResult$","importResult$","viewModel$","combineLatest","pipe","map","loading","contentTypeStaticName","snapshot","paramMap","get","ngOnInit","next","retrieveContentType","dialogSettings$","getShared$","forkJoin","subscribe","dialogSettings","defaultLanguage","Context","Language","Primary","files","ngOnDestroy","complete","close","result","event","target","static","t","MAT_DIALOG_DATA","i1","i2","i3","i4","i5","_angular_core__WEBPACK_IMPORTED_MODULE_3__","Xpm","selectors","hostVars","hostBindings","rf","ContentImportComponent_Conditional_0_Template","ContentImportComponent_contFlowTmp","DragAndDropDirective","BaseSubsinkComponent","elementRef","zone","snackBar","super","markStyle","allowedFileTypes","EventEmitter","dropAreaClass","dragClass","timeouts","element","nativeElement","markStyleClass","classList","add","runOutsideAngular","subscription","fromEvent","preventDefault","stopPropagation","clearTimeouts","push","window","setTimeout","remove","onDrop","Array","from","dataTransfer","filterTypes","emit","timeout","clearTimeout","allowedTypes","split","type","toLocaleLowerCase","filtered","filter","extIndex","lastIndexOf","ext","substring","includes","allowedTypesString","replace","open","duration","_angular_core__WEBPACK_IMPORTED_MODULE_1__","lG2"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/content-import/content-import.component.html","./projects/eav-ui/src/app/content-import/content-import.component.ts","./projects/eav-ui/src/app/shared/directives/drag-and-drop.directive.ts"],"sourcesContent":["@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog\" appDragAndDrop\r\n    [allowedFileTypes]=\"'xml'\" (filesDropped)=\"filesDropped($event)\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">{{ vm.contentType?.Name }} Import Data</div>\r\n    </div>\r\n    <div class=\"eav-dialog-description\">\r\n      <p>\r\n        This will import content-items into 2sxc. It requires that you already defined the content-type before you try\r\n        importing, and that you created the import-file using the template provided by the Export. Please visit\r\n        <a href=\"https://2sxc.org/help\" target=\"_blank\">https://2sxc.org/help</a> for more instructions.\r\n      </p>\r\n    </div>\r\n    @if (formValues != null) {\r\n      @switch (vm.viewStateSelected) {\r\n        <!-- FORM -->\r\n        @case (1) {\r\n          <form #ngForm=\"ngForm\">\r\n            <div class=\"eav-dialog-content\">\r\n              <div>\r\n                <button mat-raised-button tippy=\"Open file browser\" (click)=\"fileInput.click()\">\r\n                  <span>{{ formValues.file ? formValues.file.name : 'Select or drop file' }}</span>\r\n                </button>\r\n                <input #fileInput type=\"file\" (change)=\"fileChange($event)\" class=\"hide\" />\r\n              </div>\r\n              <div>\r\n                <p class=\"eav-radio-group-label\">References to pages / files</p>\r\n                <mat-radio-group class=\"eav-radio-group\" [(ngModel)]=\"formValues.resourcesReferences\" name=\"ResourcesReferences\">\r\n                  <mat-radio-button value=\"Keep\">\r\n                    Import links as written in the file (for example /Portals/...)\r\n                  </mat-radio-button>\r\n                  <mat-radio-button value=\"Resolve\">\r\n                    Try to resolve paths to references\r\n                  </mat-radio-button>\r\n                </mat-radio-group>\r\n              </div>\r\n              <div>\r\n                <p class=\"eav-radio-group-label\">Clear all other entities</p>\r\n                <mat-radio-group class=\"eav-radio-group\" [(ngModel)]=\"formValues.clearEntities\" name=\"ClearEntities\">\r\n                  <mat-radio-button value=\"None\">\r\n                    Keep all entities not found in import\r\n                  </mat-radio-button>\r\n                  <mat-radio-button value=\"All\">\r\n                    Remove all entities not found in import\r\n                  </mat-radio-button>\r\n                </mat-radio-group>\r\n              </div>\r\n              <p class=\"eav-hint\">Remember to backup your DNN first!</p>\r\n            </div>\r\n            <mat-dialog-actions align=\"end\">\r\n              <button mat-raised-button (click)=\"closeDialog()\">Cancel</button>\r\n              <button mat-raised-button color=\"accent\" [disabled]=\"!formValues.file || !formValues.file.name\"\r\n                (click)=\"evaluateContent()\">\r\n                Preview Import\r\n              </button>\r\n            </mat-dialog-actions>\r\n          </form>\r\n        }\r\n        <!-- END FORM -->\r\n        <!-- WAITING -->\r\n        @case (0) {\r\n          <div class=\"eav-dialog-content\">\r\n            <p>Please wait while processing...</p>\r\n          </div>\r\n        }\r\n        <!-- END WAITING -->\r\n        <!-- EVALUATION RESULT -->\r\n        @case (2) {\r\n          @if (vm.evaluationResult) {\r\n            <!-- DETAILS / STATISTICS -->\r\n            @if (vm.evaluationResult.Success) {\r\n              <div class=\"eav-dialog-content\">\r\n                <p class=\"eav-evaluation__title\">Try to import file '{{ formValues.file.name }}'</p>\r\n                <p class=\"eav-evaluation__title\">File contains:</p>\r\n                <ul class=\"eav-evaluation__content\">\r\n                  <li>{{ vm.evaluationResult.Detail.DocumentElementsCount }} content-items (records/entities)</li>\r\n                  <li>{{ vm.evaluationResult.Detail.LanguagesInDocumentCount }} languages</li>\r\n                  <li>{{ vm.evaluationResult.Detail.AttributeNamesInDocument.length }} columns:\r\n                  {{ vm.evaluationResult.Detail.AttributeNamesInDocument.join(', ') }}</li>\r\n                </ul>\r\n                <p class=\"eav-evaluation__title\">If you press Import, it will:</p>\r\n                <ul class=\"eav-evaluation__content\">\r\n                  <li>Create {{ vm.evaluationResult.Detail.AmountOfEntitiesCreated }} content-items</li>\r\n                  <li>Update {{ vm.evaluationResult.Detail.AmountOfEntitiesUpdated }} content-items</li>\r\n                  <li>Delete {{ vm.evaluationResult.Detail.AmountOfEntitiesDeleted }} content-items</li>\r\n                  <li>Ignore {{ vm.evaluationResult.Detail.AttributeNamesNotImported.length }} columns:\r\n                  {{ vm.evaluationResult.Detail.AttributeNamesNotImported.join(', ') }}</li>\r\n                </ul>\r\n                <p class=\"eav-hint\">Note: The import validates much data and may take several minutes.</p>\r\n              </div>\r\n            }\r\n            <!-- END DETAILS / STATISTICS -->\r\n            <!-- ERRORS -->\r\n            @if (!vm.evaluationResult.Success) {\r\n              <div class=\"eav-dialog-content\">\r\n                <p class=\"eav-evaluation__title\">Try to import file '{{ formValues.file.name }}'</p>\r\n                <ul class=\"eav-evaluation__content\">\r\n                  @for (error of vm.evaluationResult.Errors; track error) {\r\n                    <li>\r\n                      <div>{{ errors[error.ErrorCode] }}</div>\r\n                      @if (error.ErrorDetail) {\r\n                        <div><i>Details: {{ error.ErrorDetail }}</i></div>\r\n                      }\r\n                      @if (error.LineNumber) {\r\n                        <div><i>Line-no: {{ error.LineNumber }}</i></div>\r\n                      }\r\n                      @if (error.LineDetail) {\r\n                        <div><i>Line-details: {{ error.LineDetail }}</i></div>\r\n                      }\r\n                    </li>\r\n                  }\r\n                </ul>\r\n              </div>\r\n            }\r\n            <!-- END ERRORS -->\r\n            <mat-dialog-actions align=\"end\">\r\n              <button mat-raised-button (click)=\"back()\">Back</button>\r\n              <button mat-raised-button color=\"accent\" [disabled]=\"!vm.evaluationResult.Success\" (click)=\"importContent()\">\r\n                Import\r\n              </button>\r\n            </mat-dialog-actions>\r\n          }\r\n        }\r\n        <!-- END EVALUATION RESULT -->\r\n        <!-- IMPORT RESULT -->\r\n        @case (3) {\r\n          @if (vm.importResult) {\r\n            <div class=\"eav-dialog-content\">\r\n              @if (vm.importResult.Success) {\r\n                <p>Import done.</p>\r\n              }\r\n              @if (!vm.importResult.Success) {\r\n                <p>Import failed.</p>\r\n              }\r\n            </div>\r\n          }\r\n          <mat-dialog-actions align=\"end\">\r\n            <button mat-raised-button color=\"accent\" (click)=\"closeDialog()\">Close</button>\r\n          </mat-dialog-actions>\r\n        }\r\n        <!-- END IMPORT RESULT -->\r\n      }\r\n    }\r\n  </div>\r\n}","import { Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, forkJoin, map } from 'rxjs';\r\nimport { ContentType } from '../app-administration/models/content-type.model';\r\nimport { AppDialogConfigService } from '../app-administration/services/app-dialog-config.service';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { ContentImportDialogData } from './content-import-dialog.config';\r\nimport { ContentImport, EvaluateContentResult, ImportContentResult } from './models/content-import.model';\r\nimport { ContentImportService } from './services/content-import.service';\r\n\r\n@Component({\r\n  selector: 'app-content-import',\r\n  templateUrl: './content-import.component.html',\r\n  styleUrls: ['./content-import.component.scss'],\r\n})\r\nexport class ContentImportComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  formValues: ContentImport;\r\n  private contentType$ = new BehaviorSubject<ContentType>(null);\r\n  private loading$ = new BehaviorSubject(false);\r\n  private viewStates = {\r\n    waiting: 0,\r\n    default: 1,\r\n    evaluated: 2,\r\n    imported: 3,\r\n  };\r\n  private viewStateSelected$ = new BehaviorSubject<number>(this.viewStates.default);\r\n  private evaluationResult$ = new BehaviorSubject<EvaluateContentResult>(null);\r\n  private importResult$ = new BehaviorSubject<ImportContentResult>(null);\r\n  viewModel$ = combineLatest([\r\n    this.contentType$, this.loading$, this.viewStateSelected$, this.evaluationResult$, this.importResult$,\r\n  ]).pipe(\r\n    map(([contentType, loading, viewStateSelected, evaluationResult, importResult]) =>\r\n      ({ contentType, loading, viewStateSelected, evaluationResult, importResult })),\r\n  );\r\n  errors: Record<number, string> = {\r\n    0: 'Unknown error occured.',\r\n    1: 'Selected content-type does not exist.',\r\n    2: 'Document is not a valid XML file.',\r\n    3: 'Selected content-type does not match the content-type in the XML file.',\r\n    4: 'The language is not supported.',\r\n    5: 'The document does not specify all languages for all entities.',\r\n    6: 'Language reference cannot be parsed, the language is not supported.',\r\n    7: 'Language reference cannot be parsed, the read-write protection is not supported.',\r\n    8: 'Value cannot be read, because of it has an invalid format.'\r\n  };\r\n\r\n  private contentTypeStaticName = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: ContentImportDialogData,\r\n    private dialogRef: MatDialogRef<ContentImportComponent>,\r\n    private route: ActivatedRoute,\r\n    private contentImportService: ContentImportService,\r\n    private appDialogConfigService: AppDialogConfigService,\r\n    private contentTypesService: ContentTypesService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loading$.next(true);\r\n    const contentType$ = this.contentTypesService.retrieveContentType(this.contentTypeStaticName);\r\n    const dialogSettings$ = this.appDialogConfigService.getShared$(); // .getDialogSettings();\r\n    forkJoin([contentType$, dialogSettings$]).subscribe(([contentType, dialogSettings]) => {\r\n      this.contentType$.next(contentType);\r\n      this.formValues = {\r\n        defaultLanguage: dialogSettings.Context.Language.Primary,\r\n        contentType: this.contentTypeStaticName,\r\n        file: this.dialogData.files != null ? this.dialogData.files[0] : null,\r\n        resourcesReferences: 'Keep',\r\n        clearEntities: 'None',\r\n      };\r\n      this.loading$.next(false);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.contentType$.complete();\r\n    this.loading$.complete();\r\n    this.viewStateSelected$.complete();\r\n    this.evaluationResult$.complete();\r\n    this.importResult$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  evaluateContent() {\r\n    this.viewStateSelected$.next(this.viewStates.waiting);\r\n    this.contentImportService.evaluateContent(this.formValues).subscribe(result => {\r\n      this.evaluationResult$.next(result);\r\n      this.viewStateSelected$.next(this.viewStates.evaluated);\r\n    });\r\n  }\r\n\r\n  importContent() {\r\n    this.viewStateSelected$.next(this.viewStates.waiting);\r\n    this.contentImportService.importContent(this.formValues).subscribe(result => {\r\n      this.importResult$.next(result);\r\n      this.viewStateSelected$.next(this.viewStates.imported);\r\n    });\r\n  }\r\n\r\n  back() {\r\n    this.viewStateSelected$.next(this.viewStates.default);\r\n    this.evaluationResult$.next(null);\r\n  }\r\n\r\n  fileChange(event: Event) {\r\n    this.formValues.file = (event.target as HTMLInputElement).files[0];\r\n  }\r\n\r\n  filesDropped(files: File[]) {\r\n    const importFile = files[0];\r\n    this.formValues.file = importFile;\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, HostListener, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { BaseSubsinkComponent } from '../components/base-subsink-component/base-subsink.component';\r\n\r\n@Directive({ selector: '[appDragAndDrop]' })\r\nexport class DragAndDropDirective extends BaseSubsinkComponent implements OnInit, OnDestroy {\r\n  @Input() markStyle: 'outline' | 'fill' | 'shadow' = 'outline';\r\n  /** Comma separated file types, e.g. 'txt,doc,docx' */\r\n  @Input() allowedFileTypes = '';\r\n  @Output() private filesDropped = new EventEmitter<File[]>();\r\n\r\n  private element: HTMLElement;\r\n  private dropAreaClass = 'eav-droparea';\r\n  private markStyleClass: string;\r\n  private dragClass = 'eav-dragover';\r\n  private timeouts: number[] = [];\r\n\r\n  constructor(elementRef: ElementRef, private zone: NgZone, private snackBar: MatSnackBar) {\r\n    super();\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.markStyleClass = `eav-droparea-${this.markStyle}`;\r\n    this.element.classList.add(this.dropAreaClass, this.markStyleClass);\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscription.add(\r\n        fromEvent<DragEvent>(this.element, 'dragover').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.clearTimeouts();\r\n          this.element.classList.add(this.dragClass);\r\n        })\r\n      );\r\n      this.subscription.add(\r\n        fromEvent<DragEvent>(this.element, 'dragleave').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.timeouts.push(\r\n            window.setTimeout(() => { this.element.classList.remove(this.dragClass); }, 50)\r\n          );\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dropAreaClass, this.markStyleClass, this.dragClass);\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(event: DragEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dragClass);\r\n    const fileList = event.dataTransfer.files;\r\n    let files = Array.from(fileList);\r\n    files = this.filterTypes(files, this.allowedFileTypes);\r\n    if (files.length > 0) {\r\n      this.filesDropped.emit(files);\r\n    }\r\n  }\r\n\r\n  private clearTimeouts() {\r\n    for (const timeout of this.timeouts) {\r\n      clearTimeout(timeout);\r\n    }\r\n    this.timeouts = [];\r\n  }\r\n\r\n  private filterTypes(files: File[], allowedFileTypes: string) {\r\n    if (allowedFileTypes === '') { return files; }\r\n\r\n    const allowedTypes = allowedFileTypes.split(',').map(type => type.toLocaleLowerCase());\r\n    const filtered = files.filter(file => {\r\n      const extIndex = file.name.lastIndexOf('.');\r\n      if (extIndex <= 0) { return false; }\r\n      const ext = file.name.substring(extIndex + 1).toLocaleLowerCase();\r\n      const allowed = allowedTypes.includes(ext);\r\n      return allowed;\r\n    });\r\n\r\n    if (files.length !== filtered.length) {\r\n      const allowedTypesString = this.allowedFileTypes.replace(/\\,/g, ', ');\r\n      const message = filtered.length\r\n        ? 'Some files were filtered out. This drop location only accepts file types: ' + allowedTypesString\r\n        : 'This drop location only accepts file types: ' + allowedTypesString;\r\n      this.snackBar.open(message, null, { duration: 5000 });\r\n    }\r\n    return filtered;\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}