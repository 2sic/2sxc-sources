{"version":3,"file":"projects_eav-ui_src_app_features_features_module_ts-projects_eav-ui_src_app_shared_components-86af18.ea927f8e74bf529c.js","mappings":"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","names":["FeaturesModule","static","this","t","_angular_core__WEBPACK_IMPORTED_MODULE_0__","oAB","cJS","FeatureDetailService","imports","CommonModule","MatButtonModule","MatIconModule","MatCardModule","SharedComponentsModule","TranslateModule","forChild","buildTranslateConfiguration","translateLoaderFactory","constructor","http","dnnContext","getFeatureDetails","featureNameId","get","$2sxc","apiUrl","webApiRoot","params","nameId","i0","i1","i2","Yz7","factory","Éµfac","FieldHintComponent_Case_1_ng_container_1_Template","_r3","FieldHintComponent_Case_2_ng_container_1_Template","FieldHintComponent","isError","isShort","toggleIsShort","Xpm","selectors","inputs","ngContentSelectors","_c1","decls","vars","consts","template","rf","ctx","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c0","FieldHintComponent_contFlowTmp","ClickStopPropagationDirective","onClick","event","stopPropagation","lG2","hostBindings","$event","SafeHtmlPipe","sanitizer","transform","html","bypassSecurityTrustHtml","Yjl","pure","loader","provide","TranslateLoader","useFactory","deps","HttpClient","defaultLanguage","isolate","TranslateLoaderWithErrorHandling","window","sxcVersion","prefix","suffix","getTranslation","lang","pipe","catchError","error","console","warn","of"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/features/features.module.ts","./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/pipes/safe-html.pipe.ts","./projects/eav-ui/src/app/shared/translation/translate-configuration.ts","./projects/eav-ui/src/app/shared/translation/translate-loader-factory.ts","./projects/eav-ui/src/app/shared/translation/translate-loader-with-error-handling.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FeatureIconTextComponent } from './feature-icon-text/feature-icon-text.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { buildTranslateConfiguration } from '../shared/translation';\r\nimport { translateLoaderFactory } from '../shared/translation/translate-loader-factory';\r\nimport { FeatureInfoDialogComponent } from './feature-info-dialog/feature-info-dialog.component';\r\nimport { FeatureIconComponent } from './feature-icon/feature-icon.component';\r\nimport { FeatureTextInfoComponent } from './feature-text-info/feature-text-info.component';\r\nimport { FeatureIconIndicatorComponent } from './feature-icon-indicator/feature-icon-indicator.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { FeatureDetailService } from './services/feature-detail.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FeatureIconComponent,\r\n    FeatureIconTextComponent,\r\n    FeatureInfoDialogComponent,\r\n    FeatureTextInfoComponent,\r\n    FeatureIconIndicatorComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    SharedComponentsModule,\r\n    TranslateModule.forChild(buildTranslateConfiguration(translateLoaderFactory)),\r\n  ],\r\n  exports: [\r\n    FeatureIconComponent,\r\n    FeatureIconTextComponent,\r\n    FeatureInfoDialogComponent,\r\n    FeatureTextInfoComponent,\r\n    FeatureIconIndicatorComponent,\r\n  ],\r\n  providers: [\r\n    FeatureDetailService\r\n  ]\r\n})\r\nexport class FeaturesModule { }\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Feature } from '../models';\r\n\r\nexport const webApiRoot = \"admin/feature/\";\r\n\r\n@Injectable()\r\nexport class FeatureDetailService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private dnnContext: DnnContext\r\n  ) { }\r\n\r\n  getFeatureDetails(featureNameId: string): Observable<Feature> {\r\n    return this.http.get<Feature>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot + 'details'), {\r\n      params: { nameId: featureNameId }\r\n    });\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({ selector: '[appClickStopPropagation]' })\r\nexport class ClickStopPropagationDirective {\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeHtml' })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader, TranslateModuleConfig } from '@ngx-translate/core';\r\n\r\nexport function buildTranslateConfiguration(factory: (http: HttpClient) => TranslateLoader): TranslateModuleConfig {\r\n  const config: TranslateModuleConfig = {\r\n    loader: {\r\n      provide: TranslateLoader,\r\n      useFactory: factory,\r\n      deps: [HttpClient],\r\n    },\r\n    defaultLanguage: 'en',\r\n    isolate: true,\r\n  };\r\n  return config;\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { TranslateLoader } from \"@ngx-translate/core\";\r\nimport { EavWindow } from \"../models/eav-window.model\";\r\nimport { TranslateLoaderWithErrorHandling } from \"./translate-loader-with-error-handling\";\r\n\r\ndeclare const window: EavWindow;\r\n\r\n// AoT requires an exported function for factories\r\n// at least according to https://github.com/ngx-translate/http-loader\r\nexport function translateLoaderFactory(http: HttpClient): TranslateLoader {\r\n    return new TranslateLoaderWithErrorHandling(http, './i18n/', `.js?${window.sxcVersion}`);\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader } from '@ngx-translate/core';\r\nimport { catchError, Observable, of } from 'rxjs';\r\n\r\n/**\r\n * This loader should catch a 404 if the file doesn't exist and not result in errors.\r\n * https://stackoverflow.com/questions/47391613/how-to-set-a-fallback-assets-i18n-en-json-when-url-is-not-available-ngx-trans\r\n */\r\nexport class TranslateLoaderWithErrorHandling implements TranslateLoader {\r\n  constructor(private http: HttpClient, private prefix: string, private suffix: string) { }\r\n\r\n  getTranslation(lang: string): Observable<Record<string, any>> {\r\n    return this.http.get<Record<string, any>>(`${this.prefix}${lang}${this.suffix}`).pipe(\r\n      catchError(error => {\r\n        console.warn(`Translation: Failed to get language '${lang}' from ${this.prefix}`, error);\r\n        return of({});\r\n      }),\r\n    );\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}