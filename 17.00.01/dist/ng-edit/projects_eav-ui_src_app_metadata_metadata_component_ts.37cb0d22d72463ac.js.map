{"version":3,"file":"projects_eav-ui_src_app_metadata_metadata_component_ts.37cb0d22d72463ac.js","mappings":"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","names":["AppDialogConfigService","constructor","http","context","dnnContext","globalConfigService","featuresService","this","dialogSettings$","loadFromService","getShared$","appId","getDialogSettings","pipe","shareReplay","refCount","get","$2sxc","apiUrl","webApiDialogRoot","params","toString","map","dialogSettings","Context","Language","List","filter","language","IsEnabled","tap","allowDebug","Enable","DebugMode","static","t","i0","i1","i2","i3","i4","i5","_angular_core__WEBPACK_IMPORTED_MODULE_5__","Yz7","factory","ɵfac","ExportAppPartsService","getContentInfo","scope","webApiAppPartsRoot","appid","zoneId","exportParts","contentTypeIds","entityIds","templateIds","url","join","window","open","_angular_core__WEBPACK_IMPORTED_MODULE_2__","ExportAppService","getAppInfo","webApiAppRoot","exportApp","includeContentGroups","resetAppGuid","exportForVersionControl","withFiles","withPortalFiles","ImportAppPartsService","importAppParts","file","formData","FormData","append","post","resetApp","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","contentType","webApiEntityList","importQuery","from","toBase64","switchMap","fileBase64","AppId","ContentBase64","success","Success","Messages","clonePipeline","id","Id","delete","_angular_core__WEBPACK_IMPORTED_MODULE_6__","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","import","export","getPolymorphism","getUsage","guid","_angular_core__WEBPACK_IMPORTED_MODULE_1__","ContentItemsService","contentTypeStaticName","getColumns","webApiFieldsAll","staticName","importItem","webApiEntityRoot","_angular_core__WEBPACK_IMPORTED_MODULE_7__","FeatureDetailService","getFeatureDetails","featureNameId","webApiRoot","nameId","_angular_core__WEBPACK_IMPORTED_MODULE_0__","id_r4","_r6","ctx_r5","copyToClipboard","ctx","link_r7","_r9","ctx_r8","findOutMore","FeatureInfoDialogComponent_Conditional_0_Conditional_15_Template","FeatureInfoDialogComponent_Conditional_0_Conditional_17_Template","_r11","ctx_r10","closeDialog","feature","Name","Description","FeatureInfoDialogComponent_Conditional_0_contFlowTmp","NameId","Link","FeatureInfoDialogComponent","dialogData","dialogRef","snackBar","featureDetailService","ngOnInit","viewModel$","combineLatest","text","duration","link","close","MAT_DIALOG_DATA","core","Xpm","selectors","decls","vars","consts","template","rf","FeatureInfoDialogComponent_Conditional_0_Template","FeatureInfoDialogComponent_contFlowTmp","FeatureComponentBase","value","featureNameId$","next","showIf","showIf$","dialog","viewContainerRef","changeDetectorRef","BehaviorSubject","feature$","featName","get$","show$","feat","openDialog","featureId","autoFocus","data","width","markForCheck","lG2","inputs","ImportAppService","importApp","changedName","retryOnDuplicate","result","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","of","_angular_core__WEBPACK_IMPORTED_MODULE_4__","ctx_r0","message","ConfirmDeleteDialogComponent","hostClass","confirm","hostVars","hostBindings","ConfirmDeleteDialogComponent_Conditional_4_Template","entityTitle","entityId","MetadataActionsComponent","agInit","refresh","deleteMetadata","onDelete","MetadataContentTypeComponent","metadata","_Type","scopeOption_r7","name","MetadataSaveDialogComponent_Conditional_0_Conditional_11_For_5_Template","vm_r1","scopeOptions","length","ctx_r2","dropdownInsertValue","contentType_r14","StaticName","Label","MetadataSaveDialogComponent_Conditional_0_Conditional_15_For_2_Template","contentTypes","MetadataSaveDialogComponent_Conditional_0_Conditional_11_Template","MetadataSaveDialogComponent_Conditional_0_Conditional_15_Template","MetadataSaveDialogComponent_Conditional_0_Conditional_16_Template","_r21","ctx_r20","toggleGuidedContentType","ctx_r22","MetadataSaveDialogComponent_Conditional_0_Conditional_24_Template","$event","ctx_r23","toggleAdvancedMode","ctx_r24","ctx_r25","form","advancedMode","guidedContentType","_c0","controls","touched","errors","required","valid","MetadataSaveDialogComponent","contentTypesService","contentTypes$","scopeOptions$","buildForm","fetchScopes","ngOnDestroy","complete","event","checked","formValues","getRawValue","UntypedFormGroup","addControl","UntypedFormControl","Validators","eavConstants","scopes","default","valueChanges","startWith","distinctUntilChanged","subscribe","newScope","patchValue","some","option","fetchContentTypes","retrieveContentTypes","getScopes","MetadataSaveDialogComponent_Conditional_0_Template","MetadataSaveDialogComponent_contFlowTmp","itemFor","Number","Guid","String","MetadataComponent_Conditional_0_Conditional_10_Conditional_5_Template","MetadataComponent_Conditional_0_Conditional_10_Conditional_6_Template","MetadataComponent_Conditional_0_Conditional_10_Conditional_7_Template","MetadataComponent_Conditional_0_Conditional_10_Conditional_8_Template","Target","TargetType","Title","_r16","ctx_r15","createMetadata","recommendation_r18","Icon","Enabled","_r27","$implicit","ctx_r26","MetadataComponent_Conditional_0_Conditional_16_For_10_Conditional_1_Template","MetadataComponent_Conditional_0_Conditional_16_For_10_Conditional_2_Template","_r29","ctx_r28","openChange","ctx_r30","MetadataComponent_Conditional_0_Conditional_16_For_10_Template","fabOpen","recommendations","_r33","ctx_r32","MetadataComponent_Conditional_0_Conditional_9_Template","MetadataComponent_Conditional_0_Conditional_10_Template","MetadataComponent_Conditional_0_Conditional_15_Template","MetadataComponent_Conditional_0_Conditional_16_Template","title","gridOptions","MetadataComponent","BaseComponent","router","route","metadataService","entitiesService","contentItemsService","super","buildGridOptions","metadata$","recommendations$","itemFor$","undefined","fabOpen$","targetType","parseInt","snapshot","paramMap","keyType","key","decodeURIComponent","fetchFor","fetchMetadata","subscription","add","refreshOnChildClosedShallow","filteredRecommendations$","metadataItems","r","i","Count","recommendation","CreateEmpty","create","For","calculateItemFor","error","createMetadataForm","MissingFeature","afterClosed","items","ContentTypeName","formUrl","convertFormToUrl","navigate","relativeTo","Object","values","find","m","target","keyTypes","number","string","item","getMetadata","Recommendations","forEach","startsWith","replace","atob","Items","editMetadata","EntityId","confirmed","DeleteWarning","isConfirmed","defaultGridOptions","columnDefs","headerName","field","headerClass","cellClass","split","sortable","valueGetter","cellRenderer","IdFieldComponent","cellRendererParams","tooltipGetter","flex","minWidth","sort","onCellClicked","pinned","i6","features","MetadataComponent_Conditional_0_Template","MetadataComponent_contFlowTmp","FieldHintComponent_Case_1_ng_container_1_Template","_r3","FieldHintComponent_Case_2_ng_container_1_Template","FieldHintComponent","isError","isShort","toggleIsShort","ngContentSelectors","_c1","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","FieldHintComponent_contFlowTmp","ClickStopPropagationDirective","onClick","stopPropagation","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","readAsText"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/app-dialog-config.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/content-items/services/content-items.service.ts","./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/metadata/confirm-delete-dialog/confirm-delete-dialog.component.html","./projects/eav-ui/src/app/metadata/confirm-delete-dialog/confirm-delete-dialog.component.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.html","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.ts","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.ts","./projects/eav-ui/src/app/metadata/metadata.component.html","./projects/eav-ui/src/app/metadata/metadata.component.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable, shareReplay, tap } from 'rxjs';\r\nimport { GlobalConfigService } from '../../edit/shared/store/ngrx-data';\r\nimport { DialogSettings } from '../../shared/models/dialog-settings.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\n\r\nconst webApiDialogRoot = 'admin/dialog/';\r\n\r\n@Injectable()\r\nexport class AppDialogConfigService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private context: Context,\r\n    private dnnContext: DnnContext,\r\n    private globalConfigService: GlobalConfigService,\r\n    featuresService: FeaturesService,\r\n  ) {\r\n    featuresService.loadFromService(this);\r\n  }\r\n\r\n  private dialogSettings$: Record<number, Observable<DialogSettings>> = {};\r\n\r\n  getShared$(appId?: number) {\r\n    appId ??= this.context.appId;\r\n    if (!this.dialogSettings$[appId])\r\n      this.dialogSettings$[appId] = this.getDialogSettings(appId).pipe(shareReplay({ refCount: false }));\r\n    return this.dialogSettings$[appId];\r\n    // TODO: probably should add an onDestroy and ensure all subscriptions are killed\r\n  }\r\n\r\n  getDialogSettings(appId?: number) {\r\n    return this.http.get<DialogSettings>(this.dnnContext.$2sxc.http.apiUrl(webApiDialogRoot + 'settings'), {\r\n      params: { appId: appId ?? this.context.appId.toString() },\r\n    }).pipe(\r\n      map(dialogSettings => {\r\n        dialogSettings.Context.Language.List = dialogSettings.Context.Language.List.filter(language => language.IsEnabled);\r\n        return dialogSettings;\r\n      }),\r\n      tap(dialogSettings => {\r\n        this.globalConfigService.allowDebug(dialogSettings.Context.Enable.DebugMode);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\n\r\n@Injectable()\r\nexport class ExportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getContentInfo(scope: string) {\r\n    return this.http.get<ContentInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Get'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString(), scope },\r\n    });\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.context.appId.toString()\r\n      + '&zoneId=' + this.context.zoneId.toString()\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AppInfo } from '../models/app-info.model';\r\n\r\n@Injectable()\r\nexport class ExportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAppInfo() {\r\n    return this.http.get<AppInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Statistics'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString() },\r\n    });\r\n  }\r\n\r\n  exportApp(includeContentGroups: boolean, resetAppGuid: boolean) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Export')\r\n      + '?appId=' + this.context.appId\r\n      + '&zoneId=' + this.context.zoneId\r\n      + '&includeContentGroups=' + includeContentGroups\r\n      + '&resetAppGuid=' + resetAppGuid;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'SaveData'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { webApiEntityList } from '../../edit/shared/services';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Query } from '../models/query.model';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get<Query[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryImport), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViews), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.context.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.dnnContext.$2sxc.http.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.context.appId.toString(), guid }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { Field } from '../../content-type-fields/models/field.model';\r\nimport { webApiFieldsAll } from '../../content-type-fields/services/content-types-fields.service';\r\nimport { webApiEntityList, webApiEntityRoot } from '../../edit/shared/services';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentItem } from '../models/content-item.model';\r\n\r\n@Injectable()\r\nexport class ContentItemsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentTypeStaticName: string) {\r\n    return this.http.get<ContentItem[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  getColumns(contentTypeStaticName: string) {\r\n    return this.http.get<Field[]>(this.dnnContext.$2sxc.http.apiUrl(webApiFieldsAll), {\r\n      params: { appId: this.context.appId.toString(), staticName: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  importItem(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'upload'), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Feature } from '../models';\r\n\r\nexport const webApiRoot = \"admin/feature/\";\r\n\r\n@Injectable()\r\nexport class FeatureDetailService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private dnnContext: DnnContext\r\n  ) { }\r\n\r\n  getFeatureDetails(featureNameId: string): Observable<Feature> {\r\n    return this.http.get<Feature>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot + 'details'), {\r\n      params: { nameId: featureNameId }\r\n    });\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ vm.feature.Name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"vm.feature.Description | safeHtml\"></p>\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ \"Features.Status\" | translate }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ (vm.feature.IsEnabled ? \"Features.Active\" : \"Features.NotActive\") | translate }}</span>\r\n        </div>\r\n      </div>\r\n      @if (vm.feature.NameId; as id) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">ID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      @if (vm.feature.Link; as link) {\r\n        <button mat-raised-button color=\"accent\"\r\n          class=\"eav-card-action-button\" (click)=\"findOutMore(link)\">\r\n          <mat-icon>open_in_new</mat-icon>\r\n          {{ \"Features.FindOutMore\" | translate }}\r\n        </button>\r\n      }\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">\r\n        {{ \"Features.Close\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable, combineLatest, map } from 'rxjs';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { Feature } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\n\r\n@Component({\r\n  selector: 'app-feature-info-dialog',\r\n  templateUrl: './feature-info-dialog.component.html',\r\n  styleUrls: ['./feature-info-dialog.component.scss']\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  viewModel$: Observable<FeatureInfoViewModel>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    private dialogRef: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private featureDetailService: FeatureDetailService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.viewModel$ = combineLatest([\r\n      this.featureDetailService.getFeatureDetails(this.dialogData)\r\n    ]).pipe(map(([feature]) => ({ feature })));\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  findOutMore(link: string): void { \r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\r\ninterface FeatureInfoViewModel {\r\n  feature: Feature;\r\n}","import { ChangeDetectorRef, Directive, Input, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { BehaviorSubject, switchMap, Observable, map, combineLatest } from 'rxjs';\r\nimport { FeatureSummary } from '../models';\r\n\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n  /** Feature NameId to check */\r\n  @Input()\r\n  public set featureNameId(value: string) { this.featureNameId$.next(value); }\r\n  protected featureNameId$ = new BehaviorSubject<string>(null);\r\n\r\n  /** By default, it will show if it's false - here we can change it to show if true */\r\n  @Input()\r\n  public set showIf(value: boolean) { this.showIf$.next(value == true); }\r\n  protected showIf$ = new BehaviorSubject<boolean>(false);\r\n\r\n  // TODO: @SDV - MAKE REACTIVE - SEE text-info-component example\r\n  // featureOn: boolean = true;\r\n  feature$: Observable<FeatureSummary>;\r\n  show$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    protected featuresService: FeaturesService\r\n  ) {\r\n    this.feature$ = this.featureNameId$.pipe(\r\n      switchMap(featName => this.featuresService.get$(featName)\r\n    ));\r\n    this.show$ = combineLatest([this.feature$, this.showIf$]).pipe(\r\n      // tap(data => console.log('2dm - show$', data)),\r\n      map(([feat,showIf]) => showIf == (feat?.IsEnabled ?? false))\r\n    );\r\n  }\r\n\r\n  openDialog() {\r\n    FeatureComponentBase.openDialog(this.dialog, this.featureNameId$.value, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n\r\n  /** Public/Static so it can be called from elsewhere */\r\n  public static openDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n    dialog.open(FeatureInfoDialogComponent, {\r\n      autoFocus: false,\r\n      data: featureId,\r\n      viewContainerRef: viewContainerRef,\r\n      width: '400px',\r\n    });\r\n\r\n    changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>Delete {{ dialogData.entityTitle }} ({{ dialogData.entityId }})?</mat-card-title>\r\n    @if (dialogData.message) {\r\n      <mat-card-subtitle [innerHtml]=\"dialogData.message | safeHtml\"></mat-card-subtitle>\r\n    }\r\n  </mat-card-header>\r\n  <mat-card-actions align=\"end\">\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog(true)\">Delete</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, HostBinding, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ConfirmDeleteDialogData } from './confirm-delete-dialog.models';\r\n\r\n@Component({\r\n  selector: 'app-confirm-delete-dialog',\r\n  templateUrl: './confirm-delete-dialog.component.html',\r\n  styleUrls: ['./confirm-delete-dialog.component.scss'],\r\n})\r\nexport class ConfirmDeleteDialogComponent {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: ConfirmDeleteDialogData,\r\n    private dialogRef: MatDialogRef<ConfirmDeleteDialogComponent>,\r\n  ) { }\r\n\r\n  closeDialog(confirm?: boolean) {\r\n    this.dialogRef.close(confirm);\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MetadataItem } from '../models/metadata.model';\r\nimport { MetadataActionsParams } from './metadata-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-metadata-actions',\r\n  templateUrl: './metadata-actions.component.html',\r\n  styleUrls: ['./metadata-actions.component.scss'],\r\n})\r\nexport class MetadataActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & MetadataActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & MetadataActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deleteMetadata(): void {\r\n    const metadata: MetadataItem = this.params.data;\r\n    this.params.onDelete(metadata);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deleteMetadata()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MetadataItem } from '../models/metadata.model';\r\n\r\n@Component({\r\n  selector: 'app-metadata-content-type',\r\n  templateUrl: './metadata-content-type.component.html',\r\n  styleUrls: ['./metadata-content-type.component.scss'],\r\n})\r\nexport class MetadataContentTypeComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n  metadata: MetadataItem;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.metadata = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"container\" [tippy]=\"metadata._Type.Description\" [tippyDisabled]=\"!metadata._Type.Description\">\r\n  {{ value }}\r\n</div>\r\n","@if (viewModel$ | async; as vm) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>Create Metadata</mat-card-title>\r\n      <mat-card-subtitle>\r\n        This is a special operation to add an item which is metadata for another item,\r\n        see <a href=\"https://go.2sxc.org/metadata\" target=\"_blank\">docs</a>.\r\n      </mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <form [formGroup]=\"form\">\r\n        <!-- Scope -->\r\n        @if (advancedMode && guidedContentType) {\r\n          <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n            <mat-label>Scope</mat-label>\r\n            <mat-select formControlName=\"scope\" [placeholder]=\"!vm.scopeOptions.length ? 'No items found' : ''\">\r\n              @for (scopeOption of vm.scopeOptions; track scopeOption) {\r\n                <mat-option [value]=\"scopeOption.value\">\r\n                  {{ scopeOption.name }}\r\n                </mat-option>\r\n              }\r\n              <mat-option [value]=\"dropdownInsertValue\">Other...</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <app-field-hint>\r\n            The scope should almost never be changed -\r\n            <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n          </app-field-hint>\r\n        }\r\n        <!-- Content Type of metadata item -->\r\n        <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n          <mat-label>Content Type</mat-label>\r\n          @if (guidedContentType) {\r\n            <mat-select formControlName=\"contentType\" required\r\n              [placeholder]=\"!vm.contentTypes.length ? 'No items found' : ''\">\r\n              @for (contentType of vm.contentTypes; track contentType) {\r\n                <mat-option [value]=\"contentType.StaticName\">\r\n                  {{ contentType.Label }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          }\r\n          @if (!guidedContentType) {\r\n            <input matInput type=\"text\" formControlName=\"contentType\" required>\r\n          }\r\n          <div matTextSuffix>\r\n            <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': guidedContentType }\" tippy=\"Pick existing value\"\r\n              (click)=\"toggleGuidedContentType(true)\">\r\n              <mat-icon>search</mat-icon>\r\n            </button>\r\n            <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': !guidedContentType }\" tippy=\"Manual entry\"\r\n              (click)=\"toggleGuidedContentType(false)\">\r\n              <mat-icon>text_fields</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-form-field>\r\n        @if (form.controls.contentType.touched && form.controls.contentType.errors?.required) {\r\n          <app-field-hint\r\n            [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      </form>\r\n    </mat-card-content>\r\n    <mat-card-actions class=\"eav-card-actions\">\r\n      <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n        {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n      </mat-slide-toggle>\r\n      <div>\r\n        <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\" class=\"eav-card-action-button\" [disabled]=\"!form.valid\" (click)=\"confirm()\">\r\n          Confirm\r\n        </button>\r\n      </div>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { BehaviorSubject, combineLatest, distinctUntilChanged, map, Observable, startWith } from 'rxjs';\r\nimport { ContentType } from '../../app-administration/models';\r\nimport { ContentTypesService } from '../../app-administration/services';\r\nimport { dropdownInsertValue } from '../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants, ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { MetadataSaveDialogViewModel, MetadataSaveFormValues } from './metadata-save-dialog.models';\r\n\r\n@Component({\r\n  selector: 'app-metadata-save-dialog',\r\n  templateUrl: './metadata-save-dialog.component.html',\r\n  styleUrls: ['./metadata-save-dialog.component.scss']\r\n})\r\nexport class MetadataSaveDialogComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  dropdownInsertValue = dropdownInsertValue;\r\n  viewModel$: Observable<MetadataSaveDialogViewModel>;\r\n  guidedContentType = true;\r\n  advancedMode = false;\r\n\r\n  private contentTypes$: BehaviorSubject<ContentType[]>;\r\n  private scopeOptions$: BehaviorSubject<ScopeOption[]>;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<MetadataSaveDialogComponent>,\r\n    private contentTypesService: ContentTypesService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.contentTypes$ = new BehaviorSubject<ContentType[]>([]);\r\n    this.scopeOptions$ = new BehaviorSubject<ScopeOption[]>([]);\r\n\r\n    this.buildForm();\r\n    this.fetchScopes();\r\n\r\n    this.viewModel$ = combineLatest([this.contentTypes$, this.scopeOptions$]).pipe(\r\n      map(([contentTypes, scopeOptions]) => {\r\n        const viewModel: MetadataSaveDialogViewModel = {\r\n          contentTypes,\r\n          scopeOptions,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.contentTypes$.complete();\r\n    this.scopeOptions$.complete();\r\n  }\r\n\r\n  closeDialog(contentType?: string): void {\r\n    this.dialogRef.close(contentType);\r\n  }\r\n\r\n  toggleGuidedContentType(guidedContentType: boolean): void {\r\n    this.guidedContentType = guidedContentType;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: MetadataSaveFormValues = this.form.getRawValue();\r\n    this.closeDialog(formValues.contentType);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({});\r\n    this.form.addControl('contentType', new UntypedFormControl(null, [Validators.required]));\r\n    this.form.addControl('scope', new UntypedFormControl(eavConstants.scopes.default.value));\r\n\r\n    this.form.controls.scope.valueChanges.pipe(\r\n      startWith(this.form.controls.scope.value),\r\n      distinctUntilChanged(),\r\n    ).subscribe((newScope: string) => {\r\n      // reset content types when scope changes\r\n      if (this.form.controls.contentType.value != null) {\r\n        this.form.controls.contentType.patchValue(null);\r\n      }\r\n\r\n      // add new scope on manual entry\r\n      if (newScope === dropdownInsertValue) {\r\n        newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n        if (!this.scopeOptions$.value.some(option => option.value === newScope)) {\r\n          const newScopeOption: ScopeOption = {\r\n            name: newScope,\r\n            value: newScope,\r\n          };\r\n          this.scopeOptions$.next([newScopeOption, ...this.scopeOptions$.value]);\r\n        }\r\n        this.form.controls.scope.patchValue(newScope);\r\n      } else {\r\n        this.fetchContentTypes(newScope);\r\n      }\r\n    });\r\n  }\r\n\r\n  private fetchContentTypes(scope: string): void {\r\n    this.contentTypesService.retrieveContentTypes(scope).subscribe(contentTypes => {\r\n      this.contentTypes$.next(contentTypes);\r\n    });\r\n  }\r\n\r\n  private fetchScopes(): void {\r\n    this.contentTypesService.getScopes().subscribe(scopes => {\r\n      this.scopeOptions$.next(scopes);\r\n    });\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog nav-component-wrapper\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">\r\n        {{ title || 'Metadata' }}\r\n      </div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"eav-dialog-content nav-component-wrapper\">\r\n      <p>\r\n        @if (!vm.itemFor) {\r\n          This item is not metadata for anything else.\r\n        }\r\n        @if (vm.itemFor) {\r\n          This item is metadata for:\r\n          <br>Target: {{ vm.itemFor.Target }}\r\n          <br>TargetType: {{ vm.itemFor.TargetType }}\r\n          @if (vm.itemFor.Number) {\r\n            <br>Number: {{ vm.itemFor.Number }}\r\n          }\r\n          @if (vm.itemFor.Guid) {\r\n            <br>Guid: {{ vm.itemFor.Guid }}\r\n          }\r\n          @if (vm.itemFor.String) {\r\n            <br>String: {{ vm.itemFor.String }}\r\n          }\r\n          @if (vm.itemFor.Title) {\r\n            <br>Title: {{ vm.itemFor.String }}\r\n          }\r\n        }\r\n      </p>\r\n      <router-outlet></router-outlet>\r\n      <div class=\"grid-wrapper\">\r\n        <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.metadata\" [gridOptions]=\"gridOptions\">\r\n        </ag-grid-angular>\r\n      </div>\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      @if (vm.recommendations.length === 0) {\r\n        <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new metadata for this item\"\r\n          (click)=\"createMetadata()\">\r\n          <mat-icon>add</mat-icon>\r\n        </button>\r\n      }\r\n      @if (vm.recommendations.length > 0) {\r\n        <eco-fab-speed-dial class=\"eav-eco-fab-speed-dial\" [ngClass]=\"{ 'fab-opened': vm.fabOpen }\"\r\n          (openChange)=\"openChange($event)\">\r\n          <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n            <button mat-fab>\r\n              <mat-icon class=\"spin180\">{{ vm.fabOpen ? 'close' : 'add' }}</mat-icon>\r\n            </button>\r\n          </eco-fab-speed-dial-trigger>\r\n          <eco-fab-speed-dial-actions class=\"eav-eco-fab-speed-dial-actions\">\r\n            <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Other Content Type\"\r\n              (click)=\"createMetadata()\">\r\n              <mat-icon>search</mat-icon>\r\n            </button>\r\n            @for (recommendation of vm.recommendations; track recommendation) {\r\n              <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" [attr.label]=\"recommendation.Title\"\r\n                (click)=\"createMetadata(recommendation)\">\r\n                @if (recommendation.Icon) {\r\n                  <div style=\"color: white; fill: white;\" [innerHTML]=\"recommendation.Icon | safeHtml\"\r\n                    [matBadgeHidden]=\"recommendation.Enabled\" matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadge=\"💎\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\"></div>\r\n                } @else {\r\n                  <mat-icon>add</mat-icon>\r\n                }\r\n              </button>\r\n            }\r\n          </eco-fab-speed-dial-actions>\r\n        </eco-fab-speed-dial>\r\n      }\r\n    </mat-dialog-actions>\r\n  </div>\r\n}","import { GridOptions } from '@ag-grid-community/core';\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, map, Observable, tap } from 'rxjs';\r\nimport { ContentItemsService } from '../content-items/services/content-items.service';\r\nimport { EntitiesService } from '../content-items/services/entities.service';\r\nimport { EavFor } from '../edit/shared/models/eav';\r\nimport { MetadataService } from '../permissions';\r\nimport { BaseComponent } from '../shared/components/base-component/base.component';\r\nimport { IdFieldComponent } from '../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { ConfirmDeleteDialogComponent } from './confirm-delete-dialog/confirm-delete-dialog.component';\r\nimport { ConfirmDeleteDialogData } from './confirm-delete-dialog/confirm-delete-dialog.models';\r\nimport { MetadataActionsComponent } from './metadata-actions/metadata-actions.component';\r\nimport { MetadataActionsParams } from './metadata-actions/metadata-actions.models';\r\nimport { MetadataContentTypeComponent } from './metadata-content-type/metadata-content-type.component';\r\nimport { MetadataSaveDialogComponent } from './metadata-save-dialog/metadata-save-dialog.component';\r\nimport { MetadataItem, MetadataRecommendation, MetadataViewModel } from './models/metadata.model';\r\nimport { FeatureComponentBase } from '../features/shared/base-feature.component';\r\n\r\n@Component({\r\n  selector: 'app-metadata',\r\n  templateUrl: './metadata.component.html',\r\n  styleUrls: ['./metadata.component.scss'],\r\n})\r\nexport class MetadataComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private metadata$ = new BehaviorSubject<MetadataItem[]>([]);\r\n  private recommendations$ = new BehaviorSubject<MetadataRecommendation[]>([]);\r\n  private itemFor$ = new BehaviorSubject<EavFor | undefined>(undefined);\r\n  private fabOpen$ = new BehaviorSubject(false);\r\n  private targetType = parseInt(this.route.snapshot.paramMap.get('targetType'), 10);\r\n  private keyType = this.route.snapshot.paramMap.get('keyType') as MetadataKeyType;\r\n  private key = this.route.snapshot.paramMap.get('key');\r\n  title = decodeURIComponent(this.route.snapshot.paramMap.get('title') ?? '');\r\n  private contentTypeStaticName = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n  viewModel$: Observable<MetadataViewModel>;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<MetadataComponent>,\r\n\r\n    private metadataService: MetadataService,\r\n    private snackBar: MatSnackBar,\r\n    private entitiesService: EntitiesService,\r\n    private contentItemsService: ContentItemsService,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchFor();\r\n    this.fetchMetadata();\r\n    this.subscription.add(this.refreshOnChildClosedShallow().subscribe(() => { this.fetchMetadata(); }));\r\n\r\n    const filteredRecommendations$ = combineLatest([this.metadata$, this.recommendations$]).pipe(\r\n      map(([metadataItems, recommendations]) =>\r\n        recommendations.filter(r => metadataItems.filter(i => i._Type.Id === r.Id).length < r.Count)),\r\n    );\r\n    this.viewModel$ = combineLatest([this.metadata$, filteredRecommendations$, this.itemFor$, this.fabOpen$]).pipe(\r\n      map(([metadata, recommendations, itemFor, fabOpen]) => {\r\n        const viewModel: MetadataViewModel = {\r\n          metadata,\r\n          recommendations,\r\n          itemFor,\r\n          fabOpen,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.metadata$.complete();\r\n    this.recommendations$.complete();\r\n    this.itemFor$.complete();\r\n    this.fabOpen$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  openChange(open: boolean) {\r\n    this.fabOpen$.next(open);\r\n  }\r\n\r\n  createMetadata(recommendation?: MetadataRecommendation) {\r\n    if (recommendation) {\r\n      // If the feature is not enabled, open the info dialog instead of metadata\r\n      if (!recommendation.Enabled) {\r\n        FeatureComponentBase.openDialog(this.dialog, recommendation.MissingFeature, this.viewContainerRef, this.changeDetectorRef);\r\n        return;\r\n      }\r\n      // Feature is enabled, check if it's an empty metadata\r\n      if (recommendation.CreateEmpty) {\r\n        this.snackBar.open(`Creating ${recommendation.Name}...`);\r\n        this.entitiesService.create(recommendation.Id, { For: this.calculateItemFor() }).subscribe({\r\n          error: () => {\r\n            this.snackBar.open(`Creating ${recommendation.Name} failed. Please check console for more info`, undefined, { duration: 3000 });\r\n            this.fetchMetadata();\r\n          },\r\n          next: () => {\r\n            this.snackBar.open(`Created ${recommendation.Name}`, undefined, { duration: 3000 });\r\n            this.fetchMetadata();\r\n          },\r\n        });\r\n      } else {\r\n        // Default case - open new-metadata dialog\r\n        this.createMetadataForm(recommendation.Id);\r\n      }\r\n      return;\r\n    }\r\n    const metadataDialogRef = this.dialog.open(MetadataSaveDialogComponent, {\r\n      autoFocus: false,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    metadataDialogRef.afterClosed().subscribe((contentType?: string) => {\r\n      if (contentType == null) { return; }\r\n      this.createMetadataForm(contentType);\r\n    });\r\n  }\r\n\r\n  private createMetadataForm(contentType: string) {\r\n    const form: EditForm = {\r\n      items: [{\r\n        ContentTypeName: contentType,\r\n        For: this.calculateItemFor(),\r\n      }],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private calculateItemFor(): EavFor {\r\n    const itemFor: EavFor = {\r\n      Target: Object.values(eavConstants.metadata).find(m => m.targetType === this.targetType)?.target ?? this.targetType.toString(),\r\n      TargetType: this.targetType,\r\n      ...(this.keyType === eavConstants.keyTypes.guid && { Guid: this.key }),\r\n      ...(this.keyType === eavConstants.keyTypes.number && { Number: parseInt(this.key, 10) }),\r\n      ...(this.keyType === eavConstants.keyTypes.string && { String: this.key }),\r\n    };\r\n    return itemFor;\r\n  }\r\n\r\n  private fetchFor() {\r\n    if (!this.contentTypeStaticName) { return; }\r\n\r\n    this.contentItemsService.getAll(this.contentTypeStaticName).subscribe(items => {\r\n      const item = items.find(i => i.Guid === this.key);\r\n      if (item?.For) {\r\n        this.itemFor$.next(item.For);\r\n      }\r\n    });\r\n  }\r\n\r\n  private fetchMetadata() {\r\n    this.metadataService.getMetadata(this.targetType, this.keyType, this.key).pipe(\r\n      map(metadata => {\r\n        metadata.Recommendations.forEach(recommendation => {\r\n          if (recommendation.Icon?.startsWith('base64:')) {\r\n            recommendation.Icon = recommendation.Icon.replace('base64:', '');\r\n            recommendation.Icon = window.atob(recommendation.Icon);\r\n            // used for coloring black icons to white\r\n            recommendation.Icon = recommendation.Icon.replace('fill=\"#000000\"', 'fill=\"#ffffff\"');\r\n          }\r\n        });\r\n        return metadata;\r\n      }),\r\n      tap(metadata => {\r\n        this.metadata$.next(metadata.Items);\r\n        this.recommendations$.next(metadata.Recommendations);\r\n      })).subscribe();\r\n  }\r\n\r\n  private editMetadata(metadata: MetadataItem) {\r\n    const form: EditForm = {\r\n      items: [{ EntityId: metadata.Id }],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private deleteMetadata(metadata: MetadataItem, confirmed = false) {\r\n    if (!confirmed) {\r\n      const data: ConfirmDeleteDialogData = {\r\n        entityId: metadata.Id,\r\n        entityTitle: metadata.Title,\r\n        message: this.recommendations$.value.find(r => r.Id === metadata._Type.Id)?.DeleteWarning,\r\n      };\r\n      const confirmationDialogRef = this.dialog.open(ConfirmDeleteDialogComponent, {\r\n        autoFocus: false,\r\n        data,\r\n        viewContainerRef: this.viewContainerRef,\r\n        width: '400px',\r\n      });\r\n      confirmationDialogRef.afterClosed().subscribe((isConfirmed: boolean) => {\r\n        if (isConfirmed) {\r\n          this.deleteMetadata(metadata, true);\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.snackBar.open('Deleting...');\r\n    this.entitiesService.delete(metadata._Type.Id, metadata.Id, false).subscribe({\r\n      next: () => {\r\n        this.snackBar.open('Deleted', null, { duration: 2000 });\r\n        this.fetchMetadata();\r\n      },\r\n      error: () => {\r\n        this.snackBar.open('Delete failed. Please check console for more information', null, { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          headerName: 'ID',\r\n          field: 'Id',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'id-action no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agNumberColumnFilter',\r\n          valueGetter: (params) => {\r\n            const metadata: MetadataItem = params.data;\r\n            return metadata.Id;\r\n          },\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<MetadataItem> = {\r\n              tooltipGetter: (metadata: MetadataItem) => `ID: ${metadata.Id}\\nGUID: ${metadata.Guid}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          field: 'Title',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'primary-action highlight'.split(' '),\r\n          sortable: true,\r\n          sort: 'asc',\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const metadata: MetadataItem = params.data;\r\n            return metadata.Title;\r\n          },\r\n          onCellClicked: (params) => {\r\n            const metadata: MetadataItem = params.data;\r\n            this.editMetadata(metadata);\r\n          },\r\n        },\r\n        {\r\n          headerName: 'Content Type',\r\n          field: 'ContentType',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const metadata: MetadataItem = params.data;\r\n            return `${metadata._Type.Name}${metadata._Type.Title !== metadata._Type.Name ? ` (${metadata._Type.Title})` : ''}`;\r\n          },\r\n          cellRenderer: MetadataContentTypeComponent,\r\n        },\r\n        {\r\n          width: 42,\r\n          cellClass: 'secondary-action no-padding'.split(' '),\r\n          pinned: 'right',\r\n          cellRenderer: MetadataActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: MetadataActionsParams = {\r\n              onDelete: (metadata) => this.deleteMetadata(metadata),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({ selector: '[appClickStopPropagation]' })\r\nexport class ClickStopPropagationDirective {\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n"],"x_google_ignoreList":[]}