{"version":3,"sources":["./src/app/shared/constants/session.constants.ts","../edit/shared/models/eav-configuration.ts","../edit/shared/helpers/url-helper.ts","./src/app/shared/helpers/angular-console-log.helper.ts","./src/environments/environment.ts","./src/app/shared/constants/dialog-types.constants.ts","./src/app/shared/services/context.ts","../edit/edit.matcher.ts","../edit/shared/store/reducers/global-configuration.reducer.ts","../edit/shared/store/reducers/index.ts","../edit/shared/store/selectors/global-configuration.selectors.ts","../edit/shared/store/index.ts","./src/app/shared/helpers/url-prep.helper.ts","../edit/shared/store/actions/global-configuration.actions.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/params-init.factory.ts","../edit/shared/store/ngrx-data/entity-metadata.ts","./src/app/shared/interceptors/set-headers.interceptor.ts","./src/app/shared/interceptors/handle-errors.interceptor.ts","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":["prefix","keyZoneId","keyRequestToken","keyTabId","keyContentBlockId","keyModuleId","keyAppId","keyAppRoot","keyDebug","keyDialog","keyContentType","keyFa","keyItems","keyLang","keyLangPri","keyLangs","keyMode","keyPartOfPage","keyPortalRoot","keyPublishing","keyWebsiteRoot","keyFilters","keyUserCanDesign","keyUserCanDevelop","keyPipelineId","keyUrl","zoneId","appId","approot","cbid","debug","dialog","items","lang","langpri","langs","mid","mode","partOfPage","portalroot","publishing","tid","rvt","websiteroot","versioningOptions","this","systemroot","readQueryStringParameters","url","queryParams","split","forEach","f","length","decodeURIComponent","replace","getEavConfiguration","route","context","form","snapshot","params","editItems","JSON","stringify","EavConfig","toString","appRoot","contentBlockId","sessionStorage","getItem","moduleId","tabId","requestToken","UrlHelper","getVersioningOptions","show","hide","branch","req","console","error","getUrlParams","qs","join","tokens","re","exec","replaceUrlParam","paramName","paramValue","pattern","RegExp","search","indexOf","getUrlPrefix","area","eavConfig","result","endsWith","substring","angularConsoleLog","message","production","groupCollapsed","optionalParams","trace","groupEnd","environment","Zone","AppImport","App","ContentType","ContentItems","Edit","Develop","PipelineDesigner","Replace","InstanceList","parentContext","ready","parent","globalWindow","window","contextId","id","_zoneId","routeNum","_appId","_appRoot","path","_rvt","_tabId","_contentBlockId","_moduleId","init","routeSnapshot","clearCachedValues","initRoot","sessionNumber","Error","name","num","parseInt","isNaN","paramMap","get","Context","editRoot","hasDetails","hasUpdate","posParams","detailsEntityGuid","detailsFieldId","updateEntityGuid","updateFieldId","consumed","slice","edit","initialState","debugEnabled","globalConfigurationReducer","state","metaReducers","reducer","action","reducers","globalConfiguration","selectDebugEnabled","convertFormToUrl","formUrl","item","EntityId","ContentTypeName","addItem","For","String","paramEncode","Target","Number","Guid","Prefill","keys","Object","key","DuplicateEntity","Group","Index","Part","Add","convertUrlToForm","test","editItem","push","startsWith","options","option","newParams","forParams","forType","forValue","forTarget","paramDecode","prefillParams","value","copyParams","groupParams","groupItem","text","loadDebugEnabled","toggleDebugEnabled","appRoutes","loadChildren","then","m","AppsManagementModule","data","title","ImportAppModule","AppAdministrationModule","CodeEditorModule","VisualQueryModule","ReplaceContentModule","ManageContentListModule","ContentItemsModule","ContentTypeFieldsModule","matcher","EditModule","ContentExportModule","PermissionsModule","AppRoutingModule","forRoot","el","dnnContext","titleService","router","activatedRoute","matIconRegistry","preConfigure","subscription","Subscription","setDefaultFontSetClass","ngOnInit","appTitle","getTitle","add","events","pipe","filter","event","map","child","firstChild","subscribe","setTitle","ngOnDestroy","unsubscribe","AppComponent","paramsInitFactory","injector","log","eavKeys","location","hash","alert","href","removeItem","setItem","urlHash","queryParametersFromUrl","paramKeys","contentType","navigate","parse","pipelineId","replaceItems","groupItems","$2sxc","totalPopup","close","env","load","page","root","api","entityConfig","entityMetadata","Item","selectId","entity","undefined","guid","Feature","Language","LanguageInstance","formId","InputType","Type","pluralNames","intercept","next","modified","body","FormData","handle","clone","setHeaders","SetHeadersInterceptor","excludedUrls","catchError","checkIfExcluded","showDetailedHttpError","throwError","includes","infoText","status","srvResp","msg","Message","msgDet","MessageDetail","ExceptionMessage","HandleErrorsInterceptor","AppModule","provide","useFactory","deps","multi","useClass","runtimeChecks","strictStateImmutability","strictActionImmutability","instrument","maxAge","bootstrapModule","catch","err","webpackEmptyAsyncContext","Promise","resolve","e","code","module","exports"],"mappings":"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","file":"main.32e154fe94e6a833fe89.js","sourcesContent":["export const prefix = 'eav-';\r\nexport const keyZoneId = prefix + 'zoneId';\r\nexport const keyRequestToken = prefix + 'rvt';\r\nexport const keyTabId = prefix + 'tid';\r\nexport const keyContentBlockId = prefix + 'cbid';\r\nexport const keyModuleId = prefix + 'mid';\r\nexport const keyAppId = prefix + 'appId';\r\nexport const keyAppRoot = prefix + 'approot';\r\nexport const keyDebug = prefix + 'debug';\r\nexport const keyDialog = prefix + 'dialog';\r\nexport const keyContentType = prefix + 'contentType';\r\nexport const keyFa = prefix + 'fa';\r\nexport const keyItems = prefix + 'items';\r\nexport const keyLang = prefix + 'lang';\r\nexport const keyLangPri = prefix + 'langpri';\r\nexport const keyLangs = prefix + 'langs';\r\nexport const keyMode = prefix + 'mode';\r\nexport const keyPartOfPage = prefix + 'partOfPage';\r\nexport const keyPortalRoot = prefix + 'portalroot';\r\nexport const keyPublishing = prefix + 'publishing';\r\nexport const keyWebsiteRoot = prefix + 'websiteroot';\r\nexport const keyFilters = prefix + 'filters';\r\nexport const keyUserCanDesign = prefix + 'user%5BcanDesign%5D';\r\nexport const keyUserCanDevelop = prefix + 'user%5BcanDevelop%5D';\r\nexport const keyPipelineId = prefix + 'pipelineId';\r\n/** Url which opened the dialog. Used for debugging */\r\nexport const keyUrl = prefix + 'url';\r\n","import { VersioningOptions } from './eav/versioning-options';\r\n\r\nexport class EavConfig {\r\n  public systemroot: string;\r\n\r\n  constructor(\r\n    public zoneId: string,\r\n    public appId: string,\r\n    public approot: string,\r\n    public cbid: string,\r\n    public debug: string,\r\n    public dialog: string,\r\n    public items: string,\r\n    public lang: string,\r\n    public langpri: string,\r\n    public langs: string,\r\n    public mid: string,\r\n    public mode: string,\r\n    public partOfPage: string,\r\n    public portalroot: string,\r\n    public publishing: string,\r\n    public tid: string,\r\n    public rvt: string,\r\n    public websiteroot: string,\r\n    public versioningOptions: VersioningOptions,\r\n  ) {\r\n    this.systemroot = websiteroot + 'desktopmodules/tosic_sexycontent/';\r\n  }\r\n}\r\n","import { ActivatedRoute } from '@angular/router';\r\n\r\nimport { EavConfig } from '../models/eav-configuration';\r\nimport { VersioningOptions } from '../models/eav/versioning-options';\r\nimport { keyDebug, keyDialog, keyLang, keyLangPri, keyLangs, keyMode, keyPartOfPage, keyPortalRoot, keyPublishing, keyWebsiteRoot } from '../../../ng-dialogs/src/app/shared/constants/session.constants';\r\nimport { Context } from '../../../ng-dialogs/src/app/shared/services/context';\r\nimport { convertUrlToForm } from '../../../ng-dialogs/src/app/shared/helpers/url-prep.helper';\r\n\r\nexport class UrlHelper {\r\n\r\n  static readQueryStringParameters(url: string): { [key: string]: string } {\r\n    const queryParams: { [key: string]: string } = {};\r\n    url.split('&').forEach(f => {\r\n      if (f.split('=').length === 2) {\r\n        queryParams[f.split('=')[0]] = decodeURIComponent(f.split('=')[1].replace(/\\+/g, ' '));\r\n      }\r\n    });\r\n    return queryParams;\r\n  }\r\n\r\n  /** Create EavConfiguration from sessionStorage */\r\n  static getEavConfiguration(route: ActivatedRoute, context: Context) {\r\n    const form = convertUrlToForm(route.snapshot.params.items);\r\n    const editItems = JSON.stringify(form.items);\r\n    return new EavConfig(\r\n      context.zoneId.toString(),\r\n      context.appId.toString(),\r\n      context.appRoot,\r\n      context.contentBlockId.toString(),\r\n      sessionStorage.getItem(keyDebug),\r\n      sessionStorage.getItem(keyDialog),\r\n      editItems,\r\n      sessionStorage.getItem(keyLang),\r\n      sessionStorage.getItem(keyLangPri),\r\n      sessionStorage.getItem(keyLangs),\r\n      context.moduleId.toString(),\r\n      sessionStorage.getItem(keyMode),\r\n      sessionStorage.getItem(keyPartOfPage),\r\n      sessionStorage.getItem(keyPortalRoot),\r\n      sessionStorage.getItem(keyPublishing),\r\n      context.tabId.toString(),\r\n      context.requestToken.toString(),\r\n      sessionStorage.getItem(keyWebsiteRoot),\r\n      UrlHelper.getVersioningOptions(sessionStorage.getItem(keyPartOfPage) === 'true', sessionStorage.getItem(keyPublishing))\r\n    );\r\n  }\r\n\r\n  private static getVersioningOptions(partOfPage: boolean, publishing: string): VersioningOptions {\r\n    if (!partOfPage) { return { show: true, hide: true, branch: true }; }\r\n\r\n    const req = publishing || '';\r\n    switch (req) {\r\n      case '':\r\n      case 'DraftOptional': return { show: true, hide: true, branch: true };\r\n      case 'DraftRequired': return { branch: true, hide: true };\r\n      default: {\r\n        console.error('invalid versioning requiremenets: ' + req.toString());\r\n        return {};\r\n      }\r\n    }\r\n  }\r\n\r\n  /** https://stackoverflow.com/questions/979975/how-to-get-the-value-from-the-get-parameters/1099670#1099670 */\r\n  static getUrlParams(qs: string) {\r\n    qs = qs.split('+').join(' ');\r\n\r\n    const params: { [key: string]: string } = {};\r\n    let tokens;\r\n    const re = /[?&]?([^=]+)=([^&]*)/g;\r\n\r\n    // tslint:disable-next-line:no-conditional-assignment\r\n    while (tokens = re.exec(qs)) {\r\n      params[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  static replaceUrlParam(url: string, paramName: string, paramValue: string) {\r\n    if (paramValue === null) { paramValue = ''; }\r\n\r\n    const pattern = new RegExp('\\\\b(' + paramName + '=).*?(&|#|$)');\r\n    if (url.search(pattern) >= 0) { return url.replace(pattern, '$1' + paramValue + '$2'); }\r\n\r\n    url = url.replace(/[?#]$/, '');\r\n    return url + (url.indexOf('?') > 0 ? '&' : '?') + paramName + '=' + paramValue;\r\n  }\r\n\r\n  static getUrlPrefix(area: string, eavConfig: EavConfig) {\r\n    let result = '';\r\n\r\n    if (area === 'system') { result = eavConfig.systemroot; }                    // used to link to JS-stuff and similar\r\n    if (area === 'zone') { result = eavConfig.portalroot; }                      // used to link to the site-root (like an image)\r\n    if (area === 'app') { result = eavConfig.approot; }                          // used to find the app-root of something inside an app\r\n    if (result.endsWith('/')) { result = result.substring(0, result.length - 1); }\r\n\r\n    return result;\r\n  }\r\n}\r\n","import { environment } from '../../../environments/environment';\r\n\r\nexport function angularConsoleLog(message?: any, ...optionalParams: any[]) {\r\n  if (environment.production) { return; }\r\n\r\n  console.groupCollapsed(message, ...optionalParams);\r\n  // tslint:disable-next-line:no-console\r\n  console.trace();\r\n  console.groupEnd();\r\n}\r\n","export const environment = {\r\n  production: true\r\n};\r\n","export class DialogTypeConstants {\r\n  public static readonly Zone = 'zone';\r\n  public static readonly AppImport = 'app-import';\r\n  public static readonly App = 'app';\r\n  public static readonly ContentType = 'contenttype';\r\n  public static readonly ContentItems = 'contentitems';\r\n  public static readonly Edit = 'edit';\r\n  public static readonly Develop = 'develop';\r\n  public static readonly PipelineDesigner = 'pipeline-designer';\r\n  public static readonly Replace = 'replace';\r\n  public static readonly InstanceList = 'instance-list';\r\n}\r\n","import { Injectable, SkipSelf, Optional } from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { keyZoneId, keyAppId, keyTabId, keyContentBlockId, keyModuleId, keyRequestToken, prefix, keyAppRoot } from '../constants/session.constants';\r\nimport { angularConsoleLog } from '../helpers/angular-console-log.helper';\r\n\r\n/** The context provides information */\r\n@Injectable()\r\nexport class Context {\r\n\r\n  /** Id of current context */\r\n  public id: number;\r\n\r\n  /** Determines if the context is ready to use, and everything is initialized */\r\n  public ready = false;\r\n\r\n  /** The parent, for hierarchical lookup */\r\n  private parent: Context;\r\n\r\n  private routeSnapshot: ActivatedRouteSnapshot;\r\n\r\n  /** The current Zone ID */\r\n  get zoneId(): number {\r\n    return this._zoneId || (this._zoneId = this.routeNum(keyZoneId) || this.parent.zoneId);\r\n  }\r\n  private _zoneId: number;\r\n\r\n  /** The current App ID */\r\n  get appId(): number {\r\n    return (this._appId != null) ? this._appId : (this._appId = this.routeNum(keyAppId) || this.parent.appId);\r\n  }\r\n  private _appId: number;\r\n\r\n  /** Root of the current App */\r\n  get appRoot(): string {\r\n    return (this._appRoot != null) ? this._appRoot : (this._appRoot = this.parent.appRoot);\r\n  }\r\n  set appRoot(path: string) {\r\n    this._appRoot = path;\r\n  }\r\n  private _appRoot: string;\r\n\r\n  /**\r\n   * The request verification token for http requests.\r\n   * It's only loaded from the root, never from sub-contexts\r\n   */\r\n  get requestToken(): string { return this._rvt || (this._rvt = this.parent.requestToken); }\r\n  private _rvt: string;\r\n\r\n  /** Tab Id is global */\r\n  get tabId(): number {\r\n    return this._tabId || (this._tabId = this.routeNum(keyTabId) || this.parent.tabId);\r\n  }\r\n  private _tabId: number;\r\n\r\n  /** Content Block Id is global */\r\n  get contentBlockId(): number {\r\n    return this._contentBlockId || (this._contentBlockId = this.routeNum(keyContentBlockId) || this.parent.contentBlockId);\r\n  }\r\n  private _contentBlockId: number;\r\n\r\n  /** Module Id is global */\r\n  get moduleId(): number {\r\n    return this._moduleId || (this._moduleId = this.routeNum(keyModuleId) || this.parent.moduleId);\r\n  }\r\n  private _moduleId: number;\r\n\r\n  constructor(@Optional() @SkipSelf() parentContext: Context) {\r\n    this.parent = parentContext;\r\n\r\n    // spm NOTE: I've given id to every context to make it easier to follow how things work\r\n    const globalWindow = window as any;\r\n    if (!globalWindow.contextId) { globalWindow.contextId = 0; }\r\n    this.id = globalWindow.contextId++;\r\n    angularConsoleLog('Context.constructor', this);\r\n  }\r\n\r\n  /**\r\n   * This is the initializer at entry-componets of modules.\r\n   * It ensures that within that module, the context has the values given by the route\r\n   */\r\n  init(route: ActivatedRoute) {\r\n    this.routeSnapshot = route && route.snapshot;\r\n    this.clearCachedValues();\r\n    this.ready = route != null;\r\n    angularConsoleLog('Context.init', this, route);\r\n  }\r\n\r\n  initRoot() {\r\n    // required, global things\r\n    this._rvt = sessionStorage.getItem(keyRequestToken);\r\n    this._zoneId = this.sessionNumber(keyZoneId);\r\n    this._tabId = this.sessionNumber(keyTabId);\r\n    this._contentBlockId = this.sessionNumber(keyContentBlockId);\r\n    this._moduleId = this.sessionNumber(keyModuleId);\r\n\r\n    if (!this._rvt || !this._zoneId || !this._tabId || !this._contentBlockId || !this._moduleId) {\r\n      throw new Error('Context is missing some of the required parameters');\r\n    }\r\n\r\n    // optional global things\r\n    this._appId = this.sessionNumber(keyAppId);\r\n    this._appRoot = sessionStorage.getItem(keyAppRoot);\r\n\r\n    this.ready = true;\r\n    angularConsoleLog('Context.initRoot', this);\r\n  }\r\n\r\n  private sessionNumber(name: string): number {\r\n    const result = sessionStorage.getItem(name);\r\n    if (result !== null) {\r\n      const num = parseInt(result, 10);\r\n      return isNaN(num) ? null : num;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Get a number from the route, or optionally its parents.\r\n   * Returns value in route or null\r\n   */\r\n  private routeNum(name: string): number {\r\n    // catch case where state is null, like when the recursive parent is in use\r\n    if (this.routeSnapshot == null) { return null; }\r\n\r\n    const paramName = name.substring(prefix.length);\r\n    const result = this.routeSnapshot.paramMap.get(paramName);\r\n    if (result !== null) {\r\n      const num = parseInt(result, 10);\r\n      return isNaN(num) ? null : num;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears cached values. Required when one module instance is opened multiple times,\r\n   * e.g. Apps Management -> App Admin for appId 2 -> back -> App Admin for appId 17.\r\n   * Module is reused, and so is context and it contains values for previous appId.\r\n   */\r\n  private clearCachedValues() {\r\n    this._zoneId = null;\r\n    this._appId = null;\r\n    this._appRoot = null;\r\n    this._rvt = null;\r\n    this._tabId = null;\r\n    this._contentBlockId = null;\r\n    this._moduleId = null;\r\n  }\r\n}\r\n","import { UrlSegment, UrlMatchResult } from '@angular/router';\r\n\r\nimport { EditPosParams } from './edit-matcher.models';\r\n\r\n/**\r\n * ':zoneId/:appId/edit/:items'\r\n * ':zoneId/:appId/edit/:items/details/:detailsEntityGuid/:detailsFieldId'\r\n * ':zoneId/:appId/edit/:items/update/:updateEntityGuid/:updateFieldId'\r\n */\r\nexport function editRoot(url: UrlSegment[]): UrlMatchResult {\r\n  if (url.length < 4) { return null; }\r\n  if (url[2].path !== 'edit') { return null; }\r\n  const hasDetails = url[4] != null && url[4].path === 'details' && url[5] != null && url[6] != null;\r\n  const hasUpdate = url[4] != null && url[4].path === 'update' && url[5] != null && url[6] != null;\r\n  const posParams: EditPosParams = {\r\n    zoneId: url[0],\r\n    appId: url[1],\r\n    items: url[3],\r\n    ...(hasDetails && { detailsEntityGuid: url[5], detailsFieldId: url[6] }),\r\n    ...(hasUpdate && { updateEntityGuid: url[5], updateFieldId: url[6] }),\r\n  };\r\n  const match: UrlMatchResult = {\r\n    consumed: url.slice(0, (hasDetails || hasUpdate) ? 7 : 4),\r\n    posParams: posParams as any\r\n  };\r\n  return match;\r\n}\r\n\r\n/**\r\n * 'edit/:items'\r\n * 'edit/:items/details/:detailsEntityGuid/:detailsFieldId'\r\n * 'edit/:items/update/:updateEntityGuid/:updateFieldId'\r\n */\r\nexport function edit(url: UrlSegment[]): UrlMatchResult {\r\n  if (url.length < 2) { return null; }\r\n  if (url[0].path !== 'edit') { return null; }\r\n  const hasDetails = url[2] != null && url[2].path === 'details' && url[3] != null && url[4] != null;\r\n  const hasUpdate = url[2] != null && url[2].path === 'update' && url[3] != null && url[4] != null;\r\n  const posParams: EditPosParams = {\r\n    items: url[1],\r\n    ...(hasDetails && { detailsEntityGuid: url[3], detailsFieldId: url[4] }),\r\n    ...(hasUpdate && { updateEntityGuid: url[3], updateFieldId: url[4] }),\r\n  };\r\n  const match: UrlMatchResult = {\r\n    consumed: url.slice(0, (hasDetails || hasUpdate) ? 5 : 2),\r\n    posParams: posParams as any\r\n  };\r\n  return match;\r\n}\r\n","import { Action, createReducer, on } from '@ngrx/store';\r\n\r\nimport { keyDebug } from '../../../../ng-dialogs/src/app/shared/constants/session.constants';\r\nimport * as GlobalConfigurationActions from '../actions/global-configuration.actions';\r\n\r\nexport interface GlobalConfigurationState {\r\n  debugEnabled: boolean;\r\n}\r\n\r\nexport const initialState: GlobalConfigurationState = {\r\n  debugEnabled: sessionStorage.getItem(keyDebug) === 'true',\r\n};\r\n\r\nconst globalConfigurationReducer = createReducer(\r\n  initialState,\r\n  on(GlobalConfigurationActions.loadDebugEnabled, (state, { debugEnabled }) => ({ ...state, debugEnabled })),\r\n  on(GlobalConfigurationActions.toggleDebugEnabled, (state) => ({ ...state, debugEnabled: !state.debugEnabled })),\r\n);\r\n\r\nexport function reducer(state: GlobalConfigurationState | undefined, action: Action) {\r\n  return globalConfigurationReducer(state, action);\r\n}\r\n","import { ActionReducerMap, ActionReducer, MetaReducer, } from '@ngrx/store';\r\n\r\nimport { environment } from '../../../../ng-dialogs/src/environments/environment';\r\nimport * as fromGlobalConfiguration from './global-configuration.reducer';\r\nimport { angularConsoleLog } from '../../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\n\r\nexport interface EavState {\r\n  globalConfiguration: fromGlobalConfiguration.GlobalConfigurationState;\r\n}\r\n\r\n/** Console log all actions */\r\nexport function logger(reducer: ActionReducer<EavState>): ActionReducer<EavState> {\r\n  return (state: EavState, action: any): EavState => {\r\n    angularConsoleLog('[STORE] state', state);\r\n    angularConsoleLog('[STORE] action', action);\r\n    return reducer(state, action);\r\n  };\r\n}\r\n\r\n/**\r\n * By default, @ngrx/store uses combineReducers with the reducer map to compose\r\n * the root meta-reducer. To add more meta-reducers, provide an array of meta-reducers\r\n * that will be composed to form the root meta-reducer.\r\n */\r\nexport const metaReducers: MetaReducer<any>[] = !environment.production\r\n  ? [logger]\r\n  : [];\r\n\r\nexport const reducers: ActionReducerMap<EavState> = {\r\n  globalConfiguration: fromGlobalConfiguration.reducer,\r\n};\r\n","import { createSelector } from '@ngrx/store';\r\nimport { GlobalConfigurationState } from '../reducers/global-configuration.reducer';\r\nimport { EavState } from '../reducers';\r\n\r\nexport const selectGlobalConfiguration = (state: EavState) => state.globalConfiguration;\r\n\r\nexport const selectDebugEnabled = createSelector(\r\n  selectGlobalConfiguration,\r\n  (state: GlobalConfigurationState) => state.debugEnabled\r\n);\r\n","export * from './reducers';\r\nexport * from './selectors';\r\n","import { EditForm, EditItem, AddItem, GroupItem } from '../models/edit-form.model';\r\nimport { EavFor } from '../../../../../edit/shared/models/eav';\r\n\r\nexport function convertFormToUrl(form: EditForm) {\r\n  let formUrl = '';\r\n\r\n  for (const item of form.items) {\r\n    if (formUrl) { formUrl += ','; }\r\n\r\n    if ((item as EditItem).EntityId) {\r\n      // Edit Item\r\n      const editItem = item as EditItem;\r\n      formUrl += editItem.EntityId;\r\n    } else if ((item as AddItem).ContentTypeName) {\r\n      // Add Item\r\n      const addItem = item as AddItem;\r\n      formUrl += 'new:' + addItem.ContentTypeName;\r\n\r\n      if (addItem.For?.String) {\r\n        formUrl += '&for:s~' + paramEncode(addItem.For.String) + ':' + addItem.For.Target;\r\n      } else if (addItem.For?.Number) {\r\n        formUrl += '&for:n~' + addItem.For.Number + ':' + addItem.For.Target;\r\n      } else if (addItem.For?.Guid) {\r\n        formUrl += '&for:g~' + addItem.For.Guid + ':' + addItem.For.Target;\r\n      }\r\n\r\n      if (addItem.Prefill) {\r\n        const keys = Object.keys(addItem.Prefill);\r\n        for (const key of keys) {\r\n          formUrl += '&prefill:' + key + '~' + paramEncode(addItem.Prefill[key]);\r\n        }\r\n      }\r\n\r\n      if (addItem.DuplicateEntity) {\r\n        formUrl += '&copy:' + addItem.DuplicateEntity;\r\n      }\r\n    } else if ((item as GroupItem).Group) {\r\n      // Group Item\r\n      const groupItem = item as GroupItem;\r\n      formUrl += 'group:' + groupItem.Group.Guid + ':' + groupItem.Group.Index + ':' + groupItem.Group.Part + ':' + groupItem.Group.Add;\r\n    }\r\n  }\r\n\r\n  return formUrl;\r\n}\r\n\r\nexport function convertUrlToForm(formUrl: string) {\r\n  const form: EditForm = { items: [] };\r\n  const items = formUrl.split(',');\r\n\r\n  for (const item of items) {\r\n    const isNumber = /^[0-9]*$/g;\r\n    if (isNumber.test(item)) {\r\n      // Edit Item\r\n      const editItem: EditItem = { EntityId: parseInt(item, 10) };\r\n      form.items.push(editItem);\r\n    } else if (item.startsWith('new:')) {\r\n      // Add Item\r\n      const addItem = {} as AddItem;\r\n      const options = item.split('&');\r\n\r\n      for (const option of options) {\r\n        if (option.startsWith('new:')) {\r\n          // Add Item ContentType\r\n          const newParams = option.split(':');\r\n          addItem.ContentTypeName = newParams[1];\r\n        } else if (option.startsWith('for:')) {\r\n          // Add Item For\r\n          addItem.For = {} as EavFor;\r\n          const forParams = option.split(':');\r\n          const forType = forParams[1].split('~')[0];\r\n          const forValue = forParams[1].split('~')[1];\r\n          const forTarget = forParams[2];\r\n\r\n          switch (forType) {\r\n            case 's':\r\n              addItem.For.String = paramDecode(forValue);\r\n              break;\r\n            case 'n':\r\n              addItem.For.Number = parseInt(forValue, 10);\r\n              break;\r\n            case 'g':\r\n              addItem.For.Guid = forValue;\r\n              break;\r\n          }\r\n          addItem.For.Target = forTarget;\r\n        } else if (option.startsWith('prefill:')) {\r\n          // Add Item Prefill\r\n          if (addItem.Prefill == null) {\r\n            addItem.Prefill = {};\r\n          }\r\n          const prefillParams = option.split(':');\r\n          const key = prefillParams[1].split('~')[0];\r\n          const value = paramDecode(prefillParams[1].split('~')[1]);\r\n          addItem.Prefill[key] = value;\r\n        } else if (option.startsWith('copy:')) {\r\n          // Add Item Copy\r\n          const copyParams = option.split(':');\r\n          addItem.DuplicateEntity = parseInt(copyParams[1], 10);\r\n        }\r\n      }\r\n      form.items.push(addItem);\r\n    } else if (item.startsWith('group:')) {\r\n      // Group Item\r\n      const groupParams = item.split(':');\r\n      const groupItem: GroupItem = {\r\n        Group: {\r\n          Guid: groupParams[1],\r\n          Index: parseInt(groupParams[2], 10),\r\n          Part: groupParams[3],\r\n          Add: groupParams[4] === 'true',\r\n        }\r\n      };\r\n      form.items.push(groupItem);\r\n    }\r\n  }\r\n\r\n  return form;\r\n}\r\n\r\n/** Encodes characters in URL parameter to not mess up routing. Don't forget to decode it! :) */\r\nfunction paramEncode(text: string) {\r\n  text = text.replace(/\\//g, '%2F');\r\n  text = text.replace(/\\:/g, '%3A');\r\n  text = text.replace(/\\&/g, '%26');\r\n  text = text.replace(/\\~/g, '%7E');\r\n  return text;\r\n}\r\n\r\n/** Decodes characters in URL parameter */\r\nfunction paramDecode(text: string) {\r\n  text = text.replace(/%2F/g, '/');\r\n  text = text.replace(/%3A/g, ':');\r\n  text = text.replace(/%26/g, '&');\r\n  text = text.replace(/%7E/g, '~');\r\n  return text;\r\n}\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { GlobalConfigurationState } from '../reducers/global-configuration.reducer';\r\n\r\nexport const loadDebugEnabled = createAction(\r\n  '[GlobalConfiguration] LOAD_DEBUG_ENABLED',\r\n  props<GlobalConfigurationState>()\r\n);\r\n\r\nexport const toggleDebugEnabled = createAction('[GlobalConfiguration] TOGGLE_DEBUG_ENABLED');\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { editRoot } from '../../../edit/edit.matcher';\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: ':zoneId/apps',\r\n    loadChildren: () => import('./apps-management/apps-management.module').then(m => m.AppsManagementModule),\r\n    data: { title: 'Apps' },\r\n  },\r\n  {\r\n    path: ':zoneId/import',\r\n    loadChildren: () => import('./import-app/import-app.module').then(m => m.ImportAppModule),\r\n    data: { title: 'Import App' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/app',\r\n    loadChildren: () => import('./app-administration/app-administration.module').then(m => m.AppAdministrationModule),\r\n    data: { title: 'App' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/code',\r\n    loadChildren: () => import('./code-editor/code-editor.module').then(m => m.CodeEditorModule),\r\n    data: { title: 'Code Editor' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/query/:pipelineId',\r\n    loadChildren: () => import('./visual-query/visual-query.module').then(m => m.VisualQueryModule),\r\n    data: { title: 'Visual Query' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/:guid/:part/:index/replace',\r\n    loadChildren: () => import('./replace-content/replace-content.module').then(m => m.ReplaceContentModule),\r\n    data: { title: 'Apps' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/:guid/:part/:index/reorder',\r\n    loadChildren: () => import('./manage-content-list/manage-content-list.module').then(m => m.ManageContentListModule),\r\n    data: { title: 'Reorder Items' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/items/:contentTypeStaticName',\r\n    loadChildren: () => import('./content-items/content-items.module').then(m => m.ContentItemsModule),\r\n    data: { title: 'Items' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/fields/:contentTypeStaticName',\r\n    loadChildren: () => import('./content-type-fields/content-type-fields.module').then(m => m.ContentTypeFieldsModule),\r\n    data: { title: 'Fields' },\r\n  },\r\n  {\r\n    matcher: editRoot,\r\n    loadChildren: () => import('../../../edit/edit.module').then(m => m.EditModule),\r\n    data: { title: 'Edit Item' },\r\n  },\r\n  // routes below are not linked directly from the initializer and are used for testing\r\n  // to make sure each module contains enough data to be self sustainable\r\n  {\r\n    path: ':zoneId/:appId/export/:contentTypeStaticName',\r\n    loadChildren: () => import('./content-export/content-export.module').then(m => m.ContentExportModule),\r\n    data: { title: 'Export Items' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/export/:contentTypeStaticName/:selectedIds',\r\n    loadChildren: () => import('./content-export/content-export.module').then(m => m.ContentExportModule),\r\n    data: { title: 'Export Items' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/permissions/:type/:keyType/:key',\r\n    loadChildren: () => import('./permissions/permissions.module').then(m => m.PermissionsModule),\r\n    data: { title: 'Permissions' },\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, ElementRef, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { DnnAppComponent, Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\n\r\nimport { Context } from './shared/services/context';\r\nimport { keyModuleId, keyContentBlockId } from './shared/constants/session.constants';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent extends DnnAppComponent implements OnInit, OnDestroy {\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    el: ElementRef,\r\n    dnnContext: DnnContext,\r\n    private context: Context,\r\n    private titleService: Title,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private matIconRegistry: MatIconRegistry,\r\n  ) {\r\n    super(\r\n      el,\r\n      dnnContext.preConfigure({\r\n        moduleId: parseInt(sessionStorage.getItem(keyModuleId), 10),\r\n        contentBlockId: parseInt(sessionStorage.getItem(keyContentBlockId), 10),\r\n      }),\r\n    );\r\n    this.context.initRoot();\r\n    this.matIconRegistry.setDefaultFontSetClass('material-icons-outlined');\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Mostly copied from https://blog.bitsrc.io/dynamic-page-titles-in-angular-98ce20b5c334\r\n    // Routes need a data: { title: '...' } for this to work\r\n    const appTitle = this.titleService.getTitle(); // initial title when loading the page\r\n    this.subscription.add(this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      map(() => {\r\n        let child = this.activatedRoute.firstChild;\r\n        while (child.firstChild) {\r\n          child = child.firstChild;\r\n        }\r\n        if (child.snapshot.data['title']) {\r\n          return child.snapshot.data['title'];\r\n        }\r\n        return appTitle;\r\n      })\r\n    ).subscribe((title: string) => {\r\n      this.titleService.setTitle(title);\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Injector } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SxcRoot } from '@2sic.com/2sxc-typings';\r\n\r\nimport { UrlHelper } from '../../../edit/shared/helpers/url-helper';\r\nimport { DialogTypeConstants } from './shared/constants/dialog-types.constants';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyZoneId, keyAppId, keyDialog, keyTabId, keyRequestToken, keyPortalRoot, keyItems, keyContentType, keyUrl, prefix, keyPipelineId } from './shared/constants/session.constants';\r\nimport { EditForm, EditItem, GroupItem } from './shared/models/edit-form.model';\r\nimport { convertFormToUrl } from './shared/helpers/url-prep.helper';\r\ndeclare const $2sxc: SxcRoot;\r\n\r\nexport function paramsInitFactory(injector: Injector) {\r\n  return () => {\r\n    console.log('Setting parameters config and clearing route');\r\n    const eavKeys = Object.keys(sessionStorage).filter(key => key.startsWith(prefix));\r\n    const isParamsRoute = !window.location.hash.startsWith('#/');\r\n    if (isParamsRoute) {\r\n      console.log('Initial route:', window.location.href);\r\n      // clear our part of the session\r\n      for (const key of eavKeys) {\r\n        sessionStorage.removeItem(key);\r\n      }\r\n      sessionStorage.setItem(keyUrl, window.location.href); // save url which opened the dialog\r\n      sessionStorage.setItem(keyDialog, DialogTypeConstants.Edit); // set edit dialog as the default\r\n\r\n      // save params\r\n      const urlHash = window.location.hash.substring(1); // substring removes first # char\r\n      const queryParametersFromUrl = UrlHelper.readQueryStringParameters(urlHash);\r\n      const paramKeys = Object.keys(queryParametersFromUrl);\r\n      for (const key of paramKeys) {\r\n        const value = queryParametersFromUrl[key];\r\n        if (value === undefined || value === null) { continue; }\r\n        sessionStorage.setItem(prefix + key, value);\r\n      }\r\n\r\n      // redirect\r\n      const router = injector.get(Router);\r\n      const zoneId = sessionStorage.getItem(keyZoneId);\r\n      const appId = sessionStorage.getItem(keyAppId);\r\n      const dialog = sessionStorage.getItem(keyDialog);\r\n      const contentType = sessionStorage.getItem(keyContentType);\r\n      const items = sessionStorage.getItem(keyItems);\r\n      switch (dialog) {\r\n        case DialogTypeConstants.Zone:\r\n          router.navigate([`${zoneId}/apps`]);\r\n          break;\r\n        case DialogTypeConstants.AppImport:\r\n          router.navigate([`${zoneId}/import`]);\r\n          break;\r\n        case DialogTypeConstants.App:\r\n          router.navigate([`${zoneId}/${appId}/app`]);\r\n          break;\r\n        case DialogTypeConstants.ContentType:\r\n          router.navigate([`${zoneId}/${appId}/fields/${contentType}`]);\r\n          break;\r\n        case DialogTypeConstants.ContentItems:\r\n          router.navigate([`${zoneId}/${appId}/items/${contentType}`]);\r\n          break;\r\n        case DialogTypeConstants.Edit:\r\n          const editItems: EditItem[] = JSON.parse(items);\r\n          const form: EditForm = { items: editItems };\r\n          const formUrl = convertFormToUrl(form);\r\n          router.navigate([`${zoneId}/${appId}/edit/${formUrl}`]);\r\n          break;\r\n        case DialogTypeConstants.Develop:\r\n          router.navigate([`${zoneId}/${appId}/code`]);\r\n          break;\r\n        case DialogTypeConstants.PipelineDesigner:\r\n          const pipelineId = sessionStorage.getItem(keyPipelineId);\r\n          router.navigate([`${zoneId}/${appId}/query/${pipelineId}`]);\r\n          break;\r\n        case DialogTypeConstants.Replace:\r\n          const replaceItems: GroupItem[] = JSON.parse(items);\r\n          const rGuid = replaceItems[0].Group.Guid;\r\n          const rPart = replaceItems[0].Group.Part;\r\n          const rIndex = replaceItems[0].Group.Index;\r\n          const add = replaceItems[0].Group.Add;\r\n          const queryParams = add ? { add: true } : {};\r\n          router.navigate([`${zoneId}/${appId}/${rGuid}/${rPart}/${rIndex}/replace`], { queryParams });\r\n          break;\r\n        case DialogTypeConstants.InstanceList:\r\n          const groupItems: GroupItem[] = JSON.parse(items);\r\n          const gGuid = groupItems[0].Group.Guid;\r\n          const gPart = groupItems[0].Group.Part;\r\n          const gIndex = groupItems[0].Group.Index;\r\n          router.navigate([`${zoneId}/${appId}/${gGuid}/${gPart}/${gIndex}/reorder`]);\r\n          break;\r\n        default:\r\n          alert(`Cannot open unknown dialog \"${dialog}\"`);\r\n          try {\r\n            (window.parent as any).$2sxc.totalPopup.close();\r\n          } catch (error) { }\r\n      }\r\n    } else if (eavKeys.length === 0) {\r\n      // if not params route and no params are saved, e.g. browser was reopened, throw error\r\n      alert('Missing required url parameters. Please reopen dialog.');\r\n      throw new Error('Missing required url parameters. Please reopen dialog.');\r\n    } else {\r\n      console.log('Initial route:', sessionStorage.getItem(keyUrl));\r\n    }\r\n\r\n    loadEnvironment();\r\n  };\r\n}\r\n\r\nfunction loadEnvironment() {\r\n  $2sxc.env.load({\r\n    page: parseInt(sessionStorage.getItem(keyTabId), 10),\r\n    rvt: sessionStorage.getItem(keyRequestToken),\r\n    root: sessionStorage.getItem(keyPortalRoot),\r\n    api: sessionStorage.getItem(keyPortalRoot) + 'desktopmodules/2sxc/api/',\r\n  });\r\n}\r\n","import { EntityMetadataMap } from '@ngrx/data';\r\n\r\nexport const entityMetadata: EntityMetadataMap = {\r\n  Item: {\r\n    selectId: itemSelectId,\r\n  },\r\n  Feature: {},\r\n  Language: {\r\n    selectId: languageSelectId,\r\n  },\r\n  LanguageInstance: {\r\n    selectId: languageInstanceSelectId,\r\n  },\r\n  ContentType: {\r\n    selectId: contentTypeSelectId,\r\n  },\r\n  InputType: {\r\n    selectId: InputTypeSelectId,\r\n  },\r\n};\r\n\r\nexport const pluralNames = {\r\n  Feature: 'Features', // example\r\n};\r\n\r\nexport const entityConfig = {\r\n  entityMetadata,\r\n  pluralNames,\r\n};\r\n\r\nexport function itemSelectId<T extends { entity: any }>(entity: T) {\r\n  return entity === null ? undefined : entity.entity.guid;\r\n}\r\n\r\nexport function languageSelectId<T extends { key: any }>(entity: T) {\r\n  return entity === null ? undefined : entity.key;\r\n}\r\n\r\nexport function languageInstanceSelectId<T extends { formId: any }>(entity: T) {\r\n  return entity === null ? undefined : entity.formId;\r\n}\r\n\r\nexport function contentTypeSelectId<T extends { contentType: any }>(entity: T) {\r\n  return entity === null ? undefined : entity.contentType.id;\r\n}\r\n\r\nexport function InputTypeSelectId<T extends { Type: any }>(entity: T) {\r\n  return entity === null ? undefined : entity.Type;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class SetHeadersInterceptor implements HttpInterceptor {\r\n\r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let modified: HttpRequest<any>;\r\n    if (req.body instanceof FormData) {\r\n      // sending files. Do not set content type so browser can add delimiter boundary automatically\r\n      return next.handle(req);\r\n    } else {\r\n      modified = req.clone({\r\n        setHeaders: {\r\n          'Content-Type': 'application/json;charset=UTF-8',\r\n        }\r\n      });\r\n      return next.handle(modified);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class HandleErrorsInterceptor implements HttpInterceptor {\r\n  /** URLs excluded from detailed error alert  */\r\n  private excludedUrls = [\r\n    'dist/ng-edit/i18n',\r\n  ];\r\n\r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        if (!this.checkIfExcluded(error.url)) {\r\n          this.showDetailedHttpError(error);\r\n        }\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  private checkIfExcluded(url: string) {\r\n    for (const excludedUrl of this.excludedUrls) {\r\n      if (url.includes(excludedUrl)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private showDetailedHttpError(error: HttpErrorResponse) {\r\n    let infoText = 'Had an error talking to the server (status ' + error.status + ').';\r\n    const srvResp = error.error;\r\n    if (srvResp) {\r\n      const msg = srvResp.Message;\r\n      if (msg) { infoText += '\\nMessage: ' + msg; }\r\n      const msgDet = srvResp.MessageDetail || srvResp.ExceptionMessage;\r\n      if (msgDet) { infoText += '\\nDetail: ' + msgDet; }\r\n\r\n      if (msgDet && msgDet.indexOf('No action was found') === 0) {\r\n        if (msgDet.indexOf('that matches the name') > 0) {\r\n          infoText += '\\n\\nTip from 2sxc: you probably got the action-name wrong in your JS.';\r\n        } else if (msgDet.indexOf('that matches the request.') > 0) {\r\n          infoText += '\\n\\nTip from 2sxc: Seems like the parameters are the wrong amount or type.';\r\n        }\r\n      }\r\n\r\n      if (msg && msg.indexOf('Controller') === 0 && msg.indexOf('not found') > 0) {\r\n        infoText += '\\n\\nTip from 2sxc: you probably spelled the controller name wrong or forgot to remove the word \\'controller\\' from the call in JS. To call a controller called \\'DemoController\\' only use \\'Demo\\'.';\r\n      }\r\n      infoText += '\\n\\nif you are an advanced user you can learn more about what went wrong - discover how on 2sxc.org/help?tag=debug';\r\n    }\r\n\r\n    alert(infoText);\r\n  }\r\n}\r\n","import { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { NgModule, APP_INITIALIZER, Injector } from '@angular/core';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { EntityDataModule } from '@ngrx/data';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { DnnInterceptor } from '@2sic.com/dnn-sxc-angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { Context } from './shared/services/context';\r\nimport { paramsInitFactory } from './params-init.factory';\r\nimport { entityConfig } from '../../../edit/shared/store/ngrx-data/entity-metadata';\r\nimport { metaReducers, reducers } from '../../../edit/shared/store';\r\nimport { SetHeadersInterceptor } from './shared/interceptors/set-headers.interceptor';\r\nimport { HandleErrorsInterceptor } from './shared/interceptors/handle-errors.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    StoreModule.forRoot(reducers, { metaReducers, runtimeChecks: { strictStateImmutability: true, strictActionImmutability: true } }),\r\n    EffectsModule.forRoot([]),\r\n    StoreDevtoolsModule.instrument({ maxAge: 25 }),\r\n    EntityDataModule.forRoot(entityConfig),\r\n    TranslateModule.forRoot(),\r\n    MatSnackBarModule,\r\n  ],\r\n  providers: [\r\n    { provide: APP_INITIALIZER, useFactory: paramsInitFactory, deps: [Injector], multi: true },\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\r\n    DnnInterceptor,\r\n    { provide: HTTP_INTERCEPTORS, useClass: SetHeadersInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: HandleErrorsInterceptor, multi: true },\r\n    Context,\r\n    Title\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}