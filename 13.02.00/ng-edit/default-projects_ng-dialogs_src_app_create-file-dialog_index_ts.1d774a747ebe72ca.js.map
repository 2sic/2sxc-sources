{"version":3,"mappings":"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","names":["appFilesAsset","SourceService","http","context","dnnContext","this","viewKey","global","urlItems","get","$2sxc","apiUrl","params","Object","appId","templateIdOrPath","pipe","map","view","Type","toLocaleLowerCase","Extension","post","Files","r","forEach","d","Shared","_a","C","mask","withSubfolders","getAll","paths","splitIndex","path","lastIndexOf","fileExtIndex","folder","substring","name","apiPath","zoneId","purpose","type","templateKey","test","find","N","EntityId","toString","i","IsShared","Path","templateId","F","i0","factory","defaultThrottleConfig","leading","trailing","durationSelector","operate","source","subscriber","hasValue","sendValue","throttled","isComplete","endThrottling","unsubscribe","send","complete","cleanupThrottling","startThrottle","value","innerFrom","subscribe","OperatorSubscriber","next","closed","MatInputAutofocusDirective","matInput","elementRef","setTimeout","t","focus","toBoolean","autofocusSelectValue","nativeElement","setSelectionRange","length","valueLowerCase","selectors","ctx_r14","ctx_r16","CreateFileDialogComponent","dialogData","dialogRef","sourceService","subscription","Subscription","templates$","BehaviorSubject","loadingPreview$","buildForm","fetchTemplates","buildTemplateVars","result","close","formValues","form","getRawValue","closeDialog","finalName","getPredefinedTemplates","controls","response","Default","patchValue","Templates","FormGroup","platform","FormControl","all","p","disabled","Validators","y","_b","add","combineLatest","valueChanges","startWith","distinctUntilChanged","P","template","Key","suggestedName","s","f","SuggestedFileName","trim","SanitizeHelper","h","g","Prefix","concat","m","Suffix","x","_c","replace","platforms$","platformsMap","templates","Platforms","keys","purposes$","purposesMap","Purpose","l","filter","b","includes","tap","some","newTemplateKey","preview$","duration","config","arguments","duration$","timer","asyncScheduler","throttle","throttleTime","switchMap","forkJoin","getPreview","of","undefined","templateVars$","preview","platforms","purposes","loadingPreview","Preview","previewValid","IsValid","previewError","Error","MAT_DIALOG_DATA","CreateFileDialogModule","_","Context","imports","CommonModule","SharedComponentsModule","MatButtonModule","MatSelectModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","MatProgressSpinnerModule"],"sources":["./projects/ng-dialogs/src/app/code-editor/services/source.service.ts","./node_modules/rxjs/dist/esm/internal/operators/throttle.js","./projects/ng-dialogs/src/app/shared/directives/mat-input-autofocus.directive.ts","./projects/ng-dialogs/src/app/create-file-dialog/create-file-dialog.component.html","./projects/ng-dialogs/src/app/create-file-dialog/create-file-dialog.component.ts","./node_modules/rxjs/dist/esm/internal/operators/throttleTime.js","./projects/ng-dialogs/src/app/create-file-dialog/create-file-dialog.module.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { WebApi, WebApiDetails } from '../../app-administration/models';\r\nimport { SourceItem } from '../../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FileAsset } from '../models/file-asset.model';\r\nimport { PredefinedTemplatesResponse } from '../models/predefined-template.model';\r\nimport { Preview } from '../models/preview.models';\r\nimport { SourceView } from '../models/source-view.model';\r\n\r\nconst appFilesAllNew = 'admin/AppFiles/AppFiles';\r\nconst appFilesAll = 'admin/AppFiles/all';\r\nconst appFilesAsset = 'admin/AppFiles/asset';\r\nconst appFilesCreate = 'admin/AppFiles/create';\r\nconst apiExplorerInspect = 'admin/ApiExplorer/inspect';\r\nconst appFilesPredefinedTemplates = 'admin/AppFiles/GetTemplates';\r\nconst appFilesPreview = 'admin/AppFiles/preview';\r\n\r\n@Injectable()\r\nexport class SourceService {\r\n\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /** ViewKey is templateId or path */\r\n  get(viewKey: string, global: boolean, urlItems: SourceItem[]): Observable<SourceView> {\r\n    return this.http.get<SourceView>(this.dnnContext.$2sxc.http.apiUrl(appFilesAsset), {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    }).pipe(\r\n      map(view => {\r\n        if (view.Type.toLocaleLowerCase() === 'auto') {\r\n          switch (view.Extension.toLocaleLowerCase()) {\r\n            case '.cs':\r\n            case '.cshtml':\r\n              view.Type = 'Razor';\r\n              break;\r\n            case '.html':\r\n            case '.css':\r\n            case '.js':\r\n              view.Type = 'Token';\r\n              break;\r\n          }\r\n        }\r\n        return view;\r\n      })\r\n    );\r\n  }\r\n\r\n  /** ViewKey is templateId or path */\r\n  save(viewKey: string, global: boolean, view: SourceView, urlItems: SourceItem[]): Observable<boolean> {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(appFilesAsset), view, {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    });\r\n  }\r\n\r\n  getAllNew(): Observable<FileAsset[]> {\r\n    return this.http.get<{ Files: FileAsset[] }>(this.dnnContext.$2sxc.http.apiUrl(appFilesAllNew), {\r\n      params: { appId: this.context.appId },\r\n    }).pipe(\r\n      map(({ Files }) => {\r\n        Files.forEach(file => {\r\n          file.Shared ??= false;\r\n        });\r\n        return Files;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getAll(global: boolean, mask?: string): Observable<string[]> {\r\n    return this.http.get<string[]>(this.dnnContext.$2sxc.http.apiUrl(appFilesAll), {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        ...(mask && { mask }),\r\n        withSubfolders: 'true',\r\n      },\r\n    });\r\n  }\r\n\r\n  getWebApis(global: boolean): Observable<WebApi[]> {\r\n    return this.getAll(global, '*Controller.cs').pipe(\r\n      map(paths => {\r\n        const webApis: WebApi[] = paths.map(path => {\r\n          const splitIndex = path.lastIndexOf('/');\r\n          const fileExtIndex = path.lastIndexOf('.');\r\n          const folder = path.substring(0, splitIndex);\r\n          const name = path.substring(splitIndex + 1, fileExtIndex);\r\n          const webApi: WebApi = { path, folder, name };\r\n          return webApi;\r\n        });\r\n        return webApis;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getWebApiDetails(apiPath: string): Observable<WebApiDetails> {\r\n    return this.http.get<WebApiDetails>(this.dnnContext.$2sxc.http.apiUrl(apiExplorerInspect), {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId, path: apiPath },\r\n    });\r\n  }\r\n\r\n  getPredefinedTemplates(purpose?: 'Template' | 'Search' | 'Api', type?: 'Token' | 'Razor'): Observable<PredefinedTemplatesResponse> {\r\n    return this.http.get<PredefinedTemplatesResponse>(this.dnnContext.$2sxc.http.apiUrl(appFilesPredefinedTemplates), {\r\n      params: {\r\n        ...(purpose && { purpose }),\r\n        ...(type && { type }),\r\n      },\r\n    });\r\n  }\r\n\r\n  getPreview(path: string, global: boolean, templateKey: string): Observable<Preview> {\r\n    return this.http.get<Preview>(this.dnnContext.$2sxc.http.apiUrl(appFilesPreview), {\r\n      params: {\r\n        appId: this.context.appId,\r\n        path,\r\n        templateKey,\r\n        global,\r\n      },\r\n    });\r\n  }\r\n\r\n  create(path: string, global: boolean, templateKey: string): Observable<boolean> {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(appFilesCreate), {}, {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        purpose: 'auto',\r\n        path,\r\n        templateKey,\r\n      },\r\n    });\r\n  }\r\n\r\n  private templateIdOrPath(viewKey: string, global: boolean, urlItems: SourceItem[]) {\r\n    if (/^[0-9]*$/g.test(viewKey)) {\r\n      const path = urlItems.find(i => i.EntityId?.toString() === viewKey && i.IsShared === global)?.Path;\r\n      return {\r\n        templateId: viewKey,\r\n        ...(path != null && { path }),\r\n      };\r\n    } else {\r\n      return { path: viewKey };\r\n    }\r\n  }\r\n}\r\n","import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false,\n};\nexport function throttle(durationSelector, { leading, trailing } = defaultThrottleConfig) {\n    return operate((source, subscriber) => {\n        let hasValue = false;\n        let sendValue = null;\n        let throttled = null;\n        let isComplete = false;\n        const endThrottling = () => {\n            throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();\n            throttled = null;\n            if (trailing) {\n                send();\n                isComplete && subscriber.complete();\n            }\n        };\n        const cleanupThrottling = () => {\n            throttled = null;\n            isComplete && subscriber.complete();\n        };\n        const startThrottle = (value) => (throttled = innerFrom(durationSelector(value)).subscribe(new OperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n        const send = () => {\n            if (hasValue) {\n                hasValue = false;\n                const value = sendValue;\n                sendValue = null;\n                subscriber.next(value);\n                !isComplete && startThrottle(value);\n            }\n        };\n        source.subscribe(new OperatorSubscriber(subscriber, (value) => {\n            hasValue = true;\n            sendValue = value;\n            !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        }, () => {\n            isComplete = true;\n            !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }));\n    });\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\r\nimport { MatInput } from '@angular/material/input';\r\n\r\n@Directive({ selector: '[appMatInputAutofocus]' })\r\nexport class MatInputAutofocusDirective implements OnInit {\r\n  @Input() autofocusSelectValue: string | boolean | null | undefined = false;\r\n\r\n  constructor(private matInput: MatInput, private elementRef: ElementRef<HTMLInputElement>) { }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.matInput.focus();\r\n\r\n      if (this.toBoolean(this.autofocusSelectValue)) {\r\n        this.elementRef.nativeElement.setSelectionRange(0, this.matInput.value.length);\r\n      }\r\n    });\r\n  }\r\n\r\n  private toBoolean(value: any): boolean | null | undefined {\r\n    if (typeof value === 'boolean') { return value; }\r\n    if (typeof value === 'string') {\r\n      const valueLowerCase = value.toLocaleLowerCase();\r\n      if (valueLowerCase === 'true') { return true; }\r\n      if (valueLowerCase === 'false') { return false; }\r\n      return;\r\n    }\r\n    if (value == null) { return value; }\r\n  }\r\n}\r\n","<ng-container *ngIf=\"templateVars$ | async as data\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box hide-scrollbar\">\r\n      <span>Create</span>\r\n      <span class=\"file-name\">{{\r\n        controls.finalName.value\r\n        || (controls.folder.value ? controls.folder.value.trim() + '/' : '')\r\n        }}</span>\r\n    </div>\r\n  </div>\r\n\r\n  <form [formGroup]=\"form\" class=\"dialog-form\">\r\n    <div class=\"dialog-form-content fancy-scrollbar-light\">\r\n\r\n      <div class=\"field-container multiple\">\r\n        <!-- Platform -->\r\n        <div class=\"multiple-field\">\r\n          <mat-form-field appearance=\"standard\" color=\"accent\">\r\n            <mat-label>Platform</mat-label>\r\n            <mat-select formControlName=\"platform\">\r\n              <mat-option *ngFor=\"let platform of data.platforms\" [value]=\"platform\">\r\n                {{ platform }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <!-- Purpose -->\r\n        <div class=\"multiple-field\">\r\n          <mat-form-field appearance=\"standard\" color=\"accent\">\r\n            <mat-label>Purpose</mat-label>\r\n            <mat-select formControlName=\"purpose\">\r\n              <mat-option *ngFor=\"let purpose of data.purposes\" [value]=\"purpose\">\r\n                {{ purpose }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Template -->\r\n      <div class=\"field-container\">\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Template</mat-label>\r\n          <mat-select formControlName=\"templateKey\">\r\n            <mat-option *ngFor=\"let template of data.templates\" [value]=\"template.Key\">\r\n              {{ template.Name }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <!-- Name -->\r\n      <div class=\"field-container\">\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"name\" required appMatInputAutofocus autofocusSelectValue=\"true\">\r\n        </mat-form-field>\r\n        <app-field-hint *ngIf=\"controls.name.touched && controls.name.errors?.required\" [isError]=\"true\">\r\n          This field is required\r\n        </app-field-hint>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"dialog-form-actions\">\r\n      <ng-container *ngIf=\"data.loadingPreview\">\r\n        <mat-spinner mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n        <div class=\"spacer\"></div>\r\n      </ng-container>\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\"\r\n        [disabled]=\"!form.valid || data.loadingPreview || !data.previewValid\" (click)=\"confirm()\">\r\n        Create\r\n      </button>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"data.preview\">\r\n      <div class=\"preview-label-box\">\r\n        <label class=\"preview-label\" [ngClass]=\"{ 'disabled': data.loadingPreview }\">Preview</label>\r\n      </div>\r\n      <pre class=\"fancy-scrollbar-light\" [ngClass]=\"{ 'disabled': data.loadingPreview }\">{{ data.preview }}</pre>\r\n    </ng-container>\r\n\r\n    <div class=\"preview-error\" *ngIf=\"!data.loadingPreview && data.previewError\">\r\n      {{ data.previewError }}\r\n    </div>\r\n  </form>\r\n</ng-container>\r\n","import { Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { asyncScheduler, BehaviorSubject, combineLatest, forkJoin, Observable, of, Subscription, timer } from 'rxjs';\r\nimport { distinctUntilChanged, map, startWith, switchMap, tap, throttleTime } from 'rxjs/operators';\r\nimport { CreateFileDialogData, CreateFileDialogResult, CreateFileFormControls, CreateFileFormValues, CreateFileTemplateVars } from '.';\r\nimport { SanitizeHelper } from '../../../../edit/shared/helpers';\r\nimport { PredefinedTemplate } from '../code-editor/models/predefined-template.model';\r\nimport { Preview } from '../code-editor/models/preview.models';\r\nimport { SourceService } from '../code-editor/services/source.service';\r\n\r\n@Component({\r\n  selector: 'app-create-file-dialog',\r\n  templateUrl: './create-file-dialog.component.html',\r\n  styleUrls: ['./create-file-dialog.component.scss']\r\n})\r\nexport class CreateFileDialogComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: FormGroup;\r\n  controls: CreateFileFormControls;\r\n  templateVars$: Observable<CreateFileTemplateVars>;\r\n\r\n  private all = 'All' as const;\r\n  private templates$: BehaviorSubject<PredefinedTemplate[]>;\r\n  private loadingPreview$: BehaviorSubject<boolean>;\r\n  private subscription: Subscription;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: CreateFileDialogData,\r\n    private dialogRef: MatDialogRef<CreateFileDialogComponent>,\r\n    private sourceService: SourceService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = new Subscription();\r\n    this.templates$ = new BehaviorSubject<PredefinedTemplate[]>([]);\r\n    this.loadingPreview$ = new BehaviorSubject(false);\r\n\r\n    this.buildForm();\r\n    this.fetchTemplates();\r\n    this.buildTemplateVars();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.templates$.complete();\r\n    this.loadingPreview$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  closeDialog(result?: CreateFileDialogResult): void {\r\n    this.dialogRef.close(result);\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: CreateFileFormValues = this.form.getRawValue();\r\n\r\n    const result: CreateFileDialogResult = {\r\n      name: formValues.finalName,\r\n      templateKey: formValues.templateKey,\r\n    };\r\n    this.closeDialog(result);\r\n  }\r\n\r\n  private fetchTemplates(): void {\r\n    this.sourceService.getPredefinedTemplates(this.dialogData.purpose, this.dialogData.type).subscribe(response => {\r\n      if (this.controls.templateKey.value !== response.Default) {\r\n        this.controls.templateKey.patchValue(response.Default);\r\n      }\r\n      this.templates$.next(response.Templates);\r\n    });\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new FormGroup({\r\n      platform: new FormControl(this.all),\r\n      purpose: new FormControl({ value: this.dialogData.purpose ?? this.all, disabled: this.dialogData.purpose != null }),\r\n      templateKey: new FormControl(null, Validators.required),\r\n      name: new FormControl(null, Validators.required),\r\n      finalName: new FormControl({ value: null, disabled: true }),\r\n      folder: new FormControl({ value: this.dialogData.folder ?? '', disabled: true }),\r\n    });\r\n\r\n    this.controls = this.form.controls as any;\r\n\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.templates$,\r\n        this.controls.templateKey.valueChanges.pipe(\r\n          startWith<string>(this.controls.templateKey.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n      ]).subscribe(([templates, templateKey]) => {\r\n        const template = templates.find(t => t.Key === templateKey);\r\n        const suggestedName = template?.SuggestedFileName ?? null;\r\n\r\n        if (this.controls.name.value !== suggestedName) {\r\n          this.controls.name.patchValue(suggestedName);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.templates$,\r\n        this.controls.templateKey.valueChanges.pipe(\r\n          startWith<string>(this.controls.templateKey.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n        this.controls.name.valueChanges.pipe(\r\n          startWith<string>(this.controls.name.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n        this.controls.folder.valueChanges.pipe(\r\n          startWith<string>(this.controls.folder.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n      ]).subscribe(([templates, templateKey, name, folder]) => {\r\n        const template = templates.find(t => t.Key === templateKey);\r\n\r\n        let finalName: string = null;\r\n        if (name) {\r\n          folder = folder.trim();\r\n          name = SanitizeHelper.sanitizePath(name.trim());\r\n          name = `${template?.Prefix ?? ''}${name}${template?.Suffix ?? ''}${template?.Extension ?? ''}`;\r\n          finalName = `${folder ? `${folder}/` : ''}${name}`.replace(/\\/{2,}/g, '/');\r\n        }\r\n\r\n        if (this.controls.finalName.value !== finalName) {\r\n          this.controls.finalName.patchValue(finalName);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private buildTemplateVars(): void {\r\n    const platforms$ = this.templates$.pipe(\r\n      map(templates => {\r\n        const platformsMap: Record<string, string> = {\r\n          [this.all]: this.all,\r\n        };\r\n        templates.forEach(template => {\r\n          template.Platforms?.forEach(platform => {\r\n            platformsMap[platform] = platform;\r\n          });\r\n        });\r\n        return Object.keys(platformsMap);\r\n      }),\r\n    );\r\n    const purposes$ = this.templates$.pipe(\r\n      map(templates => {\r\n        const purposesMap: Record<string, string> = {\r\n          [this.all]: this.all,\r\n        };\r\n        templates.forEach(template => {\r\n          purposesMap[template.Purpose] = template.Purpose;\r\n        });\r\n        return Object.keys(purposesMap);\r\n      }),\r\n    );\r\n    const templates$ = combineLatest([\r\n      this.templates$,\r\n      this.controls.platform.valueChanges.pipe(\r\n        startWith<string>(this.controls.platform.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n      this.controls.purpose.valueChanges.pipe(\r\n        startWith<string>(this.controls.purpose.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n    ]).pipe(\r\n      map(([templates, platform, purpose]) => {\r\n        const filtered = templates.filter(template => {\r\n          const platformMatch = platform === this.all || (template.Platforms?.includes(platform) ?? false);\r\n          const purposeMatch = purpose === this.all || template.Purpose === purpose;\r\n          return platformMatch && purposeMatch;\r\n        });\r\n        return filtered;\r\n      }),\r\n      tap(templates => {\r\n        if (!templates.some(t => t.Key === this.controls.templateKey.value)) {\r\n          const newTemplateKey = templates[0]?.Key ?? null;\r\n          if (this.controls.templateKey.value !== newTemplateKey) {\r\n            this.controls.templateKey.patchValue(newTemplateKey);\r\n          }\r\n        }\r\n      }),\r\n    );\r\n    const preview$ = combineLatest([\r\n      this.controls.finalName.valueChanges.pipe(\r\n        startWith<string>(this.controls.finalName.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n      this.controls.templateKey.valueChanges.pipe(\r\n        startWith<string>(this.controls.templateKey.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n    ]).pipe(\r\n      throttleTime(100, asyncScheduler, { leading: true, trailing: true }),\r\n      tap(() => {\r\n        this.loadingPreview$.next(true);\r\n      }),\r\n      switchMap(([finalName, templateKey]) => {\r\n        return !finalName || !templateKey\r\n          ? of<Preview | undefined>(undefined)\r\n          : forkJoin([\r\n            this.sourceService.getPreview(finalName, this.dialogData.global, templateKey),\r\n            timer(500),\r\n          ]).pipe(map(([preview]) => preview));\r\n      }),\r\n      tap(() => {\r\n        this.loadingPreview$.next(false);\r\n      }),\r\n    );\r\n    this.templateVars$ = combineLatest([platforms$, purposes$, templates$, preview$, this.loadingPreview$]).pipe(\r\n      map(([platforms, purposes, templates, preview, loadingPreview]) => {\r\n        const templateVars: CreateFileTemplateVars = {\r\n          platforms,\r\n          purposes,\r\n          templates,\r\n          loadingPreview,\r\n          preview: preview?.Preview,\r\n          previewValid: preview?.IsValid ?? false,\r\n          previewError: preview?.Error,\r\n        };\r\n        return templateVars;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { asyncScheduler } from '../scheduler/async';\nimport { defaultThrottleConfig, throttle } from './throttle';\nimport { timer } from '../observable/timer';\nexport function throttleTime(duration, scheduler = asyncScheduler, config = defaultThrottleConfig) {\n    const duration$ = timer(duration, scheduler);\n    return throttle(() => duration$, config);\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { CreateFileDialogComponent } from '.';\r\nimport { SourceService } from '../code-editor/services/source.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CreateFileDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedComponentsModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  exports: [\r\n    CreateFileDialogComponent,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    SourceService,\r\n  ],\r\n})\r\nexport class CreateFileDialogModule { }\r\n"],"sourceRoot":"webpack:///","file":"default-projects_ng-dialogs_src_app_create-file-dialog_index_ts.1d774a747ebe72ca.js"}