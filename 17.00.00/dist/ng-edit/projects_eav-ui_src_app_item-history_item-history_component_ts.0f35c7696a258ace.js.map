{"version":3,"file":"projects_eav-ui_src_app_item-history_item-history_component_ts.0f35c7696a258ace.js","mappings":"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","names":["calcHistoryAttributes","version","versions","compareWith","currentDataTypes","JSON","parse","Json","Entity","Attributes","previousItem","findLive","liveVersion","VersionNumber","find","v","previousDataTypes","allAttributes","Object","entries","forEach","dataType","attributes","keys","attributeName","a","name","push","map","attribute","currentValues","previousValues","change","calcChangeType","values","calcHistoryValues","allLangKeys","lang","includes","langKey","currentValue","previousValue","value","oldValue","sortObjectKeys","sortKeysAlphabetically","stringify","obj","sort","reduce","acc","key","e","i0","$event","_r8","ctx_r7","compareChange","vm_r1","attribute_r15","value_r20","ItemHistoryComponent_ng_container_0_mat_accordion_15_mat_expansion_panel_1_ng_container_7_div_1_div_9_div_1_div_4_Template","ItemHistoryComponent_ng_container_0_mat_accordion_15_mat_expansion_panel_1_ng_container_7_div_1_div_9_div_1_ng_container_5_Template","ItemHistoryComponent_ng_container_0_mat_accordion_15_mat_expansion_panel_1_ng_container_7_div_1_div_9_div_1_Template","_r28","$implicit","historyItem_r11","ctx_r26","attributeExpandedToggle","versionNumber","ItemHistoryComponent_ng_container_0_mat_accordion_15_mat_expansion_panel_1_ng_container_7_div_1_ng_container_5_Template","ItemHistoryComponent_ng_container_0_mat_accordion_15_mat_expansion_panel_1_ng_container_7_div_1_div_9_Template","ctx_r13","expandedAttributes","_r32","ctx_r30","restore","changeSetId","ItemHistoryComponent_ng_container_0_mat_accordion_15_mat_expansion_panel_1_ng_container_7_div_1_Template","ItemHistoryComponent_ng_container_0_mat_accordion_15_mat_expansion_panel_1_ng_container_7_button_3_Template","isLastVersion","_r35","ctx_r34","panelExpandedChange","ItemHistoryComponent_ng_container_0_mat_accordion_15_mat_expansion_panel_1_ng_container_7_Template","ctx_r10","expandedPanels","timeStamp","ItemHistoryComponent_ng_container_0_mat_accordion_15_mat_expansion_panel_1_Template","historyItems","_r38","ctx_r37","pageChange","length","pageSize","ctx_r6","pageSizeOptions","_r41","ctx_r40","closeDialog","ItemHistoryComponent_ng_container_0_div_11_Template","ItemHistoryComponent_ng_container_0_div_13_Template","ItemHistoryComponent_ng_container_0_div_14_Template","ItemHistoryComponent_ng_container_0_mat_accordion_15_Template","ItemHistoryComponent_ng_container_0_mat_paginator_16_Template","ItemHistoryComponent","constructor","dialogRef","route","versionsService","snackBar","this","hostClass","itemId","parseInt","snapshot","paramMap","get","versions$","BehaviorSubject","page$","pageSize$","compareWith$","historyItems$","combineLatest","pipe","page","getHistoryItems","calcHistoryItems","filteredVersions","ChangeSetId","historyId","HistoryId","TimeStamp","user","User","some","slice","viewModel$","ngOnInit","fetchVersions","subscribe","next","ngOnDestroy","complete","close","newCompareWith","expand","event","newPage","pageIndex","newPageSize","changeId","open","res","duration","refreshEdit","static","t","i1","i2","i3","i4","core","Xpm","selectors","hostVars","hostBindings","rf","ctx","ItemHistoryComponent_ng_container_0_Template"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/item-history/item-history.helpers.ts","./projects/eav-ui/src/app/item-history/item-history.component.html","./projects/eav-ui/src/app/item-history/item-history.component.ts"],"sourcesContent":["import { CompareWith } from './models/compare-with.model';\r\nimport { HistoryAttribute, HistoryAttributeValue, HistoryItem } from './models/history-item.model';\r\nimport { Version, VersionEntityAttributeValues, VersionJsonParsed } from './models/version.model';\r\n\r\nexport function getHistoryItems(versions: Version[], page: number, pageSize: number, compareWith: CompareWith) {\r\n  if (versions == null || page == null || pageSize == null || compareWith == null) { return null; }\r\n  const filtered = versions.slice((page - 1) * pageSize, page * pageSize);\r\n\r\n  const historyItems = calcHistoryItems(filtered, versions, compareWith);\r\n  return historyItems;\r\n}\r\n\r\nfunction calcHistoryItems(filteredVersions: Version[], versions: Version[], compareWith: CompareWith) {\r\n  return filteredVersions.map(version => {\r\n    const historyItem: HistoryItem = {\r\n      changeSetId: version.ChangeSetId,\r\n      attributes: calcHistoryAttributes(version, versions, compareWith),\r\n      historyId: version.HistoryId,\r\n      timeStamp: version.TimeStamp,\r\n      user: version.User,\r\n      versionNumber: version.VersionNumber,\r\n      isLastVersion: !versions.some(v => v.VersionNumber === version.VersionNumber + 1),\r\n    };\r\n    return historyItem;\r\n  });\r\n}\r\n\r\nfunction calcHistoryAttributes(version: Version, versions: Version[], compareWith: CompareWith) {\r\n  const currentDataTypes = (JSON.parse(version.Json) as VersionJsonParsed).Entity.Attributes;\r\n  const previousItem = compareWith === 'live' ? findLive(versions) : versions.find(v => v.VersionNumber === version.VersionNumber - 1);\r\n  const previousDataTypes = previousItem ? (JSON.parse(previousItem.Json) as VersionJsonParsed).Entity.Attributes : null;\r\n\r\n  const allAttributes: { name: string, dataType: string }[] = [];\r\n  if (currentDataTypes != null) {\r\n    Object.entries(currentDataTypes).forEach(([dataType, attributes]) => {\r\n      Object.keys(attributes).forEach(attributeName => {\r\n        if (allAttributes.find(a => a.name === attributeName && a.dataType === dataType) != null) { return; }\r\n        allAttributes.push({ name: attributeName, dataType });\r\n      });\r\n    });\r\n  }\r\n  if (previousDataTypes != null) {\r\n    Object.entries(previousDataTypes).forEach(([dataType, attributes]) => {\r\n      Object.keys(attributes).forEach(attributeName => {\r\n        if (allAttributes.find(a => a.name === attributeName && a.dataType === dataType) != null) { return; }\r\n        allAttributes.push({ name: attributeName, dataType });\r\n      });\r\n    });\r\n  }\r\n\r\n  const historyAttributes = allAttributes.map(attribute => {\r\n    const currentValues = currentDataTypes?.[attribute.dataType]?.[attribute.name];\r\n    const previousValues = previousDataTypes?.[attribute.dataType]?.[attribute.name];\r\n\r\n    const historyAttribute: HistoryAttribute = {\r\n      name: attribute.name,\r\n      dataType: attribute.dataType,\r\n      change: calcChangeType(currentValues, previousValues, true),\r\n      values: calcHistoryValues(currentValues, previousValues),\r\n    };\r\n    return historyAttribute;\r\n  });\r\n\r\n  return historyAttributes;\r\n}\r\n\r\nfunction findLive(versions: Version[]) {\r\n  let liveVersion = versions[0];\r\n  for (const version of versions) {\r\n    if (version.VersionNumber <= liveVersion.VersionNumber) { continue; }\r\n    liveVersion = version;\r\n  }\r\n  return liveVersion;\r\n}\r\n\r\nfunction calcHistoryValues(values: VersionEntityAttributeValues, previousValues: VersionEntityAttributeValues) {\r\n  const allLangKeys: string[] = [];\r\n  if (values != null) {\r\n    Object.keys(values).forEach(lang => {\r\n      if (allLangKeys.includes(lang)) { return; }\r\n      allLangKeys.push(lang);\r\n    });\r\n  }\r\n  if (previousValues != null) {\r\n    Object.keys(previousValues).forEach(lang => {\r\n      if (allLangKeys.includes(lang)) { return; }\r\n      allLangKeys.push(lang);\r\n    });\r\n  }\r\n\r\n  const historyValues = allLangKeys.map(langKey => {\r\n    const currentValue = values?.[langKey];\r\n    const previousValue = previousValues?.[langKey];\r\n\r\n    const historyValue: HistoryAttributeValue = {\r\n      langKey,\r\n      value: currentValue,\r\n      oldValue: previousValue,\r\n      change: calcChangeType(currentValue, previousValue),\r\n    };\r\n    return historyValue;\r\n  });\r\n\r\n  return historyValues;\r\n}\r\n\r\nfunction calcChangeType(currentValue: any, previousValue: any, sortObjectKeys = false) {\r\n  let change: 'new' | 'deleted' | 'changed' | 'none';\r\n\r\n  if (sortObjectKeys) {\r\n    if (typeof currentValue === 'object') {\r\n      currentValue = sortKeysAlphabetically(currentValue);\r\n    }\r\n    if (typeof previousValue === 'object') {\r\n      previousValue = sortKeysAlphabetically(previousValue);\r\n    }\r\n  }\r\n\r\n  if (currentValue != null && previousValue != null) {\r\n    if (JSON.stringify(currentValue) !== JSON.stringify(previousValue)) {\r\n      change = 'changed';\r\n    } else {\r\n      change = 'none';\r\n    }\r\n  } else if (currentValue != null) {\r\n    change = 'new';\r\n  } else {\r\n    change = 'deleted';\r\n  }\r\n\r\n  return change;\r\n}\r\n\r\nfunction sortKeysAlphabetically(obj: Record<string, any>): Record<string, any> {\r\n  if (typeof obj !== 'object') { return obj; }\r\n\r\n  return Object.keys(obj).sort().reduce((acc, key) => ({ ...acc, [key]: obj[key] }), {});\r\n}\r\n","<ng-container *ngIf=\"viewModel$ | async as vm\">\r\n  <div class=\"eav-dialog eav-no-scrollbar\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">Item History</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"eav-dialog-content\">\r\n      <p>Check version history for this item and restore the version you need.</p>\r\n    \r\n      <div *ngIf=\"vm.historyItems?.length > 0\" class=\"eav-compare-box\">\r\n        <mat-form-field color=\"accent\" class=\"eav-form-field eav-compare-box__dropdown\">\r\n          <mat-select [value]=\"vm.compareWith\" name=\"Scope\" (selectionChange)=\"compareChange($event.value)\">\r\n            <mat-option value=\"previous\">Compare with: Previous</mat-option>\r\n            <mat-option value=\"live\">Compare with: Live</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    \r\n      <div>\r\n        <div *ngIf=\"vm.historyItems === null\">Loading...</div>\r\n        <div *ngIf=\"vm.historyItems?.length === 0\">No previous versions of this item found</div>\r\n    \r\n        <mat-accordion multi *ngIf=\"vm.historyItems?.length > 0\" class=\"eav-history-tables\">\r\n          <mat-expansion-panel *ngFor=\"let historyItem of vm.historyItems\"\r\n            [expanded]=\"expandedPanels[historyItem.versionNumber]\"\r\n            (expandedChange)=\"panelExpandedChange($event, historyItem.versionNumber)\">\r\n            <mat-expansion-panel-header>\r\n              <mat-panel-title>Version {{ historyItem.versionNumber }}</mat-panel-title>\r\n              <mat-panel-description>{{ historyItem.timeStamp | date:'yyyy-MM-dd hh:mm' }}</mat-panel-description>\r\n            </mat-expansion-panel-header>\r\n    \r\n            <ng-container *ngIf=\"expandedPanels[historyItem.versionNumber]\">\r\n              <div class=\"eav-table-row\" *ngFor=\"let attribute of historyItem.attributes\">\r\n                <div class=\"eav-table-row__main eav-row-main\"\r\n                  (click)=\"attributeExpandedToggle(historyItem.versionNumber, attribute.name)\">\r\n                  <div class=\"eav-row-main__label eav-history-{{ attribute.change }}\">\r\n                    {{ attribute.name }}\r\n                  </div>\r\n                  <div class=\"eav-row-main__value eav-history-{{ attribute.change }}\">\r\n                    <ng-container *ngIf=\"!expandedAttributes[historyItem.versionNumber + attribute.name]\">\r\n                      {{ attribute.values[0]?.value }}\r\n                    </ng-container>\r\n                  </div>\r\n                  <div class=\"eav-row-main__type\">\r\n                    <i>[{{ attribute.dataType }}]</i>\r\n                  </div>\r\n                </div>\r\n    \r\n                <div class=\"eav-table-row__details\" *ngIf=\"expandedAttributes[historyItem.versionNumber + attribute.name]\">\r\n                  <div class=\"eav-detail-row\" *ngFor=\"let value of attribute.values\">\r\n                    <div class=\"eav-detail-row__label eav-history-{{ value.change }}\">{{ value.langKey }}:</div>\r\n                    <div class=\"eav-detail-row__value\">\r\n                      <div class=\"eav-history-{{ value.change }}\" *ngIf=\"value.change !== 'changed'\">\r\n                        {{ value.change === 'deleted' ? value.oldValue : value.value }}\r\n                      </div>\r\n                      <ng-container *ngIf=\"value.change === 'changed'\">\r\n                        <div class=\"eav-history-new\">{{ value.value }}</div>\r\n                        <div class=\"eav-history-deleted eav-history-deleted__value\">{{ value.oldValue }}</div>\r\n                      </ng-container>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n    \r\n              <div class=\"eav-row-actions\">\r\n                <button mat-raised-button color=\"accent\" *ngIf=\"!historyItem.isLastVersion\"\r\n                  (click)=\"restore(historyItem.changeSetId)\">\r\n                  Restore\r\n                </button>\r\n              </div>\r\n            </ng-container>\r\n          </mat-expansion-panel>\r\n        </mat-accordion>\r\n      </div>\r\n    \r\n      <mat-paginator color=\"accent\" showFirstLastButtons=\"true\" [length]=\"vm.length\" [pageSize]=\"vm.pageSize\"\r\n        [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" *ngIf=\"vm.historyItems?.length > 0\">\r\n      </mat-paginator>\r\n    </div>\r\n  </div>\r\n</ng-container>","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, map } from 'rxjs';\r\nimport { getHistoryItems } from './item-history.helpers';\r\nimport { CompareWith } from './models/compare-with.model';\r\nimport { ItemHistoryResult } from './models/item-history-result.model';\r\nimport { Version } from './models/version.model';\r\nimport { VersionsService } from './services/versions.service';\r\n\r\n@Component({\r\n  selector: 'app-item-history',\r\n  templateUrl: './item-history.component.html',\r\n  styleUrls: ['./item-history.component.scss'],\r\n})\r\nexport class ItemHistoryComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  pageSizeOptions = [10, 20, 50];\r\n  expandedPanels: Record<string, boolean> = {};\r\n  expandedAttributes: Record<string, boolean> = {};\r\n\r\n  private itemId = parseInt(this.route.snapshot.paramMap.get('itemId'), 10);\r\n  private versions$ = new BehaviorSubject<Version[]>(null);\r\n  private page$ = new BehaviorSubject(1);\r\n  private pageSize$ = new BehaviorSubject(this.pageSizeOptions[0]);\r\n  private compareWith$ = new BehaviorSubject<CompareWith>('live');\r\n  private historyItems$ = combineLatest([this.versions$, this.page$, this.pageSize$, this.compareWith$]).pipe(\r\n    map(([versions, page, pageSize, compareWith]) => getHistoryItems(versions, page, pageSize, compareWith)),\r\n  );\r\n  viewModel$ = combineLatest([this.versions$, this.historyItems$, this.pageSize$, this.compareWith$]).pipe(\r\n    map(([versions, historyItems, pageSize, compareWith]) => ({\r\n      length: versions?.length,\r\n      historyItems,\r\n      pageSize,\r\n      compareWith,\r\n    })),\r\n  );\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<ItemHistoryComponent>,\r\n    private route: ActivatedRoute,\r\n    private versionsService: VersionsService,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.versionsService.fetchVersions(this.itemId).subscribe(versions => {\r\n      this.versions$.next(versions);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.versions$.complete();\r\n    this.page$.complete();\r\n    this.pageSize$.complete();\r\n    this.compareWith$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  compareChange(newCompareWith: CompareWith) {\r\n    this.compareWith$.next(newCompareWith);\r\n  }\r\n\r\n  panelExpandedChange(expand: boolean, versionNumber: number) {\r\n    this.expandedPanels[versionNumber] = expand;\r\n  }\r\n\r\n  attributeExpandedToggle(versionNumber: number, name: string) {\r\n    this.expandedAttributes[versionNumber + name] = !this.expandedAttributes[versionNumber + name];\r\n  }\r\n\r\n  pageChange(event: PageEvent) {\r\n    const newPage = event.pageIndex + 1;\r\n    if (newPage !== this.page$.value) {\r\n      this.expandedPanels = {};\r\n      this.expandedAttributes = {};\r\n      this.page$.next(newPage);\r\n    }\r\n    const newPageSize = event.pageSize;\r\n    if (newPageSize !== this.pageSize$.value) {\r\n      this.pageSize$.next(newPageSize);\r\n    }\r\n  }\r\n\r\n  restore(changeId: number) {\r\n    this.snackBar.open('Restoring previous version...');\r\n    this.versionsService.restore(this.itemId, changeId).subscribe(res => {\r\n      this.snackBar.open('Previous version restored. Will reload edit dialog', null, { duration: 3000 });\r\n      const result: ItemHistoryResult = {\r\n        refreshEdit: true,\r\n      };\r\n      this.dialogRef.close(result);\r\n    });\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}