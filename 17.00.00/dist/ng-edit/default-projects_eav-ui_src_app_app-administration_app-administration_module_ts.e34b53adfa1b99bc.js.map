{"version":3,"file":"default-projects_eav-ui_src_app_app-administration_app-administration_module_ts.e34b53adfa1b99bc.js","mappings":"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","names":["appAdministrationDialog","name","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","AppAdministrationNavComponent","Promise","all","__webpack_require__","e","then","bind","analyzeSettingsDialog","AnalyzeSettingsComponent","settingsItemDetailsDialog","SettingsItemDetailsComponent","editContentTypeDialog","EditContentTypeComponent","exportAppPartsDialog","ExportAppPartsComponent","exportAppDialog","ExportAppComponent","importAppPartsDialog","ImportAppPartsComponent","importContentTypeDialog","ImportContentTypeComponent","importQueryDialog","ImportQueryComponent","importViewDialog","ImportViewComponent","languagePermissionsDialog","LanguagePermissionsComponent","viewsUsageDialog","ViewsUsageComponent","appAdministrationRoutes","path","component","DialogEntryComponent","data","dialog","children","redirectTo","pathMatch","EmptyRouteComponent","title","loadChildren","m","ContentItemsModule","matcher","edit","EditModule","refreshEdit","RefreshEditModule","GoToMetadata","getRoutes","GoToDevRest","route","ContentTypeFieldsModule","ContentExportModule","ContentImportModule","GoToPermissions","history","AppAdministrationRoutingModule","static","this","t","fesm2022_core","oAB","cJS","RouterModule","forChild","AppAdministrationModule","Context","AppDialogConfigService","AppInternalsService","ContentTypesService","PipelinesService","ViewsService","ContentExportService","SourceService","ContentItemsService","ExportAppService","ExportAppPartsService","ImportAppPartsService","DialogService","AnalyzeSettingsService","ContentTypesFieldsService","MetadataService","ZoneService","provide","MAT_SELECT_CONFIG","useValue","hideSingleSelectionIndicator","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","hideIcon","imports","SharedComponentsModule","MatDialogModule","CommonModule","MatButtonModule","MatIconModule","SxcGridModule","MatTabsModule","FormsModule","MatInputModule","MatSelectModule","MatRadioModule","MatProgressSpinnerModule","MatCheckboxModule","MatExpansionModule","MatCardModule","MatRippleModule","MatSlideToggleModule","MatSnackBarModule","MatMenuModule","MatBadgeModule","CreateFileDialogModule","FeaturesModule","constructor","http","context","dnnContext","getStack","part","key","view","stringifyValue","get","$2sxc","apiUrl","webApiAppRoot","params","appId","toString","pipe","map","stack","stackItem","_value","JSON","stringify","Value","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_3__","Yz7","factory","ɵfac","getAppInternals","targetType","keyType","contentTypeName","contentType","_angular_core__WEBPACK_IMPORTED_MODULE_1__","exportContent","values","selectedIds","selectedIdsString","join","url","webApiEntityRoot","language","defaultLanguage","contentTypeStaticName","recordExport","resourcesReferences","languageReferences","window","open","exportJson","typeName","webApiTypeRoot","exportEntity","id","prefix","metadata","getAll","webApiEntityList","getColumns","webApiFieldsAll","staticName","importItem","file","from","toBase64","switchMap","fileBase64","post","AppId","ContentBase64","success","Success","Messages","_angular_core__WEBPACK_IMPORTED_MODULE_7__","webApiFieldsRoot","webApiFieldsGetShared","typeListRetrieve","appid","getInputTypesList","inputConfigs","config","dataType","Type","substring","indexOf","inputType","label","Label","description","Description","isDefault","IsDefault","isObsolete","IsObsolete","isRecommended","IsRecommended","obsoleteMessage","ObsoleteMessage","icon","getReservedNames","getFields","fields","fld","Metadata","md","merged","All","InputType","getShareableFields","getShareableFieldsFor","attributeId","addInheritedField","targetContentTypeId","sourceContentTypeStaticName","sourceFieldGuid","newName","ContentTypeId","SourceType","SourceField","share","inherit","inheritMetadataOf","reOrder","idArray","contentTypeId","Id","order","setTitle","item","rename","fieldId","delete","IsTitle","Error","add","newField","StaticName","Index","SortOrder","updateInputType","field","defaultRoute","MetadataModule","getUrl","dialogTitle","encodeURIComponent","getUrlApp","eavConstants","app","getUrlAttribute","attribute","getUrlContentType","getUrlEntity","guid","entity","_c0","_c1","_c2","MAT_CHECKBOX_DEFAULT_OPTIONS","InjectionToken","providedIn","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","color","clickAction","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","useExisting","forwardRef","MatCheckbox","multi","MatCheckboxChange","nextUniqueId","defaults","focus","_inputElement","nativeElement","_createChangeEvent","isChecked","event","source","checked","_getAnimationTargetElement","inputId","_uniqueId","_elementRef","_changeDetectorRef","_ngZone","tabIndex","_animationMode","_options","_animationClasses","uncheckedToChecked","uncheckedToIndeterminate","checkedToUnchecked","checkedToIndeterminate","indeterminateToChecked","indeterminateToUnchecked","ariaLabel","ariaLabelledby","labelPosition","change","EventEmitter","indeterminateChange","_onTouched","_currentAnimationClass","_currentCheckState","_controlValueAccessorChangeFn","_checked","_disabled","_indeterminate","parseInt","ngAfterViewInit","_syncIndeterminate","value","markForCheck","disabled","indeterminate","changed","_transitionCheckState","emit","_isRippleDisabled","disableRipple","_onLabelTextChange","detectChanges","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","newState","oldState","element","classList","remove","_getAnimationClassForCheckStateTransition","length","animationClass","runOutsideAngular","setTimeout","_emitChangeEvent","toggle","_handleInputClick","resolve","_onInteractionEvent","stopPropagation","_onBlur","nativeCheckbox","_onInputClick","_onTouchTargetClick","_preventBubblingFromLabel","target","_labelElement","contains","ANIMATION_MODULE_TYPE","ɵcmp","type","selectors","viewQuery","rf","ctx","MatRipple","_t","first","ripple","hostAttrs","hostVars","hostBindings","inputs","ariaDescribedby","required","booleanAttribute","undefined","numberAttribute","outputs","exportAs","features","ngContentSelectors","decls","vars","consts","template","$event","_r0","dependencies","styles","encapsulation","changeDetection","_MatCheckboxRequiredValidatorModule","ɵmod","ɵinj","MatCommonModule"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/app-administration-nav/app-administration-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/settings-item-details/settings-item-details.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/edit-content-type/edit-content-type-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/export-app-parts/export-app-parts-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/export-app/export-app-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-app-parts/import-app-parts-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-content-type/import-content-type-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-query/import-query-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-view/import-view-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/language-permissions/language-permissions-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-dialog.config.ts","./projects/eav-ui/src/app/app-administration/app-administration-routing.module.ts","./projects/eav-ui/src/app/app-administration/app-administration.module.ts","./projects/eav-ui/src/app/app-administration/services/analyze-settings.service.ts","./projects/eav-ui/src/app/app-administration/services/app-internals.service.ts","./projects/eav-ui/src/app/content-export/services/content-export.service.ts","./projects/eav-ui/src/app/content-items/services/content-items.service.ts","./projects/eav-ui/src/app/content-type-fields/services/content-types-fields.service.ts","./projects/eav-ui/src/app/metadata/go-to-metadata.ts","./node_modules/@angular/material/fesm2022/checkbox.mjs"],"sourcesContent":["import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const appAdministrationDialog: DialogConfig = {\r\n  name: 'APP_ADMINISTRATION_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { AppAdministrationNavComponent } = await import('./app-administration-nav.component');\r\n    return AppAdministrationNavComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const analyzeSettingsDialog: DialogConfig = {\r\n  name: 'ANALYZE_SETTINGS',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { AnalyzeSettingsComponent } = await import('./analyze-settings.component');\r\n    return AnalyzeSettingsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../../shared/models/dialog-config.model';\r\n\r\nexport const settingsItemDetailsDialog: DialogConfig = {\r\n  name: 'SETTINGS_ITEM_DETAILS',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { SettingsItemDetailsComponent } = await import('./settings-item-details.component');\r\n    return SettingsItemDetailsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const editContentTypeDialog: DialogConfig = {\r\n  name: 'EDIT_CONTENT_TYPE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'small',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { EditContentTypeComponent } = await import('./edit-content-type.component');\r\n    return EditContentTypeComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const exportAppPartsDialog: DialogConfig = {\r\n  name: 'EXPORT_APP_PARTS',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ExportAppPartsComponent } = await import('./export-app-parts.component');\r\n    return ExportAppPartsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const exportAppDialog: DialogConfig = {\r\n  name: 'EXPORT_APP',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ExportAppComponent } = await import('./export-app.component');\r\n    return ExportAppComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importAppPartsDialog: DialogConfig = {\r\n  name: 'IMPORT_APP_PARTS',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportAppPartsComponent } = await import('./import-app-parts.component');\r\n    return ImportAppPartsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importContentTypeDialog: DialogConfig = {\r\n  name: 'IMPORT_CONTENT_TYPE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportContentTypeComponent } = await import('./import-content-type.component');\r\n    return ImportContentTypeComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importQueryDialog: DialogConfig = {\r\n  name: 'IMPORT_QUERY_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportQueryComponent } = await import('./import-query.component');\r\n    return ImportQueryComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importViewDialog: DialogConfig = {\r\n  name: 'IMPORT_VIEW_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportViewComponent } = await import('./import-view.component');\r\n    return ImportViewComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const languagePermissionsDialog: DialogConfig = {\r\n  name: 'LANGUAGE_PERMISSIONS',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { LanguagePermissionsComponent } = await import('./language-permissions.component');\r\n    return LanguagePermissionsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const viewsUsageDialog: DialogConfig = {\r\n  name: 'VIEWS_USAGE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ViewsUsageComponent } = await import('./views-usage.component');\r\n    return ViewsUsageComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { GoToDevRest } from '../dev-rest';\r\nimport { edit, refreshEdit } from '../edit/edit.matcher';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { GoToPermissions } from '../permissions/go-to-permissions';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { EmptyRouteComponent } from '../shared/components/empty-route/empty-route.component';\r\nimport { appAdministrationDialog } from './app-administration-nav/app-administration-dialog.config';\r\nimport { analyzeSettingsDialog } from './sub-dialogs/analyze-settings/analyze-settings-dialog.config';\r\nimport { settingsItemDetailsDialog } from './sub-dialogs/analyze-settings/settings-item-details/settings-item-details.config';\r\nimport { editContentTypeDialog } from './sub-dialogs/edit-content-type/edit-content-type-dialog.config';\r\nimport { exportAppPartsDialog } from './sub-dialogs/export-app-parts/export-app-parts-dialog.config';\r\nimport { exportAppDialog } from './sub-dialogs/export-app/export-app-dialog.config';\r\nimport { importAppPartsDialog } from './sub-dialogs/import-app-parts/import-app-parts-dialog.config';\r\nimport { importContentTypeDialog } from './sub-dialogs/import-content-type/import-content-type-dialog.config';\r\nimport { importQueryDialog } from './sub-dialogs/import-query/import-query-dialog.config';\r\nimport { importViewDialog } from './sub-dialogs/import-view/import-view-dialog.config';\r\nimport { languagePermissionsDialog } from './sub-dialogs/language-permissions/language-permissions-dialog.config';\r\nimport { viewsUsageDialog } from './sub-dialogs/views-usage/views-usage-dialog.config';\r\n\r\nconst appAdministrationRoutes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: appAdministrationDialog }, children: [\r\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n      { path: 'home', component: EmptyRouteComponent, data: { title: 'App Home' } },\r\n      {\r\n        path: 'data/:scope', component: EmptyRouteComponent, children: [\r\n          {\r\n            path: 'import',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importContentTypeDialog, title: 'Import Content Type' },\r\n          },\r\n          {\r\n            path: 'items/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-items/content-items.module').then(m => m.ContentItemsModule)\r\n          },\r\n          {\r\n            matcher: edit,\r\n            loadChildren: () => import('../edit/edit.module').then(m => m.EditModule)\r\n          },\r\n          {\r\n            matcher: refreshEdit,\r\n            loadChildren: () => import('../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n          },\r\n          {\r\n            path: 'add',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: editContentTypeDialog, title: 'Add Content Type' },\r\n          },\r\n          {\r\n            path: ':contentTypeStaticName/edit',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: editContentTypeDialog, title: 'Edit Content Type' },\r\n          },\r\n          ...GoToMetadata.getRoutes(),\r\n          GoToDevRest.route,\r\n          {\r\n            path: 'fields/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-type-fields/content-type-fields.module').then(m => m.ContentTypeFieldsModule),\r\n            data: { title: 'Content Type Fields' },\r\n          },\r\n          {\r\n            path: 'export/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-export/content-export.module').then(m => m.ContentExportModule),\r\n            data: { title: 'Export Items' },\r\n          },\r\n          {\r\n            path: ':contentTypeStaticName/import',\r\n            loadChildren: () => import('../content-import/content-import.module').then(m => m.ContentImportModule),\r\n            data: { title: 'Import Items' },\r\n          },\r\n          GoToPermissions.route,\r\n        ],\r\n        data: { title: 'App Data' },\r\n      },\r\n      {\r\n        path: 'queries', component: EmptyRouteComponent, children: [\r\n          {\r\n            path: 'import',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importQueryDialog, title: 'Import Query' }\r\n          },\r\n          {\r\n            matcher: edit,\r\n            loadChildren: () => import('../edit/edit.module').then(m => m.EditModule),\r\n            data: { title: 'Edit Query Name and Description', history: false },\r\n          },\r\n          ...GoToMetadata.getRoutes(),\r\n          { ...GoToPermissions.route, data: { title: 'Query Permissions' } },\r\n          GoToDevRest.route,\r\n        ],\r\n        data: { title: 'App Queries' },\r\n      },\r\n      {\r\n        path: 'views', component: EmptyRouteComponent, children: [\r\n          {\r\n            path: 'import',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importViewDialog, title: 'Import View' },\r\n          },\r\n          { path: 'usage/:guid', component: DialogEntryComponent, data: { dialog: viewsUsageDialog } },\r\n          {\r\n            matcher: edit,\r\n            loadChildren: () => import('../edit/edit.module').then(m => m.EditModule),\r\n            data: { title: 'Edit View' },\r\n          },\r\n          {\r\n            matcher: refreshEdit,\r\n            loadChildren: () => import('../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n          },\r\n          { ...GoToPermissions.route, data: { title: 'View Permissions' } },\r\n          ...GoToMetadata.getRoutes(),\r\n        ],\r\n        data: { title: 'App Views' },\r\n      },\r\n      {\r\n        path: 'web-api', component: EmptyRouteComponent, data: { title: 'App WebApi' }, children: [\r\n          GoToDevRest.route,\r\n        ],\r\n      },\r\n      {\r\n        path: 'app', component: EmptyRouteComponent, data: { title: 'Manage App' }, children: [\r\n          ...GoToMetadata.getRoutes(),\r\n          {\r\n            matcher: edit,\r\n            loadChildren: () => import('../edit/edit.module').then(m => m.EditModule),\r\n            data: { title: 'Edit App Properties' },\r\n          },\r\n          {\r\n            matcher: refreshEdit,\r\n            loadChildren: () => import('../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n          },\r\n          {\r\n            path: 'fields/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-type-fields/content-type-fields.module').then(m => m.ContentTypeFieldsModule),\r\n            data: { title: 'Edit Fields of App Settings & Resources' },\r\n          },\r\n          {\r\n            path: 'language-permissions', component: DialogEntryComponent, data: { dialog: languagePermissionsDialog, title: 'Language Permissions' }, children: [\r\n              { ...GoToPermissions.route, data: { title: 'Language Permissions' } },\r\n            ],\r\n          },\r\n          { ...GoToPermissions.route, data: { title: 'App Permissions' } },\r\n          {\r\n            path: 'analyze/:part', component: DialogEntryComponent, data: { dialog: analyzeSettingsDialog, title: 'Analyze Settings / Resources' }, children: [\r\n              {\r\n                path: 'details/:view/:settingsItemKey',\r\n                component: DialogEntryComponent,\r\n                data: { dialog: settingsItemDetailsDialog, title: 'Settings / Resources Item Details' },\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        path: 'sync', component: EmptyRouteComponent, data: { title: 'Sync' }, children: [\r\n          ...GoToMetadata.getRoutes(),\r\n          { path: 'export', component: DialogEntryComponent, data: { dialog: exportAppDialog, title: 'Export App' } },\r\n          { path: 'export/parts', component: DialogEntryComponent, data: { dialog: exportAppPartsDialog, title: 'Export App Parts' } },\r\n          { path: 'import/parts', component: DialogEntryComponent, data: { dialog: importAppPartsDialog, title: 'Import App Parts' } },\r\n        ], \r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(appAdministrationRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppAdministrationRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MAT_SELECT_CONFIG, MatSelectModule } from '@angular/material/select';\r\nimport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { ZoneService } from '../apps-management/services/zone.service';\r\nimport { SourceService } from '../code-editor/services/source.service';\r\nimport { ContentExportService } from '../content-export/services/content-export.service';\r\nimport { ContentItemsService } from '../content-items/services/content-items.service';\r\nimport { ContentTypesFieldsService } from '../content-type-fields/services/content-types-fields.service';\r\nimport { CreateFileDialogModule } from '../create-file-dialog';\r\nimport { FeaturesModule } from '../features/features.module';\r\nimport { MetadataService } from '../permissions';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { Context } from '../shared/services/context';\r\nimport { DialogService } from '../shared/services/dialog.service';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { AppAdministrationNavComponent } from './app-administration-nav/app-administration-nav.component';\r\nimport { AppAdministrationRoutingModule } from './app-administration-routing.module';\r\nimport { AppConfigurationComponent } from './app-configuration/app-configuration.component';\r\nimport { SyncConfigurationComponent } from './sync-configuration/sync-configuration.component';\r\nimport { DataActionsComponent } from './data/data-actions/data-actions.component';\r\nimport { DataFieldsComponent } from './data/data-fields/data-fields.component';\r\nimport { DataItemsComponent } from './data/data-items/data-items.component';\r\nimport { DataComponent } from './data/data.component';\r\nimport { GettingStartedComponent } from './getting-started/getting-started.component';\r\nimport { QueriesActionsComponent } from './queries/queries-actions/queries-actions.component';\r\nimport { QueriesComponent } from './queries/queries.component';\r\nimport { AnalyzeSettingsService } from './services/analyze-settings.service';\r\nimport { AppDialogConfigService } from './services/app-dialog-config.service';\r\nimport { AppInternalsService } from './services/app-internals.service';\r\nimport { ContentTypesService } from './services/content-types.service';\r\nimport { ExportAppPartsService } from './services/export-app-parts.service';\r\nimport { ExportAppService } from './services/export-app.service';\r\nimport { ImportAppPartsService } from './services/import-app-parts.service';\r\nimport { PipelinesService } from './services/pipelines.service';\r\nimport { ViewsService } from './services/views.service';\r\nimport { AnalyzeSettingsKeyComponent } from './sub-dialogs/analyze-settings/analyze-settings-key/analyze-settings-key.component';\r\nimport { AnalyzeSettingsTotalResultsComponent } from './sub-dialogs/analyze-settings/analyze-settings-total-results/analyze-settings-total-results.component';\r\nimport { AnalyzeSettingsValueComponent } from './sub-dialogs/analyze-settings/analyze-settings-value/analyze-settings-value.component';\r\nimport { AnalyzeSettingsComponent } from './sub-dialogs/analyze-settings/analyze-settings.component';\r\nimport { SettingsItemDetailsComponent } from './sub-dialogs/analyze-settings/settings-item-details/settings-item-details.component';\r\nimport { EditContentTypeComponent } from './sub-dialogs/edit-content-type/edit-content-type.component';\r\nimport { ExportAppPartsComponent } from './sub-dialogs/export-app-parts/export-app-parts.component';\r\nimport { ExportAppComponent } from './sub-dialogs/export-app/export-app.component';\r\nimport { ImportAppPartsComponent } from './sub-dialogs/import-app-parts/import-app-parts.component';\r\nimport { ImportContentTypeComponent } from './sub-dialogs/import-content-type/import-content-type.component';\r\nimport { ImportQueryComponent } from './sub-dialogs/import-query/import-query.component';\r\nimport { ImportViewComponent } from './sub-dialogs/import-view/import-view.component';\r\nimport { LanguagePermissionsComponent } from './sub-dialogs/language-permissions/language-permissions.component';\r\nimport { LanguagesPermissionsActionsComponent } from './sub-dialogs/language-permissions/languages-permissions-actions/languages-permissions-actions.component';\r\nimport { ViewsUsageIdComponent } from './sub-dialogs/views-usage/views-usage-id/views-usage-id.component';\r\nimport { ViewsUsageStatusFilterComponent } from './sub-dialogs/views-usage/views-usage-status-filter/views-usage-status-filter.component';\r\nimport { ViewsUsageComponent } from './sub-dialogs/views-usage/views-usage.component';\r\nimport { ViewsActionsComponent } from './views/views-actions/views-actions.component';\r\nimport { ViewsShowComponent } from './views/views-show/views-show.component';\r\nimport { ViewsTypeComponent } from './views/views-type/views-type.component';\r\nimport { ViewsComponent } from './views/views.component';\r\nimport { WebApiActionsComponent } from './web-api/web-api-actions/web-api-actions.component';\r\nimport { WebApiTypeComponent } from './web-api/web-api-type/web-api-type.component';\r\nimport { WebApiComponent } from './web-api/web-api.component';\r\nimport { AppConfigurationCardComponent } from './app-configuration/app-configuration-card/app-configuration-card.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GettingStartedComponent,\r\n    AppAdministrationNavComponent,\r\n    DataComponent,\r\n    QueriesComponent,\r\n    ViewsComponent,\r\n    WebApiComponent,\r\n    AppConfigurationComponent,\r\n    AppConfigurationCardComponent,\r\n    SyncConfigurationComponent,\r\n    DataItemsComponent,\r\n    DataFieldsComponent,\r\n    DataActionsComponent,\r\n    QueriesActionsComponent,\r\n    ViewsTypeComponent,\r\n    ViewsShowComponent,\r\n    ViewsActionsComponent,\r\n    EditContentTypeComponent,\r\n    ImportQueryComponent,\r\n    ExportAppComponent,\r\n    ExportAppPartsComponent,\r\n    ImportAppPartsComponent,\r\n    WebApiActionsComponent,\r\n    ViewsUsageComponent,\r\n    ViewsUsageIdComponent,\r\n    ViewsUsageStatusFilterComponent,\r\n    ImportContentTypeComponent,\r\n    ImportViewComponent,\r\n    AnalyzeSettingsComponent,\r\n    AnalyzeSettingsKeyComponent,\r\n    AnalyzeSettingsValueComponent,\r\n    AnalyzeSettingsTotalResultsComponent,\r\n    SettingsItemDetailsComponent,\r\n    LanguagePermissionsComponent,\r\n    LanguagesPermissionsActionsComponent,\r\n    WebApiTypeComponent,\r\n  ],\r\n  imports: [\r\n    AppAdministrationRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    SxcGridModule,\r\n    MatTabsModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatProgressSpinnerModule,\r\n    MatCheckboxModule,\r\n    MatExpansionModule,\r\n    MatCardModule,\r\n    MatRippleModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatMenuModule,\r\n    MatBadgeModule,\r\n    CreateFileDialogModule,\r\n    FeaturesModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    AppDialogConfigService,\r\n    AppInternalsService,\r\n    ContentTypesService,\r\n    PipelinesService,\r\n    ViewsService,\r\n    ContentExportService,\r\n    SourceService,\r\n    ContentItemsService,\r\n    ExportAppService,\r\n    ExportAppPartsService,\r\n    ImportAppPartsService,\r\n    DialogService,\r\n    AnalyzeSettingsService,\r\n    ContentTypesFieldsService,\r\n    MetadataService,\r\n    ZoneService,\r\n    { provide: MAT_SELECT_CONFIG, useValue: { hideSingleSelectionIndicator: true } },\r\n    { provide: MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, useValue: { hideIcon: true } }\r\n  ],\r\n})\r\nexport class AppAdministrationModule { }\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AnalyzePart, SettingsStackItem } from '../sub-dialogs/analyze-settings/analyze-settings.models';\r\n\r\n@Injectable()\r\nexport class AnalyzeSettingsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getStack(part: AnalyzePart, key?: string, view?: string, stringifyValue = false): Observable<SettingsStackItem[]> {\r\n    return this.http.get<SettingsStackItem[]>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'GetStack'), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        part,\r\n        ...(key && { key }),\r\n        ...(view && { view }),\r\n      },\r\n    }).pipe(\r\n      map(stack => {\r\n        if (!stringifyValue) { return stack; }\r\n\r\n        for (const stackItem of stack) {\r\n          stackItem._value = JSON.stringify(stackItem.Value);\r\n        }\r\n        return stack;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AppInternals } from '../../app-administration/models/app-internals.model';\r\nimport { MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nconst webApiRoot = 'admin/appinternals/get';\r\n\r\n@Injectable()\r\nexport class AppInternalsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /**\r\n   * Fetches AppInternals for given key\r\n   * @param targetType type of target metadata item is for, e.g. for Entity, or ContentType\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of target metadata item is for\r\n   * @param contentTypeName name of content type where permissions are stored. If blank, backend returns all metadata except permissions\r\n   */\r\n  getAppInternals(targetType: number, keyType: MetadataKeyType, key: string | number, contentTypeName?: string): Observable<AppInternals> {\r\n    return this.http.get<AppInternals>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        targetType: targetType.toString(),\r\n        keyType,\r\n        key: key.toString(),\r\n        ...(contentTypeName && { contentType: contentTypeName }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiTypeRoot } from '../../app-administration/services/content-types.service';\r\nimport { webApiEntityRoot } from '../../edit/shared/services';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentExport } from '../models/content-export.model';\r\n\r\n@Injectable()\r\nexport class ContentExportService {\r\n  constructor(private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  exportContent(values: ContentExport, selectedIds: number[]) {\r\n    const selectedIdsString = selectedIds ? '&selectedids=' + selectedIds.join() : '';\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'Download')\r\n      + '?appId=' + this.context.appId\r\n      + '&language=' + values.language\r\n      + '&defaultLanguage=' + values.defaultLanguage\r\n      + '&contentType=' + values.contentTypeStaticName\r\n      + '&recordExport=' + values.recordExport\r\n      + '&resourcesReferences=' + values.resourcesReferences\r\n      + '&languageReferences=' + values.languageReferences\r\n      + selectedIdsString;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportJson(typeName: string) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiTypeRoot + 'Json')\r\n      + '?appId=' + this.context.appId\r\n      + '&name=' + typeName;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportEntity(id: number, prefix: string, metadata: boolean) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'Json')\r\n      + '?appId=' + this.context.appId\r\n      + '&id=' + id\r\n      + '&prefix=' + prefix\r\n      + '&withMetadata=' + metadata;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { Field } from '../../content-type-fields/models/field.model';\r\nimport { webApiFieldsAll } from '../../content-type-fields/services/content-types-fields.service';\r\nimport { webApiEntityList, webApiEntityRoot } from '../../edit/shared/services';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentItem } from '../models/content-item.model';\r\n\r\n@Injectable()\r\nexport class ContentItemsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentTypeStaticName: string) {\r\n    return this.http.get<ContentItem[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  getColumns(contentTypeStaticName: string) {\r\n    return this.http.get<Field[]>(this.dnnContext.$2sxc.http.apiUrl(webApiFieldsAll), {\r\n      params: { appId: this.context.appId.toString(), staticName: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  importItem(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'upload'), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { ContentType } from '../../app-administration/models/content-type.model';\r\nimport { webApiTypeRoot } from '../../app-administration/services/content-types.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Field, FieldInputTypeOption } from '../models/field.model';\r\nimport { InputType } from '../models/input-type.model';\r\nimport { ReservedNames } from '../models/reserved-names.model';\r\nimport { InputTypeStrict } from '../constants/input-type.constants';\r\n\r\nexport const webApiFieldsRoot = 'admin/field/';\r\nexport const webApiFieldsAll = 'admin/field/all';\r\nexport const webApiFieldsGetShared = 'admin/field/GetSharedFields';\r\n\r\n@Injectable()\r\nexport class ContentTypesFieldsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  typeListRetrieve() {\r\n    return this.http.get<string[]>(this.apiUrl(webApiFieldsRoot + 'DataTypes'), {\r\n      params: { appid: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getInputTypesList() {\r\n    return this.http\r\n      .get<InputType[]>(this.apiUrl(webApiFieldsRoot + 'InputTypes'), { params: { appid: this.context.appId.toString() } })\r\n      .pipe(\r\n        map(inputConfigs => {\r\n          const inputTypeOptions = inputConfigs.map(config => {\r\n            const option: FieldInputTypeOption = {\r\n              dataType: config.Type.substring(0, config.Type.indexOf('-')),\r\n              inputType: config.Type,\r\n              label: config.Label,\r\n              description: config.Description,\r\n              isDefault: config.IsDefault,\r\n              isObsolete: config.IsObsolete,\r\n              isRecommended: config.IsRecommended,\r\n              obsoleteMessage: config.ObsoleteMessage,\r\n              icon: config.IsDefault ? 'star' : config.IsRecommended ? 'star_outline' : null,\r\n            };\r\n            return option;\r\n          });\r\n          return inputTypeOptions;\r\n        }),\r\n      );\r\n  }\r\n\r\n  getReservedNames() {\r\n    return this.http.get<ReservedNames>(this.apiUrl(webApiFieldsRoot + 'ReservedNames'));\r\n  }\r\n\r\n  /** Get all fields for some content type */\r\n  getFields(contentTypeStaticName: string) {\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsAll), {\r\n        params: { appid: this.context.appId.toString(), staticName: contentTypeStaticName },\r\n      })\r\n      .pipe(\r\n        map(fields => {\r\n          if (fields) {\r\n            for (const fld of fields) {\r\n              if (!fld.Metadata) { continue; }\r\n              const md = fld.Metadata;\r\n              const allMd = md.All;\r\n              const typeMd = md[fld.Type];\r\n              const inputMd = md[fld.InputType];\r\n              md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n            }\r\n          }\r\n          return fields;\r\n        }),\r\n      );\r\n  }\r\n\r\n  /** Get all possible sharable fields for a new sharing */\r\n  getShareableFields() {\r\n    return this.http.get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString() },\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Get sharable fields which are possible for this attribute.\r\n   * \r\n   * Reason is that eg. a bool-attribute can only receive metadata from a bool attribute, etc.\r\n   * \r\n   * @param attributeId the existing attributeId which will receive the new metadata\r\n   */\r\n  getShareableFieldsFor(attributeId: number) {\r\n    // TODO: @SDV - do the same as in getShareableFields()\r\n    // but add parameter attributeId to the webapi call\r\n    // I'll create the backend afterwards\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString(), attributeId: attributeId.toString() },\r\n      });\r\n  }\r\n\r\n  addInheritedField(targetContentTypeId: number, sourceContentTypeStaticName: string, sourceFieldGuid: string, newName: string) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'AddInheritedField'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: targetContentTypeId.toString(),\r\n        SourceType: sourceContentTypeStaticName,\r\n        SourceField: sourceFieldGuid,\r\n        name: newName,\r\n      }\r\n    });\r\n  }\r\n\r\n  share(attributeId: number, share: boolean = true) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Share'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        share,\r\n      },\r\n    });\r\n  }\r\n\r\n  inherit(attributeId: number, sourceFieldGuid: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Inherit'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        inheritMetadataOf: sourceFieldGuid,\r\n      },\r\n    });\r\n  }\r\n\r\n  reOrder(idArray: number[], contentType: ContentType) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'Sort'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        order: JSON.stringify(idArray),\r\n      },\r\n    });\r\n  }\r\n\r\n  setTitle(item: Field, contentType: ContentType) {\r\n    return this.http.post<null>(this.apiUrl(webApiTypeRoot + 'SetTitle'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  rename(fieldId: number, contentTypeId: number, newName: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Rename'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentTypeId.toString(),\r\n        attributeId: fieldId.toString(),\r\n        newName,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(item: Field, contentType: ContentType) {\r\n    if (item.IsTitle) {\r\n      throw new Error('Can\\'t delete Title');\r\n    }\r\n\r\n    return this.http.delete<boolean>(this.apiUrl(webApiFieldsRoot + 'Delete'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  add(newField: Partial<Field>, contentTypeId: number) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'Add'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: contentTypeId.toString(),\r\n        Id: newField.Id.toString(),\r\n        Type: newField.Type,\r\n        InputType: newField.InputType,\r\n        StaticName: newField.StaticName,\r\n        IsTitle: newField.IsTitle.toString(),\r\n        Index: newField.SortOrder.toString(),\r\n      }\r\n    });\r\n  }\r\n\r\n  updateInputType(id: number, staticName: string, inputType: InputTypeStrict) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'InputType'), null, {\r\n      params: { appId: this.context.appId.toString(), attributeId: id.toString(), field: staticName, inputType }\r\n    });\r\n  }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\n\r\nexport class GoToMetadata {\r\n\r\n  static getRoutes(): Route[] {\r\n    const defaultRoute: Route = {\r\n      path: 'metadata/:targetType/:keyType/:key',\r\n      loadChildren: () => import('./metadata.module').then(m => m.MetadataModule),\r\n      data: { title: 'Metadata' },\r\n    };\r\n    const routes: Route[] = [\r\n      defaultRoute,\r\n      {\r\n        ...defaultRoute,\r\n        path: `${defaultRoute.path}/title/:title`,\r\n      },\r\n      {\r\n        ...defaultRoute,\r\n        path: `${defaultRoute.path}/contentType/:contentTypeStaticName`,\r\n      },\r\n      {\r\n        ...defaultRoute,\r\n        path: `${defaultRoute.path}/title/:title/contentType/:contentTypeStaticName`,\r\n      }\r\n    ];\r\n    return routes;\r\n  }\r\n\r\n  static getUrl(targetType: number, keyType: MetadataKeyType, key: string, dialogTitle?: string, contentTypeStaticName?: string): string {\r\n    let url = `metadata/${targetType}/${keyType}/${key}`;\r\n    if (dialogTitle) {\r\n      url += `/title/${encodeURIComponent(dialogTitle)}`;\r\n    }\r\n    if (contentTypeStaticName) {\r\n      url += `/contentType/${contentTypeStaticName}`;\r\n    }\r\n    return url;\r\n  }\r\n\r\n  static getUrlApp(appId: number, dialogTitle?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.app.targetType,\r\n      eavConstants.metadata.app.keyType,\r\n      appId.toString(),\r\n      dialogTitle,\r\n    );\r\n  }\r\n\r\n  static getUrlAttribute(attributeId: number, dialogTitle?: string, contentTypeStaticName?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.attribute.targetType,\r\n      eavConstants.metadata.attribute.keyType,\r\n      attributeId.toString(),\r\n      dialogTitle,\r\n      contentTypeStaticName,\r\n    );\r\n  }\r\n\r\n  static getUrlContentType(staticName: string, dialogTitle?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.contentType.targetType,\r\n      eavConstants.metadata.contentType.keyType,\r\n      staticName,\r\n      dialogTitle,\r\n    );\r\n  }\r\n\r\n  static getUrlEntity(guid: string, dialogTitle?: string, contentTypeStaticName?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.entity.targetType,\r\n      eavConstants.metadata.entity.keyType,\r\n      guid,\r\n      dialogTitle,\r\n      contentTypeStaticName,\r\n    );\r\n  }\r\n\r\n}\r\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport * as i1 from '@angular/material/core';\nimport { MatRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatCheckbox),\n    multi: true,\n};\n/** Change event object emitted by checkbox. */\nclass MatCheckboxChange {\n}\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\nclass MatCheckbox {\n    /** Focuses the checkbox. */\n    focus() {\n        this._inputElement.nativeElement.focus();\n    }\n    /** Creates the change event that will be emitted by the checkbox. */\n    _createChangeEvent(isChecked) {\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = isChecked;\n        return event;\n    }\n    /** Gets the element on which to add the animation CSS classes. */\n    _getAnimationTargetElement() {\n        return this._inputElement?.nativeElement;\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    constructor(_elementRef, _changeDetectorRef, _ngZone, tabIndex, _animationMode, _options) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /** CSS classes to add when transitioning between the different checkbox states. */\n        this._animationClasses = {\n            uncheckedToChecked: 'mdc-checkbox--anim-unchecked-checked',\n            uncheckedToIndeterminate: 'mdc-checkbox--anim-unchecked-indeterminate',\n            checkedToUnchecked: 'mdc-checkbox--anim-checked-unchecked',\n            checkedToIndeterminate: 'mdc-checkbox--anim-checked-indeterminate',\n            indeterminateToChecked: 'mdc-checkbox--anim-indeterminate-checked',\n            indeterminateToUnchecked: 'mdc-checkbox--anim-indeterminate-unchecked',\n        };\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n        this.labelPosition = 'after';\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** Event emitted when the checkbox's `checked` value changes. */\n        this.change = new EventEmitter();\n        /** Event emitted when the checkbox's `indeterminate` value changes. */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* TransitionCheckState.Init */;\n        this._controlValueAccessorChangeFn = () => { };\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || defaults;\n        this.color = this._options.color || defaults.color;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.id = this._uniqueId = `mat-mdc-checkbox-${++nextUniqueId}`;\n    }\n    ngAfterViewInit() {\n        this._syncIndeterminate(this._indeterminate);\n    }\n    /** Whether the checkbox is checked. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the checkbox is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value !== this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    get indeterminate() {\n        return this._indeterminate;\n    }\n    set indeterminate(value) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* TransitionCheckState.Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* TransitionCheckState.Checked */ : 2 /* TransitionCheckState.Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _transitionCheckState(newState) {\n        let oldState = this._currentCheckState;\n        let element = this._getAnimationTargetElement();\n        if (oldState === newState || !element) {\n            return;\n        }\n        if (this._currentAnimationClass) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    element.classList.remove(animationClass);\n                }, 1000);\n            });\n        }\n    }\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(this._createChangeEvent(this.checked));\n        // Assigning the value again here is redundant, but we have to do it in case it was\n        // changed inside the `change` listener which will cause the input to be out of sync.\n        if (this._inputElement) {\n            this._inputElement.nativeElement.checked = this.checked;\n        }\n    }\n    /** Toggles the `checked` state of the checkbox. */\n    toggle() {\n        this.checked = !this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n    }\n    _handleInputClick() {\n        const clickAction = this._options?.clickAction;\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && clickAction !== 'check') {\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n            this._checked = !this._checked;\n            this._transitionCheckState(this._checked ? 1 /* TransitionCheckState.Checked */ : 2 /* TransitionCheckState.Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    _onBlur() {\n        // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n        // Angular does not expect events to be raised during change detection, so any state change\n        // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n        // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n        // telling the form control it has been touched until the next tick.\n        Promise.resolve().then(() => {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        switch (oldState) {\n            case 0 /* TransitionCheckState.Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* TransitionCheckState.Checked */) {\n                    return this._animationClasses.uncheckedToChecked;\n                }\n                else if (newState == 3 /* TransitionCheckState.Indeterminate */) {\n                    return this._checked\n                        ? this._animationClasses.checkedToIndeterminate\n                        : this._animationClasses.uncheckedToIndeterminate;\n                }\n                break;\n            case 2 /* TransitionCheckState.Unchecked */:\n                return newState === 1 /* TransitionCheckState.Checked */\n                    ? this._animationClasses.uncheckedToChecked\n                    : this._animationClasses.uncheckedToIndeterminate;\n            case 1 /* TransitionCheckState.Checked */:\n                return newState === 2 /* TransitionCheckState.Unchecked */\n                    ? this._animationClasses.checkedToUnchecked\n                    : this._animationClasses.checkedToIndeterminate;\n            case 3 /* TransitionCheckState.Indeterminate */:\n                return newState === 1 /* TransitionCheckState.Checked */\n                    ? this._animationClasses.indeterminateToChecked\n                    : this._animationClasses.indeterminateToUnchecked;\n        }\n        return '';\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     */\n    _syncIndeterminate(value) {\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n    _onInputClick() {\n        this._handleInputClick();\n    }\n    _onTouchTargetClick() {\n        this._handleInputClick();\n        if (!this.disabled) {\n            // Normally the input should be focused already, but if the click\n            // comes from the touch target, then we might have to focus it ourselves.\n            this._inputElement.nativeElement.focus();\n        }\n    }\n    /**\n     *  Prevent click events that come from the `<label/>` element from bubbling. This prevents the\n     *  click handler on the host from triggering twice when clicking on the `<label/>` element. After\n     *  the click event on the `<label/>` propagates, the browsers dispatches click on the associated\n     *  `<input/>`. By preventing clicks on the label by bubbling, we ensure only one click event\n     *  bubbles when the label is clicked.\n     */\n    _preventBubblingFromLabel(event) {\n        if (!!event.target && this._labelElement.nativeElement.contains(event.target)) {\n            event.stopPropagation();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatCheckbox, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: 'tabindex', attribute: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_CHECKBOX_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"17.0.4\", type: MatCheckbox, selector: \"mat-checkbox\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], id: \"id\", required: [\"required\", \"required\", booleanAttribute], labelPosition: \"labelPosition\", name: \"name\", value: \"value\", disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? undefined : numberAttribute(value))], color: \"color\", checked: [\"checked\", \"checked\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute], indeterminate: [\"indeterminate\", \"indeterminate\", booleanAttribute] }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, host: { properties: { \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"class._mat-animation-noopable\": \"_animationMode === 'NoopAnimations'\", \"class.mdc-checkbox--disabled\": \"disabled\", \"id\": \"id\", \"class.mat-mdc-checkbox-disabled\": \"disabled\", \"class.mat-mdc-checkbox-checked\": \"checked\", \"class\": \"color ? \\\"mat-\\\" + color : \\\"mat-accent\\\"\" }, classAttribute: \"mat-mdc-checkbox\" }, providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"_inputElement\", first: true, predicate: [\"input\"], descendants: true }, { propertyName: \"_labelElement\", first: true, predicate: [\"label\"], descendants: true }, { propertyName: \"ripple\", first: true, predicate: MatRipple, descendants: true }], exportAs: [\"matCheckbox\"], ngImport: i0, template: \"<div class=\\\"mdc-form-field\\\"\\n     [class.mdc-form-field--align-end]=\\\"labelPosition == 'before'\\\"\\n     (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"disabled ? -1 : tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\"\\n         #label\\n         [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-touch-target-wrapper{display:inline}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:mdc-animation-deceleration-curve-timing-function;transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom}.mdc-checkbox[hidden]{display:none}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{border-color:CanvasText}}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{border-color:CanvasText}}@media all and (-ms-high-contrast: none){.mdc-checkbox .mdc-checkbox__focus-ring{display:none}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--upgraded .mdc-checkbox__checkmark{opacity:1}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear 0s;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear 0s;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background{transition:border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit}.mdc-checkbox__native-control:disabled{cursor:default;pointer-events:none}.mdc-checkbox--touch{margin:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2)}.mdc-checkbox--touch .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);right:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);width:var(--mdc-checkbox-state-layer-size);height:var(--mdc-checkbox-state-layer-size)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark-path,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__mixedmark{transition:none}.mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mdc-checkbox{padding:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2);margin:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2)}.mdc-checkbox .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color);background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control[disabled]:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[disabled]:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true][disabled]~.mdc-checkbox__background{border-color:transparent;background-color:var(--mdc-checkbox-disabled-selected-icon-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}@keyframes mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}}@keyframes mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}}.mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}@keyframes mdc-checkbox-fade-in-background-FF212121FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}}@keyframes mdc-checkbox-fade-out-background-FF212121FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}}.mdc-checkbox:hover.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:hover.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-FF212121FFF4433600000000FFF44336}.mdc-checkbox:hover.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:hover.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-FF212121FFF4433600000000FFF44336}.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}@keyframes mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}}@keyframes mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}}.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox .mdc-checkbox__background{top:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2)}.mdc-checkbox .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);right:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);width:var(--mdc-checkbox-state-layer-size);height:var(--mdc-checkbox-state-layer-size)}.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:focus:not(:checked):not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color);background-color:var(--mdc-checkbox-selected-focus-icon-color)}.mdc-checkbox:hover .mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-hover-state-layer-color)}.mdc-checkbox:hover .mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-focus-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity);background-color:var(--mdc-checkbox-selected-hover-state-layer-color)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity);background-color:var(--mdc-checkbox-selected-focus-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity);background-color:var(--mdc-checkbox-selected-pressed-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color)}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox .mdc-checkbox__background{-webkit-print-color-adjust:exact;color-adjust:exact}.mat-mdc-checkbox._mat-animation-noopable *,.mat-mdc-checkbox._mat-animation-noopable *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default}.mat-mdc-checkbox label:empty{display:none}.cdk-high-contrast-active .mat-mdc-checkbox.mat-mdc-checkbox-disabled{opacity:.5}.cdk-high-contrast-active .mat-mdc-checkbox .mdc-checkbox__checkmark{--mdc-checkbox-selected-checkmark-color: CanvasText;--mdc-checkbox-disabled-selected-checkmark-color: CanvasText}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: i1.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatCheckbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-checkbox', host: {\n                        'class': 'mat-mdc-checkbox',\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                        '[class.mdc-checkbox--disabled]': 'disabled',\n                        '[id]': 'id',\n                        // Add classes that users can use to more easily target disabled or checked checkboxes.\n                        '[class.mat-mdc-checkbox-disabled]': 'disabled',\n                        '[class.mat-mdc-checkbox-checked]': 'checked',\n                        '[class]': 'color ? \"mat-\" + color : \"mat-accent\"',\n                    }, providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR], exportAs: 'matCheckbox', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mdc-form-field\\\"\\n     [class.mdc-form-field--align-end]=\\\"labelPosition == 'before'\\\"\\n     (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"disabled ? -1 : tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\"\\n         #label\\n         [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-touch-target-wrapper{display:inline}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:mdc-animation-deceleration-curve-timing-function;transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom}.mdc-checkbox[hidden]{display:none}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{border-color:CanvasText}}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{border-color:CanvasText}}@media all and (-ms-high-contrast: none){.mdc-checkbox .mdc-checkbox__focus-ring{display:none}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--upgraded .mdc-checkbox__checkmark{opacity:1}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear 0s;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear 0s;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background{transition:border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit}.mdc-checkbox__native-control:disabled{cursor:default;pointer-events:none}.mdc-checkbox--touch{margin:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2)}.mdc-checkbox--touch .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);right:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);width:var(--mdc-checkbox-state-layer-size);height:var(--mdc-checkbox-state-layer-size)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark-path,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__mixedmark{transition:none}.mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mdc-checkbox{padding:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2);margin:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2)}.mdc-checkbox .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color);background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control[disabled]:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[disabled]:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true][disabled]~.mdc-checkbox__background{border-color:transparent;background-color:var(--mdc-checkbox-disabled-selected-icon-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}@keyframes mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}}@keyframes mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}}.mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}@keyframes mdc-checkbox-fade-in-background-FF212121FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}}@keyframes mdc-checkbox-fade-out-background-FF212121FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}}.mdc-checkbox:hover.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:hover.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-FF212121FFF4433600000000FFF44336}.mdc-checkbox:hover.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:hover.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-FF212121FFF4433600000000FFF44336}.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}@keyframes mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}}@keyframes mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}}.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox .mdc-checkbox__background{top:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2)}.mdc-checkbox .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);right:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);width:var(--mdc-checkbox-state-layer-size);height:var(--mdc-checkbox-state-layer-size)}.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:focus:not(:checked):not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color);background-color:var(--mdc-checkbox-selected-focus-icon-color)}.mdc-checkbox:hover .mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-hover-state-layer-color)}.mdc-checkbox:hover .mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-focus-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity);background-color:var(--mdc-checkbox-selected-hover-state-layer-color)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity);background-color:var(--mdc-checkbox-selected-focus-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity);background-color:var(--mdc-checkbox-selected-pressed-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color)}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox .mdc-checkbox__background{-webkit-print-color-adjust:exact;color-adjust:exact}.mat-mdc-checkbox._mat-animation-noopable *,.mat-mdc-checkbox._mat-animation-noopable *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default}.mat-mdc-checkbox label:empty{display:none}.cdk-high-contrast-active .mat-mdc-checkbox.mat-mdc-checkbox-disabled{opacity:.5}.cdk-high-contrast-active .mat-mdc-checkbox .mdc-checkbox__checkmark{--mdc-checkbox-selected-checkmark-color: CanvasText;--mdc-checkbox-disabled-selected-checkmark-color: CanvasText}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n                }] }], propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], id: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], labelPosition: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], indeterminateChange: [{\n                type: Output\n            }], value: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], _inputElement: [{\n                type: ViewChild,\n                args: ['input']\n            }], _labelElement: [{\n                type: ViewChild,\n                args: ['label']\n            }], tabIndex: [{\n                type: Input,\n                args: [{ transform: (value) => (value == null ? undefined : numberAttribute(value)) }]\n            }], color: [{\n                type: Input\n            }], ripple: [{\n                type: ViewChild,\n                args: [MatRipple]\n            }], checked: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], indeterminate: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n    multi: true,\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatCheckboxRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.4\", type: MatCheckboxRequiredValidator, selector: \"mat-checkbox[required][formControlName],\\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]\", providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatCheckboxRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                    providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR],\n                }]\n        }] });\n\n/** This module is used by both original and MDC-based checkbox implementations. */\nclass _MatCheckboxRequiredValidatorModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [MatCheckboxRequiredValidator],\n                    declarations: [MatCheckboxRequiredValidator],\n                }]\n        }] });\nclass MatCheckboxModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: MatCheckboxModule, declarations: [MatCheckbox], imports: [MatCommonModule, MatRippleModule, _MatCheckboxRequiredValidatorModule], exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatCheckboxModule, imports: [MatCommonModule, MatRippleModule, _MatCheckboxRequiredValidatorModule, MatCommonModule, _MatCheckboxRequiredValidatorModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatRippleModule, _MatCheckboxRequiredValidatorModule],\n                    exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                    declarations: [MatCheckbox],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n"],"x_google_ignoreList":[20]}