{"version":3,"file":"projects_eav-ui_src_app_permissions_permissions_component_ts.58743036e2180f87.js","mappings":"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","names":["PermissionsActionsComponent","agInit","params","this","refresh","deletePermission","onDelete","data","static","t","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","i0","_r3","ctx_r2","closeDialog","ctx_r4","editPermission","vm_r1","permissions","ctx_r0","gridOptions","PermissionsComponent","BaseComponent","constructor","router","route","dialogRef","permissionsService","snackBar","super","permissions$","BehaviorSubject","undefined","buildGridOptions","targetType","parseInt","snapshot","paramMap","get","keyType","key","prefills","eavConstants","metadata","language","PermissionType","ngOnInit","fetchPermissions","subscription","add","refreshOnChildClosedShallow","subscribe","viewModel$","combineLatest","pipe","map","ngOnDestroy","complete","close","getAll","next","permission","form","items","ContentTypeName","contentTypes","For","Target","Object","values","find","m","target","toString","TargetType","keyTypes","guid","Guid","number","Number","string","String","Prefill","EntityId","Id","formUrl","convertFormToUrl","navigate","relativeTo","confirm","Title","open","delete","duration","defaultGridOptions","columnDefs","headerName","field","width","headerClass","cellClass","split","sortable","filter","valueGetter","cellRenderer","IdFieldComponent","cellRendererParams","tooltipGetter","flex","minWidth","sort","onCellClicked","Identity","Condition","Grant","pinned","i1","i2","i3","i4","features","PermissionsComponent_div_0_Template","BaseSubsinkComponent","refreshOnChildClosedDeep","events","event","NavigationEnd","startWith","firstChild","pairwise","hadChild","hasChild","_angular_core__WEBPACK_IMPORTED_MODULE_6__","lG2","id","value","align","tooltip","copy","copyToClipboard","_angular_core__WEBPACK_IMPORTED_MODULE_1__","_c0","accentedSort","animateRows","enableCellTextSelection","headerHeight","suppressScrollOnNewData","valueCache","defaultColDef","filterParams","newRowsAction","tooltipShowDelay","tooltipHideDelay","suppressMovableColumns","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.html","./projects/eav-ui/src/app/permissions/permissions.component.html","./projects/eav-ui/src/app/permissions/permissions.component.ts","./projects/eav-ui/src/app/shared/components/base-component/base.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.html","./projects/eav-ui/src/app/shared/constants/default-grid-options.constants.ts","./projects/eav-ui/src/app/shared/helpers/copy-to-clipboard.helper.ts"],"sourcesContent":["import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Permission } from '../models/permission.model';\r\nimport { PermissionsActionsParams } from './permissions-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-permissions-actions',\r\n  templateUrl: './permissions-actions.component.html',\r\n  styleUrls: ['./permissions-actions.component.scss'],\r\n})\r\nexport class PermissionsActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & PermissionsActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & PermissionsActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deletePermission(): void {\r\n    const permission: Permission = this.params.data;\r\n    this.params.onDelete(permission);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deletePermission()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>","<div class=\"eav-dialog nav-component-wrapper\" *ngIf=\"viewModel$ | async as vm\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Permissions</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content nav-component-wrapper\">\r\n    <router-outlet></router-outlet>\r\n    <div class=\"grid-wrapper\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.permissions\" [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new permission\" (click)=\"editPermission(null)\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n</div>","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable, combineLatest, map } from 'rxjs';\r\nimport { BaseComponent } from '../shared/components/base-component/base.component';\r\nimport { IdFieldComponent } from '../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { Permission } from './models/permission.model';\r\nimport { PermissionsActionsComponent } from './permissions-actions/permissions-actions.component';\r\nimport { PermissionsActionsParams } from './permissions-actions/permissions-actions.models';\r\nimport { PermissionsService } from './services/permissions.service';\r\n\r\n@Component({\r\n  selector: 'app-permissions',\r\n  templateUrl: './permissions.component.html',\r\n  styleUrls: ['./permissions.component.scss'],\r\n})\r\nexport class PermissionsComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  permissions$ = new BehaviorSubject<Permission[]>(undefined);\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private targetType = parseInt(this.route.snapshot.paramMap.get('targetType'), 10);\r\n  private keyType = this.route.snapshot.paramMap.get('keyType') as MetadataKeyType;\r\n  private key = this.route.snapshot.paramMap.get('key');\r\n  private prefills: Record<string, Record<string, string>> = {\r\n    [eavConstants.metadata.language.targetType]: {\r\n      PermissionType: 'language',\r\n    },\r\n  };\r\n\r\n  viewModel$: Observable<PermissionsViewModel>;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<PermissionsComponent>,\r\n\r\n    private permissionsService: PermissionsService,\r\n    private snackBar: MatSnackBar,\r\n  ) { \r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchPermissions();\r\n    this.subscription.add(this.refreshOnChildClosedShallow().subscribe(() => { this.fetchPermissions(); }));\r\n    this.viewModel$ = combineLatest([\r\n      this.permissions$\r\n    ]).pipe(map(([permissions]) => ({ permissions })));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.permissions$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private fetchPermissions() {\r\n    this.permissionsService.getAll(this.targetType, this.keyType, this.key).subscribe(permissions => {\r\n      this.permissions$.next(permissions);\r\n    });\r\n  }\r\n\r\n  editPermission(permission?: Permission) {\r\n    let form: EditForm;\r\n    if (permission == null) {\r\n      form = {\r\n        items: [{\r\n          ContentTypeName: eavConstants.contentTypes.permissions,\r\n          For: {\r\n            Target: Object.values(eavConstants.metadata).find(m => m.targetType === this.targetType)?.target ?? this.targetType.toString(),\r\n            TargetType: this.targetType,\r\n            ...(this.keyType === eavConstants.keyTypes.guid && { Guid: this.key }),\r\n            ...(this.keyType === eavConstants.keyTypes.number && { Number: parseInt(this.key, 10) }),\r\n            ...(this.keyType === eavConstants.keyTypes.string && { String: this.key }),\r\n          },\r\n          ...(this.prefills[this.targetType] && { Prefill: this.prefills[this.targetType] }),\r\n        }],\r\n      };\r\n    } else {\r\n      form = {\r\n        items: [{ EntityId: permission.Id }],\r\n      };\r\n    }\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private deletePermission(permission: Permission) {\r\n    if (!confirm(`Delete '${permission.Title}' (${permission.Id})?`)) { return; }\r\n    this.snackBar.open('Deleting...');\r\n    this.permissionsService.delete(permission.Id).subscribe(() => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.fetchPermissions();\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          headerName: 'ID',\r\n          field: 'Id',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'id-action no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agNumberColumnFilter',\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Id;\r\n          },\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<Permission> = {\r\n              tooltipGetter: (permission: Permission) => `ID: ${permission.Id}\\nGUID: ${permission.Guid}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          field: 'Name',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'primary-action highlight'.split(' '),\r\n          sortable: true,\r\n          sort: 'asc',\r\n          filter: 'agTextColumnFilter',\r\n          onCellClicked: (params) => {\r\n            const permission: Permission = params.data;\r\n            this.editPermission(permission);\r\n          },\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Title;\r\n          },\r\n        },\r\n        {\r\n          field: 'Identity',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Identity;\r\n          },\r\n        },\r\n        {\r\n          field: 'Condition',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Condition;\r\n          },\r\n        },\r\n        {\r\n          field: 'Grant',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Grant;\r\n          },\r\n        },\r\n        {\r\n          width: 42,\r\n          cellClass: 'secondary-action no-padding'.split(' '),\r\n          pinned: 'right',\r\n          cellRenderer: PermissionsActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: PermissionsActionsParams = {\r\n              onDelete: (permission) => this.deletePermission(permission),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface PermissionsViewModel {\r\n  permissions: Permission[];\r\n}","import { Directive, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith, Subscription } from 'rxjs';\r\nimport { BaseSubsinkComponent } from '../base-subsink-component/base-subsink.component';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class BaseComponent extends BaseSubsinkComponent implements OnDestroy {\r\n  \r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  protected refreshOnChildClosedDeep() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n\r\n  protected refreshOnChildClosedShallow() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(): void {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>","import { GridOptions } from '@ag-grid-community/core';\r\n\r\nexport const defaultGridOptions: GridOptions = {\r\n  accentedSort: true,\r\n  animateRows: true,\r\n  enableCellTextSelection: true,\r\n  headerHeight: 32,\r\n  suppressScrollOnNewData: true,\r\n  valueCache: true,\r\n  defaultColDef: { filterParams: { newRowsAction: 'keep' } },\r\n  tooltipShowDelay: 0,\r\n  tooltipHideDelay: 100000,\r\n  suppressMovableColumns: true,\r\n} as const;\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}