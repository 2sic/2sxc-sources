{"version":3,"file":"default-projects_eav-ui_src_app_create-file-dialog_index_ts.373ae383fda4d9ac.js","mappings":"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","names":["appFilesAsset","SourceService","constructor","http","context","dnnContext","this","get","viewKey","global","urlItems","$2sxc","apiUrl","params","appId","templateIdOrPath","pipe","map","view","Type","toLocaleLowerCase","Extension","save","post","getAll","mask","Files","forEach","file","Shared","getWebApis","files","splitIndex","Path","lastIndexOf","fileExtIndex","folder","substring","name","path","isShared","getWebApiDetails","apiPath","zoneId","getPredefinedTemplates","purpose","type","getPreview","templateKey","create","test","find","i","EntityId","toString","IsShared","templateId","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_2__","Yz7","factory","ɵfac","MatInputAutofocusDirective","matInput","elementRef","autofocusSelectValue","ngOnInit","setTimeout","focus","toBoolean","nativeElement","setSelectionRange","value","length","valueLowerCase","core","lG2","selectors","inputs","platform_r9","purpose_r10","template_r11","Key","Name","_c0","vm_r1","loadingPreview","preview","previewError","CreateFileDialogComponent_ng_container_0_mat_option_17_Template","CreateFileDialogComponent_ng_container_0_mat_option_23_Template","CreateFileDialogComponent_ng_container_0_mat_option_29_Template","CreateFileDialogComponent_ng_container_0_app_field_hint_35_Template","CreateFileDialogComponent_ng_container_0_ng_container_37_Template","_r15","ctx_r14","closeDialog","ctx_r16","confirm","CreateFileDialogComponent_ng_container_0_ng_container_42_Template","CreateFileDialogComponent_ng_container_0_div_43_Template","ctx_r0","controls","finalName","trim","form","platforms","purposes","templates","touched","errors","required","valid","previewValid","CreateFileDialogComponent","BaseSubsinkComponent","dialogData","dialogRef","sourceService","super","hostClass","all","templates$","BehaviorSubject","loadingPreview$","buildForm","fetchTemplates","buildViewModel","ngOnDestroy","complete","result","close","formValues","getRawValue","subscribe","response","Default","patchValue","next","Templates","UntypedFormGroup","platform","UntypedFormControl","disabled","Validators","subscription","add","combineLatest","valueChanges","startWith","distinctUntilChanged","template","suggestedName","SuggestedFileName","SanitizeHelper","sanitizePath","Prefix","Suffix","replace","platforms$","platformsMap","Platforms","Object","keys","purposes$","purposesMap","Purpose","filter","includes","tap","some","newTemplateKey","preview$","throttleTime","duration","scheduler","asyncScheduler","config","duration$","timer","throttle","durationSelector","operate","source","subscriber","leading","trailing","hasValue","sendValue","throttled","isComplete","endThrottling","unsubscribe","send","cleanupThrottling","startThrottle","innerFrom","createOperatorSubscriber","closed","switchMap","forkJoin","of","undefined","viewModel$","Preview","IsValid","Error","MAT_DIALOG_DATA","Xpm","hostVars","hostBindings","rf","ctx","CreateFileDialogComponent_ng_container_0_Template","CreateFileDialogModule","oAB","cJS","Context","provide","MAT_FORM_FIELD_DEFAULT_OPTIONS","useValue","subscriptSizing","MAT_SELECT_CONFIG","hideSingleSelectionIndicator","imports","CommonModule","SharedComponentsModule","MatButtonModule","MatSelectModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","MatProgressSpinnerModule","MatCardModule"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/code-editor/services/source.service.ts","./projects/eav-ui/src/app/shared/directives/mat-input-autofocus.directive.ts","./projects/eav-ui/src/app/create-file-dialog/create-file-dialog.component.html","./projects/eav-ui/src/app/create-file-dialog/create-file-dialog.component.ts","./node_modules/rxjs/dist/esm/internal/operators/throttleTime.js","./node_modules/rxjs/dist/esm/internal/operators/throttle.js","./projects/eav-ui/src/app/create-file-dialog/create-file-dialog.module.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { WebApi, WebApiDetails } from '../../app-administration/models';\r\nimport { ViewOrFileIdentifier } from '../../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FileAsset } from '../models/file-asset.model';\r\nimport { PredefinedTemplatesResponse } from '../models/predefined-template.model';\r\nimport { Preview } from '../models/preview.models';\r\nimport { SourceView } from '../models/source-view.model';\r\n\r\nconst appFilesAll = 'admin/AppFiles/AppFiles';\r\nconst appFilesAsset = 'admin/AppFiles/asset';\r\nconst appFilesCreate = 'admin/AppFiles/create';\r\nconst apiExplorerInspect = 'admin/ApiExplorer/inspect';\r\nconst appFilesPredefinedTemplates = 'admin/AppFiles/GetTemplates';\r\nconst appFilesPreview = 'admin/AppFiles/preview';\r\n\r\n@Injectable()\r\nexport class SourceService {\r\n\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /** ViewKey is templateId or path */\r\n  get(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[]): Observable<SourceView> {\r\n    return this.http.get<SourceView>(this.dnnContext.$2sxc.http.apiUrl(appFilesAsset), {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    }).pipe(\r\n      map(view => {\r\n        if (view.Type.toLocaleLowerCase() === 'auto') {\r\n          switch (view.Extension.toLocaleLowerCase()) {\r\n            case '.cs':\r\n            case '.cshtml':\r\n              view.Type = 'Razor';\r\n              break;\r\n            case '.html':\r\n            case '.css':\r\n            case '.js':\r\n              view.Type = 'Token';\r\n              break;\r\n          }\r\n        }\r\n        return view;\r\n      })\r\n    );\r\n  }\r\n\r\n  /** ViewKey is templateId or path */\r\n  save(viewKey: string, global: boolean, view: SourceView, urlItems: ViewOrFileIdentifier[]): Observable<boolean> {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(appFilesAsset), view, {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    });\r\n  }\r\n\r\n  getAll(mask?: string): Observable<FileAsset[]> {\r\n    return this.http.get<{ Files: FileAsset[] }>(this.dnnContext.$2sxc.http.apiUrl(appFilesAll), {\r\n      params: {\r\n        appId: this.context.appId,\r\n        ...(mask && { mask }),\r\n      },\r\n    }).pipe(\r\n      map(({ Files }) => {\r\n        Files.forEach(file => {\r\n          file.Shared ??= false;\r\n        });\r\n        return Files;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getWebApis(): Observable<WebApi[]> {\r\n    return this.getAll('*Controller.cs').pipe(\r\n      map(files => {\r\n        const webApis: WebApi[] = files.map(file => {\r\n          const splitIndex = file.Path.lastIndexOf('/');\r\n          const fileExtIndex = file.Path.lastIndexOf('.');\r\n          const folder = file.Path.substring(0, splitIndex);\r\n          const name = file.Path.substring(splitIndex + 1, fileExtIndex);\r\n          const webApi: WebApi = { path: file.Path, folder, name, isShared: file.Shared };\r\n          return webApi;\r\n        });\r\n        return webApis;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getWebApiDetails(apiPath: string): Observable<WebApiDetails> {\r\n    return this.http.get<WebApiDetails>(this.dnnContext.$2sxc.http.apiUrl(apiExplorerInspect), {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId, path: apiPath },\r\n    });\r\n  }\r\n\r\n  getPredefinedTemplates(purpose?: 'Template' | 'Search' | 'Api', type?: 'Token' | 'Razor'): Observable<PredefinedTemplatesResponse> {\r\n    return this.http.get<PredefinedTemplatesResponse>(this.dnnContext.$2sxc.http.apiUrl(appFilesPredefinedTemplates), {\r\n      params: {\r\n        ...(purpose && { purpose }),\r\n        ...(type && { type }),\r\n      },\r\n    });\r\n  }\r\n\r\n  getPreview(path: string, global: boolean, templateKey: string): Observable<Preview> {\r\n    return this.http.get<Preview>(this.dnnContext.$2sxc.http.apiUrl(appFilesPreview), {\r\n      params: {\r\n        appId: this.context.appId,\r\n        path,\r\n        templateKey,\r\n        global,\r\n      },\r\n    });\r\n  }\r\n\r\n  create(path: string, global: boolean, templateKey: string): Observable<boolean> {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(appFilesCreate), {}, {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        purpose: 'auto',\r\n        path,\r\n        templateKey,\r\n      },\r\n    });\r\n  }\r\n\r\n  private templateIdOrPath(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[]) {\r\n    if (/^[0-9]*$/g.test(viewKey)) {\r\n      const path = urlItems.find(i => i.EntityId?.toString() === viewKey && i.IsShared === global)?.Path;\r\n      return {\r\n        templateId: viewKey,\r\n        ...(path != null && { path }),\r\n      };\r\n    } else {\r\n      return { path: viewKey };\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\r\nimport { MatInput } from '@angular/material/input';\r\n\r\n@Directive({ selector: '[appMatInputAutofocus]' })\r\nexport class MatInputAutofocusDirective implements OnInit {\r\n  @Input() autofocusSelectValue: string | boolean | null | undefined = false;\r\n\r\n  constructor(private matInput: MatInput, private elementRef: ElementRef<HTMLInputElement>) { }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.matInput.focus();\r\n\r\n      if (this.toBoolean(this.autofocusSelectValue)) {\r\n        this.elementRef.nativeElement.setSelectionRange(0, this.matInput.value.length);\r\n      }\r\n    });\r\n  }\r\n\r\n  private toBoolean(value: any): boolean | null | undefined {\r\n    if (typeof value === 'boolean') { return value; }\r\n    if (typeof value === 'string') {\r\n      const valueLowerCase = value.toLocaleLowerCase();\r\n      if (valueLowerCase === 'true') { return true; }\r\n      if (valueLowerCase === 'false') { return false; }\r\n      return;\r\n    }\r\n    if (value == null) { return value; }\r\n  }\r\n}\r\n","<ng-container *ngIf=\"viewModel$ | async as vm\">\r\n  <div class=\"eav-dialog eav-no-scrollbar\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title eav-dialog-title-box\">\r\n        <span>Create</span>\r\n        <span class=\"eav-file-name\">{{\r\n          controls.finalName.value\r\n          || (controls.folder.value ? controls.folder.value.trim() + '/' : '')\r\n          }}</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"eav-dialog-content\">\r\n      <form [formGroup]=\"form\" class=\"dialog-form\">\r\n        <div class=\"dialog-form-content\">\r\n      \r\n          <div class=\"eav-field-container eav-multiple\">\r\n            <!-- Platform -->\r\n            <div class=\"eav-multiple-field\">\r\n              <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n                <mat-label>Platform</mat-label>\r\n                <mat-select formControlName=\"platform\">\r\n                  <mat-option *ngFor=\"let platform of vm.platforms\" [value]=\"platform\">\r\n                    {{ platform }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n      \r\n            <!-- Purpose -->\r\n            <div class=\"eav-multiple-field\">\r\n              <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n                <mat-label>Purpose</mat-label>\r\n                <mat-select formControlName=\"purpose\">\r\n                  <mat-option *ngFor=\"let purpose of vm.purposes\" [value]=\"purpose\">\r\n                    {{ purpose }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n      \r\n          <!-- Template -->\r\n          <div class=\"eav-field-container\">\r\n            <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n              <mat-label>Template</mat-label>\r\n              <mat-select formControlName=\"templateKey\">\r\n                <mat-option *ngFor=\"let template of vm.templates\" [value]=\"template.Key\">\r\n                  {{ template.Name }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n      \r\n          <!-- Name -->\r\n          <div class=\"eav-field-container\">\r\n            <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n              <mat-label>Name</mat-label>\r\n              <input matInput type=\"text\" formControlName=\"name\" required appMatInputAutofocus autofocusSelectValue=\"true\">\r\n            </mat-form-field>\r\n            <app-field-hint *ngIf=\"controls.name.touched && controls.name.errors?.required\" [isError]=\"true\">\r\n              This field is required\r\n            </app-field-hint>\r\n          </div>\r\n        </div>\r\n      \r\n        <div class=\"dialog-form-actions\">\r\n          <ng-container *ngIf=\"vm.loadingPreview\">\r\n            <mat-spinner mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n            <div class=\"spacer\"></div>\r\n          </ng-container>\r\n          <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n          <button mat-raised-button type=\"button\" color=\"accent\"\r\n            [disabled]=\"!form.valid || vm.loadingPreview || !vm.previewValid\" (click)=\"confirm()\">\r\n            Create\r\n          </button>\r\n        </div>\r\n      \r\n        <ng-container *ngIf=\"vm.preview\">\r\n          <div class=\"eav-preview-label-box\">\r\n            <label class=\"eav-preview-label\" [ngClass]=\"{ 'disabled': vm.loadingPreview }\">Preview</label>\r\n          </div>\r\n          <pre class=\"fancy-scrollbar-light\" [ngClass]=\"{ 'disabled': vm.loadingPreview }\">{{ vm.preview }}</pre>\r\n        </ng-container>\r\n      \r\n        <div class=\"eav-preview-error\" *ngIf=\"!vm.loadingPreview && vm.previewError\">\r\n          {{ vm.previewError }}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</ng-container>","import { Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n// tslint:disable-next-line:max-line-length\r\nimport { asyncScheduler, BehaviorSubject, combineLatest, distinctUntilChanged, forkJoin, map, Observable, of, startWith, Subscription, switchMap, tap, throttleTime, timer } from 'rxjs';\r\nimport { CreateFileDialogData, CreateFileDialogResult, CreateFileFormControls, CreateFileFormValues, CreateFileViewModel } from '.';\r\nimport { PredefinedTemplate } from '../code-editor/models/predefined-template.model';\r\nimport { Preview } from '../code-editor/models/preview.models';\r\nimport { SourceService } from '../code-editor/services/source.service';\r\nimport { SanitizeHelper } from '../edit/shared/helpers';\r\nimport { BaseSubsinkComponent } from '../shared/components/base-subsink-component/base-subsink.component';\r\n\r\n@Component({\r\n  selector: 'app-create-file-dialog',\r\n  templateUrl: './create-file-dialog.component.html',\r\n  styleUrls: ['./create-file-dialog.component.scss']\r\n})\r\nexport class CreateFileDialogComponent extends BaseSubsinkComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  controls: CreateFileFormControls;\r\n  viewModel$: Observable<CreateFileViewModel>;\r\n\r\n  private all = 'All' as const;\r\n  private templates$: BehaviorSubject<PredefinedTemplate[]>;\r\n  private loadingPreview$: BehaviorSubject<boolean>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: CreateFileDialogData,\r\n    private dialogRef: MatDialogRef<CreateFileDialogComponent>,\r\n    private sourceService: SourceService,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.templates$ = new BehaviorSubject<PredefinedTemplate[]>([]);\r\n    this.loadingPreview$ = new BehaviorSubject(false);\r\n\r\n    this.buildForm();\r\n    this.fetchTemplates();\r\n    this.buildViewModel();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.templates$.complete();\r\n    this.loadingPreview$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(result?: CreateFileDialogResult): void {\r\n    this.dialogRef.close(result);\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: CreateFileFormValues = this.form.getRawValue();\r\n\r\n    const result: CreateFileDialogResult = {\r\n      name: formValues.finalName,\r\n      templateKey: formValues.templateKey,\r\n    };\r\n    this.closeDialog(result);\r\n  }\r\n\r\n  private fetchTemplates(): void {\r\n    this.sourceService.getPredefinedTemplates(this.dialogData.purpose, this.dialogData.type).subscribe(response => {\r\n      if (this.controls.templateKey.value !== response.Default) {\r\n        this.controls.templateKey.patchValue(response.Default);\r\n      }\r\n      this.templates$.next(response.Templates);\r\n    });\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({\r\n      platform: new UntypedFormControl(this.all),\r\n      purpose: new UntypedFormControl({ value: this.dialogData.purpose ?? this.all, disabled: this.dialogData.purpose != null }),\r\n      templateKey: new UntypedFormControl(null, Validators.required),\r\n      name: new UntypedFormControl(this.dialogData.name ?? null, Validators.required),\r\n      finalName: new UntypedFormControl({ value: null, disabled: true }),\r\n      folder: new UntypedFormControl({ value: this.dialogData.folder ?? '', disabled: true }),\r\n    });\r\n\r\n    this.controls = this.form.controls as any;\r\n\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.templates$,\r\n        this.controls.templateKey.valueChanges.pipe(\r\n          startWith<string>(this.controls.templateKey.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n      ]).subscribe(([templates, templateKey]) => {\r\n        const template = templates.find(t => t.Key === templateKey);\r\n        const suggestedName = this.dialogData.name\r\n          ? this.controls.name.value || this.dialogData.name\r\n          : template?.SuggestedFileName ?? null;\r\n\r\n        if (this.controls.name.value !== suggestedName) {\r\n          this.controls.name.patchValue(suggestedName);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.templates$,\r\n        this.controls.templateKey.valueChanges.pipe(\r\n          startWith<string>(this.controls.templateKey.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n        this.controls.name.valueChanges.pipe(\r\n          startWith<string>(this.controls.name.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n        this.controls.folder.valueChanges.pipe(\r\n          startWith<string>(this.controls.folder.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n      ]).subscribe(([templates, templateKey, name, folder]) => {\r\n        const template = templates.find(t => t.Key === templateKey);\r\n\r\n        let finalName: string = null;\r\n        if (name) {\r\n          folder = folder.trim();\r\n          name = SanitizeHelper.sanitizePath(name.trim());\r\n          name = `${template?.Prefix ?? ''}${name}${template?.Suffix ?? ''}${template?.Extension ?? ''}`;\r\n          finalName = `${folder ? `${folder}/` : ''}${name}`.replace(/\\/{2,}/g, '/');\r\n        }\r\n\r\n        if (this.controls.finalName.value !== finalName) {\r\n          this.controls.finalName.patchValue(finalName);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private buildViewModel(): void {\r\n    const platforms$ = this.templates$.pipe(\r\n      map(templates => {\r\n        const platformsMap: Record<string, string> = {\r\n          [this.all]: this.all,\r\n        };\r\n        templates.forEach(template => {\r\n          template.Platforms?.forEach(platform => {\r\n            platformsMap[platform] = platform;\r\n          });\r\n        });\r\n        return Object.keys(platformsMap);\r\n      }),\r\n    );\r\n    const purposes$ = this.templates$.pipe(\r\n      map(templates => {\r\n        const purposesMap: Record<string, string> = {\r\n          [this.all]: this.all,\r\n        };\r\n        templates.forEach(template => {\r\n          purposesMap[template.Purpose] = template.Purpose;\r\n        });\r\n        return Object.keys(purposesMap);\r\n      }),\r\n    );\r\n    const templates$ = combineLatest([\r\n      this.templates$,\r\n      this.controls.platform.valueChanges.pipe(\r\n        startWith<string>(this.controls.platform.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n      this.controls.purpose.valueChanges.pipe(\r\n        startWith<string>(this.controls.purpose.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n    ]).pipe(\r\n      map(([templates, platform, purpose]) => {\r\n        const filtered = templates.filter(template => {\r\n          const platformMatch = platform === this.all || (template.Platforms?.includes(platform) ?? false);\r\n          const purposeMatch = purpose === this.all || template.Purpose === purpose;\r\n          return platformMatch && purposeMatch;\r\n        });\r\n        return filtered;\r\n      }),\r\n      tap(templates => {\r\n        if (!templates.some(t => t.Key === this.controls.templateKey.value)) {\r\n          const newTemplateKey = templates[0]?.Key ?? null;\r\n          if (this.controls.templateKey.value !== newTemplateKey) {\r\n            this.controls.templateKey.patchValue(newTemplateKey);\r\n          }\r\n        }\r\n      }),\r\n    );\r\n    const preview$ = combineLatest([\r\n      this.controls.finalName.valueChanges.pipe(\r\n        startWith<string>(this.controls.finalName.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n      this.controls.templateKey.valueChanges.pipe(\r\n        startWith<string>(this.controls.templateKey.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n    ]).pipe(\r\n      throttleTime(100, asyncScheduler, { leading: true, trailing: true }),\r\n      tap(() => {\r\n        this.loadingPreview$.next(true);\r\n      }),\r\n      switchMap(([finalName, templateKey]) => {\r\n        return !finalName || !templateKey\r\n          ? of<Preview | undefined>(undefined)\r\n          : forkJoin([\r\n            this.sourceService.getPreview(finalName, this.dialogData.global, templateKey),\r\n            timer(500),\r\n          ]).pipe(map(([preview]) => preview));\r\n      }),\r\n      tap(() => {\r\n        this.loadingPreview$.next(false);\r\n      }),\r\n    );\r\n    this.viewModel$ = combineLatest([platforms$, purposes$, templates$, preview$, this.loadingPreview$]).pipe(\r\n      map(([platforms, purposes, templates, preview, loadingPreview]) => {\r\n        const viewModel: CreateFileViewModel = {\r\n          platforms,\r\n          purposes,\r\n          templates,\r\n          loadingPreview,\r\n          preview: preview?.Preview,\r\n          previewValid: preview?.IsValid ?? false,\r\n          previewError: preview?.Error,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { asyncScheduler } from '../scheduler/async';\nimport { throttle } from './throttle';\nimport { timer } from '../observable/timer';\nexport function throttleTime(duration, scheduler = asyncScheduler, config) {\n    const duration$ = timer(duration, scheduler);\n    return throttle(() => duration$, config);\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport function throttle(durationSelector, config) {\n    return operate((source, subscriber) => {\n        const { leading = true, trailing = false } = config !== null && config !== void 0 ? config : {};\n        let hasValue = false;\n        let sendValue = null;\n        let throttled = null;\n        let isComplete = false;\n        const endThrottling = () => {\n            throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();\n            throttled = null;\n            if (trailing) {\n                send();\n                isComplete && subscriber.complete();\n            }\n        };\n        const cleanupThrottling = () => {\n            throttled = null;\n            isComplete && subscriber.complete();\n        };\n        const startThrottle = (value) => (throttled = innerFrom(durationSelector(value)).subscribe(createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n        const send = () => {\n            if (hasValue) {\n                hasValue = false;\n                const value = sendValue;\n                sendValue = null;\n                subscriber.next(value);\n                !isComplete && startThrottle(value);\n            }\n        };\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            hasValue = true;\n            sendValue = value;\n            !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        }, () => {\n            isComplete = true;\n            !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }));\n    });\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MAT_SELECT_CONFIG, MatSelectModule } from '@angular/material/select';\r\nimport { CreateFileDialogComponent, FileLocationDialogComponent } from '.';\r\nimport { SourceService } from '../code-editor/services/source.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CreateFileDialogComponent,\r\n    FileLocationDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedComponentsModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    MatCardModule,\r\n  ],\r\n  exports: [\r\n    CreateFileDialogComponent,\r\n    FileLocationDialogComponent,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    SourceService,\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { subscriptSizing: 'dynamic' } },\r\n    { provide: MAT_SELECT_CONFIG, useValue: { hideSingleSelectionIndicator: true } }\r\n  ],\r\n})\r\nexport class CreateFileDialogModule { }\r\n"],"x_google_ignoreList":[4,5]}