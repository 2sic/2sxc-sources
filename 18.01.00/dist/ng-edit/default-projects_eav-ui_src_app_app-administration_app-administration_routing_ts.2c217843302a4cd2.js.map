{"version":3,"file":"default-projects_eav-ui_src_app_app-administration_app-administration_routing_ts.2c217843302a4cd2.js","mappings":"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","names":["appAdministrationDialog","name","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","AppAdminMainComponent","Promise","all","__webpack_require__","e","then","bind","analyzeSettingsDialog","AnalyzeSettingsComponent","settingsItemDetailsDialog","SettingsItemDetailsComponent","editContentTypeDialog","EditContentTypeComponent","importContentTypeDialog","ImportContentTypeComponent","importQueryDialog","ImportQueryComponent","importViewDialog","ImportViewComponent","languagePermissionsDialog","LanguagePermissionsComponent","viewsUsageDialog","ViewsUsageComponent","ExportAppComponent","constructor","this","exportAppService","transient","ExportAppService","appInfo","signal","features","inject","FeaturesScopedService","expAssetsAdvEnabled","isEnabled","FeatureNames","AppExportAssetsAdvanced","includeContentGroups","model","resetAppGuid","assetsAdam","assetsAdamDeleted","assetsSite","downloadUrl","computed","exportAppUrl","ngOnInit","getAppInfo","subscribe","set","static","t","core","VBU","selectors","inputs","i0","SignalBased","outputs","standalone","decls","vars","consts","template","rf","ctx","$event","tmp_1_0","Name","tmp_2_0","Guid","tmp_3_0","Version","tmp_4_0","EntitiesCount","tmp_5_0","LanguagesCount","tmp_6_0","TemplatesCount","HasTokenTemplates","HasRazorTemplates","tmp_7_0","TransferableFilesCount","tmp_8_0","FilesCount","MatCheckboxModule","i1","FormsModule","i2","MatDialogActions","MatButtonModule","i3","MatIconModule","i4","FeatureIconComponent","styles","scopeOption_r1","value","template_r5","_r4","$implicit","_export","Id","ExportAppPartsComponent_Conditional_27_For_5_Conditional_5_For_4_Template","contentType_r3","Templates","entity_r7","_r6","Title","ExportAppPartsComponent_Conditional_27_For_5_Conditional_6_For_4_Template","Entities","_r2","ExportAppPartsComponent_Conditional_27_For_5_Conditional_5_Template","ExportAppPartsComponent_Conditional_27_For_5_Conditional_6_Template","length","template_r9","_r8","ExportAppPartsComponent_Conditional_27_For_5_Template","ExportAppPartsComponent_Conditional_27_For_10_Template","ctx_r9","contentInfo","ContentTypes","TemplatesWithoutContentTypes","ExportAppPartsComponent","#exportAppPartsSvc","#contentTypesSvc","hostClass","ExportAppPartsService","ContentTypesService","exportScope","eavConstants","scopes","default","lockScope","dropdownInsertValue","loading","isExporting","scopeOptions","undefined","#fetchScopes","#fetchContentInfo","exportAppParts","contentTypeIds","#selectedContentTypes","map","contentType","templateIds","#selectedTemplates","entityIds","#selectedEntities","entity","concat","exportParts","changeScope","newScope","prompt","find","option","newScopeOption","scopeOptionsTemp","unshift","unlockScope","getScopes","getContentInfo","filter","entities","templates","hostVars","hostBindings","ExportAppPartsComponent_For_17_Template","ExportAppPartsComponent_Conditional_27_Template","MatFormFieldModule","MatSelectModule","MatOptionModule","i5","i6","i7","FieldHintComponent","ClickStopPropagationDirective","TippyDirective","MatDialogModule","file_r3","_c1","message_r4","MessageType","ctx_r4","FileUploadMessageTypes","Warning","Success","Error","Text","ImportAppPartsComponent_Conditional_19_Conditional_1_Template","ImportAppPartsComponent_Conditional_19_Conditional_2_Template","ImportAppPartsComponent_Conditional_19_For_4_Template","result","Messages","upload","files","uploading","ImportAppPartsComponent","BaseComponent","snackBar","sanitizer","context","changeDetectorRef","super","importAppPartsService","ImportAppPartsService","uploadType","UploadTypes","AppPart","showAppCatalog$","BehaviorSubject","showProgress","remoteInstallerUrl","ready","importData","title","description","allowedFileTypes","upload$","importAppParts","installerService","InstallerService","installSettingsService","AppInstallSettingsService","alreadyProcessing","messages$","fromEvent","window","pipe","evt","origin","JSON","parse","data","console","error","Number","moduleId","effect","subscriptions","add","settings$","settings","bypassSecurityTrustResourceUrl","remoteUrl","filesDropped","loadGettingStarted","action","tap","winFrame","installerWindow","nativeElement","specsMsg","installedApps","rules","app","target","appGuid","guid","mode","url","specsJson","stringify","contentWindow","postMessage","log","Object","values","packages","msg","reduce","c","displayName","confirm","switchMap","detectChanges","installPackages","p","currentPackage","alert","top","location","reload","catchError","Message","message","of","ngOnDestroy","setFiles","filesChanged","event","Array","from","take","next","open","duration","multiple","slice","viewQuery","_r1","ImportAppPartsComponent_Conditional_5_Template","fileInput_r2","click","ImportAppPartsComponent_Conditional_14_Template","ImportAppPartsComponent_For_16_Template","ImportAppPartsComponent_Conditional_19_Template","ImportAppPartsComponent_Conditional_20_Template","tmp_9_0","NgClass","MatProgressSpinnerModule","SafeHtmlPipe","DragAndDropDirective","ctx_r1","exportAppXml","resetApp","_r3","AppStateComponent","#importAppPartsSvc","#exportAppSvc","#dialogConfigSvc","appStateAdvanced","DialogConfigAppService","getCurrent$","dialogSettings","dismiss","withFiles","exportForVersionControl","AppStateComponent_Conditional_13_Template","AppStateComponent_Conditional_14_Template","AppStateComponent_Conditional_15_Template","AppStateComponent_Conditional_16_Template","MatCardModule","MatSlideToggleModule","FeatureTextInfoComponent","appAdministrationRoutes","path","component","DialogEntryComponent","dialog","children","redirectTo","pathMatch","loadComponent","mod","GettingStartedComponent","breadcrumb","DataComponent","loadChildren","m","contentItemsRoutes","EditRoutes","GoToMetadata","getRoutes","GoToDevRest","route","contentTypeFieldsRoutes","ContentExportRoutes","contentImportRoutes","GoToPermissions","GoToCopilot","CopilotPageComponent","CopilotSpecs","routeData","DataRestApiComponent","paramTypeName","DevRestDataComponent","QueriesComponent","EditRoutesNoHistory","routeQuery","QueriesRestApiComponent","paramQuery","DevRestQueryComponent","ViewsComponent","views","WebApiComponent","webApi","routeWebApi","WebApiRestApiComponent","paramApiPath","DevRestApiComponent","AppConfigurationComponent","intro","heading","teaser","outputType","routeDefinition","part","icon","svgIcon","webApiTypeRoot","webApiTypeScopes","HttpServiceBase","retrieveContentType","staticName","http","get","apiUrl","params","appId","contentTypeId","retrieveContentTypes","scope","scopesData","old","keys","key","getScopesV2","save","post","appid","delete","StaticName","import","formData","FormData","file","append","zoneId","createGhost","sourceStaticName","_angular_core__WEBPACK_IMPORTED_MODULE_2__","jDH","factory","ɵfac","webApiAppPartsRoot","join","webApiAppRoot","toString","withPortalFiles","ImportAppService","importApp","changedName","retryOnDuplicate","folderName","_angular_core__WEBPACK_IMPORTED_MODULE_4__","defaultRoute","metadataRoutes","getUrl","targetType","keyType","dialogTitle","contentTypeStaticName","encodeURIComponent","getUrlApp","metadata","getUrlAttribute","attributeId","attribute","getUrlContentType","getUrlEntity"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/app-admin-main/app-admin-main.dialog-config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/settings-item-details/settings-item-details.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/edit-content-type/edit-content-type-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-content-type/import-content-type-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-query/import-query-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-view/import-view-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/language-permissions/language-permissions-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-dialog.config.ts","./projects/eav-ui/src/app/app-administration/app-menu/export-app/export-app.component.ts","./projects/eav-ui/src/app/app-administration/app-menu/export-app/export-app.component.html","./projects/eav-ui/src/app/app-administration/app-menu/export-app-parts/export-app-parts.component.html","./projects/eav-ui/src/app/app-administration/app-menu/export-app-parts/export-app-parts.component.ts","./projects/eav-ui/src/app/app-administration/app-menu/import-app-parts/import-app-parts.component.html","./projects/eav-ui/src/app/app-administration/app-menu/import-app-parts/import-app-parts.component.ts","./projects/eav-ui/src/app/app-administration/app-menu/app-state/app-state.component.html","./projects/eav-ui/src/app/app-administration/app-menu/app-state/app-state.component.ts","./projects/eav-ui/src/app/app-administration/app-administration.routing.ts","./projects/eav-ui/src/app/app-administration/copilot/copilot-specs.ts","./projects/eav-ui/src/app/app-administration/copilot/go-to-copilot.ts","./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/metadata/go-to-metadata.ts","./projects/eav-ui/src/app/shared/constants/dropdown-insert-value.constant.ts"],"sourcesContent":["import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const appAdministrationDialog: DialogConfig = {\r\n  name: 'APP_ADMINISTRATION_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { AppAdminMainComponent } = await import('./app-admin-main.component');\r\n    return AppAdminMainComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const analyzeSettingsDialog: DialogConfig = {\r\n  name: 'ANALYZE_SETTINGS',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { AnalyzeSettingsComponent } = await import('./analyze-settings.component');\r\n    return AnalyzeSettingsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../../shared/models/dialog-config.model';\r\n\r\nexport const settingsItemDetailsDialog: DialogConfig = {\r\n  name: 'SETTINGS_ITEM_DETAILS',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { SettingsItemDetailsComponent } = await import('./settings-item-details.component');\r\n    return SettingsItemDetailsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const editContentTypeDialog: DialogConfig = {\r\n  name: 'EDIT_CONTENT_TYPE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'small',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { EditContentTypeComponent } = await import('./edit-content-type.component');\r\n    return EditContentTypeComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importContentTypeDialog: DialogConfig = {\r\n  name: 'IMPORT_CONTENT_TYPE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportContentTypeComponent } = await import('./import-content-type.component');\r\n    return ImportContentTypeComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importQueryDialog: DialogConfig = {\r\n  name: 'IMPORT_QUERY_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportQueryComponent } = await import('./import-query.component');\r\n    return ImportQueryComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importViewDialog: DialogConfig = {\r\n  name: 'IMPORT_VIEW_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportViewComponent } = await import('./import-view.component');\r\n    return ImportViewComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const languagePermissionsDialog: DialogConfig = {\r\n  name: 'LANGUAGE_PERMISSIONS',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { LanguagePermissionsComponent } = await import('./language-permissions.component');\r\n    return LanguagePermissionsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const viewsUsageDialog: DialogConfig = {\r\n  name: 'VIEWS_USAGE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ViewsUsageComponent } = await import('./views-usage.component');\r\n    return ViewsUsageComponent;\r\n  }\r\n};\r\n","import { Component, computed, inject, model, OnInit, signal } from '@angular/core';\r\nimport { MatDialogActions } from '@angular/material/dialog';\r\nimport { AppInfo } from '../../models/app-info.model';\r\nimport { ExportAppService } from '../../services/export-app.service';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { transient } from '../../../core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FeaturesScopedService } from '../../../features/features-scoped.service';\r\nimport { FeatureNames } from '../../../features/feature-names';\r\nimport { FeatureIconIndicatorComponent } from '../../../features/feature-icon-indicator/feature-icon-indicator.component';\r\nimport { FeatureIconComponent } from '../../../features/feature-icon/feature-icon.component';\r\n\r\n@Component({\r\n  selector: 'app-export-app',\r\n  templateUrl: './export-app.component.html',\r\n  styleUrls: ['./export-app.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCheckboxModule,\r\n    FormsModule,\r\n    MatDialogActions,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n\r\n    FeatureIconIndicatorComponent,\r\n    FeatureIconComponent,\r\n  ],\r\n})\r\nexport class ExportAppComponent implements OnInit {\r\n\r\n  private exportAppService = transient(ExportAppService);\r\n\r\n  appInfo = signal<AppInfo>(null);\r\n\r\n  protected features = inject(FeaturesScopedService);\r\n  protected expAssetsAdvEnabled = this.features.isEnabled[FeatureNames.AppExportAssetsAdvanced];\r\n\r\n  ngOnInit() {\r\n    this.exportAppService.getAppInfo().subscribe(appInfo => this.appInfo.set(appInfo));\r\n  }\r\n\r\n  // Use Signals\r\n  includeContentGroups = model(false);\r\n  resetAppGuid = model(false);\r\n  assetsAdam = model(true);\r\n  assetsAdamDeleted = model(false);\r\n  assetsSite = model(true);\r\n\r\n  downloadUrl = computed(() => this.exportAppService.exportAppUrl()\r\n    + `&includeContentGroups=${this.includeContentGroups()}&resetAppGuid=${this.resetAppGuid()}`\r\n    + `&assetsAdam=${this.assetsAdam()}&assetsSite=${this.assetsSite()}`\r\n  );\r\n\r\n}\r\n","<div class=\"outer-container-app\">\r\n  <h3>\r\n    Export app\r\n    {{ appInfo() == null ? '(loading details...)' : '' }}\r\n  </h3>\r\n  <div class=\"form-height\">\r\n    <p>\r\n      Pack the entire app to a <em>zip</em> folder which can be imported again to another site.\r\n      For further help visit <a href=\"https://2sxc.org/en/help?tag=export-app\" target=\"_blank\">2sxc Help</a>.\r\n    </p>\r\n\r\n    <p class=\"eav-app-info__title\">\r\n      Specs\r\n    </p>\r\n    <ul class=\"eav-app-info__content\">\r\n      <li>Name: {{ appInfo()?.Name }}</li>\r\n      <li>Guid: {{ appInfo()?.Guid }}</li>\r\n      <li>Version: {{ appInfo()?.Version }}</li>\r\n    </ul>\r\n\r\n    <p class=\"eav-app-info__title\">\r\n      Contains\r\n    </p>\r\n    <ul class=\"eav-app-info__content\">\r\n      <li>{{ appInfo()?.EntitiesCount }} entities</li>\r\n      <li>{{ appInfo()?.LanguagesCount }} languages</li>\r\n      <li>\r\n        {{ appInfo()?.TemplatesCount }} templates (Token: {{ appInfo()?.HasTokenTemplates }}, Razor:\r\n        {{ appInfo()?.HasRazorTemplates }})\r\n      </li>\r\n      <li>{{ appInfo()?.TransferableFilesCount }} files to export</li>\r\n      <li>{{ appInfo()?.FilesCount }} files in the app folder totally</li>\r\n    </ul>\r\n\r\n    <p class=\"eav-app-info__title\">\r\n      Advanced\r\n    </p>\r\n    <ul class=\"checkboxes\">\r\n      <li>\r\n        <mat-checkbox [(ngModel)]=\"includeContentGroups\" [disabled]=\"resetAppGuid()\">\r\n          <br>\r\n          Include all content-groups to re-import the app in an exact copy of this site.\r\n          <br>\r\n          Only select this option when you copy an entire DNN site.\r\n        </mat-checkbox>\r\n      </li>\r\n      <li>\r\n        <mat-checkbox [(ngModel)]=\"resetAppGuid\" [disabled]=\"includeContentGroups()\">\r\n          <br>\r\n          Reset the app GUID to zero.\r\n          <br>\r\n          You only need this option for special tutorial apps, and usually must not select it.\r\n        </mat-checkbox>\r\n      </li>\r\n      <li>\r\n        <app-feature-icon [featureNameId]=\"'AppExportAssetsAdvanced'\"></app-feature-icon>\r\n        <mat-checkbox [(ngModel)]=\"assetsAdam\" [disabled]=\"!expAssetsAdvEnabled()\">\r\n          <br>\r\n          Include all ADAM assets.\r\n          <br>\r\n          This will include all App files in the <code>/adam</code> folder in your portal.\r\n        </mat-checkbox>\r\n      </li>\r\n      <li>\r\n        <app-feature-icon [featureNameId]=\"'AppExportAssetsAdvanced'\"></app-feature-icon>\r\n        <mat-checkbox [(ngModel)]=\"assetsAdamDeleted\" [disabled]=\"!expAssetsAdvEnabled()\">\r\n          <br>\r\n          Skip ADAM assets of deleted entities.\r\n          <br>\r\n          This will skip all ADAM files which are probably not in use any more, since the owning entities were deleted.\r\n        </mat-checkbox>\r\n      </li>\r\n      <li>\r\n        <app-feature-icon [featureNameId]=\"'AppExportAssetsAdvanced'\" ></app-feature-icon>\r\n        <mat-checkbox [(ngModel)]=\"assetsSite\" [disabled]=\"!expAssetsAdvEnabled()\">\r\n          <br>\r\n          Include all Site assets like images which are not in ADAM.\r\n          <br>\r\n          This will include all files used by your entities (eg. in link fields) which are not in you App-ADAM folder.\r\n        </mat-checkbox>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <mat-dialog-actions class=\"eav-dialog-actions\" style=\"height: 73px;\">\r\n    <a mat-button class=\"eav-button__with-icon\" [href]=\"downloadUrl()\" download>\r\n      <mat-icon class=\"eav-icon\">deployed_code_update</mat-icon>\r\n      <span>Download</span>\r\n    </a>\r\n  </mat-dialog-actions>\r\n</div>\r\n","<div class=\"outer-container-app\">\r\n  <h3>Export Content and Templates from this App</h3>\r\n  <div class=\"form-height\">\r\n    <p>\r\n      To export Content-Types, Queries, Views or Data, use the respective tabs.\r\n    </p>\r\n    <p>\r\n      This is an advanced feature to export parts of the app.\r\n      The export will create an xml file which can be imported into another site or app.\r\n      To export the entire content of the app (for example when duplicating the entire site), go to the app export.\r\n      For further help visit <a href=\"https://2sxc.org/en/help?tag=export\" target=\"_blank\">2sxc Help</a>.\r\n    </p>\r\n    <div class=\"eav-edit-input\">\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Scope</mat-label>\r\n        <mat-select [ngModel]=\"exportScope\" name=\"Scope\" [disabled]=\"lockScope\" (ngModelChange)=\"changeScope($event)\">\r\n          @for (scopeOption of scopeOptions(); track scopeOption) {\r\n          <mat-option [value]=\"scopeOption.value\">\r\n            {{ scopeOption.name }}\r\n          </mat-option>\r\n          }\r\n          <mat-option [value]=\"dropdownInsertValue\">Other...</mat-option>\r\n        </mat-select>\r\n        <button mat-icon-button matTextSuffix [tippy]=\"lockScope ? 'Unlock' : 'Lock'\">\r\n          <mat-icon appClickStopPropagation (click)=\"unlockScope()\">\r\n            {{ lockScope ? 'lock' : 'lock_open' }}\r\n          </mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n      <app-field-hint>\r\n        The scope should almost never be changed -\r\n        <a appClickStopPropagation href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\">see help</a>\r\n      </app-field-hint>\r\n    </div>\r\n    @if (contentInfo()) {\r\n    <div>\r\n      <ul class=\"eav-content-info__list eav-content-info__base\">\r\n        <p class=\"eav-content-info__title\">Content Types</p>\r\n        @for (contentType of contentInfo().ContentTypes; track contentType) {\r\n        <li class=\"eav-content-info__item\">\r\n          <div class=\"eav-option-box\">\r\n            <mat-checkbox [(ngModel)]=\"contentType._export\">\r\n              <span class=\"eav-option-box__text\">{{ contentType.Name }} ({{ contentType.Id }})</span>\r\n            </mat-checkbox>\r\n          </div>\r\n          @if (contentType.Templates.length > 0) {\r\n          <ul class=\"eav-content-info__list\">\r\n            <p class=\"eav-content-info__subtitle\">Templates</p>\r\n            @for (template of contentType.Templates; track template) {\r\n            <li class=\"eav-content-info__item\">\r\n              <div class=\"eav-option-box\">\r\n                <mat-checkbox [(ngModel)]=\"template._export\">\r\n                  <span class=\"eav-option-box__text\">{{ template.Name }} ({{ template.Id }})</span>\r\n                </mat-checkbox>\r\n              </div>\r\n            </li>\r\n            }\r\n          </ul>\r\n          }\r\n          @if (contentType.Entities.length > 0) {\r\n          <ul class=\"eav-content-info__list\">\r\n            <p class=\"eav-content-info__subtitle\">Entities</p>\r\n            @for (entity of contentType.Entities; track entity) {\r\n            <li class=\"eav-content-info__item\">\r\n              <div class=\"eav-option-box\">\r\n                <mat-checkbox [(ngModel)]=\"entity._export\">\r\n                  <span class=\"eav-option-box__text\">{{ entity.Title }} ({{ entity.Id }})</span>\r\n                </mat-checkbox>\r\n              </div>\r\n            </li>\r\n            }\r\n          </ul>\r\n          }\r\n        </li>\r\n        }\r\n      </ul>\r\n      <ul class=\"eav-content-info__list eav-content-info__base\">\r\n        <p class=\"eav-content-info__title\">Templates Without Content Types</p>\r\n        @for (template of contentInfo().TemplatesWithoutContentTypes; track template) {\r\n        <li class=\"eav-content-info__item\">\r\n          <div class=\"eav-option-box\">\r\n            <mat-checkbox [(ngModel)]=\"template._export\">\r\n              <span class=\"eav-option-box__text\">{{ template.Name }} ({{ template.Id }})</span>\r\n            </mat-checkbox>\r\n          </div>\r\n        </li>\r\n        }\r\n      </ul>\r\n    </div>\r\n    }\r\n  </div>\r\n\r\n  <mat-dialog-actions class=\"eav-dialog-actions\" style=\"height: 73px;\">\r\n    <button mat-button class=\"eav-button__with-icon\" tippy=\"Export selected Parts\"\r\n      [disabled]=\"loading() || isExporting()\" (click)=\"exportAppParts()\">\r\n      <mat-icon class=\"eav-icon\">cloud_download</mat-icon>\r\n      <span>Export Parts</span>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { Component, HostBinding, OnInit, signal } from '@angular/core';\r\nimport {  MatDialogActions, MatDialogModule } from '@angular/material/dialog';\r\nimport { dropdownInsertValue } from '../../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants, ScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { ContentInfo, ContentInfoEntity, ContentInfoTemplate } from '../../models/content-info.model';\r\nimport { ContentTypesService } from '../../services/content-types.service';\r\nimport { ExportAppPartsService } from '../../services/export-app-parts.service';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FieldHintComponent } from '../../../shared/components/field-hint/field-hint.component';\r\nimport { ClickStopPropagationDirective } from '../../../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { transient } from '../../../core';\r\n\r\n@Component({\r\n  selector: 'app-export-app-parts',\r\n  templateUrl: './export-app-parts.component.html',\r\n  styleUrls: ['./export-app-parts.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    MatOptionModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatCheckboxModule,\r\n    MatDialogActions,\r\n    FieldHintComponent,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n    MatDialogModule,\r\n  ],\r\n})\r\nexport class ExportAppPartsComponent implements OnInit{\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  #exportAppPartsSvc = transient(ExportAppPartsService);\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n\r\n  exportScope = eavConstants.scopes.default.value;\r\n  lockScope = true;\r\n  dropdownInsertValue = dropdownInsertValue;\r\n\r\n  loading = signal(false);\r\n  isExporting = signal(false);\r\n  scopeOptions = signal<ScopeOption[]>([]);\r\n  contentInfo = signal<ContentInfo>(undefined);\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.#fetchScopes();\r\n    this.#fetchContentInfo();\r\n  }\r\n\r\n  exportAppParts() {\r\n    this.isExporting.set(true);\r\n    // spm TODO: maybe optimize these functions to not loop content types and entities multiple times for no reason\r\n    // spm TODO: figure out how to capture window loading to disable export button\r\n    const contentTypeIds = this.#selectedContentTypes().map(contentType => contentType.Id);\r\n    const templateIds = this.#selectedTemplates().map(template => template.Id);\r\n    let entityIds = this.#selectedEntities().map(entity => entity.Id);\r\n    entityIds = entityIds.concat(templateIds);\r\n\r\n    this.#exportAppPartsSvc.exportParts(contentTypeIds, entityIds, templateIds);\r\n    this.isExporting.set(false);\r\n\r\n  }\r\n\r\n  changeScope(newScope: string) {\r\n    if (newScope === dropdownInsertValue) {\r\n      newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n      if (!this.scopeOptions().find(option => option.value === newScope)) {\r\n        const newScopeOption: ScopeOption = {\r\n          name: newScope,\r\n          value: newScope,\r\n        };\r\n        const scopeOptionsTemp = this.scopeOptions();\r\n        scopeOptionsTemp.unshift(newScopeOption);\r\n        this.scopeOptions.set(scopeOptionsTemp);\r\n      }\r\n    }\r\n    this.exportScope = newScope;\r\n    this.#fetchContentInfo();\r\n  }\r\n\r\n  unlockScope() {\r\n    this.lockScope = !this.lockScope;\r\n    if (this.lockScope) {\r\n      this.exportScope = eavConstants.scopes.default.value;\r\n      this.#fetchContentInfo();\r\n    }\r\n  }\r\n\r\n  #fetchScopes() {\r\n    this.loading.set(true);\r\n    this.#contentTypesSvc.getScopes().subscribe(scopes => {\r\n      this.scopeOptions.set(scopes);\r\n      this.loading.set(false);\r\n\r\n    });\r\n  }\r\n\r\n  #fetchContentInfo() {\r\n    this.loading.set(true);\r\n    this.#exportAppPartsSvc.getContentInfo(this.exportScope).subscribe(contentInfo => {\r\n      this.contentInfo.set(contentInfo);\r\n      this.loading.set(false);\r\n    });\r\n  }\r\n\r\n  #selectedContentTypes() {\r\n    return this.contentInfo().ContentTypes.filter(contentType => contentType._export);\r\n  }\r\n\r\n  #selectedEntities() {\r\n    let entities: ContentInfoEntity[] = [];\r\n    for (const contentType of this.contentInfo().ContentTypes) {\r\n      entities = entities.concat(contentType.Entities.filter(entity => entity._export));\r\n    }\r\n    return entities;\r\n  }\r\n\r\n  #selectedTemplates() {\r\n    let templates: ContentInfoTemplate[] = [];\r\n    // The ones with...\r\n    for (const contentType of this.contentInfo().ContentTypes)\r\n      templates = templates.concat(contentType.Templates.filter(template => template._export));\r\n    // ...and without content types\r\n    templates = templates.concat(this.contentInfo().TemplatesWithoutContentTypes.filter(template => template._export));\r\n    return templates;\r\n  }\r\n}\r\n","<div class=\"outer-container-app\" appDragAndDrop [allowedFileTypes]=\"importData.allowedFileTypes\"\r\n  (filesDropped)=\"filesDropped($event)\">\r\n  <div>\r\n    <h3 [innerHtml]=\"importData.title | safeHtml\"></h3>\r\n  </div>\r\n  <div>\r\n    @if (uploading()) {\r\n    <mat-spinner mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n    }\r\n    <p>To import Content-Types, Queries, Views or Data, use the respective tabs.</p>\r\n    <p>Create an xml containing parts of the app, e.g. content and templates. Import parts from such an xml into this\r\n      app.\r\n    </p>\r\n    <p [innerHtml]=\"importData.description | safeHtml\"></p>\r\n    <div>\r\n      <button class=\"select-btn\" mat-raised-button tippy=\"Open file browser\" [disabled]=\"uploading()\"\r\n        (click)=\"fileInput.click()\">\r\n        @if (!files().length) {\r\n        <div>Select or drop file</div>\r\n        }\r\n        @for (file of files(); track file) {\r\n        <div>{{ file.name }}</div>\r\n        }\r\n      </button>\r\n      <input #fileInput type=\"file\" multiple (change)=\"filesChanged($event)\" class=\"hide\" />\r\n    </div>\r\n    @if (result()) {\r\n    <div class=\"eav-result-container\">\r\n      @if (result().Success) {\r\n      <div class=\"sxc-message sxc-message-info\">\r\n        Upload succeeded. See the messages below for more information.\r\n      </div>\r\n      }\r\n      @if (!result().Success) {\r\n      <div class=\"sxc-message sxc-message-error\">\r\n        Upload failed. See the messages below for more information.\r\n      </div>\r\n      }\r\n      @for (message of result().Messages; track message) {\r\n      <div class=\"sxc-message\" [ngClass]=\"{\r\n                'sxc-message-warning': message.MessageType === FileUploadMessageTypes.Warning,\r\n                'sxc-message-success': message.MessageType === FileUploadMessageTypes.Success,\r\n                'sxc-message-error': message.MessageType === FileUploadMessageTypes.Error\r\n                }\">\r\n        {{ message.Text }}\r\n      </div>\r\n      }\r\n    </div>\r\n    }\r\n  </div>\r\n  @if (!result()?.Success) {\r\n  <mat-dialog-actions class=\"eav-dialog-actions\" style=\"height: 73px;\">\r\n    <button mat-button class=\"eav-button__with-icon\" tippy=\"Import File\"\r\n      [disabled]=\"!files().length || uploading() || !!result()\" (click)=\"upload()\">\r\n      <mat-icon class=\"eav-icon\">cloud_upload</mat-icon>\r\n      <span>Upload</span>\r\n    </button>\r\n  </mat-dialog-actions>\r\n  }\r\n</div>\r\n","import { ChangeDetectorRef, Component, effect, ElementRef, HostBinding, OnDestroy, OnInit, signal, ViewChild } from '@angular/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FileUploadDialogComponent, FileUploadDialogData, FileUploadMessageTypes, FileUploadResult, UploadTypes } from '../../../shared/components/file-upload-dialog';\r\nimport { ImportAppPartsService } from '../../services/import-app-parts.service';\r\nimport { transient } from '../../../core';\r\nimport { BehaviorSubject, catchError, combineLatest, filter, fromEvent, map, Observable, of, switchMap, take, tap } from 'rxjs';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { InstallPackage, InstallSettings, CrossWindowMessage, SpecsForInstaller } from '../../../shared/models/installer-models';\r\nimport { AppInstallSettingsService } from '../../../shared/services/getting-started.service';\r\nimport { InstallerService } from '../../../shared/services/installer.service';\r\nimport { BaseComponent } from '../../../shared/components/base.component';\r\nimport { Context } from '../../../shared/services/context';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { DragAndDropDirective } from '../../../shared/directives/drag-and-drop.directive';\r\nimport { SafeHtmlPipe } from '../../../shared/pipes/safe-html.pipe';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-import-app-parts',\r\n  templateUrl: './import-app-parts.component.html',\r\n  styleUrls: ['./import-app-parts.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FileUploadDialogComponent,\r\n    NgClass,\r\n    MatDialogModule,\r\n    MatProgressSpinnerModule,\r\n    SafeHtmlPipe,\r\n    DragAndDropDirective,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n  ],\r\n})\r\nexport class ImportAppPartsComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  // Code are copied from file-upload-dialog\r\n\r\n  private importAppPartsService = transient(ImportAppPartsService);\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n  @ViewChild('installerWindow') installerWindow: ElementRef;\r\n\r\n  uploadType = UploadTypes.AppPart;\r\n\r\n  uploading = signal(false);\r\n  // showAppCatalogTemp = signal(false);\r\n  result = signal<FileUploadResult>(undefined);\r\n  files = signal<File[]>([]);\r\n\r\n  FileUploadMessageTypes = FileUploadMessageTypes;\r\n\r\n  UploadTypes = UploadTypes;\r\n  showAppCatalog$ = new BehaviorSubject<boolean>(false);\r\n\r\n  showProgress: boolean = false;\r\n  currentPackage: InstallPackage;\r\n  remoteInstallerUrl = '';\r\n  ready = false;\r\n  settings: InstallSettings;\r\n\r\n  importData: FileUploadDialogData = {\r\n    title: 'Import Content and Templates into this App',\r\n    description: `\r\n    Import content and templates from a content export (zip) or partial export (xml) to this app.\r\n    The entire content of the selected file will be imported.\r\n    If you want to import an entire app, go to the <em>Apps Management</em>.\r\n    For further help visit <a href=\"https://2sxc.org/en/help?tag=import\" target=\"_blank\">2sxc Help</a>.\r\n    `,\r\n    allowedFileTypes: 'xml',\r\n    upload$: (files: File[]) => this.importAppPartsService.importAppParts(files[0]),\r\n  };\r\n\r\n  private installerService = transient(InstallerService);\r\n  private installSettingsService = transient(AppInstallSettingsService);\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private sanitizer: DomSanitizer,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n\r\n    // TODO:: @2dg Check with Daniel\r\n     // TODO:: Old Code\r\n    //  this.subscriptions.add(\r\n    //   this.files$.subscribe(() => {\r\n    //     console.log('files changed');\r\n    //     if (this.result() !== undefined)\r\n    //       this.result.set(undefined);\r\n    //   }),\r\n    // );\r\n    effect(() => {\r\n      this.files();\r\n      if (this.result() != undefined) {\r\n        this.result.set(undefined);\r\n      }\r\n    });\r\n\r\n    // copied from 2sxc-ui app/installer\r\n    this.subscriptions.add(\r\n      this.installSettingsService.settings$.subscribe(settings => {\r\n        this.settings = settings;\r\n        this.remoteInstallerUrl = <string>this.sanitizer.bypassSecurityTrustResourceUrl(settings.remoteUrl);\r\n        this.ready = true;\r\n      })\r\n    );\r\n  }\r\n\r\n  private alreadyProcessing = false;\r\n  // copied from 2sxc-ui app/installer\r\n  // Initial Observable to monitor messages\r\n  private messages$ = fromEvent(window, 'message').pipe(\r\n    // Ensure only one installation is processed.\r\n    filter(() => !this.alreadyProcessing),\r\n    filter((evt: MessageEvent) => evt.origin === \"https://2sxc.org\"),\r\n    // Get data from event.\r\n    map((evt: MessageEvent) => {\r\n      try {\r\n        return JSON.parse(evt.data) as CrossWindowMessage;\r\n      } catch (e) {\r\n        console.error('error procesing message. Message was ' + evt.data, e);\r\n        return void 0;\r\n      }\r\n    }),\r\n    // Check if data is valid and the moduleID matches\r\n    filter(data => data && Number(data.moduleId) === this.context.moduleId),\r\n  );\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.importData.files != null) {\r\n      this.filesDropped(this.importData.files);\r\n    }\r\n    // copied from 2sxc-ui\r\n    this.installSettingsService.loadGettingStarted(false);//this.isContentApp -> from @Input on 2sxc-ui\r\n\r\n    // copied from 2sxc-ui app/installer\r\n    this.subscriptions.add(this.messages$.pipe(\r\n      // Verify it's for this action\r\n      filter(data => data.action === 'specs'),\r\n      // Send message to iframe\r\n      tap(() => {\r\n        const winFrame = this.installerWindow.nativeElement as HTMLIFrameElement;\r\n        const specsMsg: SpecsForInstaller = {\r\n          action: 'specs',\r\n          data: {\r\n            //currently not used\r\n            installedApps: this.settings.installedApps,//.map(app => ((app as InstalledApp).guid)),\r\n            //currently used to forbid already installed apps\r\n            rules: this.settings.installedApps.map(app => ({ target: 'guid', appGuid: app.guid, mode: 'f', url: '' })),//this.settings.rules,\r\n          },\r\n        };\r\n        const specsJson = JSON.stringify(specsMsg);\r\n        winFrame.contentWindow.postMessage(specsJson, '*');\r\n        console.log('debug: just sent specs message:' + specsJson, specsMsg, winFrame);\r\n      }),\r\n    ).subscribe());\r\n\r\n    // copied from 2sxc-ui app/installer\r\n    // Subscription to listen to 'install' messages\r\n    this.subscriptions.add(this.messages$.pipe(\r\n      filter(data => data.action === 'install'),\r\n      // Get packages from data.\r\n      map(data => Object.values(data.packages)),\r\n      // Show confirm dialog.\r\n      filter(packages => {\r\n        const packagesDisplayNames = packages\r\n          .reduce((t, c) => `${t} - ${c.displayName}\\n`, '');\r\n\r\n        const msg = `Do you want to install these packages?\r\n\r\n${packagesDisplayNames}\r\nThis takes about 10 seconds per package. Don't reload the page while it's installing.`;\r\n        return confirm(msg);\r\n      }),\r\n      // Install the packages one at a time\r\n      switchMap(packages => {\r\n        this.alreadyProcessing = true;\r\n        this.showProgress = true;\r\n        this.changeDetectorRef.detectChanges(); //without this spinner is not shown\r\n        return this.installerService.installPackages(packages, p => this.currentPackage = p);\r\n      }),\r\n      tap(() => {\r\n        this.showProgress = false;\r\n        this.changeDetectorRef.detectChanges(); //without this spinner is not removed (though window reload will remove it anyway) so maybe unnecessary\r\n        alert('Installation complete 👍');\r\n        window.top.location.reload();\r\n      }),\r\n      catchError(error => {\r\n        console.error('Error: ', error);\r\n        this.showProgress = false;\r\n        this.alreadyProcessing = false;\r\n        this.changeDetectorRef.detectChanges(); //without this spinner is not removed\r\n        const errorMsg = `An error occurred: Package ${this.currentPackage.displayName}\r\n\r\n${error.error?.Message ?? error.error?.message ?? ''}\r\n\r\n${error.message}\r\n\r\nPlease try again later or check how to manually install content-templates: https://azing.org/2sxc/r/0O4OymoA`;\r\n        alert(errorMsg);\r\n        return of(error);\r\n      }),\r\n    ).subscribe());\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n\r\n  filesDropped(files: File[]): void {\r\n    this.setFiles(files);\r\n    this.upload();\r\n  }\r\n\r\n  filesChanged(event: Event): void {\r\n    const fileList = (event.target as HTMLInputElement).files;\r\n    const files = Array.from(fileList);\r\n    this.setFiles(files);\r\n  }\r\n\r\n  upload(): void {\r\n    this.uploading.set(true);\r\n    this.subscriptions.add(\r\n      this.importData.upload$(this.files()).pipe(take(1)).subscribe({\r\n        next: (result) => {\r\n          this.uploading.set(false);\r\n          this.result.set(result);\r\n        },\r\n        error: () => {\r\n\r\n          this.uploading.set(false);\r\n          this.result.set(undefined);\r\n          this.snackBar.open('Upload failed. Please check console for more information', undefined, { duration: 3000 });\r\n        },\r\n      }),\r\n    );\r\n  }\r\n\r\n  private setFiles(files: File[]): void {\r\n    if (!this.importData.multiple) {\r\n      files = files.slice(0, 1);\r\n    }\r\n    this.files.set(files);\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"outer-container-app\">\r\n  <!-- Title -->\r\n  <div>\r\n    <div class=\"title-slider\">\r\n      <h3>App-State Versioning</h3>\r\n      <mat-slide-toggle class=\"eav-card-header-toggle\" [(ngModel)]=\"appStateAdvanced\">{{ appStateAdvanced ? \"advanced\"\r\n        : \"basic\" }}</mat-slide-toggle>\r\n    </div>\r\n  </div>\r\n  <!-- Content -->\r\n  <div>\r\n    <p>\r\n      You can save / restore the app with data and configuration in <code>.data/app.xml</code>.\r\n      This file can then also be versioned using git.\r\n    </p>\r\n    @if (appStateAdvanced) {\r\n    <p>\r\n      <br>\r\n      In Advanced mode you can also sync all the site files used by this app.\r\n      They will be placed in a folder inside <code>App_Data</code> and allow sync/restore with git or another server.\r\n    </p>\r\n    }\r\n    @if (appStateAdvanced) {\r\n    <app-feature-text-info [featureNameId]=\"'AppSyncWithSiteFiles'\"></app-feature-text-info>\r\n    }\r\n  </div>\r\n  <!-- Button -->\r\n  @if (!appStateAdvanced) {\r\n  <mat-dialog-actions class=\"eav-dialog-actions\" style=\"height: 73px;\">\r\n    <div class=\"eav-dialog-actions-div\">\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"exportAppXml(false)\">\r\n        <mat-icon class=\"eav-icon\">more_time</mat-icon>\r\n        <span>Save state</span>\r\n      </button>\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"resetApp(false)\">\r\n        <mat-icon class=\"eav-icon\">restore</mat-icon>\r\n        <span>Restore state</span>\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n  }\r\n  @if (appStateAdvanced) {\r\n  <mat-dialog-actions class=\"eav-dialog-actions\" style=\"height: 73px;\">\r\n    <div class=\"eav-dialog-actions-div\">\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"exportAppXml(true)\">\r\n        <mat-icon class=\"eav-icon\">more_time</mat-icon>\r\n        <span>Save with Assets</span>\r\n      </button>\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"resetApp(true)\">\r\n        <mat-icon class=\"eav-icon\">restore</mat-icon>\r\n        <span>Restore with Assets</span>\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n  }\r\n</div>\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { DialogSettings } from '../../../shared/models/dialog-settings.model';\r\nimport { ExportAppService } from '../../services/export-app.service';\r\nimport { ImportAppPartsService } from '../../services/import-app-parts.service';\r\nimport { FeatureTextInfoComponent } from '../../../features/feature-text-info/feature-text-info.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { transient } from '../../../core';\r\nimport { MatDialogActions } from '@angular/material/dialog';\r\nimport { DialogConfigAppService } from '../../services/dialog-config-app.service';\r\n\r\n@Component({\r\n  selector: 'app-app-state',\r\n  templateUrl: './app-state.component.html',\r\n  styleUrls: ['./app-state.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSlideToggleModule,\r\n    FormsModule,\r\n    FeatureTextInfoComponent,\r\n    RouterOutlet,\r\n    MatDialogActions,\r\n  ],\r\n})\r\nexport class AppStateComponent implements OnInit, OnDestroy {\r\n  dialogSettings: DialogSettings;\r\n\r\n  #importAppPartsSvc = transient(ImportAppPartsService);\r\n  #exportAppSvc = transient(ExportAppService);\r\n\r\n  public appStateAdvanced = false;\r\n\r\n  #dialogConfigSvc = transient(DialogConfigAppService);\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.#dialogConfigSvc.getCurrent$().subscribe((dialogSettings) => {\r\n      this.dialogSettings = dialogSettings;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.snackBar.dismiss();\r\n  }\r\n\r\n  exportAppXml(withFiles: boolean) {\r\n    this.snackBar.open('Exporting...');\r\n    this.#exportAppSvc.exportForVersionControl({ includeContentGroups: true, resetAppGuid: false, withFiles }).subscribe({\r\n      next: result => {\r\n        this.snackBar.open('Export completed into the \\'App_Data\\' folder.', null, { duration: 3000 });\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Export failed. Please check console for more information', null, { duration: 3000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  resetApp(withFiles: boolean) {\r\n    if (!confirm('Are you sure? All changes since last xml export will be lost')) return;\r\n    this.snackBar.open('Resetting...');\r\n    this.#importAppPartsSvc.resetApp(withFiles).subscribe({\r\n      next: result => {\r\n        this.snackBar.open(\r\n          'Reset worked! Since this is a complex operation, please restart the Website to ensure all caches are correct',\r\n          null,\r\n          { duration: 30000 },\r\n        );\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Reset failed. Please check console for more information', null, { duration: 3000 });\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { GoToDevRest } from '../dev-rest';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { GoToPermissions } from '../permissions/go-to-permissions';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { appAdministrationDialog } from './app-admin-main/app-admin-main.dialog-config';\r\nimport { analyzeSettingsDialog } from './sub-dialogs/analyze-settings/analyze-settings-dialog.config';\r\nimport { settingsItemDetailsDialog } from './sub-dialogs/analyze-settings/settings-item-details/settings-item-details.config';\r\nimport { editContentTypeDialog } from './sub-dialogs/edit-content-type/edit-content-type-dialog.config';\r\nimport { importContentTypeDialog } from './sub-dialogs/import-content-type/import-content-type-dialog.config';\r\nimport { importQueryDialog } from './sub-dialogs/import-query/import-query-dialog.config';\r\nimport { importViewDialog } from './sub-dialogs/import-view/import-view-dialog.config';\r\nimport { languagePermissionsDialog } from './sub-dialogs/language-permissions/language-permissions-dialog.config';\r\nimport { viewsUsageDialog } from './sub-dialogs/views-usage/views-usage-dialog.config';\r\nimport { GoToCopilot } from './copilot/go-to-copilot';\r\nimport { CopilotSpecs } from './copilot/copilot-specs';\r\nimport { EditRoutes, EditRoutesNoHistory } from '../edit/edit.routing';\r\nimport { ExportAppComponent } from './app-menu/export-app/export-app.component';\r\nimport { ExportAppPartsComponent } from './app-menu/export-app-parts/export-app-parts.component';\r\nimport { ImportAppPartsComponent } from './app-menu/import-app-parts/import-app-parts.component';\r\nimport { AppStateComponent } from './app-menu/app-state/app-state.component';\r\n\r\nexport const appAdministrationRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    // experimental 2dm\r\n    // ...DialogEntryComponent.routeFor(appAdministrationDialog),\r\n    component: DialogEntryComponent,\r\n    data: { dialog: appAdministrationDialog },\r\n    children: [\r\n      {\r\n        path: '', redirectTo: 'home', pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'home',\r\n        loadComponent: () => import('./getting-started/getting-started.component').then(mod => mod.GettingStartedComponent),\r\n        data: { title: 'App Home', breadcrumb: 'Info', }\r\n      },\r\n      {\r\n        path: 'data/:scope',\r\n        loadComponent: () => import('./data/data.component').then(mod => mod.DataComponent),\r\n        children: [\r\n          {\r\n            path: 'import',\r\n            // experimental 2dm\r\n            // ...DialogEntryComponent.routeFor(importContentTypeDialog, { title: 'Import Content Type' }),\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importContentTypeDialog, title: 'Import Content Type' },\r\n          },\r\n          {\r\n            path: 'items/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-items/content-items.routing').then(m => m.contentItemsRoutes)\r\n          },\r\n          ...EditRoutes,\r\n          {\r\n            path: 'add',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: editContentTypeDialog, title: 'Add Content Type' },\r\n          },\r\n          {\r\n            path: ':contentTypeStaticName/edit',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: editContentTypeDialog, title: 'Edit Content Type' },\r\n          },\r\n          ...GoToMetadata.getRoutes(),\r\n          GoToDevRest.route,\r\n          {\r\n            path: 'fields/:contentTypeStaticName',\r\n            // May change how things are injected, so be careful when evaluating\r\n            loadChildren: () => import('../content-type-fields/content-type-fields.routing').then(m => m.contentTypeFieldsRoutes),\r\n            data: { title: 'Content Type Fields' },\r\n          },\r\n          {\r\n            path: 'export/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-export/content-export.routing').then(m => m.ContentExportRoutes),\r\n            data: { title: 'Export Items' },\r\n          },\r\n          {\r\n            path: ':contentTypeStaticName/import',\r\n            loadChildren: () => import('../content-import/content-import.routing').then(m => m.contentImportRoutes),\r\n            data: { title: 'Import Items' },\r\n          },\r\n          GoToPermissions.route,\r\n        ],\r\n        data: { title: 'App Data', breadcrumb: \"Data\" },\r\n      },\r\n      {\r\n        path: `data-${GoToCopilot.route}`,\r\n        loadComponent: () => import('./copilot/page/copilot-page.component').then(mod => mod.CopilotPageComponent),\r\n        data: CopilotSpecs.data,\r\n      },\r\n      {\r\n        path: GoToDevRest.routeData,\r\n        loadComponent: () => import('./data-rest-api/data-rest-api.component').then(mod => mod.DataRestApiComponent),\r\n        data: {\r\n          title: 'Rest-Api Data',\r\n          breadcrumb: 'Rest-Api Data'\r\n        },\r\n        children: [\r\n          {\r\n            path: `:${GoToDevRest.paramTypeName}`,\r\n            loadComponent: () => import('../dev-rest/data/data.component').then(mod => mod.DevRestDataComponent),\r\n            data: {\r\n              breadcrumb: 'Rest-Api Data'\r\n            },\r\n            children: [\r\n              GoToPermissions.route,\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: 'queries',\r\n        loadComponent: () => import('./queries/queries.component').then(mod => mod.QueriesComponent),\r\n        children: [\r\n          {\r\n            path: 'import',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importQueryDialog, title: 'Import Query' }\r\n          },\r\n          ...EditRoutesNoHistory,\r\n          ...GoToMetadata.getRoutes(),\r\n          {\r\n            ...GoToPermissions.route,\r\n            data: { title: 'Query Permissions' }\r\n          },\r\n          GoToDevRest.route,\r\n        ],\r\n        data: { title: 'App Queries', breadcrumb: \"Queries\" },\r\n      },\r\n      {\r\n        path: GoToDevRest.routeQuery,\r\n        loadComponent: () => import('./queries-rest-api/queries-rest-api.component').then(mod => mod.QueriesRestApiComponent),\r\n        data: { title: 'Rest-Api Queries', breadcrumb: 'Rest-Api Queries' },\r\n        children: [\r\n          {\r\n            path: `:${GoToDevRest.paramQuery}`,\r\n            loadComponent: () => import('../dev-rest/query/query.component').then(mod => mod.DevRestQueryComponent),\r\n            data: { breadcrumb: 'Rest-Api Queries', },\r\n            children: [\r\n              GoToPermissions.route,\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: 'views',\r\n        loadComponent: () => import('./views/views.component').then(mod => mod.ViewsComponent),\r\n        children: [\r\n          {\r\n            path: 'import',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importViewDialog, title: 'Import View' },\r\n          },\r\n          {\r\n            path: 'usage/:guid',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: viewsUsageDialog }\r\n          },\r\n          ...EditRoutes,\r\n          { ...GoToPermissions.route, data: { title: 'View Permissions' } },\r\n          ...GoToMetadata.getRoutes(),\r\n        ],\r\n        data: { title: 'App Views', breadcrumb: \"Views\" },\r\n      },\r\n      {\r\n        path: `views-${GoToCopilot.route}`,\r\n        loadComponent: () => import('./copilot/page/copilot-page.component').then(mod => mod.CopilotPageComponent),\r\n        data: CopilotSpecs.views,\r\n      },\r\n      {\r\n        path: 'web-api',\r\n        loadComponent: () => import('./web-api/web-api.component').then(mod => mod.WebApiComponent),\r\n        data: { title: 'App WebApi', breadcrumb: \"WebApi\" },\r\n        children: [\r\n          GoToDevRest.route,\r\n        ],\r\n      },\r\n      {\r\n        path: `web-api-${GoToCopilot.route}`,\r\n        loadComponent: () => import('./copilot/page/copilot-page.component').then(mod => mod.CopilotPageComponent),\r\n        data: CopilotSpecs.webApi,\r\n      },\r\n      {\r\n        path: GoToDevRest.routeWebApi,\r\n        loadComponent: () => import('./web-api-rest-api/web-api-rest-api.component').then(mod => mod.WebApiRestApiComponent),\r\n        data: {\r\n          title: 'Rest-Api Web Api',\r\n          breadcrumb: 'Rest-Api Web Api'\r\n        },\r\n        children: [\r\n          {\r\n            path: `:${GoToDevRest.paramApiPath}`,\r\n            loadComponent: () => import('../dev-rest/api/api.component').then(mod => mod.DevRestApiComponent),\r\n            data: {\r\n              breadcrumb: 'Rest-Api Web Api'\r\n            },\r\n            children: [\r\n              GoToPermissions.route,\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: 'app',\r\n        loadComponent: () => import('./app-configuration/app-configuration.component').then(mod => mod.AppConfigurationComponent),\r\n        data: { title: 'Manage App', breadcrumb: \"Manage App\" },\r\n        children: [\r\n          ...GoToMetadata.getRoutes(),\r\n          // Edit App Properties / Settings / Resources\r\n          ...EditRoutes,\r\n          {\r\n            path: 'fields/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-type-fields/content-type-fields.routing').then(m => m.contentTypeFieldsRoutes),\r\n            data: { title: 'Edit Fields of App Settings & Resources' },\r\n          },\r\n          {\r\n            path: 'language-permissions',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: languagePermissionsDialog, title: 'Language Permissions' },\r\n            children: [\r\n              { ...GoToPermissions.route, data: { title: 'Language Permissions' } },\r\n            ],\r\n          },\r\n          { ...GoToPermissions.route, data: { title: 'App Permissions' } },\r\n          {\r\n            path: 'analyze/:part',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: analyzeSettingsDialog, title: 'Analyze Settings / Resources' }, children: [\r\n              {\r\n                path: 'details/:view/:settingsItemKey',\r\n                component: DialogEntryComponent,\r\n                data: { dialog: settingsItemDetailsDialog, title: 'Settings / Resources Item Details' },\r\n              },\r\n            ],\r\n          },\r\n          // New Export etc.\r\n          // {\r\n          //   path: 'export-app',\r\n          //   component: ExportAppComponent,\r\n          //   data: { breadcrumb: 'Export this entire App' },\r\n          // },\r\n          // {\r\n          //   path: 'export-parts',\r\n          //   component: DialogEntryComponent,\r\n          //   data: { breadcrumb: 'Export parts of this App' },\r\n          // },\r\n          // {\r\n          //   path: 'import-parts',\r\n          //   component: DialogEntryComponent,\r\n          //   data: { breadcrumb: 'Import parts of this App' },\r\n          // },\r\n          // {\r\n          //   path: 'app-state',\r\n          //   component: DialogEntryComponent,\r\n          //   data: { breadcrumb: 'App-State Versioning' },\r\n          // },\r\n        ],\r\n      },\r\n      // New Export etc.\r\n      {\r\n        path: 'export-app',\r\n        component: ExportAppComponent,\r\n        data: { breadcrumb: 'Export this entire App' },\r\n      },\r\n      {\r\n        path: 'export-parts',\r\n        component: ExportAppPartsComponent,\r\n        data: { breadcrumb: 'Export parts of this App' },\r\n      },\r\n      {\r\n        path: 'import-parts',\r\n        component: ImportAppPartsComponent,\r\n        data: { breadcrumb: 'Import parts of this App' },\r\n      },\r\n      {\r\n        path: 'app-state',\r\n        component: AppStateComponent,\r\n        data: { breadcrumb: 'App-State Versioning' },\r\n      },\r\n    ]\r\n  },\r\n];\r\n","export interface CopilotSpec {\r\n  /** Title in the menu */\r\n  title: string;\r\n  /** Title in the breadcrumb */\r\n  breadcrumb: string;\r\n\r\n  heading: string,\r\n  intro: string,\r\n  teaser: string;\r\n  outputType: string;\r\n}\r\n\r\nconst intro = `The Copilot provides tools to help you create code.\r\n    It is still in new, so please use it carefully and report any issues.`;\r\n\r\nexport const CopilotSpecs: { [key: string ]: CopilotSpec } = {\r\n  'data': {\r\n    title: 'Data Copilot',\r\n    breadcrumb: '2sxc Data Copilot',\r\n\r\n    heading: '2sxc Data Copilot',\r\n    intro,\r\n    teaser: 'Autogenerate content types',\r\n\r\n    outputType: 'DataModel',\r\n  },\r\n  'views': {\r\n    title: 'Views Copilot',\r\n    breadcrumb: '2sxc View Copilot',\r\n\r\n    heading: '2sxc View Copilot',\r\n    intro,\r\n    teaser: 'Autogenerate Razor Views',\r\n\r\n    outputType: 'RazorView',\r\n  },\r\n  'webApi': {\r\n    title: 'WebApi Copilot',\r\n    breadcrumb: '2sxc WebApi Copilot',\r\n\r\n    heading: '2sxc WebApi Copilot',\r\n    intro,\r\n    teaser: 'Autogenerate WebApi Controllers',\r\n\r\n    outputType: 'WebApi',\r\n  }\r\n};\r\n","export class GoToCopilot {\r\n  static route = 'copilot';\r\n\r\n  static routeDefinition(part: string) {\r\n    return {\r\n      name: 'Copilot',\r\n      icon: 'support_agent',\r\n      svgIcon: false,\r\n      path: `${part}-${GoToCopilot.route}`\r\n    };\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\n// We should list all the \"full\" paths here, so it's easier to find when searching for API calls\r\nexport const webApiTypeRoot = 'admin/type/';\r\nconst webApiTypeGet = 'admin/type/get';\r\nconst webApiTypes = 'admin/type/list';\r\nconst webApiTypeScopes = 'admin/type/scopes';\r\nconst webApiTypeSave = 'admin/type/save';\r\nconst webApiTypeDelete = 'admin/type/delete';\r\nconst webApiTypeImport = 'admin/type/import';\r\nconst webApiTypeAddGhost = 'admin/type/addghost';\r\n\r\n@Injectable()\r\nexport class ContentTypesService extends HttpServiceBase {\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get<ContentType>(this.apiUrl(webApiTypeGet), {\r\n      params: { appId: this.appId, contentTypeId: staticName }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get<ContentType[]>(this.apiUrl(webApiTypes), {\r\n      params: { appId: this.appId, scope }\r\n    });\r\n  }\r\n\r\n  // TODO: remove this method after upgrade to V2\r\n  getScopes() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => {\r\n        // wip during upgrade:\r\n        const scopes = scopesData.old;\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getScopesV2() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => scopesData.scopes),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeSave), contentType, {\r\n      params: { appid: this.appId },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeDelete), {\r\n      params: { appid: this.appId, staticName: contentType.StaticName },\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeAddGhost), null, {\r\n      params: { appid: this.appId, sourceStaticName },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\n@Injectable()\r\nexport class ExportAppPartsService extends HttpServiceBase {\r\n\r\n  getContentInfo(scope: string) {\r\n    return this.http.get<ContentInfo>(this.apiUrl(webApiAppPartsRoot + 'Get'), {\r\n      params: { appid: this.appId, zoneId: this.zoneId, scope },\r\n    });\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.appId\r\n      + '&zoneId=' + this.zoneId\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { AppInfo } from '../models/app-info.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\n@Injectable()\r\nexport class ExportAppService extends HttpServiceBase {\r\n\r\n  getAppInfo() {\r\n    return this.http.get<AppInfo>(this.apiUrl(webApiAppRoot + 'Statistics'), {\r\n      params: { appid: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  /** Generate the export app path. It can be extended with additional parameters */\r\n  exportAppUrl() {\r\n    return `${this.apiUrl(`${webApiAppRoot}Export`)}?appId=${this.appId}&zoneId=${this.zoneId}`;\r\n  }\r\n\r\n  exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }) {\r\n    return this.http.get<boolean>(this.apiUrl(webApiAppRoot + 'SaveData'), {\r\n      params: {\r\n        appid: this.appId,\r\n        zoneId: this.zoneId,\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService extends HttpServiceBase {\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.appId,\r\n        zoneId: this.zoneId,\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService extends HttpServiceBase {\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.zoneId }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\n\r\nexport class GoToMetadata {\r\n\r\n  static getRoutes(): Route[] {\r\n    const defaultRoute: Route = {\r\n      path: 'metadata/:targetType/:keyType/:key',\r\n      loadChildren: () => import('./metadata.routing').then(m => m.metadataRoutes),\r\n      data: { title: 'Metadata' },\r\n    };\r\n    const routes: Route[] = [\r\n      defaultRoute,\r\n      {\r\n        ...defaultRoute,\r\n        path: `${defaultRoute.path}/title/:title`,\r\n      },\r\n      {\r\n        ...defaultRoute,\r\n        path: `${defaultRoute.path}/contentType/:contentTypeStaticName`,\r\n      },\r\n      {\r\n        ...defaultRoute,\r\n        path: `${defaultRoute.path}/title/:title/contentType/:contentTypeStaticName`,\r\n      }\r\n    ];\r\n    return routes;\r\n  }\r\n\r\n  static getUrl(targetType: number, keyType: MetadataKeyType, key: string, dialogTitle?: string, contentTypeStaticName?: string): string {\r\n    let url = `metadata/${targetType}/${keyType}/${key}`;\r\n    if (dialogTitle) {\r\n      url += `/title/${encodeURIComponent(dialogTitle)}`;\r\n    }\r\n    if (contentTypeStaticName) {\r\n      url += `/contentType/${contentTypeStaticName}`;\r\n    }\r\n    return url;\r\n  }\r\n\r\n  static getUrlApp(appId: number, dialogTitle?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.app.targetType,\r\n      eavConstants.metadata.app.keyType,\r\n      appId.toString(),\r\n      dialogTitle,\r\n    );\r\n  }\r\n\r\n  static getUrlAttribute(attributeId: number, dialogTitle?: string, contentTypeStaticName?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.attribute.targetType,\r\n      eavConstants.metadata.attribute.keyType,\r\n      attributeId.toString(),\r\n      dialogTitle,\r\n      contentTypeStaticName,\r\n    );\r\n  }\r\n\r\n  static getUrlContentType(staticName: string, dialogTitle?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.contentType.targetType,\r\n      eavConstants.metadata.contentType.keyType,\r\n      staticName,\r\n      dialogTitle,\r\n    );\r\n  }\r\n\r\n  static getUrlEntity(guid: string, dialogTitle?: string, contentTypeStaticName?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.entity.targetType,\r\n      eavConstants.metadata.entity.keyType,\r\n      guid,\r\n      dialogTitle,\r\n      contentTypeStaticName,\r\n    );\r\n  }\r\n\r\n}\r\n","export const dropdownInsertValue = 'DROPDOWN_INSERT_VALUE' as const;\r\n"],"x_google_ignoreList":[]}