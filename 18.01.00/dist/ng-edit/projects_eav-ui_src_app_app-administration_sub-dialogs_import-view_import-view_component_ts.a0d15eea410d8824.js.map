{"version":3,"file":"projects_eav-ui_src_app_app-administration_sub-dialogs_import-view_import-view_component_ts.a0d15eea410d8824.js","mappings":"kOAOA,MAAMA,EAAiB,cACjBC,EAAcD,EAAiB,MAC/BE,EAAmBF,EAAiB,SACpCG,EAAmBH,EAAiB,SACpCI,EAAsBJ,EAAiB,eACvCK,EAAkBL,EAAiB,QAGlC,IAAMM,EAAa,MAApB,MAAOA,UAAqBC,IAEhCC,SACE,OAAOC,KAAKC,KAAKC,IAAYF,KAAKG,OAAOX,GAAc,CACrDY,OAAQ,CAAEC,MAAOL,KAAKK,QAE1B,CAEAC,OAAOC,GACL,OAAOP,KAAKC,KAAKC,IAAaF,KAAKG,OAAOV,GAAmB,CAC3DW,OAAQ,CAAEC,MAAOL,KAAKK,MAAOG,GAAID,EAAGE,aAExC,CAEAC,OAAOC,GACL,MAAMC,EAAW,IAAIC,SACrBD,SAASE,OAAO,OAAQH,GACjBX,KAAKC,KAAKc,KAAuBf,KAAKG,OAAOT,GAAmBkB,EAAU,CAC/ER,OAAQ,CAAEC,MAAOL,KAAKK,MAAOW,OAAQhB,KAAKgB,SAE9C,CAEAC,OAAOV,GACL,MAAMW,EAAMlB,KAAKG,OAAOZ,EAAiB,QACrC,UAAYS,KAAKK,MACjB,WAAaE,EAEjBY,OAAOC,KAAKF,EAAK,SAAU,GAC7B,CAEAG,kBACE,OAAOrB,KAAKC,KAAKC,IAAkBF,KAAKG,OAAOR,GAAsB,CACnES,OAAQ,CAAEC,MAAOL,KAAKK,QAE1B,CAEAiB,SAASC,GACP,OAAOvB,KAAKC,KAAKC,IAAiBF,KAAKG,OAAOP,GAAkB,CAC9DQ,OAAQ,CAAEC,MAAOL,KAAKK,MAAOkB,SAEjC,CAACC,SAAAxB,KAAA,4DAxCUH,KAAY4B,GAAZ5B,EAAY,GAwCtB,GAxCsB2B,SAAAxB,KAAA,WAAA0B,EAAAC,IAAA,OAAZ9B,EAAY+B,QAAZ/B,EAAYgC,mBAAZhC,CAAa,oHCAnB,IAAMiC,EAAmB,MAA1B,MAAOA,EAMXC,YAC2BC,GAL3BhC,KAAAiC,WAAaC,KAAYC,KAEjBnC,KAAAoC,gBAAeC,KAAUxC,KAK/BmC,EAAWM,QAAU,cACrBN,EAAWO,cAAgB,0DAC3BP,EAAWQ,mBAAqB,OAChCR,EAAWS,UAAaC,GAAU1C,KAAKoC,aAAa1B,OAAOgC,EAAM,GACnE,CAAClB,SAAAxB,KAAA,mBAAAyB,iBAbUK,GAAmBa,MAOpBC,MAAe,EAAApB,SAAAxB,KAAA,UAAA6C,EAAAC,IAAA,MAPdhB,EAAmBiB,UAAA,sBAAAC,YAAA,EAAAC,SAAA,CAAAN,OAAAO,MAAA,EAAAC,KAAA,EAAAC,OAAA,mBAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GCfhCX,MAAA,mCAAwBA,MAAA,aAAAY,EAAAtB,2BDYpBuB,eAGS1B,CAAmB","names":["webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","HttpServiceBase","getAll","this","http","get","apiUrl","params","appId","delete","id","Id","toString","import","file","formData","FormData","append","post","zoneId","export","url","window","open","getPolymorphism","getUsage","guid","static","t","_angular_core__WEBPACK_IMPORTED_MODULE_1__","jDH","factory","Éµfac","ImportViewComponent","constructor","dialogData","uploadType","UploadTypes","View","viewsService","transient","title","description","allowedFileTypes","upload$","files","i0","MAT_DIALOG_DATA","_angular_core__WEBPACK_IMPORTED_MODULE_3__","VBU","selectors","standalone","features","decls","vars","consts","template","rf","ctx","FileUploadDialogComponent"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-view/import-view.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-view/import-view.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService extends HttpServiceBase {\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.apiUrl(webApiViews), {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.appId, guid }\r\n    });\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FileUploadDialogComponent, FileUploadDialogData, UploadTypes } from '../../../shared/components/file-upload-dialog';\r\nimport { ViewsService } from '../../services/views.service';\r\nimport { transient } from '../../../core';\r\n\r\n@Component({\r\n  selector: 'app-import-view',\r\n  templateUrl: './import-view.component.html',\r\n  styleUrls: ['./import-view.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FileUploadDialogComponent,\r\n  ],\r\n})\r\nexport class ImportViewComponent {\r\n\r\n  uploadType = UploadTypes.View;\r\n\r\n  private viewsService = transient(ViewsService);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) dialogData: FileUploadDialogData,\r\n  ) {\r\n    dialogData.title ??= `Import View`;\r\n    dialogData.description ??= `Select a View file (json) from your computer to import.`;\r\n    dialogData.allowedFileTypes ??= 'json';\r\n    dialogData.upload$ ??= (files) => this.viewsService.import(files[0]);\r\n  }\r\n\r\n}\r\n","<app-file-upload-dialog [uploadType]=\"uploadType\"></app-file-upload-dialog>"],"x_google_ignoreList":[]}