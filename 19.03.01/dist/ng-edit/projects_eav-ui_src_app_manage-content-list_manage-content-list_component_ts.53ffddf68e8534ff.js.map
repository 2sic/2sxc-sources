{"version":3,"file":"projects_eav-ui_src_app_manage-content-list_manage-content-list_component_ts.53ffddf68e8534ff.js","mappings":"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","names":["convert","obj","fn","getWith","$item","Id","i0","_r2","ctx_r2","editHeader","header","Title","ManageContentListComponent_Conditional_0_Conditional_8_Conditional_4_Template","ManageContentListComponent_Conditional_0_Conditional_8_Conditional_5_Template","Type","reordered","tmp_2_0","items","length","item_r5","_r4","$implicit","addFromExisting","Index","addBelow","remove","editItem","ManageContentListComponent_Conditional_0_Conditional_8_Template","ManageContentListComponent_Conditional_0_Conditional_9_Template","$event","_r1","drop","ManageContentListComponent_Conditional_0_For_12_Template","_forTrack0","closeDialog","saveList","saveAndCloseList","ManageContentListComponent","#dialogRoutes","#contentGroupSvc","#dialogConfigSvc","constructor","dialog","snackBar","translate","this","hostClass","transient","DialogRoutingService","ContentGroupService","DialogConfigAppService","signalObj","#contentGroup","getParams","p","id","guid","part","index","parseInt","refresh","signal","computed","getHeader","undefined","ngOnInit","#fetchList","#fetchDialogSettings","doOnDialogClosed","#fetchHeader","getCurrent$","subscribe","dialogSettings","setDefaultLang","Context","Language","Primary","split","use","Current","close","open","duration","form","EditPrep","relationship","formUrl","convertFormToUrl","navRelative","editId","queryParams","add","item","confirm","instant","removeItem","event","moveItemInArray","previousIndex","currentIndex","set","keepOrder","getList","oldIds","map","some","includes","sortOrder","sort","a","b","aIndex","indexOf","bIndex","i1","i2","i3","selectors","hostVars","hostBindings","rf","ctx","ManageContentListComponent_Conditional_0_Template","RouterOutlet","CdkScrollable","MatButtonModule","i4","MatIconModule","i5","CdkDropList","CdkDrag","MatDialogActions","TranslateModule","MatDialogModule","TippyDirective","MousedownStopPropagationDirective","styles","logSpecs","ServiceBase","router","route","super","log","classLog","snapshot","url","getParam","key","paramMap","get","keys","reduce","acc","getQueryParam","queryParamMap","getQueryParams","state","getCurrentNavigation","extras","callback","l","fnIf","subscriptions","childDialogClosed$","end","urlSubRoute","params","tree","createUrlTree","relativeTo","serializeUrl","navPath","navigate","commands","events","pipe","filter","NavigationEnd","startWith","firstChild","pairwise","hadChildBefore","hasChildNow","factory","Éµfac","Subscription","ngOnDestroy","destroy","unsubscribe"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/core/object-utilities.ts","./projects/eav-ui/src/app/manage-content-list/manage-content-list.component.html","./projects/eav-ui/src/app/manage-content-list/manage-content-list.component.ts","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts","./projects/eav-ui/src/app/shared/services/service-base.ts"],"sourcesContent":["\r\n/**\r\n * Conversion function to change something to something else, a bit like 'map' but for a single item.\r\n * \r\n * Typically used in short return statements.\r\n * \r\n * Internally it's the same as the `getWith` function, but has a different name to indicate the usage.\r\n */\r\nexport function convert<T extends unknown, R extends unknown>(obj: T, fn: (value: T) => R): R {\r\n  return fn(obj);\r\n}\r\n\r\n/**\r\n * Function to do something with an object and return the result.\r\n * \r\n * Typically used in short return statements.\r\n * \r\n * Internally it's the same as the `convert` function, but has a different name to indicate the usage.\r\n */\r\nexport function getWith<T extends unknown, R extends unknown>(obj: T, fn: (value: T) => R): R {\r\n  return fn(obj);\r\n}\r\n\r\n","@if (header() && items()) {\r\n  <div class=\"eav-dialog eav-no-scrollbar\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">{{ 'ManageContentList.Title' | translate }}</div>\r\n    </div>\r\n    <div class=\"eav-dialog-content\">\r\n      <router-outlet></router-outlet>\r\n      <div class=\"dialog-component-content fancy-scrollbar-light\" cdkScrollable>\r\n        @if (header()()) {\r\n          <p>\r\n            {{ 'ManageContentList.Description' | translate }}\r\n          </p>\r\n          <p>\r\n            @if (header()().Type) {\r\n              <span>{{ header()().Title }}</span>\r\n              <button mat-icon-button tippy=\"Edit header\" (click)=\"editHeader()\">\r\n                <mat-icon>edit</mat-icon>\r\n              </button>\r\n            } @else {\r\n              {{ 'ManageContentList.NoHeader' | translate }}\r\n            }\r\n          </p>\r\n        }\r\n        @if (items()) {\r\n          <p class=\"eav-sort-title\">\r\n            {{\r\n              'ManageContentList.' + (reordered() ? 'ListHasBeenReordered' : items()?.length < 25 ? 'SortItems' : 'SortLotsOfItems')\r\n                | translate\r\n            }}\r\n          </p>\r\n        }\r\n\r\n        <!-- Items - with drag-and-drop -->\r\n        <div class=\"eav-dnd-list\" cdkDropList (cdkDropListDropped)=\"drop($event)\">\r\n          <!-- we use both Index and Id because all demo items have Id=0 -->\r\n          @for (item of items(); track item.Index + '+' + item.Id) {\r\n            <div class=\"eav-dnd-item\" cdkDrag>\r\n              <div class=\"eav-dnd-item__title\">\r\n                <mat-icon class=\"eav-dnd-item__title-icon\" tippy=\"Drag to reorder the list\">drag_handle</mat-icon>\r\n                <span class=\"eav-dnd-item__title-text\" tippy=\"{{ item.Title }} ({{ item.Id }})\"> {{ item.Title }} ({{ item.Id }}) </span>\r\n              </div>\r\n              <div>\r\n                <!-- most buttons should only exist if it has a real ID, except for remove - which should also remove null-entries -->\r\n                <button\r\n                  mat-icon-button\r\n                  tippyTranslate=\"Fields.Picker.AddExistingItem\"\r\n                  appMousedownStopPropagation\r\n                  [disabled]=\"item.Id === 0\"\r\n                  (click)=\"addFromExisting(item.Index)\"\r\n                >\r\n                  <mat-icon>playlist_add</mat-icon>\r\n                </button>\r\n                <button\r\n                  mat-icon-button\r\n                  tippyTranslate=\"Fields.Picker.AddItemBelow\"\r\n                  appMousedownStopPropagation\r\n                  [disabled]=\"item.Id === 0 || reordered()\"\r\n                  (click)=\"addBelow(item.Index)\"\r\n                >\r\n                  <mat-icon>add</mat-icon>\r\n                </button>\r\n                <button\r\n                  mat-icon-button\r\n                  tippyTranslate=\"Fields.Picker.Remove\"\r\n                  appMousedownStopPropagation\r\n                  [disabled]=\"reordered()\"\r\n                  (click)=\"remove(item)\"\r\n                >\r\n                  <mat-icon>remove</mat-icon>\r\n                </button>\r\n                <button\r\n                  mat-icon-button\r\n                  tippyTranslate=\"Fields.Picker.Edit\"\r\n                  appMousedownStopPropagation\r\n                  [disabled]=\"item.Id === 0\"\r\n                  (click)=\"editItem(item.Id)\"\r\n                >\r\n                  <mat-icon>edit</mat-icon>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-raised-button (click)=\"closeDialog()\">{{ 'General.Buttons.Cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"accent\" (click)=\"saveList()\">{{ 'General.Buttons.Save' | translate }}</button>\r\n      <button mat-raised-button color=\"accent\" (click)=\"saveAndCloseList()\" tippyTranslate=\"Form.Buttons.SaveAndClose\">\r\n        <mat-icon class=\"eav-raised-button-icon\">done</mat-icon>\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n}\r\n","import { CdkDrag, CdkDragDrop, CdkDropList, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { CdkScrollable } from '@angular/cdk/scrolling';\r\nimport { Component, computed, HostBinding, OnInit, signal } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogActions, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { convert, transient } from '../../../../core';\r\nimport { DialogConfigAppService } from '../app-administration/services/dialog-config-app.service';\r\nimport { MousedownStopPropagationDirective } from '../shared/directives/mousedown-stop-propagation.directive';\r\nimport { TippyDirective } from '../shared/directives/tippy.directive';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep } from '../shared/models/edit-form.model';\r\nimport { DialogRoutingService } from '../shared/routing/dialog-routing.service';\r\nimport { signalObj } from '../shared/signals/signal.utilities';\r\nimport { GroupHeader } from './models/group-header.model';\r\nimport { ContentGroupService } from './services/content-group.service';\r\n\r\n@Component({\r\n    selector: 'app-manage-content-list',\r\n    templateUrl: './manage-content-list.component.html',\r\n    styleUrls: ['./manage-content-list.component.scss'],\r\n    imports: [\r\n        RouterOutlet,\r\n        CdkScrollable,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        CdkDropList,\r\n        CdkDrag,\r\n        MatDialogActions,\r\n        TranslateModule,\r\n        MatDialogModule,\r\n        TippyDirective,\r\n        MousedownStopPropagationDirective,\r\n    ]\r\n})\r\nexport class ManageContentListComponent implements OnInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  #dialogRoutes = transient(DialogRoutingService);\r\n  #contentGroupSvc = transient(ContentGroupService);\r\n  #dialogConfigSvc = transient(DialogConfigAppService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<ManageContentListComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private translate: TranslateService,\r\n  ) { }\r\n\r\n  protected items = signalObj<GroupHeader[]>('items', null);\r\n\r\n  #contentGroup = convert(this.#dialogRoutes.getParams(['guid', 'part', 'index']), p => ({\r\n    id: null,\r\n    guid: p.guid,\r\n    part: p.part,\r\n    index: parseInt(p.index, 10),\r\n  }));\r\n\r\n  refresh = signal(0);\r\n\r\n  header = computed(() => {\r\n    const r = this.refresh();\r\n    return this.#contentGroupSvc.getHeader(this.#contentGroup, undefined);\r\n  });\r\n\r\n\r\n  protected reordered = signalObj('reordered', false);\r\n\r\n  ngOnInit() {\r\n    this.#fetchList();\r\n    this.#fetchDialogSettings();\r\n    this.#dialogRoutes.doOnDialogClosed(() => {\r\n      this.#fetchList(true);\r\n      this.#fetchHeader();\r\n    });\r\n  }\r\n\r\n  #fetchDialogSettings() {\r\n    this.#dialogConfigSvc.getCurrent$().subscribe(dialogSettings => {\r\n      this.translate.setDefaultLang(dialogSettings.Context.Language.Primary.split('-')[0]);\r\n      this.translate.use(dialogSettings.Context.Language.Current.split('-')[0]);\r\n    });\r\n  }\r\n\r\n  protected closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  protected saveList() {\r\n    this.snackBar.open('Saving...');\r\n    this.#contentGroupSvc.saveList(this.#contentGroup, this.items()).subscribe(() => {\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.#fetchList();\r\n      this.#fetchHeader();\r\n    });\r\n  }\r\n\r\n  protected saveAndCloseList() {\r\n    this.snackBar.open('Saving...');\r\n    this.#contentGroupSvc.saveList(this.#contentGroup, this.items()).subscribe(() => {\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.closeDialog();\r\n    });\r\n  }\r\n\r\n  protected editHeader() {\r\n    const form: EditForm = {\r\n      items: [\r\n        EditPrep.relationship(this.#contentGroup.guid, 'listcontent', 0, this.header()().Id === 0),\r\n        EditPrep.relationship(this.#contentGroup.guid, 'listpresentation', 0, this.header()().Id === 0),\r\n      ],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  protected editItem(id: number) {\r\n    const form: EditForm = {\r\n      items: [EditPrep.editId(id)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  protected addFromExisting(index: number) {\r\n    const queryParams = { add: true };\r\n    this.#dialogRoutes.navRelative([`${this.#contentGroup.guid}/${this.#contentGroup.part}/${index + 1}/replace`], { queryParams });\r\n  }\r\n\r\n  addBelow(index: number) {\r\n    const form: EditForm = {\r\n      items: [EditPrep.relationship(this.#contentGroup.guid, this.#contentGroup.part, index + 1, true)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  protected remove(item: GroupHeader) {\r\n    if (!confirm(this.translate.instant('ManageContentList.ConfirmRemove'))) return;\r\n    this.snackBar.open('Removing...');\r\n    this.#contentGroupSvc.removeItem(this.#contentGroup, item.Index).subscribe(() => {\r\n      this.snackBar.open('Removed', null, { duration: 2000 });\r\n      this.#fetchList();\r\n    });\r\n  }\r\n\r\n  protected drop(event: CdkDragDrop<GroupHeader[]>) {\r\n    const items = [...this.items()];\r\n    moveItemInArray(items, event.previousIndex, event.currentIndex);\r\n    this.items.set(items);\r\n    this.reordered.set(true);\r\n  }\r\n\r\n  #fetchList(keepOrder = false) {\r\n    this.#contentGroupSvc.getList(this.#contentGroup).subscribe(items => {\r\n      if (this.reordered()) {\r\n        const oldIds = this.items().map(item => item.Id);\r\n        const idsChanged = this.items().length !== items.length || items.some(item => !oldIds.includes(item.Id));\r\n        // for usecase where list is fetched on child closed and wasn't changed in the meantime keeps the order before child was opened\r\n        if (!idsChanged && keepOrder) {\r\n          const sortOrder = this.items().map(item => item.Index);\r\n          items.sort((a, b) => {\r\n            const aIndex = sortOrder.indexOf(a.Index);\r\n            const bIndex = sortOrder.indexOf(b.Index);\r\n            if (aIndex === -1 || bIndex === -1) { return 0; }\r\n            return aIndex - bIndex;\r\n          });\r\n        } else if (keepOrder)\r\n          this.snackBar.open('List was changed from somewhere else. Order of items is reset', null, { duration: 5000 });\r\n      }\r\n      this.items.set(items);\r\n      this.reordered.set(false);\r\n    });\r\n  }\r\n\r\n  #fetchHeader() {\r\n    this.refresh.set(this.refresh() + 1);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { classLog } from '../logging';\r\nimport { ServiceBase } from '../services/service-base';\r\n\r\nconst logSpecs = {\r\n  doOnDialogClosed: true,\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase {\r\n\r\n  log = classLog({ DialogRoutingService }, logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) { super(); }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  getParam(key: string): string {\r\n    return this.route.snapshot.paramMap.get(key);\r\n  }\r\n\r\n  getParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const paramMap = this.route.snapshot.paramMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = paramMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  getQueryParam(key: string): string {\r\n    return this.route.snapshot.queryParamMap.get(key);\r\n  }\r\n\r\n  getQueryParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const queryParamMap = this.route.snapshot.queryParamMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = queryParamMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe(() => callback())\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Get the URL for a sub-route of the current route.\r\n   */\r\n  public urlSubRoute(params: string) {\r\n    const tree = this.router.createUrlTree([params], { relativeTo: this.route });\r\n    const routeUrl = this.router.serializeUrl(tree);\r\n    return routeUrl;\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}