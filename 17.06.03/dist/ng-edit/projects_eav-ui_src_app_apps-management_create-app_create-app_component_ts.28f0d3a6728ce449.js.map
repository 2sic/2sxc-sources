{"version":3,"file":"projects_eav-ui_src_app_apps-management_create-app_create-app_component_ts.28f0d3a6728ce449.js","mappings":"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","names":["appNamePattern","i0","ctx_r4","appNameError","CreateAppComponent_Conditional_0_Conditional_13_Conditional_0_Template","CreateAppComponent_Conditional_0_Conditional_13_Conditional_1_Template","ctx_r2","form","controls","name","errors","required","pattern","CreateAppComponent_Conditional_0_Conditional_13_Template","$event","_r6","ctx_r5","appTemplateId","ctx_r7","closeDialog","ctx_r8","create","ctx_r0","touched","ctx","loading","valid","CreateAppComponent","constructor","dialogRef","appsListService","snackBar","this","hostClass","buildForm","loading$","BehaviorSubject","ngOnInit","viewModel$","pipe","map","ngOnDestroy","complete","close","disable","next","value","trim","replace","Number","open","subscribe","error","enable","undefined","duration","UntypedFormGroup","UntypedFormControl","Validators","static","t","i1","i2","i3","fesm2022_core","In1","selectors","hostVars","hostBindings","rf","AppsListService","decls","vars","consts","template","CreateAppComponent_Conditional_0_Template","CreateAppComponent_contFlowTmp","RouterOutlet","FormsModule","i4","ReactiveFormsModule","MatFormFieldModule","i5","MatInputModule","i6","SharedComponentsModule","i7","MatSelectModule","i8","i9","MatOptionModule","MatDialogActions","MatButtonModule","i10","AsyncPipe"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/apps-management/constants/app.patterns.ts","./projects/eav-ui/src/app/apps-management/create-app/create-app.component.html","./projects/eav-ui/src/app/apps-management/create-app/create-app.component.ts"],"sourcesContent":["export const appNamePattern = /^[A-Za-z](?:[A-Za-z0-9\\s\\(\\)-]+)*$/;\r\nexport const appNameError = 'Standard letters, numbers, spaces, hyphens and round brackets are allowed. Must start with a letter.';\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">Create App</div>\r\n    </div>\r\n    <div class=\"eav-dialog-content\">\r\n      <router-outlet></router-outlet>\r\n      <form [formGroup]=\"form\">\r\n        <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"name\">\r\n        </mat-form-field>\r\n        <app-field-hint>\r\n          App name will also be used for the folder\r\n        </app-field-hint>\r\n        @if (form.controls.name.touched) {\r\n          @if (form.controls.name.errors?.required) {\r\n            <app-field-hint [isError]=\"true\">\r\n              Required\r\n            </app-field-hint>\r\n          }\r\n          @if (form.controls.name.errors?.pattern) {\r\n            <app-field-hint [isError]=\"true\">\r\n              {{ appNameError }}\r\n            </app-field-hint>\r\n          }\r\n        }\r\n        <br>\r\n\r\n        <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n          <mat-label>Template</mat-label>\r\n          <mat-select required=\"true\" [(value)]=\"appTemplateId\">\r\n            <mat-option value=\"0\">\r\n              Completely Naked / Raw App\r\n            </mat-option>\r\n            <mat-option value=\"1\">\r\n              App Template Empty with some instructions\r\n            </mat-option>\r\n            <mat-option value=\"2\">\r\n              App Template Basic with instructions and some data\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n      </form>\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button type=\"button\" mat-raised-button [disabled]=\"vm.loading\" (click)=\"closeDialog()\">\r\n        Cancel\r\n      </button>\r\n      <button type=\"button\" mat-raised-button color=\"accent\" [disabled]=\"vm.loading || !form.valid\" (click)=\"create()\">\r\n        Create\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n}","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogRef, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, Observable, combineLatest, map } from 'rxjs';\r\nimport { appNameError, appNamePattern } from '../constants/app.patterns';\r\nimport { AppsListService } from '../services/apps-list.service';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { SharedComponentsModule } from '../../shared/shared-components.module';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { RouterOutlet } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-create-app',\r\n    templateUrl: './create-app.component.html',\r\n    styleUrls: ['./create-app.component.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        RouterOutlet,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        SharedComponentsModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        MatDialogActions,\r\n        MatButtonModule,\r\n        AsyncPipe,\r\n    ],\r\n    providers: [\r\n        AppsListService,\r\n    ]\r\n})\r\nexport class CreateAppComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  loading$: BehaviorSubject<boolean>;\r\n  appNameError = appNameError;\r\n  appTemplateId = '1';\r\n\r\n  viewModel$: Observable<CreateAppViewModel>;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<CreateAppComponent>,\r\n    private appsListService: AppsListService,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    this.form = this.buildForm();\r\n    this.loading$ = new BehaviorSubject(false);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.viewModel$ = this.loading$.pipe(\r\n      map((loading) => ({ loading })),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.loading$.complete();\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  create(): void {\r\n    this.form.disable();\r\n    this.loading$.next(true);\r\n    const name = this.form.controls.name.value?.trim().replace(/\\s\\s+/g, ' '); // remove multiple white spaces and tabs;\r\n    const appTemplateId = Number(this.appTemplateId);\r\n    // console.warn('2dm: name', name, this.appTemplateId);\r\n    // return;\r\n\r\n    this.snackBar.open('Creating app...');\r\n    this.appsListService.create(name, null, appTemplateId).subscribe({\r\n      error: () => {\r\n        this.form.enable();\r\n        this.loading$.next(false);\r\n        this.snackBar.open('Failed to create app. Please check console for more information', undefined, { duration: 3000 });\r\n      },\r\n      next: () => {\r\n        this.form.enable();\r\n        this.snackBar.open('Created app', undefined, { duration: 2000 });\r\n        this.closeDialog();\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildForm(): UntypedFormGroup {\r\n    const form = new UntypedFormGroup({\r\n      name: new UntypedFormControl(null, [Validators.required, Validators.pattern(appNamePattern)]),\r\n    });\r\n    return form;\r\n  }\r\n}\r\n\r\ninterface CreateAppViewModel {\r\n  loading: boolean;\r\n}\r\n"],"x_google_ignoreList":[]}