{"version":3,"file":"projects_eav-ui_src_app_content-import_content-import_component_ts.695a1691cd588097.js","mappings":"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","names":["AppDialogConfigService","ServiceBase","constructor","http","context","globalConfigService","featuresService","super","EavLogger","this","dialogSettings$","log","add","svcId","loadFromService","ngOnDestroy","destroy","getCurrent$","appId","getShared$","getSitePrimaryApp$","pipe","map","dc","Context","Site","PrimaryApp","getGlobalPrimaryApp$","System","getDialogSettings","shareReplay","refCount","reqBy","get","params","toString","dlgSettings","Language","List","filter","language","IsEnabled","tap","allowDebug","Enable","DebugMode","static","t","i0","i1","i2","i3","i4","_angular_core__WEBPACK_IMPORTED_MODULE_8__","wxM","factory","ɵfac","ContentImportService","dnnContext","evaluateContent","formValues","from","toBase64","file","switchMap","fileBase64","requestData","AppId","DefaultLanguage","defaultLanguage","ContentType","contentType","ContentBase64","ResourcesReferences","resourcesReferences","ClearEntities","clearEntities","post","$2sxc","apiUrl","webApiEntityRoot","result","Success","Errors","Detail","importContent","core","_r10","_r8","click","$event","ctx_r11","fileChange","ctx_r12","ctx_r13","ctx_r14","closeDialog","ctx_r15","ctx_r3","name","ctx_r17","vm_r1","evaluationResult","DocumentElementsCount","LanguagesInDocumentCount","AttributeNamesInDocument","length","join","AmountOfEntitiesCreated","AmountOfEntitiesUpdated","AmountOfEntitiesDeleted","AttributeNamesNotImported","error_r21","ErrorDetail","LineNumber","LineDetail","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Conditional_0_Conditional_1_For_5_Conditional_3_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Conditional_0_Conditional_1_For_5_Conditional_4_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Conditional_0_Conditional_1_For_5_Conditional_5_Template","ctx_r20","errors","ErrorCode","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Conditional_0_Conditional_1_For_5_Template","ctx_r18","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Conditional_0_Conditional_0_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Conditional_0_Conditional_1_Template","_r34","ctx_r33","back","ctx_r35","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Conditional_0_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_3_Conditional_0_Conditional_1_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_3_Conditional_0_Conditional_2_Template","importResult","ContentImportComponent_Conditional_0_Conditional_10_Case_3_Conditional_0_Template","_r43","ctx_r42","ContentImportComponent_Conditional_0_Conditional_10_Case_0_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_1_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_3_Template","ContentImportComponent_Conditional_0_Conditional_10_contFlowTmp","viewStateSelected","_r47","ctx_r46","filesDropped","ContentImportComponent_Conditional_0_Conditional_10_Template","ctx","Name","ctx_r0","ContentImportComponent","dialogData","dialogRef","route","contentImportService","appDialogConfigService","contentTypesService","hostClass","contentType$","BehaviorSubject","loading$","viewStates","waiting","default","evaluated","imported","viewStateSelected$","evaluationResult$","importResult$","viewModel$","combineLatest","loading","contentTypeStaticName","snapshot","paramMap","ngOnInit","next","retrieveContentType","forkJoin","subscribe","dialogSettings","Primary","files","complete","close","event","target","MAT_DIALOG_DATA","i5","In1","selectors","hostVars","hostBindings","rf","ContentTypesService","decls","vars","consts","template","ContentImportComponent_Conditional_0_Template","ContentImportComponent_contFlowTmp","SharedComponentsModule","i6","i7","FormsModule","i8","MatButtonModule","i9","MatRadioModule","i10","MatDialogActions","AsyncPipe","styles","DragAndDropDirective","BaseSubsinkComponent","elementRef","zone","snackBar","markStyle","allowedFileTypes","EventEmitter","dropAreaClass","dragClass","timeouts","element","nativeElement","markStyleClass","classList","runOutsideAngular","subscription","fromEvent","preventDefault","stopPropagation","clearTimeouts","push","window","setTimeout","remove","onDrop","Array","dataTransfer","filterTypes","emit","timeout","clearTimeout","allowedTypes","split","type","toLocaleLowerCase","filtered","extIndex","lastIndexOf","ext","substring","includes","allowedTypesString","replace","open","duration","_angular_core__WEBPACK_IMPORTED_MODULE_1__","Sc5"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/app-dialog-config.service.ts","./projects/eav-ui/src/app/content-import/services/content-import.service.ts","./projects/eav-ui/src/app/content-import/content-import.component.html","./projects/eav-ui/src/app/content-import/content-import.component.ts","./projects/eav-ui/src/app/shared/directives/drag-and-drop.directive.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { map, Observable, shareReplay, tap } from 'rxjs';\r\nimport { GlobalConfigService } from '../../edit/shared/store/ngrx-data';\r\nimport { DialogSettings } from '../../shared/models/dialog-settings.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { ServiceBase } from '../../shared/services/service-base';\r\nimport { EavLogger } from '../../shared/logging/eav-logger';\r\nimport { DialogContextSiteApp } from '../../shared/models/dialog-context.models';\r\n\r\nconst logThis = false;\r\n\r\nconst webApiSettings = 'admin/dialog/settings';\r\n\r\n\r\n@Injectable()\r\nexport class AppDialogConfigService extends ServiceBase implements OnDestroy {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private context: Context,\r\n    // private dnnContext: DnnContext,\r\n    private globalConfigService: GlobalConfigService,\r\n    featuresService: FeaturesService,\r\n  ) {\r\n    super(new EavLogger('AppDialogConfigService', logThis));\r\n    this.log.add('using context #', this.context.log.svcId);\r\n    featuresService.loadFromService(this);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.destroy();\r\n    // TODO: probably should add an onDestroy and ensure all subscriptions in dialogSettings$ are killed\r\n  }\r\n\r\n  private dialogSettings$: Record<number, Observable<DialogSettings>> = {};\r\n\r\n  getCurrent$(): Observable<DialogSettings> {\r\n    const appId = this.context.appId;\r\n    this.log.add('getCurrent$', 'appId', appId);\r\n    return this.getShared$(appId);\r\n  }\r\n\r\n    // new 2dg\r\n    getSitePrimaryApp$(): Observable<DialogContextSiteApp> {\r\n      return this.getCurrent$().pipe(map(dc => dc?.Context.Site.PrimaryApp));\r\n    }\r\n  \r\n    getGlobalPrimaryApp$(): Observable<DialogContextSiteApp> {\r\n      return this.getCurrent$().pipe(map(dc => dc?.Context.System.PrimaryApp));\r\n    }\r\n  \r\n\r\n  getShared$(appId: number): Observable<DialogSettings> {\r\n    this.log.add('getShared$', 'appId', appId);\r\n    // if (!this.dialogSettings$[appIdToUse])\r\n    this.dialogSettings$[appId] ??= this.getDialogSettings(appId, 'getShared$').pipe(shareReplay({ refCount: false }));\r\n    return this.dialogSettings$[appId];\r\n  }\r\n\r\n  getDialogSettings(appId?: number, reqBy?: string): Observable<DialogSettings> {\r\n    this.log.add('getDialogSettings', 'appId', appId, 'reqBy', reqBy);\r\n    return this.http.get<DialogSettings>(webApiSettings, {\r\n      params: { appId: appId ?? this.context.appId.toString() },\r\n    }).pipe(\r\n      map(dlgSettings => {\r\n        dlgSettings.Context.Language.List = dlgSettings.Context.Language.List.filter(language => language.IsEnabled);\r\n        return dlgSettings;\r\n      }),\r\n      tap(dlgSettings => {\r\n        this.globalConfigService.allowDebug(dlgSettings.Context.Enable.DebugMode);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { webApiEntityRoot } from '../../edit/shared/services';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentImport, EvaluateContentResult, ImportContentRequest, ImportContentResult } from '../models/content-import.model';\r\n\r\n@Injectable()\r\nexport class ContentImportService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  evaluateContent(formValues: ContentImport) {\r\n    return from(toBase64(formValues.file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        const requestData: ImportContentRequest = {\r\n          AppId: this.context.appId.toString(),\r\n          DefaultLanguage: formValues.defaultLanguage,\r\n          ContentType: formValues.contentType,\r\n          ContentBase64: fileBase64,\r\n          ResourcesReferences: formValues.resourcesReferences,\r\n          ClearEntities: formValues.clearEntities,\r\n        };\r\n        return this.http.post<EvaluateContentResult>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'XmlPreview'), requestData).pipe(\r\n          map(result => {\r\n            if (!result.Success) {\r\n              result.Errors = result.Detail as any;\r\n              delete result.Detail;\r\n            }\r\n            return result;\r\n          }),\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  importContent(formValues: ContentImport) {\r\n    return from(toBase64(formValues.file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        const requestData: ImportContentRequest = {\r\n          AppId: this.context.appId.toString(),\r\n          DefaultLanguage: formValues.defaultLanguage,\r\n          ContentType: formValues.contentType,\r\n          ContentBase64: fileBase64,\r\n          ResourcesReferences: formValues.resourcesReferences,\r\n          ClearEntities: formValues.clearEntities,\r\n        };\r\n        return this.http.post<ImportContentResult>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'XmlUpload'), requestData);\r\n      })\r\n    );\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog\" appDragAndDrop\r\n    [allowedFileTypes]=\"'xml'\" (filesDropped)=\"filesDropped($event)\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">{{ vm.contentType?.Name }} Import Data</div>\r\n    </div>\r\n    <div class=\"eav-dialog-description\">\r\n      <p>\r\n        This will import content-items into 2sxc. It requires that you already defined the content-type before you try\r\n        importing, and that you created the import-file using the template provided by the Export. Please visit\r\n        <a href=\"https://2sxc.org/help\" target=\"_blank\">https://2sxc.org/help</a> for more instructions.\r\n      </p>\r\n    </div>\r\n    @if (formValues != null) {\r\n      @switch (vm.viewStateSelected) {\r\n        <!-- FORM -->\r\n        @case (1) {\r\n          <form #ngForm=\"ngForm\">\r\n            <div class=\"eav-dialog-content\">\r\n              <div>\r\n                <button mat-raised-button tippy=\"Open file browser\" (click)=\"fileInput.click()\">\r\n                  <span>{{ formValues.file ? formValues.file.name : 'Select or drop file' }}</span>\r\n                </button>\r\n                <input #fileInput type=\"file\" (change)=\"fileChange($event)\" class=\"hide\" />\r\n              </div>\r\n              <div>\r\n                <p class=\"eav-radio-group-label\">References to pages / files</p>\r\n                <mat-radio-group class=\"eav-radio-group\" [(ngModel)]=\"formValues.resourcesReferences\" name=\"ResourcesReferences\">\r\n                  <mat-radio-button value=\"Keep\">\r\n                    Import links as written in the file (for example /Portals/...)\r\n                  </mat-radio-button>\r\n                  <mat-radio-button value=\"Resolve\">\r\n                    Try to resolve paths to references\r\n                  </mat-radio-button>\r\n                </mat-radio-group>\r\n              </div>\r\n              <div>\r\n                <p class=\"eav-radio-group-label\">Clear all other entities</p>\r\n                <mat-radio-group class=\"eav-radio-group\" [(ngModel)]=\"formValues.clearEntities\" name=\"ClearEntities\">\r\n                  <mat-radio-button value=\"None\">\r\n                    Keep all entities not found in import\r\n                  </mat-radio-button>\r\n                  <mat-radio-button value=\"All\">\r\n                    Remove all entities not found in import\r\n                  </mat-radio-button>\r\n                </mat-radio-group>\r\n              </div>\r\n              <p class=\"eav-hint\">Remember to backup your DNN first!</p>\r\n            </div>\r\n            <mat-dialog-actions align=\"end\">\r\n              <button mat-raised-button (click)=\"closeDialog()\">Cancel</button>\r\n              <button mat-raised-button color=\"accent\" [disabled]=\"!formValues.file || !formValues.file.name\"\r\n                (click)=\"evaluateContent()\">\r\n                Preview Import\r\n              </button>\r\n            </mat-dialog-actions>\r\n          </form>\r\n        }\r\n        <!-- END FORM -->\r\n        <!-- WAITING -->\r\n        @case (0) {\r\n          <div class=\"eav-dialog-content\">\r\n            <p>Please wait while processing...</p>\r\n          </div>\r\n        }\r\n        <!-- END WAITING -->\r\n        <!-- EVALUATION RESULT -->\r\n        @case (2) {\r\n          @if (vm.evaluationResult) {\r\n            <!-- DETAILS / STATISTICS -->\r\n            @if (vm.evaluationResult.Success) {\r\n              <div class=\"eav-dialog-content\">\r\n                <p class=\"eav-evaluation__title\">Try to import file '{{ formValues.file.name }}'</p>\r\n                <p class=\"eav-evaluation__title\">File contains:</p>\r\n                <ul class=\"eav-evaluation__content\">\r\n                  <li>{{ vm.evaluationResult.Detail.DocumentElementsCount }} content-items (records/entities)</li>\r\n                  <li>{{ vm.evaluationResult.Detail.LanguagesInDocumentCount }} languages</li>\r\n                  <li>{{ vm.evaluationResult.Detail.AttributeNamesInDocument.length }} columns:\r\n                  {{ vm.evaluationResult.Detail.AttributeNamesInDocument.join(', ') }}</li>\r\n                </ul>\r\n                <p class=\"eav-evaluation__title\">If you press Import, it will:</p>\r\n                <ul class=\"eav-evaluation__content\">\r\n                  <li>Create {{ vm.evaluationResult.Detail.AmountOfEntitiesCreated }} content-items</li>\r\n                  <li>Update {{ vm.evaluationResult.Detail.AmountOfEntitiesUpdated }} content-items</li>\r\n                  <li>Delete {{ vm.evaluationResult.Detail.AmountOfEntitiesDeleted }} content-items</li>\r\n                  <li>Ignore {{ vm.evaluationResult.Detail.AttributeNamesNotImported.length }} columns:\r\n                  {{ vm.evaluationResult.Detail.AttributeNamesNotImported.join(', ') }}</li>\r\n                </ul>\r\n                <p class=\"eav-hint\">Note: The import validates much data and may take several minutes.</p>\r\n              </div>\r\n            }\r\n            <!-- END DETAILS / STATISTICS -->\r\n            <!-- ERRORS -->\r\n            @if (!vm.evaluationResult.Success) {\r\n              <div class=\"eav-dialog-content\">\r\n                <p class=\"eav-evaluation__title\">Try to import file '{{ formValues.file.name }}'</p>\r\n                <ul class=\"eav-evaluation__content\">\r\n                  @for (error of vm.evaluationResult.Errors; track error) {\r\n                    <li>\r\n                      <div>{{ errors[error.ErrorCode] }}</div>\r\n                      @if (error.ErrorDetail) {\r\n                        <div><i>Details: {{ error.ErrorDetail }}</i></div>\r\n                      }\r\n                      @if (error.LineNumber) {\r\n                        <div><i>Line-no: {{ error.LineNumber }}</i></div>\r\n                      }\r\n                      @if (error.LineDetail) {\r\n                        <div><i>Line-details: {{ error.LineDetail }}</i></div>\r\n                      }\r\n                    </li>\r\n                  }\r\n                </ul>\r\n              </div>\r\n            }\r\n            <!-- END ERRORS -->\r\n            <mat-dialog-actions align=\"end\">\r\n              <button mat-raised-button (click)=\"back()\">Back</button>\r\n              <button mat-raised-button color=\"accent\" [disabled]=\"!vm.evaluationResult.Success\" (click)=\"importContent()\">\r\n                Import\r\n              </button>\r\n            </mat-dialog-actions>\r\n          }\r\n        }\r\n        <!-- END EVALUATION RESULT -->\r\n        <!-- IMPORT RESULT -->\r\n        @case (3) {\r\n          @if (vm.importResult) {\r\n            <div class=\"eav-dialog-content\">\r\n              @if (vm.importResult.Success) {\r\n                <p>Import done.</p>\r\n              }\r\n              @if (!vm.importResult.Success) {\r\n                <p>Import failed.</p>\r\n              }\r\n            </div>\r\n          }\r\n          <mat-dialog-actions align=\"end\">\r\n            <button mat-raised-button color=\"accent\" (click)=\"closeDialog()\">Close</button>\r\n          </mat-dialog-actions>\r\n        }\r\n        <!-- END IMPORT RESULT -->\r\n      }\r\n    }\r\n  </div>\r\n}\r\n","import { Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogActions } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, forkJoin, map } from 'rxjs';\r\nimport { ContentType } from '../app-administration/models/content-type.model';\r\nimport { AppDialogConfigService } from '../app-administration/services/app-dialog-config.service';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { ContentImportDialogData } from './content-import-dialog.config';\r\nimport { ContentImport, EvaluateContentResult, ImportContentResult } from './models/content-import.model';\r\nimport { ContentImportService } from './services/content-import.service';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\n\r\n@Component({\r\n    selector: 'app-content-import',\r\n    templateUrl: './content-import.component.html',\r\n    styleUrls: ['./content-import.component.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        SharedComponentsModule,\r\n        FormsModule,\r\n        MatButtonModule,\r\n        MatRadioModule,\r\n        MatDialogActions,\r\n        AsyncPipe,\r\n    ],\r\n    providers: [\r\n        ContentImportService,\r\n        ContentTypesService,\r\n        AppDialogConfigService,\r\n    ],\r\n})\r\nexport class ContentImportComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  formValues: ContentImport;\r\n  private contentType$ = new BehaviorSubject<ContentType>(null);\r\n  private loading$ = new BehaviorSubject(false);\r\n  private viewStates = {\r\n    waiting: 0,\r\n    default: 1,\r\n    evaluated: 2,\r\n    imported: 3,\r\n  };\r\n  private viewStateSelected$ = new BehaviorSubject<number>(this.viewStates.default);\r\n  private evaluationResult$ = new BehaviorSubject<EvaluateContentResult>(null);\r\n  private importResult$ = new BehaviorSubject<ImportContentResult>(null);\r\n  viewModel$ = combineLatest([\r\n    this.contentType$, this.loading$, this.viewStateSelected$, this.evaluationResult$, this.importResult$,\r\n  ]).pipe(\r\n    map(([contentType, loading, viewStateSelected, evaluationResult, importResult]) =>\r\n      ({ contentType, loading, viewStateSelected, evaluationResult, importResult })),\r\n  );\r\n  errors: Record<number, string> = {\r\n    0: 'Unknown error occured.',\r\n    1: 'Selected content-type does not exist.',\r\n    2: 'Document is not a valid XML file.',\r\n    3: 'Selected content-type does not match the content-type in the XML file.',\r\n    4: 'The language is not supported.',\r\n    5: 'The document does not specify all languages for all entities.',\r\n    6: 'Language reference cannot be parsed, the language is not supported.',\r\n    7: 'Language reference cannot be parsed, the read-write protection is not supported.',\r\n    8: 'Value cannot be read, because of it has an invalid format.'\r\n  };\r\n\r\n  private contentTypeStaticName = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: ContentImportDialogData,\r\n    private dialogRef: MatDialogRef<ContentImportComponent>,\r\n    private route: ActivatedRoute,\r\n    private contentImportService: ContentImportService,\r\n    private appDialogConfigService: AppDialogConfigService,\r\n    private contentTypesService: ContentTypesService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loading$.next(true);\r\n    const contentType$ = this.contentTypesService.retrieveContentType(this.contentTypeStaticName);\r\n    const dialogSettings$ = this.appDialogConfigService.getCurrent$();\r\n    forkJoin([contentType$, dialogSettings$]).subscribe(([contentType, dialogSettings]) => {\r\n      this.contentType$.next(contentType);\r\n      this.formValues = {\r\n        defaultLanguage: dialogSettings.Context.Language.Primary,\r\n        contentType: this.contentTypeStaticName,\r\n        file: this.dialogData.files != null ? this.dialogData.files[0] : null,\r\n        resourcesReferences: 'Keep',\r\n        clearEntities: 'None',\r\n      };\r\n      this.loading$.next(false);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.contentType$.complete();\r\n    this.loading$.complete();\r\n    this.viewStateSelected$.complete();\r\n    this.evaluationResult$.complete();\r\n    this.importResult$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  evaluateContent() {\r\n    this.viewStateSelected$.next(this.viewStates.waiting);\r\n    this.contentImportService.evaluateContent(this.formValues).subscribe(result => {\r\n      this.evaluationResult$.next(result);\r\n      this.viewStateSelected$.next(this.viewStates.evaluated);\r\n    });\r\n  }\r\n\r\n  importContent() {\r\n    this.viewStateSelected$.next(this.viewStates.waiting);\r\n    this.contentImportService.importContent(this.formValues).subscribe(result => {\r\n      this.importResult$.next(result);\r\n      this.viewStateSelected$.next(this.viewStates.imported);\r\n    });\r\n  }\r\n\r\n  back() {\r\n    this.viewStateSelected$.next(this.viewStates.default);\r\n    this.evaluationResult$.next(null);\r\n  }\r\n\r\n  fileChange(event: Event) {\r\n    this.formValues.file = (event.target as HTMLInputElement).files[0];\r\n  }\r\n\r\n  filesDropped(files: File[]) {\r\n    const importFile = files[0];\r\n    this.formValues.file = importFile;\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, HostListener, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { BaseSubsinkComponent } from '../components/base-subsink-component/base-subsink.component';\r\n\r\n@Directive({ selector: '[appDragAndDrop]' })\r\nexport class DragAndDropDirective extends BaseSubsinkComponent implements OnInit, OnDestroy {\r\n  @Input() markStyle: 'outline' | 'fill' | 'shadow' = 'outline';\r\n  /** Comma separated file types, e.g. 'txt,doc,docx' */\r\n  @Input() allowedFileTypes = '';\r\n  @Output() private filesDropped = new EventEmitter<File[]>();\r\n\r\n  private element: HTMLElement;\r\n  private dropAreaClass = 'eav-droparea';\r\n  private markStyleClass: string;\r\n  private dragClass = 'eav-dragover';\r\n  private timeouts: number[] = [];\r\n\r\n  constructor(elementRef: ElementRef, private zone: NgZone, private snackBar: MatSnackBar) {\r\n    super();\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.markStyleClass = `eav-droparea-${this.markStyle}`;\r\n    this.element.classList.add(this.dropAreaClass, this.markStyleClass);\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscription.add(\r\n        fromEvent<DragEvent>(this.element, 'dragover').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.clearTimeouts();\r\n          this.element.classList.add(this.dragClass);\r\n        })\r\n      );\r\n      this.subscription.add(\r\n        fromEvent<DragEvent>(this.element, 'dragleave').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.timeouts.push(\r\n            window.setTimeout(() => { this.element.classList.remove(this.dragClass); }, 50)\r\n          );\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dropAreaClass, this.markStyleClass, this.dragClass);\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(event: DragEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dragClass);\r\n    const fileList = event.dataTransfer.files;\r\n    let files = Array.from(fileList);\r\n    files = this.filterTypes(files, this.allowedFileTypes);\r\n    if (files.length > 0) {\r\n      this.filesDropped.emit(files);\r\n    }\r\n  }\r\n\r\n  private clearTimeouts() {\r\n    for (const timeout of this.timeouts) {\r\n      clearTimeout(timeout);\r\n    }\r\n    this.timeouts = [];\r\n  }\r\n\r\n  private filterTypes(files: File[], allowedFileTypes: string) {\r\n    if (allowedFileTypes === '') { return files; }\r\n\r\n    const allowedTypes = allowedFileTypes.split(',').map(type => type.toLocaleLowerCase());\r\n    const filtered = files.filter(file => {\r\n      const extIndex = file.name.lastIndexOf('.');\r\n      if (extIndex <= 0) { return false; }\r\n      const ext = file.name.substring(extIndex + 1).toLocaleLowerCase();\r\n      const allowed = allowedTypes.includes(ext);\r\n      return allowed;\r\n    });\r\n\r\n    if (files.length !== filtered.length) {\r\n      const allowedTypesString = this.allowedFileTypes.replace(/\\,/g, ', ');\r\n      const message = filtered.length\r\n        ? 'Some files were filtered out. This drop location only accepts file types: ' + allowedTypesString\r\n        : 'This drop location only accepts file types: ' + allowedTypesString;\r\n      this.snackBar.open(message, null, { duration: 5000 });\r\n    }\r\n    return filtered;\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}