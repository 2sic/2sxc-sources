{"version":3,"file":"projects_eav-ui_src_app_apps-management_apps-management-nav_apps-management-nav_component_ts.1f6cee5735d01912.js","mappings":"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","names":["AppsManagementNavItems","name","path","icon","tippy","child","i0","breadcrumb_r7","AppsManagementNavComponent_Conditional_0_ng_container_8_Conditional_1_Template","last_r9","_r18","_r5","opened","AppsManagementNavComponent_Conditional_0_ng_container_8_Template","AppsManagementNavComponent_Conditional_0_ng_template_9_Template","ctx_r19","closeDialog","AppsManagementNavComponent_Conditional_0_For_19_Template","_forTrack1","ctx_r0","zoneId","_r4","smallScreen","matches","sideNavOpened","navItems","AppsManagementNavComponent","BaseComponent","constructor","router","route","dialogRef","context","media","appDialogConfigService","super","this","currentPath$","combineLatest","events","pipe","filter","event","NavigationEnd","map","snapshot","firstChild","url","startWith","paths","viewModel$","currentPath","matchMedia","ngOnInit","fetchDialogSettings","subscription","add","refreshOnChildClosedShallow","subscribe","addEventListener","c","sidenav","mode","ngOnDestroy","close","getShared$","static","t","i1","i2","i3","i4","i5","core","In1","selectors","viewQuery","rf","ctx","AppsManagementNavComponent_Conditional_0_Template","AppsManagementNavComponent_contFlowTmp"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/apps-management/apps-management-nav/managment-nav-items.ts","./projects/eav-ui/src/app/apps-management/apps-management-nav/apps-management-nav.component.html","./projects/eav-ui/src/app/apps-management/apps-management-nav/apps-management-nav.component.ts"],"sourcesContent":["import { NavItem } from \"../../shared/models/nav-item.model\";\r\n\r\nexport const AppsManagementNavItems: NavItem[] = [\r\n  {\r\n    name: 'System', path: 'system', icon: 'settings', tippy: 'System Info', child: [\r\n      { name: 'Register', path: 'registration', icon: 'how_to_reg', tippy: 'Register this System on 2sxc Patrons' },\r\n    ]\r\n  },\r\n  { name: 'Apps', path: 'list', icon: 'star_border', tippy: 'Apps' },\r\n  { name: 'Languages', path: 'languages', icon: 'translate', tippy: 'Languages' },\r\n  { name: 'Extensions / Features', path: 'license', icon: 'tune', tippy: 'Extensions and Features' },\r\n];\r\n","@if (viewModel$ | async; as vm) {\r\n<mat-toolbar>\r\n  <div class=\"toolbar-container\">\r\n    <!-- Mat Icon Menu -->\r\n    <mat-icon class=\"menu-container\" (click)=\"sidenav.opened = !sidenav.opened\">menu</mat-icon>\r\n    <!-- App Name -->\r\n    <div>\r\n      <span> Manage Zone {{ zoneId }} </span>\r\n    </div>\r\n    <!-- Breadcrum in the Toolbar after show Img and Aoo Name -->\r\n    <xng-breadcrumb [separator]=\"emptyTemplate\">\r\n      <ng-container *xngBreadcrumbItem=\"let breadcrumb; let info = info; let last = last\">\r\n        @if (last) {\r\n        <mat-icon class=\"breadcrumb-icon\">chevron_right</mat-icon>\r\n        {{ breadcrumb }}\r\n        }\r\n      </ng-container>\r\n    </xng-breadcrumb>\r\n    <ng-template #emptyTemplate></ng-template>\r\n  </div>\r\n  <span class=\"toolbar-spacer\"></span>\r\n  <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n    <mat-icon>close</mat-icon>\r\n  </button>\r\n</mat-toolbar>\r\n<mat-sidenav-container>\r\n  <mat-sidenav #sidenav [mode]=\"smallScreen.matches ? 'over' : 'side'\" [opened]=\"sideNavOpened\">\r\n    @for (navItem of navItems; track navItem.path) {\r\n    <app-nav-item-list [navItem]=\"navItem\"></app-nav-item-list>\r\n    }\r\n\r\n    <div class=\"sideNav-bottom-info\">\r\n      <p>use Burger icon to show/hide menu</p>\r\n    </div>\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content>\r\n    <div class=\"container-content\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { combineLatest, filter, map, startWith } from 'rxjs';\r\nimport { BaseComponent } from '../../shared/components/base-component/base.component';\r\nimport { Context } from '../../shared/services/context';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { AppDialogConfigService } from '../../app-administration/services';\r\nimport { AppsManagementNavItems } from './managment-nav-items';\r\n\r\n@Component({\r\n  selector: 'app-apps-management-nav',\r\n  templateUrl: './apps-management-nav.component.html',\r\n  styleUrls: ['./apps-management-nav.component.scss'],\r\n})\r\nexport class AppsManagementNavComponent extends BaseComponent implements OnInit, OnDestroy {\r\n\r\n  zoneId = this.context.zoneId;\r\n\r\n\r\n  private currentPath$ = combineLatest([\r\n    this.router.events.pipe(\r\n      filter((event) => event instanceof NavigationEnd),\r\n      map(() => this.route.snapshot.firstChild.url[0].path),\r\n      startWith(this.route.snapshot.firstChild.url[0].path)\r\n    ),\r\n  ]).pipe(\r\n    map(([paths]) => {\r\n      if (paths == null) return;\r\n      return paths;\r\n    })\r\n  );\r\n\r\n  // Generate View Model\r\n  viewModel$ = combineLatest([this.currentPath$]).pipe(\r\n    map(([currentPath]) => {\r\n      return {\r\n        currentPath,\r\n      };\r\n    })\r\n  );\r\n\r\n  smallScreen: MediaQueryList = this.media.matchMedia('(max-width: 1000px)');\r\n  @ViewChild('sidenav') sidenav!: MatSidenav;\r\n  sideNavOpened = !this.smallScreen.matches;\r\n\r\n  navItems = AppsManagementNavItems;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<AppsManagementNavComponent>,\r\n    private context: Context,\r\n    private media: MediaMatcher,\r\n    private appDialogConfigService: AppDialogConfigService,\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.fetchDialogSettings();\r\n    this.subscription.add(\r\n      this.refreshOnChildClosedShallow().subscribe(() => {\r\n        this.fetchDialogSettings();\r\n      })\r\n    );\r\n\r\n    this.smallScreen.addEventListener(\r\n      'change',\r\n      (c) => (\r\n        this.sidenav.opened = !c.matches,\r\n        this.sidenav.mode = c.matches ? 'over' : 'side'\r\n      )\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  // @2dg not longer in use with new routing SideNav\r\n  // changeUrl(path: string) {\r\n  //   this.router.navigate([path], { relativeTo: this.route });\r\n  // }\r\n\r\n  private fetchDialogSettings() {\r\n    this.appDialogConfigService.getShared$(0).subscribe();\r\n  }\r\n\r\n}\r\n"],"x_google_ignoreList":[]}