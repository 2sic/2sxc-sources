{"version":3,"file":"projects_eav-ui_src_app_content-type-fields_content-type-fields_component_ts.25786ab4cf974174.js","mappings":"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","names":["i0","_r9","ctx_r8","openMetadata","ctx_r0","metadataCount","ctx_r1","_r11","ctx_r10","shareOrInherit","ctx_r2","shareText","shareOrInheritIcon","_r13","ctx_r12","ctx_r3","_r15","ctx_r14","openPermissions","ctx_r4","field","Permissions","Count","ctx_r5","_r17","ctx_r16","rename","ctx_r18","deleteField","ctx_r7","EditInfo","DisableRename","DisableDelete","IsTitle","ContentTypeFieldsActionsComponent","_class","BaseSubsinkComponent","constructor","super","ngOnDestroy","agInit","params","this","data","Metadata","Object","keys","filter","key","length","enablePermissions","InputType","InputTypeConstants","StringWysiwyg","Type","DataTypeConstants","Hyperlink","clickToConfigure","ss","SysSettings","Share","Guid","InheritMetadataOf","refresh","onOpenMetadata","onRename","onOpenPermissions","onDelete","onShareOrInherit","selectors","features","decls","vars","consts","template","rf","ctx","ContentTypeFieldsActionsComponent_div_1_Template","ContentTypeFieldsActionsComponent_div_2_Template","ContentTypeFieldsActionsComponent_div_3_Template","ContentTypeFieldsActionsComponent_div_4_Template","ContentTypeFieldsActionsComponent_div_5_Template","ContentTypeFieldsActionsComponent_div_6_Template","ContentTypeFieldsActionsComponent_ng_template_12_Template","DisableMetadata","DisableEdit","_r6","_r3","changeInputType","value","ContentTypeFieldsInputTypeComponent","onChangeInputType","ContentTypeFieldsInputTypeComponent_div_0_Template","ContentTypeFieldsInputTypeComponent_div_1_Template","ContentTypeFieldsSpecialComponent","hasFormulas","HasFormulas","isEphemeral","IsEphemeral","ContentTypeFieldsSpecialComponent_mat_icon_1_Template","ContentTypeFieldsSpecialComponent_mat_icon_2_Template","setTitle","isTitle","ContentTypeFieldsTitleComponent","onSetTitle","ContentTypeFieldsTitleComponent_div_1_Template","ContentTypeFieldsTitleComponent_div_2_Template","ReadOnly","ContentTypeFieldsTypeComponent","icon","calculateTypeIcon","SharingOrInheriting","None","Sharing","Inheriting","closeDialog","message","dialogData","_r12","ctx_r11","chooseShare","_r14","ctx_r13","chooseInherit","field_r24","ContentType","Name","field_r25","StaticName","field_r26","row_r27","_r29","$implicit","ctx_r28","inheritField","_c0","ctx_r23","guid","ShareOrInheritDialogComponent_div_9_mat_card_4_th_3_Template","ShareOrInheritDialogComponent_div_9_mat_card_4_td_4_Template","ShareOrInheritDialogComponent_div_9_mat_card_4_th_6_Template","ShareOrInheritDialogComponent_div_9_mat_card_4_td_7_Template","ShareOrInheritDialogComponent_div_9_mat_card_4_th_9_Template","ShareOrInheritDialogComponent_div_9_mat_card_4_td_10_Template","ShareOrInheritDialogComponent_div_9_mat_card_4_tr_11_Template","ShareOrInheritDialogComponent_div_9_mat_card_4_tr_12_Template","vm_r15","shareableFields","displayedShareableFieldsColumns","ShareOrInheritDialogComponent_div_9_button_1_Template","ShareOrInheritDialogComponent_div_9_button_2_Template","ShareOrInheritDialogComponent_div_9_span_3_Template","ShareOrInheritDialogComponent_div_9_mat_card_4_Template","state","sharingOrInheriting","viewModel$","_r31","ctx_r30","ctx_r32","save","isSaveDisabled","ShareOrInheritDialogComponent","dialogRef","contentTypesFieldsService","featuresService","dialog","viewContainerRef","changeDetectorRef","initialState","shareableFields$","BehaviorSubject","undefined","ngOnInit","title","getShareableFieldsFor","AttributeId","combineLatest","pipe","map","next","isEnabled$","FeatureNames","FieldShareConfigManagement","take","subscribe","isEnabled","subscription","add","share","Id","close","inherit","FeatureComponentBase","openDialog","MAT_DIALOG_DATA","i1","i2","i3","ShareOrInheritDialogComponent_button_5_Template","ShareOrInheritDialogComponent_div_7_Template","ShareOrInheritDialogComponent_div_8_Template","ShareOrInheritDialogComponent_div_9_Template","ShareOrInheritDialogComponent_div_10_Template","$event","onRowDragEnter","onRowDragEnd","ctx_r6","onRowDragMove","onGridReady","onSortChanged","ctx_r9","onFilterChanged","vm_r1","contentType","Label","fields","gridOptions","sortApplied","filterApplied","ContentTypeFieldsComponent","BaseComponent","router","route","contentTypesService","snackBar","contentType$","fields$","buildGridOptions","rowDragSuppressed","contentTypeStaticName","snapshot","paramMap","get","fetchFields","refreshOnChildClosedShallow","complete","gridApi","api","columnApi","event","setEnableCellTextSelection","setSuppressRowDrag","idArray","reOrder","movingNode","node","overNode","overData","newFields","fromIndex","indexOf","toIndex","moveInArray","clearFocusedCell","arr","element","splice","columnStates","getColumnState","some","sort","suppressRowDrag","filterModel","getFilterModel","fieldsFiltered","shouldSuppress","navigate","relativeTo","nameCellRenderer","currentField","inputType","EmptyFieldHelpers","endsPreviousGroup","isGroupOpen","isGroupStart","isGroupEnd","callback","retrieveContentType","of","getFields","forkJoin","editFieldMetadata","ConfigTypes","open","duration","form","items","t","createItemDefinition","console","warn","formUrl","convertFormToUrl","metadataType","keyForMdLookup","replace","newItemTypeName","existingMd","EntityId","ContentTypeName","For","Target","eavConstants","metadata","attribute","target","TargetType","targetType","Number","Prefill","delete","confirm","GoToPermissions","getUrlAttribute","url","GoToMetadata","autoFocus","width","afterClosed","defaultGridOptions","getRowClass","rowClass","DisableSort","push","columnDefs","rowDrag","cellClass","split","valueGetter","cellRenderer","cellRendererParams","flex","minWidth","sortable","onCellClicked","headerClass","headerName","substring","All","Notes","pinned","i4","i5","ContentTypeFieldsComponent_div_0_Template","FeatureIconIndicatorComponent","FeatureIconIndicatorComponent_mat_icon_0_Template","show$","AppSyncWithSiteFiles","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","LightSpeed","ContentSecurityPolicy","PermissionsByLanguage","id_r4","ngIf","copyToClipboard","link_r7","findOutMore","FeatureInfoDialogComponent_mat_card_0_div_15_Template","FeatureInfoDialogComponent_mat_card_0_button_17_Template","feature","Description","Enabled","NameId","Link","FeatureInfoDialogComponent","featureDetailService","getFeatureDetails","text","link","window","FeatureInfoDialogComponent_mat_card_0_Template","featureNameId","featureNameId$","showIf","showIf$","feature$","switchMap","featName","get$","feat","featureId","markForCheck","inputs","refreshOnChildClosedDeep","events","NavigationEnd","startWith","firstChild","pairwise","hadChild","hasChild","accentedSort","animateRows","enableCellTextSelection","headerHeight","suppressScrollOnNewData","valueCache","defaultColDef","filterParams","newRowsAction","tooltipShowDelay","tooltipHideDelay","suppressMovableColumns","ToggleDebugDirective","globalConfigService","onClick","navigator","platform","match","metaKey","ctrlKey","shiftKey","altKey","toggleDebugEnabled","getSelection","removeAllRanges","hostBindings","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","selected","rangeCount","getRangeAt","select","execCommand","removeChild","addRange","SafeHtmlPipe","sanitizer","transform","html","bypassSecurityTrustHtml","pure"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/content-type-fields/content-type-fields-actions/content-type-fields-actions.component.html","./projects/eav-ui/src/app/content-type-fields/content-type-fields-actions/content-type-fields-actions.component.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields-input-type/content-type-fields-input-type.component.html","./projects/eav-ui/src/app/content-type-fields/content-type-fields-input-type/content-type-fields-input-type.component.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields-special/content-type-fields-special.component.html","./projects/eav-ui/src/app/content-type-fields/content-type-fields-special/content-type-fields-special.component.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields-title/content-type-fields-title.component.html","./projects/eav-ui/src/app/content-type-fields/content-type-fields-title/content-type-fields-title.component.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields-type/content-type-fields-type.component.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields-type/content-type-fields-type.component.html","./projects/eav-ui/src/app/content-type-fields/share-or-inherit-dialog/share-or-inherit-dialog-models.ts","./projects/eav-ui/src/app/content-type-fields/share-or-inherit-dialog/share-or-inherit-dialog.component.html","./projects/eav-ui/src/app/content-type-fields/share-or-inherit-dialog/share-or-inherit-dialog.component.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields.component.html","./projects/eav-ui/src/app/content-type-fields/content-type-fields.component.ts","./projects/eav-ui/src/app/features/feature-icon-indicator/feature-icon-indicator.component.html","./projects/eav-ui/src/app/features/feature-icon-indicator/feature-icon-indicator.component.ts","./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts","./projects/eav-ui/src/app/shared/components/base-component/base.component.ts","./projects/eav-ui/src/app/shared/constants/default-grid-options.constants.ts","./projects/eav-ui/src/app/shared/directives/toggle-debug.directive.ts","./projects/eav-ui/src/app/shared/helpers/copy-to-clipboard.helper.ts","./projects/eav-ui/src/app/shared/pipes/safe-html.pipe.ts"],"sourcesContent":["<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple *ngIf=\"!field.EditInfo.DisableMetadata\" tippy=\"Metadata\"\r\n    (click)=\"openMetadata()\">\r\n    <mat-icon [matBadge]=\"metadataCount\" matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadgeHidden]=\"!metadataCount\"\r\n      matBadgePosition=\"below after\" aria-hidden=\"false\">local_offer</mat-icon>\r\n  </div>\r\n  <div class=\"eav-grid-action-button disabled\" *ngIf=\"field.EditInfo.DisableMetadata\">\r\n    <mat-icon [matBadge]=\"metadataCount\" matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadgeDisabled=\"true\"\r\n      [matBadgeHidden]=\"!metadataCount\" matBadgePosition=\"below after\" aria-hidden=\"false\">\r\n      local_offer\r\n    </mat-icon>\r\n  </div>\r\n\r\n  <!--\r\n    TODO: @SDV pls enhance as follows\r\n    ✅ If share is on or InheritMetadata is on, show various icons (already done)\r\n    ⬛ If neither is on, it should not show an icon, until mouseover, then it should show the share icon to indicate it can be added\r\n    ⬛ If the click should add sharing, open a dialog to configure share\r\n        - if there is no share it should Title \"Field Metadata Sharing\" show with the question \"Do you want to enable sharing to this field?\"\r\n          - if yes, it should call an endpoint on field/share(appId, attributeId, share: true, hide: false) (just add a todo in the code which will call the endpoint)\r\n        - If Share is already enabled, the Title should be \"Field Metadata Sharing\" (same) and content \"Shared as: [field.Guid]\"\r\n        - If it's in inherit mode, different dialog Title \"Field Inherits Metadata\", content \"Inherits from: [field.SysSettings.InheritMetadataOf]\"\r\n          - there is no endpoint to call here, because inherit is configured on create (separate todo)\r\n  -->\r\n\r\n  <!-- *ngIf is necessary as empty mat icon still consumes some space-->\r\n  <div class=\"eav-grid-action-button highlight\" *ngIf=\"shareOrInheritIcon() != ''\" \r\n    matRipple [tippy]=\"shareText()\" (click)=\"shareOrInherit()\">\r\n    <mat-icon aria-hidden=\"false\">\r\n      {{ shareOrInheritIcon() }}\r\n    </mat-icon>\r\n  </div>\r\n  <div class=\"eav-grid-action-button disabled eav-hover-icon-div\" *ngIf=\"shareOrInheritIcon() == ''\" \r\n    matRipple [tippy]=\"shareText()\" (click)=\"shareOrInherit()\">\r\n    <mat-icon aria-hidden=\"false\" class=\"eav-hover-icon disabled\">\r\n      share\r\n    </mat-icon>\r\n  </div>\r\n\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Permissions\"\r\n    *ngIf=\"!field.EditInfo.DisableEdit && enablePermissions\" (click)=\"openPermissions()\">\r\n    <mat-icon [matBadge]=\"field.Permissions.Count\" matBadgeColor=\"accent\" matBadgeSize=\"small\"\r\n      [matBadgeHidden]=\"!field.Permissions.Count\" matBadgePosition=\"below after\" aria-hidden=\"false\">\r\n      person\r\n    </mat-icon>\r\n  </div>\r\n  <div class=\"eav-grid-action-button disabled\" *ngIf=\"field.EditInfo.DisableEdit || !enablePermissions\">\r\n    <mat-icon [matBadge]=\"field.Permissions.Count\" matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadgeDisabled=\"true\"\r\n      [matBadgeHidden]=\"!field.Permissions.Count\" matBadgePosition=\"below after\" aria-hidden=\"false\">\r\n      person\r\n    </mat-icon>\r\n  </div>\r\n\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"More\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"grid-more-menu\">\r\n  <ng-template matMenuContent>\r\n    <button mat-menu-item [disabled]=\"field.EditInfo.DisableRename\" (click)=\"rename()\">\r\n      <mat-icon>text_fields</mat-icon>\r\n      <span>Rename</span>\r\n    </button>\r\n    <button mat-menu-item [disabled]=\"field.EditInfo.DisableDelete || field.IsTitle\" (click)=\"deleteField()\">\r\n      <mat-icon>delete</mat-icon>\r\n      <span>Delete</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy } from '@angular/core';\r\nimport { DataTypeConstants } from '../constants/data-type.constants';\r\nimport { InputTypeConstants } from '../constants/input-type.constants';\r\nimport { Field } from '../models/field.model';\r\nimport { ContentTypeFieldsActionsParams } from './content-type-fields-actions.models';\r\nimport { BaseSubsinkComponent } from '../../shared/components/base-subsink-component/base-subsink.component';\r\n\r\n@Component({\r\n  selector: 'app-content-type-fields-actions',\r\n  templateUrl: './content-type-fields-actions.component.html',\r\n  styleUrls: ['./content-type-fields-actions.component.scss'],\r\n})\r\nexport class ContentTypeFieldsActionsComponent extends BaseSubsinkComponent implements ICellRendererAngularComp, OnDestroy {\r\n  field: Field;\r\n  metadataCount: number;\r\n  enablePermissions: boolean;\r\n  private params: ICellRendererParams & ContentTypeFieldsActionsParams;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n  \r\n  ngOnDestroy(): void { \r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  agInit(params: ICellRendererParams & ContentTypeFieldsActionsParams): void {\r\n    this.params = params;\r\n    this.field = this.params.data;\r\n    this.metadataCount = this.field.Metadata ? Object.keys(this.field.Metadata).filter(key => key !== 'merged').length : 0;\r\n    this.enablePermissions = this.field.InputType === InputTypeConstants.StringWysiwyg || this.field.Type === DataTypeConstants.Hyperlink;\r\n  }\r\n\r\n  // #region Sharing Info for better icons #SharedFieldDefinition\r\n\r\n  shareText(): string {\r\n    const clickToConfigure = 'click to configure sharing';\r\n    const ss = this.field.SysSettings;\r\n    if (!ss) return clickToConfigure;\r\n    return ss.Share \r\n      ? 'shared enabled as ' + this.field.Guid\r\n      : ss.InheritMetadataOf\r\n        ? 'inherits ' + ss.InheritMetadataOf\r\n        : clickToConfigure;\r\n  }\r\n\r\n  shareOrInheritIcon(): string {\r\n    const ss = this.field.SysSettings;\r\n    if (!ss) return '';\r\n    return ss.Share \r\n      ? 'share'\r\n      : ss.InheritMetadataOf ? 'adjust' : '';\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region Callback Actions\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  openMetadata(): void {\r\n    this.params.onOpenMetadata(this.field);\r\n  }\r\n\r\n  rename(): void {\r\n    this.params.onRename(this.field);\r\n  }\r\n\r\n  openPermissions(): void {\r\n    this.params.onOpenPermissions(this.field);\r\n  }\r\n\r\n  deleteField(): void {\r\n    this.params.onDelete(this.field);\r\n  }\r\n\r\n  shareOrInherit(): void {\r\n    this.params.onShareOrInherit(this.field);\r\n  }\r\n\r\n  // #endregion\r\n}\r\n","<div matRipple class=\"input-component highlight\" *ngIf=\"!field.EditInfo.DisableEdit\" (click)=\"changeInputType()\">\r\n  <div class=\"text\">{{ value }}</div>\r\n  <div class=\"eav-grid-action-button\">\r\n    <mat-icon>arrow_drop_down</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"input-component disabled\" *ngIf=\"field.EditInfo.DisableEdit\">\r\n  <div class=\"text disabled\">{{ value }}</div>\r\n  <div class=\"eav-grid-action-button disabled\">\r\n    <mat-icon>arrow_drop_down</mat-icon>\r\n  </div>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Field } from '../models/field.model';\r\nimport { ContentTypeFieldsInputTypeParams } from './content-type-fields-input-type.models';\r\n\r\n@Component({\r\n  selector: 'app-content-type-fields-input-type',\r\n  templateUrl: './content-type-fields-input-type.component.html',\r\n  styleUrls: ['./content-type-fields-input-type.component.scss'],\r\n})\r\nexport class ContentTypeFieldsInputTypeComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n  field: Field;\r\n\r\n  private params: ICellRendererParams & ContentTypeFieldsInputTypeParams;\r\n\r\n  agInit(params: ICellRendererParams & ContentTypeFieldsInputTypeParams): void {\r\n    this.params = params;\r\n    this.value = params.value;\r\n    this.field = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  changeInputType(): void {\r\n    this.params.onChangeInputType(this.field);\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon *ngIf=\"hasFormulas\" tippy=\"Has Formulas\">functions</mat-icon>\r\n  <mat-icon *ngIf=\"isEphemeral\" tippy=\"Ephemeral / Temporary, won't save\">mobiledata_off</mat-icon>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Field } from '../models/field.model';\r\n\r\n@Component({\r\n  selector: 'app-content-type-fields-special',\r\n  templateUrl: './content-type-fields-special.component.html',\r\n  styleUrls: ['./content-type-fields-special.component.scss'],\r\n})\r\nexport class ContentTypeFieldsSpecialComponent implements ICellRendererAngularComp {\r\n  hasFormulas: boolean;\r\n  isEphemeral: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    const field: Field = params.data;\r\n    this.hasFormulas = field.HasFormulas;\r\n    this.isEphemeral = field.IsEphemeral;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple *ngIf=\"!field.EditInfo.ReadOnly\" tippy=\"Use as title field\"\r\n    (click)=\"setTitle()\">\r\n    <mat-icon>{{ isTitle ? 'star' : 'star_outline' }}</mat-icon>\r\n  </div>\r\n  <div class=\"eav-grid-action-button disabled\" *ngIf=\"field.EditInfo.ReadOnly\">\r\n    <mat-icon>{{ isTitle ? 'star' : 'star_outline' }}</mat-icon>\r\n  </div>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Field } from '../models/field.model';\r\nimport { ContentTypeFieldsTitleParams } from './content-type-fields-title.models';\r\n\r\n@Component({\r\n  selector: 'app-content-type-fields-title',\r\n  templateUrl: './content-type-fields-title.component.html',\r\n  styleUrls: ['./content-type-fields-title.component.scss'],\r\n})\r\nexport class ContentTypeFieldsTitleComponent implements ICellRendererAngularComp {\r\n  isTitle: boolean;\r\n  field: Field;\r\n\r\n  private params: ICellRendererParams & ContentTypeFieldsTitleParams;\r\n\r\n  agInit(params: ICellRendererParams & ContentTypeFieldsTitleParams): void {\r\n    this.params = params;\r\n    this.isTitle = params.value;\r\n    this.field = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  setTitle(): void {\r\n    this.params.onSetTitle(this.field);\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { calculateTypeIcon } from '../content-type-fields.helpers';\r\n\r\n@Component({\r\n  selector: 'app-content-type-fields-type',\r\n  templateUrl: './content-type-fields-type.component.html',\r\n  styleUrls: ['./content-type-fields-type.component.scss'],\r\n})\r\nexport class ContentTypeFieldsTypeComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n  icon: string;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.icon = calculateTypeIcon(this.value);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\" [tippy]=\"value\">\r\n  <mat-icon>{{ icon }}</mat-icon>\r\n</div>\r\n","import { Field } from \"../models/field.model\";\r\n\r\nexport interface ShareOrInheritDialogViewModel {\r\n  shareableFields: Field[];\r\n}\r\n\r\nexport enum SharingOrInheriting {\r\n  None,\r\n  Sharing,\r\n  Inheriting\r\n}","<div class=\"eav-dialog eav-no-scrollbar\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      {{ title | translate }}\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" *ngIf=\"initialState != sharingOrInheriting.None\"\r\n      (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <div *ngIf=\"initialState == sharingOrInheriting.Sharing\">{{ message | translate }} {{ dialogData.Guid }}</div>\r\n    <div *ngIf=\"initialState == sharingOrInheriting.Inheriting\">{{ message| translate }} {{\r\n      dialogData.SysSettings.InheritMetadataOf }}</div>\r\n    <div *ngIf=\"initialState == sharingOrInheriting.None\">\r\n      <button mat-raised-button type=\"button\" *ngIf=\"state == sharingOrInheriting.None\" class=\"eav-dialog-action-button\"\r\n        (click)=\"chooseShare()\">Share</button>\r\n      <button mat-raised-button type=\"button\" *ngIf=\"state == sharingOrInheriting.None\"\r\n        (click)=\"chooseInherit()\">Inherit</button>\r\n      <span *ngIf=\"state == sharingOrInheriting.Sharing\">This will share the field definition</span>\r\n      <mat-card class=\"eav-table-div\" *ngIf=\"state == sharingOrInheriting.Inheriting && viewModel$ | async as vm\">\r\n        <table mat-table [dataSource]=\"vm.shareableFields\" class=\"mat-elevation-z8 eav-fields-table\">\r\n          <ng-container matColumnDef=\"contentType\">\r\n            <th mat-header-cell *matHeaderCellDef> <b>Content Type</b> </th>\r\n            <td mat-cell *matCellDef=\"let field\"> {{field.ContentType.Name}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef> <b>Name</b> </th>\r\n            <td mat-cell *matCellDef=\"let field\"> {{field.StaticName}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"type\">\r\n            <th mat-header-cell *matHeaderCellDef> <b>Type</b> </th>\r\n            <td mat-cell *matCellDef=\"let field\"> {{field.Type}} </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedShareableFieldsColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedShareableFieldsColumns;\"\r\n            [ngClass]=\"{'eav-selected-row': guid === row.Guid}\" (click)=\"inheritField(row)\"></tr>\r\n        </table>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n  <div class=\"eav-dialog-actions\" *ngIf=\"initialState == sharingOrInheriting.None\">\r\n    <button mat-raised-button type=\"button\" class=\"eav-dialog-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n    <button mat-raised-button type=\"submit\" color=\"accent\" class=\"eav-dialog-action-button\" \r\n      [disabled]=\"isSaveDisabled\" (click)=\"save()\">\r\n      <div class=\"eav-button-feature\">\r\n        <span>Save</span>\r\n        <app-feature-icon-indicator class=\"eav-button-feature-icon\" [featureNameId]=\"'FieldShareConfigManagement'\"></app-feature-icon-indicator>\r\n      </div>\r\n    </button>\r\n  </div>\r\n</div>","import { ChangeDetectorRef, Component, Inject, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { BaseSubsinkComponent } from '../../shared/components/base-subsink-component/base-subsink.component';\r\nimport { BehaviorSubject, Observable, combineLatest, map, take } from 'rxjs';\r\nimport { Field } from '../models/field.model';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ContentTypesFieldsService } from '../services/content-types-fields.service';\r\nimport { ShareOrInheritDialogViewModel, SharingOrInheriting } from './share-or-inherit-dialog-models';\r\nimport { FeatureComponentBase } from '../../features/shared/base-feature.component';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureNames } from '../../features/feature-names';\r\n\r\n@Component({\r\n  selector: 'app-share-or-inherit-dialog',\r\n  templateUrl: './share-or-inherit-dialog.component.html',\r\n  styleUrls: ['./share-or-inherit-dialog.component.scss']\r\n})\r\nexport class ShareOrInheritDialogComponent extends BaseSubsinkComponent implements OnInit, OnDestroy {\r\n  displayedShareableFieldsColumns: string[] = ['contentType', 'name', 'type'];\r\n  title: string;\r\n  message: string;\r\n  state: SharingOrInheriting = SharingOrInheriting.None;\r\n  initialState: SharingOrInheriting = SharingOrInheriting.None;\r\n  sharingOrInheriting = SharingOrInheriting;\r\n  guid: string = null;\r\n  isSaveDisabled: boolean = true;\r\n\r\n  shareableFields$ = new BehaviorSubject<Field[]>(undefined);\r\n  viewModel$: Observable<ShareOrInheritDialogViewModel>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: Field,\r\n    private dialogRef: MatDialogRef<ShareOrInheritDialogComponent>,\r\n    private contentTypesFieldsService: ContentTypesFieldsService,\r\n    // All this is just for the feature dialog\r\n    private featuresService: FeaturesService,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialState = !this.dialogData.SysSettings || (!this.dialogData.SysSettings.Share && !this.dialogData.SysSettings.InheritMetadataOf)\r\n      ? SharingOrInheriting.None\r\n      : this.dialogData.SysSettings.Share\r\n        ? SharingOrInheriting.Sharing\r\n        : SharingOrInheriting.Inheriting;\r\n    if (this.initialState === SharingOrInheriting.None) {\r\n      this.title = 'SharingOrInheriting.TitleNone';\r\n      const shareableFields$ = this.contentTypesFieldsService.getShareableFieldsFor(this.dialogData.AttributeId);\r\n      this.viewModel$ = combineLatest([\r\n        shareableFields$\r\n      ]).pipe(\r\n        map(([shareableFields]) => {\r\n          this.shareableFields$.next(shareableFields);\r\n          return { shareableFields };\r\n        })\r\n      );\r\n    } else if (this.initialState === SharingOrInheriting.Sharing) {\r\n      this.title = 'SharingOrInheriting.TitleSharing';\r\n      this.message = 'SharingOrInheriting.MessageSharing';\r\n    } else if (this.initialState === SharingOrInheriting.Inheriting) {\r\n      this.title = 'SharingOrInheriting.TitleInheriting';\r\n      this.message = 'SharingOrInheriting.MessageInheriting';\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  chooseShare() {\r\n    this.guid = null;\r\n    this.state = SharingOrInheriting.Sharing;\r\n    this.isSaveDisabled = false;\r\n  }\r\n\r\n  chooseInherit() {\r\n    this.guid = null;\r\n    this.state = SharingOrInheriting.Inheriting;\r\n    this.isSaveDisabled = true;\r\n  }\r\n\r\n  inheritField(field: Field) {\r\n    this.guid = field.Guid;\r\n    this.isSaveDisabled = false;\r\n  }\r\n\r\n  save() {\r\n    this.featuresService.isEnabled$(FeatureNames.FieldShareConfigManagement).pipe(\r\n      take(1),\r\n    ).subscribe(isEnabled => {\r\n      if (!isEnabled) {\r\n        FeatureComponentBase.openDialog(this.dialog, FeatureNames.FieldShareConfigManagement, this.viewContainerRef, this.changeDetectorRef);\r\n      } else {\r\n        if (this.state == SharingOrInheriting.Sharing) {\r\n          this.subscription.add(this.contentTypesFieldsService.share(this.dialogData.Id)\r\n            .subscribe(() => this.dialogRef.close()));\r\n        } else if (this.state == SharingOrInheriting.Inheriting) {\r\n          this.subscription.add(this.contentTypesFieldsService.inherit(this.dialogData.Id, this.guid)\r\n            .subscribe(() => this.dialogRef.close()));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"eav-dialog nav-component-wrapper\" *ngIf=\"viewModel$ | async as vm\" appToggleDebug>\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      {{ vm.contentType?.Label || vm.contentType?.Name }} Fields\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content nav-component-wrapper\">\r\n    <router-outlet></router-outlet>\r\n    <div class=\"grid-wrapper\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.fields\" [gridOptions]=\"gridOptions\"\r\n        (rowDragEnter)=\"onRowDragEnter($event)\" (rowDragEnd)=\"onRowDragEnd($event)\" (rowDragMove)=\"onRowDragMove($event)\"\r\n        (gridReady)=\"onGridReady($event)\" (sortChanged)=\"onSortChanged($event)\" (filterChanged)=\"onFilterChanged($event)\"\r\n        [ngClass]=\"{\r\n            'grid-sorted': sortApplied,\r\n            'grid-filtered': filterApplied\r\n          }\">\r\n      </ag-grid-angular>\r\n    </div>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Add fields\"\r\n      [disabled]=\"vm.contentType == null || vm.contentType.EditInfo.ReadOnly\" (click)=\"add()\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>","// tslint:disable-next-line:max-line-length\r\nimport { ColumnApi, FilterChangedEvent, GridApi, GridOptions, GridReadyEvent, ICellRendererParams, RowClassParams, RowDragEvent, SortChangedEvent } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable, combineLatest, forkJoin, map, of } from 'rxjs';\r\nimport { ContentType } from '../app-administration/models/content-type.model';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { GoToPermissions } from '../permissions/go-to-permissions';\r\nimport { BaseComponent } from '../shared/components/base-component/base.component';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { ItemAddIdentifier, EditForm, ItemEditIdentifier } from '../shared/models/edit-form.model';\r\nimport { ContentTypeFieldsActionsComponent } from './content-type-fields-actions/content-type-fields-actions.component';\r\nimport { ContentTypeFieldsActionsParams } from './content-type-fields-actions/content-type-fields-actions.models';\r\nimport { ContentTypeFieldsInputTypeComponent } from './content-type-fields-input-type/content-type-fields-input-type.component';\r\n// tslint:disable-next-line:max-line-length\r\nimport { ContentTypeFieldsInputTypeParams } from './content-type-fields-input-type/content-type-fields-input-type.models';\r\nimport { ContentTypeFieldsSpecialComponent } from './content-type-fields-special/content-type-fields-special.component';\r\nimport { ContentTypeFieldsTitleComponent } from './content-type-fields-title/content-type-fields-title.component';\r\nimport { ContentTypeFieldsTitleParams } from './content-type-fields-title/content-type-fields-title.models';\r\nimport { ContentTypeFieldsTypeComponent } from './content-type-fields-type/content-type-fields-type.component';\r\nimport { Field } from './models/field.model';\r\nimport { ContentTypesFieldsService } from './services/content-types-fields.service';\r\nimport { EmptyFieldHelpers } from '../edit/form/fields/empty/empty-field-helpers';\r\nimport { ShareOrInheritDialogComponent } from './share-or-inherit-dialog/share-or-inherit-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-content-type-fields',\r\n  templateUrl: './content-type-fields.component.html',\r\n  styleUrls: ['./content-type-fields.component.scss'],\r\n})\r\nexport class ContentTypeFieldsComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  contentType$ = new BehaviorSubject<ContentType>(undefined);\r\n  fields$ = new BehaviorSubject<Field[]>(undefined);\r\n  gridOptions = this.buildGridOptions();\r\n  sortApplied = false;\r\n  filterApplied = false;\r\n\r\n  private gridApi: GridApi;\r\n  private columnApi: ColumnApi;\r\n  private rowDragSuppressed = false;\r\n  private contentTypeStaticName = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n\r\n  viewModel$: Observable<ContentTypeFieldsViewModel>;\r\n\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<ContentTypeFieldsComponent>,\r\n    private contentTypesService: ContentTypesService,\r\n    private contentTypesFieldsService: ContentTypesFieldsService,\r\n    private snackBar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchFields();\r\n    this.subscription.add(this.refreshOnChildClosedShallow().subscribe(() => { this.fetchFields(); }));\r\n    this.viewModel$ = combineLatest([\r\n      this.contentType$, this.fields$\r\n    ]).pipe(\r\n      map(([contentType, fields]) => ({ contentType, fields }))\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.contentType$.complete();\r\n    this.fields$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onGridReady(params: GridReadyEvent) {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n  }\r\n\r\n  onRowDragEnter(event: RowDragEvent) {\r\n    this.gridApi.setEnableCellTextSelection(false);\r\n  }\r\n\r\n  onRowDragEnd(event: RowDragEvent) {\r\n    this.gridApi.setSuppressRowDrag(true);\r\n    const idArray = this.fields$.value.map(field => field.Id);\r\n    this.contentTypesFieldsService.reOrder(idArray, this.contentType$.value).subscribe(() => {\r\n      this.fetchFields(() => {\r\n        this.gridApi.setEnableCellTextSelection(true);\r\n        this.gridApi.setSuppressRowDrag(false);\r\n      });\r\n    });\r\n  }\r\n\r\n  onRowDragMove(event: RowDragEvent) {\r\n    const movingNode = event.node;\r\n    const overNode = event.overNode;\r\n    if (!overNode) { return; }\r\n    const rowNeedsToMove = movingNode !== overNode;\r\n    if (rowNeedsToMove) {\r\n      const movingData: Field = movingNode.data;\r\n      const overData: Field = overNode.data;\r\n      const newFields = [...this.fields$.value];\r\n      const fromIndex = newFields.indexOf(movingData);\r\n      const toIndex = newFields.indexOf(overData);\r\n      this.moveInArray(newFields, fromIndex, toIndex);\r\n      this.fields$.next(newFields);\r\n      this.gridApi.clearFocusedCell();\r\n    }\r\n  }\r\n\r\n  private moveInArray(arr: Field[], fromIndex: number, toIndex: number) {\r\n    const element = arr[fromIndex];\r\n    arr.splice(fromIndex, 1);\r\n    arr.splice(toIndex, 0, element);\r\n  }\r\n\r\n  onSortChanged(params: SortChangedEvent) {\r\n    const columnStates = this.columnApi.getColumnState();\r\n    this.sortApplied = columnStates.some(state => state.sort != null);\r\n    this.suppressRowDrag();\r\n  }\r\n\r\n  onFilterChanged(params: FilterChangedEvent) {\r\n    const filterModel = this.gridApi.getFilterModel();\r\n    const fieldsFiltered = Object.keys(filterModel);\r\n    this.filterApplied = fieldsFiltered.length > 0;\r\n    this.suppressRowDrag();\r\n  }\r\n\r\n  private suppressRowDrag() {\r\n    const shouldSuppress = this.sortApplied || this.filterApplied;\r\n    if (shouldSuppress && !this.rowDragSuppressed) {\r\n      this.rowDragSuppressed = true;\r\n      this.gridApi.setSuppressRowDrag(true);\r\n    } else if (!shouldSuppress && this.rowDragSuppressed) {\r\n      this.rowDragSuppressed = false;\r\n      this.gridApi.setSuppressRowDrag(false);\r\n    }\r\n  }\r\n\r\n  add() {\r\n    this.router.navigate([`add/${this.contentTypeStaticName}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private nameCellRenderer(params: ICellRendererParams) {\r\n    const currentField: Field = params.data;\r\n    const inputType = currentField.InputType;\r\n\r\n    if (EmptyFieldHelpers.endsPreviousGroup(inputType))\r\n      return params.value;\r\n\r\n    let isGroupOpen = false;\r\n    for (const field of this.fields$.value) {\r\n      if (EmptyFieldHelpers.isGroupStart(inputType)) {\r\n        isGroupOpen = true;\r\n        continue;\r\n      }\r\n      if (EmptyFieldHelpers.isGroupEnd(inputType)) {\r\n        isGroupOpen = false;\r\n        continue;\r\n      }\r\n      if (field.StaticName === currentField.StaticName)\r\n        break;\r\n    }\r\n\r\n    return isGroupOpen ? `<span class=\"is-in-group\">${params.value}</span>` : params.value;\r\n  }\r\n\r\n  private fetchFields(callback?: () => void) {\r\n    const contentType$ = this.contentType$.value == null\r\n      ? this.contentTypesService.retrieveContentType(this.contentTypeStaticName)\r\n      : of(this.contentType$.value);\r\n    const fields$ = this.contentTypesFieldsService.getFields(this.contentTypeStaticName);\r\n    forkJoin([contentType$, fields$]).subscribe(([contentType, fields]) => {\r\n      this.contentType$.next(contentType);\r\n      this.fields$.next(fields);\r\n      if (callback != null) { callback(); }\r\n    });\r\n  }\r\n\r\n  private editFieldMetadata(field: Field) {\r\n    // 2023-11-10 @2dm #ConfigTypesFromBackend\r\n    // https://github.com/2sic/2sxc/issues/3205\r\n    // Keep old code in till 2024-01 for ref in case something breaks\r\n    // console.warn('2dm - editFieldMetadata', field);\r\n    // console.warn('2dm - editFieldMetadata', field.ConfigTypes);\r\n    // const form: EditForm = {\r\n    //   items: [\r\n    //     this.createItemDefinition(field, 'All'),\r\n    //     this.createItemDefinition(field, field.Type),\r\n    //     this.createItemDefinition(field, field.InputType),\r\n    //   ],\r\n    // };\r\n\r\n    // If this field is inherited and therefor has no own metadata, show a snackbar and exit\r\n    if (field.SysSettings?.InheritMetadataOf) {\r\n      if (!Object.keys(field.ConfigTypes).length) {\r\n        this.snackBar.open('This field inherits all configuration so there is nothing to edit.', null, { duration: 3000 });\r\n        return;\r\n      }\r\n      this.snackBar.open('This field inherits some configuration. Edit will only show configuration which is not inherited.', null, { duration: 5000 });\r\n    }\r\n\r\n    // if this field is shared/can-be-inherited, show warning so the user is aware of it\r\n    if (field.SysSettings?.Share)\r\n      this.snackBar.open('This field is shared, so changing it will affect all other fields inheriting it.', null, { duration: 5000 });\r\n\r\n    const form: EditForm = {\r\n      items: Object.keys(field.ConfigTypes).map((t) => this.createItemDefinition(field, t))\r\n    };\r\n    console.warn('2dm - editFieldMetadata', field.ConfigTypes, form);\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private createItemDefinition(field: Field, metadataType: string): ItemAddIdentifier | ItemEditIdentifier {\r\n    // The keys could start with an @ but may not, and in some cases we need it, others we don't\r\n    const keyForMdLookup = metadataType.replace('@', '');\r\n    const newItemTypeName = ('@' + metadataType).replace('@@', '@');\r\n\r\n    // Is an item of this type already loaded? Then just edit it, otherwise request new as Metadata\r\n    const existingMd = field.Metadata[keyForMdLookup];\r\n    return existingMd != null\r\n      ? { EntityId: existingMd.Id } // if defined, return the entity-number to edit\r\n      : {\r\n        ContentTypeName: newItemTypeName, // otherwise the content type for new-assignment\r\n        For: {\r\n          Target: eavConstants.metadata.attribute.target,\r\n          TargetType: eavConstants.metadata.attribute.targetType,\r\n          Number: field.Id,\r\n        },\r\n        Prefill: { Name: field.StaticName },\r\n      };\r\n  }\r\n\r\n  private setTitle(field: Field) {\r\n    this.snackBar.open('Setting title...');\r\n    this.contentTypesFieldsService.setTitle(field, this.contentType$.value).subscribe(() => {\r\n      this.snackBar.open('Title set', null, { duration: 2000 });\r\n      this.fetchFields();\r\n    });\r\n  }\r\n\r\n  private changeInputType(field: Field) {\r\n    this.router.navigate([`update/${this.contentTypeStaticName}/${field.Id}/inputType`], { relativeTo: this.route });\r\n  }\r\n\r\n  private rename(field: Field) {\r\n    this.router.navigate([`update/${this.contentTypeStaticName}/${field.Id}/name`], { relativeTo: this.route });\r\n  }\r\n\r\n  private delete(field: Field) {\r\n    if (!confirm(`Are you sure you want to delete '${field.StaticName}' (${field.Id})?`)) { return; }\r\n    this.snackBar.open('Deleting...');\r\n    this.contentTypesFieldsService.delete(field, this.contentType$.value).subscribe(() => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.fetchFields();\r\n    });\r\n  }\r\n\r\n  private openPermissions(field: Field) {\r\n    this.router.navigate([GoToPermissions.getUrlAttribute(field.Id)], { relativeTo: this.route });\r\n  }\r\n\r\n  private openMetadata(field: Field) {\r\n    const url = GoToMetadata.getUrlAttribute(\r\n      field.Id,\r\n      `Metadata for Field: ${field.StaticName} (${field.Id})`,\r\n    );\r\n    this.router.navigate([url], { relativeTo: this.route });\r\n  }\r\n\r\n  private shareOrInherit(field: Field) {\r\n    const shareOrInheritDialogRef = this.dialog.open(ShareOrInheritDialogComponent, {\r\n      autoFocus: false,\r\n      width: '800px',\r\n      data: field,\r\n    });\r\n    shareOrInheritDialogRef.afterClosed().subscribe(() => this.fetchFields());\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      getRowClass(params: RowClassParams) {\r\n        const field: Field = params.data;\r\n        const rowClass: string[] = [];\r\n        if (field.EditInfo.DisableSort) { rowClass.push('disable-row-drag'); }\r\n        if (EmptyFieldHelpers.isGroupStart(field.InputType)) { rowClass.push('group-start-row'); }\r\n        if (EmptyFieldHelpers.isGroupEnd(field.InputType)) { rowClass.push('group-end-row'); }\r\n        return rowClass;\r\n      },\r\n      columnDefs: [\r\n        {\r\n          rowDrag: true,\r\n          width: 18,\r\n          cellClass: 'no-select no-padding no-outline'.split(' '),\r\n        },\r\n        {\r\n          field: 'Title',\r\n          width: 42,\r\n          cellClass: 'secondary-action no-padding no-outline'.split(' '),\r\n          valueGetter: (params) => {\r\n            const field: Field = params.data;\r\n            return field.IsTitle;\r\n          },\r\n          cellRenderer: ContentTypeFieldsTitleComponent,\r\n          cellRendererParams: (() => {\r\n            const params: ContentTypeFieldsTitleParams = {\r\n              onSetTitle: (field) => this.setTitle(field),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          field: 'Name',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'primary-action highlight'.split(' '),\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          onCellClicked: (params) => {\r\n            const field: Field = params.data;\r\n            this.editFieldMetadata(field);\r\n          },\r\n          cellRenderer: (params: ICellRendererParams) => this.nameCellRenderer(params),\r\n          valueGetter: (params) => {\r\n            const field: Field = params.data;\r\n            return field.StaticName;\r\n          },\r\n        },\r\n        {\r\n          field: 'Type',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const field: Field = params.data;\r\n            return field.Type;\r\n          },\r\n          cellRenderer: ContentTypeFieldsTypeComponent,\r\n        },\r\n        {\r\n          headerName: 'Input',\r\n          field: 'InputType',\r\n          width: 160,\r\n          cellClass: (params) => {\r\n            const field: Field = params.data;\r\n            return `${field.EditInfo.DisableEdit ? 'no-outline no-padding' : 'secondary-action no-padding'}`.split(' ');\r\n          },\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const field: Field = params.data;\r\n            const inputType = field.InputType.substring(field.InputType.indexOf('-') + 1);\r\n            return inputType;\r\n          },\r\n          cellRenderer: ContentTypeFieldsInputTypeComponent,\r\n          cellRendererParams: (() => {\r\n            const params: ContentTypeFieldsInputTypeParams = {\r\n              onChangeInputType: (field) => this.changeInputType(field),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          field: 'Label',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const field: Field = params.data;\r\n            return field.Metadata?.All?.Name;\r\n          },\r\n        },\r\n        {\r\n          field: 'Special',\r\n          width: 66,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-outline',\r\n          cellRenderer: ContentTypeFieldsSpecialComponent,\r\n        },\r\n        {\r\n          field: 'Notes',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const field: Field = params.data;\r\n            return field.Metadata?.All?.Notes;\r\n          },\r\n        },\r\n        {\r\n          width: 162,\r\n          cellClass: 'secondary-action no-padding'.split(' '),\r\n          pinned: 'right',\r\n          cellRenderer: ContentTypeFieldsActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: ContentTypeFieldsActionsParams = {\r\n              onRename: (field) => this.rename(field),\r\n              onDelete: (field) => this.delete(field),\r\n              onOpenPermissions: (field) => this.openPermissions(field),\r\n              onOpenMetadata: (field) => this.openMetadata(field),\r\n              onShareOrInherit: (field) => this.shareOrInherit(field),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface ContentTypeFieldsViewModel {\r\n  contentType: ContentType;\r\n  fields: Field[];\r\n}","<mat-icon *ngIf=\"show$ | async\" [tippy]=\"'Features.NotActivated' | translate\">diamond</mat-icon>","import { ChangeDetectorRef, Component, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureComponentBase } from '../shared/base-feature.component';\r\n\r\n@Component({\r\n  selector: 'app-feature-icon-indicator',\r\n  templateUrl: './feature-icon-indicator.component.html',\r\n  styleUrls: ['./feature-icon-indicator.component.scss']\r\n})\r\nexport class FeatureIconIndicatorComponent extends FeatureComponentBase /* implements OnInit */ {\r\n\r\n  constructor(\r\n    dialog: MatDialog,\r\n    viewContainerRef: ViewContainerRef,\r\n    featuresService: FeaturesService,\r\n    changeDetectorRef: ChangeDetectorRef\r\n  ) {\r\n    super(dialog, viewContainerRef, changeDetectorRef, featuresService);\r\n  }\r\n\r\n  // ngOnInit(): void {\r\n  //   super.ngOnInit();\r\n  // }\r\n}\r\n","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  FieldShareConfigManagement: 'FieldShareConfigManagement',\r\n};\r\n","<mat-card *ngIf=\"viewModel$ | async as vm\">\r\n  <mat-card-header>\r\n    <mat-card-title>{{ vm.feature.Name }}</mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <p [innerHtml]=\"vm.feature.Description | safeHtml\"></p>\r\n    <div class=\"eav-info-row\">\r\n      <div class=\"eav-info-row__label\">{{ \"Features.Status\" | translate }}:</div>\r\n      <div class=\"eav-info-row__value\">\r\n        <span>{{ (vm.feature.Enabled ? \"Features.Active\" : \"Features.NotActive\") | translate }}</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"eav-info-row\" *ngIf=\"vm.feature.NameId as id\">\r\n      <div class=\"eav-info-row__label\">ID:</div>\r\n      <div class=\"eav-info-row__value eav_click\">\r\n        <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n  <mat-card-actions align=\"end\">\r\n    <button *ngIf=\"vm.feature.Link as link\" mat-raised-button color=\"accent\"\r\n      class=\"eav-card-action-button\" (click)=\"findOutMore(link)\">\r\n      <mat-icon>open_in_new</mat-icon>\r\n      {{ \"Features.FindOutMore\" | translate }}\r\n    </button>\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">\r\n      {{ \"Features.Close\" | translate }}\r\n    </button>\r\n  </mat-card-actions>\r\n</mat-card>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable, combineLatest, map } from 'rxjs';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { Feature } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\n\r\n@Component({\r\n  selector: 'app-feature-info-dialog',\r\n  templateUrl: './feature-info-dialog.component.html',\r\n  styleUrls: ['./feature-info-dialog.component.scss']\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  viewModel$: Observable<FeatureInfoViewModel>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    private dialogRef: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private featureDetailService: FeatureDetailService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.viewModel$ = combineLatest([\r\n      this.featureDetailService.getFeatureDetails(this.dialogData)\r\n    ]).pipe(map(([feature]) => ({ feature })));\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  findOutMore(link: string): void { \r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\r\ninterface FeatureInfoViewModel {\r\n  feature: Feature;\r\n}","import { ChangeDetectorRef, Directive, Input, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { BehaviorSubject, switchMap, Observable, map, combineLatest } from 'rxjs';\r\nimport { FeatureSummary } from '../models';\r\n\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n  /** Feature NameId to check */\r\n  @Input()\r\n  public set featureNameId(value: string) { this.featureNameId$.next(value); }\r\n  protected featureNameId$ = new BehaviorSubject<string>(null);\r\n\r\n  /** By default, it will show if it's false - here we can change it to show if true */\r\n  @Input()\r\n  public set showIf(value: boolean) { this.showIf$.next(value == true); }\r\n  protected showIf$ = new BehaviorSubject<boolean>(false);\r\n\r\n  // TODO: @SDV - MAKE REACTIVE - SEE text-info-component example\r\n  // featureOn: boolean = true;\r\n  feature$: Observable<FeatureSummary>;\r\n  show$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    protected featuresService: FeaturesService\r\n  ) {\r\n    this.feature$ = this.featureNameId$.pipe(\r\n      switchMap(featName => this.featuresService.get$(featName)\r\n    ));\r\n    this.show$ = combineLatest([this.feature$, this.showIf$]).pipe(\r\n      // tap(data => console.log('2dm - show$', data)),\r\n      map(([feat,showIf]) => showIf == (feat?.Enabled ?? false))\r\n    );\r\n  }\r\n\r\n  openDialog() {\r\n    FeatureComponentBase.openDialog(this.dialog, this.featureNameId$.value, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n\r\n  /** Public/Static so it can be called from elsewhere */\r\n  public static openDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n    dialog.open(FeatureInfoDialogComponent, {\r\n      autoFocus: false,\r\n      data: featureId,\r\n      viewContainerRef: viewContainerRef,\r\n      width: '400px',\r\n    });\r\n\r\n    changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","import { Directive, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith, Subscription } from 'rxjs';\r\nimport { BaseSubsinkComponent } from '../base-subsink-component/base-subsink.component';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class BaseComponent extends BaseSubsinkComponent implements OnDestroy {\r\n  \r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  protected refreshOnChildClosedDeep() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n\r\n  protected refreshOnChildClosedShallow() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n}\r\n","import { GridOptions } from '@ag-grid-community/core';\r\n\r\nexport const defaultGridOptions: GridOptions = {\r\n  accentedSort: true,\r\n  animateRows: true,\r\n  enableCellTextSelection: true,\r\n  headerHeight: 32,\r\n  suppressScrollOnNewData: true,\r\n  valueCache: true,\r\n  defaultColDef: { filterParams: { newRowsAction: 'keep' } },\r\n  tooltipShowDelay: 0,\r\n  tooltipHideDelay: 100000,\r\n  suppressMovableColumns: true,\r\n} as const;\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { GlobalConfigService } from '../../edit/shared/store/ngrx-data';\r\n\r\n@Directive({ selector: '[appToggleDebug]' })\r\nexport class ToggleDebugDirective {\r\n\r\n  constructor(private globalConfigService: GlobalConfigService) { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    const CTRL_SHIFT_ALT_CLICK = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.shiftKey && event.altKey;\r\n    if (CTRL_SHIFT_ALT_CLICK) {\r\n      this.globalConfigService.toggleDebugEnabled();\r\n      window.getSelection().removeAllRanges();\r\n    }\r\n  }\r\n}\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeHtml' })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}