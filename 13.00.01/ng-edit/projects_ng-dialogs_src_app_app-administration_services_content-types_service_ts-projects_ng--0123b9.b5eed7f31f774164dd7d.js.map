{"version":3,"sources":["./projects/ng-dialogs/src/app/app-administration/services/content-types.service.ts","./projects/ng-dialogs/src/app/permissions/go-to-permissions.ts"],"names":["webApiTypeRoot","http","context","dnnContext","apiUrl","name","this","$2sxc","retrieveContentType","staticName","get","params","appId","toString","contentTypeId","retrieveContentTypes","scope","getScopes","pipe","scopes","Object","keys","map","key","value","save","contentType","post","appid","delete","StaticName","import","files","formData","FormData","append","zoneId","createGhost","sourceStaticName","ContentTypesService","getUrl","targetType","keyType","getUrlApp","getUrlAttribute","id","getUrlContentType","guid","getUrlEntity","route","path","loadChildren","then","m","PermissionsModule","data","title"],"mappings":"+TASaA,EAAiB,cAE9B,aAEE,WAAoBC,EAA0BC,EAA0BC,GAApD,KAAAF,OAA0B,KAAAC,UAA0B,KAAAC,a,OAEhE,YAAAC,OAAR,SAAeC,GACb,OAAOC,KAAKH,WAAWI,MAAMN,KAAKG,OAAOC,IAG3C,YAAAG,oBAAA,SAAoBC,GAClB,OAAOH,KAAKL,KAAKS,IAAiBJ,KAAKF,OAAOJ,EAAiB,OAAQ,CACrEW,OAAQ,CAAEC,MAAON,KAAKJ,QAAQU,MAAMC,WAAYC,cAAeL,MAInE,YAAAM,qBAAA,SAAqBC,GACnB,OAAOV,KAAKL,KAAKS,IAAmBJ,KAAKF,OAAOJ,EAAiB,QAAS,CACxEW,OAAQ,CAAEC,MAAON,KAAKJ,QAAQU,MAAMC,WAAYG,MAAK,MAIzD,YAAAC,UAAA,WACE,OAAOX,KAAKL,KAAKS,IAA4BJ,KAAKF,OAAOJ,EAAiB,UAAW,CACnFW,OAAQ,CAAEC,MAAON,KAAKJ,QAAQU,MAAMC,cACnCK,MACD,OAAI,SAAAC,GAEF,OADoCC,OAAOC,KAAKF,GAAQG,IAAI,SAAAC,GAAO,OAAGlB,KAAMc,EAAOI,GAAMC,MAAOD,SAMtG,YAAAE,KAAA,SAAKC,GACH,OAAOpB,KAAKL,KAAK0B,KAAcrB,KAAKF,OAAOJ,EAAiB,QAAS0B,EAAa,CAChFf,OAAQ,CAAEiB,MAAOtB,KAAKJ,QAAQU,MAAMC,eAIxC,YAAAgB,OAAA,SAAOH,GACL,OAAOpB,KAAKL,KAAK4B,OAAgBvB,KAAKF,OAAOJ,EAAiB,UAAW,CACvEW,OAAQ,CAAEiB,MAAOtB,KAAKJ,QAAQU,MAAMC,WAAYJ,WAAYiB,EAAYI,eAI5E,YAAAC,OAAA,SAAOC,G,QACCC,EAAW,IAAIC,S,IACrB,IAAmB,eAAAF,GAAK,8BACtBC,EAASE,OAAO,OADH,S,iGAGf,OAAO7B,KAAKL,KAAK0B,KAAsBrB,KAAKF,OAAOJ,EAAiB,UAAWiC,EAAU,CACvFtB,OAAQ,CAAEC,MAAON,KAAKJ,QAAQU,MAAMC,WAAYuB,OAAQ9B,KAAKJ,QAAQkC,OAAOvB,eAIhF,YAAAwB,YAAA,SAAYC,GACV,OAAOhC,KAAKL,KAAK0B,KAAcrB,KAAKF,OAAOJ,EAAiB,YAAa,KAAM,CAC7EW,OAAQ,CAAEiB,MAAOtB,KAAKJ,QAAQU,MAAMC,WAAYyB,iBAAgB,M,sCAtDzDC,GAAmB,qC,0BAAnBA,EAAmB,QAAnBA,EAAmB,Y,EADhC,I,+ECRA,2BA6BA,OArBS,EAAAC,OAAP,SAAcC,EAAoBC,EAA0BnB,GAC1D,MAAO,eAAekB,EAAU,IAAIC,EAAO,IAAInB,GAG1C,EAAAoB,UAAP,SAAiB/B,GACf,OAAON,KAAKkC,OAAO,sBAAgC,yBAAmC5B,EAAMC,aAGvF,EAAA+B,gBAAP,SAAuBC,GACrB,OAAOvC,KAAKkC,OAAO,4BAAsC,+BAAyCK,EAAGhC,aAIhG,EAAAiC,kBAAP,SAAyBC,GACvB,OAAOzC,KAAK0C,aAAaD,IAGpB,EAAAC,aAAP,SAAoBD,GAClB,OAAOzC,KAAKkC,OAAO,yBAAmC,4BAAsCO,IAxBvF,EAAAE,MAAe,CACpBC,KAAM,kCACNC,aAAc,WAAM,wGAA+BC,KAAK,SAAAC,GAAK,OAAAA,EAAEC,qBAC/DC,KAAM,CAAEC,MAAO,gBAwBnB,EA7BA","file":"projects_ng-dialogs_src_app_app-administration_services_content-types_service_ts-projects_ng--0123b9.b5eed7f31f774164dd7d.js","sourcesContent":["import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { ImportAppResult } from '../../import-app/models/import-app-result.model';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\n\r\nexport const webApiTypeRoot = 'admin/type/';\r\n\r\n@Injectable()\r\nexport class ContentTypesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get<ContentType>(this.apiUrl(webApiTypeRoot + 'get'), {\r\n      params: { appId: this.context.appId.toString(), contentTypeId: staticName }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get<ContentType[]>(this.apiUrl(webApiTypeRoot + 'list'), {\r\n      params: { appId: this.context.appId.toString(), scope }\r\n    });\r\n  }\r\n\r\n  getScopes() {\r\n    return this.http.get<Record<string, string>>(this.apiUrl(webApiTypeRoot + 'scopes'), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopes => {\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeRoot + 'save'), contentType, {\r\n      params: { appid: this.context.appId.toString() },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeRoot + 'delete'), {\r\n      params: { appid: this.context.appId.toString(), staticName: contentType.StaticName },\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<ImportAppResult>(this.apiUrl(webApiTypeRoot + 'import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeRoot + 'addghost'), null, {\r\n      params: { appid: this.context.appId.toString(), sourceStaticName },\r\n    });\r\n  }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\n\r\nexport class GoToPermissions {\r\n\r\n  static route: Route = {\r\n    path: 'permissions/:type/:keyType/:key',\r\n    loadChildren: () => import('./permissions.module').then(m => m.PermissionsModule),\r\n    data: { title: 'Permissions' },\r\n  };\r\n\r\n  static getUrl(targetType: number, keyType: MetadataKeyType, key: string): string {\r\n    return `permissions/${targetType}/${keyType}/${key}`;\r\n  }\r\n\r\n  static getUrlApp(appId: number): string {\r\n    return this.getUrl(eavConstants.metadata.app.type, eavConstants.metadata.app.keyType, appId.toString());\r\n  }\r\n\r\n  static getUrlAttribute(id: number): string {\r\n    return this.getUrl(eavConstants.metadata.attribute.type, eavConstants.metadata.attribute.keyType, id.toString());\r\n  }\r\n\r\n  /** For historic reasons, it's the same as Entity */\r\n  static getUrlContentType(guid: string): string {\r\n    return this.getUrlEntity(guid);\r\n  }\r\n\r\n  static getUrlEntity(guid: string): string {\r\n    return this.getUrl(eavConstants.metadata.entity.type, eavConstants.metadata.entity.keyType, guid);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}