{"version":3,"sources":["./src/app/apps-management/services/apps-list.service.ts","./src/app/shared/directives/drag-and-drop.directive.ts","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/@ngx-translate/http-loader/__ivy_ngcc__/fesm5/ngx-translate-http-loader.js","./src/app/shared/components/boolean-filter/boolean-filter.component.ts","./src/app/shared/components/boolean-filter/boolean-filter.component.html","./src/app/content-type-fields/constants/data-type.constants.ts","./src/app/content-type-fields/content-type-fields.helpers.ts","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/@angular/material/__ivy_ngcc__/fesm5/slide-toggle.js","./src/app/content-items/services/entities.service.ts","./src/app/shared/directives/toggle-debug.directive.ts","./src/app/shared/services/dialog.service.ts","./src/app/shared/components/id-field/id-field.component.ts","./src/app/shared/components/id-field/id-field.component.html","./src/app/shared/pipes/safe-html.pipe.ts","./src/app/app-administration/services/app-dialog-config.service.ts","./src/app/manage-content-list/services/content-group.service.ts","./src/app/shared/constants/file-names.constants.ts","./src/app/shared/components/field-hint/field-hint.component.html","./src/app/shared/components/field-hint/field-hint.component.ts","./src/app/import-app/services/import-app.service.ts","./src/app/app-administration/constants/field-name.patterns.ts","./src/app/shared/directives/click-stop-propagation.directive.ts","./src/app/shared/helpers/copy-to-clipboard.helper.ts","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/@angular/material/__ivy_ngcc__/fesm5/badge.js","./src/app/app-administration/services/pipelines.service.ts","./src/app/shared/directives/mousedown-stop-propagation.directive.ts","./src/app/shared/components/empty-route/empty-route.component.ts","./src/app/shared/components/empty-route/empty-route.component.html","./src/app/content-type-fields/constants/input-type.constants.ts","./src/app/permissions/services/metadata.service.ts"],"names":["http","context","dnnContext","apiUrl","name","this","$2sxc","getAll","get","params","zoneId","toString","create","post","delete","appId","flushCache","AppsListService","elementRef","zone","snackBar","markStyle","allowedFileTypes","filesDropped","dropAreaClass","dragClass","timeouts","subscription","element","nativeElement","ngOnInit","markStyleClass","classList","add","runOutsideAngular","subscribe","event","preventDefault","stopPropagation","clearTimeouts","push","window","setTimeout","remove","ngOnDestroy","unsubscribe","onDrop","files","convertToArray","dataTransfer","filterTypes","length","emit","clearTimeout","fileList","fileArray","i","allowedTypes","split","map","type","toLocaleLowerCase","filtered","filter","file","extIndex","lastIndexOf","ext","substring","includes","allowedTypesString","replace","open","duration","DragAndDropDirective","TranslateHttpLoader","prefix","suffix","prototype","getTranslation","lang","agInit","isFilterActive","doesFilterPass","value","valueGetter","node","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","BooleanFilterComponent","String","Entity","Boolean","Number","Custom","DateTime","Hyperlink","Empty","calculateTypeIcon","typeName","_c0","_c1","_c2","_c3","enterDuration","_c4","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","providedIn","factory","disableToggleValue","nextUniqueId","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","provide","useExisting","MatSlideToggle","multi","MatSlideToggleChange","source","checked","MatSlideToggleBase","_elementRef","_super","_focusMonitor","_changeDetectorRef","tabIndex","_ngZone","defaults","_animationMode","_dir","_this","call","_onChange","_","_onTouched","_uniqueId","_required","_checked","id","labelPosition","ariaLabel","ariaLabelledby","change","toggleChange","dragChange","parseInt","Object","defineProperty","set","enumerable","configurable","markForCheck","ngAfterContentInit","monitor","focusOrigin","_inputElement","focus","Promise","resolve","then","stopMonitoring","_onChangeEvent","_emitChangeEvent","_onInputClick","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disabled","options","focusVia","toggle","_onLabelTextChange","detectChanges","ɵfac","t","ɵcmp","selectors","viewQuery","rf","ctx","_t","_thumbEl","first","_thumbBarEl","hostAttrs","hostVars","hostBindings","inputs","disableRipple","color","required","outputs","exportAs","features","ngContentSelectors","decls","vars","consts","template","$event","_r10","_r14","inputId","textContent","trim","directives","styles","encapsulation","changeDetection","_MatSlideToggleRequiredValidatorModule","ɵmod","ɵinj","MatSlideToggleModule","imports","tryForce","contentType","force","EntitiesService","globalConfigService","onClick","navigator","platform","match","metaKey","ctrlKey","shiftKey","altKey","toggleDebugEnabled","ToggleDebugDirective","openCodeFile","path","dialog","Develop","form","items","Path","oldHref","sessionStorage","getItem","oldUrl","URL","newHref","origin","pathname","search","newHash","buildHashParam","tabId","moduleId","contentBlockId","JSON","stringify","openQueryDesigner","queryId","PipelineDesigner","EntityId","key","rawKey","valueTemp","encodeURIComponent","DialogService","tooltip","data","Id","Code","refresh","copy","IdFieldComponent","sanitizer","transform","html","bypassSecurityTrustHtml","SafeHtmlPipe","getDialogSettings","webApiDialogRoot","appid","AppDialogConfigService","getItems","item","webApiContentGroup","guid","part","index","saveItem","entityId","getList","contentGroup","saveList","resortedList","getHeader","ContentGroupService","defaultControllerName","defaultTemplateName","defaultTokenName","isError","isShort","toggleIsShort","FieldHintComponent","webApiAppRoot","importApp","changedName","formData","FormData","append","ImportAppService","fieldNamePattern","fieldNameError","ClickStopPropagationDirective","copyToClipboard","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","nextId","MatBadgeBase","MatBadge","_ariaDescriber","_renderer","_hasContent","_color","_overlap","size","_id","nodeType","ELEMENT_NODE","Error","_setColor","val","_description","newDescription","badgeElement","_badgeElement","_updateHostAriaDescription","removeAttribute","_hidden","isAbove","indexOf","isAfter","ngOnChanges","changes","contentChange","currentValue","_updateTextContent","description","removeDescription","destroyNode","getBadgeElement","content","_createBadgeElement","_clearExistingBadges","requestAnimationFrame","oldDescription","describe","colorPalette","cssClass","childCount","children","currentChild","contains","ɵdir","overlap","hidden","MatBadgeModule","webApiQueryRun","webApiQueryRoot","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","importQuery","pipe","fileBase64","AppId","ContentBase64","clonePipeline","PipelinesService","onMousedown","MousedownStopPropagationDirective","EmptyRouteComponent","StringDefault","StringUrlPath","StringDropdown","StringDropdownQuery","StringFontIconPicker","StringTemplatePicker","StringWysiwyg","BooleanDefault","DatetimeDefault","EmptyDefault","NumberDefault","EntityDefault","EntityQuery","EntityContentBlocks","HyperlinkDefault","HyperlinkLibrary","ExternalWebComponent","CustomGPS","CustomDefault","OldTypeDropdown","OldTypeWysiwyg","OldTypeDefault","StringWysiwygTinymce","StringWysiwygAdv","StringWysiwygDnn","DefaultSuffix","getMetadata","typeId","keyType","contentTypeName","targetType","MetadataService"],"mappings":"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","file":"common.a878fca2f97b83f5e52d.js","sourcesContent":["import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { App } from '../models/app.model';\r\n\r\n@Injectable()\r\nexport class AppsListService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  getAll() {\r\n    return this.http.get(this.apiUrl(webApiAppRoot + 'list'), {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }) as Observable<App[]>;\r\n  }\r\n\r\n  create(name: string) {\r\n    return this.http.post(this.apiUrl(webApiAppRoot + 'app'), {}, {\r\n      params: { zoneId: this.context.zoneId.toString(), name }\r\n    }) as Observable<null>;\r\n  }\r\n\r\n  delete(appId: number) {\r\n    return this.http.delete(this.apiUrl(webApiAppRoot + 'app'), {\r\n      params: { zoneId: this.context.zoneId.toString(), appId: appId.toString() },\r\n    }) as Observable<null>;\r\n  }\r\n\r\n  flushCache(appId: number) {\r\n    return this.http.get(this.apiUrl(webApiAppRoot + 'flushcache'), {\r\n      params: { zoneId: this.context.zoneId.toString(), appId: appId.toString() },\r\n    }) as Observable<null>;\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, HostListener, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\n\r\n@Directive({ selector: '[appDragAndDrop]' })\r\nexport class DragAndDropDirective implements OnInit, OnDestroy {\r\n  @Input() private markStyle: 'outline' | 'fill' | 'shadow' = 'outline';\r\n  /** Comma separated file types, e.g. 'txt,doc,docx' */\r\n  @Input() private allowedFileTypes = '';\r\n  @Output() private filesDropped = new EventEmitter<File[]>();\r\n\r\n  private element: HTMLElement;\r\n  private dropAreaClass = 'eav-droparea';\r\n  private markStyleClass: string;\r\n  private dragClass = 'eav-dragover';\r\n  private timeouts: number[] = [];\r\n  private subscription = new Subscription();\r\n\r\n  constructor(elementRef: ElementRef, private zone: NgZone, private snackBar: MatSnackBar) {\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.markStyleClass = `eav-droparea-${this.markStyle}`;\r\n    this.element.classList.add(this.dropAreaClass, this.markStyleClass);\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscription.add(\r\n        fromEvent(this.element, 'dragover').subscribe((event: DragEvent) => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.clearTimeouts();\r\n          this.element.classList.add(this.dragClass);\r\n        })\r\n      );\r\n      this.subscription.add(\r\n        fromEvent(this.element, 'dragleave').subscribe((event: DragEvent) => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.timeouts.push(\r\n            window.setTimeout(() => { this.element.classList.remove(this.dragClass); }, 50)\r\n          );\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dropAreaClass, this.markStyleClass, this.dragClass);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(event: DragEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dragClass);\r\n    const fileList = event.dataTransfer.files;\r\n    let files = this.convertToArray(fileList);\r\n    files = this.filterTypes(files, this.allowedFileTypes);\r\n    if (files.length > 0) {\r\n      this.filesDropped.emit(files);\r\n    }\r\n  }\r\n\r\n  private clearTimeouts() {\r\n    for (const timeout of this.timeouts) {\r\n      clearTimeout(timeout);\r\n    }\r\n    this.timeouts = [];\r\n  }\r\n\r\n  private convertToArray(fileList: FileList) {\r\n    const fileArray: File[] = [];\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let i = 0; i < fileList.length; i++) {\r\n      fileArray.push(fileList[i]);\r\n    }\r\n    return fileArray;\r\n  }\r\n\r\n  private filterTypes(files: File[], allowedFileTypes: string) {\r\n    if (allowedFileTypes === '') { return files; }\r\n\r\n    const allowedTypes = allowedFileTypes.split(',').map(type => type.toLocaleLowerCase());\r\n    const filtered = files.filter(file => {\r\n      const extIndex = file.name.lastIndexOf('.');\r\n      if (extIndex <= 0) { return false; }\r\n      const ext = file.name.substring(extIndex + 1).toLocaleLowerCase();\r\n      const allowed = allowedTypes.includes(ext);\r\n      return allowed;\r\n    });\r\n\r\n    if (files.length !== filtered.length) {\r\n      const allowedTypesString = this.allowedFileTypes.replace(/\\,/g, ', ');\r\n      const message = filtered.length\r\n        ? 'Some files were filtered out. This drop location only accepts file types: ' + allowedTypesString\r\n        : 'This drop location only accepts file types: ' + allowedTypesString;\r\n      this.snackBar.open(message, null, { duration: 5000 });\r\n    }\r\n    return filtered;\r\n  }\r\n}\r\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\nvar TranslateHttpLoader = /** @class */ (function () {\n    function TranslateHttpLoader(http, prefix, suffix) {\n        if (prefix === void 0) { prefix = \"/assets/i18n/\"; }\n        if (suffix === void 0) { suffix = \".json\"; }\n        this.http = http;\n        this.prefix = prefix;\n        this.suffix = suffix;\n    }\n    /**\n     * Gets the translations from the server\n     */\n    /**\n     * Gets the translations from the server\n     * @param {?} lang\n     * @return {?}\n     */\n    TranslateHttpLoader.prototype.getTranslation = /**\n     * Gets the translations from the server\n     * @param {?} lang\n     * @return {?}\n     */\n    function (lang) {\n        return this.http.get(\"\" + this.prefix + lang + this.suffix);\n    };\n    return TranslateHttpLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\n\nexport { TranslateHttpLoader };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXRyYW5zbGF0ZS1odHRwLWxvYWRlci5qcyIsInNvdXJjZXMiOlsibmc6L0BuZ3gtdHJhbnNsYXRlL2h0dHAtbG9hZGVyL2xpYi9odHRwLWxvYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBSUE7SUFDRSw2QkFBb0IsSUFBZ0IsRUFBUyxNQUFnQyxFQUFTLE1BQXdCO1FBQWpFLHVCQUFBLEVBQUEsd0JBQWdDO1FBQVMsdUJBQUEsRUFBQSxnQkFBd0I7UUFBMUYsU0FBSSxHQUFKLElBQUksQ0FBWTtRQUFTLFdBQU0sR0FBTixNQUFNLENBQTBCO1FBQVMsV0FBTSxHQUFOLE1BQU0sQ0FBa0I7S0FBSTs7Ozs7Ozs7O0lBSzNHLDRDQUFjOzs7OztJQUFyQixVQUFzQixJQUFZO1FBQ2hDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksR0FBRyxJQUFJLENBQUMsTUFBUSxDQUFDLENBQUM7S0FDN0Q7SUFDSCwwQkFBQztDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtIdHRwQ2xpZW50fSBmcm9tIFwiQGFuZ3VsYXIvY29tbW9uL2h0dHBcIjtcbmltcG9ydCB7VHJhbnNsYXRlTG9hZGVyfSBmcm9tIFwiQG5neC10cmFuc2xhdGUvY29yZVwiO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcblxuZXhwb3J0IGNsYXNzIFRyYW5zbGF0ZUh0dHBMb2FkZXIgaW1wbGVtZW50cyBUcmFuc2xhdGVMb2FkZXIge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHA6IEh0dHBDbGllbnQsIHB1YmxpYyBwcmVmaXg6IHN0cmluZyA9IFwiL2Fzc2V0cy9pMThuL1wiLCBwdWJsaWMgc3VmZml4OiBzdHJpbmcgPSBcIi5qc29uXCIpIHt9XG5cbiAgLyoqXG4gICAqIEdldHMgdGhlIHRyYW5zbGF0aW9ucyBmcm9tIHRoZSBzZXJ2ZXJcbiAgICovXG4gIHB1YmxpYyBnZXRUcmFuc2xhdGlvbihsYW5nOiBzdHJpbmcpOiBPYnNlcnZhYmxlPE9iamVjdD4ge1xuICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0KGAke3RoaXMucHJlZml4fSR7bGFuZ30ke3RoaXMuc3VmZml4fWApO1xuICB9XG59XG4iXX0=","import { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams } from '@ag-grid-community/all-modules';\r\nimport { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { BooleanFilterModel } from './boolean-filter.model';\r\n\r\n@Component({\r\n  selector: 'app-boolean-filter',\r\n  templateUrl: './boolean-filter.component.html',\r\n  styleUrls: ['./boolean-filter.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BooleanFilterComponent implements IFilterAngularComp {\r\n  filter = '';\r\n\r\n  private params: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.params = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.filter !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    const value: boolean = this.params.valueGetter(params.node);\r\n    if (value == null) { return false; }\r\n    return value.toString() === this.filter;\r\n  }\r\n\r\n  getModel(): BooleanFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n    return {\r\n      filterType: 'boolean',\r\n      filter: this.filter,\r\n    };\r\n  }\r\n\r\n  setModel(model: BooleanFilterModel) {\r\n    this.filter = model ? model.filter : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.params.filterChangedCallback();\r\n  }\r\n}\r\n","<mat-radio-group [(ngModel)]=\"filter\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">True</mat-radio-button>\r\n  <mat-radio-button value=\"false\">False</mat-radio-button>\r\n</mat-radio-group>\r\n","export class DataTypeConstants {\r\n  public static readonly String = 'String';\r\n  public static readonly Entity = 'Entity';\r\n  public static readonly Boolean = 'Boolean';\r\n  public static readonly Number = 'Number';\r\n  public static readonly Custom = 'Custom';\r\n  public static readonly DateTime = 'DateTime';\r\n  public static readonly Hyperlink = 'Hyperlink';\r\n  public static readonly Empty = 'Empty';\r\n}\r\n","import { DataTypeConstants } from './constants/data-type.constants';\r\n\r\nexport function calculateTypeIcon(typeName: string): string {\r\n  switch (typeName) {\r\n    case DataTypeConstants.String:\r\n      return 'text_fields';\r\n    case DataTypeConstants.Entity:\r\n      return 'share';\r\n    case DataTypeConstants.Boolean:\r\n      return 'toggle_on';\r\n    case DataTypeConstants.Number:\r\n      return 'dialpad';\r\n    case DataTypeConstants.Custom:\r\n      return 'extension';\r\n    case DataTypeConstants.DateTime:\r\n      return 'today';\r\n    case DataTypeConstants.Hyperlink:\r\n      return 'link';\r\n    case DataTypeConstants.Empty:\r\n      return 'crop_free';\r\n    default:\r\n      return 'device_unknown';\r\n  }\r\n}\r\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, NgZone, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { __extends } from 'tslib';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nvar _c0 = [\"thumbContainer\"];\nvar _c1 = [\"toggleBar\"];\nvar _c2 = [\"input\"];\nvar _c3 = function () { return { enterDuration: 150 }; };\nvar _c4 = [\"*\"];\nvar MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: function () { return ({ disableToggleValue: false }); }\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for slide-toggle components.\nvar nextUniqueId = 0;\n/** @docs-private */\nvar MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MatSlideToggle; }),\n    multi: true\n};\n/** Change event object emitted by a MatSlideToggle. */\nvar MatSlideToggleChange = /** @class */ (function () {\n    function MatSlideToggleChange(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n    return MatSlideToggleChange;\n}());\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nvar MatSlideToggleBase = /** @class */ (function () {\n    function MatSlideToggleBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatSlideToggleBase;\n}());\nvar _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nvar MatSlideToggle = /** @class */ (function (_super) {\n    __extends(MatSlideToggle, _super);\n    function MatSlideToggle(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, \n    /**\n     * @deprecated `_ngZone` and `_dir` parameters to be removed.\n     * @breaking-change 10.0.0\n     */\n    _ngZone, defaults, _animationMode, _dir) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._focusMonitor = _focusMonitor;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this.defaults = defaults;\n        _this._animationMode = _animationMode;\n        _this._onChange = function (_) { };\n        _this._onTouched = function () { };\n        _this._uniqueId = \"mat-slide-toggle-\" + ++nextUniqueId;\n        _this._required = false;\n        _this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        _this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        _this.id = _this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        _this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        _this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        _this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        _this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        _this.toggleChange = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle is dragged.\n         * This event is always emitted when the user drags the slide toggle to make a change greater\n         * than 50%. It does not mean the slide toggle's value is changed. The event is not emitted when\n         * the user toggles the slide toggle to change its value.\n         * @deprecated No longer being used. To be removed.\n         * @breaking-change 10.0.0\n         */\n        _this.dragChange = new EventEmitter();\n        _this.tabIndex = parseInt(tabIndex) || 0;\n        return _this;\n    }\n    Object.defineProperty(MatSlideToggle.prototype, \"required\", {\n        /** Whether the slide-toggle is required. */\n        get: function () { return this._required; },\n        set: function (value) { this._required = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlideToggle.prototype, \"checked\", {\n        /** Whether the slide-toggle element is checked or not. */\n        get: function () { return this._checked; },\n        set: function (value) {\n            this._checked = coerceBooleanProperty(value);\n            this._changeDetectorRef.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlideToggle.prototype, \"inputId\", {\n        /** Returns the unique id for the visual hidden input. */\n        get: function () { return (this.id || this._uniqueId) + \"-input\"; },\n        enumerable: true,\n        configurable: true\n    });\n    MatSlideToggle.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(function (focusOrigin) {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                _this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(function () { return _this._onTouched(); });\n            }\n        });\n    };\n    MatSlideToggle.prototype.ngOnDestroy = function () {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    };\n    /** Method being called whenever the underlying input emits a change event. */\n    MatSlideToggle.prototype._onChangeEvent = function (event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    };\n    /** Method being called whenever the slide-toggle has been clicked. */\n    MatSlideToggle.prototype._onInputClick = function (event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    };\n    /** Implemented as part of ControlValueAccessor. */\n    MatSlideToggle.prototype.writeValue = function (value) {\n        this.checked = !!value;\n    };\n    /** Implemented as part of ControlValueAccessor. */\n    MatSlideToggle.prototype.registerOnChange = function (fn) {\n        this._onChange = fn;\n    };\n    /** Implemented as part of ControlValueAccessor. */\n    MatSlideToggle.prototype.registerOnTouched = function (fn) {\n        this._onTouched = fn;\n    };\n    /** Implemented as a part of ControlValueAccessor. */\n    MatSlideToggle.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    };\n    /** Focuses the slide-toggle. */\n    MatSlideToggle.prototype.focus = function (options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    };\n    /** Toggles the checked state of the slide-toggle. */\n    MatSlideToggle.prototype.toggle = function () {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    };\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    MatSlideToggle.prototype._emitChangeEvent = function () {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    };\n    /** Method being called whenever the label text changes. */\n    MatSlideToggle.prototype._onLabelTextChange = function () {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    };\n    /** @nocollapse */\n    MatSlideToggle.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: FocusMonitor },\n        { type: ChangeDetectorRef },\n        { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n        { type: Directionality, decorators: [{ type: Optional }] }\n    ]; };\n    MatSlideToggle.propDecorators = {\n        _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n        _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n        name: [{ type: Input }],\n        id: [{ type: Input }],\n        labelPosition: [{ type: Input }],\n        ariaLabel: [{ type: Input, args: ['aria-label',] }],\n        ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n        required: [{ type: Input }],\n        checked: [{ type: Input }],\n        change: [{ type: Output }],\n        toggleChange: [{ type: Output }],\n        dragChange: [{ type: Output }],\n        _inputElement: [{ type: ViewChild, args: ['input',] }]\n    };\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nMatSlideToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : 0 - 1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", required: \"required\", checked: \"checked\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, outputs: { change: \"change\", toggleChange: \"toggleChange\", dragChange: \"dragChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var _r10 = ɵngcc0.ɵɵreference(1);\n        var _r14 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r14.textContent || !_r14.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r10)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc4.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], dragChange: [{\n            type: Output\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n    return MatSlideToggle;\n}(_MatSlideToggleMixinBase));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return MatSlideToggleRequiredValidator; }),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nvar MatSlideToggleRequiredValidator = /** @class */ (function (_super) {\n    __extends(MatSlideToggleRequiredValidator, _super);\n    function MatSlideToggleRequiredValidator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\nMatSlideToggleRequiredValidator.ɵfac = function MatSlideToggleRequiredValidator_Factory(t) { return ɵMatSlideToggleRequiredValidator_BaseFactory(t || MatSlideToggleRequiredValidator); };\nMatSlideToggleRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nvar ɵMatSlideToggleRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: \"mat-slide-toggle[required][formControlName],\\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]\",\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n    return MatSlideToggleRequiredValidator;\n}(CheckboxRequiredValidator));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nvar _MatSlideToggleRequiredValidatorModule = /** @class */ (function () {\n    function _MatSlideToggleRequiredValidatorModule() {\n    }\n_MatSlideToggleRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], function () { return []; }, null); })();\n    return _MatSlideToggleRequiredValidatorModule;\n}());\nvar MatSlideToggleModule = /** @class */ (function () {\n    function MatSlideToggleModule() {\n    }\nMatSlideToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); }, imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ],\n        _MatSlideToggleRequiredValidatorModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule,\n        MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule,\n        MatSlideToggle,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], function () { return []; }, null); })();\n    return MatSlideToggleModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiEntityRoot } from 'projects/edit';\r\nimport { Observable } from 'rxjs';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Injectable()\r\nexport class EntitiesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.context.appId.toString(), force: tryForce.toString() },\r\n    }) as Observable<null>;\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { GlobalConfigService } from '../../../../../edit/shared/services/global-configuration.service';\r\n\r\n@Directive({ selector: '[appToggleDebug]' })\r\nexport class ToggleDebugDirective {\r\n\r\n  constructor(private globalConfigService: GlobalConfigService) { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    const CTRL_SHIFT_ALT_CLICK = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.shiftKey && event.altKey;\r\n    if (CTRL_SHIFT_ALT_CLICK) {\r\n      this.globalConfigService.toggleDebugEnabled();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DialogTypeConstants } from '../constants/dialog-types.constants';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyAppId, keyContentBlockId, keyDebug, keyDialog, keyItems, keyModuleId, keyPartOfPage, keyPipelineId, keyPortalRoot, keyRequestToken, keyTabId, keyUrl, keyZoneId, prefix } from '../constants/session.constants';\r\nimport { EditForm } from '../models/edit-form.model';\r\nimport { Context } from './context';\r\n\r\n@Injectable()\r\nexport class DialogService {\r\n  constructor(private context: Context) { }\r\n\r\n  openCodeFile(path: string) {\r\n    const dialog = DialogTypeConstants.Develop;\r\n    const form: EditForm = {\r\n      items: [{ Path: path }]\r\n    };\r\n    const oldHref = sessionStorage.getItem(keyUrl);\r\n    const oldUrl = new URL(oldHref);\r\n    const newHref = oldUrl.origin + oldUrl.pathname + oldUrl.search;\r\n    const newHash =\r\n      this.buildHashParam(keyZoneId, this.context.zoneId.toString()).replace('&', '#') +\r\n      this.buildHashParam(keyAppId, this.context.appId.toString()) +\r\n      this.buildHashParam(keyTabId, this.context.tabId.toString()) +\r\n      this.buildHashParam(keyModuleId, this.context.moduleId.toString()) +\r\n      this.buildHashParam(keyContentBlockId, this.context.contentBlockId.toString()) +\r\n      this.buildHashParam(keyPortalRoot) +\r\n      this.buildHashParam(keyPartOfPage) +\r\n      this.buildHashParam(keyRequestToken) +\r\n      this.buildHashParam(keyDialog, dialog) +\r\n      this.buildHashParam(keyItems, JSON.stringify(form.items)) +\r\n      (sessionStorage.getItem(keyDebug) ? this.buildHashParam(keyDebug) : '') +\r\n      '';\r\n\r\n    const url = newHref + newHash;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openQueryDesigner(queryId: number) {\r\n    const dialog = DialogTypeConstants.PipelineDesigner;\r\n    const form: EditForm = {\r\n      items: [{ EntityId: queryId }],\r\n    };\r\n    const oldHref = sessionStorage.getItem(keyUrl);\r\n    const oldUrl = new URL(oldHref);\r\n    const newHref = oldUrl.origin + oldUrl.pathname + oldUrl.search;\r\n    const newHash =\r\n      this.buildHashParam(keyZoneId, this.context.zoneId.toString()).replace('&', '#') +\r\n      this.buildHashParam(keyAppId, this.context.appId.toString()) +\r\n      this.buildHashParam(keyTabId, this.context.tabId.toString()) +\r\n      this.buildHashParam(keyModuleId, this.context.moduleId.toString()) +\r\n      this.buildHashParam(keyContentBlockId, this.context.contentBlockId.toString()) +\r\n      this.buildHashParam(keyPortalRoot) +\r\n      this.buildHashParam(keyPartOfPage) +\r\n      this.buildHashParam(keyRequestToken) +\r\n      this.buildHashParam(keyDialog, dialog) +\r\n      this.buildHashParam(keyPipelineId, queryId.toString()) +\r\n      this.buildHashParam(keyItems, JSON.stringify(form.items)) +\r\n      (sessionStorage.getItem(keyDebug) ? this.buildHashParam(keyDebug) : '') +\r\n      '';\r\n\r\n    const url = newHref + newHash;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  /** Encodes param if necessary */\r\n  private buildHashParam(key: string, value?: string) {\r\n    const rawKey = key.replace(prefix, '');\r\n    const valueTemp = (value != null) ? value : sessionStorage.getItem(key);\r\n    const rawValue = encodeURIComponent(valueTemp);\r\n    const hashParam = `&${rawKey}=${rawValue}`;\r\n    return hashParam;\r\n  }\r\n}\r\n","import { ICellRendererParams } from '@ag-grid-community/all-modules';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  tooltip: string;\r\n  id: number;\r\n  private params: ICellRendererParams;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.params = params;\r\n    this.tooltip = this.params.value;\r\n    const data: any = this.params.data;\r\n    if (data.Id != null) {\r\n      this.id = data.Id;\r\n    } else if (data.id != null) {\r\n      this.id = data.id;\r\n    } else if (data.Code != null) {\r\n      this.id = data.Code;\r\n    }\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy() {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [matTooltip]=\"tooltip\" (click)=\"copy()\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeHtml' })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Context } from '../../shared/services/context';\r\nimport { DialogSettings } from '../models/dialog-settings.model';\r\n\r\nconst webApiDialogRoot = 'admin/dialog/';\r\n\r\n@Injectable()\r\nexport class AppDialogConfigService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getDialogSettings() {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiDialogRoot + 'settings'), {\r\n      params: { appid: this.context.appId.toString() },\r\n    }) as Observable<DialogSettings>;\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ReplaceConfig } from '../../replace-content/models/replace-config.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentGroup, ContentGroupAdd } from '../models/content-group.model';\r\nimport { GroupHeader } from '../models/group-header.model';\r\n\r\nconst webApiContentGroup = 'cms/contentgroup/';\r\n\r\n@Injectable()\r\nexport class ContentGroupService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getItems(item: ContentGroup) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'replace'), {\r\n      params: { appId: this.context.appId.toString(), guid: item.guid, part: item.part, index: item.index.toString() }\r\n    }) as Observable<ReplaceConfig>;\r\n  }\r\n\r\n  saveItem(item: ContentGroupAdd) {\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'replace'), {}, {\r\n      params: { guid: item.guid, part: item.part, index: item.index.toString(), entityId: item.id.toString(), add: `${item.add}` }\r\n    }) as Observable<null>;\r\n  }\r\n\r\n  getList(contentGroup: ContentGroup) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'itemlist'), {\r\n      params: { appId: this.context.appId.toString(), guid: contentGroup.guid, part: contentGroup.part }\r\n    }) as Observable<GroupHeader[]>;\r\n  }\r\n\r\n  saveList(contentGroup: ContentGroup, resortedList: GroupHeader[]) {\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'itemlist'), resortedList, {\r\n      params: { appId: this.context.appId.toString(), guid: contentGroup.guid, part: contentGroup.part }\r\n    }) as Observable<boolean>;\r\n  }\r\n\r\n  getHeader(contentGroup: ContentGroup) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'header'), {\r\n      params: { appId: this.context.appId.toString(), guid: contentGroup.guid }\r\n    }) as Observable<GroupHeader>;\r\n  }\r\n\r\n}\r\n","export const defaultControllerName = 'MyController.cs';\r\nexport const defaultTemplateName = '_MyFile.cshtml';\r\nexport const defaultTokenName = 'MyFile.html';\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\" [ngSwitch]=\"isError\">\r\n  <mat-hint *ngSwitchCase=\"false\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-hint>\r\n\r\n  <mat-error *ngSwitchCase=\"true\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-error>\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ImportAppResult } from '../models/import-app-result.model';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ? changedName : '');\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }) as Observable<ImportAppResult>;\r\n  }\r\n}\r\n","export const fieldNamePattern = /^[A-Za-z][A-Za-z0-9-]+$/;\r\nexport const fieldNameError = 'Standard letters, numbers and hyphens are allowed. Must start with a letter.';\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({ selector: '[appClickStopPropagation]' })\r\nexport class ClickStopPropagationDirective {\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n","import { isDevMode, Directive, NgZone, ElementRef, Renderer2, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { AriaDescriber, A11yModule } from '@angular/cdk/a11y';\nimport { __extends } from 'tslib';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nvar nextId = 0;\n// Boilerplate for applying mixins to MatBadge.\n/** @docs-private */\nvar MatBadgeBase = /** @class */ (function () {\n    function MatBadgeBase() {\n    }\n    return MatBadgeBase;\n}());\nvar _MatBadgeMixinBase = mixinDisabled(MatBadgeBase);\n/** Directive to display a text badge. */\nvar MatBadge = /** @class */ (function (_super) {\n    __extends(MatBadge, _super);\n    function MatBadge(_ngZone, _elementRef, _ariaDescriber, _renderer, _animationMode) {\n        var _this = _super.call(this) || this;\n        _this._ngZone = _ngZone;\n        _this._elementRef = _elementRef;\n        _this._ariaDescriber = _ariaDescriber;\n        _this._renderer = _renderer;\n        _this._animationMode = _animationMode;\n        /** Whether the badge has any content. */\n        _this._hasContent = false;\n        _this._color = 'primary';\n        _this._overlap = true;\n        /**\n         * Position the badge should reside.\n         * Accepts any combination of 'above'|'below' and 'before'|'after'\n         */\n        _this.position = 'above after';\n        /** Size of the badge. Can be 'small', 'medium', or 'large'. */\n        _this.size = 'medium';\n        /** Unique id for the badge */\n        _this._id = nextId++;\n        if (isDevMode()) {\n            var nativeElement = _elementRef.nativeElement;\n            if (nativeElement.nodeType !== nativeElement.ELEMENT_NODE) {\n                throw Error('matBadge must be attached to an element node.');\n            }\n        }\n        return _this;\n    }\n    Object.defineProperty(MatBadge.prototype, \"color\", {\n        /** The color of the badge. Can be `primary`, `accent`, or `warn`. */\n        get: function () { return this._color; },\n        set: function (value) {\n            this._setColor(value);\n            this._color = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatBadge.prototype, \"overlap\", {\n        /** Whether the badge should overlap its contents or not */\n        get: function () { return this._overlap; },\n        set: function (val) {\n            this._overlap = coerceBooleanProperty(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatBadge.prototype, \"description\", {\n        /** Message used to describe the decorated element via aria-describedby */\n        get: function () { return this._description; },\n        set: function (newDescription) {\n            if (newDescription !== this._description) {\n                var badgeElement = this._badgeElement;\n                this._updateHostAriaDescription(newDescription, this._description);\n                this._description = newDescription;\n                if (badgeElement) {\n                    newDescription ? badgeElement.setAttribute('aria-label', newDescription) :\n                        badgeElement.removeAttribute('aria-label');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatBadge.prototype, \"hidden\", {\n        /** Whether the badge is hidden. */\n        get: function () { return this._hidden; },\n        set: function (val) {\n            this._hidden = coerceBooleanProperty(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Whether the badge is above the host or not */\n    MatBadge.prototype.isAbove = function () {\n        return this.position.indexOf('below') === -1;\n    };\n    /** Whether the badge is after the host or not */\n    MatBadge.prototype.isAfter = function () {\n        return this.position.indexOf('before') === -1;\n    };\n    MatBadge.prototype.ngOnChanges = function (changes) {\n        var contentChange = changes['content'];\n        if (contentChange) {\n            var value = contentChange.currentValue;\n            this._hasContent = value != null && (\"\" + value).trim().length > 0;\n            this._updateTextContent();\n        }\n    };\n    MatBadge.prototype.ngOnDestroy = function () {\n        var badgeElement = this._badgeElement;\n        if (badgeElement) {\n            if (this.description) {\n                this._ariaDescriber.removeDescription(badgeElement, this.description);\n            }\n            // When creating a badge through the Renderer, Angular will keep it in an index.\n            // We have to destroy it ourselves, otherwise it'll be retained in memory.\n            if (this._renderer.destroyNode) {\n                this._renderer.destroyNode(badgeElement);\n            }\n        }\n    };\n    /**\n     * Gets the element into which the badge's content is being rendered.\n     * Undefined if the element hasn't been created (e.g. if the badge doesn't have content).\n     */\n    MatBadge.prototype.getBadgeElement = function () {\n        return this._badgeElement;\n    };\n    /** Injects a span element into the DOM with the content. */\n    MatBadge.prototype._updateTextContent = function () {\n        if (!this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n        }\n        else {\n            this._badgeElement.textContent = this.content;\n        }\n        return this._badgeElement;\n    };\n    /** Creates the badge element */\n    MatBadge.prototype._createBadgeElement = function () {\n        var badgeElement = this._renderer.createElement('span');\n        var activeClass = 'mat-badge-active';\n        var contentClass = 'mat-badge-content';\n        // Clear any existing badges which may have persisted from a server-side render.\n        this._clearExistingBadges(contentClass);\n        badgeElement.setAttribute('id', \"mat-badge-content-\" + this._id);\n        badgeElement.classList.add(contentClass);\n        badgeElement.textContent = this.content;\n        if (this._animationMode === 'NoopAnimations') {\n            badgeElement.classList.add('_mat-animation-noopable');\n        }\n        if (this.description) {\n            badgeElement.setAttribute('aria-label', this.description);\n        }\n        this._elementRef.nativeElement.appendChild(badgeElement);\n        // animate in after insertion\n        if (typeof requestAnimationFrame === 'function' && this._animationMode !== 'NoopAnimations') {\n            this._ngZone.runOutsideAngular(function () {\n                requestAnimationFrame(function () {\n                    badgeElement.classList.add(activeClass);\n                });\n            });\n        }\n        else {\n            badgeElement.classList.add(activeClass);\n        }\n        return badgeElement;\n    };\n    /** Sets the aria-label property on the element */\n    MatBadge.prototype._updateHostAriaDescription = function (newDescription, oldDescription) {\n        // ensure content available before setting label\n        var content = this._updateTextContent();\n        if (oldDescription) {\n            this._ariaDescriber.removeDescription(content, oldDescription);\n        }\n        if (newDescription) {\n            this._ariaDescriber.describe(content, newDescription);\n        }\n    };\n    /** Adds css theme class given the color to the component host */\n    MatBadge.prototype._setColor = function (colorPalette) {\n        if (colorPalette !== this._color) {\n            if (this._color) {\n                this._elementRef.nativeElement.classList.remove(\"mat-badge-\" + this._color);\n            }\n            if (colorPalette) {\n                this._elementRef.nativeElement.classList.add(\"mat-badge-\" + colorPalette);\n            }\n        }\n    };\n    /** Clears any existing badges that might be left over from server-side rendering. */\n    MatBadge.prototype._clearExistingBadges = function (cssClass) {\n        var element = this._elementRef.nativeElement;\n        var childCount = element.children.length;\n        // Use a reverse while, because we'll be removing elements from the list as we're iterating.\n        while (childCount--) {\n            var currentChild = element.children[childCount];\n            if (currentChild.classList.contains(cssClass)) {\n                element.removeChild(currentChild);\n            }\n        }\n    };\n    /** @nocollapse */\n    MatBadge.ctorParameters = function () { return [\n        { type: NgZone },\n        { type: ElementRef },\n        { type: AriaDescriber },\n        { type: Renderer2 },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatBadge.propDecorators = {\n        color: [{ type: Input, args: ['matBadgeColor',] }],\n        overlap: [{ type: Input, args: ['matBadgeOverlap',] }],\n        position: [{ type: Input, args: ['matBadgePosition',] }],\n        content: [{ type: Input, args: ['matBadge',] }],\n        description: [{ type: Input, args: ['matBadgeDescription',] }],\n        size: [{ type: Input, args: ['matBadgeSize',] }],\n        hidden: [{ type: Input, args: ['matBadgeHidden',] }]\n    };\nMatBadge.ɵfac = function MatBadge_Factory(t) { return new (t || MatBadge)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AriaDescriber), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatBadge.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatBadge, selectors: [[\"\", \"matBadge\", \"\"]], hostAttrs: [1, \"mat-badge\"], hostVars: 20, hostBindings: function MatBadge_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-badge-overlap\", ctx.overlap)(\"mat-badge-above\", ctx.isAbove())(\"mat-badge-below\", !ctx.isAbove())(\"mat-badge-before\", !ctx.isAfter())(\"mat-badge-after\", ctx.isAfter())(\"mat-badge-small\", ctx.size === \"small\")(\"mat-badge-medium\", ctx.size === \"medium\")(\"mat-badge-large\", ctx.size === \"large\")(\"mat-badge-hidden\", ctx.hidden || !ctx._hasContent)(\"mat-badge-disabled\", ctx.disabled);\n    } }, inputs: { disabled: [\"matBadgeDisabled\", \"disabled\"], color: [\"matBadgeColor\", \"color\"], overlap: [\"matBadgeOverlap\", \"overlap\"], description: [\"matBadgeDescription\", \"description\"], hidden: [\"matBadgeHidden\", \"hidden\"], position: [\"matBadgePosition\", \"position\"], content: [\"matBadge\", \"content\"], size: [\"matBadgeSize\", \"size\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatBadge, [{\n        type: Directive,\n        args: [{\n                selector: '[matBadge]',\n                inputs: ['disabled: matBadgeDisabled'],\n                host: {\n                    'class': 'mat-badge',\n                    '[class.mat-badge-overlap]': 'overlap',\n                    '[class.mat-badge-above]': 'isAbove()',\n                    '[class.mat-badge-below]': '!isAbove()',\n                    '[class.mat-badge-before]': '!isAfter()',\n                    '[class.mat-badge-after]': 'isAfter()',\n                    '[class.mat-badge-small]': 'size === \"small\"',\n                    '[class.mat-badge-medium]': 'size === \"medium\"',\n                    '[class.mat-badge-large]': 'size === \"large\"',\n                    '[class.mat-badge-hidden]': 'hidden || !_hasContent',\n                    '[class.mat-badge-disabled]': 'disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.AriaDescriber }, { type: ɵngcc0.Renderer2 }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input,\n            args: ['matBadgeColor']\n        }], overlap: [{\n            type: Input,\n            args: ['matBadgeOverlap']\n        }], description: [{\n            type: Input,\n            args: ['matBadgeDescription']\n        }], hidden: [{\n            type: Input,\n            args: ['matBadgeHidden']\n        }], position: [{\n            type: Input,\n            args: ['matBadgePosition']\n        }], content: [{\n            type: Input,\n            args: ['matBadge']\n        }], size: [{\n            type: Input,\n            args: ['matBadgeSize']\n        }] }); })();\n    return MatBadge;\n}(_MatBadgeMixinBase));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MatBadgeModule = /** @class */ (function () {\n    function MatBadgeModule() {\n    }\nMatBadgeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatBadgeModule });\nMatBadgeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatBadgeModule_Factory(t) { return new (t || MatBadgeModule)(); }, imports: [[\n            A11yModule,\n            MatCommonModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatBadgeModule, { declarations: function () { return [MatBadge]; }, imports: function () { return [A11yModule,\n        MatCommonModule]; }, exports: function () { return [MatBadge]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatBadgeModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    A11yModule,\n                    MatCommonModule\n                ],\n                exports: [MatBadge],\n                declarations: [MatBadge]\n            }]\n    }], function () { return []; }, null); })();\n    return MatBadgeModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatBadge, MatBadgeModule };\n\n//# sourceMappingURL=badge.js.map","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiEntityList } from 'projects/edit';\r\nimport { from, Observable } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Query } from '../models/query.model';\r\n\r\nconst webApiQueryRoot = 'admin/query/';\r\nconst webApiQueryImport = webApiQueryRoot + 'import';\r\nconst webApiQueryClone = webApiQueryRoot + 'Clone';\r\nconst webApiQueryDelete = webApiQueryRoot + 'Delete';\r\nexport const webApiQueryRun = webApiQueryRoot + 'Run';\r\nexport const webApiQuerySave = webApiQueryRoot + 'Save';\r\nexport const webApiQueryGet = webApiQueryRoot + 'Get';\r\nexport const webApiQueryDataSources = webApiQueryRoot + 'DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType }\r\n    }) as Observable<Query[]>;\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      mergeMap(fileBase64 => {\r\n        return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiQueryImport), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        }) as Observable<boolean>;\r\n      })\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.context.appId.toString() }\r\n    }) as Observable<null>;\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    }) as Observable<boolean>;\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({ selector: '[appMousedownStopPropagation]' })\r\nexport class MousedownStopPropagationDirective {\r\n  @HostListener('mousedown', ['$event'])\r\n  onMousedown(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-empty-route',\r\n  templateUrl: './empty-route.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EmptyRouteComponent {\r\n  constructor() { }\r\n}\r\n","<router-outlet></router-outlet>\r\n","export class InputTypeConstants {\r\n    // String\r\n    public static readonly StringDefault = 'string-default';\r\n    public static readonly StringUrlPath = 'string-url-path';\r\n    public static readonly StringDropdown = 'string-dropdown';\r\n    public static readonly StringDropdownQuery = 'string-dropdown-query';\r\n    public static readonly StringFontIconPicker = 'string-font-icon-picker';\r\n    public static readonly StringTemplatePicker = 'string-template-picker';\r\n    public static readonly StringWysiwyg = 'string-wysiwyg';\r\n    // Boolean\r\n    public static readonly BooleanDefault = 'boolean-default';\r\n    // DateTime\r\n    public static readonly DatetimeDefault = 'datetime-default';\r\n    // Empty\r\n    public static readonly EmptyDefault = 'empty-default';\r\n    // Number\r\n    public static readonly NumberDefault = 'number-default';\r\n    // Entity\r\n    public static readonly EntityDefault = 'entity-default';\r\n    public static readonly EntityQuery = 'entity-query';\r\n    public static readonly EntityContentBlocks = 'entity-content-blocks';\r\n    // Hyperlink\r\n    public static readonly HyperlinkDefault = 'hyperlink-default';\r\n    public static readonly HyperlinkLibrary = 'hyperlink-library';\r\n    // Custom\r\n    public static readonly ExternalWebComponent = 'external-web-component';\r\n    public static readonly CustomGPS = 'custom-gps';\r\n    public static readonly CustomDefault = 'custom-default';\r\n    // Old\r\n    public static readonly OldTypeDropdown = 'dropdown';\r\n    public static readonly OldTypeWysiwyg = 'wysiwyg';\r\n    public static readonly OldTypeDefault = 'default';\r\n    public static readonly StringWysiwygTinymce = 'string-wysiwyg-tinymce';\r\n    public static readonly StringWysiwygAdv = 'string-wysiwyg-adv';\r\n    public static readonly StringWysiwygDnn = 'string-wysiwyg-dnn';\r\n    // Default\r\n    public static readonly DefaultSuffix = '-default';\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nconst webApiRoot = 'admin/metadata/get';\r\n\r\n@Injectable()\r\nexport class MetadataService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param typeId metadataOf something. For more info checkout out eavConstants file\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of content type for which we search for permissions. Key is connected with keyType\r\n   * @param contentTypeName name of content type where permissions are stored\r\n   */\r\n  getMetadata(typeId: number, keyType: string, key: string, contentTypeName: string) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiRoot), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        targetType: typeId.toString(),\r\n        keyType,\r\n        key,\r\n        contentType: contentTypeName,\r\n      },\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}