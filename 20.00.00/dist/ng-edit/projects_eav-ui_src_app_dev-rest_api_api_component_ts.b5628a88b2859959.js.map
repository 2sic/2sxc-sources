{"version":3,"file":"projects_eav-ui_src_app_dev-rest_api_api_component_ts.b5628a88b2859959.js","mappings":"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","names":["appFilesAsset","apiExplorerAppApiFiles","SourceService","HttpServiceBase","get","viewKey","global","urlItems","this","getHttpApiUrl","params","appId","templateIdOrPath","pipe","map","view","Type","toLocaleLowerCase","Extension","save","http","post","apiUrl","getAllPromise","mask","fetchPromise","then","Files","forEach","file","Shared","getWebApis","files","isShared","isCompiled","splitIndex","path","lastIndexOf","fileExtIndex","folder","substring","name","endpointPath","edition","getWebApisLive","refresh","apiResource","httpResource","url","computed","value","getWebApiDetails","apiPath","zoneId","getPredefinedTemplates","purpose","type","getPreview","templateKey","create","test","find","i","EntityId","toString","IsShared","Path","templateId","static","__ngFactoryType__","_angular_core__WEBPACK_IMPORTED_MODULE_5__","jDH","factory","ɵfac","i0","ctx_r0","data","parameters","length","gridOptions","DevRestApiActionParamsComponent","constructor","input","buildGridOptions","defaultGridOptions","columnDefs","field","headerClass","width","cellClass","split","valueGetter","p","isOptional","cellRenderer","TrueFalseComponent","cellRendererParams","reverse","flex","minWidth","ColumnDefinitions","TextWide","headerName","debug_node_JnOYh9kg","VBU","selectors","inputs","decls","vars","consts","template","rf","ctx","DevRestApiActionParamsComponent_Conditional_4_Template","DevRestApiActionParamsComponent_Conditional_5_Template","MatIconModule","i1","SxcGridModule","i2","encapsulation","generateWebApiCalls","$2sxc","scenario","context","root","urlParams","verbs","virtual","startsWith","contextParams","tabId","moduleId","directUrl","pathWithParams","result","Array","includes","push","ApiCall","snippetsGet","list","pathWithContext","inSameContext","CodeSample","hint$2sxc","in2sxc","endPointGetter","endPointGetWithParams","inSameSite","warningExternal","snippetsPost","warningSimpleSampleOnly","DevRestApiIntroductionComponent","scenarios","AllScenarios","ngOnInit","DevRestApiPermissionsComponent","ngOnChanges","changes","buildGridItems","gridItems","requirement","class","details","security","ignoreSecurity","method","selected","effective","mergedSecurity","comments","allowAnonymous","requireVerificationToken","edit","admin","superUser","requireContext","gridHeight","Boolean3","TextWideFlex3","features","action_r3","join","vm_r4","useVirtual","$event","_r1","ctx_r1","changeScenario","updateAction","DevRestApiComponent_Conditional_0_For_16_Template","DevRestApiComponent_Conditional_0_div_19_Template","DevRestApiComponent_Conditional_0_div_23_Template","updateParams","DevRestApiComponent_Conditional_0_div_45_Template","DevRestApiComponent_Conditional_0_div_48_Template","webApi","key","actions","urlParams$","DevRestApiComponent","DevRestBase","dnnContext","dialog","router","route","super","log","classLog","hostClass","selectedActionName$","BehaviorSubject","sourceService","transient","logWebApi","rxTap","enabled","webApi$","combineLatest","paramMap","pm","GoToDevRest","paramApiPath","shareReplay","webApis","decodeURIComponent","w","apiDetails$","switchMap","share","logToSelectedAction","filter","x","subscribe","a","next","logSelectedActions","selectedAction$","root$","scenario$","dialogSettings$","action","dialogSettings","resolved","replace","encodeURI","Context","App","Folder","rootBasedOnScenario","viewModel$","selActions","diag","buildBaseViewModel","permissionsHasAnonymous","apiCalls","event","target","i3","i4","hostVars","hostBindings","DevRestApiComponent_Conditional_0_Template","tmp_0_0","MatButtonModule","TippyDirective","i5","RouterOutlet","SelectorWithHelpComponent","MatFormFieldModule","i6","MatSelectModule","i7","MatOptionModule","MatTabsModule","i8","DevRestTabIntroductionComponent","DevRestTabExamplesComponent","MatExpansionModule","i9","MatInputModule","i10","DevRestUrlsAndCodeComponent","DevRestHttpHeadersComponent","AsyncPipe","styles"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/code-editor/services/source.service.ts","./projects/eav-ui/src/app/dev-rest/api/action-params/action-params.component.html","./projects/eav-ui/src/app/dev-rest/api/action-params/action-params.component.ts","./projects/eav-ui/src/app/dev-rest/api/api-samples.ts","./projects/eav-ui/src/app/dev-rest/api/introduction/introduction.component.ts","./projects/eav-ui/src/app/dev-rest/api/introduction/introduction.component.html","./projects/eav-ui/src/app/dev-rest/api/permissions/permissions.component.ts","./projects/eav-ui/src/app/dev-rest/api/permissions/permissions.component.html","./projects/eav-ui/src/app/dev-rest/api/api.component.html","./projects/eav-ui/src/app/dev-rest/api/api.component.ts"],"sourcesContent":["import { httpResource } from '@angular/common/http';\r\nimport { computed, Injectable, Signal } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { WebApi, WebApiDetails } from '../../app-administration/models';\r\nimport { ViewOrFileIdentifier } from '../../shared/models/edit-form.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { FileAsset } from '../models/file-asset.model';\r\nimport { PredefinedTemplatesResponse } from '../models/predefined-template.model';\r\nimport { Preview } from '../models/preview.models';\r\nimport { SourceView } from '../models/source-view.model';\r\n\r\nconst appFilesAll = 'admin/AppFiles/AppFiles';\r\nconst appFilesAsset = 'admin/AppFiles/asset';\r\nconst appFilesCreate = 'admin/AppFiles/create';\r\nconst apiExplorerInspect = 'admin/ApiExplorer/inspect';\r\nconst apiExplorerAppApiFiles = 'admin/ApiExplorer/AppApiFiles';\r\nconst appFilesPredefinedTemplates = 'admin/AppFiles/GetTemplates';\r\nconst appFilesPreview = 'admin/AppFiles/preview';\r\n\r\n@Injectable()\r\nexport class SourceService extends HttpServiceBase {\r\n\r\n  // TODO: @2dg, ask 2dm \r\n  /** ViewKey is templateId or path */\r\n  get(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[]): Observable<SourceView> {\r\n    return this.getHttpApiUrl<SourceView>(appFilesAsset, {\r\n      params: {\r\n        appId: this.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    }).pipe(\r\n      map(view => {\r\n        if (view.Type.toLocaleLowerCase() === 'auto') {\r\n          switch (view.Extension.toLocaleLowerCase()) {\r\n            case '.cs':\r\n            case '.cshtml':\r\n              view.Type = 'Razor';\r\n              break;\r\n            case '.html':\r\n            case '.css':\r\n            case '.js':\r\n              view.Type = 'Token';\r\n              break;\r\n          }\r\n        }\r\n        return view;\r\n      })\r\n    );\r\n  }\r\n\r\n  // TODO: @2dg, ask 2dm \r\n  // getSig(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[], initial: undefined): Signal<SourceView> {\r\n  //   // Signal für die SourceView erstellen\r\n  //   const temp = this.getSignal<SourceView>(appFilesAsset, {\r\n  //     params: {\r\n  //       appId: this.appId,\r\n  //       global,\r\n  //       ...this.templateIdOrPath(viewKey, global, urlItems),\r\n  //     },\r\n  //   }, initial);\r\n  //   return computed(() => {\r\n  //     const result = temp();\r\n\r\n  //     if (result && result.Type.toLocaleLowerCase() === 'auto') {\r\n  //       switch (result.Extension.toLocaleLowerCase()) {\r\n  //         case '.cs':\r\n  //         case '.cshtml':\r\n  //           result.Type = 'Razor';\r\n  //           break;\r\n  //         case '.html':\r\n  //         case '.css':\r\n  //         case '.js':\r\n  //           result.Type = 'Token';\r\n  //           break;\r\n  //       }\r\n  //     }\r\n\r\n  //     return result;\r\n  //   });\r\n  // }\r\n\r\n\r\n  /** ViewKey is templateId or path */\r\n  save(viewKey: string, global: boolean, view: SourceView, urlItems: ViewOrFileIdentifier[]): Observable<boolean> {\r\n    return this.http.post<boolean>(this.apiUrl(appFilesAsset), view, {\r\n      params: {\r\n        appId: this.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    });\r\n  }\r\n\r\n  getAllPromise(mask?: string): Promise<FileAsset[]> {\r\n    return this.fetchPromise<{ Files: FileAsset[] }>(appFilesAll, {\r\n      params: {\r\n        appId: this.appId,\r\n        ...(mask && { mask }),\r\n      },\r\n    }).then(({ Files }) => {\r\n      Files.forEach(file => {\r\n        file.Shared ??= false;\r\n      });\r\n      return Files;\r\n    });\r\n  }\r\n\r\n  // TODO: @2dg, ask 2dm\r\n  getWebApis(): Observable<WebApi[]> {\r\n    return this.getHttpApiUrl<{ files: WebApi[] }>(apiExplorerAppApiFiles, {\r\n      params: {\r\n        appId: this.appId,\r\n      },\r\n    }).pipe(\r\n      map(({ files }) => {\r\n        files.forEach(file => {\r\n          file.isShared ??= false;\r\n          file.isCompiled ??= false;\r\n        });\r\n        return files;\r\n      }),\r\n    ).pipe(\r\n      map(files => {\r\n        const webApis: WebApi[] = files.map(file => {\r\n          const splitIndex = file.path.lastIndexOf('/');\r\n          const fileExtIndex = file.path.lastIndexOf('.');\r\n          const folder = file.path.substring(0, splitIndex);\r\n          const name = file.path.substring(splitIndex + 1, fileExtIndex);\r\n          const webApi: WebApi = { path: file.path, folder, name, isShared: file.isShared, endpointPath: file.endpointPath, isCompiled: file.isCompiled, edition: file.edition };\r\n          return webApi;\r\n        });\r\n        return webApis;\r\n      }),\r\n    );\r\n  }\r\n\r\n\r\n  getWebApisLive(refresh: Signal<unknown>) {\r\n    const apiResource = httpResource<{ files: WebApi[] }>(() => {\r\n      refresh();\r\n      return {\r\n        url: this.apiUrl(apiExplorerAppApiFiles),\r\n        params: { appId: this.appId },\r\n      };\r\n    });\r\n\r\n    // Return a computed signal that transforms the data\r\n    return computed(() => {\r\n      const response = apiResource.value();\r\n      const files = response?.files;\r\n\r\n      if (!files) return [];\r\n\r\n      // Set default values for isShared and isCompiled if they are undefined\r\n      files.forEach(file => {\r\n        file.isShared ??= false;\r\n        file.isCompiled ??= false;\r\n      });\r\n\r\n      // Transform the raw files into the desired WebApi format\r\n      return files.map(file => {\r\n        const splitIndex = file.path.lastIndexOf('/');\r\n        const fileExtIndex = file.path.lastIndexOf('.');\r\n        const folder = file.path.substring(0, splitIndex);\r\n        const name = file.path.substring(splitIndex + 1, fileExtIndex);\r\n\r\n        return {\r\n          path: file.path,\r\n          folder,\r\n          name,\r\n          isShared: file.isShared,\r\n          endpointPath: file.endpointPath,\r\n          isCompiled: file.isCompiled,\r\n          edition: file.edition,\r\n        } as WebApi;\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  // TODO: @2dg, ask 2dm \r\n  getWebApiDetails(apiPath: string): Observable<WebApiDetails> {\r\n    return this.getHttpApiUrl<WebApiDetails>(apiExplorerInspect, {\r\n      params: { appId: this.appId, zoneId: this.zoneId, path: apiPath },\r\n    });\r\n  }\r\n\r\n  getPredefinedTemplates(purpose?: 'Template' | 'Search' | 'Api', type?: 'Token' | 'Razor'): Promise<PredefinedTemplatesResponse> {\r\n    return this.fetchPromise<PredefinedTemplatesResponse>(appFilesPredefinedTemplates, {\r\n      params: {\r\n        ...(purpose && { purpose }),\r\n        ...(type && { type }),\r\n      },\r\n    });\r\n  }\r\n\r\n  // TODO: @2dg, ask 2dm \r\n  getPreview(path: string, global: boolean, templateKey: string): Observable<Preview> {\r\n    return this.getHttpApiUrl<Preview>(appFilesPreview, {\r\n      params: {\r\n        appId: this.appId,\r\n        path,\r\n        templateKey,\r\n        global,\r\n      },\r\n    });\r\n  }\r\n\r\n  create(path: string, global: boolean, templateKey: string): Observable<boolean> {\r\n    return this.http.post<boolean>(this.apiUrl(appFilesCreate), {}, {\r\n      params: {\r\n        appId: this.appId,\r\n        global,\r\n        purpose: 'auto',\r\n        path,\r\n        templateKey,\r\n      },\r\n    });\r\n  }\r\n\r\n  private templateIdOrPath(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[]) {\r\n    if (/^[0-9]*$/g.test(viewKey)) {\r\n      const path = urlItems.find(i => i.EntityId?.toString() === viewKey && i.IsShared === global)?.Path;\r\n      return {\r\n        templateId: viewKey,\r\n        ...(path != null && { path }),\r\n      };\r\n    } else {\r\n      return { path: viewKey };\r\n    }\r\n  }\r\n}\r\n","<h3><code>{{data().name}}</code> Parameters</h3>\r\n\r\n@if (!data().parameters.length) {\r\n  <p class=\"warning info-box\">\r\n    <mat-icon>info</mat-icon>\r\n    This endpoint doesn't seem to use any parameters.\r\n  </p>\r\n}\r\n\r\n@if (data().parameters.length) {\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"data().parameters\"\r\n    [gridOptions]=\"gridOptions\" [style.height]=\"(33 + data().parameters.length * 48) + 'px'\">\r\n  </ag-grid-angular>\r\n}","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, input } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { WebApiAction, WebApiActionParameters } from '../../../app-administration/models/web-api-details';\r\nimport { ColumnDefinitions } from '../../../shared/ag-grid/column-definitions';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { SxcGridModule } from '../../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { TrueFalseComponent } from '../true-false/true-false.component';\r\nimport { TrueFalseParams } from '../true-false/true-false.models';\r\n\r\n@Component({\r\n    selector: 'app-dev-rest-api-action-params',\r\n    templateUrl: './action-params.component.html',\r\n    imports: [\r\n        MatIconModule,\r\n        SxcGridModule,\r\n    ]\r\n})\r\nexport class DevRestApiActionParamsComponent {\r\n  data = input<WebApiAction>();\r\n\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  constructor() { }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          field: 'Required',\r\n          headerClass: 'dense',\r\n          width: 80,\r\n          cellClass: 'no-padding no-outline'.split(' '),\r\n          valueGetter: (p: { data: WebApiActionParameters }) => p.data.isOptional,\r\n          cellRenderer: TrueFalseComponent,\r\n          cellRendererParams: (() => {\r\n            const params: TrueFalseParams = {\r\n              reverse: false,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          field: 'Name',\r\n          flex: 2,\r\n          minWidth: 200,\r\n          cellClass: 'no-outline',\r\n          valueGetter: (p: { data: WebApiActionParameters }) => p.data.name,\r\n        },\r\n        {\r\n          field: 'Type',\r\n          flex: 2,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-outline',\r\n          valueGetter: (p: { data: WebApiActionParameters }) => p.data.type,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Default Value',\r\n          field: 'DefaultValue',\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","import { SxcGlobal } from '@2sic.com/2sxc-typings';\r\nimport { ApiCall, CodeSample, hint$2sxc, Scenario, warningExternal, warningSimpleSampleOnly } from '..';\r\nimport { Context } from '../../shared/services/context';\r\n// tslint:disable: curly\r\n\r\nexport function generateWebApiCalls($2sxc: SxcGlobal, scenario: Scenario, context: Context, root: string,\r\n  urlParams: string, verbs: string[]) {\r\n  const virtual = root[0] !== '/' && !root.startsWith('http');\r\n\r\n  // if urlParams exist and it doesn't starts with a ?, add that\r\n  if (urlParams && urlParams.length && urlParams[0] !== '?')\r\n    urlParams = '?' + urlParams;\r\n\r\n  const contextParams = virtual\r\n    ? `${urlParams}${urlParams ? '&' : '?'}PageId=${context.tabId}&ModuleId=${context.moduleId}`\r\n    : '';\r\n  const directUrl = $2sxc.http.apiUrl(root) + contextParams;\r\n  const pathWithParams = root + urlParams;\r\n\r\n  const result = new Array<ApiCall>();\r\n  if (verbs.includes('GET'))\r\n    result.push(new ApiCall(virtual, 'GET', pathWithParams, 'call the WebAPI endpoint', 'call GET on this endpoint', true,\r\n      snippetsGet(scenario, pathWithParams, context), directUrl));\r\n\r\n  if (verbs.includes('POST'))\r\n    result.push(new ApiCall(virtual, 'POST', pathWithParams, 'call the WebAPI endpoint', 'call POST on this endpoint', false,\r\n      snippetsPost(scenario, pathWithParams, context.moduleId), directUrl));\r\n\r\n  return result;\r\n}\r\n\r\nfunction snippetsGet(scenario: Scenario, path: string, context: Context): CodeSample[] {\r\n  const moduleId = context.moduleId;\r\n  const virtual = path[0] !== '/';\r\n  const list: CodeSample[] = [];\r\n  const pathWithContext = `${path}?PageId=${context.tabId}&ModuleId=${moduleId}`;\r\n\r\n  if (scenario.inSameContext)\r\n    list.push(new CodeSample('Example with global $2sxc and event-context',\r\n      'This example finds the context information from the HTML where an action started.',\r\n      `\r\n<button onclick=\"$2sxc(this).webApi.get('${path}').then(data => console.log(data))\">\r\n  get it\r\n</button>`, false, [hint$2sxc]));\r\n\r\n  if (scenario.in2sxc)\r\n    list.push(new CodeSample(`Example with global $2sxc and a Module-Id ${moduleId}`,\r\n      `This is how you get the context when your code doesn't start with a DOM context, so you need the moduleId.`,\r\n      `\r\n// get the sxc-controller for this module\r\nvar sxc = $2sxc(${moduleId});\r\n// now get the data in the promise\r\nsxc.webApi.get('${path}')\r\n  .then(data => {\r\n    console.log(data)\r\n  });`,\r\n      false, [hint$2sxc]),\r\n      new CodeSample(`Same example as one-liner`,\r\n        'This is the same as above, but as a one-liner so you can run it directly in the F12 console right now.',\r\n        `$2sxc(${moduleId}).webApi.get('${path}').then(data => console.log('just got:', data));`, true));\r\n\r\n  if (scenario.in2sxc && scenario.inSameContext)\r\n    list.push(new CodeSample('Example where you get the Module-Id from Razor',\r\n      `This example doesn't use a fixed moduleId but let's the Razor add the current moduleId when the page is rendered.`,\r\n      `\r\n// this will be replaced on the server with the ID\r\nvar moduleId = @Dnn.Module.ModuleID;\r\nvar sxc = $2sxc(moduleId);\r\nvar promise = sxc.webApi.get('${path}');`, false, [hint$2sxc]));\r\n\r\n  // jquery examples, they differ based on the scenario\r\n  const endPointGetter = virtual ? `$2sxc.http.apiUrl('${path}')` : `'${path}'`;\r\n  const endPointGetWithParams = virtual ? `$2sxc.http.apiUrl('${pathWithContext}')` : `'${pathWithContext}'`;\r\n  if (scenario.inSameSite) {\r\n    // jQuery using setModuleHeaders\r\n    list.push(new CodeSample('Using jQuery inside DNN',\r\n      `This example uses jQuery instead of the $2sxc to do the AJAX call.\r\n      It shows you how to resolve the virtual path for use in other ways.`,\r\n      `\r\nvar endpoint = ${endPointGetter};\r\n$.ajax({\r\n  url:endpoint,\r\n  beforeSend: $.dnnSF(${moduleId}).setModuleHeaders\r\n}).then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, []));\r\n\r\n    // jQuery Single-Liner\r\n    list.push(new CodeSample('Using jQuery as single-liner',\r\n      `The same example as above, just as single-liner so you can test it directly in the F12 console.\r\n      This will only work if you're on a DNN page with this module.`,\r\n      `$.ajax({url: ${endPointGetter}, beforeSend: $.dnnSF(${moduleId}).setModuleHeaders }).then(data => console.log(data))`,\r\n      false, []));\r\n\r\n    // jQuery without setModuleHeaders\r\n    list.push(new CodeSample('Using jQuery and add Context in URL',\r\n      `This example uses jQuery instead of the $2sxc to do the AJAX call.\r\n      But instead of using the DNN Services Framework it adds relevant headers to the url.`,\r\n      `\r\n$.ajax(${endPointGetWithParams}).then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, []));\r\n\r\n    // jQuery Single-Liner without SetModuleHeaders\r\n    list.push(new CodeSample('Using jQuery with url-context as single-liner',\r\n      `The same example as above, just as single-liner so you can test it directly in the F12 console.\r\n      This will work on a DNN page which has jQuery activated. `,\r\n      `$.ajax(${endPointGetWithParams}).then(data => console.log(data))`,\r\n      false, []));\r\n\r\n  } else {\r\n    // jQuery External\r\n    list.push(new CodeSample('Using jQuery in another Site or External',\r\n      `This example uses jQuery and doesn't use $2sxc or the DNN ServicesFramework,\r\n      because they would be either missing, or give wrong context-headers.`,\r\n      `\r\n$.ajax('${path}').then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, [warningExternal]));\r\n\r\n    // jQuery External with Context\r\n    list.push(new CodeSample('Using jQuery with Context in URL',\r\n      `This example uses jQuery and includes a module-context. This is unusual for external access, but may be needed sometime.`,\r\n      `\r\n$.ajax('${pathWithContext}').then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, [warningExternal]));\r\n  }\r\n  // return generated snippets\r\n  return list;\r\n}\r\n\r\n/** Snippets for basic Post */\r\nfunction snippetsPost(scenario: Scenario, path: string, moduleId: number): CodeSample[] {\r\n  const showWarning = !scenario.inSameContext;\r\n  return [\r\n    new CodeSample('Basic Example',\r\n      `This example uses the ModuleId to get the context information.\r\nTo see other ways to get the context and headers, check out the GET examples.\r\nNote that this snippet doesn't use real names of properties to add.`,\r\n      `// get the sxc-controller for this module\r\nvar sxc = $2sxc(${moduleId});\r\n\r\n// The object we'll send to get created. It's just a simple object with properties\r\nvar urlParams = {\r\n  id: 47,\r\n};\r\nvar postParams = {\r\n  // related items like tags can be assigned with IDs\r\n  // which you would usually get from somewhere first\r\n  list: [17, 4203, 5030],\r\n  message: 'Some Text',\r\n};\r\n\r\n// now create it and get the id back\r\nsxc.webApi.post('${path}', urlParams, postParams)\r\n  .then(data => {\r\n    console.log('Got this ID information: ', data)\r\n  });`,\r\n      false,\r\n      showWarning ? [warningSimpleSampleOnly] : []),\r\n  ];\r\n}\r\n","import { Component, input, OnInit } from '@angular/core';\r\nimport { AllScenarios } from '../..';\r\nimport { DevRestApiModel } from '../api-template-vars';\r\n\r\n@Component({\r\n  selector: 'app-dev-api-introduction',\r\n  templateUrl: './introduction.component.html',\r\n})\r\nexport class DevRestApiIntroductionComponent implements OnInit {\r\n  data = input<DevRestApiModel>();\r\n\r\n  /** List of scenarios */\r\n  scenarios = AllScenarios;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n}\r\n","<p>\r\n  To learn more about WebAPIs you may want to read these <a href=\"https://docs.2sxc.org/index.html\" target=\"_blank\">docs</a>:\r\n</p>\r\n<ul>\r\n  <li><a href=\"https://docs.2sxc.org/web-api/index.html\" target=\"_blank\">WebAPIs in 2sxc</a></li>\r\n  <li><a href=\"https://docs.2sxc.org/web-api/query-rest-web-api.html\" target=\"_blank\">Query REST API</a></li>\r\n</ul>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { ColumnDefinitions } from '../../../shared/ag-grid/column-definitions';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { SxcGridModule } from '../../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DevRestApiModel } from '../api-template-vars';\r\n\r\n@Component({\r\n    selector: 'app-dev-api-permissions',\r\n    templateUrl: './permissions.component.html',\r\n    imports: [SxcGridModule,]\r\n})\r\nexport class DevRestApiPermissionsComponent implements OnInit, OnChanges {\r\n  data = input<DevRestApiModel>();\r\n\r\n  gridOptions: GridOptions;\r\n  gridItems: ApiPermissionsGridItem[];\r\n  gridHeight: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.gridOptions = this.buildGridOptions();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.data) {\r\n      this.buildGridItems();\r\n    }\r\n  }\r\n\r\n  private buildGridItems() {\r\n    this.gridItems = [\r\n      {\r\n        requirement: 'Ignore All Security Checks <code>[AllowAnonymous]</code>',\r\n        class: this.data().details.security.ignoreSecurity,\r\n        method: this.data().selected.security.ignoreSecurity,\r\n        effective: this.data().selected.mergedSecurity.ignoreSecurity,\r\n        comments: 'If this is set all other security checks are skipped',\r\n      },\r\n      {\r\n        requirement: 'Allow Anonymous Use',\r\n        class: this.data().details.security.allowAnonymous,\r\n        method: this.data().selected.security.allowAnonymous,\r\n        effective: this.data().selected.mergedSecurity.allowAnonymous,\r\n        comments: '',\r\n      },\r\n      {\r\n        requirement: 'Require Verification Token',\r\n        class: this.data().details.security.requireVerificationToken,\r\n        method: this.data().selected.security.requireVerificationToken,\r\n        effective: this.data().selected.mergedSecurity.requireVerificationToken,\r\n        comments: '',\r\n      },\r\n      {\r\n        requirement: 'Allow users with <strong>view</strong> permissions',\r\n        class: this.data().details.security.view,\r\n        method: this.data().selected.security.view,\r\n        effective: this.data().selected.mergedSecurity.view,\r\n        comments: '',\r\n      },\r\n      {\r\n        requirement: 'Allow users with <strong>edit</strong> permissions',\r\n        class: this.data().details.security.edit,\r\n        method: this.data().selected.security.edit,\r\n        effective: this.data().selected.mergedSecurity.edit,\r\n        comments: '',\r\n      },\r\n      {\r\n        requirement: 'Allow users with <strong>admin</strong> permissions',\r\n        class: this.data().details.security.admin,\r\n        method: this.data().selected.security.admin,\r\n        effective: this.data().selected.mergedSecurity.admin,\r\n        comments: '',\r\n      },\r\n      {\r\n        requirement: 'Allow users with <strong>super-user</strong> permissions',\r\n        class: this.data().details.security.superUser,\r\n        method: this.data().selected.security.superUser,\r\n        effective: this.data().selected.mergedSecurity.superUser,\r\n        comments: '',\r\n      },\r\n      {\r\n        requirement: 'Require Context',\r\n        class: this.data().details.security.requireContext,\r\n        method: this.data().selected.security.requireContext,\r\n        effective: this.data().selected.mergedSecurity.requireContext,\r\n        comments: 'If required, the context must be included - see also headers',\r\n      },\r\n    ];\r\n    this.gridHeight = `${33 + this.gridItems.length * 48}px`;\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          headerName: 'Requirement',\r\n          field: 'requirement',\r\n          flex: 2,\r\n          minWidth: 200,\r\n          cellClass: 'no-outline',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Boolean3,\r\n          headerName: 'Class',\r\n          field: 'class',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Boolean3,\r\n          headerName: 'Method',\r\n          field: 'method',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Boolean3,\r\n          headerName: 'Effective',\r\n          field: 'effective',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWideFlex3,\r\n          headerName: 'Comments',\r\n          field: 'comments',\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\nexport interface ApiPermissionsGridItem {\r\n  requirement: string;\r\n  class: boolean;\r\n  method: boolean;\r\n  effective: boolean;\r\n  comments: string;\r\n}\r\n","<h3>Permissions in WebAPIs</h3>\r\n\r\n<p>\r\n  Permissions must be specified in the code, using Attributes such as <code>[AllowAnonymous]</code>.\r\n  Read more about it in the <a href=\"https://docs.2sxc.org/web-api/custom/custom-web-api-security.html\" target=\"_blank\">\r\n    Docs for custom WebAPI Security</a>.\r\n</p>\r\n\r\n<ag-grid-angular class=\"ag-theme-material\" [rowData]=\"gridItems\" [gridOptions]=\"gridOptions\"\r\n  [style.height]=\"gridHeight\">\r\n</ag-grid-angular>\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog eav-no-scrollbar\" >\r\n    <div mat-mdc-dialog-title>\r\n      <div class=\"dialog-title-box\">\r\n        <div>Using REST with API <code>{{ vm.webApi?.name }}</code></div>\r\n        <!-- <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n          <mat-icon>close</mat-icon>\r\n        </button> -->\r\n      </div>\r\n    </div>\r\n    <div class=\"eav-dialog-content\">\r\n      <router-outlet></router-outlet>\r\n      <!-- Template below this line -->\r\n      <div style=\"display: flex; flex-wrap: wrap;\">\r\n        <app-selector-with-help style=\"display: block; max-width: 100%;\" label=\"Choose Scenario\" [items]=\"scenarios\"\r\n          [valueInput]=\"vm.scenario.key\" (valueChange)=\"changeScenario($event)\">\r\n        </app-selector-with-help>\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\" style=\"width: 360px; max-width: calc(100% - 40px);\">\r\n          <mat-label>Select an Action on the Controller</mat-label>\r\n          <mat-select [value]=\"vm.selected?.name\" (selectionChange)=\"updateAction($event.value)\">\r\n            @for (action of vm.details.actions; track action) {\r\n              <mat-option [value]=\"action.name\">\r\n                {{ action.name }} ({{ action.verbs.join(', ') }})\r\n              </mat-option>\r\n            }\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <!-- now the tabs -->\r\n      <mat-tab-group dynamicHeight color=\"accent\" class=\"eav-tab-group\">\r\n        <!-- Introduction -->\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Introduction\">\r\n            <mat-icon>emoji_objects</mat-icon>\r\n            <span>Introduction</span>\r\n          </div>\r\n          <app-dev-api-introduction [data]=\"vm\"></app-dev-api-introduction>\r\n          <app-dev-rest-tab-introduction [data]=\"vm\"></app-dev-rest-tab-introduction>\r\n        </mat-tab>\r\n        <!-- Absolute / Virtual URLs -->\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\"\r\n            [tippy]=\"(vm.scenario.useVirtual ? 'Virtual ' : 'Absolute ') + 'REST URLs'\">\r\n            <!-- <mat-icon>code</mat-icon> -->\r\n            <mat-icon svgIcon=\"code-curly\"></mat-icon>\r\n            <span>Call {{ vm.scenario.useVirtual ? 'Virtual' : 'Absolute' }} REST URLs</span>\r\n          </div>\r\n          <app-dev-rest-tab-examples-intro [data]=\"vm\"></app-dev-rest-tab-examples-intro>\r\n          <!-- Show Params of this Action -->\r\n          <app-dev-rest-api-action-params [data]=\"vm.selected\"></app-dev-rest-api-action-params>\r\n          <mat-accordion multi class=\"rest-urls-accordion\">\r\n            <mat-expansion-panel>\r\n              <mat-expansion-panel-header>\r\n                <mat-panel-title>\r\n                  <div>Specify Additional Test Parameters (Url / POST)</div>\r\n                </mat-panel-title>\r\n              </mat-expansion-panel-header>\r\n              <mat-panel-description style=\"display: block;\">\r\n                <div class=\"form-with-textarea\">\r\n                  <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n                    <mat-label>Additional Url Parameters</mat-label>\r\n                    <input matInput placeholder=\"?id=27\" [value]=\"urlParams$.value\" (input)=\"updateParams($event)\">\r\n                  </mat-form-field>\r\n                  <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n                    <mat-label>Post body</mat-label>\r\n                    <textarea matInput [rows]=\"10\" placeholder=\"Placeholder\" [value]=\"urlParams$.value\"\r\n                      (input)=\"updateParams($event)\">\r\n                    </textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </mat-panel-description>\r\n            </mat-expansion-panel>\r\n          </mat-accordion>\r\n          <!-- REST Tab showing the urls and code snippets -->\r\n          <app-dev-rest-urls-and-code [data]=\"vm\"></app-dev-rest-urls-and-code>\r\n        </mat-tab>\r\n        <!-- Permissions explained -->\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Permissions\">\r\n            <mat-icon>person</mat-icon>\r\n            <span>Permissions </span>\r\n          </div>\r\n          <app-dev-api-permissions [data]=\"vm\"></app-dev-api-permissions>\r\n        </mat-tab>\r\n        <!-- HTTP Headers Explained -->\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"HTTP headers and auto\">\r\n            <mat-icon>perm_device_information</mat-icon>\r\n            <span>HTTP headers & &nbsp;<code>/auto/</code></span>\r\n          </div>\r\n          <app-dev-rest-tab-headers [data]=\"vm\"></app-dev-rest-tab-headers>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n    </div>\r\n  </div>\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { Component, HostBinding, OnDestroy } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, filter, map, share, shareReplay, switchMap } from 'rxjs';\r\nimport { DevRestBase } from '..';\r\nimport { transient } from '../../../../../core';\r\nimport { SourceService } from '../../code-editor/services/source.service';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { classLog } from '../../shared/logging';\r\nimport { Context } from '../../shared/services/context';\r\nimport { DevRestUrlsAndCodeComponent } from '../dev-rest-urls-and-code/dev-rest-urls-and-code.component';\r\nimport { GoToDevRest } from '../go-to-dev-rest';\r\nimport { SelectorWithHelpComponent } from '../selector-with-help/selector-with-help.component';\r\nimport { DevRestTabExamplesComponent } from '../tab-examples/tab-examples.component';\r\nimport { DevRestHttpHeadersComponent } from '../tab-headers/tab-headers.component';\r\nimport { DevRestTabIntroductionComponent } from '../tab-introduction/tab-introduction.component';\r\nimport { DevRestApiActionParamsComponent } from './action-params/action-params.component';\r\nimport { generateWebApiCalls } from './api-samples';\r\nimport { DevRestApiModel } from './api-template-vars';\r\nimport { DevRestApiIntroductionComponent } from './introduction/introduction.component';\r\nimport { DevRestApiPermissionsComponent } from './permissions/permissions.component';\r\n\r\nconst pathToApi = 'app/{appname}/{endpointPath}/{action}';\r\n\r\n\r\n@Component({\r\n    selector: 'app-dev-rest-api',\r\n    templateUrl: './api.component.html',\r\n    styleUrls: ['../dev-rest-all.scss', '../header-selector.scss'],\r\n    imports: [\r\n        MatButtonModule,\r\n        TippyDirective,\r\n        MatIconModule,\r\n        RouterOutlet,\r\n        SelectorWithHelpComponent,\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        MatTabsModule,\r\n        DevRestApiIntroductionComponent,\r\n        DevRestTabIntroductionComponent,\r\n        DevRestTabExamplesComponent,\r\n        DevRestApiActionParamsComponent,\r\n        MatExpansionModule,\r\n        MatInputModule,\r\n        DevRestUrlsAndCodeComponent,\r\n        DevRestApiPermissionsComponent,\r\n        DevRestHttpHeadersComponent,\r\n        AsyncPipe,\r\n    ]\r\n})\r\nexport class DevRestApiComponent extends DevRestBase<DevRestApiModel> implements OnDestroy {\r\n\r\n  log = classLog({DevRestApiComponent});\r\n\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  /** action name to check for */\r\n  selectedActionName$ = new BehaviorSubject<string>(null);\r\n\r\n  /** Test values for url params */\r\n  urlParams$ = new BehaviorSubject<string>('');\r\n\r\n  private sourceService = transient(SourceService);\r\n\r\n  constructor(\r\n    /** Context for this dialog. Used for appId, zoneId, tabId, etc. */\r\n    context: Context,\r\n    dnnContext: DnnContext,\r\n    dialog: MatDialogRef<DevRestApiComponent>,\r\n    router: Router,\r\n    route: ActivatedRoute,\r\n  ) {\r\n    super(context, dialog, dnnContext, router, route, null);\r\n\r\n    const logWebApi = this.log.rxTap('webApi$', { enabled: true });\r\n    const webApi$ = combineLatest([\r\n      this.route.paramMap.pipe(map(pm => pm.get(GoToDevRest.paramApiPath))),\r\n      this.sourceService.getWebApis().pipe(shareReplay(1)),\r\n    ]).pipe(\r\n      logWebApi.pipe(),\r\n      map(([name, webApis]) => {\r\n        name = decodeURIComponent(name);\r\n        return webApis.find(w => w.path === name);\r\n      },\r\n        logWebApi.map(),\r\n      ));\r\n\r\n    const apiDetails$ = webApi$.pipe(\r\n      switchMap(webApi => this.sourceService.getWebApiDetails(webApi.path)),\r\n      share()\r\n    );\r\n\r\n    const logToSelectedAction = this.log.rxTap('selectedActionName$', { enabled: true });\r\n    apiDetails$.pipe(\r\n      logToSelectedAction.pipe(),\r\n      // take(1),\r\n      filter(x => !!x?.actions?.length),\r\n      logToSelectedAction.filter(),\r\n    ).subscribe(x => {\r\n      this.log.a(`first action '${x?.actions[0]?.name}'`);\r\n      return this.selectedActionName$.next(x?.actions[0]?.name);\r\n    });\r\n\r\n    var logSelectedActions = this.log.rxTap('selectedAction$', { enabled: true });\r\n    const selectedAction$ = combineLatest([apiDetails$, this.selectedActionName$])\r\n      .pipe(\r\n        logSelectedActions.pipe(),\r\n        // add debounce because of diamond problem with apiDetails$ and selectedAction$\r\n        // debounceTime(10),\r\n        map(([details, name]) => details?.actions?.find(a => a.name === name)),\r\n        logSelectedActions.map(),\r\n        filter(x => !!x),\r\n        logSelectedActions.filter(),\r\n      );\r\n\r\n    // Build Root Stream for the root folder\r\n    const root$ = combineLatest([webApi$, selectedAction$, this.scenario$, this.dialogSettings$]).pipe(\r\n      map(([webApi, action, scenario, dialogSettings]) => {\r\n        const resolved = pathToApi\r\n          .replace('{appname}', scenario.inSameContext ? 'auto' : encodeURI(dialogSettings.Context.App.Folder))\r\n          .replace('{endpointPath}', webApi.endpointPath)\r\n          .replace('{action}', action.name);\r\n        return this.rootBasedOnScenario(resolved, scenario);\r\n      }),\r\n    );\r\n\r\n\r\n    this.viewModel$ = combineLatest([\r\n      combineLatest([webApi$, apiDetails$, selectedAction$, this.urlParams$, this.scenario$]),\r\n      combineLatest([root$, this.dialogSettings$]),\r\n    ])\r\n      .pipe(\r\n        map(([[webApi, details, selActions, urlParams, scenario], [root, diag]]) => ({\r\n          ...this.buildBaseViewModel(webApi.name, webApi.endpointPath, diag, null, root, scenario),\r\n          webApi,\r\n          details,\r\n          selected: selActions,\r\n          permissionsHasAnonymous: true, // dummy value to prevent error being shown\r\n          apiCalls: generateWebApiCalls(dnnContext.$2sxc, scenario, context, root, urlParams, selActions.verbs),\r\n        })),\r\n      );\r\n  }\r\n\r\n  updateParams(event: Event) {\r\n    this.urlParams$.next((event.target as HTMLInputElement).value);\r\n  }\r\n\r\n  updateAction(value: string) {\r\n    this.selectedActionName$.next(value);\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}