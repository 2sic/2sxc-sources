{"version":3,"file":"projects_eav-ui_src_app_app-administration_copilot_page_copilot-page_component_ts.72ba8e638de33212.js","mappings":"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","names":["CopilotService","static","this","webApiEditions","webApiGeneratedCode","constructor","http","context","log","classLog","specs","#getCopilotSpecs","getEditions","pipe","map","data","editions","getDefaultEdition","find","e","isDefault","getGenerators","generators","get","_a","params","appId","toString","defaultOrFirst","#findDefaultEdition","d","description","label","name","replace","shareReplay","__ngFactoryType__","i0","i1","i2","root_effect_scheduler_DCy1y1b8","jDH","factory","ɵfac","generator_r3","version","ctx","descriptionHtml","$event","_r1","ctx_r1","selectedGenerator","CopilotGeneratorComponent_Conditional_9_For_7_Template","CopilotGeneratorComponent_Conditional_9_Conditional_8_Template","sort","tmp_5_0","selectedGenerator$","edition_r5","_r4","selectedEdition","CopilotGeneratorComponent_Conditional_12_For_5_Template","CopilotGeneratorComponent","snackBar","outputType","input","title","copilotSvc","transient","editions$","generators$","gens","filter","g","ngOnInit","take","subscribe","autoGeneratedCode","edition","generator","open","message","timeTaken","duration","i3","debug_node_JnOYh9kg","VBU","selectors","inputs","decls","vars","consts","template","rf","CopilotGeneratorComponent_Conditional_9_Template","CopilotGeneratorComponent_Conditional_12_Template","tmp_1_0","tmp_2_0","MatSelectModule","i4","i5","MatButtonModule","i6","MatCardModule","i7","MatIconModule","i8","CommonModule","i9","encapsulation","CopilotPageComponent","activatedRoute","snapshot","heading","intro","styles"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/copilot/copilot-service.ts","./projects/eav-ui/src/app/app-administration/copilot/copilot-generator.component.html","./projects/eav-ui/src/app/app-administration/copilot/copilot-generator.component.ts","./projects/eav-ui/src/app/app-administration/copilot/page/copilot-page.component.ts","./projects/eav-ui/src/app/app-administration/copilot/page/copilot-page.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Context } from '../../shared/services/context';\r\nimport { EditionData, EditionDataDto } from './edition-data';\r\nimport { map, shareReplay } from 'rxjs';\r\nimport { Edition, EditionDto } from './edition';\r\nimport { classLog } from '../../shared/logging';\r\n\r\n@Injectable()\r\nexport class CopilotService {\r\n  \r\n  log = classLog({CopilotService});\r\n\r\n  static webApiEditions: string = 'admin/code/getEditions';\r\n  static webApiGeneratedCode: string = 'admin/code/generateDataModels';\r\n\r\n  public specs = this.#getCopilotSpecs();\r\n\r\n  constructor(private http: HttpClient, private context: Context) { }\r\n\r\n  getEditions() {\r\n    return this.specs.pipe(map(data => data.editions));\r\n  }\r\n\r\n  getDefaultEdition() {\r\n    return this.specs.pipe(map(data => data.editions.find(e => e.isDefault)));\r\n  }\r\n\r\n  getGenerators() {\r\n    return this.specs.pipe(map(data => data.generators));\r\n  }\r\n\r\n  #getCopilotSpecs() {\r\n    return this.http.get<EditionDataDto>(CopilotService.webApiEditions, {\r\n      params: {\r\n        appId: this.context.appId.toString()\r\n      }\r\n    }).pipe(\r\n      map((data) => {\r\n        const defaultOrFirst = this.#findDefaultEdition(data.editions);\r\n        const editions = data.editions.map(d => {\r\n          const isDefault = d == defaultOrFirst;\r\n          return {\r\n            ...d,\r\n            isDefault,\r\n            description: (d.description || \"no description provided\") + (isDefault ? ' ✅' : ''),\r\n            label: `/${d.name}/AppCode/Data`.replace(/\\/\\//g, '/'),\r\n          } as Edition;\r\n        });\r\n\r\n        return { ...data, editions } as EditionData;\r\n      }),\r\n      shareReplay(1),\r\n    );\r\n  }\r\n\r\n  #findDefaultEdition(editions: EditionDto[]): EditionDto {\r\n    return editions.find(d => d.isDefault) ?? editions.find(d => d.name === '') ?? editions[0];\r\n  }\r\n\r\n}","<div class=\"eav-cards-box\">\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header class=\"eav-card-header\">\r\n      <mat-card-title>{{ title() }}</mat-card-title>\r\n      <mat-icon>support_agent</mat-icon>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <br />\r\n      <!-- Generator select -->\r\n      @if (generators$ | async; as generators) {\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Generator</mat-label>\r\n          <mat-select required [(value)]=\"selectedGenerator\">\r\n            <mat-select-trigger>\r\n              {{ selectedGenerator }}\r\n            </mat-select-trigger>\r\n            @for (generator of generators.sort(); track generator) {\r\n              <mat-option [value]=\"generator.name\">\r\n                <strong>{{ generator.name }} v{{ generator.version }}</strong\r\n                ><br />\r\n                {{ generator.description }}\r\n              </mat-option>\r\n            }\r\n          </mat-select>\r\n          @if (selectedGenerator$ | async; as selectedGenerator) {\r\n            <mat-hint [innerHTML]=\"selectedGenerator.descriptionHtml\"></mat-hint>\r\n          }\r\n        </mat-form-field>\r\n        <br />\r\n      }\r\n\r\n      <br />\r\n      <!-- Edition select -->\r\n      @if (editions$ | async; as editions) {\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Select an Edition to generate code for</mat-label>\r\n          <mat-select required [(value)]=\"selectedEdition\">\r\n            @for (edition of editions.sort(); track edition) {\r\n              <mat-option [value]=\"edition.name\">\r\n                <strong>{{ edition.label }}</strong> ({{ edition.description }})\r\n              </mat-option>\r\n            }\r\n          </mat-select>\r\n          <mat-hint>\r\n            Editions are managed in the <code>/App_Data/app.json</code> file. See\r\n            <a href=\"https://go.2sxc.org/app-json\" target=\"_blank\">docs</a>.\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      }\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"end\">\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"autoGeneratedCode()\">\r\n        <mat-icon class=\"eav-icon\">code</mat-icon>\r\n        <span>Generate Code</span>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, input } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { map, take } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { RichResult } from '../../shared/models/rich-result';\r\nimport { Context } from '../../shared/services/context';\r\nimport { CopilotService } from './copilot-service';\r\n\r\n@Component({\r\n  selector: 'app-copilot-generator',\r\n  templateUrl: './copilot-generator.component.html',\r\n  imports: [\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    CommonModule,\r\n  ]\r\n})\r\nexport class CopilotGeneratorComponent {\r\n\r\n  outputType = input<string>();\r\n  title? = input<string>('Copilot Generator');\r\n  private copilotSvc = transient(CopilotService);\r\n\r\n  webApiGeneratedCode: string = 'admin/code/generateDataModels';\r\n  editions$ = this.copilotSvc.getEditions();\r\n\r\n  generators$ = this.copilotSvc.getGenerators()\r\n    .pipe(\r\n      map((gens) => gens.filter(g => g.outputType === this.outputType()))\r\n    );\r\n\r\n  selectedGenerator$ = this.generators$.pipe(map(gens => gens.find(g => g.name === this.selectedGenerator)));\r\n\r\n  selectedGenerator = '';\r\n  selectedEdition = '';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private context: Context,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.generators$.pipe(take(1)).subscribe(gens => {\r\n      this.selectedGenerator = gens[0]?.name ?? '';\r\n    });\r\n    this.copilotSvc.specs.pipe(take(1)).subscribe(specs => {\r\n      // this.selectedGenerator = specs.generators[0]?.name ?? '';\r\n      this.selectedEdition = specs.editions.find(e => e.isDefault)?.name ?? '';\r\n    });\r\n  }\r\n\r\n  autoGeneratedCode() {\r\n    this.http.get<RichResult>(this.webApiGeneratedCode, {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        edition: this.selectedEdition,\r\n        generator: this.selectedGenerator,\r\n      }\r\n    }).subscribe(d => {\r\n      this.snackBar.open(d.message + `\\n (this took ${d.timeTaken}ms)`, null, { duration: 5000, });\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CopilotSpec } from '../copilot-specs';\r\nimport { CopilotGeneratorComponent } from '../copilot-generator.component';\r\n\r\n@Component({\r\n    selector: 'app-data-copilot',\r\n    templateUrl: './copilot-page.component.html',\r\n    styleUrl: './copilot-page.component.scss',\r\n    imports: [\r\n        CopilotGeneratorComponent\r\n    ]\r\n})\r\nexport class CopilotPageComponent {\r\n\r\n  data: CopilotSpec;\r\n\r\n  constructor(activatedRoute: ActivatedRoute) {\r\n    this.data = activatedRoute.snapshot.data as CopilotSpec;\r\n  }\r\n\r\n}\r\n","<div class=\"outer-container\">\r\n  <h1>{{data.heading}}</h1>\r\n  <p>\r\n    {{data.intro}}\r\n  </p>\r\n</div>\r\n\r\n<app-copilot-generator [outputType]=\"data.outputType\" [title]=\"data.title\"></app-copilot-generator>\r\n"],"x_google_ignoreList":[]}