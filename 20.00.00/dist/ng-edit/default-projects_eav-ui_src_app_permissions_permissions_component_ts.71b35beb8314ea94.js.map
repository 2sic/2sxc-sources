{"version":3,"file":"default-projects_eav-ui_src_app_permissions_permissions_component_ts.71b35beb8314ea94.js","mappings":"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","names":["i0","ctx_r0","dialogData","message","confirmTranslateKey","ConfirmDeleteDialogComponent","constructor","dialog","this","hostClass","closeDialog","confirm","close","static","__ngFactoryType__","MAT_DIALOG_DATA","i1","_angular_core__WEBPACK_IMPORTED_MODULE_0__","VBU","selectors","hostVars","hostBindings","rf","ctx","ConfirmDeleteDialogComponent_Conditional_4_Template","ConfirmDeleteDialogComponent_Conditional_9_Template","ConfirmDeleteDialogComponent_Conditional_10_Template","title","entityTitle","entityId","confirmColor","MatCardModule","i2","MatButtonModule","i3","SafeHtmlPipe","styles","PermissionsActionsComponent","agInit","params","refresh","deletePermission","onDelete","data","debug_node_JnOYh9kg","decls","vars","consts","template","MatRippleModule","MatIconModule","TippyDirective","encapsulation","PermissionsComponent","#permissionsService","#dialogRoutes","#params","#refresh","#prefills","snackBar","viewContainerRef","matDialog","gridOptions","buildGridOptions","transient","PermissionsService","DialogRoutingService","convert","getParams","p","targetType","parseInt","keyType","key","signal","permissions","getAllLive","eavConstants","metadata","language","PermissionType","ngOnInit","doOnDialogClosed","update","x","editPermission","permission","form","items","EditPrep","newMetadataFromInfo","contentTypes","constructMetadataInfo","Prefill","editId","Id","formUrl","convertFormToUrl","navRelative","#deletePermission","open","autoFocus","Title","width","afterClosed","subscribe","isConfirmed","dismiss","delete","duration","defaultGridOptions","columnDefs","ColumnDefinitions","cellRendererParams","idFieldParamsTooltipGetter","TextWide","headerName","field","sort","onCellClicked","Character","ActionsPinnedRight1","cellRenderer","i4","RouterOutlet","MatDialogActions","SxcGridModule","i5","obj","fn","getWith","metadataService","MetadataService","entitiesService","EntityEditService","getAll","getMetadata","pipe","map","Items","metaDataSignal","getMetadataLive","value","computed","id","_angular_core__WEBPACK_IMPORTED_MODULE_6__","jDH","factory","ɵfac","logSpecs","ServiceBase","router","route","super","log","classLog","snapshot","url","urlSegments","split","getParam","paramMap","get","keys","reduce","acc","getQueryParam","queryParamMap","getQueryParams","state","getCurrentNavigation","extras","callback","l","fnIf","subscriptions","add","childDialogClosed$","a","end","doOnDialogClosedWithData","#childDialogClosedWithData","urlSubRoute","tree","createUrlTree","relativeTo","serializeUrl","navPath","navigate","commands","events","filter","event","NavigationEnd","startWith","firstChild","pairwise","hadChildBefore","hasChildNow","tap","snapShot","prev","curr","_angular_core__WEBPACK_IMPORTED_MODULE_8__","webApiRoot","HttpServiceBase","contentTypeName","getHttpApiUrl","appId","toString","contentType","newHttpResource","apiUrl","getMetadataPromise","fetchPromise","_angular_core__WEBPACK_IMPORTED_MODULE_2__","HttpServiceBaseSignal","create","entity","http","post","zoneId","type","tryForce","webApiEntityRoot","force","context","HttpContext","set","IGNORED_STATUSES","_angular_core__WEBPACK_IMPORTED_MODULE_5__"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/sub-dialogs/confirm-delete-dialog/confirm-delete-dialog.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/confirm-delete-dialog/confirm-delete-dialog.component.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.html","./projects/eav-ui/src/app/permissions/permissions.component.ts","./projects/eav-ui/src/app/permissions/permissions.component.html","./projects/core/object-utilities.ts","./projects/eav-ui/src/app/permissions/services/permissions.service.ts","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts","./projects/eav-ui/src/app/permissions/services/metadata.service.ts","./projects/eav-ui/src/app/shared/services/entity-edit.service.ts"],"sourcesContent":["<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title> {{ dialogData.title ?? 'Delete' }} {{ dialogData.entityTitle }} ({{ dialogData.entityId }})?</mat-card-title>\r\n    @if (dialogData.message) {\r\n      <mat-card-subtitle [innerHtml]=\"dialogData.message | safeHtml\"></mat-card-subtitle>\r\n    }\r\n  </mat-card-header>\r\n  <mat-card-actions align=\"end\">\r\n    <button matButton class=\"eav-card-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n    <button mat-button cdkFocusInitial (click)=\"closeDialog(true)\" [color]=\"dialogData.confirmColor ?? 'warn'\">\r\n      @if (dialogData.confirmTranslateKey) {\r\n        {{ dialogData.confirmTranslateKey }}\r\n      } @else {\r\n        Delete\r\n      }\r\n    </button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, HostBinding, Inject } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { SafeHtmlPipe } from '../../../shared/pipes/safe-html.pipe';\r\nimport { ConfirmDeleteDialogData } from './confirm-delete-dialog.models';\r\n\r\n@Component({\r\n  selector: 'app-confirm-delete-dialog',\r\n  templateUrl: './confirm-delete-dialog.component.html',\r\n  styleUrls: ['./confirm-delete-dialog.component.scss'],\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    SafeHtmlPipe,\r\n  ]\r\n})\r\nexport class ConfirmDeleteDialogComponent {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: ConfirmDeleteDialogData,\r\n    private dialog: MatDialogRef<ConfirmDeleteDialogComponent>,\r\n  ) { }\r\n\r\n  closeDialog(confirm?: boolean) {\r\n    this.dialog.close(confirm);\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { Permission } from '../models/permission.model';\r\nimport { PermissionsActionsParams } from './permissions-actions.models';\r\n\r\n@Component({\r\n    selector: 'app-permissions-actions',\r\n    templateUrl: './permissions-actions.component.html',\r\n    imports: [\r\n        MatRippleModule,\r\n        MatIconModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class PermissionsActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & PermissionsActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & PermissionsActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deletePermission(): void {\r\n    const permission: Permission = this.params.data;\r\n    this.params.onDelete(permission);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deletePermission()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnInit, signal, ViewContainerRef } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { convert, Of, transient } from '../../../../core';\r\nimport { ConfirmDeleteDialogComponent } from '../app-administration/sub-dialogs/confirm-delete-dialog/confirm-delete-dialog.component';\r\nimport { ConfirmDeleteDialogData } from '../app-administration/sub-dialogs/confirm-delete-dialog/confirm-delete-dialog.models';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants, MetadataKeyTypes } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep } from '../shared/models/edit-form.model';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../shared/routing/dialog-routing.service';\r\nimport { Permission } from './models/permission.model';\r\nimport { PermissionsActionsComponent } from './permissions-actions/permissions-actions.component';\r\nimport { PermissionsActionsParams } from './permissions-actions/permissions-actions.models';\r\nimport { PermissionsService } from './services/permissions.service';\r\n\r\n@Component({\r\n  selector: 'app-permissions',\r\n  templateUrl: './permissions.component.html',\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    MatDialogActions,\r\n    SxcGridModule,\r\n  ]\r\n})\r\nexport class PermissionsComponent implements OnInit {\r\n  gridOptions = this.buildGridOptions();\r\n  #permissionsService = transient(PermissionsService);\r\n  #dialogRoutes = transient(DialogRoutingService);\r\n\r\n  #params = convert(this.#dialogRoutes.getParams(['targetType', 'keyType', 'key']), p => ({\r\n    targetType: parseInt(p.targetType, 10),\r\n    keyType: p.keyType as Of<typeof MetadataKeyTypes>,\r\n    key: p.key,\r\n  }));\r\n\r\n  #refresh = signal<number>(0);\r\n  permissions = this.#permissionsService.getAllLive(this.#params.targetType, this.#params.keyType, this.#params.key, this.#refresh);\r\n\r\n  #prefills: Record<string, Record<string, string>> = {\r\n    [eavConstants.metadata.language.targetType]: {\r\n      PermissionType: 'language',\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<PermissionsComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private matDialog: MatDialog,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.#dialogRoutes.doOnDialogClosed(() => this.#refresh.update(x => x + 1));\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n\r\n  editPermission(permission?: Permission) {\r\n    let form: EditForm;\r\n    if (permission == null) {\r\n      form = {\r\n        items: [{\r\n          ...EditPrep.newMetadataFromInfo(\r\n            eavConstants.contentTypes.permissions,\r\n            EditPrep.constructMetadataInfo(this.#params.targetType, this.#params.keyType, this.#params.key)\r\n          ),\r\n          ...(this.#prefills[this.#params.targetType] && { Prefill: this.#prefills[this.#params.targetType] }),\r\n        }],\r\n      };\r\n    } else {\r\n      form = {\r\n        items: [EditPrep.editId(permission.Id)],\r\n      };\r\n    }\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  #deletePermission(permission: Permission) {\r\n    this.snackBar.open('Deleting...');\r\n    const data: ConfirmDeleteDialogData = {\r\n      entityId: permission.Id,\r\n      entityTitle: permission.Title,\r\n      message: \"Delete this permission?\",\r\n    };\r\n    const confirmationDialogRef = this.matDialog.open(ConfirmDeleteDialogComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '400px',\r\n    });\r\n    confirmationDialogRef.afterClosed().subscribe((isConfirmed: boolean) => {\r\n      this.snackBar.dismiss();\r\n      if (isConfirmed)\r\n        this.#permissionsService.delete(permission.Id).subscribe(() => {\r\n          this.snackBar.open('Deleted', null, { duration: 2000 });\r\n          this.#refresh.update(x => x + 1);\r\n        })\r\n    });\r\n    return;\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.Id,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<Permission>()\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Name',\r\n          field: 'Title',\r\n          sort: 'asc',\r\n          onCellClicked: (params) => {\r\n            const permission: Permission = params.data;\r\n            this.editPermission(permission);\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Identity',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Condition',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Character,\r\n          field: 'Grant',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight1,\r\n          cellRenderer: PermissionsActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: PermissionsActionsParams = {\r\n              onDelete: (permission) => this.#deletePermission(permission),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","<div class=\"eav-dialog nav-component-wrapper\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Permissions</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content nav-component-wrapper\">\r\n    <router-outlet></router-outlet>\r\n    <div class=\"grid-wrapper\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"permissions()\" [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new permission\" (click)=\"editPermission(null)\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n</div>\r\n","\r\n/**\r\n * Conversion function to change something to something else, a bit like 'map' but for a single item.\r\n * \r\n * Typically used in short return statements.\r\n * \r\n * Internally it's the same as the `getWith` function, but has a different name to indicate the usage.\r\n */\r\nexport function convert<T extends unknown, R extends unknown>(obj: T, fn: (value: T) => R): R {\r\n  return fn(obj);\r\n}\r\n\r\n/**\r\n * Function to do something with an object and return the result.\r\n * \r\n * Typically used in short return statements.\r\n * \r\n * Internally it's the same as the `convert` function, but has a different name to indicate the usage.\r\n */\r\nexport function getWith<T extends unknown, R extends unknown>(obj: T, fn: (value: T) => R): R {\r\n  return fn(obj);\r\n}\r\n\r\n","import { computed, Injectable, Signal } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { Of, transient } from '../../../../../core';\r\nimport { eavConstants, MetadataKeyTypes } from '../../shared/constants/eav.constants';\r\nimport { EntityEditService } from '../../shared/services/entity-edit.service';\r\nimport { Permission } from '../models/permission.model';\r\nimport { MetadataService } from './metadata.service';\r\n\r\n@Injectable()\r\nexport class PermissionsService {\r\n\r\n  private metadataService = transient(MetadataService);\r\n  private entitiesService = transient(EntityEditService);\r\n\r\n  getAll(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string): Observable<Permission[]> {\r\n    return this.metadataService.getMetadata(targetType, keyType, key, eavConstants.contentTypes.permissions).pipe(\r\n      map(metadata => metadata.Items as Permission[]),\r\n    );\r\n  }\r\n\r\n  getAllLive(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string, refresh?: Signal<unknown>,\r\n  ): Signal<Permission[]> {\r\n    const metaDataSignal = this.metadataService.getMetadataLive(refresh, targetType, keyType, key, eavConstants.contentTypes.permissions\r\n    ).value;\r\n\r\n    return computed(() => {\r\n      const metaData = metaDataSignal();\r\n      return (metaData?.Items ?? []) as Permission[];\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.entitiesService.delete(eavConstants.contentTypes.permissions, id, false);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith, tap } from 'rxjs';\r\nimport { classLog } from '../logging';\r\nimport { ServiceBase } from '../services/service-base';\r\n\r\nconst logSpecs = {\r\n  doOnDialogClosed: true,\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase {\r\n\r\n  log = classLog({ DialogRoutingService }, logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) { super(); }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  get urlSegments() { return this.router.url.split('/'); }\r\n\r\n  getParam(key: string): string {\r\n    return this.route.snapshot.paramMap.get(key);\r\n  }\r\n\r\n  getParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const paramMap = this.route.snapshot.paramMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = paramMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  getQueryParam(key: string): string {\r\n    return this.route.snapshot.queryParamMap.get(key);\r\n  }\r\n\r\n  getQueryParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const queryParamMap = this.route.snapshot.queryParamMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = queryParamMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe((data: unknown) => {\r\n        l.a('Dialog closed', { data });\r\n        return callback();\r\n      })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  public doOnDialogClosedWithData(callback: (data: any) => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.#childDialogClosedWithData().subscribe(({ state }) => {\r\n        l.a('Dialog closed', { state });\r\n        callback(state);\r\n      })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Get the URL for a sub-route of the current route.\r\n   */\r\n  public urlSubRoute(params: string) {\r\n    const tree = this.router.createUrlTree([params], { relativeTo: this.route });\r\n    const routeUrl = this.router.serializeUrl(tree);\r\n    return routeUrl;\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  public childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n\r\n  #childDialogClosedWithData() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      tap(event => {\r\n        const l = this.log.fn(\"childDialogClosed$\", {\r\n          event,\r\n          firstChild: this.route.snapshot.firstChild,\r\n          snapShot: this.route.snapshot,\r\n          state: this.router.getCurrentNavigation()?.extras.state,\r\n        });\r\n        l.a('NavigationEnd', { event });\r\n        l.end();\r\n      }),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => ({\r\n        hasChildNow: !!this.route.snapshot.firstChild,\r\n        state: this.router.getCurrentNavigation()?.extras.state,\r\n      })),\r\n      pairwise(),\r\n      filter(([prev, curr]) => prev.hasChildNow && !curr.hasChildNow),\r\n      map(([prev, curr]) => ({\r\n        hadChildBefore: prev.hasChildNow,\r\n        hasChildNow: curr.hasChildNow,\r\n        state: curr.state\r\n      }))\r\n    );\r\n  }\r\n}\r\n","import { Injectable, Signal } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Of } from '../../../../../core';\r\nimport { MetadataDto } from '../../metadata';\r\nimport { MetadataKeyTypes } from '../../shared/constants/eav.constants';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiRoot = 'admin/metadata/get';\r\n@Injectable()\r\nexport class MetadataService extends HttpServiceBase {\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param targetType type of target metadata item is for, e.g. for Entity, or ContentType\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of target metadata item is for\r\n   * @param contentTypeName name of content type where permissions are stored. If blank, backend returns all metadata except permissions\r\n   */\r\n  // TODO: 2dg, ask 2dm \r\n  getMetadata(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string | number, contentTypeName?: string): Observable<MetadataDto> {\r\n    return this.getHttpApiUrl<MetadataDto>(webApiRoot, {\r\n      params: {\r\n        appId: this.appId,\r\n        targetType: targetType.toString(),\r\n        keyType,\r\n        key: key.toString(),\r\n        ...(contentTypeName && { contentType: contentTypeName }),\r\n      },\r\n    });\r\n  }\r\n\r\n  getMetadataLive(refresh: Signal<unknown>, targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string | number, contentTypeName?: string) {\r\n    return this.newHttpResource<MetadataDto>(() => {\r\n      refresh();\r\n      return ({\r\n        url: this.apiUrl(webApiRoot),\r\n        params: {\r\n          appId: this.appId,\r\n          targetType: targetType.toString(),\r\n          keyType,\r\n          key: key.toString(),\r\n          ...(contentTypeName && { contentType: contentTypeName }),\r\n        },\r\n      });\r\n    });\r\n  }\r\n\r\n  // New method to return a promise\r\n  getMetadataPromise(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string | number, contentTypeName?: string): Promise<MetadataDto> {\r\n    return this.fetchPromise<MetadataDto>(webApiRoot, {\r\n      params: {\r\n        appId: this.appId,\r\n        targetType: targetType.toString(),\r\n        keyType,\r\n        key: key.toString(),\r\n        ...(contentTypeName && { contentType: contentTypeName }),\r\n      },\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","import { HttpContext } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../edit/shared/models/eav';\r\nimport { IGNORED_STATUSES } from '../interceptors/handle-errors.interceptor';\r\nimport { ItemInListIdentifier } from '../models/edit-form.model';\r\nimport { webApiEntityRoot } from './entity.service';\r\nimport { HttpServiceBaseSignal } from './http-service-base-signal';\r\n\r\n@Injectable()\r\nexport class EntityEditService extends HttpServiceBaseSignal {\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.appId, force: tryForce.toString() },\r\n      context: new HttpContext().set(IGNORED_STATUSES, [400]),\r\n    });\r\n  }\r\n}\r\n\r\ninterface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: ItemInListIdentifier;\r\n  [field: string]: any;\r\n}\r\n\r\ninterface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n"],"x_google_ignoreList":[]}