{"version":3,"sources":["C:/Projects/2sxc/eav-item-dialog-angular/node_modules/@ecodev/fab-speed-dial/__ivy_ngcc__/fesm2015/ecodev-fab-speed-dial.js","./src/app/apps-management/services/sxc-insights.service.ts","./src/app/apps-management/apps-management-nav/apps-management-dialog.config.ts","./src/app/apps-management/apps-management-routing.module.ts","./src/app/apps-management/apps-management.module.ts","./src/app/apps-management/services/enable-languages.service.ts","./src/app/apps-management/services/features-config.service.ts"],"names":["EcoFabSpeedDialActionsComponent_ng_content_0_Template","rf","ctx","_c0","_c1","_c2","_c3","_c4","_c5","EcoFabSpeedDialActionsComponent","injector","renderer","this","miniFabVisible","_parent","get","EcoFabSpeedDialComponent","_buttons","changes","subscribe","initButtonStates","setActionsVisibility","forEach","button","i","addClass","_getHostElement","changeElementStyle","resetAnimationState","showMiniFabAnimation","setTimeout","transform","transitionDelay","animationMode","getTranslateFunction","hostElement","clearTimeout","hideMiniFab","unsubscribe","obs","map","opacity","pipe","value","dir","direction","elem","style","setStyle","ɵfac","t","ɵcmp","type","selectors","contentQueries","dirIndex","_t","ngContentSelectors","decls","vars","consts","template","directives","encapsulation","elementRef","document","isInitialized","_direction","_open","_animationMode","_fixed","_documentClickUnlistener","openChange","_setElementClass","_unsetDocumentClickListener","open","fixed","_childActions","show","hide","_processOutsideClickState","elemClass","isAdd","finalClass","nativeElement","removeClass","_setDocumentClickListener","listen","previousOpen","emit","previousDirection","previousAnimationMode","Promise","resolve","then","first","hostVars","hostBindings","_onClick","inputs","outputs","styles","EcoFabSpeedDialTriggerComponent","spin","event","toggle","stopPropagation","$event","sp","EcoFabSpeedDialModule","ɵmod","ɵinj","factory","imports","http","dnnContext","activatePageLog","duration","$2sxc","apiUrl","webApiLogRoot","params","toString","SxcInsightsService","appsManagementDialog","name","initContext","panelSize","panelClass","getComponent","appsManagementRoutes","path","component","data","dialog","children","redirectTo","pathMatch","loadChildren","m","ImportAppModule","title","AppAdministrationModule","AppsManagementRoutingModule","forChild","AppsManagementModule","withComponents","getAll","webApiZoneRoot","code","enable","cultureCode","save","EnableLanguagesService","webApiFeatures","getManageFeaturesUrl","saveFeatures","featuresString","post","FeaturesConfigService"],"mappings":"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","file":"apps-management-apps-management-module.c8b83494f09c3bfc7225.js","sourcesContent":["import { Component, Injector, Renderer2, ContentChildren, EventEmitter, ViewEncapsulation, ElementRef, Inject, Input, HostBinding, Output, ContentChild, HostListener, NgModule } from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { fromEvent, forkJoin } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction EcoFabSpeedDialActionsComponent_ng_content_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngIf\", \"miniFabVisible\"]);\n} }\nconst _c0 = [[[\"\", \"mat-mini-fab\", \"\"]]];\nconst _c1 = [\"[mat-mini-fab]\"];\nconst _c2 = [[[\"eco-fab-speed-dial-trigger\"]], [[\"eco-fab-speed-dial-actions\"]]];\nconst _c3 = [\"eco-fab-speed-dial-trigger\", \"eco-fab-speed-dial-actions\"];\nconst _c4 = [[[\"\", \"mat-fab\", \"\"]]];\nconst _c5 = [\"[mat-fab]\"];\nconst Z_INDEX_ITEM = 23;\nclass EcoFabSpeedDialActionsComponent {\n    constructor(injector, renderer) {\n        this.renderer = renderer;\n        /**\n         * Whether the min-fab button exist in DOM\n         */\n        this.miniFabVisible = false;\n        this._parent = injector.get(EcoFabSpeedDialComponent);\n    }\n    ngAfterContentInit() {\n        this._buttons.changes.subscribe(() => {\n            this.initButtonStates();\n            this._parent.setActionsVisibility();\n        });\n        this.initButtonStates();\n    }\n    initButtonStates() {\n        this._buttons.forEach((button, i) => {\n            this.renderer.addClass(button._getHostElement(), 'eco-fab-action-item');\n            this.changeElementStyle(button._getHostElement(), 'z-index', '' + (Z_INDEX_ITEM - i));\n        });\n    }\n    show() {\n        if (!this._buttons) {\n            return;\n        }\n        this.resetAnimationState();\n        this.miniFabVisible = true;\n        this.showMiniFabAnimation = setTimeout(() => {\n            this._buttons.forEach((button, i) => {\n                let transitionDelay = 0;\n                let transform;\n                if (this._parent.animationMode === 'scale') {\n                    // Incremental transition delay of 65ms for each action button\n                    transitionDelay = 3 + (65 * i);\n                    transform = 'scale(1)';\n                }\n                else {\n                    transform = this.getTranslateFunction('0');\n                }\n                const hostElement = button._getHostElement();\n                this.changeElementStyle(hostElement, 'transition-delay', transitionDelay + 'ms');\n                this.changeElementStyle(hostElement, 'opacity', '1');\n                this.changeElementStyle(hostElement, 'transform', transform);\n            });\n        }, 50); // Be sure that *ngIf can show elements before trying to animate them\n    }\n    resetAnimationState() {\n        clearTimeout(this.showMiniFabAnimation);\n        if (this.hideMiniFab) {\n            this.hideMiniFab.unsubscribe();\n            this.hideMiniFab = null;\n        }\n    }\n    hide() {\n        if (!this._buttons) {\n            return;\n        }\n        this.resetAnimationState();\n        const obs = this._buttons.map((button, i) => {\n            let opacity = '1';\n            let transitionDelay = 0;\n            let transform;\n            if (this._parent.animationMode === 'scale') {\n                transitionDelay = 3 - (65 * i);\n                transform = 'scale(0)';\n                opacity = '0';\n            }\n            else {\n                transform = this.getTranslateFunction((55 * (i + 1) - (i * 5)) + 'px');\n            }\n            const hostElement = button._getHostElement();\n            this.changeElementStyle(hostElement, 'transition-delay', transitionDelay + 'ms');\n            this.changeElementStyle(hostElement, 'opacity', opacity);\n            this.changeElementStyle(hostElement, 'transform', transform);\n            return fromEvent(hostElement, 'transitionend').pipe(take(1));\n        });\n        // Wait for all animation to finish, then destroy their elements\n        this.hideMiniFab = forkJoin(obs).subscribe(() => this.miniFabVisible = false);\n    }\n    getTranslateFunction(value) {\n        const dir = this._parent.direction;\n        const translateFn = (dir === 'up' || dir === 'down') ? 'translateY' : 'translateX';\n        const sign = (dir === 'down' || dir === 'right') ? '-' : '';\n        return translateFn + '(' + sign + value + ')';\n    }\n    changeElementStyle(elem, style, value) {\n        // FIXME - Find a way to create a \"wrapper\" around the action button(s) provided by the user, so we don't change it's style tag\n        this.renderer.setStyle(elem, style, value);\n    }\n}\nEcoFabSpeedDialActionsComponent.ɵfac = function EcoFabSpeedDialActionsComponent_Factory(t) { return new (t || EcoFabSpeedDialActionsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nEcoFabSpeedDialActionsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: EcoFabSpeedDialActionsComponent, selectors: [[\"eco-fab-speed-dial-actions\"]], contentQueries: function EcoFabSpeedDialActionsComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatButton, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._buttons = _t);\n    } }, ngContentSelectors: _c1, decls: 1, vars: 1, consts: [[4, \"ngIf\"]], template: function EcoFabSpeedDialActionsComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵtemplate(0, EcoFabSpeedDialActionsComponent_ng_content_0_Template, 1, 0, \"ng-content\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.miniFabVisible);\n    } }, directives: [ɵngcc1.NgIf], encapsulation: 2 });\nEcoFabSpeedDialActionsComponent.ctorParameters = () => [\n    { type: Injector },\n    { type: Renderer2 }\n];\nEcoFabSpeedDialActionsComponent.propDecorators = {\n    _buttons: [{ type: ContentChildren, args: [MatButton,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EcoFabSpeedDialActionsComponent, [{\n        type: Component,\n        args: [{\n                selector: 'eco-fab-speed-dial-actions',\n                template: `\n        <ng-content select=\"[mat-mini-fab]\" *ngIf=\"miniFabVisible\"></ng-content>`\n            }]\n    }], function () { return [{ type: ɵngcc0.Injector }, { type: ɵngcc0.Renderer2 }]; }, { _buttons: [{\n            type: ContentChildren,\n            args: [MatButton]\n        }] }); })();\n/** @dynamic @see https://github.com/angular/angular/issues/20351#issuecomment-344009887 */\nclass EcoFabSpeedDialComponent {\n    constructor(elementRef, renderer, document) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.document = document;\n        this.isInitialized = false;\n        this._direction = 'up';\n        this._open = false;\n        this._animationMode = 'fling';\n        this._fixed = false;\n        this._documentClickUnlistener = null;\n        this.openChange = new EventEmitter();\n    }\n    /**\n     * Whether this speed dial is fixed on screen (user cannot change it by clicking)\n     */\n    get fixed() {\n        return this._fixed;\n    }\n    set fixed(fixed) {\n        this._fixed = fixed;\n        this._processOutsideClickState();\n    }\n    /**\n     * Whether this speed dial is opened\n     */\n    get open() {\n        return this._open;\n    }\n    set open(open) {\n        const previousOpen = this._open;\n        this._open = open;\n        if (previousOpen !== this._open) {\n            this.openChange.emit(this._open);\n            if (this.isInitialized) {\n                this.setActionsVisibility();\n            }\n        }\n    }\n    /**\n     * The direction of the speed dial. Can be 'up', 'down', 'left' or 'right'\n     */\n    get direction() {\n        return this._direction;\n    }\n    set direction(direction) {\n        const previousDirection = this._direction;\n        this._direction = direction;\n        if (previousDirection !== this.direction) {\n            this._setElementClass(previousDirection, false);\n            this._setElementClass(this.direction, true);\n            if (this.isInitialized) {\n                this.setActionsVisibility();\n            }\n        }\n    }\n    /**\n     * The animation mode to open the speed dial. Can be 'fling' or 'scale'\n     */\n    get animationMode() {\n        return this._animationMode;\n    }\n    set animationMode(animationMode) {\n        const previousAnimationMode = this._animationMode;\n        this._animationMode = animationMode;\n        if (previousAnimationMode !== this._animationMode) {\n            this._setElementClass(previousAnimationMode, false);\n            this._setElementClass(this.animationMode, true);\n            if (this.isInitialized) {\n                // To start another detect lifecycle and force the \"close\" on the action buttons\n                Promise.resolve(null).then(() => this.open = false);\n            }\n        }\n    }\n    ngAfterContentInit() {\n        this.isInitialized = true;\n        this.setActionsVisibility();\n        this._setElementClass(this.direction, true);\n        this._setElementClass(this.animationMode, true);\n    }\n    ngOnDestroy() {\n        this._unsetDocumentClickListener();\n    }\n    /**\n     * Toggle the open state of this speed dial\n     */\n    toggle() {\n        this.open = !this.open;\n    }\n    _onClick() {\n        if (!this.fixed && this.open) {\n            this.open = false;\n        }\n    }\n    setActionsVisibility() {\n        if (!this._childActions) {\n            return;\n        }\n        if (this.open) {\n            this._childActions.show();\n        }\n        else {\n            this._childActions.hide();\n        }\n        this._processOutsideClickState();\n    }\n    _setElementClass(elemClass, isAdd) {\n        const finalClass = `eco-${elemClass}`;\n        if (isAdd) {\n            this.renderer.addClass(this.elementRef.nativeElement, finalClass);\n        }\n        else {\n            this.renderer.removeClass(this.elementRef.nativeElement, finalClass);\n        }\n    }\n    _processOutsideClickState() {\n        if (!this.fixed && this.open) {\n            this._setDocumentClickListener();\n        }\n        else {\n            this._unsetDocumentClickListener();\n        }\n    }\n    _setDocumentClickListener() {\n        if (!this._documentClickUnlistener) {\n            this._documentClickUnlistener = this.renderer.listen(this.document, 'click', () => {\n                this.open = false;\n            });\n        }\n    }\n    _unsetDocumentClickListener() {\n        if (this._documentClickUnlistener) {\n            this._documentClickUnlistener();\n            this._documentClickUnlistener = null;\n        }\n    }\n}\nEcoFabSpeedDialComponent.ɵfac = function EcoFabSpeedDialComponent_Factory(t) { return new (t || EcoFabSpeedDialComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nEcoFabSpeedDialComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: EcoFabSpeedDialComponent, selectors: [[\"eco-fab-speed-dial\"]], contentQueries: function EcoFabSpeedDialComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, EcoFabSpeedDialActionsComponent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._childActions = _t.first);\n    } }, hostVars: 2, hostBindings: function EcoFabSpeedDialComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function EcoFabSpeedDialComponent_click_HostBindingHandler() { return ctx._onClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"eco-opened\", ctx.open);\n    } }, inputs: { fixed: \"fixed\", open: \"open\", direction: \"direction\", animationMode: \"animationMode\" }, outputs: { openChange: \"openChange\" }, ngContentSelectors: _c3, decls: 3, vars: 0, consts: [[1, \"eco-fab-speed-dial-container\"]], template: function EcoFabSpeedDialComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\"eco-fab-speed-dial{display:inline-block}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180{transform:rotate(180deg)}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transform:rotate(1turn)}eco-fab-speed-dial .eco-fab-speed-dial-container{align-items:center;display:flex;position:relative;z-index:20}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{pointer-events:auto;z-index:24}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180,eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transition:all .6s cubic-bezier(.4,0,.2,1)}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-actions{display:flex;height:0;position:absolute;width:0}eco-fab-speed-dial.eco-fling .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{display:block;opacity:1;transition:all .3s cubic-bezier(.55,0,.55,.2)}eco-fab-speed-dial.eco-scale .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{transform:scale(0);transition:all .3s cubic-bezier(.55,0,.55,.2);transition-duration:.14286s}eco-fab-speed-dial.eco-down eco-fab-speed-dial-actions{bottom:2px;left:7px}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column;order:2}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-top:10px}eco-fab-speed-dial.eco-up eco-fab-speed-dial-actions{left:7px;top:2px}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column-reverse;order:1}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-bottom:10px}eco-fab-speed-dial.eco-left eco-fab-speed-dial-actions{left:2px;top:7px}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row-reverse;order:1}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-right:10px}eco-fab-speed-dial.eco-right eco-fab-speed-dial-actions{right:2px;top:7px}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row;order:2}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-left:10px}\"], encapsulation: 2 });\nEcoFabSpeedDialComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: Document, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nEcoFabSpeedDialComponent.propDecorators = {\n    fixed: [{ type: Input }],\n    open: [{ type: HostBinding, args: ['class.eco-opened',] }, { type: Input }],\n    direction: [{ type: Input }],\n    animationMode: [{ type: Input }],\n    openChange: [{ type: Output }],\n    _childActions: [{ type: ContentChild, args: [EcoFabSpeedDialActionsComponent,] }],\n    _onClick: [{ type: HostListener, args: ['click',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EcoFabSpeedDialComponent, [{\n        type: Component,\n        args: [{\n                selector: 'eco-fab-speed-dial',\n                template: `\n        <div class=\"eco-fab-speed-dial-container\">\n            <ng-content select=\"eco-fab-speed-dial-trigger\"></ng-content>\n            <ng-content select=\"eco-fab-speed-dial-actions\"></ng-content>\n        </div>\n    `,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\"eco-fab-speed-dial{display:inline-block}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180{transform:rotate(180deg)}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transform:rotate(1turn)}eco-fab-speed-dial .eco-fab-speed-dial-container{align-items:center;display:flex;position:relative;z-index:20}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{pointer-events:auto;z-index:24}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180,eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transition:all .6s cubic-bezier(.4,0,.2,1)}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-actions{display:flex;height:0;position:absolute;width:0}eco-fab-speed-dial.eco-fling .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{display:block;opacity:1;transition:all .3s cubic-bezier(.55,0,.55,.2)}eco-fab-speed-dial.eco-scale .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{transform:scale(0);transition:all .3s cubic-bezier(.55,0,.55,.2);transition-duration:.14286s}eco-fab-speed-dial.eco-down eco-fab-speed-dial-actions{bottom:2px;left:7px}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column;order:2}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-top:10px}eco-fab-speed-dial.eco-up eco-fab-speed-dial-actions{left:7px;top:2px}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column-reverse;order:1}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-bottom:10px}eco-fab-speed-dial.eco-left eco-fab-speed-dial-actions{left:2px;top:7px}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row-reverse;order:1}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-right:10px}eco-fab-speed-dial.eco-right eco-fab-speed-dial-actions{right:2px;top:7px}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row;order:2}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-left:10px}\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: Document, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { openChange: [{\n            type: Output\n        }], fixed: [{\n            type: Input\n        }], open: [{\n            type: HostBinding,\n            args: ['class.eco-opened']\n        }, {\n            type: Input\n        }], direction: [{\n            type: Input\n        }], animationMode: [{\n            type: Input\n        }], _onClick: [{\n            type: HostListener,\n            args: ['click']\n        }], _childActions: [{\n            type: ContentChild,\n            args: [EcoFabSpeedDialActionsComponent]\n        }] }); })();\nclass EcoFabSpeedDialTriggerComponent {\n    constructor(injector) {\n        this.spin = false;\n        this._parent = injector.get(EcoFabSpeedDialComponent);\n    }\n    /**\n     * Whether this trigger should spin (360dg) while opening the speed dial\n     */\n    get sp() {\n        return this.spin;\n    }\n    _onClick(event) {\n        if (!this._parent.fixed) {\n            this._parent.toggle();\n            event.stopPropagation();\n        }\n    }\n}\nEcoFabSpeedDialTriggerComponent.ɵfac = function EcoFabSpeedDialTriggerComponent_Factory(t) { return new (t || EcoFabSpeedDialTriggerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector)); };\nEcoFabSpeedDialTriggerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: EcoFabSpeedDialTriggerComponent, selectors: [[\"eco-fab-speed-dial-trigger\"]], hostVars: 2, hostBindings: function EcoFabSpeedDialTriggerComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function EcoFabSpeedDialTriggerComponent_click_HostBindingHandler($event) { return ctx._onClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"eco-spin\", ctx.sp);\n    } }, inputs: { spin: \"spin\" }, ngContentSelectors: _c5, decls: 1, vars: 0, template: function EcoFabSpeedDialTriggerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2 });\nEcoFabSpeedDialTriggerComponent.ctorParameters = () => [\n    { type: Injector }\n];\nEcoFabSpeedDialTriggerComponent.propDecorators = {\n    sp: [{ type: HostBinding, args: ['class.eco-spin',] }],\n    spin: [{ type: Input }],\n    _onClick: [{ type: HostListener, args: ['click', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EcoFabSpeedDialTriggerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'eco-fab-speed-dial-trigger',\n                template: `\n        <ng-content select=\"[mat-fab]\"></ng-content>`\n            }]\n    }], function () { return [{ type: ɵngcc0.Injector }]; }, { spin: [{\n            type: Input\n        }], sp: [{\n            type: HostBinding,\n            args: ['class.eco-spin']\n        }], _onClick: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }] }); })();\n\nclass EcoFabSpeedDialModule {\n}\nEcoFabSpeedDialModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: EcoFabSpeedDialModule });\nEcoFabSpeedDialModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function EcoFabSpeedDialModule_Factory(t) { return new (t || EcoFabSpeedDialModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(EcoFabSpeedDialModule, { declarations: function () { return [EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EcoFabSpeedDialModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [\n                    EcoFabSpeedDialActionsComponent,\n                    EcoFabSpeedDialComponent,\n                    EcoFabSpeedDialTriggerComponent,\n                ],\n                exports: [\n                    EcoFabSpeedDialActionsComponent,\n                    EcoFabSpeedDialComponent,\n                    EcoFabSpeedDialTriggerComponent,\n                ]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of fab-speed-dial\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialModule, EcoFabSpeedDialTriggerComponent };\n\n//# sourceMappingURL=ecodev-fab-speed-dial.js.map","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst webApiLogRoot = 'sys/log/';\r\n\r\n@Injectable()\r\nexport class SxcInsightsService {\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext) { }\r\n\r\n  activatePageLog(duration: number) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiLogRoot + 'EnableDebug'), {\r\n      params: { duration: duration.toString() }\r\n    }) as Observable<string>;\r\n  }\r\n}\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const appsManagementDialog: DialogConfig = {\r\n  name: 'APPS_MANAGEMENT_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { AppsManagementNavComponent } = await import('./apps-management-nav.component');\r\n    return AppsManagementNavComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { EmptyRouteComponent } from '../shared/components/empty-route/empty-route.component';\r\nimport { appsManagementDialog } from './apps-management-nav/apps-management-dialog.config';\r\n\r\nconst appsManagementRoutes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: appsManagementDialog }, children: [\r\n      { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n      {\r\n        path: 'list', component: EmptyRouteComponent, children: [\r\n          {\r\n            path: 'import',\r\n            loadChildren: () => import('../import-app/import-app.module').then(m => m.ImportAppModule)\r\n          },\r\n        ],\r\n        data: { title: 'Apps in this Zone' },\r\n      },\r\n      { path: 'languages', component: EmptyRouteComponent, data: { title: 'Zone Languages' } },\r\n      { path: 'features', component: EmptyRouteComponent, data: { title: 'Zone Features' } },\r\n      { path: 'sxc-insights', component: EmptyRouteComponent, data: { title: 'Debug Insights' } },\r\n      {\r\n        path: ':appId',\r\n        loadChildren: () => import('../app-administration/app-administration.module').then(m => m.AppAdministrationModule)\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(appsManagementRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppsManagementRoutingModule { }\r\n","import { AgGridModule } from '@ag-grid-community/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { EcoFabSpeedDialModule } from '@ecodev/fab-speed-dial';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { AppsListActionsComponent } from './ag-grid-components/apps-list-actions/apps-list-actions.component';\r\nimport { AppsListShowComponent } from './ag-grid-components/apps-list-show/apps-list-show.component';\r\nimport { EnableLanguagesStatusComponent } from './ag-grid-components/enable-languages-status/enable-languages-status.component';\r\nimport { FeaturesListEnabledComponent } from './ag-grid-components/features-list-enabled/features-list-enabled.component';\r\nimport { FeaturesListPublicComponent } from './ag-grid-components/features-list-public/features-list-public.component';\r\nimport { FeaturesListSecurityComponent } from './ag-grid-components/features-list-security/features-list-security.component';\r\nimport { FeaturesListUiComponent } from './ag-grid-components/features-list-ui/features-list-ui.component';\r\nimport { AppsListComponent } from './apps-list/apps-list.component';\r\nimport { AppsManagementNavComponent } from './apps-management-nav/apps-management-nav.component';\r\nimport { AppsManagementRoutingModule } from './apps-management-routing.module';\r\nimport { EnableLanguagesComponent } from './enable-languages/enable-languages.component';\r\nimport { ManageFeaturesComponent } from './manage-features/manage-features.component';\r\nimport { AppsListService } from './services/apps-list.service';\r\nimport { EnableLanguagesService } from './services/enable-languages.service';\r\nimport { FeaturesConfigService } from './services/features-config.service';\r\nimport { SxcInsightsService } from './services/sxc-insights.service';\r\nimport { SxcInsightsComponent } from './sxc-insights/sxc-insights.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppsManagementNavComponent,\r\n    AppsListComponent,\r\n    ManageFeaturesComponent,\r\n    SxcInsightsComponent,\r\n    AppsListShowComponent,\r\n    AppsListActionsComponent,\r\n    FeaturesListEnabledComponent,\r\n    FeaturesListUiComponent,\r\n    FeaturesListPublicComponent,\r\n    FeaturesListSecurityComponent,\r\n    EnableLanguagesComponent,\r\n    EnableLanguagesStatusComponent,\r\n  ],\r\n  entryComponents: [\r\n    AppsManagementNavComponent,\r\n    AppsListShowComponent,\r\n    AppsListActionsComponent,\r\n    FeaturesListEnabledComponent,\r\n    FeaturesListUiComponent,\r\n    FeaturesListPublicComponent,\r\n    FeaturesListSecurityComponent,\r\n    EnableLanguagesStatusComponent,\r\n  ],\r\n  imports: [\r\n    AppsManagementRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    CommonModule,\r\n    AgGridModule.withComponents([]),\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatTooltipModule,\r\n    MatSlideToggleModule,\r\n    MatTabsModule,\r\n    MatRippleModule,\r\n    EcoFabSpeedDialModule,\r\n    MatCardModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    AppsListService,\r\n    EnableLanguagesService,\r\n    FeaturesConfigService,\r\n    SxcInsightsService,\r\n  ]\r\n})\r\nexport class AppsManagementModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EnableLanguage } from '../models/enable-language.model';\r\n\r\nconst webApiZoneRoot = 'admin/zone/';\r\n\r\n@Injectable()\r\nexport class EnableLanguagesService {\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiZoneRoot + 'getlanguages')) as Observable<EnableLanguage[]>;\r\n  }\r\n\r\n  toggle(code: string, enable: boolean) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiZoneRoot + 'switchlanguage'), {\r\n      params: { cultureCode: code, enable: enable.toString() },\r\n    }) as Observable<null>;\r\n  }\r\n\r\n  // todo: this code is _identical_ to toggle above. one should be removed, but I don't know where they are used\r\n  save(code: string, enable: boolean) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiZoneRoot + 'switchlanguage'), {\r\n      params: { cultureCode: code, enable: enable.toString() },\r\n    }) as Observable<null>;\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Feature } from '../models/feature.model';\r\n\r\nconst webApiFeatures = 'admin/feature/';\r\n\r\n@Injectable()\r\nexport class FeaturesConfigService {\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiFeatures + 'List')) as Observable<Feature[]>;\r\n  }\r\n\r\n  getManageFeaturesUrl() {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiFeatures + 'RemoteManageUrl')) as Observable<string>;\r\n  }\r\n\r\n  saveFeatures(featuresString: string) {\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiFeatures + 'Save'), featuresString) as Observable<boolean>;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}