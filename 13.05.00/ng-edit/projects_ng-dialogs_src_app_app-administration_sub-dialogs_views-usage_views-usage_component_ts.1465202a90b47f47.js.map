{"version":3,"mappings":"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","names":["i0","ctx_r1","ViewsUsageIdComponent","constructor","snackBar","agInit","params","this","tooltip","value","idPart","split","id","refresh","copy","copyToClipboard","open","duration","selectors","ViewsUsageStatusFilterComponent","filterParams","isFilterActive","isVisible","isDeleted","doesFilterPass","visiblePassed","deletedPassed","valueGetter","api","colDef","column","columnApi","context","data","node","getValue","field","IsVisible","toString","IsDeleted","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","ctx","Block","Id","Guid","Module","UsageId","Title","PageId","window","Url","status","ViewsUsageComponent","dialogRef","route","viewsService","BehaviorSubject","undefined","AllCommunityModules","Object","defaultGridOptions","columnDefs","width","headerClass","cellClass","cellRenderer","sortable","filter","blockIdValueGetter","moduleIdValueGetter","moduleIdClassGetter","pageIdValueGetter","pageIdClassGetter","flex","minWidth","sort","Name","nameClassGetter","onCellClicked","onNameClicked","Language","statusCellRenderer","Status","ngOnInit","viewGuid","snapshot","paramMap","get","getUsage","subscribe","viewUsages","viewUsage","viewUsage$","next","viewTooltip$","block","Blocks","Modules","length","push","module","Page","CultureCode","Visible","buildData","data$","ngOnDestroy","complete","closeDialog","close"],"sources":["./projects/ng-dialogs/src/app/app-administration/ag-grid-components/views-usage-id/views-usage-id.component.html","./projects/ng-dialogs/src/app/app-administration/ag-grid-components/views-usage-id/views-usage-id.component.ts","./projects/ng-dialogs/src/app/app-administration/ag-grid-components/views-usage-status-filter/views-usage-status-filter.component.ts","./projects/ng-dialogs/src/app/app-administration/ag-grid-components/views-usage-status-filter/views-usage-status-filter.component.html","./projects/ng-dialogs/src/app/app-administration/sub-dialogs/views-usage/views-usage-grid.helpers.ts","./projects/ng-dialogs/src/app/app-administration/sub-dialogs/views-usage/views-usage.component.ts","./projects/ng-dialogs/src/app/app-administration/sub-dialogs/views-usage/views-usage.helpers.ts","./projects/ng-dialogs/src/app/app-administration/sub-dialogs/views-usage/views-usage.component.html"],"sourcesContent":["<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" *ngIf=\"id\" (click)=\"copy()\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>\r\n","import { ICellRendererParams } from '@ag-grid-community/all-modules';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../../shared/helpers/copy-to-clipboard.helper';\r\n\r\n@Component({\r\n  selector: 'app-views-usage-id',\r\n  templateUrl: './views-usage-id.component.html',\r\n  styleUrls: ['./views-usage-id.component.scss'],\r\n})\r\nexport class ViewsUsageIdComponent implements ICellRendererAngularComp {\r\n  tooltip: string;\r\n  id: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.tooltip = params.value;\r\n    if (this.tooltip == null) { return; }\r\n    const idPart = this.tooltip.split('\\n')[0];\r\n    this.id = idPart.split(' ')[1];\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy() {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","import { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/all-modules';\r\nimport { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { ViewUsageDataStatus } from '../../models/view-usage-data.model';\r\nimport { ViewsUsageStatusFilterModel } from './views-usage-status-filter.model';\r\n\r\n@Component({\r\n  selector: 'app-views-usage-status-filter',\r\n  templateUrl: './views-usage-status-filter.component.html',\r\n  styleUrls: ['./views-usage-status-filter.component.scss'],\r\n})\r\nexport class ViewsUsageStatusFilterComponent implements IFilterAngularComp {\r\n  isVisible = '';\r\n  isDeleted = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.isVisible !== '' || this.isDeleted !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    let visiblePassed = false;\r\n    let deletedPassed = false;\r\n\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: ViewUsageDataStatus = this.filterParams.valueGetter(valueGetterParams);\r\n    if (value == null) { return false; }\r\n    if (this.isVisible !== '') {\r\n      visiblePassed = (value.IsVisible == null) ? false : value.IsVisible.toString() === this.isVisible;\r\n    } else {\r\n      visiblePassed = true;\r\n    }\r\n    if (this.isDeleted !== '') {\r\n      deletedPassed = (value.IsDeleted == null) ? false : value.IsDeleted.toString() === this.isDeleted;\r\n    } else {\r\n      deletedPassed = true;\r\n    }\r\n    return visiblePassed && deletedPassed;\r\n  }\r\n\r\n  getModel(): ViewsUsageStatusFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n    return {\r\n      filterType: 'views-usage-status',\r\n      isVisible: this.isVisible,\r\n      isDeleted: this.isDeleted,\r\n    };\r\n  }\r\n\r\n  setModel(model: ViewsUsageStatusFilterModel) {\r\n    this.isVisible = model ? model.isVisible : '';\r\n    this.isDeleted = model ? model.isDeleted : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<div class=\"title\">Visible</div>\r\n<mat-radio-group [(ngModel)]=\"isVisible\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">Visible</mat-radio-button>\r\n  <mat-radio-button value=\"false\">Hidden</mat-radio-button>\r\n</mat-radio-group>\r\n\r\n<div class=\"title\">Deleted</div>\r\n<mat-radio-group [(ngModel)]=\"isDeleted\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">Is deleted</mat-radio-button>\r\n  <mat-radio-button value=\"false\">Is not deleted</mat-radio-button>\r\n</mat-radio-group>\r\n","import { CellClassParams, CellClickedEvent, ICellRendererParams, ValueGetterParams } from '@ag-grid-community/all-modules';\r\nimport { ViewUsageData, ViewUsageDataStatus } from '../../models/view-usage-data.model';\r\n\r\nexport function blockIdValueGetter(params: ValueGetterParams) {\r\n  const data: ViewUsageData = params.data;\r\n  return `ID: ${data.Block.Id}\\nGUID: ${data.Block.Guid}`;\r\n}\r\n\r\nexport function moduleIdValueGetter(params: ValueGetterParams) {\r\n  const data: ViewUsageData = params.data;\r\n  if (data.Module == null) { return; }\r\n  return `ID: ${data.Module.Id}\\nUsageId: ${data.Module.UsageId}\\nTitle: ${data.Module.Title}`;\r\n}\r\n\r\nexport function moduleIdClassGetter(params: CellClassParams): string[] {\r\n  return `${params.value != null ? 'id-action no-padding' : ''} no-outline`.split(' ');\r\n}\r\n\r\nexport function pageIdValueGetter(params: ValueGetterParams) {\r\n  const data: ViewUsageData = params.data;\r\n  if (data.PageId == null) { return; }\r\n  return `ID: ${data.PageId}`;\r\n}\r\n\r\nexport function pageIdClassGetter(params: CellClassParams): string[] {\r\n  return `${params.value != null ? 'id-action no-padding' : ''} no-outline`.split(' ');\r\n}\r\n\r\nexport function nameClassGetter(params: CellClassParams): string[] {\r\n  return `${params.value != null ? 'primary-action highlight' : 'no-outline'}`.split(' ');\r\n}\r\n\r\nexport function onNameClicked(params: CellClickedEvent) {\r\n  if (params.value == null) { return; }\r\n  const data: ViewUsageData = params.data;\r\n  window.open(data.Url, '_blank');\r\n}\r\n\r\nexport function statusCellRenderer(params: ICellRendererParams) {\r\n  const status: ViewUsageDataStatus = params.value;\r\n  if (status == null) { return; }\r\n  return `\r\n    <div style=\"height: 100%;display: flex;align-items: center;\">\r\n      ${status.IsVisible ? '<span class=\"material-icons-outlined\">visibility</span>' : '<span class=\"material-icons-outlined\">visibility_off</span>'}\r\n      ${status.IsDeleted ? '<span style=\"margin-left: 8px;\" class=\"material-icons-outlined\">delete</span>' : ''}\r\n    </div>\r\n  `;\r\n}\r\n","import { AllCommunityModules, GridOptions } from '@ag-grid-community/all-modules';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { ViewsUsageIdComponent } from '../../ag-grid-components/views-usage-id/views-usage-id.component';\r\nimport { ViewsUsageStatusFilterComponent } from '../../ag-grid-components/views-usage-status-filter/views-usage-status-filter.component';\r\nimport { ViewUsageData } from '../../models/view-usage-data.model';\r\nimport { ViewUsage } from '../../models/view-usage.model';\r\nimport { ViewsService } from '../../services/views.service';\r\n// tslint:disable-next-line:max-line-length\r\nimport { blockIdValueGetter, moduleIdClassGetter, moduleIdValueGetter, nameClassGetter, onNameClicked, pageIdClassGetter, pageIdValueGetter, statusCellRenderer } from './views-usage-grid.helpers';\r\nimport { buildData } from './views-usage.helpers';\r\n\r\n@Component({\r\n  selector: 'app-views-usage',\r\n  templateUrl: './views-usage.component.html',\r\n  styleUrls: ['./views-usage.component.scss'],\r\n})\r\nexport class ViewsUsageComponent implements OnInit, OnDestroy {\r\n  viewUsage$ = new BehaviorSubject<ViewUsage>(undefined);\r\n  viewTooltip$ = new BehaviorSubject(undefined);\r\n  data$ = new BehaviorSubject<ViewUsageData[]>(undefined);\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    columnDefs: [\r\n      {\r\n        field: 'Block', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline'.split(' '),\r\n        cellRenderer: ViewsUsageIdComponent, sortable: true, filter: 'agTextColumnFilter', valueGetter: blockIdValueGetter,\r\n      },\r\n      {\r\n        field: 'Module', width: 76, headerClass: 'dense', cellRenderer: ViewsUsageIdComponent,\r\n        sortable: true, filter: 'agTextColumnFilter', valueGetter: moduleIdValueGetter, cellClass: moduleIdClassGetter,\r\n      },\r\n      {\r\n        field: 'Page', width: 70, headerClass: 'dense', cellRenderer: ViewsUsageIdComponent,\r\n        sortable: true, filter: 'agTextColumnFilter', valueGetter: pageIdValueGetter, cellClass: pageIdClassGetter,\r\n      },\r\n      {\r\n        field: 'Name', flex: 2, minWidth: 250, sortable: true, sort: 'asc', filter: 'agTextColumnFilter',\r\n        valueGetter: (params) => (params.data as ViewUsageData).Name, cellClass: nameClassGetter, onCellClicked: onNameClicked,\r\n      },\r\n      {\r\n        field: 'Language', width: 90, cellClass: 'no-outline', sortable: true, filter: 'agTextColumnFilter',\r\n        valueGetter: (params) => (params.data as ViewUsageData).Language,\r\n      },\r\n      {\r\n        field: 'Status', width: 80, cellClass: 'icon no-outline'.split(' '), filter: ViewsUsageStatusFilterComponent,\r\n        cellRenderer: statusCellRenderer, valueGetter: (params) => (params.data as ViewUsageData).Status,\r\n      },\r\n    ],\r\n  };\r\n\r\n  constructor(private dialogRef: MatDialogRef<ViewsUsageComponent>, private route: ActivatedRoute, private viewsService: ViewsService) { }\r\n\r\n  ngOnInit() {\r\n    const viewGuid = this.route.snapshot.paramMap.get('guid');\r\n    this.viewsService.getUsage(viewGuid).subscribe(viewUsages => {\r\n      const viewUsage = viewUsages[0];\r\n      this.viewUsage$.next(viewUsage);\r\n      const viewTooltip = `ID: ${viewUsage.Id}\\nGUID: ${viewUsage.Guid}`;\r\n      this.viewTooltip$.next(viewTooltip);\r\n      const data = buildData(viewUsage);\r\n      this.data$.next(data);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.viewUsage$.complete();\r\n    this.viewTooltip$.complete();\r\n    this.data$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { ViewUsageData } from '../../models/view-usage-data.model';\r\nimport { ViewUsage } from '../../models/view-usage.model';\r\n\r\nexport function buildData(viewUsage: ViewUsage) {\r\n  const data: ViewUsageData[] = [];\r\n  for (const block of viewUsage.Blocks) {\r\n    if (block.Modules.length === 0) {\r\n      data.push({\r\n        Block: { Id: block.Id, Guid: block.Guid },\r\n      });\r\n    }\r\n    for (const module of block.Modules) {\r\n      data.push({\r\n        Block: { Id: block.Id, Guid: block.Guid },\r\n        Module: module,\r\n        PageId: module.Page.Id,\r\n        Name: module.Page.Name,\r\n        Url: module.Page.Url,\r\n        Language: module.Page.CultureCode,\r\n        Status: { IsVisible: module.Page.Visible, IsDeleted: module.IsDeleted },\r\n      });\r\n    }\r\n  }\r\n  return data;\r\n}\r\n","<div class=\"nav-component-wrapper\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div [tippy]=\"viewTooltip$ | async\">View: {{ (viewUsage$ | async)?.Name }}</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <p class=\"dialog-description\">\r\n    This shows where this view is being used. Read about the\r\n    <a href=\"http://r.2sxc.org/content-in-dnn\" target=\"_blank\">connections between DNN and 2sxc Views</a>\r\n    to make good decisions if you're doing clean-up or just want to better know what this is all about.\r\n    <em>Before you get confused about some things you see here, do read the FAQ on that page.</em>\r\n  </p>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <div class=\"grid-wrapper\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"data$ | async\" [modules]=\"modules\"\r\n      [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n\r\n    <div class=\"grid-more-actions-box\"></div>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///","file":"projects_ng-dialogs_src_app_app-administration_sub-dialogs_views-usage_views-usage_component_ts.1465202a90b47f47.js"}