{"version":3,"mappings":"saAUO,IAAMA,EAAb,MAAM,QAKJC,eAEAC,OAAOC,GACLC,KAAKD,OAASA,EACdC,KAAKC,SAAWD,KAAKD,OAAOG,KAG9BC,QAAQJ,GACN,OAAO,EAGTK,kBACEJ,KAAKD,OAAOM,kBAAkBL,KAAKC,wDAjB1BL,8BAAoCU,4RCVjDC,iBAA+B,WACoCA,gCAASC,sBACxED,sBAEEA,oBACFA,mBAHUA,wDAAuC,+FDQxCX,GAAb,+CESO,IAAMa,EAAb,MAAM,QAOJZ,YACUa,EACAC,EACAC,EACAC,GAHAb,iBACAA,mBACAA,cACAA,aATVA,aAAUc,MAWRd,KAAKe,aAAe,IAAIC,KACxBhB,KAAKiB,WAAa,IAAIC,SAAuDC,GAC7EnB,KAAKoB,YAAWC,+BACXC,KAAkB,CACrBC,WAAY,CACV,CACEC,WAAY,KAAMC,MAAO,KAAMC,MAAO,GAAIC,YAAa,QAASC,UAAW,kCAAkCC,MAAM,KACnHC,aAAcC,IAAkBC,UAAU,EAAMC,OAAQ,qBACxDC,YAAcnC,GAAYA,EAAOG,KAAiCiC,KAClEC,mBAAoB,CAClBC,cAAgBpC,GAAsC,OAAOA,EAASkC,SAG1E,CACEV,MAAO,OAAQa,KAAM,EAAGC,SAAU,IAAKX,UAAW,aAAcI,UAAU,EAC1EQ,KAAM,MAAOP,OAAQ,qBACrBC,YAAcnC,GAAYA,EAAOG,KAAiCuC,SAEpE,CACEf,MAAO,GAAIE,UAAW,8BAA8BC,MAAM,KAAMC,aAAclC,EAAsC8C,OAAQ,QAC5HN,mBAAoB,CAClB/B,kBAAoBJ,GAAaD,KAAKI,gBAAgBH,QAOhE0C,WACE3C,KAAK4C,eACL5C,KAAK6C,uBAGPC,cACE9C,KAAKiB,WAAW8B,WAChB/C,KAAKe,aAAaiC,cAGpBC,cACEjD,KAAKU,UAAUwC,QAGjB9C,gBAAgBH,GACdD,KAAKY,OAAOuC,SAAS,CAACC,oBAA+BnD,EAASoD,SAAU,CAAEC,WAAYtD,KAAKa,QAGrF+B,eACN5C,KAAKW,YAAY4C,0BAA0BC,UAAU,CACnDC,MAAO,KACLzD,KAAKiB,WAAWyC,UAAKvC,IAEvBuC,KAAOC,IACL3D,KAAKiB,WAAWyC,KAAKC,MAKnBd,uBACN7C,KAAKe,aAAa6C,IAChB5D,KAAKY,OAAOiD,OAAOC,QACjB7B,KAAO8B,GAASA,aAAiBC,OACjCC,SAAYjE,KAAKa,MAAMqD,SAASC,eAChCC,KAAI,MAAQpE,KAAKa,MAAMqD,SAASC,aAChCE,UACApC,OAAO,EAAEqC,EAAUC,KAAcD,IAAaC,IAC9Cf,UAAU,KACVxD,KAAK4C,gEA/EAnC,GAA4BF,yEAA5BE,EAA4BH,sWCnBzCC,iBAAmC,UAAnCA,CAAmC,UAAnCA,CAAmC,SAGxBA,gCAAoBA,QACzBA,oBAA6CA,gCAASC,kBACpDD,oBAAUA,iBAAKA,cAKrBA,eACEA,6NAGFA,QAEAA,0BAEAA,kBACEA,gDAIAA,kBACFA,iBAL6CA,oDAA8B,oBAA9BA,CAA8B,oGDAhEE,GAAb","names":["LanguagesPermissionsActionsComponent","constructor","agInit","params","this","language","data","refresh","openPermissions","onOpenPermissions","selectors","i0","ctx","LanguagePermissionsComponent","dialogRef","zoneService","router","route","AllCommunityModules","subscription","Subscription","languages$","BehaviorSubject","undefined","gridOptions","Object","defaultGridOptions","columnDefs","headerName","field","width","headerClass","cellClass","split","cellRenderer","IdFieldComponent","sortable","filter","valueGetter","Code","cellRendererParams","tooltipGetter","flex","minWidth","sort","Culture","pinned","ngOnInit","getLanguages","refreshOnChildClosed","ngOnDestroy","complete","unsubscribe","closeDialog","close","navigate","GoToPermissions","NameId","relativeTo","getLanguagesPermissions","subscribe","error","next","languages","add","events","pipe","event","NavigationEnd","startWith","snapshot","firstChild","map","pairwise","hadChild","hasChild"],"sources":["./projects/ng-dialogs/src/app/app-administration/ag-grid-components/languages-permissions-actions/languages-permissions-actions.component.ts","./projects/ng-dialogs/src/app/app-administration/ag-grid-components/languages-permissions-actions/languages-permissions-actions.component.html","./projects/ng-dialogs/src/app/app-administration/sub-dialogs/language-permissions/language-permissions.component.ts","./projects/ng-dialogs/src/app/app-administration/sub-dialogs/language-permissions/language-permissions.component.html"],"sourcesContent":["import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { SiteLanguagePermissions } from '../../../apps-management/models/site-language.model';\r\nimport { LanguagesPermissionsActionsParams } from './languages-permissions-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-languages-permissions-actions',\r\n  templateUrl: './languages-permissions-actions.component.html',\r\n  styleUrls: ['./languages-permissions-actions.component.scss'],\r\n})\r\nexport class LanguagesPermissionsActionsComponent implements ICellRendererAngularComp {\r\n  language: SiteLanguagePermissions;\r\n\r\n  private params: LanguagesPermissionsActionsParams;\r\n\r\n  constructor() { }\r\n\r\n  agInit(params: LanguagesPermissionsActionsParams) {\r\n    this.params = params;\r\n    this.language = this.params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  openPermissions() {\r\n    this.params.onOpenPermissions(this.language);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button highlight\" matRipple tippy=\"Permissions\" (click)=\"openPermissions()\">\r\n    <mat-icon [matBadge]=\"language.Permissions.Count\" matBadgeColor=\"accent\" matBadgeSize=\"small\"\r\n      [matBadgeHidden]=\"!language.Permissions.Count\">\r\n      person\r\n    </mat-icon>\r\n  </div>\r\n</div>\r\n","import { AllCommunityModules, GridOptions } from '@ag-grid-community/all-modules';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { BehaviorSubject, filter, map, pairwise, startWith, Subscription } from 'rxjs';\r\nimport { SiteLanguagePermissions } from '../../../apps-management/models/site-language.model';\r\nimport { ZoneService } from '../../../apps-management/services/zone.service';\r\nimport { GoToPermissions } from '../../../permissions';\r\nimport { IdFieldComponent } from '../../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { LanguagesPermissionsActionsComponent } from '../../ag-grid-components/languages-permissions-actions/languages-permissions-actions.component';\r\nimport { LanguagesPermissionsActionsParams } from '../../ag-grid-components/languages-permissions-actions/languages-permissions-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-language-permissions',\r\n  templateUrl: './language-permissions.component.html',\r\n  styleUrls: ['./language-permissions.component.scss'],\r\n})\r\nexport class LanguagePermissionsComponent implements OnInit, OnDestroy {\r\n  languages$: BehaviorSubject<SiteLanguagePermissions[] | undefined>;\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions;\r\n\r\n  private subscription: Subscription;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<LanguagePermissionsComponent>,\r\n    private zoneService: ZoneService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) {\r\n    this.subscription = new Subscription();\r\n    this.languages$ = new BehaviorSubject<SiteLanguagePermissions[] | undefined>(undefined);\r\n    this.gridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          headerName: 'ID', field: 'Id', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline'.split(' '),\r\n          cellRenderer: IdFieldComponent, sortable: true, filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => (params.data as SiteLanguagePermissions).Code,\r\n          cellRendererParams: {\r\n            tooltipGetter: (language: SiteLanguagePermissions) => `ID: ${language.Code}`,\r\n          } as IdFieldParams,\r\n        },\r\n        {\r\n          field: 'Name', flex: 2, minWidth: 250, cellClass: 'no-outline', sortable: true,\r\n          sort: 'asc', filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => (params.data as SiteLanguagePermissions).Culture,\r\n        },\r\n        {\r\n          width: 42, cellClass: 'secondary-action no-padding'.split(' '), cellRenderer: LanguagesPermissionsActionsComponent, pinned: 'right',\r\n          cellRendererParams: {\r\n            onOpenPermissions: (language) => this.openPermissions(language),\r\n          } as LanguagesPermissionsActionsParams,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getLanguages();\r\n    this.refreshOnChildClosed();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.languages$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  openPermissions(language: SiteLanguagePermissions): void {\r\n    this.router.navigate([GoToPermissions.getUrlLanguage(language.NameId)], { relativeTo: this.route });\r\n  }\r\n\r\n  private getLanguages(): void {\r\n    this.zoneService.getLanguagesPermissions().subscribe({\r\n      error: () => {\r\n        this.languages$.next(undefined);\r\n      },\r\n      next: (languages) => {\r\n        this.languages$.next(languages);\r\n      },\r\n    });\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        startWith(!!this.route.snapshot.firstChild),\r\n        map(() => !!this.route.snapshot.firstChild),\r\n        pairwise(),\r\n        filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n      ).subscribe(() => {\r\n        this.getLanguages();\r\n      })\r\n    );\r\n  }\r\n}\r\n","<div class=\"nav-component-wrapper\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Language permissions</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <p class=\"dialog-description\">\r\n    If no language permissions are defined, all editors can edit all languages.\r\n    As soon as you set any language permission, only the specified users\r\n    (or users in the specified groups) can edit these permissions.\r\n  </p>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <div class=\"grid-wrapper\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"languages$ | async\" [modules]=\"modules\"\r\n      [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n\r\n    <div class=\"grid-more-actions-box\"></div>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///","file":"projects_ng-dialogs_src_app_app-administration_sub-dialogs_language-permissions_language-perm-d95adc.00902955cf7c4d16.js"}