{"version":3,"mappings":"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","names":["EntitiesService","http","context","dnnContext","this","contentType","entity","post","params","appId","zoneId","entityId","type","id","tryForce","delete","$2sxc","apiUrl","webApiEntityRoot","toString","force","s","i0","factory","GoToPermissions","targetType","keyType","key","getUrl","eavConstants","guid","getUrlEntity","c","path","loadChildren","t","then","m","PermissionsModule","data","title","permissionsDialog","name","initContext","panelSize","panelClass","getComponent","Promise","PermissionsComponent","routes","component","DialogEntryComponent","dialog","children","matcher","edit","EditModule","refreshEdit","RefreshEditModule","PermissionsRoutingModule","h","RouterModule","PermissionsActionsComponent","onDelete","M","selectors","ctx","dialogRef","router","route","permissionsService","snackBar","BehaviorSubject","AllCommunityModules","Object","defaultGridOptions","frameworkComponents","idFieldComponent","IdFieldComponent","permissionsActionsComponent","columnDefs","headerName","field","width","headerClass","cellClass","cellRenderer","sortable","filter","valueGetter","Id","cellRendererParams","tooltipGetter","permission","Guid","flex","minWidth","sort","onCellClicked","event","A","editPermission","Title","Identity","Condition","Grant","pinned","deletePermission","Subscription","parseInt","snapshot","paramMap","get","PermissionType","fetchPermissions","refreshOnChildClosed","permissions$","complete","subscription","unsubscribe","close","getAll","subscribe","_","next","permissions","form","C","items","ContentTypeName","For","Target","U","I","values","find","_a","target","_b","TargetType","Number","String","prefills","Prefill","EntityId","formUrl","convertFormToUrl","navigate","relativeTo","confirm","open","duration","add","events","pipe","NavigationEnd","startWith","firstChild","map","pairwise","Context","PermissionsService","MetadataService","imports","CommonModule","SharedComponentsModule","MatDialogModule","MatButtonModule","MatIconModule","AgGridModule","MatRippleModule","MatSnackBarModule","contentTypeName","metadataService","entitiesService","getMetadata","metadata","Items","value","align","tooltip","copyToClipboard","u","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange"],"sources":["./projects/ng-dialogs/src/app/content-items/services/entities.service.ts","./projects/ng-dialogs/src/app/permissions/go-to-permissions.ts","./projects/ng-dialogs/src/app/permissions/permissions-dialog.config.ts","./projects/ng-dialogs/src/app/permissions/permissions-routing.module.ts","./projects/ng-dialogs/src/app/permissions/ag-grid-components/permissions-actions/permissions-actions.component.ts","./projects/ng-dialogs/src/app/permissions/ag-grid-components/permissions-actions/permissions-actions.component.html","./projects/ng-dialogs/src/app/permissions/permissions.component.ts","./projects/ng-dialogs/src/app/permissions/permissions.component.html","./projects/ng-dialogs/src/app/permissions/permissions.module.ts","./projects/ng-dialogs/src/app/permissions/services/metadata.service.ts","./projects/ng-dialogs/src/app/permissions/services/permissions.service.ts","./projects/ng-dialogs/src/app/shared/components/id-field/id-field.component.ts","./projects/ng-dialogs/src/app/shared/components/id-field/id-field.component.html","./projects/ng-dialogs/src/app/shared/helpers/copy-to-clipboard.helper.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../../../../edit/shared/models/eav';\r\nimport { webApiEntityRoot } from '../../../../../edit/shared/services';\r\nimport { InnerItem } from '../../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Injectable()\r\nexport class EntitiesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.context.appId.toString(), force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n\r\nexport interface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: InnerItem;\r\n  [field: string]: any;\r\n}\r\n\r\nexport interface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\n\r\nexport class GoToPermissions {\r\n\r\n  static route: Route = {\r\n    path: 'permissions/:targetType/:keyType/:key',\r\n    loadChildren: () => import('./permissions.module').then(m => m.PermissionsModule),\r\n    data: { title: 'Permissions' },\r\n  };\r\n\r\n  static getUrl(targetType: number, keyType: MetadataKeyType, key: string): string {\r\n    return `permissions/${targetType}/${keyType}/${key}`;\r\n  }\r\n\r\n  static getUrlApp(appId: number): string {\r\n    return this.getUrl(eavConstants.metadata.app.targetType, eavConstants.metadata.app.keyType, appId.toString());\r\n  }\r\n\r\n  static getUrlAttribute(id: number): string {\r\n    return this.getUrl(eavConstants.metadata.attribute.targetType, eavConstants.metadata.attribute.keyType, id.toString());\r\n  }\r\n\r\n  /** For historic reasons, it's the same as Entity */\r\n  static getUrlContentType(guid: string): string {\r\n    return this.getUrlEntity(guid);\r\n  }\r\n\r\n  static getUrlEntity(guid: string): string {\r\n    return this.getUrl(eavConstants.metadata.entity.targetType, eavConstants.metadata.entity.keyType, guid);\r\n  }\r\n\r\n  static getUrlLanguage(id: string): string {\r\n    return this.getUrl(eavConstants.metadata.language.targetType, eavConstants.metadata.language.keyType, id);\r\n  }\r\n\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const permissionsDialog: DialogConfig = {\r\n  name: 'SET_PERMISSIONS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { PermissionsComponent } = await import('./permissions.component');\r\n    return PermissionsComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { edit, refreshEdit } from '../../../../edit/edit.matcher';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { permissionsDialog } from './permissions-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: permissionsDialog }, children: [\r\n      {\r\n        matcher: edit,\r\n        loadChildren: () => import('../../../../edit/edit.module').then(m => m.EditModule)\r\n      },\r\n      {\r\n        matcher: refreshEdit,\r\n        loadChildren: () => import('../../../../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PermissionsRoutingModule { }\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { Permission } from '../../models/permission.model';\r\nimport { PermissionsActionsParams } from './permissions-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-permissions-actions',\r\n  templateUrl: './permissions-actions.component.html',\r\n  styleUrls: ['./permissions-actions.component.scss'],\r\n})\r\nexport class PermissionsActionsComponent implements ICellRendererAngularComp {\r\n  private params: PermissionsActionsParams;\r\n\r\n  agInit(params: PermissionsActionsParams) {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deletePermission() {\r\n    const permission: Permission = this.params.data;\r\n    this.params.onDelete(permission);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button highlight\" matRipple tippy=\"Delete\" (click)=\"deletePermission()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","import { AllCommunityModules, GridOptions } from '@ag-grid-community/all-modules';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { filter, map, pairwise, startWith } from 'rxjs/operators';\r\nimport { IdFieldComponent } from '../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { PermissionsActionsComponent } from './ag-grid-components/permissions-actions/permissions-actions.component';\r\nimport { PermissionsActionsParams } from './ag-grid-components/permissions-actions/permissions-actions.models';\r\nimport { Permission } from './models/permission.model';\r\nimport { PermissionsService } from './services/permissions.service';\r\n\r\n@Component({\r\n  selector: 'app-permissions',\r\n  templateUrl: './permissions.component.html',\r\n  styleUrls: ['./permissions.component.scss'],\r\n})\r\nexport class PermissionsComponent implements OnInit, OnDestroy {\r\n  permissions$ = new BehaviorSubject<Permission[]>(null);\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      idFieldComponent: IdFieldComponent,\r\n      permissionsActionsComponent: PermissionsActionsComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'Id', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agNumberColumnFilter',\r\n        valueGetter: (params) => (params.data as Permission).Id,\r\n        cellRendererParams: {\r\n          tooltipGetter: (permission: Permission) => `ID: ${permission.Id}\\nGUID: ${permission.Guid}`,\r\n        } as IdFieldParams,\r\n      },\r\n      {\r\n        field: 'Name', flex: 2, minWidth: 250, cellClass: 'primary-action highlight',\r\n        sortable: true, sort: 'asc', filter: 'agTextColumnFilter',\r\n        onCellClicked: (event) => this.editPermission(event.data as Permission),\r\n        valueGetter: (params) => (params.data as Permission).Title,\r\n      },\r\n      {\r\n        field: 'Identity', flex: 2, minWidth: 250, cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter', valueGetter: (params) => (params.data as Permission).Identity,\r\n      },\r\n      {\r\n        field: 'Condition', flex: 2, minWidth: 250, cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter', valueGetter: (params) => (params.data as Permission).Condition,\r\n      },\r\n      {\r\n        field: 'Grant', width: 70, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'agTextColumnFilter', valueGetter: (params) => (params.data as Permission).Grant,\r\n      },\r\n      {\r\n        width: 42, cellClass: 'secondary-action no-padding', cellRenderer: 'permissionsActionsComponent', pinned: 'right',\r\n        cellRendererParams: {\r\n          onDelete: (permission) => this.deletePermission(permission),\r\n        } as PermissionsActionsParams,\r\n      },\r\n    ],\r\n  };\r\n\r\n  private subscription = new Subscription();\r\n  private targetType = parseInt(this.route.snapshot.paramMap.get('targetType'), 10);\r\n  private keyType = this.route.snapshot.paramMap.get('keyType') as MetadataKeyType;\r\n  private key = this.route.snapshot.paramMap.get('key');\r\n  private prefills: Record<string, Record<string, string>> = {\r\n    [eavConstants.metadata.language.targetType]: {\r\n      PermissionType: 'language',\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<PermissionsComponent>,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private permissionsService: PermissionsService,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchPermissions();\r\n    this.refreshOnChildClosed();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.permissions$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private fetchPermissions() {\r\n    this.permissionsService.getAll(this.targetType, this.keyType, this.key).subscribe(permissions => {\r\n      this.permissions$.next(permissions);\r\n    });\r\n  }\r\n\r\n  editPermission(permission?: Permission) {\r\n    let form: EditForm;\r\n    if (permission == null) {\r\n      form = {\r\n        items: [{\r\n          ContentTypeName: eavConstants.contentTypes.permissions,\r\n          For: {\r\n            Target: Object.values(eavConstants.metadata).find(m => m.targetType === this.targetType)?.target ?? this.targetType.toString(),\r\n            TargetType: this.targetType,\r\n            ...(this.keyType === eavConstants.keyTypes.guid && { Guid: this.key }),\r\n            ...(this.keyType === eavConstants.keyTypes.number && { Number: parseInt(this.key, 10) }),\r\n            ...(this.keyType === eavConstants.keyTypes.string && { String: this.key }),\r\n          },\r\n          ...(this.prefills[this.targetType] && { Prefill: this.prefills[this.targetType] }),\r\n        }],\r\n      };\r\n    } else {\r\n      form = {\r\n        items: [{ EntityId: permission.Id }],\r\n      };\r\n    }\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private deletePermission(permission: Permission) {\r\n    if (!confirm(`Delete '${permission.Title}' (${permission.Id})?`)) { return; }\r\n    this.snackBar.open('Deleting...');\r\n    this.permissionsService.delete(permission.Id).subscribe(() => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.fetchPermissions();\r\n    });\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        startWith(!!this.route.snapshot.firstChild),\r\n        map(() => !!this.route.snapshot.firstChild),\r\n        pairwise(),\r\n        filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n      ).subscribe(() => {\r\n        this.fetchPermissions();\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"nav-component-wrapper\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Permissions</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <div class=\"grid-wrapper\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"permissions$ | async\" [modules]=\"modules\"\r\n      [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n\r\n    <div class=\"grid-more-actions-box\"></div>\r\n\r\n    <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new permission\" (click)=\"editPermission(null)\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { AgGridModule } from '@ag-grid-community/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { EntitiesService } from '../content-items/services/entities.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { PermissionsActionsComponent } from './ag-grid-components/permissions-actions/permissions-actions.component';\r\nimport { PermissionsRoutingModule } from './permissions-routing.module';\r\nimport { PermissionsComponent } from './permissions.component';\r\nimport { MetadataService } from './services/metadata.service';\r\nimport { PermissionsService } from './services/permissions.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PermissionsComponent,\r\n    PermissionsActionsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PermissionsRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    AgGridModule.withComponents([]),\r\n    MatRippleModule,\r\n    MatSnackBarModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    PermissionsService,\r\n    MetadataService,\r\n    EntitiesService,\r\n  ]\r\n})\r\nexport class PermissionsModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Metadata } from '../../metadata';\r\nimport { MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nconst webApiRoot = 'admin/metadata/get';\r\n\r\n@Injectable()\r\nexport class MetadataService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param targetType type of target metadata item is for, e.g. for Entity, or ContentType\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of target metadata item is for\r\n   * @param contentTypeName name of content type where permissions are stored. If blank, backend returns all metadata except permissions\r\n   */\r\n  getMetadata(targetType: number, keyType: MetadataKeyType, key: string | number, contentTypeName?: string): Observable<Metadata> {\r\n    return this.http.get<Metadata>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        targetType: targetType.toString(),\r\n        keyType,\r\n        key: key.toString(),\r\n        ...(contentTypeName && { contentType: contentTypeName }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { EntitiesService } from '../../content-items/services/entities.service';\r\nimport { eavConstants, MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Permission } from '../models/permission.model';\r\nimport { MetadataService } from './metadata.service';\r\n\r\n@Injectable()\r\nexport class PermissionsService {\r\n  constructor(private metadataService: MetadataService, private entitiesService: EntitiesService) { }\r\n\r\n  getAll(targetType: number, keyType: MetadataKeyType, key: string): Observable<Permission[]> {\r\n    return this.metadataService.getMetadata(targetType, keyType, key, eavConstants.contentTypes.permissions).pipe(\r\n      map(metadata => metadata.Items as Permission[]),\r\n    );\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.entitiesService.delete(eavConstants.contentTypes.permissions, id, false);\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: IdFieldParams) {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy() {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"default-projects_ng-dialogs_src_app_permissions_index_ts.48756ccdc14b7678.js"}