{"version":3,"mappings":"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","names":["i0","ctx_r8","ctx_r13","ctx_r16","ctx_r18","ctx_r19","ctx_r20","SystemInfoComponent","zoneService","snackBar","dialogService","appDialogConfigService","sxcInsightsService","f","this","systemInfoSet$","BehaviorSubject","undefined","languages$","loading$","buildTemplateVars","getSystemInfo","getLanguages","complete","text","copyToClipboard","open","duration","sitePrimaryApp","openAppAdministration","ZoneId","AppId","getDialogSettings","t","openSiteSettings","globalPrimaryApp","openGlobalSettings","window","$2sxc","http","apiUrl","form","next","activatePageLog","pageLogDuration","subscribe","o","res","document","activeElement","HTMLElement","blur","resetForm","error","systemInfoSet","languages","callback","dialogSettings","Context","Site","PrimaryApp","System","systemInfos$","pipe","map","label","value","EavVersion","Platform","PlatformVersion","Zones","toString","Fingerprint","siteInfos$","combineLatest","p","allLanguages","length","activeLanguages","filter","l","IsEnabled","SiteId","link","Apps","templateVars$","systemInfos","siteInfos","loading","a","selectors","AppsListActionsComponent","params","app","data","onFlush","onDelete","ctx","AppsListShowComponent","AppsListComponent","router","route","appsListService","AllCommunityModules","Object","defaultGridOptions","frameworkComponents","booleanFilterComponent","BooleanFilterComponent","idFieldComponent","IdFieldComponent","appsListShowComponent","appsListActionsComponent","columnDefs","headerName","field","width","headerClass","cellClass","cellRenderer","sortable","valueGetter","Id","cellRendererParams","tooltipGetter","Guid","showValueGetter","flex","minWidth","sort","onCellClicked","event","openApp","Name","Thumbnail","Folder","Version","Items","pinned","deleteApp","flushApp","Subscription","fetchAppsList","refreshOnChildClosed","apps$","fabOpen$","subscription","unsubscribe","navigate","relativeTo","firstChild","files","state","getAll","apps","IsHidden","result","prompt","delete","alert","confirm","flushCache","add","events","NavigationEnd","startWith","snapshot","pairwise","SiteLanguagesStatusComponent","onEnabledToggle","SiteLanguagesComponent","siteLanguagesStatusComponent","Code","language","toggleLanguage","Culture","fetchLanguages","FeaturesListEnabledReasonComponent","feature","FeaturesListEnabledComponent","FeaturesStatusComponent","disabled","isDisabled","nextValue","onToggle","ctx_r4","ctx_r7","FeatureDetailsDialogComponent","dialogData","dialogRef","close","MAT_DIALOG_DATA","AgGridHeightDirective","elementRef","element","nativeElement","changes","itemsCount","style","height","headerHeight","maxRows","rowHeight","extraHeight","LicensesOrderPipe","licenses","Array","isArray","b","Priority","pure","ActiveFeaturesCountPipe","license","Features","Enabled","LicenseInfoComponent","featuresConfigService","dialog","viewContainerRef","changeDetectorRef","featuresListEnabledComponent","featuresListEnabledReasonComponent","featuresStatusComponent","NameId","showFeatureDetails","EnabledReason","expires","A","Expires","_a","split","startsWith","EnabledStored","disabled$","enabled","toggleFeature","fetchLicenses","distinctUntilChanged","gridRef","api","refreshCells","force","columns","licenses$","index","getLicenses","autoFocus","markForCheck","forkJoin","saveFeatures","FeatureGuid","timer","r","AgGridAngular","AppsManagementNavComponent","context","zoneId","tabs","indexOf","url","path","tabIndex","FieldHintComponent","isShort","m","id","align","tooltip","Z","ToggleDebugDirective","globalConfigService","navigator","platform","match","metaKey","ctrlKey","shiftKey","altKey","toggleDebugEnabled","getSelection","removeAllRanges","str","el","createElement","setAttribute","position","left","body","appendChild","selected","rangeCount","getRangeAt","select","execCommand","removeChild","addRange","SafeHtmlPipe","sanitizer","html","bypassSecurityTrustHtml"],"sources":["./projects/ng-dialogs/src/app/apps-management/system-info/system-info.component.html","./projects/ng-dialogs/src/app/apps-management/system-info/system-info.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/apps-list-actions/apps-list-actions.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/apps-list-actions/apps-list-actions.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/apps-list-show/apps-list-show.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/apps-list-show/apps-list-show.component.ts","./projects/ng-dialogs/src/app/apps-management/apps-list/apps-list.component.ts","./projects/ng-dialogs/src/app/apps-management/apps-list/apps-list.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/site-languages-status/site-languages-status.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/site-languages-status/site-languages-status.component.html","./projects/ng-dialogs/src/app/apps-management/site-languages/site-languages.component.ts","./projects/ng-dialogs/src/app/apps-management/site-languages/site-languages.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-enabled-reason/features-list-enabled-reason.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-enabled-reason/features-list-enabled-reason.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-enabled/features-list-enabled.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-enabled/features-list-enabled.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-status/features-status.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-status/features-status.component.html","./projects/ng-dialogs/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.html","./projects/ng-dialogs/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.ts","./projects/ng-dialogs/src/app/apps-management/licence-info/ag-grid-height.directive.ts","./projects/ng-dialogs/src/app/apps-management/licence-info/licenses-order.pipe.ts","./projects/ng-dialogs/src/app/apps-management/licence-info/active-features-count.pipe.ts","./projects/ng-dialogs/src/app/apps-management/licence-info/license-info.component.html","./projects/ng-dialogs/src/app/apps-management/licence-info/license-info.component.ts","./projects/ng-dialogs/src/app/apps-management/apps-management-nav/apps-management-nav.component.html","./projects/ng-dialogs/src/app/apps-management/apps-management-nav/apps-management-nav.component.ts","./projects/ng-dialogs/src/app/shared/components/field-hint/field-hint.component.html","./projects/ng-dialogs/src/app/shared/components/field-hint/field-hint.component.ts","./projects/ng-dialogs/src/app/shared/components/id-field/id-field.component.ts","./projects/ng-dialogs/src/app/shared/components/id-field/id-field.component.html","./projects/ng-dialogs/src/app/shared/directives/toggle-debug.directive.ts","./projects/ng-dialogs/src/app/shared/helpers/copy-to-clipboard.helper.ts","./projects/ng-dialogs/src/app/shared/pipes/safe-html.pipe.ts"],"sourcesContent":["<ng-container *ngIf=\"templateVars$ | async as data\">\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon>settings_applications</mat-icon>\r\n      </div>\r\n      <mat-card-title>Platform</mat-card-title>\r\n      <mat-card-subtitle>What you are running</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"info-row\" *ngFor=\"let info of data.systemInfos\">\r\n        <div class=\"info-row__label\">{{ info.label }}</div>\r\n        <div class=\"info-row__value\">\r\n          <span [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">{{ info.value }}</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-content-separator\"></div>\r\n      <h4>Global Settings</h4>\r\n      <p>\r\n        This includes both pre-defined SystemSettings as well as custom Settings.\r\n        It will affect the entire Installation.\r\n        See <a href=\"http://r.2sxc.org/settings\" target=\"_blank\">docs</a>.\r\n      </p>\r\n      <div class=\"card-actions\">\r\n        <button mat-button (click)=\"openGlobalSettings()\">\r\n          <mat-icon>open_in_new</mat-icon>\r\n          <span>Open Global Settings</span>\r\n        </button>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon>public</mat-icon>\r\n      </div>\r\n      <mat-card-title>This Site</mat-card-title>\r\n      <mat-card-subtitle>The current Site you're on</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"info-row\" *ngFor=\"let info of data.siteInfos\">\r\n        <div class=\"info-row__label\">{{ info.label }}</div>\r\n        <div class=\"info-row__value\">\r\n          <span [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">{{ info.value }}</span>\r\n          <a class=\"info-row__link\" *ngIf=\"info.link\" [routerLink]=\"info.link\">manage</a>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-content-separator\"></div>\r\n      <h4>Site Settings</h4>\r\n      <p>\r\n        This includes both pre-defined SystemSettings as well as custom Settings.\r\n        It will affect the entire Site / Portal.\r\n        See <a href=\"http://r.2sxc.org/settings\" target=\"_blank\">docs</a>.\r\n      </p>\r\n      <div class=\"card-actions\">\r\n        <button mat-button (click)=\"openSiteSettings()\">\r\n          <mat-icon>open_in_new</mat-icon>\r\n          <span>Open Site Settings</span>\r\n        </button>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon>speed</mat-icon>\r\n      </div>\r\n      <mat-card-title>2sxc Insights</mat-card-title>\r\n      <mat-card-subtitle>See what's happening under the hood</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <h4>2sxc Insights for Super Users</h4>\r\n      <p>\r\n        This is to access a special section to see what is really in the server memory.\r\n        It's intended for extensive debugging - see also\r\n        <a href=\"https://2sxc.org/en/blog/post/using-2sxc-insights\" target=\"_blank\">this blog post</a>.\r\n      </p>\r\n      <div class=\"card-actions\">\r\n        <button mat-button (click)=\"openInsights()\">\r\n          <mat-icon>open_in_new</mat-icon>\r\n          <span>Open 2sxc Insights</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"card-content-separator\"></div>\r\n      <h4>Activate Page Level Logging</h4>\r\n      <form #activateLogForm=\"ngForm\" class=\"activate-log-form\" (ngSubmit)=\"activatePageLog(activateLogForm)\">\r\n        <div>\r\n          This will place insights-logs in the HTML of the user output for users with ?debug=true in the url.\r\n          It can only be activated for short periods of time.\r\n        </div>\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Duration in Minutes</mat-label>\r\n          <input matInput type=\"number\" min=\"0\" required [pattern]=\"positiveWholeNumber\" [(ngModel)]=\"pageLogDuration\"\r\n            name=\"Duration\" #duration=\"ngModel\" [disabled]=\"data.loading\">\r\n        </mat-form-field>\r\n        <ng-container *ngIf=\"duration.touched && duration.errors\">\r\n          <app-field-hint *ngIf=\"duration.errors.pattern\" [isError]=\"true\">\r\n            Only positive whole numbers\r\n          </app-field-hint>\r\n        </ng-container>\r\n        <div class=\"form-actions\">\r\n          <button mat-raised-button type=\"submit\" color=\"accent\" [disabled]=\"!activateLogForm.valid || data.loading\">\r\n            Activate\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</ng-container>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AppDialogConfigService } from '../../app-administration/services';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { DialogContextSiteApp } from '../../shared/models/dialog-context.models';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\nimport { SiteLanguage } from '../models/site-language.model';\r\nimport { SystemInfoSet } from '../models/system-info.model';\r\nimport { SxcInsightsService } from '../services/sxc-insights.service';\r\nimport { ZoneService } from '../services/zone.service';\r\nimport { InfoTemplate, SystemInfoTemplateVars } from './system-info.models';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-system-info',\r\n  templateUrl: './system-info.component.html',\r\n  styleUrls: ['./system-info.component.scss'],\r\n})\r\nexport class SystemInfoComponent implements OnInit, OnDestroy {\r\n  pageLogDuration: number;\r\n  positiveWholeNumber = /^[1-9][0-9]*$/;\r\n  templateVars$: Observable<SystemInfoTemplateVars>;\r\n\r\n  private systemInfoSet$: BehaviorSubject<SystemInfoSet | undefined>;\r\n  private languages$: BehaviorSubject<SiteLanguage[] | undefined>;\r\n  private loading$: BehaviorSubject<boolean>;\r\n  private sitePrimaryApp: DialogContextSiteApp;\r\n  private globalPrimaryApp: DialogContextSiteApp;\r\n\r\n  constructor(\r\n    private zoneService: ZoneService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogService: DialogService,\r\n    private appDialogConfigService: AppDialogConfigService,\r\n    private sxcInsightsService: SxcInsightsService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.systemInfoSet$ = new BehaviorSubject<SystemInfoSet | undefined>(undefined);\r\n    this.languages$ = new BehaviorSubject<SiteLanguage[] | undefined>(undefined);\r\n    this.loading$ = new BehaviorSubject<boolean>(false);\r\n\r\n    this.buildTemplateVars();\r\n    this.getSystemInfo();\r\n    this.getLanguages();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.systemInfoSet$.complete();\r\n    this.languages$.complete();\r\n    this.loading$.complete();\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  openSiteSettings(): void {\r\n    if (this.sitePrimaryApp == null) {\r\n      this.getDialogSettings(() => { this.openSiteSettings(); });\r\n      return;\r\n    }\r\n\r\n    this.dialogService.openAppAdministration(this.sitePrimaryApp.ZoneId, this.sitePrimaryApp.AppId, 'app');\r\n  }\r\n\r\n  openGlobalSettings(): void {\r\n    if (this.globalPrimaryApp == null) {\r\n      this.getDialogSettings(() => { this.openGlobalSettings(); });\r\n      return;\r\n    }\r\n\r\n    this.dialogService.openAppAdministration(this.globalPrimaryApp.ZoneId, this.globalPrimaryApp.AppId, 'app');\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/help'), '_blank');\r\n  }\r\n\r\n  activatePageLog(form: NgForm) {\r\n    this.loading$.next(true);\r\n    this.snackBar.open('Activating...');\r\n    this.sxcInsightsService.activatePageLog(this.pageLogDuration).subscribe(res => {\r\n      this.loading$.next(false);\r\n      this.snackBar.open(res, null, { duration: 4000 });\r\n    });\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n    form.resetForm();\r\n  }\r\n\r\n  private getSystemInfo(): void {\r\n    this.zoneService.getSystemInfo().subscribe({\r\n      error: () => {\r\n        this.systemInfoSet$.next(undefined);\r\n      },\r\n      next: (systemInfoSet) => {\r\n        this.systemInfoSet$.next(systemInfoSet);\r\n      },\r\n    });\r\n  }\r\n\r\n  private getLanguages(): void {\r\n    this.zoneService.getLanguages().subscribe({\r\n      error: () => {\r\n        this.languages$.next(undefined);\r\n      },\r\n      next: (languages) => {\r\n        this.languages$.next(languages);\r\n      },\r\n    });\r\n  }\r\n\r\n  private getDialogSettings(callback: () => void): void {\r\n    this.appDialogConfigService.getDialogSettings(0).subscribe(dialogSettings => {\r\n      this.sitePrimaryApp = dialogSettings.Context.Site.PrimaryApp;\r\n      this.globalPrimaryApp = dialogSettings.Context.System.PrimaryApp;\r\n      callback();\r\n    });\r\n  }\r\n\r\n  private buildTemplateVars(): void {\r\n    const systemInfos$ = this.systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) { return; }\r\n        const info: InfoTemplate[] = [\r\n          { label: 'CMS', value: `2sxc v.${systemInfoSet.System.EavVersion}` },\r\n          { label: 'Platform', value: `${systemInfoSet.System.Platform} v.${systemInfoSet.System.PlatformVersion}` },\r\n          { label: 'Zones', value: systemInfoSet.System.Zones.toString() },\r\n          { label: 'Fingerprint', value: systemInfoSet.System.Fingerprint },\r\n        ];\r\n        return info;\r\n      })\r\n    );\r\n    const siteInfos$ = combineLatest([this.systemInfoSet$, this.languages$]).pipe(\r\n      map(([systemInfoSet, languages]) => {\r\n        if (systemInfoSet == null || languages == null) { return; }\r\n        const allLanguages = languages.length;\r\n        const activeLanguages = languages.filter(l => l.IsEnabled).length;\r\n        const info: InfoTemplate[] = [\r\n          { label: 'Zone', value: systemInfoSet.Site.ZoneId.toString() },\r\n          { label: 'Site', value: systemInfoSet.Site.SiteId.toString() },\r\n          {\r\n            label: 'Languages',\r\n            value: `${activeLanguages}/${allLanguages}`,\r\n            link: 'languages',\r\n          },\r\n          {\r\n            label: 'Apps',\r\n            value: systemInfoSet.Site.Apps.toString(),\r\n            link: 'list',\r\n          },\r\n        ];\r\n        return info;\r\n      })\r\n    );\r\n    this.templateVars$ = combineLatest([systemInfos$, siteInfos$, this.loading$]).pipe(\r\n      map(([systemInfos, siteInfos, loading]) => {\r\n        const templateVars: SystemInfoTemplateVars = {\r\n          systemInfos,\r\n          siteInfos,\r\n          loading,\r\n        };\r\n        return templateVars;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button icon\"\r\n    [tippy]=\"app.IsGlobal ? 'This app is global' : app.IsInherited ? 'This app is inherited' : ''\"\r\n    [tippyDisabled]=\"!app.IsGlobal && !app.IsInherited\">\r\n    <mat-icon *ngIf=\"app.IsGlobal\">foundation</mat-icon>\r\n    <mat-icon *ngIf=\"app.IsInherited\">holiday_village</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple tippy=\"More\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"grid-more-menu\">\r\n  <button mat-menu-item (click)=\"flushCache()\">\r\n    <mat-icon>cached</mat-icon>\r\n    <span>Flush cache</span>\r\n  </button>\r\n  <button mat-menu-item [disabled]=\"!app.IsApp\" (click)=\"deleteApp()\">\r\n    <mat-icon>delete</mat-icon>\r\n    <span>Delete</span>\r\n  </button>\r\n</mat-menu>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { App } from '../../models/app.model';\r\nimport { AppsListActionsParams } from './apps-list-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-apps-list-actions',\r\n  templateUrl: './apps-list-actions.component.html',\r\n  styleUrls: ['./apps-list-actions.component.scss'],\r\n})\r\nexport class AppsListActionsComponent implements ICellRendererAngularComp {\r\n  app: App;\r\n  private params: AppsListActionsParams;\r\n\r\n  constructor() { }\r\n\r\n  agInit(params: AppsListActionsParams) {\r\n    this.params = params;\r\n    this.app = this.params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  flushCache() {\r\n    this.params.onFlush(this.app);\r\n  }\r\n\r\n  deleteApp() {\r\n    this.params.onDelete(this.app);\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon tippy=\"Show this app to users\" *ngIf=\"value\">visibility</mat-icon>\r\n  <mat-icon tippy=\"Don't show this app to users\" *ngIf=\"!value\">visibility_off</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-apps-list-show',\r\n  templateUrl: './apps-list-show.component.html',\r\n  styleUrls: ['./apps-list-show.component.scss'],\r\n})\r\nexport class AppsListShowComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { AllCommunityModules, GridOptions, ICellRendererParams, ValueGetterParams } from '@ag-grid-community/all-modules';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { filter, map, pairwise, startWith } from 'rxjs/operators';\r\nimport { ImportAppDialogData } from '../../import-app/import-app-dialog.config';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { AppsListActionsComponent } from '../ag-grid-components/apps-list-actions/apps-list-actions.component';\r\nimport { AppsListActionsParams } from '../ag-grid-components/apps-list-actions/apps-list-actions.models';\r\nimport { AppsListShowComponent } from '../ag-grid-components/apps-list-show/apps-list-show.component';\r\nimport { App } from '../models/app.model';\r\nimport { AppsListService } from '../services/apps-list.service';\r\n\r\n@Component({\r\n  selector: 'app-apps-list',\r\n  templateUrl: './apps-list.component.html',\r\n  styleUrls: ['./apps-list.component.scss'],\r\n})\r\nexport class AppsListComponent implements OnInit, OnDestroy {\r\n  apps$ = new BehaviorSubject<App[]>(null);\r\n  fabOpen$ = new BehaviorSubject(false);\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      idFieldComponent: IdFieldComponent,\r\n      appsListShowComponent: AppsListShowComponent,\r\n      appsListActionsComponent: AppsListActionsComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'Id', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agNumberColumnFilter',\r\n        valueGetter: (params) => (params.data as App).Id,\r\n        cellRendererParams: {\r\n          tooltipGetter: (app: App) => `ID: ${app.Id}\\nGUID: ${app.Guid}`,\r\n        } as IdFieldParams,\r\n      },\r\n      {\r\n        field: 'Show', width: 70, headerClass: 'dense', cellClass: 'icons no-outline', sortable: true,\r\n        filter: 'booleanFilterComponent', cellRenderer: 'appsListShowComponent', valueGetter: this.showValueGetter,\r\n      },\r\n      {\r\n        field: 'Name', flex: 2, minWidth: 250, cellClass: 'apps-list-primary-action highlight', sortable: true,\r\n        sort: 'asc', filter: 'agTextColumnFilter', onCellClicked: (event) => this.openApp(event.data as App),\r\n        valueGetter: (params) => (params.data as App).Name,\r\n        cellRenderer: (params: ICellRendererParams) => {\r\n          const app: App = params.data;\r\n          if (app.Thumbnail != null) {\r\n            return `\r\n            <div class=\"container\">\r\n              <img class=\"image logo\" src=\"${app.Thumbnail}?w=40&h=40&mode=crop\"></img>\r\n              <div class=\"text\">${params.value}</div>\r\n            </div>`;\r\n          } else {\r\n            return `\r\n            <div class=\"container\">\r\n              <div class=\"image logo\">\r\n                <span class=\"material-icons-outlined\">star_border</span>\r\n              </div>\r\n              <div class=\"text\">${params.value}</div>\r\n            </div>`;\r\n          }\r\n        },\r\n      },\r\n      {\r\n        field: 'Folder', flex: 2, minWidth: 250, cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter', valueGetter: (params) => (params.data as App).Folder,\r\n      },\r\n      {\r\n        field: 'Version', width: 78, headerClass: 'dense', cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter', valueGetter: (params) => (params.data as App).Version,\r\n      },\r\n      {\r\n        field: 'Items', width: 70, headerClass: 'dense', cellClass: 'number-cell no-outline', sortable: true,\r\n        filter: 'agNumberColumnFilter', valueGetter: (params) => (params.data as App).Items,\r\n      },\r\n      {\r\n        width: 82, cellClass: 'secondary-action no-padding', cellRenderer: 'appsListActionsComponent', pinned: 'right',\r\n        cellRendererParams: {\r\n          onDelete: (app) => this.deleteApp(app),\r\n          onFlush: (app) => this.flushApp(app),\r\n        } as AppsListActionsParams,\r\n      },\r\n    ],\r\n  };\r\n\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private appsListService: AppsListService,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchAppsList();\r\n    this.refreshOnChildClosed();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.apps$.complete();\r\n    this.fabOpen$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  openChange(open: boolean) {\r\n    this.fabOpen$.next(open);\r\n  }\r\n\r\n  browseCatalog() {\r\n    window.open('https://2sxc.org/apps', '_blank');\r\n  }\r\n\r\n  createApp() {\r\n    this.router.navigate(['create'], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  createInheritedApp(): void {\r\n    this.router.navigate(['create-inherited'], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  importApp(files?: File[]) {\r\n    const dialogData: ImportAppDialogData = { files };\r\n    this.router.navigate(['import'], { relativeTo: this.route.firstChild, state: dialogData });\r\n  }\r\n\r\n  private fetchAppsList() {\r\n    this.appsListService.getAll().subscribe(apps => {\r\n      this.apps$.next(apps);\r\n    });\r\n  }\r\n\r\n  private showValueGetter(params: ValueGetterParams) {\r\n    const app: App = params.data;\r\n    return !app.IsHidden;\r\n  }\r\n\r\n  private deleteApp(app: App) {\r\n    const result = prompt(`This cannot be undone. To really delete this app, type 'yes!' or type/paste the app-name here. Are you sure want to delete '${app.Name}' (${app.Id})?`);\r\n    if (result === null) { return; }\r\n    if (result === app.Name || result === 'yes!') {\r\n      this.snackBar.open('Deleting...');\r\n      this.appsListService.delete(app.Id).subscribe(() => {\r\n        this.snackBar.open('Deleted', null, { duration: 2000 });\r\n        this.fetchAppsList();\r\n      });\r\n    } else {\r\n      alert('Input did not match - will not delete');\r\n    }\r\n  }\r\n\r\n  private flushApp(app: App) {\r\n    if (!confirm(`Flush the App Cache for ${app.Name} (${app.Id})?`)) { return; }\r\n    this.snackBar.open('Flushing cache...');\r\n    this.appsListService.flushCache(app.Id).subscribe(() => {\r\n      this.snackBar.open('Cache flushed', null, { duration: 2000 });\r\n    });\r\n  }\r\n\r\n  private openApp(app: App) {\r\n    this.router.navigate([app.Id.toString()], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        startWith(!!this.route.snapshot.firstChild.firstChild),\r\n        map(() => !!this.route.snapshot.firstChild.firstChild),\r\n        pairwise(),\r\n        filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n      ).subscribe(() => {\r\n        this.fetchAppsList();\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"apps$ | async\" [modules]=\"modules\" [gridOptions]=\"gridOptions\"\r\n    appDragAndDrop [allowedFileTypes]=\"'zip'\" (filesDropped)=\"importApp($event)\">\r\n  </ag-grid-angular>\r\n\r\n  <div class=\"grid-more-actions-box\"></div>\r\n\r\n  <eco-fab-speed-dial class=\"grid-fab\" [ngClass]=\"{ 'fab-opened': (fabOpen$ | async) }\"\r\n    (openChange)=\"openChange($event)\">\r\n    <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n      <button mat-fab>\r\n        <mat-icon class=\"spin180\">{{ (fabOpen$ | async) ? 'close' : 'add' }}</mat-icon>\r\n      </button>\r\n    </eco-fab-speed-dial-trigger>\r\n\r\n    <eco-fab-speed-dial-actions>\r\n      <button mat-mini-fab label=\"Find more apps\" (click)=\"browseCatalog()\">\r\n        <mat-icon>search</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab label=\"Create inherited app\" (click)=\"createInheritedApp()\">\r\n        <mat-icon>holiday_village</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab label=\"Import app\" (click)=\"importApp()\">\r\n        <mat-icon>cloud_upload</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab label=\"Create app\" (click)=\"createApp()\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </eco-fab-speed-dial-actions>\r\n  </eco-fab-speed-dial>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { SiteLanguage } from '../../models/site-language.model';\r\nimport { SiteLanguagesStatusParams } from './site-languages-status.models';\r\n\r\n@Component({\r\n  selector: 'app-site-languages-status',\r\n  templateUrl: './site-languages-status.component.html',\r\n  styleUrls: ['./site-languages-status.component.scss'],\r\n})\r\nexport class SiteLanguagesStatusComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n  private params: SiteLanguagesStatusParams;\r\n\r\n  agInit(params: SiteLanguagesStatusParams) {\r\n    this.params = params;\r\n    this.value = this.params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  toggleLanguage() {\r\n    const language: SiteLanguage = this.params.data;\r\n    this.params.onEnabledToggle(language);\r\n  }\r\n}\r\n","<mat-slide-toggle [checked]=\"value\" (change)=\"toggleLanguage()\"></mat-slide-toggle>\r\n","import { AllCommunityModules, GridOptions } from '@ag-grid-community/all-modules';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { SiteLanguagesStatusComponent } from '../ag-grid-components/site-languages-status/site-languages-status.component';\r\nimport { SiteLanguagesStatusParams } from '../ag-grid-components/site-languages-status/site-languages-status.models';\r\nimport { SiteLanguage } from '../models/site-language.model';\r\nimport { ZoneService } from '../services/zone.service';\r\n\r\n@Component({\r\n  selector: 'app-site-languages',\r\n  templateUrl: './site-languages.component.html',\r\n  styleUrls: ['./site-languages.component.scss'],\r\n})\r\nexport class SiteLanguagesComponent implements OnInit, OnDestroy {\r\n  languages$ = new BehaviorSubject<SiteLanguage[]>(null);\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      idFieldComponent: IdFieldComponent,\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      siteLanguagesStatusComponent: SiteLanguagesStatusComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'Id', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter',\r\n        valueGetter: (params) => (params.data as SiteLanguage).Code,\r\n        cellRendererParams: {\r\n          tooltipGetter: (language: SiteLanguage) => `ID: ${language.Code}`,\r\n        } as IdFieldParams,\r\n      },\r\n      {\r\n        field: 'Name', flex: 2, minWidth: 250, cellClass: 'primary-action highlight no-outline', sortable: true,\r\n        sort: 'asc', filter: 'agTextColumnFilter', onCellClicked: (event) => this.toggleLanguage(event.data as SiteLanguage),\r\n        valueGetter: (params) => (params.data as SiteLanguage).Culture,\r\n      },\r\n      {\r\n        field: 'Status', width: 72, headerClass: 'dense', cellClass: 'no-padding no-outline',\r\n        cellRenderer: 'siteLanguagesStatusComponent', sortable: true, filter: 'booleanFilterComponent',\r\n        valueGetter: (params) => (params.data as SiteLanguage).IsEnabled,\r\n        cellRendererParams: {\r\n          onEnabledToggle: (language) => this.toggleLanguage(language),\r\n        } as SiteLanguagesStatusParams,\r\n      },\r\n    ],\r\n  };\r\n\r\n  constructor(private zoneService: ZoneService) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchLanguages();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.languages$.complete();\r\n  }\r\n\r\n  private toggleLanguage(language: SiteLanguage) {\r\n    this.zoneService.toggleLanguage(language.Code, !language.IsEnabled).subscribe(() => {\r\n      this.fetchLanguages();\r\n    });\r\n  }\r\n\r\n  private fetchLanguages() {\r\n    this.zoneService.getLanguages().subscribe(languages => {\r\n      this.languages$.next(languages);\r\n    });\r\n  }\r\n}\r\n","<div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"languages$ | async\" [modules]=\"modules\"\r\n    [gridOptions]=\"gridOptions\">\r\n  </ag-grid-angular>\r\n\r\n  <div class=\"grid-more-actions-box\"></div>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../models/feature.model';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled-reason',\r\n  templateUrl: './features-list-enabled-reason.component.html',\r\n  styleUrls: ['./features-list-enabled-reason.component.scss'],\r\n})\r\nexport class FeaturesListEnabledReasonComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n  feature: Feature;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.feature = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div [tippy]=\"feature.EnabledReasonDetailed\">{{ value }}</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled',\r\n  templateUrl: './features-list-enabled.component.html',\r\n  styleUrls: ['./features-list-enabled.component.scss'],\r\n})\r\nexport class FeaturesListEnabledComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon>{{ value ? 'check_box' : 'check_box_outline_blank' }}</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../models/feature.model';\r\nimport { FeaturesStatusParams } from './features-status.models';\r\n\r\n@Component({\r\n  selector: 'app-features-status',\r\n  templateUrl: './features-status.component.html',\r\n  styleUrls: ['./features-status.component.scss'],\r\n})\r\nexport class FeaturesStatusComponent implements ICellRendererAngularComp {\r\n  value: boolean | null;\r\n  disabled: boolean;\r\n  private params: FeaturesStatusParams;\r\n\r\n  agInit(params: FeaturesStatusParams) {\r\n    this.params = params;\r\n    this.value = this.params.value;\r\n    this.disabled = this.params.isDisabled();\r\n  }\r\n\r\n  refresh(params: FeaturesStatusParams): boolean {\r\n    this.disabled = this.params.isDisabled();\r\n    return true;\r\n  }\r\n\r\n  toggle() {\r\n    const feature: Feature = this.params.data;\r\n    let nextValue: boolean;\r\n    switch (this.value) {\r\n      case false:\r\n        nextValue = null;\r\n        break;\r\n      case null:\r\n        nextValue = true;\r\n        break;\r\n      case true:\r\n        nextValue = false;\r\n        break;\r\n    }\r\n    this.value = nextValue;\r\n    this.params.onToggle(feature, nextValue);\r\n  }\r\n}\r\n","<mat-slide-toggle [checked]=\"value\" [disabled]=\"disabled\" (change)=\"toggle()\" [ngClass]=\"{\r\n  'toggle-false': value === false,\r\n  'toggle-null': value === null\r\n  }\">\r\n</mat-slide-toggle>\r\n","<div mat-dialog-title>\r\n  <div class=\"dialog-title-box\">\r\n    <div>{{ dialogData.feature.Name }}</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<p class=\"dialog-description\" [innerHtml]=\"dialogData.feature.Description | safeHtml\"></p>\r\n\r\n<div class=\"info-box\">\r\n  <div class=\"info-row\" *ngIf=\"dialogData.feature.NameId as id\">\r\n    <div class=\"info-row__label\">ID</div>\r\n    <div class=\"info-row__value click\">\r\n      <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"info-row\" *ngIf=\"dialogData.feature.Guid as guid\">\r\n    <div class=\"info-row__label\">GUID</div>\r\n    <div class=\"info-row__value click\">\r\n      <span [tippy]=\"guid\" (click)=\"copyToClipboard(guid)\">{{ guid }}</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"info-row\"\r\n    *ngIf=\"(dialogData.feature.Security.Impact + ': ' + dialogData.feature.Security.Message) as security\">\r\n    <div class=\"info-row__label\">Security Rating</div>\r\n    <div class=\"info-row__value\">\r\n      <span>{{ security }}</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../../shared/helpers/copy-to-clipboard.helper';\r\nimport { FeatureDetailsDialogData } from './feature-details-dialog.models';\r\n\r\n@Component({\r\n  selector: 'app-feature-details-dialog',\r\n  templateUrl: './feature-details-dialog.component.html',\r\n  styleUrls: ['./feature-details-dialog.component.scss']\r\n})\r\nexport class FeatureDetailsDialogComponent implements OnInit {\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: FeatureDetailsDialogData,\r\n    private dialogRef: MatDialogRef<FeatureDetailsDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n@Directive({ selector: '[appAgGridHeight]' })\r\nexport class AgGridHeightDirective implements OnChanges {\r\n  @Input() itemsCount = 0;\r\n  @Input() headerHeight = 32;\r\n  @Input() rowHeight = 48;\r\n  @Input() maxRows = 100;\r\n\r\n  /** Fixes a bug where scrollbar appears when then is no overflow */\r\n  private extraHeight = 2;\r\n\r\n  private element: HTMLElement;\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.itemsCount != null) {\r\n      const rows = this.itemsCount === 0 ? 2 : this.itemsCount > this.maxRows ? this.maxRows : this.itemsCount;\r\n      this.element.style.height = `${this.headerHeight + rows * this.rowHeight + this.extraHeight}px`;\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { License } from '../models/license.model';\r\n\r\n@Pipe({ name: 'licensesOrder' })\r\nexport class LicensesOrderPipe implements PipeTransform {\r\n\r\n  transform(licenses: License[]): any {\r\n    if (!Array.isArray(licenses)) { return licenses; }\r\n\r\n    const sorted = [...licenses].sort((a: License, b: License) => {\r\n      if (a.Priority < b.Priority) {\r\n        return -1;\r\n      } else if (a.Priority > b.Priority) {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    return sorted;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { License } from '../models/license.model';\r\n\r\n@Pipe({ name: 'activeFeaturesCount' })\r\nexport class ActiveFeaturesCountPipe implements PipeTransform {\r\n\r\n  transform(license: License) {\r\n    return `${license.Features.filter(f => f.Enabled).length}/${license.Features.length}`;\r\n  }\r\n}\r\n","<mat-accordion multi *ngIf=\"licenses$ | async as licenses\">\r\n  <mat-expansion-panel #panel *ngFor=\"let license of licenses | licensesOrder; trackBy: trackLicenses\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        <mat-icon class=\"panel-icon\" [tippy]=\"license.IsEnabled ? 'License is active' : 'License is not active'\">\r\n          {{ license.IsEnabled ? 'check_circle_outline' : 'cancel' }}\r\n        </mat-icon>\r\n        <div>\r\n          <div class=\"panel-title\">\r\n            <span>{{ license.Name }}</span>\r\n            <span class=\"active-features-count\">{{ license | activeFeaturesCount }}</span>\r\n          </div>\r\n          <div class=\"panel-description\">{{ license.Description }}</div>\r\n        </div>\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n\r\n    <ng-container *ngIf=\"panel.expanded\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"license.Features\" [modules]=\"modules\"\r\n        [gridOptions]=\"gridOptions\" appAgGridHeight [itemsCount]=\"license.Features?.length\">\r\n      </ag-grid-angular>\r\n    </ng-container>\r\n  </mat-expansion-panel>\r\n</mat-accordion>\r\n","import { AllCommunityModules, GridOptions } from '@ag-grid-community/all-modules';\r\nimport { AgGridAngular } from '@ag-grid-community/angular';\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { BehaviorSubject, distinctUntilChanged, forkJoin, Subscription, timer } from 'rxjs';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { FeaturesListEnabledReasonComponent } from '../ag-grid-components/features-list-enabled-reason/features-list-enabled-reason.component';\r\nimport { FeaturesListEnabledComponent } from '../ag-grid-components/features-list-enabled/features-list-enabled.component';\r\nimport { FeaturesStatusComponent } from '../ag-grid-components/features-status/features-status.component';\r\nimport { FeaturesStatusParams } from '../ag-grid-components/features-status/features-status.models';\r\nimport { Feature, FeatureState } from '../models/feature.model';\r\nimport { License } from '../models/license.model';\r\nimport { FeaturesConfigService } from '../services/features-config.service';\r\nimport { FeatureDetailsDialogComponent } from './feature-details-dialog/feature-details-dialog.component';\r\nimport { FeatureDetailsDialogData } from './feature-details-dialog/feature-details-dialog.models';\r\n\r\n@Component({\r\n  selector: 'app-license-info',\r\n  templateUrl: './license-info.component.html',\r\n  styleUrls: ['./license-info.component.scss'],\r\n})\r\nexport class LicenseInfoComponent implements OnInit, OnDestroy {\r\n  @ViewChild(AgGridAngular) private gridRef: AgGridAngular;\r\n\r\n  licenses$ = new BehaviorSubject<License[]>(undefined);\r\n  disabled$ = new BehaviorSubject(false);\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      idFieldComponent: IdFieldComponent,\r\n      featuresListEnabledComponent: FeaturesListEnabledComponent,\r\n      featuresListEnabledReasonComponent: FeaturesListEnabledReasonComponent,\r\n      featuresStatusComponent: FeaturesStatusComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'Id', width: 200, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter',\r\n        valueGetter: (params) => (params.data as Feature).NameId,\r\n        cellRendererParams: {\r\n          tooltipGetter: (feature: Feature) => `NameId: ${feature.NameId}\\nGUID: ${feature.Guid}`,\r\n        } as IdFieldParams,\r\n      },\r\n      {\r\n        field: 'Name', flex: 3, minWidth: 250, cellClass: 'primary-action highlight', sortable: true, filter: 'agTextColumnFilter',\r\n        onCellClicked: (params) => this.showFeatureDetails(params.data as Feature),\r\n        valueGetter: (params) => (params.data as Feature).Name,\r\n      },\r\n      {\r\n        field: 'Enabled', width: 80, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'booleanFilterComponent', cellRenderer: 'featuresListEnabledComponent',\r\n        valueGetter: (params) => (params.data as Feature).Enabled,\r\n      },\r\n      {\r\n        field: 'EnabledReason', headerName: 'Reason', flex: 1, minWidth: 150, cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter', cellRenderer: 'featuresListEnabledReasonComponent',\r\n        valueGetter: (params) => (params.data as Feature).EnabledReason,\r\n      },\r\n      {\r\n        field: 'Expires', width: 100, cellClass: 'no-outline',\r\n        sortable: true, filter: 'agTextColumnFilter',\r\n        valueGetter: (params) => {\r\n          const expires = (params.data as Feature).Expires?.split('T')[0];\r\n          if (expires.startsWith('9999')) { return 'never'; }\r\n          return expires;\r\n        },\r\n      },\r\n      {\r\n        field: 'Status', headerName: '', width: 62, cellClass: 'secondary-action no-outline no-padding', pinned: 'right',\r\n        cellRenderer: 'featuresStatusComponent',\r\n        valueGetter: (params) => (params.data as Feature).EnabledStored,\r\n        cellRendererParams: {\r\n          isDisabled: () => this.disabled$.value,\r\n          onToggle: (feature, enabled) => this.toggleFeature(feature, enabled),\r\n        } as FeaturesStatusParams,\r\n      },\r\n    ],\r\n  };\r\n\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private featuresConfigService: FeaturesConfigService,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchLicenses();\r\n    this.subscription.add(\r\n      this.disabled$.pipe(distinctUntilChanged()).subscribe(() => {\r\n        this.gridRef?.api.refreshCells({ force: true, columns: ['Status'] });\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.licenses$.complete();\r\n    this.disabled$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  trackLicenses(index: number, license: License): string {\r\n    return license.Guid;\r\n  }\r\n\r\n  private fetchLicenses(): void {\r\n    this.featuresConfigService.getLicenses().subscribe({\r\n      error: () => {\r\n        this.licenses$.next(undefined);\r\n        this.disabled$.next(false);\r\n      },\r\n      next: (licenses) => {\r\n        this.licenses$.next(licenses);\r\n        this.disabled$.next(false);\r\n      },\r\n    });\r\n  }\r\n\r\n  private showFeatureDetails(feature: Feature): void {\r\n    const data: FeatureDetailsDialogData = {\r\n      feature,\r\n    };\r\n    this.dialog.open(FeatureDetailsDialogComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private toggleFeature(feature: Feature, enabled: boolean): void {\r\n    this.disabled$.next(true);\r\n    const state: FeatureState = {\r\n        FeatureGuid: feature.Guid,\r\n        Enabled: enabled,\r\n    };\r\n    forkJoin([this.featuresConfigService.saveFeatures([state]), timer(100)]).subscribe(() => {\r\n      this.fetchLicenses();\r\n    });\r\n  }\r\n}\r\n","<div class=\"nav-component-wrapper\" appToggleDebug>\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Manage Zone {{ zoneId }}</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <!-- spm NOTE: we use mat-tab-group because mat-tab-nav-bar doesn't have animations and doesn't look pretty -->\r\n  <mat-tab-group class=\"mat-tab-group-max-height\" dynamicHeight color=\"accent\" (selectedTabChange)=\"changeTab($event)\"\r\n    [selectedIndex]=\"tabIndex$ | async\">\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"System Info\">\r\n        <mat-icon>settings</mat-icon>\r\n        <span>System</span>\r\n      </div>\r\n      <app-system-info *matTabContent></app-system-info>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Apps\">\r\n        <mat-icon>star_border</mat-icon>\r\n        <span>Apps</span>\r\n      </div>\r\n      <app-apps-list *matTabContent></app-apps-list>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Languages\">\r\n        <mat-icon>translate</mat-icon>\r\n        <span>Languages</span>\r\n      </div>\r\n      <app-site-languages *matTabContent></app-site-languages>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Extensions and Features\">\r\n        <mat-icon>tune</mat-icon>\r\n        <span>Extensions / Features</span>\r\n      </div>\r\n      <app-license-info *matTabContent></app-license-info>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, startWith } from 'rxjs/operators';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Component({\r\n  selector: 'app-apps-management-nav',\r\n  templateUrl: './apps-management-nav.component.html',\r\n  styleUrls: ['./apps-management-nav.component.scss'],\r\n})\r\nexport class AppsManagementNavComponent implements OnInit {\r\n  zoneId = this.context.zoneId;\r\n\r\n  private tabs = ['system', 'list', 'languages', 'license']; // tabs order has to match template\r\n  tabIndex$ = this.router.events.pipe(\r\n    filter(event => event instanceof NavigationEnd),\r\n    map(() => this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path)),\r\n    filter(tabIndex => tabIndex >= 0),\r\n    startWith(this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path)),\r\n  );\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AppsManagementNavComponent>,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeTab(event: MatTabChangeEvent) {\r\n    const path = this.tabs[event.index];\r\n    this.router.navigate([path], { relativeTo: this.route });\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\" [ngSwitch]=\"isError\">\r\n  <mat-hint *ngSwitchCase=\"false\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-hint>\r\n\r\n  <mat-error *ngSwitchCase=\"true\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-error>\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: IdFieldParams) {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy() {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { GlobalConfigService } from '../../../../../edit/shared/store/ngrx-data';\r\n\r\n@Directive({ selector: '[appToggleDebug]' })\r\nexport class ToggleDebugDirective {\r\n\r\n  constructor(private globalConfigService: GlobalConfigService) { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    const CTRL_SHIFT_ALT_CLICK = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.shiftKey && event.altKey;\r\n    if (CTRL_SHIFT_ALT_CLICK) {\r\n      this.globalConfigService.toggleDebugEnabled();\r\n      window.getSelection().removeAllRanges();\r\n    }\r\n  }\r\n}\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeHtml' })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"projects_ng-dialogs_src_app_apps-management_apps-management-nav_apps-management-nav_component_ts.12e70b58f65516e4.js"}