{"version":3,"file":"default-projects_eav-ui_src_app_shared_components_field-hint_field-hint_component_ts-projects-4b7e0b.63630e7ffee97033.js","mappings":"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","names":["hasOwnProperty","Object","prototype","_assignValue","assignValue","object","key","value","objValue","call","eq","undefined","baseAssignValue","_copyObject","copyObject","source","props","customizer","isNew","index","length","newValue","_baseKeysIn","baseKeysIn","isObject","nativeKeysIn","result","push","isProto","isPrototype","lodash_es_keysIn","keysIn","isArrayLike","arrayLikeKeys","freeExports","exports","nodeType","freeModule","module","Buffer","root","allocUnsafe","_getSymbolsIn","getOwnPropertySymbols","arrayPush","getSymbols","getPrototype","stubArray","_getAllKeysIn","getAllKeysIn","baseGetAllKeys","getSymbolsIn","_cloneArrayBuffer","cloneArrayBuffer","arrayBuffer","constructor","byteLength","Uint8Array","set","reFlags","symbolProto","Symbol","symbolValueOf","valueOf","_initCloneByTag","initCloneByTag","tag","isDeep","Ctor","cloneDataView","dataView","buffer","byteOffset","cloneTypedArray","typedArray","cloneRegExp","regexp","exec","lastIndex","cloneSymbol","symbol","nodeIsMap","nodeUtil","isMap","lodash_es_isMap","baseUnary","baseIsMap","isObjectLike","getTag","nodeIsSet","isSet","lodash_es_isSet","baseIsSet","argsTag","funcTag","objectTag","cloneableTags","_baseClone","baseClone","bitmask","stack","isFlat","isFull","isArr","isArray","initCloneArray","array","input","copyArray","Array","isFunc","isBuffer","cloneBuffer","slice","copy","initCloneObject","baseCreate","copySymbolsIn","baseAssignIn","copySymbols","baseAssign","keys","Stack","stacked","get","forEach","subValue","add","getAllKeys","arrayEach","lodash_es_cloneDeep","cloneDeep","CLONE_DEEP_FLAG","ClickStopPropagationDirective","this","log","classLog","a","onClick","event","stopPropagation","static","__ngFactoryType__","_angular_core__WEBPACK_IMPORTED_MODULE_1__","FsC","selectors","hostBindings","rf","ctx","i0","$event","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","FieldHintComponent","isError","isShort","toggleIsShort","_angular_core__WEBPACK_IMPORTED_MODULE_0__","VBU","inputs","ngContentSelectors","_c0","decls","vars","consts","template","_r1","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c1","tmp_2_0","MatFormFieldModule","i1","NgClass","NgTemplateOutlet","styles","_defineProperty","func","getNative","_baseAssignValue","defineProperty","configurable","enumerable","writable"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/lodash-es/_assignValue.js","./node_modules/lodash-es/_copyObject.js","./node_modules/lodash-es/_baseKeysIn.js","./node_modules/lodash-es/_nativeKeysIn.js","./node_modules/lodash-es/keysIn.js","./node_modules/lodash-es/_cloneBuffer.js","./node_modules/lodash-es/_getSymbolsIn.js","./node_modules/lodash-es/_getAllKeysIn.js","./node_modules/lodash-es/_initCloneArray.js","./node_modules/lodash-es/_cloneArrayBuffer.js","./node_modules/lodash-es/_cloneRegExp.js","./node_modules/lodash-es/_cloneSymbol.js","./node_modules/lodash-es/_initCloneByTag.js","./node_modules/lodash-es/_cloneDataView.js","./node_modules/lodash-es/_cloneTypedArray.js","./node_modules/lodash-es/isMap.js","./node_modules/lodash-es/_baseIsMap.js","./node_modules/lodash-es/isSet.js","./node_modules/lodash-es/_baseIsSet.js","./node_modules/lodash-es/_baseClone.js","./node_modules/lodash-es/_copyArray.js","./node_modules/lodash-es/_initCloneObject.js","./node_modules/lodash-es/_copySymbolsIn.js","./node_modules/lodash-es/_baseAssignIn.js","./node_modules/lodash-es/_copySymbols.js","./node_modules/lodash-es/_baseAssign.js","./node_modules/lodash-es/cloneDeep.js","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./node_modules/lodash-es/_defineProperty.js","./node_modules/lodash-es/_baseAssignValue.js"],"sourcesContent":["import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","import { Directive, HostListener } from '@angular/core';\r\nimport { classLog } from '../logging';\r\n\r\n@Directive({\r\n  selector: '[appClickStopPropagation]',\r\n})\r\nexport class ClickStopPropagationDirective {\r\n\r\n  log = classLog({ClickStopPropagationDirective});\r\n\r\n  // Log constructor to detect that it was really attached/created\r\n  constructor() {\r\n    this.log.a('constructor');\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    this.log.a('onClick', { event });\r\n    event.stopPropagation();\r\n\r\n    // This should never be added here, as it's often on a link, and the default behavior (link open) should happen\r\n    // event.preventDefault();\r\n  }\r\n\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError()) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n    selector: 'app-field-hint',\r\n    templateUrl: './field-hint.component.html',\r\n    styleUrls: ['./field-hint.component.scss'],\r\n    imports: [\r\n        MatFormFieldModule,\r\n        NgClass,\r\n        NgTemplateOutlet\r\n    ]\r\n})\r\nexport class FieldHintComponent {\r\n  isError = input<boolean>(false);\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,30,31]}