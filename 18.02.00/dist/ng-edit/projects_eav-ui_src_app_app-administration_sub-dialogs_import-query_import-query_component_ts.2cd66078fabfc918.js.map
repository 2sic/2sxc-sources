{"version":3,"file":"projects_eav-ui_src_app_app-administration_sub-dialogs_import-query_import-query_component_ts.2cd66078fabfc918.js","mappings":"kUAQA,MAGaA,EAAiB,kBACjBC,EAAyB,0BACzBC,EAAkB,mBAClBC,EAAiB,kBACjBC,EAAyB,0BAG/B,IAAMC,EAAiB,MAAxB,MAAOA,UAAyBC,IAEpCC,OAAOC,GACL,OAAOC,KAAKC,KAAKC,IAAaF,KAAKG,OAAOC,MAAmB,CAC3DC,OAAQ,CAAEC,MAAON,KAAKM,MAAOP,gBAEjC,CAEAQ,YAAYC,GACV,SAAOC,QAAKC,KAASF,IAAOG,QAC1BC,KAAUC,GACDb,KAAKC,KAAKa,KAAcd,KAAKG,OArBlB,sBAqB6C,CAC7DY,MAAOf,KAAKM,MACZU,cAAeH,MAElB,EACDI,KAAIC,KAEAC,QAASD,EACTE,SAAU,MAKlB,CAEAC,cAAcC,GACZ,OAAOtB,KAAKC,KAAKC,IAAUF,KAAKG,OApCX,qBAoCqC,CACxDE,OAAQ,CAAEkB,GAAID,EAAGE,WAAYlB,MAAON,KAAKM,QAE7C,CAEAmB,OAAOH,GACL,OAAOtB,KAAKC,KAAKwB,OAAgBzB,KAAKG,OAzChB,sBAyC2C,CAC/DE,OAAQ,CAAEC,MAAON,KAAKM,MAAOiB,GAAID,EAAGE,aAExC,yEApCW5B,KAAgB8B,GAAhB9B,EAAgB,0CAAhBA,EAAgB+B,QAAhB/B,EAAgBgC,WAAA,SAAhBhC,CAAiB,sHCNvB,IAAMiC,EAAoB,MAA3B,MAAOA,EAKXC,YAAqCC,GAJrC/B,KAAAgC,WAAaC,KAAYC,MAEjBlC,KAAAmC,oBAAmBC,KAAUxC,MAGnCmC,EAAWM,QAAU,eACrBN,EAAWO,cAAgB,2DAC3BP,EAAWQ,mBAAqB,OAChCR,EAAWS,UAAaC,GAAUzC,KAAKmC,iBAAiB5B,YAAYkC,EAAM,GAC5E,iDAVWZ,GAAoBa,MAKXC,MAAe,oCALxBd,EAAoBe,UAAA,uBAAAC,YAAA,EAAAC,SAAA,CAAAJ,OAAAK,MAAA,EAAAC,KAAA,EAAAC,OAAA,mBAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GCZjCT,MAAA,mCAAwBA,MAAA,aAAAU,EAAApB,2BDUZqB,MAAyBC,cAAA,YAExBzB,CAAoB,oBEZ3B,SAAUnB,EAASF,GACvB,OAAO,IAAI+C,QAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcpD,GACrBkD,EAAOG,OAAS,KACdL,EAASE,EAAOI,OAAkBC,MAAM,KAAK,GAAE,EAEjDL,EAAOM,QAAUC,IACfR,EAAOQ,EAAK,CACd,EAEJ,CAEM,SAAUzC,EAAShB,GACvB,OAAO,IAAI+C,QAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAS,IAAIC,WACnBD,EAAOQ,WAAW1D,GAClBkD,EAAOG,OAAS,KACdL,EAAQE,EAAOI,OAAgB,EAEjCJ,EAAOM,QAAUC,IACfR,EAAOQ,EAAK,CACd,EAEJ","names":["webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","HttpServiceBase","getAll","contentType","this","http","get","apiUrl","webApiEntityList","params","appId","importQuery","file","from","toBase64","pipe","switchMap","fileBase64","post","AppId","ContentBase64","map","success","Success","Messages","clonePipeline","id","Id","toString","delete","__ngFactoryType__","factory","Éµfac","ImportQueryComponent","constructor","dialogData","uploadType","UploadTypes","Query","pipelinesService","transient","title","description","allowedFileTypes","upload$","files","i0","MAT_DIALOG_DATA","selectors","standalone","features","decls","vars","consts","template","rf","ctx","FileUploadDialogComponent","encapsulation","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","split","onerror","error","readAsText"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-query/import-query.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-query/import-query.component.html","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Query } from '../models/query.model';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService extends HttpServiceBase {\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get<Query[]>(this.apiUrl(webApiEntityList), {\r\n      params: { appId: this.appId, contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiQueryImport), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get<null>(this.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { transient } from '../../../../../../core';\r\nimport { FileUploadDialogComponent, FileUploadDialogData, UploadTypes } from '../../../shared/components/file-upload-dialog';\r\nimport { PipelinesService } from '../../services/pipelines.service';\r\n\r\n@Component({\r\n  selector: 'app-import-query',\r\n  templateUrl: './import-query.component.html',\r\n  standalone: true,\r\n  imports: [FileUploadDialogComponent,],\r\n})\r\nexport class ImportQueryComponent {\r\n  uploadType = UploadTypes.Query;\r\n\r\n  private pipelinesService = transient(PipelinesService);\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) dialogData: FileUploadDialogData) {\r\n    dialogData.title ??= `Import Query`;\r\n    dialogData.description ??= `Select a Query file (json) from your computer to import.`;\r\n    dialogData.allowedFileTypes ??= 'json';\r\n    dialogData.upload$ ??= (files) => this.pipelinesService.importQuery(files[0]);\r\n  }\r\n\r\n}\r\n","<app-file-upload-dialog [uploadType]=\"uploadType\"></app-file-upload-dialog>","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n"],"x_google_ignoreList":[]}