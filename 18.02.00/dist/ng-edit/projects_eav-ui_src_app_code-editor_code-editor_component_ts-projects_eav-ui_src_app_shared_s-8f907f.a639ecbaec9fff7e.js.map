{"version":3,"file":"projects_eav-ui_src_app_code-editor_code-editor_component_ts-projects_eav-ui_src_app_shared_s-8f907f.a639ecbaec9fff7e.js","mappings":"8eAEEA,MAAA,SAAKA,MAAA,GAAwFA,QAC7FA,MAAA,8BADKA,cAAA,IAAAC,EAAAC,aAAAC,SAAA,kCAAAF,EAAAC,aAAAE,SAAA,+BAOHJ,MAAA,yBAAAA,MAAA,qBAAAC,EAAAC,aAAAG,QAAA,qCAIAL,MAAA,4FANFA,MAAA,SACEA,MAAA,EAAAM,EAAA,KAGAN,MAAA,GACAA,MAAA,EAAAO,EAAA,KAGAP,MAAA,WAAIA,MAAA,SAA2DA,MAAA,UAAIA,QAAIA,MAAA,QACzEA,8BAREA,cAAAC,EAAAC,aAAAG,QAAA,MAGAL,cAAA,cAAAC,EAAAC,aAAAM,cAAA,uBAAAP,EAAAC,aAAAC,SAAA,OACAH,cAAAC,EAAAC,aAAAG,SAAA,8CAUFL,MAAA,cAAmCA,MAAA,mBAAAA,MAAAS,GAAA,MAAAR,EAAAD,QAAA,OAAAA,MAASC,EAAAS,iBAAgB,GAC1DV,MAAA,6BACFA,SCZK,IAAMW,GAA+B,MAAtC,MAAOA,EACXC,YACUC,EAC2BX,GAD3BY,KAAAD,WAC2BC,KAAAZ,cACjC,CAEJQ,iBACEI,KAAKZ,aAAaQ,gBAAiB,EACnCI,KAAKD,SAASE,mBAChB,iDATWJ,GAA+BX,MAAAgB,MAAAhB,MAGhCiB,MAAkB,oCAHjBN,EAA+BO,UAAA,oCAAAC,YAAA,EAAAC,SAAA,CAAApB,OAAAqB,MAAA,EAAAC,KAAA,EAAAC,OAAA,+KAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDZ5CzB,MAAA,WAMEA,MALA,EAAA2B,EAAA,IAKA3B,CAL6B,EAAA4B,EAAA,WAiB/B5B,QAEAA,MAAA,WACEA,MAAA,EAAA6B,EAAA,gBAKF7B,eAzBEA,cAAA0B,EAAAxB,aAAAE,SAAA,MAKAJ,cAAA0B,EAAAxB,aAAAM,cAAA,MAeAR,MAAA,GAAAA,MAAA0B,EAAAxB,aAAAE,SAAA,sBCXU0B,KAAeC,MAAAC,OAAA,iNAEdrB,CAA+B,KCArC,MAAMsB,EAAY,CACvBC,UAAW,YACXC,SAAU,YCRL,IAAMC,GAAiB,MAAxB,MAAOA,EACXC,UAAUC,GACR,GAAW,MAAPA,EAEJ,OAAIC,MAAMC,QAAQF,GAAeA,EAE1BG,OAAOC,OAAOJ,EACvB,iDAPWF,EAAiB,0DAAjBA,EAAiBO,MAAA,EAAAxB,YAAA,YAAjBiB,CAAiB,4FC+BRpC,MAAA,gBAAiDA,MAAA,mBAAAA,MAAA4C,GAAA,MAAAC,EAAA7C,QAAA8C,UAAAC,EAAA/C,MAAA,UAAAA,MAAS+C,EAAAC,WAAAH,EAAAI,KAAuB,GAC/EjD,MAAA,GACFA,qDADEA,cAAA,IAAA+C,EAAAG,aAAAC,SAAAN,EAAAI,KAAA,yDAYEjD,MADF,QACEA,CADG,UACkCA,MAAA,GACvCA,oCADKA,cAAA,OAAAoD,EAAAC,IAAArD,OAAkCA,cAAAoD,EAAAE,iCAJ3CtD,MAAA,WACEA,MAAA,gCACAA,MAAA,EAAAuD,GAAA,eAAAvD,OAKFA,wCANoBA,cAAA,YAAAA,MAAA,IAAA6C,EAAAW,MAAAxD,OAClBA,MAAA,GAAAA,MAAA6C,EAAAY,kCAuBUzD,MADF,QACEA,CADG,UACkCA,MAAA,GACvCA,oCADKA,cAAA,OAAA0D,EAAAL,IAAArD,OAAkCA,cAAA0D,EAAAJ,iCAJ3CtD,MAAA,YACEA,MAAA,gCACAA,MAAA,EAAA2D,GAAA,eAAA3D,OAKFA,wCANoBA,cAAA,YAAAA,MAAA,IAAA4D,EAAAJ,MAAAxD,OAClBA,MAAA,GAAAA,MAAA4D,EAAAH,iDAVFzD,MAFJ,QAEIA,CAFC,UAEDA,CADyB,YACsDA,MAAA,yBAAA4D,EAAA5D,MAAA6D,GAAAf,UAAAC,EAAA/C,MAAA,UAAAA,MAAS+C,EAAAe,WAAAF,EAAAG,MAAqB,GAC3G/D,MAAA,GACFA,QACAA,MAAA,gBAAyEA,MAAA,yBAAA4D,EAAA5D,MAAA6D,GAAAf,UAAAC,EAAA/C,MAAA,UAAAA,MAAS+C,EAAAiB,WAAAJ,EAAAX,KAAoB,GACnGjD,MAAA,UAELA,UACAA,MAAA,EAAAiE,GAAA,cAUFjE,+CAjB0CA,MAAA,GAAAA,MAAA,QAAA4D,EAAAG,MACpC/D,cAAA,IAAA4D,EAAAM,MAAA,KAMJlE,MAAA,GAAAA,MAAA+C,EAAAoB,aAAAhB,SAAAS,EAAAX,KAAA,iCAVJjD,MAAA,EAAAoE,GAAA,eAAApE,4EAAA,IAAA6C,EAAAwB,iDAvBArE,MAFJ,UAEIA,CAFiB,UAEjBA,CADyB,WAC+CA,MAAA,yBAAA6C,EAAA7C,MAAAsE,GAAAxB,UAAAC,EAAA/C,MAAA,UAAAA,MAAS+C,EAAAe,WAAAjB,EAAAkB,MAAwB,GACvG/D,MAAA,GACFA,QACAA,MAAA,EAAAuE,GAAA,kBAKAvE,MAAA,gBAAyEA,MAAA,yBAAA6C,EAAA7C,MAAAsE,GAAAxB,UAAAC,EAAA/C,MAAA,UAAAA,MAAS+C,EAAAiB,WAAAnB,EAAAI,KAAuB,GACtGjD,MAAA,UAELA,UAWAA,MAVA,EAAAwE,GAAA,YAUAxE,CAV0C,EAAAyE,GAAA,KAkC5CzE,+CA9CgCA,MAAA,GAAAA,MAAA,QAAA6C,EAAAkB,MAC1B/D,cAAA,IAAA6C,EAAAqB,MAAA,KAEFlE,cAAA6C,EAAAwB,KAAA,MASFrE,MAAA,GAAAA,MAAA+C,EAAAoB,aAAAhB,SAAAN,EAAAI,KAAA,MAUAjD,cAAA+C,EAAAG,aAAAC,SAAAN,EAAAI,KAAA,iCAzBJjD,MAAA,EAAA0E,GAAA,YAAA1E,4EAAA,IAAA2E,EAAAC,kDAZF5E,MADF,QACEA,CADG,WAKDA,MAAA,yBAAA2E,EAAA3E,MAAA6E,GAAA/B,UAAAC,EAAA/C,MAAA,UAAAA,MAAS+C,EAAA+B,aAAAH,EAAA1B,KAAwB,GAEjCjD,MAAA,cACEA,MAAA,GACFA,QACAA,MAAA,UAAMA,MAAA,wBACRA,UACAA,MAAA,EAAA+E,GAAA,KAqDF/E,mEA9DIA,cAAA,yCAAAgF,EAAA/B,IAAA,IAAA0B,EAAA1B,IAAA,SAKEjD,MAAA,GAAAA,MAAA,IAAA+C,EAAAkC,eAAA9B,SAAAwB,EAAA1B,KAAA,kDAEIjD,MAAA,GAAAA,YAAA,4BAAAgF,EAAA/B,IAAA,IAAA0B,EAAA1B,IAAA,WAERjD,MAAA,GAAAA,MAAA+C,EAAAkC,eAAA9B,SAAAwB,EAAA1B,KAAA,iCAbJjD,MAAA,EAAAkF,GAAA,eAAAlF,uEAAA,IAAAgF,EAAAJ,kDAZF5E,MADF,QACEA,CADG,WAKDA,MAAA,yBAAAgF,EAAAhF,MAAAmF,GAAArC,UAAAC,EAAA/C,QAAA,OAAAA,MAAS+C,EAAAqC,cAAAJ,EAAA/B,KAA0B,GAEnCjD,MAAA,cACEA,MAAA,GACFA,QACAA,MAAA,UAAMA,MAAA,wBACRA,UACAA,MAAA,EAAAqF,GAAA,KAsEFrF,8CA/EIA,cAAA,yCAAAgF,EAAA/B,IAAA,SAKEjD,MAAA,GAAAA,MAAA,IAAA+C,EAAAuC,gBAAAnC,SAAA6B,EAAA/B,KAAA,kDAEIjD,MAAA,GAAAA,YAAA,4BAAAgF,EAAA/B,IAAA,WAERjD,MAAA,GAAAA,MAAA+C,EAAAuC,gBAAAnC,SAAA6B,EAAA/B,KAAA,OCaC,IAAMsC,GAAqB,MAA5B,MAAOA,EAQX3E,cANUE,KAAA0E,cAAsC,IAAIC,MACpD3E,KAAAwE,gBAA4B,GAC5BxE,KAAAmE,eAA2B,GAC3BnE,KAAAqD,aAAyB,GACzBrD,KAAAoC,aAAyB,EAET,CAEhBY,WAAW4B,GACT5E,KAAK0E,cAAcG,KAAKD,EAC1B,CAEAN,cAAcnC,GACZ2C,IAAaC,cAAc5C,EAAKnC,KAAKwE,gBACvC,CAEAR,aAAa7B,GACX2C,IAAaC,cAAc5C,EAAKnC,KAAKmE,eACvC,CAEAjB,WAAWf,GACT2C,IAAaC,cAAc5C,EAAKnC,KAAKqD,aACvC,CAEAnB,WAAWC,GACT2C,IAAaC,cAAc5C,EAAKnC,KAAKoC,aACvC,iDA5BWqC,EAAqB,oCAArBA,EAAqBrE,UAAA,wBAAA4E,OAAA,CAAAC,SAAA,YAAAC,QAAA,CAAAR,cAAA,iBAAArE,YAAA,EAAAC,SAAA,CAAApB,OAAAqB,MAAA,EAAAC,KAAA,EAAAC,OAAA,2rBAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ID3BlCzB,MAAA,WACEA,MAAA,EAAAiG,GAAA,eAAAjG,2BAqFFA,eArFEA,oBAAA,IAAA0B,EAAAqE,2BCgBEG,KAAalF,KACbmF,MAAepE,MACfqE,KACAC,KAAeC,MACflE,GACAmE,IACAC,IACAC,MAAYzE,OAAA,06CAGHuD,CAAqB,KCFlC,SAASmB,GAAcC,GACrB,IAAKA,EAAa,MAAO,GAEzB,MAAMC,EAAmB,GACzB,UAAWpF,KAAYmF,EAAW,CAChC,IAAIE,EAAqBD,EACzB,MAAME,EAAQtF,EAASuF,KAAKC,MAAM,KAC5BC,EAAOH,EAAMA,EAAMI,OAAS,GAClC,IAAIC,EAAe,GACnB,QAASC,EAAI,EAAGA,EAAIN,EAAMI,OAAQE,IAAK,CACrC,MAAMC,EAAOP,EAAMM,GACnBD,GAAgBC,EAAI,IAAIC,IAASA,EACjC,MAAMC,EAAWT,EAAOU,KAAKC,GAAQA,EAAKlE,OAAS+D,GACnD,GAAIC,EACFT,EAASS,EAASG,aACb,CACL,MAAMD,EAAiB,CACrBE,MAAON,EACP9D,KAAM+D,EACNF,eACAQ,SAAUnG,EAASoG,OACnBC,SAAUR,IAASJ,KACfI,IAASJ,GAAQ,CAAEQ,SAAU,KAEnCZ,EAAOiB,KAAKN,GACZX,EAASW,EAAKC,QAChB,CACF,CACF,CAEA,OAAOb,CACT,CCjDO,IAAMmB,GAAa,MAApB,MAAOA,EAEX1F,UAAU2F,GACR,OAAa,MAATA,GAEJA,EAAMC,KAAK,CAACC,EAAOC,IACbD,EAAML,SAAWM,EAAMN,SAClB,EACEK,EAAML,SAAWM,EAAMN,UACzB,EAEA,GAGJG,CACT,iDAfWD,EAAa,sDAAbA,EAAapF,MAAA,EAAAxB,YAAA,YAAb4G,CAAa,KCDbK,GAAgB,MAAvB,MAAOA,EAEXxH,YAAoByH,GAAAvH,KAAAuH,WAA2B,CAE/ChG,UAAUqF,EAAeG,GACvB,IAAIS,EACJ,OACEA,EADET,EACgB,EAARH,EAEW,IAAVA,EAAe,EAAa,EAARA,EAAY,GAEtC5G,KAAKuH,UAAUE,yBAAyB,iBAAiBD,OAClE,iDAZWF,GAAgBpI,MAAAgB,KAAA,6DAAhBoH,EAAgBzF,MAAA,EAAAxB,YAAA,YAAhBiH,CAAgB,iHCHzBpI,MAAA,4BAAAA,MAAA,EAAAwI,GAAA,wEAA+CxI,MAAhC,mBAAAyI,EAAgCzI,CAAA,0BAAAA,MAAA,EAAA0I,GAAAC,8CAM7C3I,MAAA,mCAEEA,MAAA,mBAAAA,MAAA6E,GAAA,MAAA+D,EAAA5I,QAAAwH,KAAAqB,EAAA7I,QAAA,OAAAA,MAAS6I,EAAAC,aAAAF,EAAAzB,aAAAyB,EAAAjB,UAA8C,GACvD3H,MAAA,GACFA,+CAJkBA,YAAA,IAAA4I,EAAAlB,MAAAkB,EAAAf,WACqD7H,MAArE,UAAAA,MAAA,EAAA+I,GAAAF,EAAAG,UAAAJ,EAAAzB,aAAAyB,EAAAjB,WAAqE3H,CAAD,QAAA4I,EAAAtF,MAEpEtD,MAAA,GAAAA,MAAA,IAAA4I,EAAAtF,KAAA,4BAqBAtD,MAAA,4BAAAA,MAAA,EAAAiJ,GAAA,yEAA+CjJ,MAAhC,mBAAAyI,EAAgCzI,CAAA,0BAAAA,MAAA,EAAA0I,GAAAQ,+BAD/ClJ,MAAA,EAAAmJ,GAAA,wBAAAnJ,oEAAA,IAAA4I,EAAAnB,qDAdAzH,MADF,QACEA,CADG,mCAEsDA,MAAA,mBAAAA,MAAAoJ,GAAA,MAAAR,EAAA5I,QAAAwH,KAAAqB,EAAA7I,QAAA,OAAAA,MAAS6I,EAAAQ,WAAAT,EAAAzB,aAAAyB,EAAAjB,UAA4C,GAE1G3H,MADF,WACEA,CADgE,cACrDA,MAAA,GAEXA,QACAA,MAAA,UAAMA,MAAA,GACRA,UACAA,MAAA,YACEA,MAAA,mBAAAA,MAAAoJ,GAAA,MAAAR,EAAA5I,QAAAwH,KAAAqB,EAAA7I,QAAA,OAAAA,MAAS6I,EAAAS,QAAAV,EAAAzB,aAAAyB,EAAAjB,UAAyC,GAClD3H,MAAA,cAAUA,MAAA,UAEdA,YACAA,MAAA,GAAAuJ,GAAA,KAKFvJ,+CAjBIA,oBAAA,IAAA4I,EAAAlB,MAAA,EAAAkB,EAAAf,WAD+B7H,MAAA,UAAAA,MAAA,GAAAwJ,GAAAZ,EAAAlB,MAAA,IAEN1H,MAAA,GAAAA,MAAA,QAAA4I,EAAAtF,MACZtD,MAAA,GAAAA,MAAA,IAAA6I,EAAAG,UAAAJ,EAAAzB,aAAAyB,EAAAjB,UAAA,kDAGL3H,MAAA,GAAAA,MAAA4I,EAAAtF,MAOVtD,MAAA,GAAAA,MAAA6I,EAAAG,UAAAJ,EAAAzB,aAAAyB,EAAAjB,UAAA,iCAfF3H,MARA,EAAAyJ,GAAA,aAQAzJ,CARsB,EAAA0J,GAAA,iCAAtB1J,MAAA4I,EAAAf,UAAA,KAQA7H,cAAA4I,EAAAf,SAAA,OCiBC,IAAM8B,GAAsB,MAA7B,MAAOA,EASX/I,cANUE,KAAA8I,SAAkC,IAAInE,MACtC3E,KAAA+I,eAAqD,IAAIpE,MAEnE3E,KAAAgJ,gBAA4B,GAC5BhJ,KAAAiJ,mBAA+B,EAEf,CAEhBC,YAAYC,GAIV,GAHyB,MAArBA,EAAQtD,YACV7F,KAAK8F,KJ3CL,SAAUsD,GAAuBvD,GAmBrC,MAlByB,CACvB,CACEe,OAAO,EACPpE,KAAM,YACN6D,aKTuB,GLUvBQ,UAAU,EACVE,UAAU,EACVJ,SAAUf,GAAcC,EAAUwD,OAAOC,IAAMA,EAAExC,UAEnD,CACEF,OAAO,EACPpE,KAAM,mBACN6D,aKjBuB,GLkBvBQ,UAAU,EACVE,UAAU,EACVJ,SAAUf,GAAcC,EAAUwD,OAAOC,GAAKA,EAAExC,UAItD,CIuBkBsC,CAAuBpJ,KAAK6F,YAEtB,MAAhBsD,EAAQI,KAAc,CACxB,MAAMC,EAA2BL,EAAQI,MAAME,cAC3CD,GACFxJ,KAAKuI,WAAWiB,EAAaE,SAAUF,EAAaG,UAElD3J,KAAKuJ,MACPvJ,KAAK4J,eAAe5J,KAAKuJ,KAAKG,SAAU1J,KAAKuJ,KAAKI,SAEtD,CACF,CAEAzB,UAAU3B,EAAcM,GAEtB,OADqBA,EAAW7G,KAAKiJ,mBAAqBjJ,KAAKgJ,iBAC3C3G,SAASkE,EAC/B,CAEAyB,aAAazB,EAAcM,GAEzB7G,KAAK8I,SAASjE,KADW,CAAE1C,IAAKoE,EAAMsD,OAAQhD,GAEhD,CAEA0B,WAAWhC,EAAcM,GAEvB/B,IAAaC,cAAcwB,EADNM,EAAW7G,KAAKiJ,mBAAqBjJ,KAAKgJ,gBAEjE,CAEAR,QAAQsB,EAAiBjD,GAEvB7G,KAAK+I,eAAelE,KADiB,CAAEiF,SAAQjD,YAEjD,CAEQ+C,eAAeG,EAAclD,GACnC,GAAY,MAARkD,EAAc,OAClB,MAAMC,EAAenD,EAAW7G,KAAKiJ,mBAAqBjJ,KAAKgJ,gBAC/D,GAAIgB,EAAa3H,SAAS0H,GAAO,OAEjC,MAAM/D,EAAQ,CCrFW,MDqFQ+D,EAAK7D,MAAM,MAC5C,IAAIG,EAAe,GACnB,UAAWE,KAAQP,EACjBK,EAAgBA,EAAsB,GAAGA,KAAgBE,IAA1BA,GAC3ByD,EAAa3H,SAASgE,IAC1BrG,KAAKuI,WAAWlC,EAAcQ,EAElC,iDA1DWgC,EAAsB,oCAAtBA,EAAsBzI,UAAA,yBAAA4E,OAAA,CAAAuE,KAAA,OAAA1D,UAAA,aAAAX,QAAA,CAAA4D,SAAA,WAAAC,eAAA,kBAAA1I,YAAA,EAAAC,SAAA,CAAApB,aAAAqB,MAAA,GAAAC,KAAA,EAAAC,OAAA,soBAAAC,SAAA,SAAAC,EAAAC,GAAA,KAAAD,EAAA,iBDhCjCzB,MAFF,UAEEA,CAFwE,SAGtEA,MAAA,EAAA+K,GAAA,wBAAA/K,4BAIAA,MAAA,EAAAgL,GAAA,yBAAAhL,OAkCFA,QAIIA,MAFJ,UAEIA,CAF+B,aAE/BA,CAD2F,cACjFA,MAAA,UACZA,UAEEA,MADF,qBACEA,CADwB,eACFA,MAAA,mBAAAA,aAAAmF,GAAAnF,MAAS0B,EAAA4H,QAAQ,IAAI,GAAM,GAC/CtJ,MAAA,WAAMA,MAAA,UACRA,UACAA,MAAA,eAAsBA,MAAA,mBAAAA,aAAAmF,GAAAnF,MAAS0B,EAAA4H,QAAQ,IAAI,GAAK,GAC9CtJ,MAAA,WAAMA,MAAA,sBAIdA,0CArDIA,MAAA,GAAAA,YAAA,IAAA0B,EAAAkF,OAyCwB5G,MAAA,GAAAA,MAAA,oBAAAiL,mBCrBxBC,KACAC,KACAjF,KAAalF,KACbc,KAAeC,KACfqJ,KAAa9E,eACb8B,GACAL,GACAxB,IACAC,KAAcxE,OAAA,8vCAGL2H,CAAsB,+DEjB5B,IAAM0B,GAAgB,MAAvB,MAAOA,UAAwBC,KAEnC1K,YAAqB2K,GACnBC,QADmB1K,KAAAyK,WAErB,CAEAE,YAAYC,GACV,OAAO5K,KAAK6K,KAAKC,IAAe9K,KAAK+K,OAVf,yBAUmC,CACvDC,OAAQ,CACNJ,aAGN,CAEAK,YAAY1B,GACV,OAAOvJ,KAAK6K,KAAKC,IAA6B,iCAAiCI,QAC7EC,MAAIC,IACF,MAAMC,EAAWrL,KAAKsL,gCAAgCF,EAAInG,SAAUsE,GAC9DgC,EAAwBvL,KAAKwL,yBAAyBH,GACtDI,EAAOzL,KAAK0L,uBAAuBH,EAAsBI,cAAepC,EAAMgC,EAAsBK,mBAK1G,MAJyD,CACvDC,KAAMN,EAAsBI,cAC5BF,UAKR,CAGQH,gCAAgCO,EAAiBtC,GACvD,MAAMuC,EAAc,CAAC,IAAK,KACpBC,EAAkBC,GAAmBA,EAAEC,KAAKC,QAAQ,UAAW,EAAM,EAAI,EAEzEC,EAAqB,GAC3B,UAAWC,KAAOP,EAAM,CACtB,MAAMQ,EAAeP,EAAYI,QAAQE,EAAIE,IAAI,MAC5B,IAAjBD,GAAwBA,IAAiBN,EAAexC,MAEtD8C,IAAiBN,EAAexC,KAClC6C,EAAIE,IAAMF,EAAIE,IAAIC,UAAU,IAE9BJ,EAAQnF,KAAKoF,GAEjB,CACA,OAAOD,CACT,CAEQX,yBAAyBK,GAC/B,MAAMF,EAA2B,GAC3Ba,EAA4B,GAElC,UAAWJ,KAAOP,EACqB,OAAfO,EAAIE,IAAI,IAI5BF,EAAIE,IAAMF,EAAIE,IAAIC,UAAU,GAC5BC,EAAexF,KAAKoF,IAHpBT,EAAc3E,KAAKoF,GAWvB,MAJ+F,CAC7FT,gBACAC,kBAHwB5L,KAAKyM,yBAAyBD,GAM1D,CAEQC,yBAAyBZ,GAC/B,MAAMa,EAA2C,GACjD,UAAWN,KAAOP,OACkBc,IAA9BD,EAAcN,EAAIQ,UACpBF,EAAcN,EAAIQ,QAAU,IAE9BF,EAAcN,EAAIQ,QAAQ5F,KAAKoF,GAEjC,OAAOM,CACT,CAEQhB,uBACNC,EACAkB,EACAjB,GAEA,MAAMH,EAAOzL,KAAK8M,SAASnB,GAG3BF,SAAKsB,QAAUpL,OAAOqL,OAAO,GAAIvB,EAAKsB,QAAS,CAAEE,OAAQ,GAAIC,mBAAoB,KAC7EL,EAAsBM,aACxBnN,KAAKoN,gBACH3B,EAAKsB,QAAQE,OACbJ,EAAsBM,YACtB,UACAN,EACAjB,GAGAiB,EAAsBQ,yBACxBrN,KAAKoN,gBACH3B,EAAKsB,QAAQG,mBACbL,EAAsBQ,wBACtB,uBACAR,EACAjB,GAIAiB,EAAsBS,SACxB7B,EAAK8B,KAAO5L,OAAOqL,OAAO,GAAIvB,EAAK8B,KAAM,CAAEN,OAAQ,GAAIC,mBAAoB,KACvEL,EAAsBW,UACxBxN,KAAKoN,gBACH3B,EAAK8B,KAAKN,OACVJ,EAAsBW,SACtB,SACAX,EACAjB,GAGAiB,EAAsBY,sBACxBzN,KAAKoN,gBACH3B,EAAK8B,KAAKL,mBACVL,EAAsBY,qBACtB,sBACAZ,EACAjB,WAIGH,EAAK8B,KAIVV,EAAsBa,SACxBjC,EAAKkC,IAAIC,UAAY,GACrBnC,EAAKkC,IAAIE,SAAW,GACpB7N,KAAKoN,gBAAgB3B,EAAKkC,IAAIC,UAAW,gBAAiB,gBAAiBf,EAAuBjB,GAClG5L,KAAKoN,gBAAgB3B,EAAKkC,IAAIE,SAAU,eAAgB,eAAgBhB,EAAuBjB,IAG1FH,CACT,CAGQqB,SAASjB,GACf,MAAM/F,EAAqB,GAC3B,UAAWgI,KAAKjC,EAAM,MACAc,IAAhB7G,EAAKgI,EAAExB,OACTxG,EAAKgI,EAAExB,KAAO,SAEcK,IAA1B7G,EAAKgI,EAAExB,KAAKwB,EAAElB,UAChB9G,EAAKgI,EAAExB,KAAKwB,EAAElB,QAAU,IAE1B,MAAMmB,EAA0B,CAC9B5L,IAAK2L,EAAEtL,KACPY,MAAOpD,KAAKoD,MAAM0K,EAAExB,IAAKwB,EAAElB,OAAQkB,EAAEtL,MACrCS,KAAM6K,EAAEE,QACRtL,KAAMoL,EAAEpL,MAAQ1C,KAAK0C,KAAKoL,EAAExB,IAAKwB,EAAElB,OAAQkB,EAAEtL,MAC7CG,MAAO3C,KAAKiO,UAAUH,EAAEnL,QAGzBmD,EAAKgI,EAAExB,KAAKwB,EAAElB,QAAyB5F,KAAK+G,EAC/C,CACA,OAAOjI,CACT,CAEQ1C,MAAMkJ,EAAaM,EAAgB3J,GACzC,MAAMd,EAAMnC,KAAKkO,WAAW5B,EAAKM,EAAQ3J,EAAM,QAE/C,IAAIkL,EAAiBnO,KAAKyK,UAAU2D,QAAQjM,GAC5C,OAAIgM,IAAWhM,IACbgM,EAASlL,GAEJkL,CACT,CAEQD,WAAW5B,EAAaM,EAAgB3J,EAAcoL,GAC5D,MAAO,wBAA+B/B,EAAM,IAAMM,EAAS,IAAM3J,EAAOoL,CAC1E,CAEQ3L,KAAK4J,EAAaM,EAAgB3J,GACxC,MAAMd,EAAMnC,KAAKkO,WAAW5B,EAAKM,EAAQ3J,EAAM,SAE/C,IAAIkL,EAAiBnO,KAAKyK,UAAU2D,QAAQjM,GAC5C,OAAIgM,IAAWhM,IACbgM,EAAS,IAEJA,CACT,CAEQF,UAAUK,GAChB,IAAKA,EAAe,OAAO,KAE3B,MAAM3L,EAA0B,GAC1B4L,EAAQD,EAAYpI,MAAM,MAChC,UAAWsI,KAAKD,EAAO,CACrB,MAAME,EAAOD,EAAEtI,MAAM,KACrB,GAAoB,IAAhBuI,EAAKrI,OAAc,CACrB,MAAMsI,EAAuB,CAC3BlM,KAAMiM,EAAK,GAAGE,OACdpM,IAAKkM,EAAK,GAAGE,OAAS,IAAMF,EAAK,GAAGE,QAEtChM,EAAMqE,KAAK0H,EACb,CACF,CACA,OAAqB,IAAjB/L,EAAMyD,OAAuB,KAC1BzD,CACT,CAGQyK,gBACNwB,EACAC,EACAC,EACAjC,EACAjB,GAEA5L,KAAK+O,UAAUlC,EAAsBmC,MAAOH,GAAMI,UAAUC,IAE1D,UAAWC,KAASD,EAAQ,CAC1B,MAAME,EAAYD,EAAME,WACxBT,EAAOQ,GAAa,CAClBjN,IAAKiN,EACLhM,MAAOgM,EACPnM,KAAMjD,KAAKsP,iBAAiBR,EAAQM,EAAWvC,GAC/CnK,KAAMyM,EAAMI,SAASC,OAAOC,OAAS,KAAON,EAAMlD,KAAKyD,cAAgB,MAGzE,MAAMC,KAAeC,MAAUhB,EAAOQ,IACtCpP,KAAK6P,eAAejB,EAAQE,EAAQM,EAAWD,EAAMW,UAAWH,EAAc/D,EAChF,CAEA,GAAIsD,EAAO9I,OAAQ,CACjB,MAAM2J,EAAM,CAAC,WAAY,cAAe,aAAc,aAAc,cAAe,YAEnF,QAASzJ,EAAI,EAAGA,EAAIyJ,EAAI3J,OAAQE,IAC9BsI,EAAOmB,EAAIzJ,IAAM,CACfnE,IAAK4N,EAAIzJ,GACTlD,MAAO2M,EAAIzJ,GACXrD,KAAMjD,KAAKsP,iBAAiBR,EAAQiB,EAAIzJ,GAAIuG,GAC5CnK,KAAM1C,KAAKyK,UAAU2D,QAAQ,uCAAyC2B,EAAIzJ,GAAK,SAGrF,GAEJ,CAEQgJ,iBAAiB9N,EAAawO,EAAanD,GACjD,OAAQA,EAAsBZ,KAAKC,QAAQ,UAAW,EAClD,IAAM1K,EAAM,IAAMwO,EAClB,IAAMxO,EAAIyO,QAAQ,IAAK,KAAO,IAAMD,EAAM,GAChD,CAEQjB,UAAUmB,EAAeC,GAC/B,OAAOnQ,KAAK6K,KAAKC,IAAa9K,KAAK+K,OAAOqF,MAAkB,CAC1DpF,OAAQ,CAAEqF,MAAOH,EAAMI,WAAYH,gBAClCjF,QACDC,MAAI+D,IACFA,EAASA,EAAO7F,OAAO8F,GAASA,EAAMlD,OAASsE,KAAgBC,OAC/D,UAAWC,KAAOvB,EAAQ,CACxB,IAAKuB,EAAIlB,SAAU,SACnB,MAAMmB,EAAKD,EAAIlB,SAIfmB,EAAGlB,OAAS,IAHEkB,EAAGC,OACFD,EAAGD,EAAIxE,SACNyE,EAAGD,EAAIX,WAEzB,CACA,OAAOZ,IAGb,CAEQW,eACNjB,EACAE,EACAM,EACAwB,EACAjB,EACA/D,GAEA,IAAIiF,EAAiBjF,EAAkBgF,GACvC,GAAIA,EAAU1E,QAAQ,KAAM,CAC1B,MAAM4E,EAAYF,EAAUrE,UAAU,EAAGqE,EAAU1E,QAAQ,MAC3D,GAAI4E,EAAW,CACb,MAAMC,EAAYnF,EAAkBkF,GAChCC,IACFF,EAAiBA,EAAiBA,EAAeG,OAAOD,GAAaA,EAEzE,CACF,CACA,IAAKF,EAAgB,YAEUlE,IAA3BiC,EAAOQ,GAAW7L,OACpBqL,EAAOQ,GAAW7L,KAAO,IAE3B,MAAM0N,EAAarC,EAAOQ,GAAW7L,KAErC,QAAS2N,EAAI,EAAGA,EAAIL,EAAezK,OAAQ8K,IACzC,IACED,EAAW7B,EAAY,IAAMyB,EAAeK,GAAG1O,MAAQb,OAAOqL,OAAO,GAAI2C,EAAc,CACrFxN,IAAKiN,EAAY,MAAQyB,EAAeK,GAAG1O,KAC3CY,MAAOyN,EAAeK,GAAG1O,KACzBS,KAAMjD,KAAKmR,uBAAuBN,EAAeK,GAAGlD,QAASc,EAAQM,GACrEgC,UAAU,GAEd,SAAY,CAEhB,CAEQD,uBAAuBlO,EAAcoO,EAAiBC,GAC5DrO,OAAOA,EACJgN,QAAQ,0BAA2B,KAAOoB,EAAU,MACpDpB,QAAQ,2BAA4B,KAAOqB,EAAY,KAE5D,iDA1TW/G,GAAerL,MAAAgB,OAAA,sCAAfqK,EAAegH,QAAfhH,EAAeiH,WAAA,SAAfjH,CAAgB,+JCWnBrL,MAAA,iBAA8BA,MAAA,WAAKA,gCAMnCA,MAAA,iBAAoEA,MAAA,YAAMA,+BAG1EA,MAAA,6DAhBJA,MAAA,YAIWA,MAAA,yBAAAuS,EAAAvS,MAAAmF,GAAArC,UAAAC,EAAA/C,MAAA,UAAAA,MAAS+C,EAAA6G,SAAA2I,EAAAC,SAAqB,GACvCxS,MAAA,YACEA,MAAA,EAAAyS,GAAA,mBAGAzS,MAAA,aAAwBA,MAAA,GAC1BA,UACAA,MAAA,YAIEA,MAHA,EAAA0S,GAAA,kBAGA1S,CAHsB,EAAA2S,GAAA,sBAOtB3S,MAAA,iBACEA,MAAA,yBAAAuS,EAAAvS,MAAAmF,GAAArC,UAAAC,EAAA/C,MAAA,UAAAA,MAAS+C,EAAA6P,YAAAL,EAAAC,SAAwB,GAAExS,MAAA,WAEzCA,wCAtBiBA,MAAA,UAAAA,MAAA,EAAAwJ,GAAA+I,EAAAM,SAAAN,EAAAO,WAAAP,EAAAQ,YAKkB/S,cAAA,QAAAuS,EAAArO,OAC/BlE,cAAAuS,EAAAC,QAAA7H,OAAA,MAGwB3K,MAAA,GAAAA,MAAAuS,EAAArO,OAGxBlE,MAAA,GAAAA,MAAAuS,EAAAO,WAAA,MAGA9S,cAAAuS,EAAAQ,UAAA,iCAjBN/S,MAAA,WACEA,MAAA,EAAAgT,GAAA,eAAAhT,OAyBFA,8BAzBEA,cAAA+C,EAAAkQ,kDA4BFjT,MAAA,0BACEA,MAAA,wBAAAkT,GAAA,IAAAC,EAAAnT,MAAA6E,GAAA,MAAA9B,EAAA/C,QAAA,OAAAA,MAAgB+C,EAAAqQ,YAAAF,EAA4B,OAA5BC,EAAoBpQ,EAAAsQ,UAAQ,KAAAF,EAAAX,SAAU,GAExDxS,4CADsEA,MAFnD,kBAAAsT,EAAAvQ,EAAAsQ,UAAA,KAAAC,EAAAjJ,KAAAG,SAEmDxK,CAFf,eAAAmT,EAAApQ,EAAAsQ,UAAA,KAAAF,EAAA9I,KAAAkJ,KAEevT,CAFe,UAAA+C,EAAAyQ,cAEfxT,CADa,kBAAAyT,EAAA1Q,EAAAsQ,UAAA,KAAAI,EAAAC,aACb1T,CAAjC,kBAAA2T,EAAA5Q,EAAAsQ,UAAA,KAAAM,EAAAC,SAAiC5T,CAAD,0DAKvEA,MAAA,eAAoEA,MAAA,mBAAAA,MAAA6T,GAAA,MAAA9Q,EAAA/C,QAAA,OAAAA,MAAS+C,EAAA+Q,OAAM,GACjF9T,MAAA,cAAUA,MAAA,UACZA,WCJK,IAAM+T,GAAoB,MAA3B,MAAOA,UAA4BC,IAWvCC,GACAC,GACAC,GAIAC,GACAC,GA4BAC,GAEA1T,YACU2T,EACAC,EACAC,EACAC,EACAC,EACAC,GAERpJ,QAPQ1K,KAAAyT,UACAzT,KAAA0T,QACA1T,KAAA2T,WACA3T,KAAA4T,OACA5T,KAAA6T,YACA7T,KAAA8T,mBAnDV9T,KAAAmB,UAAYA,EACZnB,KAAA+T,eAAuC5S,EAAUC,UACjDpB,KAAA0S,cAAoE,CAClEsB,MAAO,YACPC,QAAS,EACTC,sBAAsB,GAGxBlU,MAAAmT,KAAagB,KAAUC,MACvBpU,MAAAoT,KAAce,KAAU5J,IACxBvK,MAAAqT,KAAYc,KAAUE,MAEtBrU,KAAA6F,aAAYyO,OAAoB,IAChCtU,KAAAuU,cAAaD,YAAgB3H,GAC7B3M,MAAAsT,KAAagB,OAAkB,IAC/BtU,MAAAuT,KAAae,OAAmB,IAIhCtU,KAAAuS,UAASiC,OAAS,KAChB,MAAMD,EAAavU,KAAKuU,aACxB,OAAOvU,MAAKuT,IAAa9M,KAAKuF,GAAKyI,IAAUC,aAAa1I,EAAE0F,QAAS6C,GAAW,GAMlFvU,KAAAmS,QAAOqC,OAAS,KACd,MAAMG,EAAY3U,MAAKsT,IACjBiB,EAAavU,KAAKuU,aAClBK,EAAY5U,MAAKuT,IACvB,OAAOoB,EAAUxJ,IAAIuG,IACnB,MAAMmD,EAAWD,EAAUnO,KAAKuF,GAAKyI,IAAUC,aAAa1I,EAAE0F,QAASA,IACvE,MAAO,CACLA,UACAtO,MAAOyR,GAAUtL,MAAMG,UAAYgI,EAAQvP,IAC3C4P,SAAU0C,IAAUC,aAAahD,EAAS6C,GAC1CvC,WAAY6C,GAAUtL,MAAMkJ,OAASoC,GAAUC,UAC/C7C,UAA6B,MAAlB4C,GAAUtL,OAExB,GAcDvJ,KAAKyT,QAAQsB,KAAK/U,KAAK0T,OACvB,MAAMsB,EAAoCC,KAAKC,MAAMC,eAAeC,QAAQC,OACtExO,EAAmD,SAAxCsO,eAAeC,QAAQE,MACxCN,EAAUO,QAAQC,IAEZA,EAASvP,KAAKwP,WAAW,OAC3BD,EAASvP,KAAOuP,EAASvP,KAAKsG,UAAU,IAE1CiJ,EAAS7L,WAAa9C,IAExB7G,MAAKwT,EAAYwB,KAGjBU,OAAO,KACL,MAAM7P,EAAY7F,KAAK6F,YACjB8O,EAAY3U,MAAKsT,IAGvB,GAAyB,IAArBzN,EAAUO,OAAc,OAE5B,IAAIwO,EAAY5U,MAAKuT,IAGrB,MAAMoC,EAAYhB,EAAUtL,OAAOqI,IAAYkD,EAAUgB,KAAK5J,GAAKyI,IAAUC,aAAa1I,EAAE0F,QAASA,KAE5E,IAArBiE,EAAUvP,UAAW,EAGzByP,KACEF,EAAUxK,IAAIuG,IAEZ,MAAMoE,EAAwB,CAC5BpE,WAEFkD,EAAY,IAAIA,EAAWkB,GAG3B,MAAMC,EAAQ/V,MAAKmT,EAAWrI,IAAI4G,EAAQvP,IAAKuP,EAAQ7H,OAAQ7J,MAAKwT,GAAWtI,QAAK8K,QAC9EC,EAAYF,EAAM7K,QAAKgL,KAAU3M,GAAQvJ,MAAKoT,EAAYnI,YAAY1B,KACtE4M,EAAYJ,EAAM7K,QAAKgL,KAAU3M,GAAQvJ,MAAKoT,EAAYzI,YAAYpB,EAAK6M,UAAU7J,UAAU,MACrG,SAAOsJ,KAAS,IAACQ,MAAG3E,GAAUqE,EAAOE,EAAWE,GAAU,IAE5DlH,UAAUqH,IACV,IAAIC,EAAavW,MAAKuT,IAEtB+C,EAAQf,QAAQ,EAAE7D,EAASnI,EAAMtE,EAAU6N,MAEzC,MAAM0D,GAAgBD,EAAWE,UAAUzK,IAAKyI,IAAUC,aAAa1I,GAAE0F,QAASA,IAElF,GAAI8E,GAAgB,EAAG,OAGvB,MAAMV,GAAwB,CAC5BpE,UACAnI,OACAmN,eAAgBzR,EAASwG,KACzBmH,aAAc3N,EAAS4G,KACvBiH,WACAgC,UAAWvL,EAAKkJ,MAElB8D,EAAa,IAAIA,EAAWI,MAAM,EAAGH,IAAgBV,MAAgBS,EAAWI,MAAMH,GAAgB,IAGtGxW,MAAK4W,EAA4BlF,EAASnI,EAAM1D,EAAS,GAG3D7F,MAAKuT,EAAWjH,IAAIiK,EAAU,GAGhCvW,MAAKuT,EAAWjH,IAAIsI,GAAS,EAE7B,CAAEiC,mBAAmB,KAAM,EAI7BnB,OAAO,KACL,MAAMnB,EAAavU,KAAKuU,aAClBK,EAAY5U,MAAKuT,IAGvB,IAAKqB,EAAW,OAGhB,MAAMrC,EAASqC,EAAUnO,KAAKuF,GAAKyI,IAAUC,aAAa1I,EAAE0F,QAAS6C,IAC/DuC,EAAe,cAEfC,EAAqB,MAAVxE,EAAiBuE,EAAe,GAAGvE,EAAOhJ,MAAMG,cAAcoN,IAI3EC,IAHa/W,MAAKqT,EAAU2D,aAI9BC,QAAQC,IAAI,WAAYH,GACxB/W,MAAKqT,EAAU8D,SAASJ,GAAQ,EAGtC,CAEAK,WACE,MAAMC,EAAerX,MAAKwT,EAAUrI,IAAIzE,KACXvE,IAAKuE,EAAK4Q,UAAUhH,YAAc5J,EAAKT,KAAM4D,OAAQnD,EAAKiD,YAIvF3J,KAAKuU,WAAWjI,IAAI+K,EAAa,IACjCrX,MAAKsT,EAAWhH,IAAI+K,GAEpBrX,MAAKuX,IAGLvX,MAAKmT,EAAWqE,SAASvI,UAAUpJ,IACjC7F,KAAK6F,UAAUyG,IAAIzG,EAAS,EAEhC,CAEA4R,cACE/M,MAAM+M,aACR,CAEAC,eAAeC,GACb3X,KAAK+T,eAAkB/T,KAAK+T,iBAAmB4D,EAAYA,EAAW,IACxE,CAEA5O,eAAeiC,GAoBb,MAAM4M,EAA6C,CACjD9N,OAAQkB,EAAOlB,OACf+N,OAAQ7M,EAAOnE,SACfiR,QAA2B,QAAlB9M,EAAOlB,QAAoBkB,EAAOlB,QAAQ2L,WAAW,QAAU,WAAQ9I,GAEtD3M,KAAK6T,UAAUkE,KAAKC,IAA2B,CACzEC,WAAW,EACXC,KAAMN,EACN9D,iBAAkB9T,KAAK8T,iBACvBqE,MAAO,UAGWC,cAAcnJ,UAAWd,IACtCA,GAELnO,MAAKmT,EAAWkF,OAAOlK,EAAO3L,KAAMwI,EAAOnE,SAAUsH,EAAOmK,aAAarJ,UAAU,KACjFjP,MAAKmT,EAAWqE,SAASvI,UAAUsJ,IACjCvY,KAAK6F,UAAUyG,IAAIiM,EAAK,EACzB,EACF,EAEL,CAEA7T,cAAcE,GACZ5E,KAAKwY,iBAAiB9T,cAAcE,EACtC,CAEA0N,YAAYmG,EAAc/G,GACxB,IAAIkD,EAAY5U,MAAKuT,IACrB,MAAMiD,EAAgB5B,EAAU6B,UAAUzK,GAAKyI,IAAUC,aAAa1I,EAAE0F,QAASA,IAC3EgH,EAAmB9D,EAAU4B,GAC7BV,EAAwB,IACzB4C,EACHnP,KAAM,IACDmP,EAAiBnP,KACpBkJ,KAAMgG,IAGV7D,EAAY,IAAIA,EAAU+B,MAAM,EAAGH,GAAgBV,KAAgBlB,EAAU+B,MAAMH,EAAgB,IACnGxW,MAAKuT,EAAWjH,IAAIsI,EACtB,CAEA9L,SAAS4I,GAEPA,EAAU1R,MAAKuT,IAAa9M,KAC1BuF,IAAMyI,IAAUC,aAAa1I,EAAE0F,QAASA,IAAY1F,EAAEzC,MAAMG,WAAagI,EAAQvP,KAAO6J,EAAEzC,MAAMI,WAAa+H,EAAQ7H,SACpH6H,SAAWA,EAEd,MAAMiH,EAAgB3Y,KAAKuU,aACtBE,IAAUC,aAAaiE,EAAejH,IACzC1R,KAAKuU,WAAWjI,IAAIoF,GAEtB,MAAMkH,EAAe5Y,MAAKsT,IAC1B,IAAKsF,EAAahD,KAAK5J,GAAKyI,IAAUC,aAAa1I,EAAG0F,IAAW,CAC/D,MAAMmH,EAAe,IAAID,EAAclH,GACvC1R,MAAKsT,EAAWhH,IAAIuM,EACtB,CACF,CAEA/G,YAAYJ,GACV,MAAMkH,EAAe5Y,MAAKsT,IACpBuF,EAAeD,EAAavP,OAAOlH,IAAQsS,IAAUC,aAAavS,EAAKuP,IAEvEiH,EAAgB3Y,KAAKuU,aAC3B,GAAIE,IAAUC,aAAaiE,EAAejH,GAAU,CAClD,MAAMoH,EAAgBF,EAAaA,EAAanC,UAAUzK,GAAKyI,IAAUC,aAAa1I,EAAG2M,IAAkB,IAAME,EAAa,GAC9H7Y,KAAKuU,WAAWjI,IAAIwM,EACtB,CACA9Y,MAAKsT,EAAWhH,IAAIuM,EACtB,CAEA7F,KAAKtB,GACHA,IAAY1R,KAAKuU,aACjB,MAAMM,EAAW7U,MAAKuT,IAAa9M,KAAKuF,GAAKyI,IAAUC,aAAa1I,EAAE0F,QAASA,IAC/E,GAAsB,MAAlBmD,GAAUtL,KAAc,OAE5BvJ,KAAK2T,SAASoE,KAAK,aACnB,MAAMgB,EAAalE,EAAStL,KAAKkJ,KACjCzS,MAAKmT,EAAWH,KAAKtB,EAAQvP,IAAKuP,EAAQ7H,OAAQgL,EAAStL,KAAMvJ,MAAKwT,GAAWvE,UAAU,CACzF+J,KAAM5N,IACJ,IAAKA,EAEH,YADApL,KAAK2T,SAASoE,KAAK,SAAU,KAAM,CAAEkB,SAAU,MAIjD,IAAIC,EAAe,IAAIlZ,MAAKuT,KAC5B,MAAMiD,EAAgB0C,EAAazC,UAAUzK,GAAKyI,IAAUC,aAAa1I,EAAE0F,QAASA,IACpF,GAAI8E,EAAgB,EAAG,OAGvB,MAAMV,EAAwB,IADLoD,EAAa1C,GAGpC1B,UAAWiE,GAEbG,EAAe,IAAIA,EAAavC,MAAM,EAAGH,GAAgBV,KAAgBoD,EAAavC,MAAMH,EAAgB,IAC5GxW,MAAKuT,EAAWjH,IAAI4M,GACpBlZ,KAAK2T,SAASoE,KAAK,QAAS,KAAM,CAAEkB,SAAU,KAAM,EAEtDE,MAAOA,IAAMnZ,KAAK2T,SAASoE,KAAK,SAAU,KAAM,CAAEkB,SAAU,OAEhE,CAGArC,GAA4BlF,EAAkBnI,EAAkBgP,GAC9D,MAAMa,EAAc7P,EAAKG,SACnB2P,EAAgBD,EAAYlN,QAAQ,MAAO,EAAKkN,EAAYE,YAAY,KAAO,EAAI,EACnFC,EAAkC,IAAlBF,EAAsB,GAAKD,EAAY7M,UAAU,EAAG8M,GACpEG,EAAWJ,EAAY7M,UAAU8M,GAEjCI,EADOD,EAASjN,UAAU,EAAGiN,EAASpT,OAASmD,EAAK6M,UAAUhQ,QAC5C,QAAUmD,EAAK6M,UAEjC9W,EAAWiZ,EAAM9R,KAAKsD,GAAQA,EAAK9D,OAASsT,EAAgBE,GAAY1P,EAAKjD,SAAWyC,EAAKI,UAC7FjK,EAAgB6Y,EAAMlP,OAAOU,GAAQA,EAAK9D,KAAKyT,SAASF,IAAazP,EAAKjD,SAAWyC,EAAKI,UAAUvD,OAAS,EAEnH,GAAI9G,GAAYI,EAAe,CAC7B,MAAMN,EAAmD,CACvDC,SAAUma,EACVla,SAAUA,GAAU2G,KACpB1G,QAASS,MAAKwT,EACX/M,KAAKH,GAAKA,EAAEgR,UAAUhH,aAAeoB,EAAQvP,KAAOmE,EAAEqD,WAAaJ,EAAKI,UAAYrD,EAAEL,OAASsD,EAAKG,WAAWiQ,QAClHja,gBACAE,gBAAgB,GAEZga,EAAc5Z,KAAK2T,SAASkG,kBAAkBha,GAAiC,CACnFqY,KAAM9Y,EACN6Z,SAAU,MAGZW,EAAYE,WAAW7K,UAAU,KAC1B2K,EAAYG,kBAAkBC,eAAe9B,KAA4CtY,gBAE5FI,KAAK8I,SADwB,CAAE3G,IAAK7C,GAAU2G,KAAM4D,OAAQvK,GAAUwH,QAExE,EAEJ,CACF,CAEAyQ,KACEvX,KAAK4T,KAAKqG,kBAAkB,KAC1Bja,KAAKka,cAAcC,OACjBC,KAA6BC,OAAQ,gBAClCpL,UAAUqL,IACSta,MAAKuT,IAAaqC,KAAK5J,GAAe,MAAVA,EAAEzC,MAAgByC,EAAEzC,KAAKkJ,OAASzG,EAAE8I,aAElFwF,EAAMC,iBACND,EAAME,YAAc,OAG1Bxa,KAAKka,cAAcC,OACjBC,KAAyBC,OAAQ,WAC9BpL,UAAUqL,KACT,EAAKG,KAAQH,KACbA,EAAMC,iBACNva,KAAK4T,KAAK8G,IAAI,IAAM1a,KAAKgT,QAAM,GAC/B,EAGV,iDApWWC,GAAmB/T,MAAAgB,KAAAhB,MAAA+B,OAAA/B,MAAAsG,MAAAtG,mBAAAyb,OAAAzb,aAAA,oCAAnB+T,EAAmB7S,UAAA,sBAAAwa,UAAA,SAAAja,EAAAC,MAAA,EAAAD,SACnBka,IAAqB,2qCDpD9B3b,MAFJ,UAEIA,CAFoG,UAEpGA,CAD+B,WAE7BA,MAAA,0BAAS0B,EAAA8W,eAAA9W,EAAAO,UAAAC,UAAmC,GAC5ClC,MAAA,cAAUA,MAAA,eACZA,UACAA,MAAA,WACEA,MAAA,0BAAS0B,EAAA8W,eAAA9W,EAAAO,UAAAE,SAAkC,GAC3CnC,MAAA,cAAUA,MAAA,UAEdA,YACAA,MAAA,0BAC0DA,MAA9B,oBAAAkT,GAAA,OAAYxR,EAAAkI,SAAAsJ,EAAgB,EAAElT,CAAD,0BAAAkT,GAAA,OAAmBxR,EAAAmI,eAAAqJ,EAAsB,GAClGlT,QACAA,MAAA,yBACEA,MAAA,yBAAAkT,GAAA,OAAiBxR,EAAA8D,cAAA0N,EAAqB,GACxClT,QACAA,MAAA,YA8BEA,MA7BA,GAAA4b,GAAA,YA6BA5b,CA7ByB,GAAA6b,GAAA,2BAmC3B7b,QACAA,MAAA,GAAA8b,GAAA,gBAKF9b,wBA3DwCA,MAAA,UAAAA,MAAA,GAAA0I,GAAA,cAAAhH,EAAA8R,cAAAsB,QAEhB9U,MAAA,GAAAA,MAAA,UAAAA,MAAA,GAAA+I,GAAArH,EAAAmT,iBAAAnT,EAAAO,UAAAC,YAIClC,MAAA,GAAAA,MAAA,UAAAA,MAAA,GAAA+I,GAAArH,EAAAmT,iBAAAnT,EAAAO,UAAAE,WAKHnC,MAAA,GAClBA,MADkB,SAAA0B,EAAAmT,iBAAAnT,EAAAO,UAAAC,UAClBlC,CADmE,cAAAyT,EAAA/R,EAAA2R,UAAA,KAAAI,EAAApJ,KACnErK,CAD2F,YAAA0B,EAAAiF,aAG1E3G,QAAiDA,MAAjD,SAAA0B,EAAAmT,iBAAAnT,EAAAO,UAAAE,SAAiDnC,CAAD,kBAAA+b,EAAAra,EAAA2R,UAAA,KAAA0I,EAAAvE,gBAIjExX,MAAA,GAAAA,MAAA0B,EAAAuR,OAAA/L,OAAA,SA6BAlH,cAAA,OAAAgc,EAAAta,EAAA2R,WAAA2I,EAAA3R,KAAA,OAOFrK,cAAA0B,EAAA2T,aAAA,uBCbElK,KACAjF,KAAa+V,KACbtS,GACApE,GACA2W,KAAwBC,KACxBC,IACAta,KAAeua,KACf9V,IACAC,IACA8V,KAAoBta,OAAA,23FAGX+R,CAAoB,8DC9C1B,IAAMuI,EAAoB,MAA3B,MAAOA,EAEX1b,YAAoB2b,GAAAzb,KAAAyb,qBAA4C,CAGhEC,QAAQpB,IACwBqB,UAAUC,SAASC,MAAM,OAASvB,EAAMwB,QAAUxB,EAAMyB,UAAYzB,EAAM0B,UAAY1B,EAAM2B,SAExHjc,KAAKyb,oBAAoBS,qBACzB7B,OAAO8B,eAAeC,kBAE1B,iDAXWZ,GAAoBtc,MAAAgB,KAAA,oCAApBsb,EAAoBpb,UAAA,2BAAAic,aAAA,SAAA1b,EAAAC,GAAA,EAAAD,GAApBzB,MAAA,iBAAAkT,GAAA,OAAAxR,EAAA8a,QAAAtJ,EAAe,4BAAfoJ,CAAoB,yFCG1B,MAAMpL,EAAkB,kBAWzBkM,EAAiBC,KAAiB,WAIlCC,EAAwB,8BAMvB,IAAMC,EAA0B,MAAjC,MAAOA,UAAkCjS,IAEnCkS,YAAYnZ,EAA6F,IACjH,MAAO,CACLyH,OAAQ,CACNqF,MAAOrQ,KAAKkQ,SACT3M,GAGT,CAEAoZ,mBACE,OAAO3c,KAAK6K,KAAKC,IAAc9K,KAAK+K,OA9BhB,yBA8ByC/K,KAAK0c,cACpE,CAEAE,oBACE,OAAO5c,KAAK6K,KACTC,IAAyB9K,KAAK+K,OAhCZ,0BAgCsC/K,KAAK0c,eAC7DxR,QACCC,KAAI0R,GACuBA,EAAa1R,IAAI2R,KACxCC,SAAUD,EAAO7Q,KAAKM,UAAU,EAAGuQ,EAAO7Q,KAAKC,QAAQ,MACvD0E,UAAWkM,EAAO7Q,KAClB7I,MAAO0Z,EAAOE,MACdC,YAAaH,EAAOI,YACpBC,UAAWL,EAAOM,UAClBC,WAAYP,EAAOQ,WACnBC,cAAeT,EAAOU,cACtBC,gBAAiBX,EAAOY,gBACxBC,KAAMb,EAAOM,UAAY,OAASN,EAAOU,cAAgB,eAAiB,SAKpF,CAEAI,mBACE,OAAO5d,KAAK6K,KAAKC,IAA4B9K,KAAK+K,OAtD1B,6BAuD1B,CAGAgE,UAAU8O,GACR,OAAO7d,KAAK6K,KACTC,IAAa9K,KAAK+K,OAAOqF,GAAkBpQ,KAAK0c,YAAY,CAAEvM,WAAY0N,KAC1E3S,QACCC,KAAI+D,IACF,GAAIA,EACF,UAAWuB,KAAOvB,EAAQ,CACxB,IAAKuB,EAAIlB,SAAU,SACnB,MAAMmB,EAAKD,EAAIlB,SAIfmB,EAAGlB,OAAS,IAHEkB,EAAGC,OACFD,EAAGD,EAAIxE,SACNyE,EAAGD,EAAIX,WAEzB,CAEF,OAAOZ,IAGf,CAGA4O,qBACE,OAAO9d,KAAK6K,KAAKC,IAAa9K,KAAK+K,OAAOyR,GAAwBxc,KAAK0c,cACzE,CAOAqB,sBAAsBC,GACpB,OAAOhe,MAAKie,EAAczB,EAAuBwB,EAEnD,CAEAE,aAAaF,GACX,OAAOhe,MAAKie,EAlFW,2BAkFuBD,EAChD,CAEAG,eAAeH,GACb,OAAOhe,MAAKie,EArFa,6BAqFuBD,EAClD,CAEAC,GAAcG,EAAkBJ,GAC9B,OAAOhe,KAAK6K,KAAKC,IAAa9K,KAAK+K,OAAOqT,GAAWpe,KAAK0c,YAAY,CAAEsB,gBAC1E,CAEAK,kBAAkBC,EAA6BC,EAAoBC,EAAoChc,GACrG,OAAOxC,KAAK6K,KAAK4T,KAAaze,KAAK+K,OAzGP,iCAyGwC,KAAM/K,KAAK0c,YAAY,CACzFgC,cAAeJ,EAAoBhO,WACnCiO,aACAI,YAAaH,EACbhc,SAEJ,CAEAwT,MAAMgI,EAAqBhI,GAAiB,GAC1C,OAAOhW,KAAK6K,KAAK4T,KAAWze,KAAK+K,OA/GjB,qBA+GsC,KAAM,CAC1DC,OAAQ,CACNqF,MAAOrQ,KAAKkQ,MACZ8N,YAAaA,EAAY1N,WACzB0F,UAGN,CAEA4I,QAAQZ,EAAqBQ,GAC3B,OAAOxe,KAAK6K,KAAK4T,KAAWze,KAAK+K,OAxHf,uBAwHsC,KAAM,CAC5DC,OAAQ,CACNqF,MAAOrQ,KAAKkQ,MACZ8N,YAAaA,EAAY1N,WACzBuO,kBAAmBL,IAGzB,CAEAM,QAAQC,EAAmBC,GACzB,OAAOhf,KAAK6K,KAAK4T,KAAcze,KAAK+K,OAjIrB,oBAiIyC,KAAM,CAC5DC,OAAQ,CACNqF,MAAOrQ,KAAKkQ,MACZwO,cAAeM,EAAYC,GAAG3O,WAC9B4O,MAAOjK,KAAKkK,UAAUJ,KAG5B,CAEA5H,SAASzQ,EAAasY,GACpB,OAAOhf,KAAK6K,KAAK4T,KAAWze,KAAK+K,OAAOuR,GAAiB,KAAM,CAC7DtR,OAAQ,CACNqF,MAAOrQ,KAAKkQ,MACZwO,cAAeM,EAAYC,GAAG3O,WAC9B0N,YAAatX,EAAKuY,GAAG3O,aAG3B,CAEA8O,OAAOC,EAAiBX,EAAuBY,GAC7C,OAAOtf,KAAK6K,KAAK4T,KAAWze,KAAK+K,OAnJhB,sBAmJsC,KAAM,CAC3DC,OAAQ,CACNqF,MAAOrQ,KAAKkQ,MACZwO,cAAeA,EAAcpO,WAC7B0N,YAAaqB,EAAQ/O,WACrBgP,YAGN,CAEAC,OAAO7Y,EAAasY,GAClB,GAAItY,EAAK8Y,QACP,MAAM,IAAIC,MAAM,sBAElB,OAAOzf,KAAK6K,KAAK0U,OAAgBvf,KAAK+K,OAhKrB,sBAgK2C,CAC1DC,OAAQ,CACNqF,MAAOrQ,KAAKkQ,MACZwO,cAAeM,EAAYC,GAAG3O,WAC9B0N,YAAatX,EAAKuY,GAAG3O,aAG3B,CAEA6J,IAAIuF,EAA0BhB,GAC5B,OAAO1e,KAAK6K,KAAK4T,KAAaze,KAAK+K,OAzKrB,mBAyKwC,KAAM,CAC1DC,OAAQ,CACNgE,MAAOhP,KAAKkQ,MACZyP,cAAejB,EAAcpO,WAC7B2O,GAAIS,EAAST,GAAG3O,WAChBrE,KAAMyT,EAASzT,KACf6D,UAAW4P,EAAS5P,UACpBT,WAAYqQ,EAASrQ,WACrBmQ,QAASE,EAASF,QAAQlP,WAC1BsP,MAAOF,EAASG,UAAUvP,aAGhC,CAEAwP,gBAAgB9B,EAAqB7O,EAAeyB,GAClD,OAAO5Q,KAAK6K,KAAK4T,KAAcze,KAAK+K,OA/LhB,yBA+LyC,KAAM,CACjEC,OAAQ,CAAEkF,MAAOlQ,KAAKkQ,MAAO8N,cAAa7O,QAAOyB,cAErD,yEApLW6L,KAAyBsD,GAAzBtD,EAAyB,0CAAzBA,EAAyBlL,QAAzBkL,EAAyBjL,WAAA,SAAzBiL,CAA0B,sCC/BhC,MAAMlM,EAAkB,CAC7ByP,QAAS,UACTC,OAAQ,SACRC,SAAU,WACV1P,MAAO,QACP2P,OAAQ,SACRC,UAAW,YACXC,OAAQ,SACRC,OAAQ,2JCAV,MAAMC,EAAW,CACfC,KAAK,EACLC,aAAa,EACbC,sBAAsB,EACtBnB,QAAQ,GAGGoB,EAAmB,gBACnBC,EAAmB,oBAGzB,IAAMC,EAAc,MAArB,MAAOA,UAAsBrW,IADnC1K,kCAGEE,KAAAkX,OAAM4J,KAAS,CAAED,iBAAiBN,GAE1BvgB,KAAA+gB,gBAAe5M,KAAU6M,KAQjCC,aAAajW,GACX,OAAAhL,KAAKkX,IAAIgK,KAAK,eACPlW,EAAOE,QACZ7B,KAAO8X,GAAU,MAALA,IAAS,EACrBjL,KAAUiL,GAAKnhB,KAAK0gB,qBAAqBS,EAAEC,iBAAiBlW,QAAKmW,KAAY,KAEjF,CAEQX,qBAAqBU,EAAyBE,GAEpD,OADUthB,KAAKkX,IAAIgK,KAAK,wBACjBlhB,KAAK+gB,aAAaN,YAAY,CACnCc,aAAc,CAACH,GACfI,QAASF,EACTpS,OAAQ,gBACRgI,IAAK,yBACJhM,QACDC,KAAI+M,GAAQA,EAAKuJ,SAErB,CAEAlC,OAAOrP,EAAe8O,EAAqB0C,EAAkBC,EAAgBC,EAAmBC,GAC9F,OAAA7hB,KAAKkX,IAAIgK,KAAK,SAAU,CAAEhR,QAAO8O,cAAa0C,WAAUC,QAAOC,WAAU7b,SAClE/F,KAAK6K,KAAK0U,OAAavf,KAAK+K,OAAO4V,EAAmB,UAAW,CACtE3V,OAAQ,CACNgU,cACA8C,GAAIJ,EAASpR,WACbJ,QACAyR,MAAOA,EAAMrR,cACTsR,GAAY,CAAEA,SAAUA,EAAStR,eACjCsR,GAAYC,GAAe,CAAEA,iBAGvC,yEA5CWhB,KAAad,GAAbc,EAAa,0CAAbA,EAAatP,QAAbsP,EAAarP,WAAA,SAAbqP,CAAc,kFCZ3B,MAAMN,EAAW,CACfC,KAAK,EACLE,sBAAsB,EACtBD,aAAa,GAIR,IAAMO,EAAY,MAAnB,MAAOA,EAIXlhB,YAAoB+K,EAA0B4I,GAA1BzT,KAAA6K,OAA0B7K,KAAAyT,UAF9CzT,KAAAkX,OAAM4J,KAAS,CAACE,gBAAeT,EAEmC,CAElEwB,aAAaC,EAAkBhX,EAAgBkE,EAAgBoS,GAC7DthB,KAAKkX,IAAIgK,KAAK,uBAAwB,CAAEc,WAAUhX,SAAQkE,SAAQoS,mBAElE,MAAMW,IAAcjX,EAQdkX,KAPclX,GAAQmX,qBAAuB,IACtB9f,SAAS,UAEtB,GAAK,UAAUrC,KAAKyT,QAAQvD,UACvC+R,EAAY,IAAIjX,IAAW,IAC5B,aAAekE,GAAU,KAED3C,UAAU,GACtC,OAAOvM,KAAK6K,KAAK4T,KAAmB,kBAAkBuD,KAAYE,IAChE,CACEE,MAAOd,GAGb,CAEAb,aAAcc,eAAcC,UAAStS,SAAQgI,QAC3ClX,KAAKkX,IAAIgK,KAAK,cAAe,CAAEhK,MAAKqK,eAAcC,UAAStS,WAO3D,MAAMgT,GALJ,eAAiBX,GAAcc,KAAK,MAAQ,IAC1C,UAAUriB,KAAKyT,QAAQvD,kBACRsR,GAASa,KAAK,MAAQ,IACrC,aAAenT,GAAU,KAED3C,UAAU,GACtC,OAAOvM,KAAK6K,KAAK4T,KACf,8CAA8CyD,IAC9C,GAEJ,iDAtCWlB,GAAY9hB,MAAAgB,MAAAhB,MAAA+B,KAAA,sCAAZ+f,EAAYzP,QAAZyP,EAAYxP,WAAA,SAAZwP,CAAY,8DCNlB,IAAesB,EAAW,MAA3B,MAAgBA,EADtBxiB,cAGYE,KAAAka,cAAgB,IAAIqI,KAE9B9K,cACEzX,KAAKwiB,SACP,CAGAA,UACExiB,KAAKka,cAAcuI,aACrB,iDAXoBH,EAAW,sCAAXA,EAAW/Q,QAAX+Q,EAAW9Q,WAAA,SAAX8Q,CAAW","names":["i0","ctx_r0","snackBarData","fileName","codeFile","edition","CodeAndEditionWarningsComponent_Conditional_2_Conditional_1_Template","CodeAndEditionWarningsComponent_Conditional_2_Conditional_3_Template","otherEditions","_r2","openCodeBehind","CodeAndEditionWarningsComponent","constructor","snackRef","this","dismissWithAction","i1","MAT_SNACK_BAR_DATA","selectors","standalone","features","decls","vars","consts","template","rf","ctx","CodeAndEditionWarningsComponent_Conditional_1_Template","CodeAndEditionWarningsComponent_Conditional_2_Template","CodeAndEditionWarningsComponent_Conditional_4_Template","MatButtonModule","i2","styles","Explorers","Templates","Snippets","ObjectToArrayPipe","transform","obj","Array","isArray","Object","values","pure","_r8","snippet_r7","$implicit","ctx_r2","toggleMore","key","toggledMores","includes","link_r9","url","name","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_7_For_4_Template","help","links","link_r12","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_8_For_1_Conditional_6_For_4_Template","more_r11","_r10","addSnippet","snip","toggleInfo","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_8_For_1_Conditional_6_Template","label","toggledInfos","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_8_For_1_Template","more","_r6","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_4_Template","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_7_Template","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_8_Template","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Template","folder_r5","value","_r4","toggleFolder","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_Template","section_r2","toggledFolders","CodeSnippetsComponent_For_2_Conditional_7_For_1_Template","_r1","toggleSection","CodeSnippetsComponent_For_2_Conditional_7_Template","toggledSections","CodeSnippetsComponent","insertSnippet","EventEmitter","snippet","emit","ArrayHelpers","toggleInArray","inputs","snippets","outputs","CodeSnippetsComponent_For_2_Template","MatIconModule","MatRippleModule","KeyValuePipe","TranslateModule","i3","ClickStopPropagationDirective","TippyDirective","SafeHtmlPipe","calculateTree","templates","tree","parent","paths","Path","split","last","length","pathFromRoot","i","path","existing","find","item","children","depth","isShared","Shared","isFolder","push","SortItemsPipe","items","sort","item1","item2","DepthPaddingPipe","sanitizer","padding","bypassSecurityTrustStyle","CodeTemplatesComponent_For_3_ng_container_0_Template","fileOrFolder_r3","_c0","item_r2","item_r5","ctx_r5","openTemplate","_c1","isToggled","CodeTemplatesComponent_ng_template_5_Conditional_1_Conditional_11_For_1_ng_container_0_Template","item1_r8","CodeTemplatesComponent_ng_template_5_Conditional_1_Conditional_11_For_1_Template","_r7","toggleItem","addFile","CodeTemplatesComponent_ng_template_5_Conditional_1_Conditional_11_Template","_c2","CodeTemplatesComponent_ng_template_5_Conditional_0_Template","CodeTemplatesComponent_ng_template_5_Conditional_1_Template","CodeTemplatesComponent","openView","createTemplate","toggledItemsApp","toggledItemsShared","ngOnChanges","changes","calculateTreeAppShared","filter","f","view","previousView","previousValue","FileName","IsShared","showFileInTree","shared","folder","file","toggledItems","CodeTemplatesComponent_For_3_Template","CodeTemplatesComponent_ng_template_5_Template","menu_r9","NgTemplateOutlet","NgClass","MatMenuModule","SnippetsService","HttpServiceBase","translate","super","getTooltips","language","http","get","apiUrl","params","getSnippets","pipe","map","res","relevant","filterAwayNotNeededSnippetsList","standardAndInputSnips","extractInputTypeSnippets","sets","initSnippetsWithConfig","standardArray","inputTypeSnippets","list","keyPrefixes","keyPrefixIndex","v","Type","indexOf","newList","itm","setHasPrefix","set","substring","inputTypeArray","catalogInputTypeSnippets","inputTypeList","undefined","subset","templateConfiguration","makeTree","Content","assign","Fields","PresentationFields","TypeContent","loadContentType","TypeContentPresentation","HasList","List","TypeList","TypeListPresentation","HasApp","App","Resources","Settings","o","reformatted","content","linksList","getHelpKey","result","instant","addition","linksString","llist","l","pair","link","trim","target","type","prefix","getFields","AppId","subscribe","fields","field","fieldname","StaticName","valuePlaceholder","Metadata","merged","Notes","toLowerCase","snipDefaults","cloneDeep","attachSnippets","InputType","std","val","replace","appId","staticName","webApiFieldsAll","appid","toString","DataTypeCatalog","Empty","fld","md","All","inputType","genericSnippet","fieldType","typeSnips","concat","fieldSnips","g","localizeGenericSnippet","collapse","objName","fieldName","factory","ɵfac","tab_r2","viewKey","CodeEditorComponent_Conditional_11_For_2_Conditional_2_Template","CodeEditorComponent_Conditional_11_For_2_Conditional_6_Template","CodeEditorComponent_Conditional_11_For_2_Conditional_7_Template","closeEditor","isActive","isModified","isLoading","CodeEditorComponent_Conditional_11_For_2_Template","tabs","$event","tmp_2_0","codeChanged","active","tmp_1_0","Code","monacoOptions","tmp_4_0","editorSnipps","tmp_5_0","tooltips","_r5","save","CodeEditorComponent","BaseComponent","#sourceSvc","#snippetSvc","#titleSvc","#openViews","#viewInfos","#urlItems","context","route","snackBar","zone","matDialog","viewContainerRef","activeExplorer","theme","tabSize","fixedOverflowWidgets","transient","SourceService","Title","signal","activeView","computed","RxHelpers","objectsEqual","openViews","viewInfos","viewInfo","savedCode","init","codeItems","JSON","parse","sessionStorage","getItem","keyItems","keyIsShared","forEach","codeItem","startsWith","effect","notLoaded","some","forkJoin","newViewInfo","view$","share","snippets$","switchMap","tooltips$","Extension","of","results","viewInfos1","selectedIndex","findIndex","explorerSnipps","slice","#showCodeAndEditionWarnings","allowSignalWrites","defaultTitle","newTitle","getTitle","console","log","setTitle","ngOnInit","initialViews","EntityId","#attachListeners","getAll","ngOnDestroy","toggleExplorer","explorer","createFileDialogData","global","purpose","open","CreateFileDialogComponent","autoFocus","data","width","afterClosed","create","templateKey","files","monacoEditorRef","code","selectedViewInfo","oldActiveView","oldOpenViews","newOpenViews","newActiveView","codeToSave","next","duration","newViewInfos","error","pathAndName","pathSeparator","lastIndexOf","pathWithSlash","fullName","nameCode","endsWith","Edition","snackBarRef","openFromComponent","onAction","containerInstance","snackBarConfig","runOutsideAngular","subscriptions","add","fromEvent","window","event","preventDefault","returnValue","isCtrlS","run","i4","viewQuery","MonacoEditorComponent","CodeEditorComponent_Conditional_11_Template","CodeEditorComponent_Conditional_12_Template","CodeEditorComponent_Conditional_13_Template","tmp_7_0","tmp_9_0","i5","MatProgressSpinnerModule","i6","MonacoEditorComponent_1","i7","ToggleDebugDirective","globalConfigService","onClick","navigator","platform","match","metaKey","ctrlKey","shiftKey","altKey","toggleDebugEnabled","getSelection","removeAllRanges","hostBindings","webApiSetTitle","webApiTypeRoot","webApiFieldsGetShared","ContentTypesFieldsService","paramsAppId","typeListRetrieve","getInputTypesList","inputConfigs","config","dataType","Label","description","Description","isDefault","IsDefault","isObsolete","IsObsolete","isRecommended","IsRecommended","obsoleteMessage","ObsoleteMessage","icon","getReservedNames","contentTypeStaticName","getShareableFields","getShareableFieldsFor","attributeId","#getShareinfo","getAncestors","getDescendants","endpoint","addInheritedField","targetContentTypeId","sourceType","sourceFieldGuid","post","contentTypeId","sourceField","inherit","inheritMetadataOf","reOrder","idArray","contentType","Id","order","stringify","rename","fieldId","newName","delete","IsTitle","Error","newField","ContentTypeId","Index","SortOrder","updateInputType","__ngFactoryType__","Boolean","Custom","DateTime","Entity","Hyperlink","Number","String","logSpecs","all","getEntities","getAvailableEntities","webApiEntityRoot","webApiEntityList","EntityService","classLog","queryService","QueryService","getEntities$","fnIf","p","contentTypeName","shareReplay","entitiesFilter","contentTypes","itemIds","Default","entityId","force","parentId","parentField","id","getFromQuery","queryUrl","hasParams","urlParams","toLocaleLowerCase","Guids","join","ServiceBase","Subscription","destroy","unsubscribe"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/code-editor/code-and-edition-warnings/code-and-edition-warnings.component.html","./projects/eav-ui/src/app/code-editor/code-and-edition-warnings/code-and-edition-warnings.component.ts","./projects/eav-ui/src/app/code-editor/code-editor.models.ts","./projects/eav-ui/src/app/code-editor/code-snippets/object-to-array.pipe.ts","./projects/eav-ui/src/app/code-editor/code-snippets/code-snippets.component.html","./projects/eav-ui/src/app/code-editor/code-snippets/code-snippets.component.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.helpers.ts","./projects/eav-ui/src/app/code-editor/code-templates/order-items.pipe.ts","./projects/eav-ui/src/app/code-editor/code-templates/depth-padding.pipe.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.component.html","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.component.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.models.ts","./projects/eav-ui/src/app/code-editor/services/snippets.service.ts","./projects/eav-ui/src/app/code-editor/code-editor.component.html","./projects/eav-ui/src/app/code-editor/code-editor.component.ts","./projects/eav-ui/src/app/shared/directives/toggle-debug.directive.ts","./projects/eav-ui/src/app/shared/fields/content-types-fields.service.ts","./projects/eav-ui/src/app/shared/fields/data-type-catalog.ts","./projects/eav-ui/src/app/shared/services/entity.service.ts","./projects/eav-ui/src/app/shared/services/query.service.ts","./projects/eav-ui/src/app/shared/services/service-base.ts"],"sourcesContent":["<div class=\"messages\">\r\n  @if (snackBarData.codeFile) {\r\n  <div>\"{{ snackBarData.fileName }}\" also has a code-behind file \"{{ snackBarData.codeFile }}\".</div>\r\n  <br>\r\n  }\r\n\r\n  @if (snackBarData.otherEditions) {\r\n  <div>\r\n    @if (snackBarData.edition) {\r\n    You are editing \"{{ snackBarData.edition }}\" edition.\r\n    }\r\n    There are {{ snackBarData.otherEditions }} other editions of \"{{ snackBarData.fileName }}\".\r\n    @if (!snackBarData.edition) {\r\n    You may be editing an edition which is not the one you see.\r\n    }\r\n    See <a href=\"https://go.2sxc.org/polymorphism\" target=\"_blank\">docs</a>.\r\n  </div>\r\n  }\r\n</div>\r\n\r\n<div class=\"actions\">\r\n  @if (snackBarData.codeFile) {\r\n  <button mat-button color=\"primary\" (click)=\"openCodeBehind()\">\r\n    Open code-behind file\r\n  </button>\r\n  }\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\nimport { CodeAndEditionWarningsSnackBarData } from './code-and-edition-warnings.models';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@Component({\r\n  selector: 'app-code-and-edition-warnings',\r\n  templateUrl: './code-and-edition-warnings.component.html',\r\n  styleUrls: ['./code-and-edition-warnings.component.scss'],\r\n  standalone: true,\r\n  imports: [MatButtonModule],\r\n})\r\nexport class CodeAndEditionWarningsComponent {\r\n  constructor(\r\n    private snackRef: MatSnackBarRef<CodeAndEditionWarningsComponent>,\r\n    @Inject(MAT_SNACK_BAR_DATA) public snackBarData: CodeAndEditionWarningsSnackBarData,\r\n  ) { }\r\n\r\n  openCodeBehind(): void {\r\n    this.snackBarData.openCodeBehind = true;\r\n    this.snackRef.dismissWithAction();\r\n  }\r\n}\r\n","import { Snippet, SnippetsSets } from './models/snippet.model';\r\nimport { SourceView } from './models/source-view.model';\r\nimport { Tooltip } from './models/tooltip.model';\r\n\r\nexport interface Tab {\r\n  viewKey: ViewKey;\r\n  label: string;\r\n  isActive: boolean;\r\n  isModified: boolean;\r\n  isLoading: boolean;\r\n}\r\n\r\nexport const Explorers = {\r\n  Templates: 'Templates',\r\n  Snippets: 'Snippets',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n\r\nexport interface ViewInfo {\r\n  viewKey: ViewKey;\r\n  view?: SourceView;\r\n  explorerSnipps?: SnippetsSets;\r\n  editorSnipps?: Snippet[];\r\n  tooltips?: Tooltip[];\r\n  savedCode?: string;\r\n}\r\n\r\nexport interface ViewKey {\r\n  /** ViewKey is templateId or path */\r\n  key: string;\r\n  shared: boolean;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'objectToArray',\r\n    standalone: true\r\n})\r\nexport class ObjectToArrayPipe implements PipeTransform {\r\n  transform(obj: Record<string, any> | Record<string, any>[]): Record<string, any>[] {\r\n    if (obj == null) return;\r\n\r\n    if (Array.isArray(obj)) { return obj; }\r\n\r\n    return Object.values(obj);\r\n  }\r\n}\r\n","<!-- TODO: @2pp - translations aren't loading or made?-->\r\n<div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n  @for (section of snippets | keyvalue; track section) {\r\n    <div>\r\n      <div\r\n        class=\"collapsible-header section\"\r\n        [tippyTranslate]=\"'SourceEditorSnippets.' + section.key + '.Help'\"\r\n        tippyShowDelay=\"750\"\r\n        (click)=\"toggleSection(section.key)\"\r\n      >\r\n        <mat-icon>\r\n          {{ toggledSections.includes(section.key) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n        </mat-icon>\r\n        <span>{{ 'SourceEditorSnippets.' + section.key + '.Title' | translate }}</span>\r\n      </div>\r\n      @if (toggledSections.includes(section.key)) {\r\n        @for (folder of section.value | keyvalue; track folder) {\r\n          <div>\r\n            <div\r\n              class=\"collapsible-header folder\"\r\n              [tippyTranslate]=\"'SourceEditorSnippets.' + section.key + '.' + folder.key + '.Help'\"\r\n              tippyShowDelay=\"750\"\r\n              (click)=\"toggleFolder(folder.key)\"\r\n            >\r\n              <mat-icon>\r\n                {{ toggledFolders.includes(folder.key) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n              </mat-icon>\r\n              <span>{{ 'SourceEditorSnippets.' + section.key + '.' + folder.key + '.Title' | translate }}</span>\r\n            </div>\r\n            @if (toggledFolders.includes(folder.key)) {\r\n              @for (snippet of folder.value | objectToArray; track snippet) {\r\n                <div class=\"snippet\">\r\n                  <div class=\"snippet-label\">\r\n                    <div matRipple class=\"text\" [tippy]=\"snippet.snip\" tippyShowDelay=\"750\" (click)=\"addSnippet(snippet.snip)\">\r\n                      {{ snippet.label }}\r\n                    </div>\r\n                    @if (snippet.more) {\r\n                      <mat-icon tippy=\"Show More\" tippyShowDelay=\"750\" (click)=\"toggleMore(snippet.key)\">\r\n                        {{ toggledMores.includes(snippet.key) ? 'more_vert' : 'more_horiz' }}\r\n                      </mat-icon>\r\n                    }\r\n                    <mat-icon tippy=\"Show Help\" tippyShowDelay=\"750\" appClickStopPropagation (click)=\"toggleInfo(snippet.key)\"\r\n                      >info</mat-icon\r\n                    >\r\n                  </div>\r\n                  @if (toggledInfos.includes(snippet.key)) {\r\n                    <div class=\"snippet-help\">\r\n                      <div class=\"text\" [innerHTML]=\"snippet.help | safeHtml\"></div>\r\n                      @for (link of snippet.links; track link) {\r\n                        <div>\r\n                          <a [href]=\"link.url\" target=\"_blank\">{{ link.name }}</a>\r\n                        </div>\r\n                      }\r\n                    </div>\r\n                  }\r\n                  @if (toggledMores.includes(snippet.key)) {\r\n                    @for (more of snippet.more | objectToArray; track more) {\r\n                      <div>\r\n                        <div class=\"snippet-label\">\r\n                          <div matRipple class=\"text text-more\" [tippy]=\"more.snip\" tippyShowDelay=\"750\" (click)=\"addSnippet(more.snip)\">\r\n                            {{ more.label }}\r\n                          </div>\r\n                          <mat-icon tippy=\"Show Help\" tippyShowDelay=\"750\" appClickStopPropagation (click)=\"toggleInfo(more.key)\"\r\n                            >info</mat-icon\r\n                          >\r\n                        </div>\r\n                        @if (toggledInfos.includes(more.key)) {\r\n                          <div class=\"snippet-help snippet-help-more\">\r\n                            <div class=\"text\" [innerHTML]=\"more.help | safeHtml\"></div>\r\n                            @for (link of more.links; track link) {\r\n                              <div>\r\n                                <a [href]=\"link.url\" target=\"_blank\">{{ link.name }}</a>\r\n                              </div>\r\n                            }\r\n                          </div>\r\n                        }\r\n                      </div>\r\n                    }\r\n                  }\r\n                </div>\r\n              }\r\n            }\r\n          </div>\r\n        }\r\n      }\r\n    </div>\r\n  }\r\n</div>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { SnippetsSets } from '../models/snippet.model';\r\nimport { ObjectToArrayPipe } from './object-to-array.pipe';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { KeyValuePipe } from '@angular/common';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\n\r\n@Component({\r\n  selector: 'app-code-snippets',\r\n  templateUrl: './code-snippets.component.html',\r\n  styleUrls: ['./code-snippets.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    MatRippleModule,\r\n    KeyValuePipe,\r\n    TranslateModule,\r\n    ObjectToArrayPipe,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n    SafeHtmlPipe,\r\n  ],\r\n})\r\nexport class CodeSnippetsComponent {\r\n  @Input() snippets: SnippetsSets;\r\n  @Output() insertSnippet: EventEmitter<string> = new EventEmitter();\r\n  toggledSections: string[] = [];\r\n  toggledFolders: string[] = [];\r\n  toggledInfos: string[] = [];\r\n  toggledMores: string[] = [];\r\n\r\n  constructor() { }\r\n\r\n  addSnippet(snippet: string): void {\r\n    this.insertSnippet.emit(snippet);\r\n  }\r\n\r\n  toggleSection(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledSections);\r\n  }\r\n\r\n  toggleFolder(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledFolders);\r\n  }\r\n\r\n  toggleInfo(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledInfos);\r\n  }\r\n\r\n  toggleMore(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledMores);\r\n  }\r\n}\r\n","import { FileAsset } from '../models/file-asset.model';\r\nimport { TreeItem } from '../models/tree-item.model';\r\nimport { appSharedRoot } from './code-templates.models';\r\n\r\nexport function calculateTreeAppShared(templates: FileAsset[]): TreeItem[] {\r\n  const tree: TreeItem[] = [\r\n    {\r\n      depth: -1,\r\n      name: 'App Files',\r\n      pathFromRoot: appSharedRoot,\r\n      isShared: false,\r\n      isFolder: true,\r\n      children: calculateTree(templates.filter(f => !f.Shared)),\r\n    },\r\n    {\r\n      depth: -1,\r\n      name: 'Shared App Files',\r\n      pathFromRoot: appSharedRoot,\r\n      isShared: true,\r\n      isFolder: true,\r\n      children: calculateTree(templates.filter(f => f.Shared)),\r\n    },\r\n  ];\r\n  return tree;\r\n}\r\n\r\nfunction calculateTree(templates: FileAsset[]): TreeItem[] {\r\n  if (!templates) { return []; }\r\n\r\n  const tree: TreeItem[] = [];\r\n  for (const template of templates) {\r\n    let parent: TreeItem[] = tree;\r\n    const paths = template.Path.split('/');\r\n    const last = paths[paths.length - 1];\r\n    let pathFromRoot = '';\r\n    for (let i = 0; i < paths.length; i++) {\r\n      const path = paths[i];\r\n      pathFromRoot += i ? `/${path}` : path;\r\n      const existing = parent.find(item => item.name === path);\r\n      if (existing) {\r\n        parent = existing.children;\r\n      } else {\r\n        const item: TreeItem = {\r\n          depth: i,\r\n          name: path,\r\n          pathFromRoot,\r\n          isShared: template.Shared,\r\n          isFolder: path !== last,\r\n          ...(path !== last && { children: [] }),\r\n        };\r\n        parent.push(item);\r\n        parent = item.children;\r\n      }\r\n    }\r\n  }\r\n\r\n  return tree;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TreeItem } from '../models/tree-item.model';\r\n\r\n/** Sorts folders before files */\r\n@Pipe({\r\n  name: 'sortItems',\r\n  standalone: true\r\n})\r\nexport class SortItemsPipe implements PipeTransform {\r\n\r\n  transform(items: TreeItem[]) {\r\n    if (items == null) { return items; }\r\n\r\n    items.sort((item1, item2) => {\r\n      if (item1.isFolder < item2.isFolder) {\r\n        return 1;\r\n      } else if (item1.isFolder > item2.isFolder) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    return items;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'depthPadding',\r\n  standalone: true\r\n})\r\nexport class DepthPaddingPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(depth: number, isFolder: boolean): SafeStyle {\r\n    let padding: number;\r\n    if (isFolder) {\r\n      padding = depth * 8;\r\n    } else {\r\n      padding = (depth === 0) ? 8 : (depth * 8 + 16);\r\n    }\r\n    return this.sanitizer.bypassSecurityTrustStyle(`padding-left: ${padding}px;`);\r\n  }\r\n}\r\n","<div class=\"editor-active-explorer fancy-scrollbar-dark explorer-wrapper\">\r\n\r\n  <div>\r\n    @for (item of (tree | sortItems); track item) {\r\n    <ng-container *ngTemplateOutlet=\"fileOrFolder; context: {item: item}\"></ng-container>\r\n    }\r\n\r\n    <ng-template #fileOrFolder let-item=\"item\">\r\n\r\n      @if (!item.isFolder) {\r\n      <div class=\"file\" [style]=\"item.depth | depthPadding: item.isFolder\"\r\n        [ngClass]=\"{'active': isToggled(item.pathFromRoot, item.isShared) }\" [tippy]=\"item.name\" tippyShowDelay=\"750\"\r\n        (click)=\"openTemplate(item.pathFromRoot, item.isShared)\">\r\n        {{ item.name }}\r\n      </div>\r\n      }\r\n\r\n      @if (item.isFolder) {\r\n      <div>\r\n        <div class=\"folder-name-wrapper\" [ngClass]=\"{'app-shared-root': item.depth < 0}\"\r\n          [style]=\"item.depth + 1 | depthPadding: item.isFolder\" (click)=\"toggleItem(item.pathFromRoot, item.isShared)\">\r\n          <div class=\"folder-name\" [tippy]=\"item.name\" tippyShowDelay=\"750\">\r\n            <mat-icon> {{ isToggled(item.pathFromRoot, item.isShared) ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\r\n              }}\r\n            </mat-icon>\r\n            <span>{{ item.name }}</span>\r\n          </div>\r\n          <div class=\"add-item\" tippy=\"Create file in this folder\" tippyShowDelay=\"750\" appClickStopPropagation\r\n            (click)=\"addFile(item.pathFromRoot, item.isShared)\">\r\n            <mat-icon>add</mat-icon>\r\n          </div>\r\n        </div>\r\n        @if (isToggled(item.pathFromRoot, item.isShared)) {\r\n        @for (item1 of (item.children | sortItems); track item1) {\r\n        <ng-container *ngTemplateOutlet=\"fileOrFolder; context: {item: item1}\"></ng-container>\r\n        }\r\n        }\r\n      </div>\r\n      }\r\n\r\n    </ng-template>\r\n  </div>\r\n\r\n  <div class=\"create-button-wrapper\">\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" tippy=\"Create file\" tippyPlacement=\"left\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button mat-menu-item (click)=\"addFile('', false)\">\r\n        <span>App</span>\r\n      </button>\r\n      <button mat-menu-item (click)=\"addFile('', true)\">\r\n        <span>Shared (global)</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\r\nimport { ViewKey } from '../code-editor.models';\r\nimport { FileAsset } from '../models/file-asset.model';\r\nimport { SourceView } from '../models/source-view.model';\r\nimport { TreeItem } from '../models/tree-item.model';\r\nimport { calculateTreeAppShared } from './code-templates.helpers';\r\nimport { appSharedRoot, CreateTemplateParams } from './code-templates.models';\r\nimport { SortItemsPipe } from './order-items.pipe';\r\nimport { DepthPaddingPipe } from './depth-padding.pipe';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgTemplateOutlet, NgClass } from '@angular/common';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-code-templates',\r\n  templateUrl: './code-templates.component.html',\r\n  styleUrls: ['./code-templates.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgTemplateOutlet,\r\n    NgClass,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    DepthPaddingPipe,\r\n    SortItemsPipe,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class CodeTemplatesComponent implements OnChanges {\r\n  @Input() view?: SourceView;\r\n  @Input() templates: FileAsset[];\r\n  @Output() openView: EventEmitter<ViewKey> = new EventEmitter();\r\n  @Output() createTemplate: EventEmitter<CreateTemplateParams> = new EventEmitter();\r\n  tree: TreeItem[];\r\n  toggledItemsApp: string[] = [];\r\n  toggledItemsShared: string[] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.templates != null) {\r\n      this.tree = calculateTreeAppShared(this.templates);\r\n    }\r\n    if (changes.view != null) {\r\n      const previousView: SourceView = changes.view?.previousValue;\r\n      if (previousView) {\r\n        this.toggleItem(previousView.FileName, previousView.IsShared);\r\n      }\r\n      if (this.view) {\r\n        this.showFileInTree(this.view.FileName, this.view.IsShared);\r\n      }\r\n    }\r\n  }\r\n\r\n  isToggled(path: string, isShared: boolean): boolean {\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    return toggledItems.includes(path);\r\n  }\r\n\r\n  openTemplate(path: string, isShared: boolean): void {\r\n    const viewKey: ViewKey = { key: path, shared: isShared };\r\n    this.openView.emit(viewKey);\r\n  }\r\n\r\n  toggleItem(path: string, isShared: boolean): void {\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    ArrayHelpers.toggleInArray(path, toggledItems);\r\n  }\r\n\r\n  addFile(folder?: string, isShared?: boolean): void {\r\n    const params: CreateTemplateParams = { folder, isShared };\r\n    this.createTemplate.emit(params);\r\n  }\r\n\r\n  private showFileInTree(file: string, isShared: boolean): void {\r\n    if (file == null) return;\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    if (toggledItems.includes(file)) return;\r\n\r\n    const paths = [appSharedRoot, ...file.split('/')];\r\n    let pathFromRoot = '';\r\n    for (const path of paths) {\r\n      pathFromRoot = !pathFromRoot ? path : `${pathFromRoot}/${path}`;\r\n      if (toggledItems.includes(pathFromRoot)) continue;\r\n      this.toggleItem(pathFromRoot, isShared);\r\n    }\r\n  }\r\n}\r\n","export const appSharedRoot = '' as const;\r\n\r\nexport interface CreateTemplateParams {\r\n  folder?: string;\r\n  isShared?: boolean;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { map, Observable } from 'rxjs';\r\nimport { Of } from '../../../../../core';\r\nimport { webApiFieldsAll } from '../../shared/fields/content-types-fields.service';\r\nimport { DataTypeCatalog } from '../../shared/fields/data-type-catalog';\r\nimport { Field } from '../../shared/fields/field.model';\r\nimport { InputTypeCatalog } from '../../shared/fields/input-type-catalog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { MoreSnippet, SetSnippet, SetSnippetLink, Snippet, SnippetsSets, SnippetsSubSubSets } from '../models/snippet.model';\r\nimport { SourceView } from '../models/source-view.model';\r\nimport { Tooltip } from '../models/tooltip.model';\r\n\r\nexport const inlineHelp = 'admin/Code/InlineHelp';\r\n\r\n@Injectable()\r\nexport class SnippetsService extends HttpServiceBase {\r\n\r\n  constructor( private translate: TranslateService) {\r\n    super();\r\n  }\r\n\r\n  getTooltips(language: string): Observable<Tooltip[]> {\r\n    return this.http.get<Tooltip[]>(this.apiUrl(inlineHelp), {\r\n      params: {\r\n        language,\r\n      },\r\n    });\r\n  }\r\n\r\n  getSnippets(view: SourceView): Observable<{ list: Snippet[]; sets: SnippetsSets; }> {\r\n    return this.http.get<{ snippets: Snippet[] }>('../ng-assets/snippets.json.js').pipe(\r\n      map(res => {\r\n        const relevant = this.filterAwayNotNeededSnippetsList(res.snippets, view);\r\n        const standardAndInputSnips = this.extractInputTypeSnippets(relevant);\r\n        const sets = this.initSnippetsWithConfig(standardAndInputSnips.standardArray, view, standardAndInputSnips.inputTypeSnippets);\r\n        const sorted: { list: Snippet[]; sets: SnippetsSets; } = {\r\n          list: standardAndInputSnips.standardArray,\r\n          sets\r\n        };\r\n        return sorted;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** Scan the list for sets starting with @ or [ and filter if not needed right now */\r\n  private filterAwayNotNeededSnippetsList(list: Snippet[], view: SourceView): Snippet[] {\r\n    const keyPrefixes = ['@', '['];\r\n    const keyPrefixIndex = (v: SourceView) => (v.Type.indexOf('Razor') > -1) ? 0 : 1;\r\n\r\n    const newList: Snippet[] = [];\r\n    for (const itm of list) {\r\n      const setHasPrefix = keyPrefixes.indexOf(itm.set[0]);\r\n      if (setHasPrefix === -1 || (setHasPrefix === keyPrefixIndex(view))) {\r\n        // if necessary, remove first char\r\n        if (setHasPrefix === keyPrefixIndex(view)) {\r\n          itm.set = itm.set.substring(1);\r\n        }\r\n        newList.push(itm);\r\n      }\r\n    }\r\n    return newList;\r\n  }\r\n\r\n  private extractInputTypeSnippets(list: Snippet[]): { standardArray: Snippet[]; inputTypeSnippets: Record<string, Snippet[]>; } {\r\n    const standardArray: Snippet[] = [];\r\n    const inputTypeArray: Snippet[] = [];\r\n\r\n    for (const itm of list) {\r\n      const systemSnippet = itm.set[0] === '\\\\';\r\n      if (!systemSnippet) {\r\n        standardArray.push(itm);\r\n      } else {\r\n        itm.set = itm.set.substring(1);\r\n        inputTypeArray.push(itm);\r\n      }\r\n    }\r\n    const inputTypeSnippets = this.catalogInputTypeSnippets(inputTypeArray);\r\n    const extracted: { standardArray: Snippet[]; inputTypeSnippets: Record<string, Snippet[]>; } = {\r\n      standardArray,\r\n      inputTypeSnippets,\r\n    };\r\n    return extracted;\r\n  }\r\n\r\n  private catalogInputTypeSnippets(list: Snippet[]): Record<string, Snippet[]> {\r\n    const inputTypeList: Record<string, Snippet[]> = {};\r\n    for (const itm of list) {\r\n      if (inputTypeList[itm.subset] === undefined) {\r\n        inputTypeList[itm.subset] = [];\r\n      }\r\n      inputTypeList[itm.subset].push(itm);\r\n    }\r\n    return inputTypeList;\r\n  }\r\n\r\n  private initSnippetsWithConfig(\r\n    standardArray: Snippet[],\r\n    templateConfiguration: SourceView,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): SnippetsSets {\r\n    const sets = this.makeTree(standardArray);\r\n\r\n    // retrieve all relevant content-types and infos\r\n    sets.Content = Object.assign({}, sets.Content, { Fields: {}, PresentationFields: {} });\r\n    if (templateConfiguration.TypeContent) {\r\n      this.loadContentType(\r\n        sets.Content.Fields as SnippetsSubSubSets,\r\n        templateConfiguration.TypeContent,\r\n        'Content',\r\n        templateConfiguration,\r\n        inputTypeSnippets,\r\n      );\r\n    }\r\n    if (templateConfiguration.TypeContentPresentation) {\r\n      this.loadContentType(\r\n        sets.Content.PresentationFields as SnippetsSubSubSets,\r\n        templateConfiguration.TypeContentPresentation,\r\n        'Content.Presentation',\r\n        templateConfiguration,\r\n        inputTypeSnippets,\r\n      );\r\n    }\r\n\r\n    if (templateConfiguration.HasList) {\r\n      sets.List = Object.assign({}, sets.List, { Fields: {}, PresentationFields: {} });\r\n      if (templateConfiguration.TypeList) {\r\n        this.loadContentType(\r\n          sets.List.Fields as SnippetsSubSubSets,\r\n          templateConfiguration.TypeList,\r\n          'Header',\r\n          templateConfiguration,\r\n          inputTypeSnippets,\r\n        );\r\n      }\r\n      if (templateConfiguration.TypeListPresentation) {\r\n        this.loadContentType(\r\n          sets.List.PresentationFields as SnippetsSubSubSets,\r\n          templateConfiguration.TypeListPresentation,\r\n          'Header.Presentation',\r\n          templateConfiguration,\r\n          inputTypeSnippets,\r\n        );\r\n      }\r\n    } else {\r\n      delete sets.List;\r\n    }\r\n\r\n    // maybe App-infos\r\n    if (templateConfiguration.HasApp) {\r\n      sets.App.Resources = {};\r\n      sets.App.Settings = {};\r\n      this.loadContentType(sets.App.Resources, 'App-Resources', 'App.Resources', templateConfiguration, inputTypeSnippets);\r\n      this.loadContentType(sets.App.Settings, 'App-Settings', 'App.Settings', templateConfiguration, inputTypeSnippets);\r\n    }\r\n\r\n    return sets;\r\n  }\r\n\r\n  /** Convert the list into a tree with set/subset/item */\r\n  private makeTree(list: Snippet[]): SnippetsSets {\r\n    const tree: SnippetsSets = {};\r\n    for (const o of list) {\r\n      if (tree[o.set] === undefined) {\r\n        tree[o.set] = {};\r\n      }\r\n      if (tree[o.set][o.subset] === undefined) {\r\n        tree[o.set][o.subset] = [];\r\n      }\r\n      const reformatted: SetSnippet = {\r\n        key: o.name,\r\n        label: this.label(o.set, o.subset, o.name),\r\n        snip: o.content,\r\n        help: o.help || this.help(o.set, o.subset, o.name),\r\n        links: this.linksList(o.links)\r\n      };\r\n\r\n      (tree[o.set][o.subset] as SetSnippet[]).push(reformatted);\r\n    }\r\n    return tree;\r\n  }\r\n\r\n  private label(set: string, subset: string, snip: string): string {\r\n    const key = this.getHelpKey(set, subset, snip, '.Key');\r\n\r\n    let result: string = this.translate.instant(key);\r\n    if (result === key) {\r\n      result = snip;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private getHelpKey(set: string, subset: string, snip: string, addition: string): string {\r\n    return 'SourceEditorSnippets' + '.' + set + '.' + subset + '.' + snip + addition;\r\n  }\r\n\r\n  private help(set: string, subset: string, snip: string): string {\r\n    const key = this.getHelpKey(set, subset, snip, '.Help');\r\n\r\n    let result: string = this.translate.instant(key);\r\n    if (result === key) {\r\n      result = '';\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private linksList(linksString: string): SetSnippetLink[] {\r\n    if (!linksString) { return null; }\r\n\r\n    const links: SetSnippetLink[] = [];\r\n    const llist = linksString.split('\\n');\r\n    for (const l of llist) {\r\n      const pair = l.split(':');\r\n      if (pair.length === 3) {\r\n        const link: SetSnippetLink = {\r\n          name: pair[0].trim(),\r\n          url: pair[1].trim() + ':' + pair[2].trim(),\r\n        };\r\n        links.push(link);\r\n      }\r\n    }\r\n    if (links.length === 0) { return null; }\r\n    return links;\r\n  }\r\n\r\n  /** spm TODO: this happens after snippets are calculated for the first time. Needs to be fixed */\r\n  private loadContentType(\r\n    target: SnippetsSubSubSets,\r\n    type: string,\r\n    prefix: string,\r\n    templateConfiguration: SourceView,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): void {\r\n    this.getFields(templateConfiguration.AppId, type).subscribe(fields => {\r\n      // first add common items if the content-type actually exists\r\n      for (const field of fields) {\r\n        const fieldname = field.StaticName;\r\n        target[fieldname] = {\r\n          key: fieldname,\r\n          label: fieldname,\r\n          snip: this.valuePlaceholder(prefix, fieldname, templateConfiguration),\r\n          help: field.Metadata.merged.Notes || ' (' + field.Type.toLowerCase() + ') '\r\n        };\r\n        // try to add generic snippets specific to this input-type\r\n        const snipDefaults = cloneDeep(target[fieldname]); // must be a copy, because target[fieldname] will grow\r\n        this.attachSnippets(target, prefix, fieldname, field.InputType, snipDefaults, inputTypeSnippets);\r\n      }\r\n\r\n      if (fields.length) {\r\n        const std = ['EntityId', 'EntityTitle', 'EntityGuid', 'EntityType', 'IsPublished', 'Modified'];\r\n        // tslint:disable-next-line:prefer-for-of\r\n        for (let i = 0; i < std.length; i++) {\r\n          target[std[i]] = {\r\n            key: std[i],\r\n            label: std[i],\r\n            snip: this.valuePlaceholder(prefix, std[i], templateConfiguration),\r\n            help: this.translate.instant('SourceEditorSnippets.StandardFields.' + std[i] + '.Help'),\r\n          };\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private valuePlaceholder(obj: string, val: string, templateConfiguration: SourceView): string {\r\n    return (templateConfiguration.Type.indexOf('Razor') > -1)\r\n      ? '@' + obj + '.' + val\r\n      : '[' + obj.replace('.', ':') + ':' + val + ']';\r\n  }\r\n\r\n  private getFields(appId: number, staticName: string): Observable<Field[]> {\r\n    return this.http.get<Field[]>(this.apiUrl(webApiFieldsAll), {\r\n      params: { appid: appId.toString(), staticName },\r\n    }).pipe(\r\n      map(fields => {\r\n        fields = fields.filter(field => field.Type !== DataTypeCatalog.Empty);\r\n        for (const fld of fields) {\r\n          if (!fld.Metadata) continue;\r\n          const md = fld.Metadata;\r\n          const allMd = md.All;\r\n          const typeMd = md[fld.Type];\r\n          const inputMd = md[fld.InputType];\r\n          md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n        }\r\n        return fields;\r\n      }),\r\n    );\r\n  }\r\n\r\n  private attachSnippets(\r\n    target: SnippetsSubSubSets,\r\n    prefix: string,\r\n    fieldname: string,\r\n    inputType: Of<typeof InputTypeCatalog>,\r\n    snipDefaults: SetSnippet,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): void {\r\n    let genericSnippet = inputTypeSnippets[inputType];\r\n    if (inputType.indexOf('-')) { // if it's a sub-type, let's also get the master-type\r\n      const fieldType = inputType.substring(0, inputType.indexOf('-'));\r\n      if (fieldType) {\r\n        const typeSnips = inputTypeSnippets[fieldType];\r\n        if (typeSnips) {\r\n          genericSnippet = genericSnippet ? genericSnippet.concat(typeSnips) : typeSnips;\r\n        }\r\n      }\r\n    }\r\n    if (!genericSnippet) return;\r\n\r\n    if (target[fieldname].more === undefined) {\r\n      target[fieldname].more = {};\r\n    }\r\n    const fieldSnips = target[fieldname].more;\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let g = 0; g < genericSnippet.length; g++) {\r\n      try {\r\n        fieldSnips[fieldname + '-' + genericSnippet[g].name] = Object.assign({}, snipDefaults, {\r\n          key: fieldname + ' - ' + genericSnippet[g].name,\r\n          label: genericSnippet[g].name,\r\n          snip: this.localizeGenericSnippet(genericSnippet[g].content, prefix, fieldname),\r\n          collapse: true,\r\n        } as MoreSnippet);\r\n      } finally { }\r\n    }\r\n  }\r\n\r\n  private localizeGenericSnippet(snip: string, objName: string, fieldName: string): string {\r\n    snip = snip\r\n      .replace(/(\\$\\{[0-9]+\\:)var(\\})/gi, '$1' + objName + '$2')\r\n      .replace(/(\\$\\{[0-9]+\\:)prop(\\})/gi, '$1' + fieldName + '$2');\r\n    return snip;\r\n  }\r\n}\r\n","<div class=\"editor-root\" appToggleDebug [ngClass]=\"{ 'sxc-dark': monacoOptions.theme === '2sxc-dark' }\">\r\n  <div class=\"editor-side-toolbar\">\r\n    <div class=\"button\" [ngClass]=\"{ 'active': activeExplorer === Explorers.Templates }\" tippy=\"Templates\"\r\n      (click)=\"toggleExplorer(Explorers.Templates)\">\r\n      <mat-icon>file_copy</mat-icon>\r\n    </div>\r\n    <div class=\" button\" [ngClass]=\"{ 'active': activeExplorer === Explorers.Snippets }\" tippy=\"Snippets\"\r\n      (click)=\"toggleExplorer(Explorers.Snippets)\">\r\n      <mat-icon>code</mat-icon>\r\n    </div>\r\n  </div>\r\n  <app-code-templates [hidden]=\"activeExplorer !== Explorers.Templates\" [view]=\"active()?.view\"\r\n    [templates]=\"templates()\" (openView)=\"openView($event)\" (createTemplate)=\"createTemplate($event)\">\r\n  </app-code-templates>\r\n  <app-code-snippets [hidden]=\"activeExplorer !== Explorers.Snippets\" [snippets]=\"active()?.explorerSnipps\"\r\n    (insertSnippet)=\"insertSnippet($event)\">\r\n  </app-code-snippets>\r\n  <div class=\"editor-group\">\r\n    @if (tabs().length > 0) {\r\n    <div class=\"tabs-container fancy-scrollbar-dark\">\r\n      @for (tab of tabs(); track tab) {\r\n      <div class=\"tab\" [ngClass]=\"{\r\n              'active': tab.isActive,\r\n              'modified': tab.isModified,\r\n              'loading': tab.isLoading\r\n              }\" (click)=\"openView(tab.viewKey)\">\r\n        <div class=\"tab-label-container\" [tippy]=\"tab.label\" tippyShowDelay=\"750\">\r\n          @if (tab.viewKey.shared) {\r\n          <mat-icon class=\"icon-shared\">share</mat-icon>\r\n          }\r\n          <span class=\"tab-label\">{{ tab.label }}</span>\r\n        </div>\r\n        <div class=\"tab-actions-container\">\r\n          @if (tab.isModified) {\r\n          <mat-icon class=\"tab-action icon-modified\" fontSet=\"material-icons\">circle</mat-icon>\r\n          }\r\n          @if (tab.isLoading) {\r\n          <mat-spinner class=\"spinner\" mode=\"indeterminate\" diameter=\"14\" color=\"white\">\r\n          </mat-spinner>\r\n          }\r\n          <mat-icon class=\"tab-action icon-close\" tippy=\"Close\" appClickStopPropagation\r\n            (click)=\"closeEditor(tab.viewKey)\">close</mat-icon>\r\n        </div>\r\n      </div>\r\n      }\r\n    </div>\r\n    }\r\n    @if (active()?.view) {\r\n    <app-monaco-editor [filename]=\"active()?.view.FileName\" [value]=\"active()?.view.Code\"\r\n      (valueChanged)=\"codeChanged($event, active()?.viewKey)\" [options]=\"monacoOptions\"\r\n      [snippets]=\"active()?.editorSnipps\" [tooltips]=\"active()?.tooltips\" [autoFocus]=\"true\">\r\n    </app-monaco-editor>\r\n    }\r\n  </div>\r\n  @if (activeView()) {\r\n  <button mat-fab mat-elevation-z24 tippy=\"Click to save or CTRL + S\" (click)=\"save()\">\r\n    <mat-icon>done</mat-icon>\r\n  </button>\r\n  }\r\n</div>\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, computed, effect, NgZone, OnDestroy, OnInit, signal, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport type * as Monaco from 'monaco-editor';\r\nimport { forkJoin, fromEvent, of, share, switchMap } from 'rxjs';\r\nimport { Of, transient } from '../../../../core';\r\nimport { CreateFileDialogComponent, CreateFileDialogData, CreateFileDialogResult } from '../create-file-dialog';\r\nimport { isCtrlS } from '../edit/dialog/main/keyboard-shortcuts';\r\nimport { MonacoEditorComponent } from '../monaco-editor';\r\nimport { MonacoEditorComponent as MonacoEditorComponent_1 } from '../monaco-editor/monaco-editor.component';\r\nimport { BaseComponent } from '../shared/components/base.component';\r\nimport { keyIsShared, keyItems } from '../shared/constants/session.constants';\r\nimport { ClickStopPropagationDirective } from '../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../shared/directives/tippy.directive';\r\nimport { ToggleDebugDirective } from '../shared/directives/toggle-debug.directive';\r\nimport { ViewOrFileIdentifier } from '../shared/models/edit-form.model';\r\nimport { RxHelpers } from '../shared/rxJs/rx.helpers';\r\nimport { Context } from '../shared/services/context';\r\nimport { CodeAndEditionWarningsComponent } from './code-and-edition-warnings/code-and-edition-warnings.component';\r\nimport { CodeAndEditionWarningsSnackBarData } from './code-and-edition-warnings/code-and-edition-warnings.models';\r\nimport { Explorers, Tab, ViewInfo, ViewKey } from './code-editor.models';\r\nimport { CodeSnippetsComponent } from './code-snippets/code-snippets.component';\r\nimport { CodeTemplatesComponent } from './code-templates/code-templates.component';\r\nimport { CreateTemplateParams } from './code-templates/code-templates.models';\r\nimport { FileAsset } from './models/file-asset.model';\r\nimport { SourceView } from './models/source-view.model';\r\nimport { SnippetsService } from './services/snippets.service';\r\nimport { SourceService } from './services/source.service';\r\n\r\n@Component({\r\n  selector: 'app-code-editor',\r\n  templateUrl: './code-editor.component.html',\r\n  styleUrls: ['./code-editor.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    MatIconModule,\r\n    CodeTemplatesComponent,\r\n    CodeSnippetsComponent,\r\n    MatProgressSpinnerModule,\r\n    MonacoEditorComponent_1,\r\n    MatButtonModule,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n    ToggleDebugDirective,\r\n  ],\r\n})\r\nexport class CodeEditorComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @ViewChild(MonacoEditorComponent) private monacoEditorRef: MonacoEditorComponent;\r\n\r\n  Explorers = Explorers;\r\n  activeExplorer: Of<typeof Explorers> = Explorers.Templates;\r\n  monacoOptions: Monaco.editor.IStandaloneEditorConstructionOptions = {\r\n    theme: '2sxc-dark',\r\n    tabSize: 2,\r\n    fixedOverflowWidgets: true,\r\n  };\r\n\r\n  #sourceSvc = transient(SourceService);\r\n  #snippetSvc = transient(SnippetsService);\r\n  #titleSvc = transient(Title);\r\n\r\n  templates = signal<FileAsset[]>([]);\r\n  activeView = signal<ViewKey>(undefined);\r\n  #openViews = signal<ViewKey[]>([]);\r\n  #viewInfos = signal<ViewInfo[]>([]);\r\n\r\n  // Computed signal that finds the active view information from the list of viewInfos.\r\n  // It checks if the activeView signal matches any viewKey in the viewInfos list using objectsEqual.\r\n  active = computed(() => {\r\n    const activeView = this.activeView();\r\n    return this.#viewInfos().find(v => RxHelpers.objectsEqual(v.viewKey, activeView));\r\n  })\r\n\r\n  // Each tab object includes the viewKey, label (file name or key), active state,\r\n  // modified state (if the view's code differs from the saved code), and loading state.\r\n  // It checks for matching view information in viewInfos using objectsEqual.\r\n  tabs = computed(() => {\r\n    const openViews = this.#openViews();\r\n    const activeView = this.activeView();\r\n    const viewInfos = this.#viewInfos();\r\n    return openViews.map(viewKey => {\r\n      const viewInfo = viewInfos.find(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n      return {\r\n        viewKey,\r\n        label: viewInfo?.view?.FileName ?? viewKey.key,\r\n        isActive: RxHelpers.objectsEqual(viewKey, activeView),\r\n        isModified: viewInfo?.view?.Code !== viewInfo?.savedCode,\r\n        isLoading: viewInfo?.view == null,\r\n      } satisfies Tab;\r\n    })\r\n  });\r\n\r\n  #urlItems: ViewOrFileIdentifier[];\r\n\r\n  constructor(\r\n    private context: Context,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n    private zone: NgZone,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) {\r\n    super();\r\n    this.context.init(this.route);\r\n    const codeItems: ViewOrFileIdentifier[] = JSON.parse(sessionStorage.getItem(keyItems));\r\n    const isShared = sessionStorage.getItem(keyIsShared) === 'true' ?? false;\r\n    codeItems.forEach(codeItem => {\r\n      // remove leading \"/\" from path\r\n      if (codeItem.Path.startsWith('/')) {\r\n        codeItem.Path = codeItem.Path.substring(1);\r\n      }\r\n      codeItem.IsShared ??= isShared;\r\n    });\r\n    this.#urlItems = codeItems;\r\n\r\n    // Update ViewInfo$ ongoing\r\n    effect(() => {\r\n      const templates = this.templates();\r\n      const openViews = this.#openViews();\r\n\r\n      // If there are no templates, exit early\r\n      if (templates.length === 0) return;\r\n\r\n      let viewInfos = this.#viewInfos();   // Retrieve the current viewInfos signal\r\n\r\n      // Find the `openViews` that are not yet loaded in `viewInfos`\r\n      const notLoaded = openViews.filter(viewKey => !viewInfos.some(v => RxHelpers.objectsEqual(v.viewKey, viewKey)));\r\n      // If all openViews are loaded, exit early\r\n      if (notLoaded.length === 0) return;\r\n\r\n      // Start data requests for the not yet loaded `openViews`\r\n      forkJoin(\r\n        notLoaded.map(viewKey => {\r\n          // Mark the `viewKey` in `viewInfos` to indicate that it is being loaded\r\n          const newViewInfo: ViewInfo = {\r\n            viewKey,\r\n          };\r\n          viewInfos = [...viewInfos, newViewInfo];\r\n\r\n          // Create observables for the view, snippets, and tooltips based on the viewKey\r\n          const view$ = this.#sourceSvc.get(viewKey.key, viewKey.shared, this.#urlItems).pipe(share());\r\n          const snippets$ = view$.pipe(switchMap(view => this.#snippetSvc.getSnippets(view)));\r\n          const tooltips$ = view$.pipe(switchMap(view => this.#snippetSvc.getTooltips(view.Extension.substring(1))));\r\n          return forkJoin([of(viewKey), view$, snippets$, tooltips$]);\r\n        })\r\n      ).subscribe(results => {\r\n        let viewInfos1 = this.#viewInfos();   // Retrieve the current viewInfos signal again\r\n\r\n        results.forEach(([viewKey, view, snippets, tooltips]) => {\r\n          // Find the index of the corresponding viewKey in the current viewInfos\r\n          const selectedIndex = viewInfos1.findIndex(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n          // If the viewKey is not found, exit early\r\n          if (selectedIndex < 0) return;\r\n\r\n          // Update `viewInfos` with new data for the corresponding `viewKey`\r\n          const newViewInfo: ViewInfo = {\r\n            viewKey,\r\n            view,\r\n            explorerSnipps: snippets.sets,\r\n            editorSnipps: snippets.list,\r\n            tooltips,\r\n            savedCode: view.Code,\r\n          };\r\n          viewInfos1 = [...viewInfos1.slice(0, selectedIndex), newViewInfo, ...viewInfos1.slice(selectedIndex + 1)];\r\n\r\n          // Show warnings or other logic based on the loaded views\r\n          this.#showCodeAndEditionWarnings(viewKey, view, templates);\r\n        });\r\n\r\n        this.#viewInfos.set(viewInfos1);  // Set the new `viewInfos` in the signal\r\n      });\r\n\r\n      this.#viewInfos.set(viewInfos);   // Set the initial `viewInfos` before loading the data\r\n    },\r\n      { allowSignalWrites: true }\r\n    );\r\n\r\n    // Update title ongoing\r\n    effect(() => {\r\n      const activeView = this.activeView();\r\n      const viewInfos = this.#viewInfos();\r\n\r\n      // Check if viewInfos exist; exit early if not\r\n      if (!viewInfos) return;\r\n\r\n      // Find the active view information from viewInfos based on activeView\r\n      const active = viewInfos.find(v => RxHelpers.objectsEqual(v.viewKey, activeView));\r\n      const defaultTitle = 'Code Editor'; // Default title to use if no active view is found\r\n      // Construct the new title based on the active view or use the default title\r\n      const newTitle = active == null ? defaultTitle : `${active.view?.FileName} - ${defaultTitle}`;\r\n      const oldTitle = this.#titleSvc.getTitle(); // Get the current title from the title service\r\n\r\n      // If the new title is different from the old title, update it\r\n      if (newTitle !== oldTitle) {\r\n        console.log('newTitle', newTitle); // Log the new title\r\n        this.#titleSvc.setTitle(newTitle);  // Set the new title in the title service\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const initialViews = this.#urlItems.map(item => {\r\n      const viewKey: ViewKey = { key: item.EntityId?.toString() ?? item.Path, shared: item.IsShared };\r\n      return viewKey;\r\n    });\r\n\r\n    this.activeView.set(initialViews[0]);\r\n    this.#openViews.set(initialViews);\r\n\r\n    this.#attachListeners();\r\n\r\n    // Load templates\r\n    this.#sourceSvc.getAll().subscribe(templates => {\r\n      this.templates.set(templates);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  toggleExplorer(explorer: Of<typeof Explorers>): void {\r\n    this.activeExplorer = (this.activeExplorer !== explorer) ? explorer : null;\r\n  }\r\n\r\n  createTemplate(params: CreateTemplateParams): void {\r\n    // This FileLocationDialogComponent dialog is currently never going to be opened because it has been replaced by mat-menu\r\n    // in the code-templates.component.html template. If you want to use the dialog instead of the menu, you need to remove the\r\n    // mat-menu and replace it with a button that opens the dialog with empty parameters.\r\n    // Dialog has been replaced by menu because from update to Angular 16 CreateFileDialogComponent wasn't opening anymore if\r\n    // FileLocationDialogComponent dialog was used.\r\n    // if (params.isShared == null) {\r\n    //   const fileLocationDialogRef = this.dialog.open(FileLocationDialogComponent, {\r\n    //     autoFocus: false,\r\n    //     viewContainerRef: this.viewContainerRef,\r\n    //     width: '650px',\r\n    //   });\r\n    //   fileLocationDialogRef.afterClosed().subscribe((isShared?: boolean) => {\r\n    //     if (isShared == null) return;\r\n    //     params.isShared = isShared;\r\n    //     this.createTemplate(params);\r\n    //   });\r\n    //   return;\r\n    // }\r\n\r\n    const createFileDialogData: CreateFileDialogData = {\r\n      folder: params.folder,\r\n      global: params.isShared,\r\n      purpose: params.folder === 'api' || params.folder?.startsWith('api/') ? 'Api' : undefined,\r\n    };\r\n    const createFileDialogRef = this.matDialog.open(CreateFileDialogComponent, {\r\n      autoFocus: false,\r\n      data: createFileDialogData,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n\r\n    createFileDialogRef.afterClosed().subscribe((result?: CreateFileDialogResult) => {\r\n      if (!result) return;\r\n\r\n      this.#sourceSvc.create(result.name, params.isShared, result.templateKey).subscribe(() => {\r\n        this.#sourceSvc.getAll().subscribe(files => {\r\n          this.templates.set(files);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  insertSnippet(snippet: string): void {\r\n    this.monacoEditorRef?.insertSnippet(snippet);\r\n  }\r\n\r\n  codeChanged(code: string, viewKey: ViewKey): void {\r\n    let viewInfos = this.#viewInfos();\r\n    const selectedIndex = viewInfos.findIndex(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n    const selectedViewInfo = viewInfos[selectedIndex];\r\n    const newViewInfo: ViewInfo = {\r\n      ...selectedViewInfo,\r\n      view: {\r\n        ...selectedViewInfo.view,\r\n        Code: code,\r\n      },\r\n    };\r\n    viewInfos = [...viewInfos.slice(0, selectedIndex), newViewInfo, ...viewInfos.slice(selectedIndex + 1)];\r\n    this.#viewInfos.set(viewInfos);\r\n  }\r\n\r\n  openView(viewKey: ViewKey): void {\r\n    // fix viewKey because it can be a templateId or a path, and file might already be open\r\n    viewKey = this.#viewInfos().find(\r\n      v => !RxHelpers.objectsEqual(v.viewKey, viewKey) && v.view?.FileName === viewKey.key && v.view?.IsShared === viewKey.shared\r\n    )?.viewKey ?? viewKey;\r\n\r\n    const oldActiveView = this.activeView();\r\n    if (!RxHelpers.objectsEqual(oldActiveView, viewKey)) {\r\n      this.activeView.set(viewKey);\r\n    }\r\n    const oldOpenViews = this.#openViews();\r\n    if (!oldOpenViews.some(v => RxHelpers.objectsEqual(v, viewKey))) {\r\n      const newOpenViews = [...oldOpenViews, viewKey];\r\n      this.#openViews.set(newOpenViews);\r\n    }\r\n  }\r\n\r\n  closeEditor(viewKey: ViewKey): void {\r\n    const oldOpenViews = this.#openViews();\r\n    const newOpenViews = oldOpenViews.filter(key => !RxHelpers.objectsEqual(key, viewKey));\r\n\r\n    const oldActiveView = this.activeView();\r\n    if (RxHelpers.objectsEqual(oldActiveView, viewKey)) {\r\n      const newActiveView = oldOpenViews[oldOpenViews.findIndex(v => RxHelpers.objectsEqual(v, oldActiveView)) - 1] ?? newOpenViews[0];\r\n      this.activeView.set(newActiveView);\r\n    }\r\n    this.#openViews.set(newOpenViews);\r\n  }\r\n\r\n  save(viewKey?: ViewKey): void {\r\n    viewKey ??= this.activeView();\r\n    const viewInfo = this.#viewInfos().find(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n    if (viewInfo?.view == null) return;\r\n\r\n    this.snackBar.open('Saving...');\r\n    const codeToSave = viewInfo.view.Code;\r\n    this.#sourceSvc.save(viewKey.key, viewKey.shared, viewInfo.view, this.#urlItems).subscribe({\r\n      next: res => {\r\n        if (!res) {\r\n          this.snackBar.open('Failed', null, { duration: 2000 });\r\n          return;\r\n        }\r\n\r\n        let newViewInfos = [...this.#viewInfos()];\r\n        const selectedIndex = newViewInfos.findIndex(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n        if (selectedIndex < 0) return;\r\n\r\n        const selectedViewInfo = newViewInfos[selectedIndex];\r\n        const newViewInfo: ViewInfo = {\r\n          ...selectedViewInfo,\r\n          savedCode: codeToSave,\r\n        };\r\n        newViewInfos = [...newViewInfos.slice(0, selectedIndex), newViewInfo, ...newViewInfos.slice(selectedIndex + 1)];\r\n        this.#viewInfos.set(newViewInfos);\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n      },\r\n      error: () => this.snackBar.open('Failed', null, { duration: 2000 }),\r\n    });\r\n  }\r\n\r\n  /** Show info about editions if other files with the same name exist */\r\n  #showCodeAndEditionWarnings(viewKey: ViewKey, view: SourceView, files: FileAsset[]): void {\r\n    const pathAndName = view.FileName;\r\n    const pathSeparator = pathAndName.indexOf('/') > -1 ? pathAndName.lastIndexOf('/') + 1 : 0;\r\n    const pathWithSlash = pathSeparator === 0 ? '' : pathAndName.substring(0, pathSeparator);\r\n    const fullName = pathAndName.substring(pathSeparator);\r\n    const name = fullName.substring(0, fullName.length - view.Extension.length);\r\n    const nameCode = name + '.code' + view.Extension;\r\n    // find out if we also have a code file\r\n    const codeFile = files.find(file => file.Path === pathWithSlash + nameCode && file.Shared === view.IsShared);\r\n    const otherEditions = files.filter(file => file.Path.endsWith(fullName) && file.Shared === view.IsShared).length - 1;\r\n\r\n    if (codeFile || otherEditions) {\r\n      const snackBarData: CodeAndEditionWarningsSnackBarData = {\r\n        fileName: fullName,\r\n        codeFile: codeFile?.Path,\r\n        edition: this.#urlItems\r\n          .find(i => i.EntityId?.toString() === viewKey.key && i.IsShared === view.IsShared && i.Path === view.FileName)?.Edition,\r\n        otherEditions,\r\n        openCodeBehind: false,\r\n      };\r\n      const snackBarRef = this.snackBar.openFromComponent(CodeAndEditionWarningsComponent, {\r\n        data: snackBarData,\r\n        duration: 10000,\r\n      });\r\n\r\n      snackBarRef.onAction().subscribe(() => {\r\n        if ((snackBarRef.containerInstance.snackBarConfig.data as CodeAndEditionWarningsSnackBarData).openCodeBehind) {\r\n          const openViewKey: ViewKey = { key: codeFile?.Path, shared: codeFile?.Shared };\r\n          this.openView(openViewKey);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  #attachListeners(): void {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<BeforeUnloadEvent>(window, 'beforeunload')\r\n          .subscribe(event => {\r\n            const allSaved = !this.#viewInfos().some(v => v.view != null && v.view.Code !== v.savedCode);\r\n            if (allSaved) return;\r\n            event.preventDefault();\r\n            event.returnValue = ''; // fix for Chrome\r\n          })\r\n      );\r\n      this.subscriptions.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown')\r\n          .subscribe(event => {\r\n            if (!isCtrlS(event)) return;\r\n            event.preventDefault();\r\n            this.zone.run(() => this.save());\r\n          })\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { GlobalConfigService } from '../services/global-config.service';\r\n\r\n@Directive({\r\n  selector: '[appToggleDebug]',\r\n  standalone: true\r\n})\r\nexport class ToggleDebugDirective {\r\n\r\n  constructor(private globalConfigService: GlobalConfigService) { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    const CTRL_SHIFT_ALT_CLICK = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.shiftKey && event.altKey;\r\n    if (CTRL_SHIFT_ALT_CLICK) {\r\n      this.globalConfigService.toggleDebugEnabled();\r\n      window.getSelection().removeAllRanges();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { Of } from '../../../../../core';\r\nimport { ContentType } from '../../app-administration/models/content-type.model';\r\nimport { webApiTypeRoot } from '../../app-administration/services';\r\nimport { HttpServiceBase } from '../services/http-service-base';\r\nimport { Field, FieldInputTypeOption } from './field.model';\r\nimport { InputTypeCatalog } from './input-type-catalog';\r\nimport { InputTypeMetadata } from './input-type-metadata.model';\r\n\r\nexport const webApiFieldsAll = 'admin/field/all';\r\n\r\n// All WebApi paths - to easily search/find when looking for where these are used\r\nconst webApiDataTypes = 'admin/field/DataTypes';\r\nconst webApiReservedNames = 'admin/field/ReservedNames';\r\nconst webApiAddInheritedField = 'admin/field/AddInheritedField';\r\nconst webApiInputTypes = 'admin/field/InputTypes';\r\nconst webApiInputType = 'admin/field/InputType';\r\nconst webApiShare = 'admin/field/Share';\r\nconst webApiInherit = 'admin/field/Inherit';\r\nconst webApiSort = 'admin/field/Sort';\r\nconst webApiSetTitle = webApiTypeRoot + 'SetTitle';\r\nconst webApiRename = 'admin/field/Rename';\r\nconst webApiDelete = 'admin/field/Delete';\r\nconst webApiAdd = 'admin/field/Add';\r\nconst webApiFieldsGetShared = 'admin/field/GetSharedFields';\r\nconst webApiGetAncestors = 'admin/field/GetAncestors';\r\nconst webApiGetDescendants = 'admin/field/GetDescendants';\r\n\r\n\r\n@Injectable()\r\nexport class ContentTypesFieldsService extends HttpServiceBase {\r\n\r\n  protected paramsAppId(more: Record<string, string | number | boolean | ReadonlyArray<string | number | boolean>> = {}) {\r\n    return {\r\n      params: {\r\n        appid: this.appId,\r\n        ...more,\r\n      },\r\n    };\r\n  }\r\n\r\n  typeListRetrieve() {\r\n    return this.http.get<string[]>(this.apiUrl(webApiDataTypes), this.paramsAppId());\r\n  }\r\n\r\n  getInputTypesList() {\r\n    return this.http\r\n      .get<InputTypeMetadata[]>(this.apiUrl(webApiInputTypes), this.paramsAppId())\r\n      .pipe(\r\n        map(inputConfigs => {\r\n          const inputTypeOptions = inputConfigs.map(config => ({\r\n            dataType: config.Type.substring(0, config.Type.indexOf('-')),\r\n            inputType: config.Type,\r\n            label: config.Label,\r\n            description: config.Description,\r\n            isDefault: config.IsDefault,\r\n            isObsolete: config.IsObsolete,\r\n            isRecommended: config.IsRecommended,\r\n            obsoleteMessage: config.ObsoleteMessage,\r\n            icon: config.IsDefault ? 'star' : config.IsRecommended ? 'star_outline' : null,\r\n          } satisfies FieldInputTypeOption));\r\n          return inputTypeOptions;\r\n        }),\r\n      );\r\n  }\r\n\r\n  getReservedNames() {\r\n    return this.http.get<Record<string, string>>(this.apiUrl(webApiReservedNames));\r\n  }\r\n\r\n  /** Get all fields for some content type */\r\n  getFields(contentTypeStaticName: string) {\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsAll), this.paramsAppId({ staticName: contentTypeStaticName }))\r\n      .pipe(\r\n        map(fields => {\r\n          if (fields) {\r\n            for (const fld of fields) {\r\n              if (!fld.Metadata) continue;\r\n              const md = fld.Metadata;\r\n              const allMd = md.All;\r\n              const typeMd = md[fld.Type];\r\n              const inputMd = md[fld.InputType];\r\n              md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n            }\r\n          }\r\n          return fields;\r\n        }),\r\n      );\r\n  }\r\n\r\n  /** Get all possible sharable fields for a new sharing */\r\n  getShareableFields() {\r\n    return this.http.get<Field[]>(this.apiUrl(webApiFieldsGetShared), this.paramsAppId());\r\n  }\r\n\r\n  /**\r\n   * Get sharable fields which are possible for this attribute.\r\n   * Reason is that eg. a bool-attribute can only receive metadata from a bool attribute, etc.\r\n   * @param attributeId the existing attributeId which will receive the new metadata\r\n   */\r\n  getShareableFieldsFor(attributeId: number) {\r\n    return this.#getShareinfo(webApiFieldsGetShared, attributeId);\r\n    // return this.http.get<Field[]>(this.apiUrl(webApiFieldsGetShared), this.paramsAppId({ attributeId }));\r\n  }\r\n\r\n  getAncestors(attributeId: number) {\r\n    return this.#getShareinfo(webApiGetAncestors, attributeId);\r\n  }\r\n\r\n  getDescendants(attributeId: number) {\r\n    return this.#getShareinfo(webApiGetDescendants, attributeId);\r\n  }\r\n\r\n  #getShareinfo(endpoint: string, attributeId: number) {\r\n    return this.http.get<Field[]>(this.apiUrl(endpoint), this.paramsAppId({ attributeId }));\r\n  }\r\n\r\n  addInheritedField(targetContentTypeId: number, sourceType: string, sourceFieldGuid: string /* guid */, name: string) {\r\n    return this.http.post<number>(this.apiUrl(webApiAddInheritedField), null, this.paramsAppId({\r\n      contentTypeId: targetContentTypeId.toString(),\r\n      sourceType,\r\n      sourceField: sourceFieldGuid,\r\n      name,\r\n    }));\r\n  }\r\n\r\n  share(attributeId: number, share: boolean = true) {\r\n    return this.http.post<null>(this.apiUrl(webApiShare), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        attributeId: attributeId.toString(),\r\n        share,\r\n      },\r\n    });\r\n  }\r\n\r\n  inherit(attributeId: number, sourceFieldGuid: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiInherit), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        attributeId: attributeId.toString(),\r\n        inheritMetadataOf: sourceFieldGuid,\r\n      },\r\n    });\r\n  }\r\n\r\n  reOrder(idArray: number[], contentType: ContentType) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiSort), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentType.Id.toString(),\r\n        order: JSON.stringify(idArray),\r\n      },\r\n    });\r\n  }\r\n\r\n  setTitle(item: Field, contentType: ContentType) {\r\n    return this.http.post<null>(this.apiUrl(webApiSetTitle), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  rename(fieldId: number, contentTypeId: number, newName: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiRename), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentTypeId.toString(),\r\n        attributeId: fieldId.toString(),\r\n        newName,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(item: Field, contentType: ContentType) {\r\n    if (item.IsTitle)\r\n      throw new Error('Can\\'t delete Title');\r\n\r\n    return this.http.delete<boolean>(this.apiUrl(webApiDelete), {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  add(newField: Partial<Field>, contentTypeId: number) {\r\n    return this.http.post<number>(this.apiUrl(webApiAdd), null, {\r\n      params: {\r\n        AppId: this.appId,\r\n        ContentTypeId: contentTypeId.toString(),\r\n        Id: newField.Id.toString(),\r\n        Type: newField.Type,\r\n        InputType: newField.InputType,\r\n        StaticName: newField.StaticName,\r\n        IsTitle: newField.IsTitle.toString(),\r\n        Index: newField.SortOrder.toString(),\r\n      }\r\n    });\r\n  }\r\n\r\n  updateInputType(attributeId: number, field: string, inputType: Of<typeof InputTypeCatalog>) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiInputType), null, {\r\n      params: { appId: this.appId, attributeId, field, inputType }\r\n    });\r\n  }\r\n}\r\n","export const DataTypeCatalog = {\r\n  Boolean: 'Boolean',\r\n  Custom: 'Custom',\r\n  DateTime: 'DateTime',\r\n  Empty: 'Empty',\r\n  Entity: 'Entity',\r\n  Hyperlink: 'Hyperlink',\r\n  Number: 'Number',\r\n  String: 'String',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","import { Injectable } from '@angular/core';\r\nimport { filter, map, Observable, shareReplay, switchMap } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { EntityLightIdentifier } from '../../../../../edit-types/src/EntityLight';\r\nimport { classLog } from '../logging';\r\nimport { HttpServiceBase } from './http-service-base';\r\nimport { QueryService } from './query.service';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  getEntities: false,\r\n  getAvailableEntities: false,\r\n  delete: false,\r\n};\r\n\r\nexport const webApiEntityRoot = 'admin/entity/';\r\nexport const webApiEntityList = 'admin/entity/list';\r\n\r\n@Injectable()\r\nexport class EntityService extends HttpServiceBase {\r\n\r\n  log = classLog({ EntityService }, logSpecs);\r\n\r\n  private queryService = transient(QueryService);\r\n\r\n  /**\r\n   * Get entities based on the content type name.\r\n   * As of 2024-04-29 only used in REST API.\r\n   * @param params\r\n   * @returns\r\n   */\r\n  getEntities$(params: Observable<{ contentTypeName: string }>): Observable<EntityLightIdentifier[]> {\r\n    this.log.fnIf('getEntities');\r\n    return params.pipe(\r\n      filter(p => p != null),\r\n      switchMap(p => this.getAvailableEntities(p.contentTypeName).pipe(shareReplay(1))),\r\n    );\r\n  }\r\n\r\n  private getAvailableEntities(contentTypeName: string, entitiesFilter?: string[]): Observable<EntityLightIdentifier[]> {\r\n    var log = this.log.fnIf('getAvailableEntities');\r\n    return this.queryService.getEntities({\r\n      contentTypes: [contentTypeName],\r\n      itemIds: entitiesFilter,\r\n      fields: 'Id,Guid,Title',\r\n      log: 'getAvailableEntities'\r\n    }).pipe(\r\n      map(data => data.Default)\r\n    );\r\n  }\r\n\r\n  delete(appId: number, contentType: string, entityId: number, force: boolean, parentId?: number, parentField?: string): Observable<null> {\r\n    this.log.fnIf('delete', { appId, contentType, entityId, force, parentId, parent });\r\n    return this.http.delete<null>(this.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: {\r\n        contentType,\r\n        id: entityId.toString(),\r\n        appId,\r\n        force: force.toString(),\r\n        ...(parentId && { parentId: parentId.toString() }),\r\n        ...(parentId && parentField && { parentField }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { classLog } from '../logging';\r\nimport { QueryStreams } from '../models/query-stream.model';\r\nimport { Context } from './context';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  getAvailableEntities: false,\r\n  getEntities: false,\r\n};\r\n\r\n@Injectable()\r\nexport class QueryService {\r\n\r\n  log = classLog({QueryService}, logSpecs);\r\n\r\n  constructor(private http: HttpClient, private context: Context) { }\r\n\r\n  getFromQuery(queryUrl: string, params: string, fields: string, entitiesFilter?: string[]): Observable<QueryStreams> {\r\n    this.log.fnIf('getAvailableEntities', { queryUrl, params, fields, entitiesFilter });\r\n    // Check if any params we should auto-add are already set (like in a query which has these params set in the configuration)\r\n    const hasParams = !!params;\r\n    const paramsLower = params?.toLocaleLowerCase() ?? '';\r\n    const hasAppId = paramsLower.includes('appid=') ?? false;\r\n    const allParams = ''\r\n      + (hasAppId ? '' : `&appId=${this.context.appId}`)\r\n      + (hasParams ? `&${params}` : '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(`app/auto/query/${queryUrl}?${urlParams}`,\r\n      {\r\n        Guids: entitiesFilter,\r\n      },\r\n    );\r\n  }\r\n\r\n  getEntities({ contentTypes, itemIds, fields, log }: { contentTypes: string[]; itemIds: string[]; fields: string; log: string }): Observable<QueryStreams> {\r\n    this.log.fnIf(`getEntities`, { log, contentTypes, itemIds, fields });\r\n    const allParams =\r\n      '&typeNames=' + (contentTypes?.join(',') ?? '')\r\n      + `&appId=${this.context.appId}`\r\n      + '&itemIds=' + (itemIds?.join(',') ?? '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(\r\n      `app/auto/query/System.EntityPicker/Default?${urlParams}`,\r\n      {}\r\n    );\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}