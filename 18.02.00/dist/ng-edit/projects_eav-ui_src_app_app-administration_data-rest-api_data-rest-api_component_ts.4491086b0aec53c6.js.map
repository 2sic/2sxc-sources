{"version":3,"file":"projects_eav-ui_src_app_app-administration_data-rest-api_data-rest-api_component_ts.4491086b0aec53c6.js","mappings":"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","names":["i0","contentType_r1","StaticName","Label","DataRestApiComponent_Conditional_5_For_1_Template","ctx","sort","DataRestApiComponent","#contentTypesSvc","#dialogRouter","constructor","fb","this","transient","ContentTypesService","DialogRoutingService","contentTypes$","BehaviorSubject","undefined","contentTypes","ngOnInit","fetchData","contentTypeForm","group","contentType","retrieveContentTypes","subscribe","next","urlSegments","url","split","urlStaticName","length","selectedContentType","find","get","setValue","openRestApi","event","navParentFirstChild","i1","selectors","standalone","features","decls","vars","consts","template","rf","$event","DataRestApiComponent_Conditional_5_Template","tmp_1_0","MatSelectModule","i2","i3","i4","MatButtonModule","MatCardModule","MatIconModule","ReactiveFormsModule","AsyncPipe","RouterOutlet","SxcGridModule","encapsulation","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","HttpServiceBase","getAll","http","apiUrl","webApiEntityList","params","appId","importQuery","file","from","toBase64","pipe","switchMap","fileBase64","post","AppId","ContentBase64","map","success","Success","Messages","clonePipeline","id","Id","toString","delete","__ngFactoryType__","factory","Éµfac","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","import","formData","FormData","append","zoneId","export","window","open","getPolymorphism","getUsage","guid","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","readAsText"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/data-rest-api/data-rest-api.component.html","./projects/eav-ui/src/app/app-administration/data-rest-api/data-rest-api.component.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts"],"sourcesContent":["<form [formGroup]=\"contentTypeForm\">\r\n  <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n    <mat-label>Content-Type</mat-label>\r\n    <mat-select formControlName=\"contentType\" (valueChange)=\"openRestApi($event)\">\r\n      @if (contentTypes$ | async; as contentTypes) {\r\n        @for (contentType of contentTypes.sort() ; track contentType) {\r\n        <mat-option [value]=\"contentType.StaticName\" >\r\n          {{ contentType.Label }}\r\n        </mat-option>\r\n        }\r\n      }\r\n    </mat-select>\r\n  </mat-form-field>\r\n</form>\r\n\r\n<router-outlet></router-outlet>\r\n","import { AsyncPipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { DevRestDataComponent } from '../../dev-rest/data/data.component';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { ContentType } from '../models';\r\nimport { ContentTypesService } from '../services';\r\n\r\n@Component({\r\n  selector: 'app-data-rest-api',\r\n  standalone: true,\r\n  imports: [\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    ReactiveFormsModule,\r\n    AsyncPipe,\r\n    DevRestDataComponent,\r\n    RouterOutlet,\r\n    SxcGridModule,\r\n  ],\r\n  templateUrl: './data-rest-api.component.html',\r\n})\r\nexport class DataRestApiComponent {\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  contentTypes$ = new BehaviorSubject<ContentType[]>(undefined);\r\n  contentTypes: ContentType[] = [];\r\n\r\n  contentTypeForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchData();\r\n    this.contentTypeForm = this.fb.group({\r\n      contentType: ['']\r\n    });\r\n  }\r\n\r\n  fetchData() {\r\n    this.#contentTypesSvc.retrieveContentTypes(\"Default\").subscribe(\r\n      (contentTypes: ContentType[]) => {\r\n        this.contentTypes$.next(contentTypes);\r\n        // When Route are reload and have some StaticName in the Route\r\n        const urlSegments = this.#dialogRouter.url.split('/');\r\n        const urlStaticName = urlSegments[urlSegments.length - 1]\r\n\r\n        const selectedContentType = contentTypes.find(contentType => contentType.StaticName === urlStaticName);\r\n        if (selectedContentType)\r\n          this.contentTypeForm.get('contentType').setValue(selectedContentType.StaticName);\r\n      }\r\n    );\r\n  }\r\n\r\n  openRestApi(event: string): void {\r\n    if (!event) return;\r\n    this.#dialogRouter.navParentFirstChild([`${event}`]);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Query } from '../models/query.model';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService extends HttpServiceBase {\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get<Query[]>(this.apiUrl(webApiEntityList), {\r\n      params: { appId: this.appId, contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiQueryImport), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get<null>(this.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService extends HttpServiceBase {\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.apiUrl(webApiViews), {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.appId, guid }\r\n    });\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n"],"x_google_ignoreList":[]}