{"version":3,"file":"projects_eav-ui_src_app_visual-query_visual-query_component_ts.d4b7e6e0a5c43681.js","mappings":"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","names":["MousedownStopPropagationDirective","onMousedown","event","stopPropagation","selectors","hostBindings","rf","ctx","i0","$event","ArrayHelpers","toggleInArray","item","array","index","indexOf","push","splice","mapUntilChanged","fn","pipe","distinctUntilChanged","map","mapUntilObjChanged","isEqual","guiTypes","App","Name","Label","Icon","UiHint","Cache","Filter","Logic","Lookup","Modify","Security","Sort","Source","Target","Unknown","Debug","System","calculateTypeInfos","pipelineDataSources","dataSources","typeInfos","pipelineDataSource","typeInfo","ds","find","PartAssemblyAndType","PrimaryType","DynamicIn","DynamicOut","HelpLink","EnableConfig","EntityGuid","QueryDefinitionService","HttpServiceBase","fetchPipeline","pipelineEntityId","this","http","get","webApiQueryGet","params","appId","id","toString","pipelineModel","DataSources","length","buildDefaultModel","fixPipelineDataSources","templateDataSources","eavConstants","pipelineDesigner","defaultPipeline","templateDS","dataSource","Description","EntityId","undefined","VisualDesignerData","Pipeline","StreamWiring","streamWiring","some","pipelineDS","outDataSource","outDs","Top","Left","fetchDataSources","webApiQueryDataSources","appid","zoneId","ContentType","Difficulty","dataSourceDifficulties","default","In","Out","TypeNameForUi","typeNameFilter","input","format","globalParts","split","classFullNameParts","savePipeline","pipeline","post","webApiQuerySave","Id","newPipelineModel","runPipeline","top","webApiQueryRun","debugStream","source","sourceOut","webApiQueryDebugStream","from","out","__ngFactoryType__","factory","ɵfac","ctx_r0","name","sourceName","option_r3","_r2","$implicit","show","QueryResultComponent_For_18_Conditional_2_Template","QueryResultComponent_For_18_Conditional_3_Template","param_r4","QueryResultComponent_Conditional_22_div_1_Template","QueryResultComponent_Conditional_22_For_5_Template","parameters","source_r5","value","Definition","config_r6","key","QueryResultComponent_For_37_Conditional_2_Template","QueryResultComponent_For_37_For_10_Template","Guid","Type","Configuration","Error","stream_r7","SourceOut","TargetIn","Count","QueryResultComponent","constructor","dialogData","dialog","visualQueryService","ngOnInit","pipelineModel$","Params","filter","el","testParams","TestParameters","concat","timeUsed","result","QueryTimer","Milliseconds","ticksUsed","Ticks","optionsForTop","Query","sources","Sources","streams","Streams","closeDialog","close","original","MAT_DIALOG_DATA","i1","i2","standalone","features","decls","vars","consts","template","QueryResultComponent_Conditional_4_Template","QueryResultComponent_div_13_Template","QueryResultComponent_Conditional_15_Template","QueryResultComponent_Conditional_16_Template","QueryResultComponent_For_18_Template","QueryResultComponent_Conditional_22_Template","QueryResultComponent_div_24_Template","QueryResultComponent_For_37_Template","QueryResultComponent_div_40_Template","QueryResultComponent_For_53_Template","MatButtonModule","i3","MatIconModule","i4","MatTabsModule","i5","JsonPipe","KeyValuePipe","styles","StreamErrorResultComponent","errorData","openInsights","window","open","$2sxc","apiUrl","MatDialogActions","VisualQueryStateService","ServiceBase","#contentTypesSvc","#metadataSvc","#queryDefSvc","#dialogRoute","#titleSvc","#pipelineId","#refreshPipeline","#refreshDataSourceConfigs","snackBar","matDialog","viewContainerRef","zone","changeDetectorRef","super","transient","ContentTypesService","MetadataService","DialogRoutingService","Title","BehaviorSubject","dataSources$","putEntityCountOnConnections$","Subject","dataSourceConfigs$","parseInt","getParam","ngOnDestroy","complete","init","#fetchDataSources","#fetchPipeline","#attachKeyboardSave","doOnDialogClosed","editPipelineEntity","#savePipeline","form","items","EditPrep","editId","formUrl","convertFormToUrl","navRelative","saveAndRun","save","run","showDataSourceDetails","showDetails","query","cloneDeep","designerData","JsonHelpers","tryParse","ShowDataSourceDetails","JSON","stringify","next","addDataSource","removeDataSource","pipelineDataSourceGuid","connections","streamsOut","StreamsOut","renameDataSource","changeDataSourceDescription","description","changeConnections","changeDataSourcePosition","position","#calculateDataSourceConfigs","dataSourceConfigs","forEach","Metadata","metadataItem","Object","entries","attributeName","attributeValue","includes","Array","isArray","editDataSource","contentTypeName","targetType","keyType","metadata","entity","getMetadata","subscribe","Items","retrieveContentType","contentType","duration","newMetadata","error","callback","pipelineResult","queryResult","#showQueryResult","console","warn","setTimeout","stream","#showStreamErrorResult","streamResult","_","refreshPipeline","refreshDataSourceConfigs","showSnackBar","setTitle","autoFocus","backdropClass","closeOnNavigation","data","panelClass","markForCheck","ErrorData","runOutsideAngular","subscriptions","add","fromEvent","snapshot","firstChild","isCtrlS","preventDefault","dataSource_r6","_r5","ctx_r1","AddExplorerComponent_Conditional_0_For_6_Conditional_5_For_2_Template","trackDataSources","group_r4","_r3","toggleItem","AddExplorerComponent_Conditional_0_For_6_Conditional_5_Template","tmp_14_0","toggledItems","_r1","toggleDifficulty","AddExplorerComponent_Conditional_0_For_6_Template","trackGroups","sorted","AddExplorerComponent","difficulties","difficulty$","viewModel$","combineLatest","difficulty","filterAndSortDataSources","maxDifficulty","filtered","sort","a","b","toLocaleLowerCase","localeCompare","type","checked","advanced","AddExplorerComponent_Conditional_0_Template","tmp_0_0","MatSlideToggleModule","AsyncPipe","TippyDirective","logSpecs","all","getEndpointOverlays","getEndpointInfo","buildSourceEndpoint","buildTargetEndpoint","EndpointsHelper","plumb","log","classLog","isSource","fnIf","r","location","label","cssClass","endpointName","isDynamic","l","required","trimmed","trim","endsWith","substring","style","sourceEndpoint","paintStyle","fill","radius","maxConnections","anchor","faces","overlays","events","click","endpointOrOverlay","onChangeLabel","targetEndpoint","isTarget","dropOptions","hoverClass","activeClass","RenameStreamComponent_Conditional_9_Conditional_4_Template","RenameStreamComponent_Conditional_9_Conditional_5_Template","pipelineResultExists","controls","touched","errors","scopeOption_r3","RenameStreamComponent_Conditional_10_Conditional_0_For_5_Template","scopeOptions","labelOption_r4","RenameStreamComponent_Conditional_10_Conditional_4_For_2_Template","labelOptions","RenameStreamComponent_Conditional_10_Conditional_0_Template","RenameStreamComponent_Conditional_10_Conditional_4_Template","RenameStreamComponent_Conditional_10_Conditional_5_Template","toggleGuidedLabel","RenameStreamComponent_Conditional_10_Conditional_13_Template","advancedMode","guidedLabel","_c0","toggleAdvancedMode","RenameStreamComponent","BaseComponent","hostClass","#buildForm","rename","formValue","getRawValue","UntypedFormGroup","UntypedFormControl","Validators","scope","scopes","valueChanges","startWith","values","Scope","patchValue","getScopes","s","o","hostVars","RenameStreamComponent_Conditional_9_Template","RenameStreamComponent_Conditional_10_Template","RenameStreamComponent_Conditional_13_Template","valid","FormsModule","ReactiveFormsModule","MatFormFieldModule","i6","MatInputModule","i7","MatSelectModule","i8","i9","MatOptionModule","NgClass","i10","FieldHintComponent","ClickStopPropagationDirective","encapsulation","addEndpoint","dataSrcIdPrefix","Plumber","#instance","#lineCount","#linePaintDefault","#lineColors","#maxCols","#uuidColorMap","#bulkDelete","#dialog","#endpoints","jsPlumbRoot","onConnectionsChanged","onDragend","onDebugStream","stroke","strokeWidth","outlineStroke","outlineWidth","jsPlumb","getInstance","#getInstanceDefaults","batch","#initDomDataSources","#initWirings","#bindEvents","repaintEverything","destroy","reset","unbindContainer","removeEndpointsOnDataSource","elementId","selectEndpoints","element","delete","getAllConnections","connection","From","sourceId","replace","endpoints","getOverlay","To","targetId","getStreamsOut","target","each","endpoint","join","putEntityCountOnConnections","sourceElementId","targetElementId","fromUuid","toUuid","getEndpoint","getUuid","setLabel","overlay","AllowEdit","#nextLinePaintStyle","uuid","assign","container","Container","Connector","curviness","PaintStyle","HoverPaintStyle","fnCond","domDataSource","querySelector","draggable","grid","stop","finalPos","outCount","#addEndpoint","inCount","in","targetEndpointUnlimited","makeTarget","makeSource","end","wirings","inGroups","groupBy","wire","outGroups","guid","pipeDataSource","connect","uuids","message","to","isIn","queryDs","count","d","connectionList","hasDynamic","endpointInfo","angled","model","enabled","addClass","width","afterClosed","newLabel","bind","info","deleteEndpoint","deleteConnection","fireEvent","endpointLabel","labelPrompt","getLabel","getEndpoints","canvas","classList","contains","Math","floor","random","arr","reduce","groups","dataSource_r3","ctx_r3","configureDataSource","vm_r6","openHelp","_r7","remove","config_r8","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_For_3_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_5_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_6_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_8_Template","allowEdit","editName","editDescription","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_24_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_25_Template","_c2","Width","_c3","isOutDataSource","getTypeName","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Template","PlumbEditorComponent_Conditional_0_Conditional_2_Template","hardReset","ngAfterViewInit","PlumbEditorComponent","#plumber","#scriptLoaded$","#queryDefinitionSvc","loadScripts","test","src","pipelineDesignerData$","pipelineDesignerData","detectChanges","domDataSourcesLoaded$","domDataSourcesRef","changes","scriptLoaded","domDataSourcesLoaded","domRootRef","nativeElement","partAssemblyAndType","confirm","url","newName","prompt","newDescription","viewQuery","PlumbEditorComponent_Conditional_0_Template","NgStyle","param_r3","RunExplorerComponent_Conditional_0_Conditional_20_For_2_Template","pipelineModel_r4","param_r5","RunExplorerComponent_Conditional_0_Conditional_24_For_2_Template","_r6","RunExplorerComponent_Conditional_0_Conditional_27_Conditional_0_For_8_Template","warnings_r8","RunExplorerComponent_Conditional_0_Conditional_27_Conditional_0_Template","saveAndRunQuery","editPipeline","openParamsHelp","RunExplorerComponent_Conditional_0_Conditional_20_Template","RunExplorerComponent_Conditional_0_Conditional_24_Template","RunExplorerComponent_Conditional_0_Conditional_25_Template","RunExplorerComponent_Conditional_0_Conditional_27_Template","RunExplorerComponent_Conditional_0_Conditional_29_Template","openRestApi","tmp_4_0","visualDesignerData$","tmp_5_0","warnings$","RunExplorerComponent","#dialogRouter","context","asObservable","calculateWarnings","warnings","queryParams","param","midMatch","exec","testMid","urlMid","moduleId","GoToDevRest","getUrlQueryDialog","RunExplorerComponent_Conditional_0_Template","VisualQueryComponent","route","explorer","activeExplorer","toggleExplorer","RouterOutlet"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/directives/mousedown-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/helpers/array.helpers.ts","./projects/eav-ui/src/app/shared/rxJs/mapUntilChanged.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.helpers.ts","./projects/eav-ui/src/app/visual-query/services/query-definition.service.ts","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.html","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.html","./projects/eav-ui/src/app/visual-query/services/visual-query.service.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.html","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/endpoints.helper.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumber.helper.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.html","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.html"],"sourcesContent":["import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appMousedownStopPropagation]',\r\n  standalone: true\r\n})\r\nexport class MousedownStopPropagationDirective {\r\n  @HostListener('mousedown', ['$event'])\r\n  onMousedown(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","export class ArrayHelpers {\r\n  /**\r\n   * Toggles an item in an array. If the item is not in the array, it is added. If it is in the array, it is removed.\r\n   * @param item The item to toggle\r\n   * @param array The array to toggle the item in\r\n   */\r\n  static toggleInArray<T>(item: T, array: T[]): void {\r\n    const index = array.indexOf(item);\r\n    if (index === -1) {\r\n      array.push(item);\r\n    } else {\r\n      array.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  // probably better: Array.from(new Set(merged));\r\n  // static distinct<T extends unknown>(array: T[]): T[] {\r\n  //   return array.filter(onlyUnique);\r\n  // }\r\n\r\n}\r\n\r\n\r\n// function onlyUnique<T extends unknown>(value: T, index: number, array: T[]): boolean {\r\n//   return array.indexOf(value) === index;\r\n// }","import { Observable, pipe, UnaryFunction } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport isEqual from 'lodash-es/isEqual';\r\n\r\n/**\r\n * Combine map and distinctUntilChanged, as this is a very common pattern.\r\n * @param fn the mapping function\r\n * @returns\r\n */\r\nexport function mapUntilChanged<T, R>(\r\n  fn: (state: T) => R\r\n): UnaryFunction<Observable<T>, Observable<R>> {\r\n  return pipe(\r\n    distinctUntilChanged(),\r\n    map(fn),\r\n    distinctUntilChanged(),\r\n  );\r\n}\r\n\r\nexport function mapUntilObjChanged<T, R>(\r\n  fn: (state: T) => R\r\n): UnaryFunction<Observable<T>, Observable<R>> {\r\n  return pipe(\r\n    distinctUntilChanged(isEqual),\r\n    map(fn),\r\n    distinctUntilChanged(isEqual),\r\n  );\r\n}\r\n","import { DataSource, PipelineDataSource } from '../models';\r\nimport { GuiTypes, TypeInfo, TypeInfos } from './plumb-editor.models';\r\n\r\nexport const guiTypes: GuiTypes = {\r\n  App: { Name: 'App', Label: 'App DataSources', Icon: 'star', UiHint: 'DataSources from the current App' },\r\n  Cache: { Name: 'Cache', Icon: 'history', UiHint: 'Caching of data' },\r\n  Filter: { Name: 'Filter', Icon: 'filter_list', UiHint: 'Filter data - usually returning less items than came in' },\r\n  Logic: { Name: 'Logic', Icon: 'share', UiHint: 'Logic operations - usually choosing between different streams' },\r\n  Lookup: { Name: 'Lookup', Icon: 'search', UiHint: 'Lookup operation - usually looking for other data based on a criteria' },\r\n  Modify: { Name: 'Modify', Icon: 'edit_attributes', UiHint: 'Modify data - usually changing, adding or removing values' },\r\n  Security: { Name: 'Security', Icon: 'account_circle', UiHint: 'Security - usually limit what the user sees based on his identity' },\r\n  Sort: { Name: 'Sort', Icon: 'sort', UiHint: 'Sort the items' },\r\n  Source: { Name: 'Source', Icon: 'cloud_upload', UiHint: 'Source of new data - usually SQL, CSV or similar' },\r\n  Target: { Name: 'Target', Icon: 'adjust', UiHint: 'Target - usually just a destination of data' },\r\n  Unknown: { Name: 'Unknown', Icon: 'fiber_manual_record', UiHint: 'Unknown type' },\r\n  Debug: { Name: 'Debug', Icon: 'bug_report', UiHint: 'Debugging Tools'},\r\n  System: { Name: 'System', Icon: 'military_tech', UiHint: 'System Data' },\r\n};\r\n\r\nexport function calculateTypeInfos(pipelineDataSources: PipelineDataSource[], dataSources: DataSource[]) {\r\n  const typeInfos: TypeInfos = {};\r\n\r\n  for (const pipelineDataSource of pipelineDataSources) {\r\n    let typeInfo: TypeInfo;\r\n    const ds = dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    if (ds) {\r\n      typeInfo = { ...(ds.PrimaryType ? guiTypes[ds.PrimaryType] : guiTypes.Unknown) };\r\n      if (ds.Icon != null) { typeInfo.Icon = ds.Icon; }\r\n      if (ds.DynamicIn != null) { typeInfo.DynamicIn = ds.DynamicIn; }\r\n      if (ds.DynamicOut != null) { typeInfo.DynamicOut = ds.DynamicOut; }\r\n      if (ds.HelpLink != null) { typeInfo.HelpLink = ds.HelpLink; }\r\n      if (ds.EnableConfig != null) { typeInfo.EnableConfig = ds.EnableConfig; }\r\n      if (ds.UiHint != null) { typeInfo.UiHint = ds.UiHint; }\r\n    }\r\n    if (!typeInfo)\r\n      typeInfo = { ...guiTypes.Unknown };\r\n    typeInfos[pipelineDataSource.EntityGuid] = typeInfo;\r\n  }\r\n\r\n  return typeInfos;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { webApiQueryDataSources, webApiQueryDebugStream, webApiQueryGet, webApiQueryRun, webApiQuerySave } from '../../app-administration/services';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult } from '../models';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\n@Injectable()\r\nexport class QueryDefinitionService extends HttpServiceBase {\r\n\r\n  fetchPipeline(pipelineEntityId: number, dataSources: DataSource[]) {\r\n    return this.http.get<PipelineModel>(webApiQueryGet, {\r\n      params: { appId: this.appId, id: pipelineEntityId.toString() }\r\n    }).pipe(\r\n      map(pipelineModel => {\r\n        // if pipeline is new, populate it with default model\r\n        if (!pipelineModel.DataSources.length) {\r\n          this.buildDefaultModel(pipelineModel, dataSources);\r\n        }\r\n        this.fixPipelineDataSources(pipelineModel.DataSources);\r\n        return pipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  private buildDefaultModel(pipelineModel: PipelineModel, dataSources: DataSource[]) {\r\n    const templateDataSources = eavConstants.pipelineDesigner.defaultPipeline.dataSources;\r\n    for (const templateDS of templateDataSources) {\r\n      const dataSource = dataSources.find(ds => ds.PartAssemblyAndType === templateDS.PartAssemblyAndType);\r\n      const pipelineDataSource: PipelineDataSource = {\r\n        Description: '',\r\n        EntityGuid: templateDS.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: dataSource.Name,\r\n        PartAssemblyAndType: templateDS.PartAssemblyAndType,\r\n        VisualDesignerData: templateDS.VisualDesignerData,\r\n      };\r\n      pipelineModel.DataSources.push(pipelineDataSource);\r\n    }\r\n\r\n    pipelineModel.Pipeline.StreamWiring = eavConstants.pipelineDesigner.defaultPipeline.streamWiring;\r\n  }\r\n\r\n  private fixPipelineDataSources(pipelineDataSources: PipelineDataSource[]) {\r\n    const outDataSourceExists = pipelineDataSources.some(\r\n      pipelineDS => pipelineDS.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    );\r\n    if (!outDataSourceExists) {\r\n      const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n      const outDsConst: PipelineDataSource = {\r\n        Description: outDs.Description,\r\n        EntityGuid: outDs.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: outDs.Name,\r\n        PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n        VisualDesignerData: outDs.VisualDesignerData,\r\n      };\r\n      pipelineDataSources.push(outDsConst);\r\n    }\r\n\r\n    for (const pipelineDataSource of pipelineDataSources) {\r\n      pipelineDataSource.VisualDesignerData ??= { Top: 50, Left: 50 };\r\n    }\r\n  }\r\n\r\n  fetchDataSources() {\r\n    return this.http.get<DataSource[]>(webApiQueryDataSources, {\r\n      params: {\r\n        appid: this.appId,\r\n        zoneId: this.zoneId,\r\n      },\r\n    }).pipe(\r\n      map(dataSources => {\r\n        const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n        const outDsConst: DataSource = {\r\n          ContentType: undefined,\r\n          Difficulty: eavConstants.pipelineDesigner.dataSourceDifficulties.default,\r\n          DynamicIn: true,\r\n          DynamicOut: false,\r\n          EnableConfig: undefined,\r\n          HelpLink: undefined,\r\n          Icon: undefined,\r\n          In: outDs.In,\r\n          Name: outDs.Name,\r\n          Out: undefined,\r\n          PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n          PrimaryType: outDs.PrimaryType,\r\n          TypeNameForUi: undefined,\r\n          UiHint: undefined,\r\n        };\r\n        dataSources.push(outDsConst);\r\n        return dataSources;\r\n      }),\r\n    );\r\n  }\r\n\r\n  typeNameFilter(input: string, format: 'className' | 'classFullName') {\r\n    const globalParts = input.split(', ');\r\n\r\n    switch (format) {\r\n      case 'classFullName':\r\n        const classFullName = globalParts[0];\r\n        return classFullName;\r\n      case 'className':\r\n        const classFullNameParts = globalParts[0].split('.');\r\n        const className = classFullNameParts[classFullNameParts.length - 1];\r\n        return className;\r\n      default:\r\n        return input;\r\n    }\r\n  }\r\n\r\n  /** Save the current query and reload entire definition as returned from server */\r\n  savePipeline(pipelineModel: PipelineModel) {\r\n    const pipeline = pipelineModel.Pipeline;\r\n    const dataSources = pipelineModel.DataSources;\r\n\r\n    return this.http.post<PipelineModel>(\r\n      webApiQuerySave,\r\n      { pipeline, dataSources },\r\n      { params: { appId: this.appId, Id: pipeline.EntityId.toString() } }\r\n    ).pipe(\r\n      map(newPipelineModel => {\r\n        this.fixPipelineDataSources(newPipelineModel.DataSources);\r\n        return newPipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  runPipeline(id: number, top: number) {\r\n    return this.http.get<PipelineResult>(webApiQueryRun, {\r\n      params: { appId: this.appId, id: id.toString(), top: top.toString() }\r\n    });\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  debugStream(id: number, source: string, sourceOut: string, top: number) {\r\n    return this.http.get<PipelineResult>(webApiQueryDebugStream, {\r\n      params: { appId: this.appId, id: id.toString(), from: source, out: sourceOut, top: top.toString() }\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      Query Results\r\n      @if (debugStream) {\r\n        for Stream: \"{{ debugStream.name }}\" on Source: \"{{ debugStream.sourceName }}\"\r\n      }\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <p>\r\n      The Full result was logged to the Browser Console. Further down you'll find more debug-infos.\r\n      Executed in {{ timeUsed }}ms ({{ ticksUsed }} ticks)\r\n    </p>\r\n    <mat-tab-group dynamicHeight color=\"accent\" class=\"eav-tab-group\">\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Results\">\r\n          <span>Results</span>\r\n        </div>\r\n\r\n        <p class=\"eav-tab-description\">\r\n          @if (top === 0) {\r\n            Showing All results\r\n          }\r\n          @if (top !== 0) {\r\n            Showing top {{ top }} results\r\n          }\r\n          @for (option of optionsForTop; track option) {\r\n            <button mat-button (click)=\"show(option)\">\r\n              Show\r\n              @if (option === 0) {\r\n                All\r\n              }\r\n              @if (option !== 0) {\r\n                {{ option }}\r\n              }\r\n            </button>\r\n          }\r\n        </p>\r\n        <pre>{{ result | json }}</pre>\r\n      </mat-tab>\r\n\r\n      @if (parameters?.length) {\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Parameters\">\r\n            <span>Parameters</span>\r\n          </div>\r\n          <br />\r\n          <ul>\r\n            @for (param of parameters; track param) {\r\n              <li>{{ param }}</li>\r\n            }\r\n          </ul>\r\n        </mat-tab>\r\n      }\r\n\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Sources\">\r\n          <span>Sources</span>\r\n        </div>\r\n\r\n        <br />\r\n        <table>\r\n          <tr>\r\n            <th>Name and Guid</th>\r\n            <th>Type</th>\r\n            <th>Configuration</th>\r\n            <th>Error</th>\r\n          </tr>\r\n          @for (source of sources | keyvalue; track source) {\r\n            <tr>\r\n              <td>\r\n                @if (source.value.Definition?.Name) {\r\n                  <div>{{ source.value.Definition?.Name }}</div>\r\n                }\r\n                <pre>{{ source.value.Guid }}</pre>\r\n              </td>\r\n              <td>{{ source.value.Type }}</td>\r\n              <td>\r\n                <ol>\r\n                  @for (config of source.value.Configuration | keyvalue; track config) {\r\n                    <li>\r\n                      <b>{{ config.key }}</b>=<em>{{ config.value }}</em>\r\n                    </li>\r\n                  }\r\n                </ol>\r\n              </td>\r\n              <td>{{ source.value.Error }}</td>\r\n            </tr>\r\n          }\r\n        </table>\r\n      </mat-tab>\r\n\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Streams\">\r\n          <span>Streams</span>\r\n        </div>\r\n\r\n        <br />\r\n        <table>\r\n          <tr>\r\n            <th>Source</th>\r\n            <th>Target</th>\r\n            <th>Items</th>\r\n            <th>Error</th>\r\n          </tr>\r\n          @for (stream of streams; track stream) {\r\n            <tr>\r\n              <td>\r\n                <pre>{{ stream.Source + \":\" + stream.SourceOut }}</pre>\r\n              </td>\r\n              <td>\r\n                <pre>{{ stream.Target + \":\" + stream.TargetIn }}</pre>\r\n              </td>\r\n              <td>{{ stream.Count }}</td>\r\n              <td>{{ stream.Error }}</td>\r\n            </tr>\r\n          }\r\n        </table>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n","import { JsonPipe, KeyValuePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { DebugStreamInfo, PipelineResultQuery, PipelineResultSources, PipelineResultStream } from '../models';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { QueryResultDialogData } from './query-result.models';\r\n\r\n@Component({\r\n  selector: 'app-query-result',\r\n  templateUrl: './query-result.component.html',\r\n  styleUrls: ['./query-result.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTabsModule,\r\n    JsonPipe,\r\n    KeyValuePipe,\r\n  ],\r\n})\r\nexport class QueryResultComponent implements OnInit {\r\n  parameters: string[];\r\n  timeUsed: number;\r\n  ticksUsed: number;\r\n  top: number;\r\n  optionsForTop: number[];\r\n  result: PipelineResultQuery;\r\n  debugStream: DebugStreamInfo;\r\n  sources: PipelineResultSources;\r\n  streams: PipelineResultStream[];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: QueryResultDialogData,\r\n    private dialog: MatDialogRef<QueryResultComponent>,\r\n    private visualQueryService: VisualQueryStateService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const pipeline = this.visualQueryService.pipelineModel$.value.Pipeline;\r\n    const params = (pipeline.Params?.split('\\n') ?? []).filter(el => !!el);\r\n    const testParams = (pipeline.TestParameters?.split('\\n') ?? []).filter(el => !!el);\r\n    this.parameters = [].concat(params, testParams);\r\n    this.timeUsed = this.dialogData.result.QueryTimer.Milliseconds;\r\n    this.ticksUsed = this.dialogData.result.QueryTimer.Ticks;\r\n    this.top = this.dialogData.top;\r\n    this.optionsForTop = [25, 100, 1000, 0];\r\n    this.result = this.dialogData.result.Query;\r\n    this.debugStream = this.dialogData.debugStream;\r\n    this.sources = this.dialogData.result.Sources;\r\n    this.streams = this.dialogData.result.Streams;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  show(top: number) {\r\n    if (top === this.top) return;\r\n\r\n    if (this.debugStream) {\r\n      this.visualQueryService.debugStream(this.debugStream.original, top);\r\n    } else {\r\n      this.visualQueryService.runPipeline(top);\r\n    }\r\n\r\n    this.closeDialog();\r\n  }\r\n}\r\n","import { JsonPipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MAT_DIALOG_DATA, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { StreamErrorData } from '../models';\r\nimport { StreamErrorResultDialogData } from './stream-error-result.models';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-stream-error-result',\r\n  templateUrl: './stream-error-result.component.html',\r\n  styleUrls: ['./stream-error-result.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogActions,\r\n    JsonPipe,\r\n  ],\r\n})\r\nexport class StreamErrorResultComponent implements OnInit {\r\n  errorData: StreamErrorData;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: StreamErrorResultDialogData,\r\n    private dialog: MatDialogRef<StreamErrorResultComponent>,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.errorData = this.dialogData.errorData;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/logs?key=web-api-query'), '_blank');\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Stream Error Results</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <pre>{{ errorData | json }}</pre>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button class=\"eav-button__with-icon\" tippy=\"Open 2sxc Insights\" (click)=\"openInsights()\">\r\n      <mat-icon class=\"eav-icon\">speed</mat-icon>\r\n      <span>Insights</span>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Injectable, NgZone, OnDestroy, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { BehaviorSubject, filter, fromEvent, Subject } from 'rxjs';\r\nimport { ContentTypesService } from '../../app-administration/services/content-types.service';\r\nimport { MetadataService } from '../../permissions/services/metadata.service';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep } from '../../shared/models/edit-form.model';\r\nimport { QueryDefinitionService } from './query-definition.service';\r\n// tslint:disable-next-line:max-line-length\r\nimport { transient } from '../../../../../core';\r\nimport { isCtrlS } from '../../edit/dialog/main/keyboard-shortcuts';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { ServiceBase } from '../../shared/services/service-base';\r\nimport { DataSource, DataSourceConfig, DataSourceConfigs, DebugStreamInfo, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { QueryResultComponent } from '../query-result/query-result.component';\r\nimport { QueryResultDialogData } from '../query-result/query-result.models';\r\nimport { StreamErrorResultComponent } from '../stream-error-result/stream-error-result.component';\r\nimport { StreamErrorResultDialogData } from '../stream-error-result/stream-error-result.models';\r\n\r\n/**\r\n * Service containing the state for the visual query.\r\n * It's shared, so should not be used with transient(...);\r\n */\r\n@Injectable()\r\nexport class VisualQueryStateService extends ServiceBase implements OnDestroy {\r\n\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n  #metadataSvc = transient(MetadataService);\r\n  #queryDefSvc = transient(QueryDefinitionService);\r\n  #dialogRoute = transient(DialogRoutingService);\r\n  #titleSvc = transient(Title);\r\n\r\n\r\n  pipelineModel$ = new BehaviorSubject<PipelineModel>(null);\r\n  // TODO: @2pp - make a signal for this\r\n  // - basically it's only used as a value, or as a value which ends up in a viewModel$\r\n  // - this should be fairly easy, pls discuss w/2dm if you don't understand\r\n  dataSources$ = new BehaviorSubject<DataSource[]>(null);\r\n  putEntityCountOnConnections$ = new Subject<PipelineResult>();\r\n  // TODO: @2pp - make a signal for this, same situation, basically just used in HTML on viewModel$\r\n  dataSourceConfigs$ = new BehaviorSubject<DataSourceConfigs>({});\r\n  queryResult?: PipelineResult;\r\n\r\n  #pipelineId = parseInt(this.#dialogRoute.getParam('pipelineId'), 10);\r\n  #refreshPipeline = false;\r\n  #refreshDataSourceConfigs = false;\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private zone: NgZone,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.pipelineModel$.complete();\r\n    this.dataSources$.complete();\r\n    this.putEntityCountOnConnections$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  init() {\r\n    this.#fetchDataSources(() => this.#fetchPipeline(true, true, false));\r\n    this.#attachKeyboardSave();\r\n    this.#dialogRoute.doOnDialogClosed(() => {\r\n      if (this.#refreshPipeline || this.#refreshDataSourceConfigs)\r\n        this.#fetchPipeline(this.#refreshPipeline, this.#refreshDataSourceConfigs, this.#refreshPipeline);\r\n      this.#refreshPipeline = false;\r\n      this.#refreshDataSourceConfigs = false;\r\n    });\r\n  }\r\n\r\n  public editPipelineEntity() {\r\n    // save Pipeline, then open Edit Dialog\r\n    this.#savePipeline(() => {\r\n      const form: EditForm = {\r\n        items: [EditPrep.editId(this.pipelineModel$.value.Pipeline.EntityId)],\r\n      };\r\n      const formUrl = convertFormToUrl(form);\r\n      this.#dialogRoute.navRelative([`edit/${formUrl}`]);\r\n      this.#refreshPipeline = true;\r\n    });\r\n  }\r\n\r\n  public saveAndRun(save: boolean, run: boolean): void {\r\n    if (save && run)\r\n      return this.#savePipeline(() => this.runPipeline());\r\n\r\n    if (save)\r\n      return this.#savePipeline();\r\n    \r\n    if (run)\r\n      return this.runPipeline();\r\n  }\r\n\r\n  showDataSourceDetails(showDetails: boolean) {\r\n    const query = cloneDeep(this.pipelineModel$.value);\r\n    const designerData: Record<string, any> = JsonHelpers.tryParse(query.Pipeline.VisualDesignerData) ?? {};\r\n    designerData.ShowDataSourceDetails = showDetails;\r\n    query.Pipeline.VisualDesignerData = JSON.stringify(designerData);\r\n    this.pipelineModel$.next(query);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    const query = cloneDeep(this.pipelineModel$.value);\r\n    const newSource: PipelineDataSource = {\r\n      Description: '',\r\n      EntityGuid: 'unsaved' + (query.DataSources.length + 1),\r\n      EntityId: undefined,\r\n      Name: dataSource.Name,\r\n      PartAssemblyAndType: dataSource.PartAssemblyAndType,\r\n      VisualDesignerData: { Top: 100, Left: 100 },\r\n    };\r\n    query.DataSources.push(newSource);\r\n    this.pipelineModel$.next(query);\r\n    this.#savePipeline();\r\n  }\r\n\r\n  removeDataSource(pipelineDataSourceGuid: string, connections: StreamWire[], streamsOut: string) {\r\n    const query = cloneDeep(this.pipelineModel$.value);\r\n    query.DataSources = query.DataSources.filter(pipelineDS => pipelineDS.EntityGuid !== pipelineDataSourceGuid);\r\n    query.Pipeline.StreamWiring = connections;\r\n    query.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel$.next(query);\r\n  }\r\n\r\n  renameDataSource(pipelineDataSourceGuid: string, name: string) {\r\n    const query = cloneDeep(this.pipelineModel$.value);\r\n    const dataSource = query.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    dataSource.Name = name;\r\n    this.pipelineModel$.next(query);\r\n  }\r\n\r\n  changeDataSourceDescription(pipelineDataSourceGuid: string, description: string) {\r\n    const query = cloneDeep(this.pipelineModel$.value);\r\n    const dataSource = query.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    dataSource.Description = description;\r\n    this.pipelineModel$.next(query);\r\n  }\r\n\r\n  changeConnections(connections: StreamWire[], streamsOut: string) {\r\n    const query = cloneDeep(this.pipelineModel$.value);\r\n    query.Pipeline.StreamWiring = connections;\r\n    query.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel$.next(query);\r\n  }\r\n\r\n  changeDataSourcePosition(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    const query = cloneDeep(this.pipelineModel$.value);\r\n    const dataSource = query.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    if (!dataSource) {\r\n      // spm NOTE: fixes problem where dataSource position can't be updated if dataSource with guid unsavedXX gets saved while dragging.\r\n      // Can happen if dataSource is just added and user drags it and save happens.\r\n      return;\r\n    }\r\n    dataSource.VisualDesignerData = { ...dataSource.VisualDesignerData, ...position };\r\n    this.pipelineModel$.next(query);\r\n  }\r\n\r\n  #calculateDataSourceConfigs(dataSources: PipelineDataSource[]) {\r\n    const dataSourceConfigs: DataSourceConfigs = {};\r\n    dataSources.forEach(dataSource => {\r\n      if (dataSource.EntityId == null) return;\r\n      dataSourceConfigs[dataSource.EntityId] = [];\r\n      dataSource.Metadata?.forEach(metadataItem => {\r\n        Object.entries(metadataItem).forEach(([attributeName, attributeValue]) => {\r\n          if (attributeValue == null || attributeValue === '') return;\r\n          if (['Created', 'Guid', 'Id', 'Modified', 'Title', '_Type'].includes(attributeName)) return;\r\n          if (Array.isArray(attributeValue) && attributeValue[0]?.Title !== null && attributeValue[0]?.Id !== null) {\r\n            attributeValue = `${attributeValue[0].Title} (${attributeValue[0].Id})`;\r\n          }\r\n          const dataSourceConfig: DataSourceConfig = {\r\n            name: attributeName,\r\n            value: attributeValue,\r\n          };\r\n          dataSourceConfigs[dataSource.EntityId].push(dataSourceConfig);\r\n        });\r\n      });\r\n    });\r\n    this.dataSourceConfigs$.next(dataSourceConfigs);\r\n  }\r\n\r\n  editDataSource(pipelineDataSource: PipelineDataSource) {\r\n    const dataSource = this.dataSources$.value.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    const contentTypeName = dataSource.ContentType;\r\n    const { targetType, keyType } = eavConstants.metadata.entity;\r\n    const key = pipelineDataSource.EntityGuid;\r\n\r\n    // query for existing Entity\r\n    this.#metadataSvc.getMetadata(targetType, keyType, key, contentTypeName).subscribe(metadata => {\r\n      // edit existing Entity\r\n      if (metadata.Items.length) {\r\n        const form: EditForm = {\r\n          items: [EditPrep.editId(metadata.Items[0].Id)],\r\n        };\r\n        const formUrl = convertFormToUrl(form);\r\n        this.#dialogRoute.navRelative([`edit/${formUrl}`]);\r\n        this.#refreshDataSourceConfigs = true;\r\n        return;\r\n      }\r\n\r\n      // Check if the type exists, and if yes, create new Entity\r\n      this.#contentTypesSvc.retrieveContentType(contentTypeName).subscribe({\r\n        next: contentType => {\r\n          if (contentType == null) {\r\n            this.snackBar.open('DataSource doesn\\'t have any configuration', undefined, { duration: 3000 });\r\n            return;\r\n          }\r\n          const form: EditForm = {\r\n            items: [ EditPrep.newMetadata(key, contentTypeName, eavConstants.metadata.entity) ],\r\n          };\r\n          const formUrl = convertFormToUrl(form);\r\n          this.#dialogRoute.navRelative([`edit/${formUrl}`]);\r\n          this.#refreshDataSourceConfigs = true;\r\n        },\r\n        error: (error: HttpErrorResponse) => {\r\n          const message = 'Server reports error - this usually means that this DataSource doesn\\'t have any configuration';\r\n          this.snackBar.open(message, undefined, { duration: 3000 });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  #savePipeline(callback?: () => void) {\r\n    this.snackBar.open('Saving...');\r\n    this.#queryDefSvc.savePipeline(this.pipelineModel$.value).subscribe({\r\n      next: pipelineModel => {\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n        this.pipelineModel$.next(pipelineModel);\r\n        if (callback != null) { callback(); }\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Save Pipeline failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  runPipeline(top = 25) {\r\n    this.snackBar.open('Running query...');\r\n    this.#queryDefSvc.runPipeline(this.pipelineModel$.value.Pipeline.EntityId, top).subscribe({\r\n      next: pipelineResult => {\r\n        this.snackBar.open('Query worked', null, { duration: 2000 });\r\n        this.queryResult = pipelineResult;\r\n        this.#showQueryResult(pipelineResult, top);\r\n        console.warn(pipelineResult);\r\n        // push cloned pipelineModel to reset jsPlumb\r\n        this.pipelineModel$.next(cloneDeep(this.pipelineModel$.value));\r\n        setTimeout(() => { this.putEntityCountOnConnections$.next(pipelineResult); });\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Query failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  debugStream(stream: PipelineResultStream, top = 25): void {\r\n    if (stream.Error)\r\n      return this.#showStreamErrorResult(stream);\r\n\r\n    if (stream.Count === 0)\r\n      return;\r\n\r\n    this.snackBar.open('Running stream...');\r\n    const pipelineId = this.pipelineModel$.value.Pipeline.EntityId;\r\n    this.#queryDefSvc.debugStream(pipelineId, stream.Source, stream.SourceOut, top).subscribe({\r\n      next: streamResult => {\r\n        this.snackBar.open('Stream worked', null, { duration: 2000 });\r\n        const pipelineDataSource = this.pipelineModel$.value.DataSources.find(ds => ds.EntityGuid === stream.Source);\r\n        const debugStream: DebugStreamInfo = {\r\n          name: stream.SourceOut,\r\n          source: stream.Source,\r\n          sourceName: pipelineDataSource.Name,\r\n          original: stream,\r\n        };\r\n        this.#showQueryResult(streamResult, top, debugStream);\r\n        console.warn(streamResult);\r\n      },\r\n      error: (_: HttpErrorResponse) => {\r\n        this.snackBar.open('Stream failed', null, { duration: 2000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  #fetchPipeline(refreshPipeline: boolean, refreshDataSourceConfigs: boolean, showSnackBar: boolean) {\r\n    if (showSnackBar)\r\n      this.snackBar.open('Reloading query, please wait...');\r\n\r\n    this.#queryDefSvc.fetchPipeline(this.#pipelineId, this.dataSources$.value).subscribe(pipelineModel => {\r\n      if (showSnackBar)\r\n        this.snackBar.open('Query reloaded', null, { duration: 2000 });\r\n\r\n      this.#titleSvc.setTitle(`${pipelineModel.Pipeline.Name} - Visual Query`);\r\n      if (refreshPipeline)\r\n        this.pipelineModel$.next(pipelineModel);\r\n\r\n      if (refreshDataSourceConfigs)\r\n        this.#calculateDataSourceConfigs(pipelineModel.DataSources);\r\n    });\r\n  }\r\n\r\n  #showQueryResult(result: PipelineResult, top: number, debugStream?: DebugStreamInfo) {\r\n    const dialogData: QueryResultDialogData = {\r\n      result,\r\n      debugStream,\r\n      top,\r\n    };\r\n    this.matDialog.open(QueryResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  #showStreamErrorResult(stream: PipelineResultStream) {\r\n    const dialogData: StreamErrorResultDialogData = {\r\n      errorData: stream.ErrorData,\r\n    };\r\n    this.matDialog.open(StreamErrorResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  #fetchDataSources(callback?: () => void) {\r\n    this.#queryDefSvc.fetchDataSources().subscribe(dataSources => {\r\n      this.dataSources$.next(dataSources);\r\n      callback();\r\n    });\r\n  }\r\n\r\n  #attachKeyboardSave() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown').pipe(\r\n          filter(() => !this.#dialogRoute.snapshot.firstChild),\r\n          filter(event => isCtrlS(event)),\r\n        ).subscribe(event => {\r\n          event.preventDefault();\r\n          this.zone.run(() => { this.#savePipeline(); });\r\n        })\r\n      );\r\n    });\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"eav-show-advanced\">\r\n      <span class=\"eav-slide-toggle-label\">Show Advanced</span>\r\n      <mat-slide-toggle color=\"primary\" (change)=\"toggleDifficulty($event)\" />\r\n    </div>\r\n    @for (group of vm.sorted | keyvalue; track trackGroups($index, group)) {\r\n      <div class=\"collapsible\" [tippy]=\"guiTypes[group.key].UiHint || group.key\" tippyShowDelay=\"750\"\r\n        (click)=\"toggleItem(group.key)\">\r\n        <mat-icon>{{ guiTypes[group.key].Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n        <span>{{ guiTypes[group.key].Label ?? guiTypes[group.key].Name ?? group.key }}</span>\r\n      </div>\r\n      @if (toggledItems.includes(group.key)) {\r\n        <div class=\"list\">\r\n          @for (dataSource of group.value; track trackDataSources($index, dataSource)) {\r\n            <div class=\"list-item\"\r\n              [tippy]=\"dataSource.UiHint || dataSource.Name\" tippyShowDelay=\"750\" (click)=\"addDataSource(dataSource)\">\r\n              <mat-icon>{{ dataSource.Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n              <span>{{ dataSource.Name }}</span>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n  </div>\r\n}\r\n","import { KeyValue, AsyncPipe, KeyValuePipe } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\nimport { guiTypes } from '../plumb-editor/plumb-editor.helpers';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { filterAndSortDataSources } from './add-explorer.helpers';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-add-explorer',\r\n  templateUrl: './add-explorer.component.html',\r\n  styleUrls: ['./add-explorer.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatSlideToggleModule,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    KeyValuePipe,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class AddExplorerComponent implements OnInit, OnDestroy {\r\n  toggledItems: string[] = [];\r\n  guiTypes = guiTypes;\r\n\r\n  private difficulties = eavConstants.pipelineDesigner.dataSourceDifficulties;\r\n  private difficulty$ = new BehaviorSubject(this.difficulties.default);\r\n\r\n  viewModel$: Observable<AddExplorerViewModel>;\r\n\r\n  constructor(private visualQueryService: VisualQueryStateService) { }\r\n\r\n  ngOnInit() {\r\n    this.viewModel$ = combineLatest([\r\n      combineLatest([this.visualQueryService.dataSources$, this.difficulty$]).pipe(\r\n        map(([dataSources, difficulty]) => filterAndSortDataSources(dataSources, difficulty)),\r\n      )\r\n    ]).pipe(map(([sorted]) => ({ sorted })));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.difficulty$.complete();\r\n  }\r\n\r\n  toggleDifficulty(event: MatSlideToggleChange) {\r\n    const difficulty = event.checked ? this.difficulties.advanced : this.difficulties.default;\r\n    this.difficulty$.next(difficulty);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    this.visualQueryService.addDataSource(dataSource);\r\n  }\r\n\r\n  toggleItem(item: string) {\r\n    ArrayHelpers.toggleInArray(item, this.toggledItems);\r\n  }\r\n\r\n  trackGroups(index: number, type: KeyValue<string, DataSource[]>) {\r\n    return type.key;\r\n  }\r\n\r\n  trackDataSources(index: number, dataSource: DataSource) {\r\n    return dataSource.PartAssemblyAndType;\r\n  }\r\n}\r\n\r\ninterface AddExplorerViewModel {\r\n  sorted: SortedDataSources;\r\n}\r\n","import cloneDeep from 'lodash-es/cloneDeep';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\n\r\nexport function filterAndSortDataSources(dataSources: DataSource[], maxDifficulty: number) {\r\n  if (!dataSources) return;\r\n\r\n  const cloned = cloneDeep(dataSources);\r\n\r\n  const filtered = cloned.filter(dataSource =>\r\n    dataSource.Difficulty <= maxDifficulty\r\n    && dataSource.PartAssemblyAndType !== eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType\r\n  );\r\n\r\n  filtered.sort((a, b) => a.Name.toLocaleLowerCase().localeCompare(b.Name.toLocaleLowerCase()));\r\n\r\n  const sorted: SortedDataSources = {};\r\n  for (const dataSource of filtered) {\r\n    const type = dataSource.PrimaryType;\r\n    if (sorted[type]) {\r\n      sorted[type].push(dataSource);\r\n    } else {\r\n      sorted[type] = [dataSource];\r\n    }\r\n  }\r\n\r\n  return sorted;\r\n}\r\n","import { classLog } from '../../shared/logging';\r\nimport { EndpointInfo, PlumbType } from './plumb-editor.models';\r\nimport { Plumber } from './plumber.helper';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  getEndpointOverlays: true,\r\n  getEndpointInfo: true,\r\n  buildSourceEndpoint: true,\r\n  buildTargetEndpoint: true,\r\n}\r\n\r\nexport class EndpointsHelper {\r\n  \r\n  log = classLog({EndpointsHelper}, logSpecs, true);\r\n\r\n  constructor(private plumb: Plumber) { }\r\n\r\n  private getEndpointOverlays(isSource: boolean) {\r\n    const l = this.log.fnIf('getEndpointOverlays', {isSource});\r\n    const result = [\r\n      [\r\n        'Label', {\r\n          id: 'endpointLabel',\r\n          location: [0.5, isSource ? 0 : 1],\r\n          label: 'Default',\r\n          cssClass: isSource ? 'endpointSourceLabel' : 'endpointTargetLabel',\r\n        },\r\n      ],\r\n    ];\r\n    return l.r(result);\r\n  }\r\n\r\n  getEndpointInfo(endpointName: string, isDynamic: boolean): EndpointInfo {\r\n    const l = this.log.fnIf('getEndpointInfo', {endpointName, isDynamic});\r\n    let name: string;\r\n    let required: boolean;\r\n\r\n    const trimmed = endpointName.trim();\r\n    required = trimmed.endsWith('*');\r\n    name = !required ? trimmed : trimmed.substring(0, trimmed.length - 1);\r\n\r\n    if (isDynamic)\r\n      return l.r({\r\n        name,\r\n        required: false\r\n      } satisfies EndpointInfo, 'isDynamic');\r\n    \r\n    return l.r({ name, required } satisfies EndpointInfo, 'notDynamic');\r\n  }\r\n\r\n  buildSourceEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const l = this.log.fnIf('buildSourceEndpoint', {pipelineDataSourceGuid, style});\r\n    const isSource = true;\r\n    const sourceEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'sourceEndpoint ' + (style ?? ''),\r\n      maxConnections: -1,\r\n      isSource,\r\n      anchor: ['Continuous', { faces: ['top'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => this.plumb.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid),\r\n      },\r\n    };\r\n    return l.r(sourceEndpoint);\r\n  }\r\n\r\n  buildTargetEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const l = this.log.fnIf('buildTargetEndpoint', {pipelineDataSourceGuid, style});\r\n    const isSource = false;\r\n    const targetEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'targetEndpoint ' + (style ?? ' '), // + (angled ? 'angled' : ''),\r\n      maxConnections: 1,\r\n      isTarget: !isSource,\r\n      anchor: ['Continuous', { faces: ['bottom'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      dropOptions: { hoverClass: 'hover', activeClass: 'active' },\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => this.plumb.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid),\r\n      },\r\n    };\r\n    return l.r(targetEndpoint);\r\n  }\r\n}","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Rename stream</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <form [formGroup]=\"form\">\r\n      <!-- Simple form -->\r\n      @if (!isSource || !pipelineResultExists) {\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"label\" required>\r\n        </mat-form-field>\r\n        @if (isSource && !pipelineResultExists) {\r\n          <app-field-hint>\r\n            You will get suggestions for out-streams after you run query\r\n          </app-field-hint>\r\n        }\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n\r\n      <!-- Rich form -->\r\n      @if (isSource && pipelineResultExists) {\r\n        <!-- Scope -->\r\n        @if (advancedMode && guidedLabel) {\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Scope</mat-label>\r\n            <mat-select formControlName=\"scope\" [placeholder]=\"!scopeOptions.length ? 'No items found' : ''\">\r\n              @for (scopeOption of scopeOptions; track scopeOption) {\r\n                <mat-option [value]=\"scopeOption.value\">\r\n                  {{ scopeOption.name }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <app-field-hint>\r\n            The scope should almost never be changed -\r\n            <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n          </app-field-hint>\r\n        }\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          @if (guidedLabel) {\r\n            <mat-select formControlName=\"label\" required\r\n              [placeholder]=\"!labelOptions.length ? 'No items found' : ''\">\r\n              @for (labelOption of labelOptions; track labelOption) {\r\n                <mat-option [value]=\"labelOption\">\r\n                  {{ labelOption }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          }\r\n          @if (!guidedLabel) {\r\n            <input matInput type=\"text\" formControlName=\"label\" required>\r\n          }\r\n          <div matTextSuffix class=\"eav-selection-suffix\">\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': guidedLabel }\" tippy=\"Pick existing value\"\r\n              (click)=\"toggleGuidedLabel(true)\">\r\n              <mat-icon class=\"eav-icon\">search</mat-icon>\r\n            </button>\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': !guidedLabel }\" tippy=\"Manual entry\"\r\n              (click)=\"toggleGuidedLabel(false)\">\r\n              <mat-icon class=\"eav-icon\">text_fields</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-form-field>\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n    </form>\r\n  </div>\r\n  <mat-dialog-actions class=\"eav-dialog-actions\">\r\n    <!-- Extra button for rich form -->\r\n    <div>\r\n      @if (isSource && pipelineResultExists) {\r\n        <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n          {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n        </mat-slide-toggle>\r\n      }\r\n    </div>\r\n    <div>\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\" [disabled]=\"!form.valid\" (click)=\"rename()\">\r\n        Rename\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, HostBinding, Inject, OnInit } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MAT_DIALOG_DATA, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { distinctUntilChanged, startWith } from 'rxjs';\r\nimport { transient } from '../../../../../../core';\r\nimport { ContentTypesService } from '../../../app-administration/services';\r\nimport { BaseComponent } from '../../../shared/components/base.component';\r\nimport { FieldHintComponent } from '../../../shared/components/field-hint/field-hint.component';\r\nimport { eavConstants, ScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { ClickStopPropagationDirective } from '../../../shared/directives/click-stop-propagation.directive';\r\nimport { VisualQueryStateService } from '../../services/visual-query.service';\r\nimport { RenameStreamDialogControls, RenameStreamDialogData, RenameStreamDialogFormValue } from './rename-stream.models';\r\n\r\n@Component({\r\n  selector: 'app-rename-stream',\r\n  templateUrl: './rename-stream.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    NgClass,\r\n    MatDialogActions,\r\n    MatSlideToggleModule,\r\n    FieldHintComponent,\r\n    ClickStopPropagationDirective,\r\n  ],\r\n})\r\nexport class RenameStreamComponent extends BaseComponent implements OnInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  controls: RenameStreamDialogControls;\r\n  isSource = this.dialogData.isSource;\r\n  pipelineResultExists = this.visualQueryService.queryResult != null;\r\n  scopeOptions: ScopeOption[] = [];\r\n  labelOptions: string[] = [];\r\n  guidedLabel = true;\r\n  advancedMode = false;\r\n\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n  \r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: RenameStreamDialogData,\r\n    private dialog: MatDialogRef<RenameStreamComponent>,\r\n    private visualQueryService: VisualQueryStateService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.#buildForm();\r\n  }\r\n\r\n  closeDialog(label?: string): void {\r\n    this.dialog.close(label);\r\n  }\r\n\r\n  toggleGuidedLabel(guidedLabel: boolean): void {\r\n    this.guidedLabel = guidedLabel;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  rename(): void {\r\n    const formValue: RenameStreamDialogFormValue = this.form.getRawValue();\r\n    this.closeDialog(formValue.label);\r\n  }\r\n\r\n  #buildForm(): void {\r\n    this.form = new UntypedFormGroup({\r\n      label: new UntypedFormControl(this.dialogData.label, Validators.required),\r\n      scope: new UntypedFormControl(eavConstants.scopes.default.value),\r\n    });\r\n    this.controls = this.form.controls as any;\r\n\r\n    if (!this.isSource || !this.pipelineResultExists)\r\n      return;\r\n\r\n    this.subscriptions.add(\r\n      this.controls.scope.valueChanges.pipe(\r\n        startWith<string>(this.controls.scope.value),\r\n        distinctUntilChanged(),\r\n      ).subscribe(scope => {\r\n        this.labelOptions = Object.values(this.visualQueryService.queryResult.Sources)\r\n          .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out\r\n          .filter(out => out.Scope === scope)\r\n          .map(out => out.Name);\r\n\r\n        if (!this.labelOptions.includes(this.controls.label.value) && this.controls.label.value != null)\r\n          this.controls.label.patchValue(null);\r\n      })\r\n    );\r\n\r\n    this.#contentTypesSvc.getScopes().subscribe(scopes => {\r\n      const sourceOut = Object.values(this.visualQueryService.queryResult.Sources)\r\n        .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out;\r\n      const filtered = scopes.filter(s => sourceOut.some(o => o.Scope === s.value));\r\n      this.scopeOptions = filtered;\r\n      this.changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectorRef, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { classLog } from '../../shared/logging';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { WindowWithJsPlumb } from '../window';\r\nimport { EndpointsHelper } from './endpoints.helper';\r\nimport { PlumbType } from './plumb-editor.models';\r\nimport { RenameStreamComponent } from './rename-stream/rename-stream.component';\r\nimport { RenameStreamDialogData } from './rename-stream/rename-stream.models';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  addEndpoint: true,\r\n}\r\n\r\ndeclare const window: WindowWithJsPlumb;\r\n\r\nexport const dataSrcIdPrefix = 'dataSource_';\r\n\r\nconst endPointsWhereWeRotate = 3;\r\n\r\nexport class Plumber {\r\n\r\n  log = classLog({Plumber}, logSpecs, true);\r\n\r\n  #instance: PlumbType;\r\n  #lineCount = 0;\r\n  #linePaintDefault = {\r\n    stroke: '#61B7CF',\r\n    strokeWidth: 4,\r\n    outlineStroke: 'white',\r\n    outlineWidth: 2,\r\n  };\r\n  #lineColors = [\r\n    '#009688', '#00bcd4', '#3f51b5', '#9c27b0', '#e91e63',\r\n    '#db4437', '#ff9800', '#60a917', '#60a917', '#008a00',\r\n    '#00aba9', '#1ba1e2', '#0050ef', '#6a00ff', '#aa00ff',\r\n    '#f472d0', '#d80073', '#a20025', '#e51400', '#fa6800',\r\n    '#f0a30a', '#e3c800', '#825a2c', '#6d8764', '#647687',\r\n    '#76608a', '#a0522d',\r\n  ];\r\n  #maxCols = this.#lineColors.length - 1;\r\n  #uuidColorMap: Record<string, any> = {};\r\n  #bulkDelete = false;\r\n  #dialog: MatDialogRef<RenameStreamComponent>;\r\n\r\n  #endpoints: EndpointsHelper;\r\n\r\n  constructor(\r\n    private jsPlumbRoot: HTMLElement,\r\n    private pipelineModel: PipelineModel,\r\n    private dataSources: DataSource[],\r\n    private onConnectionsChanged: () => void,\r\n    private onDragend: (pipelineDataSourceGuid: string, position: VisualDesignerData) => void,\r\n    private onDebugStream: (stream: PipelineResultStream) => void,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    this.#endpoints = new EndpointsHelper(this);\r\n    this.#instance = window.jsPlumb.getInstance(this.#getInstanceDefaults(this.jsPlumbRoot));\r\n    this.#instance.batch(() => {\r\n      this.#initDomDataSources();\r\n      this.#initWirings();\r\n      this.#bindEvents();\r\n    });\r\n    // spm NOTE: repaint after initial paint fixes:\r\n    // Error: <svg> attribute width: Expected length, \"-Infinity\".\r\n    this.#instance.repaintEverything();\r\n  }\r\n\r\n  destroy() {\r\n    this.#dialog?.close();\r\n    this.#instance.reset();\r\n    this.#instance.unbindContainer();\r\n  }\r\n\r\n  removeEndpointsOnDataSource(pipelineDataSourceGuid: string) {\r\n    const elementId = dataSrcIdPrefix + pipelineDataSourceGuid;\r\n    this.#bulkDelete = true;\r\n    this.#instance.batch(() => {\r\n      this.#instance.selectEndpoints({ element: elementId }).delete();\r\n    });\r\n    this.#bulkDelete = false;\r\n  }\r\n\r\n  getAllConnections() {\r\n    const connectionInfos: StreamWire[] = this.#instance.getAllConnections().map((connection: PlumbType) => {\r\n      const wire: StreamWire = {\r\n        From: connection.sourceId.replace(dataSrcIdPrefix, ''),\r\n        Out: connection.endpoints[0].getOverlay('endpointLabel').label,\r\n        To: connection.targetId.replace(dataSrcIdPrefix, ''),\r\n        In: connection.endpoints[1].getOverlay('endpointLabel').label,\r\n      };\r\n      return wire;\r\n    });\r\n    return connectionInfos;\r\n  }\r\n\r\n  getStreamsOut() {\r\n    const streamsOut: string[] = [];\r\n    this.#instance.selectEndpoints({ target: dataSrcIdPrefix + 'Out' }).each((endpoint: PlumbType) => {\r\n      streamsOut.push(endpoint.getOverlay('endpointLabel').label);\r\n    });\r\n    const streamsOutStr = streamsOut.join(',');\r\n    return streamsOutStr;\r\n  }\r\n\r\n  putEntityCountOnConnections(result: PipelineResult) {\r\n    result.Streams?.forEach(stream => {\r\n      const sourceElementId = dataSrcIdPrefix + stream.Source;\r\n      const outTargets = ['00000000-0000-0000-0000-000000000000', this.pipelineModel.Pipeline.EntityGuid];\r\n      const targetElementId = outTargets.includes(stream.Target) ? dataSrcIdPrefix + 'Out' : dataSrcIdPrefix + stream.Target;\r\n\r\n      const fromUuid = sourceElementId + '_out_' + stream.SourceOut;\r\n      const toUuid = targetElementId + '_in_' + stream.TargetIn;\r\n\r\n      const sEndp: PlumbType = this.#instance.getEndpoint(fromUuid);\r\n      sEndp?.connections\r\n        ?.filter((connection: PlumbType) => connection.endpoints[1].getUuid() === toUuid)\r\n        ?.forEach((connection: PlumbType) => {\r\n          const label = !stream.Error ? stream.Count.toString() : '';\r\n          const cssClass = 'streamEntitiesCount ' + (!stream.Error ? '' : 'streamEntitiesError');\r\n          connection.setLabel({\r\n            label,\r\n            cssClass,\r\n            events: {\r\n              click: (overlay: PlumbType) => {\r\n                if (!this.pipelineModel.Pipeline.AllowEdit) return;\r\n                this.onDebugStream(stream);\r\n              },\r\n            },\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  #nextLinePaintStyle(uuid: string) {\r\n    return (\r\n      this.#uuidColorMap[uuid] ||\r\n      (this.#uuidColorMap[uuid] = Object.assign({}, this.#linePaintDefault, { stroke: this.#lineColors[this.#lineCount++ % this.#maxCols] }))\r\n    );\r\n  }\r\n\r\n  #getInstanceDefaults(container: HTMLElement) {\r\n    const defaults = {\r\n      Container: container,\r\n      Connector: ['Bezier', { curviness: 70 }],\r\n      PaintStyle: this.#nextLinePaintStyle('dummy'),\r\n      HoverPaintStyle: {\r\n        stroke: '#216477',\r\n        strokeWidth: 4,\r\n        outlineStroke: 'white',\r\n        outlineWidth: 2,\r\n      },\r\n    };\r\n    return defaults;\r\n  }\r\n\r\n  /** Create sources, targets and endpoints */\r\n  #initDomDataSources() {\r\n    const l = this.log.fnCond(false, 'initDomDataSources');\r\n    for (const pipelineDataSource of this.pipelineModel.DataSources) {\r\n      const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + dataSrcIdPrefix + pipelineDataSource.EntityGuid);\r\n      if (!domDataSource) continue;\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      if (!dataSource) continue;\r\n\r\n      if (this.pipelineModel.Pipeline.AllowEdit) {\r\n        // WARNING! Must happen before instance.makeSource()\r\n        this.#instance.draggable(domDataSource, {\r\n          grid: [20, 20], stop: (event: PlumbType) => {\r\n            const element: HTMLElement = event.el;\r\n            const pipelineDataSourceGuid: string = element.id.replace(dataSrcIdPrefix, '');\r\n            const position: VisualDesignerData = {\r\n              Top: event.finalPos[1],\r\n              Left: event.finalPos[0],\r\n            };\r\n            setTimeout(() => { this.onDragend(pipelineDataSourceGuid, position); });\r\n          }\r\n        });\r\n      }\r\n\r\n      // Add Out-Endpoints from Definition\r\n      const outCount = dataSource.Out?.length ?? 0;\r\n      l.a('dataSource.Out', { outCount, out: dataSource.Out });\r\n      dataSource.Out?.forEach(name => {\r\n        this.#addEndpoint(domDataSource, name, false, pipelineDataSource, outCount);\r\n      });\r\n\r\n      // Add In-Endpoints from Definition\r\n      const inCount = dataSource.In?.length ?? 0;\r\n      l.a('dataSource.In', { inCount, in: dataSource.In });\r\n      dataSource.In?.forEach(name => {\r\n        this.#addEndpoint(domDataSource, name, true, pipelineDataSource, inCount);\r\n      });\r\n\r\n      // Make DataSource a Target for new Endpoints (if .In is an Array)\r\n      if (dataSource.In) {\r\n        const targetEndpointUnlimited = this.#endpoints.buildTargetEndpoint(pipelineDataSource.EntityGuid);\r\n        targetEndpointUnlimited.maxConnections = -1;\r\n        this.#instance.makeTarget(domDataSource, targetEndpointUnlimited);\r\n      }\r\n\r\n      if (dataSource.DynamicOut)\r\n        this.#instance.makeSource(domDataSource, this.#endpoints.buildSourceEndpoint(pipelineDataSource.EntityGuid), { filter: '.add-endpoint' });\r\n    }\r\n    l.end();\r\n  }\r\n\r\n  /** Create wires */\r\n  #initWirings() {\r\n    const l = this.log.fn('initWirings');\r\n    const wirings = this.pipelineModel.Pipeline.StreamWiring;\r\n    if (!wirings) return l.end('no wirings');\r\n\r\n    const inGroups = groupBy(wirings, wire => wire.To);\r\n    const outGroups = groupBy(wirings, wire => wire.From);\r\n\r\n    l.values({ inGroups, outGroups });\r\n\r\n    wirings.forEach(wire => {\r\n      // read connections from Pipeline\r\n      const sourceElementId = dataSrcIdPrefix + wire.From;\r\n      const fromUuid = sourceElementId + '_out_' + wire.Out;\r\n      const targetElementId = dataSrcIdPrefix + wire.To;\r\n      const toUuid = targetElementId + '_in_' + wire.In;\r\n\r\n      // Ensure In-Endpoint exist\r\n      if (!this.#instance.getEndpoint(fromUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + sourceElementId);\r\n        if (!domDataSource) return;\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const dataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n        this.#addEndpoint(domDataSource, wire.Out, false, dataSource, outGroups[wire.From].length);\r\n      }\r\n\r\n      // Ensure Out-Endpoint exist\r\n      if (!this.#instance.getEndpoint(toUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + targetElementId);\r\n        if (!domDataSource) return;\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const dataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n        \r\n        // if (wire.In === \"DEBUG\") debugger;\r\n\r\n        this.#addEndpoint(domDataSource, wire.In, true, dataSource, inGroups[wire.To].length);\r\n      }\r\n\r\n      try {\r\n        this.#instance.connect({\r\n          uuids: [fromUuid, toUuid],\r\n          paintStyle: this.#nextLinePaintStyle(fromUuid),\r\n        });\r\n      } catch (e) {\r\n        console.error({ message: 'Connection failed', from: fromUuid, to: toUuid });\r\n      }\r\n    });\r\n    l.end();\r\n  }\r\n\r\n  #addEndpoint(domDataSource: HTMLElement, endpointName: string, isIn: boolean, queryDs: PipelineDataSource, count: number = 0) {\r\n    const l = this.log.fnIf('addEndpoint', { endpointName, isIn, queryDs });\r\n    const dataSource = this.dataSources.find(d => d.PartAssemblyAndType === queryDs.PartAssemblyAndType);\r\n    const connectionList = isIn ? dataSource.In : dataSource.Out;\r\n    const hasDynamic = connectionList?.some(name => this.#endpoints.getEndpointInfo(name, false));\r\n    // const count = connectionList?.length ?? -1;\r\n    const endpointInfo = this.#endpoints.getEndpointInfo(endpointName, hasDynamic);\r\n    \r\n    l.a(`endpointInfo ${count}`, { dataSource, connectionList, isDynamic: hasDynamic, count, endpointInfo });\r\n\r\n    // if (endpointName === \"DEBUG\") debugger;\r\n\r\n    let style: string;\r\n    if (hasDynamic)\r\n      style = 'dynamic';\r\n    else if (!endpointInfo.required)\r\n      style = '';\r\n    else {\r\n      const wireExists = this.pipelineModel.Pipeline.StreamWiring?.some(wire => {\r\n        const targetElementId = dataSrcIdPrefix + wire.To;\r\n        const targetEndpointName = wire.In;\r\n\r\n        return targetElementId === domDataSource.id && targetEndpointName === endpointInfo.name;\r\n      });\r\n      style = wireExists ? '' : 'required';\r\n    }\r\n\r\n    const uuid = domDataSource.id + (isIn ? '_in_' : '_out_') + endpointInfo.name;\r\n    const angled = count > endPointsWhereWeRotate;\r\n    const model = isIn\r\n      ? this.#endpoints.buildTargetEndpoint(queryDs.EntityGuid, style)\r\n      : this.#endpoints.buildSourceEndpoint(queryDs.EntityGuid, style);\r\n    // Endpoints on Out-DataSource must be always enabled\r\n    const params = {\r\n      uuid,\r\n      enabled: this.pipelineModel.Pipeline.AllowEdit\r\n        || queryDs.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    };\r\n\r\n    const endpoint: PlumbType = this.#instance.addEndpoint(domDataSource, model, params);\r\n    const overlay = endpoint.getOverlay('endpointLabel');\r\n    overlay.setLabel(endpointInfo.name);\r\n    if (angled)\r\n      overlay.addClass('angled');\r\n    l.end(\"end\", {count, angled, overlay});\r\n  }\r\n\r\n  public onChangeLabel(endpointOrOverlay: PlumbType, isSource: boolean, pipelineDataSourceGuid: string) {\r\n    if (!this.pipelineModel.Pipeline.AllowEdit)\r\n      return;\r\n\r\n    const overlay: PlumbType = endpointOrOverlay.getOverlay ? endpointOrOverlay.getOverlay('endpointLabel') : endpointOrOverlay;\r\n    const data: RenameStreamDialogData = {\r\n      pipelineDataSourceGuid,\r\n      isSource,\r\n      label: overlay.label,\r\n    };\r\n    this.#dialog = this.matDialog.open(RenameStreamComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    this.#dialog.afterClosed().subscribe(newLabel => {\r\n      if (!newLabel) return;\r\n      overlay.setLabel(newLabel);\r\n      setTimeout(() => this.onConnectionsChanged());\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  #bindEvents() {\r\n    this.#instance.bind('connectionDetached', (info: PlumbType) => {\r\n      if (this.#bulkDelete) return;\r\n      const domDataSource: HTMLElement = info.target;\r\n      const pipelineDataSource = this.pipelineModel.DataSources.find(\r\n        pipelineDS => pipelineDS.EntityGuid === domDataSource.id.replace(dataSrcIdPrefix, '')\r\n      );\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      const label: string = info.targetEndpoint.getOverlay('endpointLabel').label;\r\n      const isDynamic = !dataSource.In.some(name => this.#endpoints.getEndpointInfo(name, false).name === label);\r\n      if (isDynamic)\r\n        this.#instance.deleteEndpoint(info.targetEndpoint);\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n\r\n    this.#instance.bind('connection', (info: PlumbType) => {\r\n      if (info.sourceId === info.targetId) {\r\n        setTimeout(() => {\r\n          this.#instance.deleteConnection(info.connection, { fireEvent: false });\r\n          setTimeout(() => this.onConnectionsChanged());\r\n        });\r\n        return;\r\n      }\r\n      const endpointLabel: PlumbType = info.targetEndpoint.getOverlay('endpointLabel');\r\n      const labelPrompt: string = endpointLabel.getLabel();\r\n      const endpoints: PlumbType[] = this.#instance.getEndpoints(info.target.id);\r\n      const targetEndpointHasSameLabel = endpoints.some(endpoint => {\r\n        const label: string = endpoint.getOverlay('endpointLabel').getLabel();\r\n        return label === labelPrompt &&\r\n          info.targetEndpoint.id !== endpoint.id &&\r\n          (endpoint.canvas as HTMLCanvasElement).classList.contains('targetEndpoint');\r\n      });\r\n      if (targetEndpointHasSameLabel)\r\n        endpointLabel.setLabel(`PleaseRename${Math.floor(Math.random() * 99999)}`);\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n  }\r\n\r\n}\r\n\r\n// https://stackoverflow.com/questions/14446511/most-efficient-method-to-groupby-on-an-array-of-objects\r\nconst groupBy = <T, K extends keyof any>(arr: T[], key: (i: T) => K) =>\r\n  arr.reduce((groups, item) => {\r\n    (groups[key(item)] ||= []).push(item);\r\n    return groups;\r\n  }, {} as Record<K, T[]>);","@if ((viewModel$ | async); as vm) {\r\n  <div #domRoot id=\"pipeline-root\">\r\n    <!-- do not use trackBy, jsPlumb drag stops working properly after delete -->\r\n    @if (!hardReset) {\r\n      @for (dataSource of vm.pipelineDataSources; track dataSource) {\r\n        <div\r\n          #domDataSource\r\n          [id]=\"dataSrcIdPrefix + dataSource.EntityGuid\"\r\n          class=\"dataSource\"\r\n          [ngStyle]=\"{\r\n            'top': dataSource.VisualDesignerData.Top + 'px',\r\n            'left': dataSource.VisualDesignerData.Left + 'px',\r\n            'min-width': dataSource.VisualDesignerData.Width ? dataSource.VisualDesignerData.Width + 'px' : null\r\n          }\"\r\n          [ngClass]=\"{\r\n            'show-details': vm.showDataSourceDetails && vm.dataSourceConfigs[dataSource.EntityId]?.length\r\n          }\"\r\n        >\r\n          <div class=\"actions left\">\r\n            <mat-icon class=\"type-info\" [title]=\"vm.typeInfos[dataSource.EntityGuid].UiHint\">\r\n              {{ vm.typeInfos[dataSource.EntityGuid].Icon }}\r\n            </mat-icon>\r\n            @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].EnableConfig) {\r\n              <mat-icon class=\"configure\" title=\"Configure data source\" appMousedownStopPropagation\r\n                (click)=\"configureDataSource(dataSource)\">\r\n                settings\r\n              </mat-icon>\r\n            }\r\n            @if (vm.typeInfos[dataSource.EntityGuid].HelpLink) {\r\n              <mat-icon class=\"help\" title=\"Help for this data source\" appMousedownStopPropagation\r\n                (click)=\"openHelp(vm.typeInfos[dataSource.EntityGuid].HelpLink)\">\r\n                help_outline\r\n              </mat-icon>\r\n            }\r\n          </div>\r\n          <div class=\"actions right\">\r\n            @if (vm.allowEdit && !isOutDataSource(dataSource)) {\r\n              <mat-icon class=\"delete\" title=\"Delete\" appMousedownStopPropagation (click)=\"remove(dataSource)\">\r\n                delete\r\n              </mat-icon>\r\n            }\r\n          </div>\r\n          <div class=\"name\" title=\"Click to edit name\" appMousedownStopPropagation\r\n            (click)=\"vm.allowEdit && editName(dataSource)\">\r\n            <span>{{ dataSource.Name || '(no name)' }}</span>\r\n            <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n          </div>\r\n          <br>\r\n          <div class=\"description\" title=\"Click to edit description\" appMousedownStopPropagation\r\n            (click)=\"vm.allowEdit && editDescription(dataSource)\">\r\n            <span>{{ dataSource.Description }}</span>\r\n            <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n          </div>\r\n          <br>\r\n          @if (vm.showDataSourceDetails && vm.dataSourceConfigs[dataSource.EntityId]?.length) {\r\n            <hr style=\"margin: 0\">\r\n            <table class=\"configs\">\r\n              @for (config of vm.dataSourceConfigs[dataSource.EntityId]; track config) {\r\n                <tr class=\"config\">\r\n                  <td class=\"config-name\" [title]=\"config.name\">{{ config.name }}</td>\r\n                  <td class=\"config-value\" [title]=\"config.value\">{{ config.value }}</td>\r\n                </tr>\r\n              }\r\n            </table>\r\n          }\r\n          <div class=\"typename\" [title]=\"dataSource.PartAssemblyAndType\">\r\n            Type: {{ getTypeName(dataSource.PartAssemblyAndType) }}\r\n          </div>\r\n          @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].DynamicOut) {\r\n            <div class=\"add-endpoint sourceEndpoint dynamic\" title=\"Drag a new Out-Connection\"></div>\r\n          }\r\n          @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].DynamicIn) {\r\n            <div class=\"many-in targetEndpoint dynamic\" title=\"This data source supports multiple In-Connections\"></div>\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n  </div>\r\n}","// tslint:disable-next-line:max-line-length\r\nimport { AsyncPipe, NgClass, NgStyle } from '@angular/common';\r\nimport { AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { BaseComponent } from '../../shared/components/base.component';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { MousedownStopPropagationDirective } from '../../shared/directives/mousedown-stop-propagation.directive';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { loadScripts } from '../../shared/helpers/load-scripts.helper';\r\nimport { classLog } from '../../shared/logging';\r\nimport { mapUntilObjChanged } from '../../shared/rxJs/mapUntilChanged';\r\nimport { PipelineDataSource, PipelineResultStream, VisualDesignerData } from '../models';\r\nimport { QueryDefinitionService } from '../services/query-definition.service';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { calculateTypeInfos } from './plumb-editor.helpers';\r\nimport { PlumbEditorViewModel } from './plumb-editor.models';\r\nimport { dataSrcIdPrefix, Plumber } from './plumber.helper';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  ngAfterViewInit: false,\r\n}\r\n\r\nconst jsPlumbUrl = 'https://cdnjs.cloudflare.com/ajax/libs/jsPlumb/2.14.5/js/jsplumb.min.js';\r\n\r\n@Component({\r\n  selector: 'app-plumb-editor',\r\n  templateUrl: './plumb-editor.component.html',\r\n  styles: [':host { display: block; width: 100%; height: 100%; }'],\r\n  standalone: true,\r\n  imports: [\r\n    NgStyle,\r\n    NgClass,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    MousedownStopPropagationDirective,\r\n  ],\r\n})\r\nexport class PlumbEditorComponent extends BaseComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  \r\n  log = classLog({PlumbEditorComponent}, logSpecs);\r\n\r\n  @ViewChild('domRoot') private domRootRef: ElementRef<HTMLDivElement>;\r\n  @ViewChildren('domDataSource') private domDataSourcesRef: QueryList<ElementRef<HTMLDivElement>>;\r\n\r\n  dataSrcIdPrefix = dataSrcIdPrefix;\r\n  hardReset = false;\r\n\r\n  #plumber: Plumber;\r\n  #scriptLoaded$ = new BehaviorSubject(false);\r\n\r\n  viewModel$: Observable<PlumbEditorViewModel>;\r\n  \r\n  #queryDefinitionSvc = transient(QueryDefinitionService);\r\n\r\n  constructor(\r\n    private visualQueryService: VisualQueryStateService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) { super();}\r\n\r\n  ngOnInit() {\r\n    loadScripts([{ test: 'jsPlumb', src: jsPlumbUrl }], () => {\r\n      this.#scriptLoaded$.next(true);\r\n    });\r\n\r\n    this.subscriptions.add(\r\n      this.visualQueryService.putEntityCountOnConnections$.subscribe(result => {\r\n        this.#plumber.putEntityCountOnConnections(result);\r\n      })\r\n    );\r\n\r\n    const pipelineDesignerData$ = this.visualQueryService.pipelineModel$.pipe(\r\n      mapUntilObjChanged(pipelineModel => JsonHelpers.tryParse(pipelineModel?.Pipeline.VisualDesignerData) ?? {}),\r\n    );\r\n\r\n    this.viewModel$ = combineLatest([\r\n      this.visualQueryService.pipelineModel$,\r\n      this.visualQueryService.dataSources$,\r\n      pipelineDesignerData$,\r\n      this.visualQueryService.dataSourceConfigs$,\r\n    ]).pipe(\r\n      map(([pipelineModel, dataSources, pipelineDesignerData, dataSourceConfigs]) => {\r\n        if (pipelineModel == null || dataSources == null) return;\r\n\r\n        // workaround for jsPlumb not working with dom elements which it initialized on previously.\r\n        // This wipes dom entirely and gives us new elements\r\n        this.hardReset = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        this.hardReset = false;\r\n        const viewModel: PlumbEditorViewModel = {\r\n          pipelineDataSources: pipelineModel.DataSources,\r\n          typeInfos: calculateTypeInfos(pipelineModel.DataSources, dataSources),\r\n          allowEdit: pipelineModel.Pipeline.AllowEdit,\r\n          showDataSourceDetails: pipelineDesignerData.ShowDataSourceDetails ?? false,\r\n          dataSourceConfigs,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const l = this.log.fnIf('ngAfterViewInit');\r\n    // https://stackoverflow.com/questions/37087864/execute-a-function-when-ngfor-finished-in-angular-2/37088348#37088348\r\n    const domDataSourcesLoaded$ = this.domDataSourcesRef.changes.pipe(map(() => true));\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([this.#scriptLoaded$, domDataSourcesLoaded$]).subscribe(([scriptLoaded, domDataSourcesLoaded]) => {\r\n        if (!scriptLoaded || !domDataSourcesLoaded)\r\n          return;\r\n\r\n        l.a('scriptLoaded and domDataSourcesLoaded', { scriptLoaded, domDataSourcesLoaded });\r\n\r\n        this.#plumber?.destroy();\r\n        this.#plumber = new Plumber(\r\n          this.domRootRef.nativeElement,\r\n          this.visualQueryService.pipelineModel$.value,\r\n          this.visualQueryService.dataSources$.value,\r\n          this.onConnectionsChanged.bind(this),\r\n          this.onDragend.bind(this),\r\n          this.onDebugStream.bind(this),\r\n          this.matDialog,\r\n          this.viewContainerRef,\r\n          this.changeDetectorRef,\r\n        );\r\n      })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.#plumber?.destroy();\r\n    this.#scriptLoaded$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  onConnectionsChanged() {\r\n    const connections = this.#plumber.getAllConnections();\r\n    const streamsOut = this.#plumber.getStreamsOut();\r\n    this.visualQueryService.changeConnections(connections, streamsOut);\r\n  }\r\n\r\n  onDragend(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    this.visualQueryService.changeDataSourcePosition(pipelineDataSourceGuid, position);\r\n  }\r\n\r\n  onDebugStream(stream: PipelineResultStream) {\r\n    this.visualQueryService.debugStream(stream);\r\n  }\r\n\r\n  configureDataSource(dataSource: PipelineDataSource): void {\r\n    // ensure dataSource entity is saved\r\n    if (dataSource.EntityGuid.includes('unsaved'))\r\n      return this.visualQueryService.saveAndRun(true, false);\r\n\r\n    this.visualQueryService.editDataSource(dataSource);\r\n  }\r\n\r\n  getTypeName(partAssemblyAndType: string) {\r\n    const dataSource = this.visualQueryService.dataSources$.value.find(ds => ds.PartAssemblyAndType === partAssemblyAndType);\r\n    return this.#queryDefinitionSvc.typeNameFilter(dataSource?.TypeNameForUi || partAssemblyAndType, 'className');\r\n  }\r\n\r\n  isOutDataSource(pipelineDataSource: PipelineDataSource) {\r\n    return pipelineDataSource.PartAssemblyAndType === eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType;\r\n  }\r\n\r\n  remove(pipelineDataSource: PipelineDataSource) {\r\n    if (!confirm(`Delete ${pipelineDataSource.Name} data source?`)) return;\r\n\r\n    this.#plumber.removeEndpointsOnDataSource(pipelineDataSource.EntityGuid);\r\n    const connections = this.#plumber.getAllConnections();\r\n    const streamsOut = this.#plumber.getStreamsOut();\r\n    this.visualQueryService.removeDataSource(pipelineDataSource.EntityGuid, connections, streamsOut);\r\n  }\r\n\r\n  openHelp(url: string) {\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  editName(dataSource: PipelineDataSource) {\r\n    const newName = prompt('Rename data source', dataSource.Name)?.trim();\r\n    if (newName == null || newName === '') return;\r\n\r\n    this.visualQueryService.renameDataSource(dataSource.EntityGuid, newName);\r\n  }\r\n\r\n  editDescription(dataSource: PipelineDataSource) {\r\n    const newDescription = prompt('Edit description', dataSource.Description)?.trim();\r\n    if (newDescription == null) return;\r\n\r\n    this.visualQueryService.changeDataSourceDescription(dataSource.EntityGuid, newDescription);\r\n  }\r\n\r\n}\r\n","@if ((pipelineModel$ | async); as pipelineModel) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"wrapper\">\r\n      <div class=\"actions\">\r\n        <button mat-raised-button class=\"action\" color=\"accent\" (click)=\"saveAndRunQuery(true, true)\">\r\n          Save and run\r\n        </button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(false, true)\">\r\n          Run\r\n        </button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(true, false)\">\r\n          Save\r\n        </button>\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">\r\n          <div>Query Parameters</div>\r\n          <div>\r\n            <button mat-icon-button tippy=\"Edit parameters\" (click)=\"editPipeline()\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button mat-icon-button tippy=\"Query Params Docs\" (click)=\"openParamsHelp()\">\r\n              <mat-icon>info</mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        @if (pipelineModel.Pipeline.Params?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of pipelineModel.Pipeline.Params?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">Test Parameters</div>\r\n        @if (pipelineModel.Pipeline.TestParameters?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of pipelineModel.Pipeline.TestParameters?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      @if (visualDesignerData$ | async; as visualDesignerData) {\r\n        <div class=\"parameters\">\r\n          <span class=\"eav-slide-toggle-label\">Show DataSource Params</span>\r\n          <mat-slide-toggle color=\"primary\" [checked]=\"visualDesignerData.ShowDataSourceDetails\"\r\n            (change)=\"showDataSourceDetails($event)\"/>\r\n          </div>\r\n        }\r\n      @if ((warnings$ | async); as warnings) {\r\n        @if (warnings.length) {\r\n          <div class=\"warnings\">\r\n            <div class=\"title\">\r\n              <span>Warnings</span>\r\n              <mat-icon style=\"color: red\">warning</mat-icon>\r\n            </div>\r\n            <ol class=\"values\">\r\n              @for (warning of warnings; track warning) {\r\n                <li [innerHTML]=\"warning\">\r\n                </li>\r\n              }\r\n            </ol>\r\n          </div>\r\n        }\r\n      }\r\n      @if (pipelineModel.Pipeline.Description) {\r\n        <div class=\"description\">\r\n          <div class=\"title\">Query Description</div>\r\n          <div>{{ pipelineModel.Pipeline.Description }}</div>\r\n        </div>\r\n      }\r\n      <div class=\"footer-actions\">\r\n        <button mat-raised-button class=\"action\" (click)=\"openRestApi()\">\r\n          <span>Use in JSON / REST API</span>\r\n          <mat-icon>code_curly</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n","import { AsyncPipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { map, Observable } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { GoToDevRest } from '../../dev-rest';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { calculateWarnings } from './run-explorer.helpers';\r\n\r\n@Component({\r\n  selector: 'app-run-explorer',\r\n  templateUrl: './run-explorer.component.html',\r\n  styleUrls: ['./run-explorer.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSlideToggleModule,\r\n    AsyncPipe,\r\n  ],\r\n})\r\nexport class RunExplorerComponent implements OnInit {\r\n  pipelineModel$: Observable<PipelineModel>;\r\n  warnings$: Observable<string[]>;\r\n  visualDesignerData$: Observable<Record<string, any>>;\r\n\r\n  #dialogRouter = transient(DialogRoutingService);\r\n  \r\n  constructor(\r\n    private context: Context,\r\n    private visualQueryService: VisualQueryStateService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.pipelineModel$ = this.visualQueryService.pipelineModel$.asObservable();\r\n    this.warnings$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => calculateWarnings(pipelineModel, this.context)),\r\n    );\r\n    this.visualDesignerData$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => JsonHelpers.tryParse(pipelineModel.Pipeline.VisualDesignerData) ?? {}),\r\n    );\r\n  }\r\n\r\n  editPipeline() {\r\n    this.visualQueryService.editPipelineEntity();\r\n  }\r\n\r\n  openParamsHelp() {\r\n    window.open('https://go.2sxc.org/QueryParams', '_blank');\r\n  }\r\n\r\n  saveAndRunQuery(save: boolean, run: boolean) {\r\n    this.visualQueryService.saveAndRun(save, run);\r\n  }\r\n\r\n  showDataSourceDetails(event: MatSlideToggleChange): void {\r\n    this.visualQueryService.showDataSourceDetails(event.checked);\r\n  }\r\n\r\n  openRestApi() {\r\n    const queryGuid = this.visualQueryService.pipelineModel$.value.Pipeline.EntityGuid;\r\n    this.#dialogRouter.navRelative([GoToDevRest.getUrlQueryDialog(queryGuid)]);\r\n  }\r\n}\r\n","import { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\n\r\n/**\r\n * Check if there are special warnings the developer should know.\r\n * Typically when the test ModuleId is different from the one we're currently working on\r\n */\r\nexport function calculateWarnings(pipelineModel: PipelineModel, context: Context) {\r\n  const warnings: string[] = [];\r\n\r\n  try {\r\n    const queryParams = pipelineModel.Pipeline.Params?.split(/\\r?\\n/) || [];\r\n    const testParams = pipelineModel.Pipeline.TestParameters?.split(/\\r?\\n/) || [];\r\n\r\n    queryParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) return;\r\n\r\n      // Check if the syntax on Query Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const paramSyntax = /^[a-zA-Z0-9]+=(.*)$/gmi;\r\n      const matched = paramSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Query Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>key=value</code> <br>\r\n          or resolve to a token like: <br>\r\n          <code>key=[source:key]</code>\r\n        `);\r\n      }\r\n    });\r\n\r\n    testParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) return;\r\n\r\n      // Check if the syntax on Test Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const testParamSyntax = /^\\[[a-zA-Z]+:[a-zA-Z0-9]+\\]=(.*)$/gmi;\r\n      const matched = testParamSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Test Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>[source:key]=value</code>\r\n        `);\r\n      }\r\n\r\n      // Check if we should show the warning about the test ModuleId.\r\n      // This is because in the old days, the ModuleId wasn't auto-filled, so people had to add it as a test value.\r\n      // Now it's not necessary any more\r\n      const midRegex = /^\\[module:id\\]=([0-9]*)$/gmi;\r\n      const midMatch = midRegex.exec(param);\r\n      if (midMatch) {\r\n        const testMid = midMatch[1];\r\n        const urlMid = context.moduleId?.toString();\r\n        if (testMid !== urlMid) {\r\n          warnings.push(`\r\n            Your test ModuleId (${testMid}) is different from the current ModuleId (${urlMid}).<br>\r\n            Note that 2sxc automatically provides the ModuleId - so you usually do not need to set it\r\n          `);\r\n        }\r\n      }\r\n\r\n      const oldMidRegex = /^\\[module:moduleid\\]=([0-9]*)$/gmi;\r\n      const oldMidMatch = oldMidRegex.exec(param);\r\n      if (oldMidMatch) {\r\n        warnings.push(`\r\n          You are using deprecated [Module:ModuleId] test parameter.<br>\r\n          Please use [Module:Id]\r\n        `);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Something went wrong in calculateWarnings for params', error);\r\n  }\r\n\r\n  return warnings;\r\n}\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ActivatedRoute, RouterOutlet } from '@angular/router';\r\nimport { Context } from '../shared/services/context';\r\nimport { AddExplorerComponent } from './add-explorer/add-explorer.component';\r\nimport { PlumbEditorComponent } from './plumb-editor/plumb-editor.component';\r\nimport { RunExplorerComponent } from './run-explorer/run-explorer.component';\r\nimport { VisualQueryStateService } from './services/visual-query.service';\r\n\r\n@Component({\r\n  selector: 'app-visual-query',\r\n  templateUrl: './visual-query.component.html',\r\n  styleUrls: ['./visual-query.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    RouterOutlet,\r\n    NgClass,\r\n    MatIconModule,\r\n    RunExplorerComponent,\r\n    AddExplorerComponent,\r\n    PlumbEditorComponent,\r\n  ],\r\n  providers: [\r\n    VisualQueryStateService,  // Shared State for the entire Visual Query, - init run here\r\n  ],\r\n})\r\nexport class VisualQueryComponent implements OnInit {\r\n  @ViewChild(PlumbEditorComponent) plumbEditor: PlumbEditorComponent;\r\n\r\n  explorer = {\r\n    run: 'run',\r\n    add: 'add'\r\n  };\r\n  activeExplorer = this.explorer.run;\r\n\r\n  constructor(\r\n    private context: Context,\r\n    private route: ActivatedRoute,\r\n    private visualQueryService: VisualQueryStateService\r\n  ) {\r\n    this.context.init(this.route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.visualQueryService.init();\r\n  }\r\n\r\n  toggleExplorer(explorer: string) {\r\n    this.activeExplorer = (this.activeExplorer === explorer) ? null : explorer;\r\n  }\r\n\r\n  openHelp() {\r\n    window.open('https://go.2sxc.org/visual-query', '_blank');\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n<div class=\"editor-root\">\r\n  <div class=\"editor-side-toolbar\">\r\n    <div class=\"button\" tippy=\"Run\" [ngClass]=\"{ 'active': activeExplorer === explorer.run }\"\r\n      (click)=\"toggleExplorer(explorer.run)\">\r\n      <mat-icon>play_arrow</mat-icon>\r\n    </div>\r\n    <div class=\"button\" tippy=\"Add\" [ngClass]=\"{ 'active': activeExplorer === explorer.add }\"\r\n      (click)=\"toggleExplorer(explorer.add)\">\r\n      <mat-icon>add</mat-icon>\r\n    </div>\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"button\" tippy=\"Help\" (click)=\"openHelp()\">\r\n      <mat-icon>help_outline</mat-icon>\r\n    </div>\r\n  </div>\r\n\r\n  <app-run-explorer [hidden]=\"activeExplorer !== explorer.run\"></app-run-explorer>\r\n\r\n  <app-add-explorer [hidden]=\"activeExplorer !== explorer.add\"></app-add-explorer>\r\n\r\n  <app-plumb-editor></app-plumb-editor>\r\n</div>\r\n"],"x_google_ignoreList":[]}