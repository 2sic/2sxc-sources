{"version":3,"file":"projects_eav-ui_src_app_apps-management_system-info_system-info_component_ts-projects_eav-ui_-4a0baf.1e30b5d8b992a5cc.js","mappings":"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","names":["SxcInsightsService","HttpServiceBase","activatePageLog","duration","this","http","get","apiUrl","webApiLogRoot","params","toString","__ngFactoryType__","factory","ɵfac","i0","_r5","info_r3","$implicit","ctx_r3","openSideNavPath","link","url","_c4","label","_r2","clipboard","copyToClipboard","value","SystemInfoComponent_For_12_Conditional_6_Template","_r8","info_r7","target","SystemInfoComponent_For_36_Conditional_6_Conditional_0_Template","SystemInfoComponent_For_36_Conditional_6_Conditional_1_Template","_r6","SystemInfoComponent_For_36_Conditional_6_Template","SystemInfoComponent_Conditional_119_Conditional_0_Template","duration_r10","errors","pattern","info_r12","SystemInfoComponent_For_135_Conditional_6_Conditional_0_Template","SystemInfoComponent_For_135_Conditional_6_Conditional_1_Template","_r11","SystemInfoComponent_For_135_Conditional_6_Template","tmp_9_0","icon_r13","undefined","label_r14","SystemInfoComponent","#dialogSettings","#sxcInsightsService","#zoneSvc","#dialogSvc","#dialogRouter","constructor","snackBar","features","inject","FeaturesScopedService","transient","DialogConfigAppService","ZoneService","DialogService","DialogRoutingService","positiveWholeNumber","loading","signal","languages","systemInfoSet","systemInfos","computed","systemInfoSetValue","router","System","EavVersion","Platform","PlatformVersion","Zones","Fingerprint","License","Owner","siteInfos","languagesValue","allLanguages","length","activeLanguages","filter","l","IsEnabled","Site","ZoneId","SiteId","Apps","warningIcon","Messages","WarningsObsolete","WarningsOther","warningInfos","window","$2sxc","lsEnabled","isEnabled","FeatureNames","LightSpeed","cspEnabled","ContentSecurityPolicy","ClipboardService","ngOnInit","getSystemInfo","getLanguages","doOnDialogClosed","openSiteSettings","openParentAppSettings","openGlobalSettings","partName","getCurrent$","pipe","map","dc","Context","PrimaryApp","take","subscribe","appIdentity","openAppAdministration","AppId","openInsights","open","sideNavPath","includes","navigate","replace","form","set","pageLogDuration","res","document","activeElement","HTMLElement","blur","resetForm","error","next","i1","selectors","standalone","decls","vars","consts","template","rf","ctx","SystemInfoComponent_For_12_Template","SystemInfoComponent_ng_container_19_Template","_r1","SystemInfoComponent_For_36_Template","SystemInfoComponent_ng_container_44_Template","SystemInfoComponent_Conditional_61_Template","SystemInfoComponent_ng_container_64_Template","SystemInfoComponent_Conditional_76_Template","SystemInfoComponent_ng_container_79_Template","SystemInfoComponent_ng_container_98_Template","activateLogForm_r9","$event","SystemInfoComponent_Conditional_119_Template","SystemInfoComponent_For_135_Template","SystemInfoComponent_ng_template_137_Template","docsLink_r16","_c0","_c1","_c2","_c3","touched","valid","MatCardModule","i2","MatIconModule","i3","RouterLink","NgTemplateOutlet","MatButtonModule","i4","FormsModule","i5","MatFormFieldModule","i6","MatInputModule","i7","RouterOutlet","FeatureTextInfoComponent","FieldHintComponent","TippyDirective","encapsulation","AppSyncWithSiteFiles","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","PermissionsByLanguage","ContentTypeFieldsReuseDefinitions","AppExportAssetsAdvanced","PickerUiCheckbox","PickerUiRadio","PickerSourceCsv","PickerSourceAppAssets","PickerFormulas","PickerUiMoreInfo","ctx_r1","openDialog","feature","icon","FeatureComponentBase","super","asInfo","input","computedObj","inputs","ngContentSelectors","FeatureTextInfoComponent_Conditional_0_Template","show","TranslateModule","styles","FeatureDetailService","getFeatureDetails","nameId","id_r3","FeatureInfoDialogComponent_Conditional_0_Conditional_15_Template","dialog","close","feat_r5","name","description","tmp_6_0","FeatureInfoDialogComponent","#featureDetailSvc","dialogData","featureDetails","signalObj","f","MAT_DIALOG_DATA","FeatureInfoDialogComponent_Conditional_0_Template","tmp_0_0","SafeHtmlPipe","#matDialog","#viewContainerRef","#changeDetectorRef","#featuresService","featureNameId","required","showIf","MatDialog","ViewContainerRef","ChangeDetectorRef","getCurrent","feat","openFeatureDialog","featureId","viewContainerRef","changeDetectorRef","autoFocus","data","width","markForCheck","webApiAppRoot","ImportAppService","importApp","file","changedName","retryOnDuplicate","formData","FormData","append","post","zoneId","switchMap","result","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","of","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","isError","isShort","toggleIsShort","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","tmp_2_0","NgClass","str","el","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","logSpecs","ServiceBase","route","log","classLog","snapshot","getParam","key","paramMap","getParams","keys","reduce","acc","getQueryParam","queryParamMap","getQueryParams","state","getCurrentNavigation","extras","callback","fnIf","subscriptions","add","childDialogClosed$","end","navPath","navRelative","commands","relativeTo","navParentFirstChild","parent","firstChild","events","event","NavigationEnd","startWith","pairwise","hadChildBefore","hasChildNow","Subscription","ngOnDestroy","destroy","unsubscribe"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/apps-management/services/sxc-insights.service.ts","./projects/eav-ui/src/app/apps-management/system-info/system-info.component.html","./projects/eav-ui/src/app/apps-management/system-info/system-info.component.ts","./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.html","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.ts","./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/helpers/copy-to-clipboard.helper.ts","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts","./projects/eav-ui/src/app/shared/services/service-base.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiLogRoot = 'sys/log/';\r\n\r\n@Injectable()\r\nexport class SxcInsightsService extends HttpServiceBase {\r\n\r\n  activatePageLog(duration: number) {\r\n    return this.http.get<string>(this.apiUrl(webApiLogRoot + 'EnableDebug'), {\r\n      params: { duration: duration.toString() }\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-cards-box\">\r\n  <!-- Platform Info -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">settings_applications</mat-icon>\r\n      </div>\r\n      <mat-card-title>Platform</mat-card-title>\r\n      <mat-card-subtitle>What you are running</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      @for (info of systemInfos(); track info) {\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ info.label }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span class=\"eav-info-row__value__span eav-click\" [tippy]=\"info.value\"\r\n            (click)=\"clipboard.copyToClipboard(info.value)\">{{ info.value }}</span>\r\n          @if (info.link) {\r\n          <a class=\"eav-info-row__link\" [routerLink]=\"['/']\" (click)=\"openSideNavPath(info.link.url)\">\r\n            {{ info.link.label }}\r\n          </a>\r\n          }\r\n        </div>\r\n      </div>\r\n      }\r\n      <h4>Global Settings</h4>\r\n      <p>\r\n        This includes both pre-defined SystemSettings as well as custom Settings.\r\n        It will affect the entire Installation.\r\n      </p>\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"start\">\r\n      <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/settings' }\"></ng-container>\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"openGlobalSettings()\">\r\n        <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n        <span>Open Global Settings</span>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n  <!-- Site Info -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">public</mat-icon>\r\n      </div>\r\n      <mat-card-title>This Site</mat-card-title>\r\n      <mat-card-subtitle>The current Site you're on</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      @for (info of siteInfos(); track info) {\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ info.label }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span [tippy]=\"info.value\" (click)=\"clipboard.copyToClipboard(info.value)\">{{ info.value }}</span>\r\n          @if (info.link) {\r\n          @if (info.link.target === 'angular') {\r\n          <a [routerLink]=\"['/']\" class=\"eav-info-row__link\" (click)=\"openSideNavPath(info.link.url)\">\r\n            {{info.link.label }}\r\n          </a>\r\n          }\r\n          @if (info.link.target !== 'angular') {\r\n          <a class=\"eav-info-row__link\" [href]=\"info.link.url\" [target]=\"info.link.target\">{{ info.link.label }}</a>\r\n          }\r\n          }\r\n        </div>\r\n      </div>\r\n      }\r\n      <div class=\"card-content-separator\"></div>\r\n      <h4>Site Settings</h4>\r\n      <p>\r\n        This includes both pre-defined SystemSettings as well as custom Settings.\r\n        It will affect the entire Site / Portal.\r\n      </p>\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"start\">\r\n      <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/settings' }\"></ng-container>\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"openSiteSettings()\">\r\n        <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n        <span>Open Site Settings</span>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n  <!-- Performance / Lightspeed -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">bolt</mat-icon>\r\n      </div>\r\n      <mat-card-title>Performance</mat-card-title>\r\n      <mat-card-subtitle>Performance Enhancements and Caching</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <app-feature-text-info [featureNameId]=\"'LightSpeedOutputCache'\" [asInfo]=\"true\"></app-feature-text-info>\r\n      @if (lsEnabled()) {\r\n      <div>\r\n        LightSpeed is enabled.\r\n        Configure it in each site/app as you need.\r\n      </div>\r\n      }\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"start\">\r\n      <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/lightspeed' }\"></ng-container>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n  <!-- Security -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">local_police</mat-icon>\r\n      </div>\r\n      <mat-card-title>Security</mat-card-title>\r\n      <mat-card-subtitle>System Security Features</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <app-feature-text-info [featureNameId]=\"'ContentSecurityPolicy'\" [asInfo]=\"true\"></app-feature-text-info>\r\n      @if (cspEnabled()) {\r\n      <div>\r\n        ContentSecurityPolicy is enabled.\r\n        Configure it in each site/app as you need.\r\n      </div>\r\n      }\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"start\">\r\n      <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/csp' }\"></ng-container>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n  <!-- Insights -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">speed</mat-icon>\r\n      </div>\r\n      <mat-card-title>2sxc Insights</mat-card-title>\r\n      <mat-card-subtitle>See what's happening under the hood</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <h4>2sxc Insights for Super Users</h4>\r\n      <p>\r\n        This is to access a special section to see what is really in the server memory.\r\n        It's intended for extensive debugging - see also\r\n        <a href=\"https://2sxc.org/en/blog/post/using-2sxc-insights\" target=\"_blank\">this blog post</a>.\r\n      </p>\r\n      <div align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/insights' }\"></ng-container>\r\n        <button mat-button class=\"eav-button__with-icon\" (click)=\"openInsights()\">\r\n          <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n          <span>Open 2sxc Insights</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"card-content-separator\"></div>\r\n      <h4>Activate Page Level Logging</h4>\r\n      <form #activateLogForm=\"ngForm\" class=\"activate-log-form\" (ngSubmit)=\"activatePageLog(activateLogForm)\">\r\n        <div>\r\n          This will place insights-logs in the HTML of the user output for users with <code>?debug=true</code> in the\r\n          url.\r\n          It can only be activated for short periods of time.\r\n        </div>\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Duration in Minutes</mat-label>\r\n          <input matInput type=\"number\" min=\"0\" required [pattern]=\"positiveWholeNumber\" [(ngModel)]=\"pageLogDuration\"\r\n            name=\"Duration\" #duration=\"ngModel\" [disabled]=\"loading()\">\r\n        </mat-form-field>\r\n        @if (duration.touched && duration.errors) {\r\n        @if (duration.errors.pattern) {\r\n        <app-field-hint [isError]=\"true\">\r\n          Only positive whole numbers\r\n        </app-field-hint>\r\n        }\r\n        }\r\n      </form>\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"end\">\r\n      <button mat-raised-button type=\"submit\" color=\"accent\" [disabled]=\"!activateLogForm.valid || loading()\">\r\n        Activate\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n  <!-- Warnings -->\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon class=\"eav-card-header-avatar-icon\">{{ warningIcon() }}</mat-icon>\r\n      </div>\r\n      <mat-card-title>Warnings</mat-card-title>\r\n      <mat-card-subtitle>System and Code Warnings</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      @for (info of warningInfos(); track info) {\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label eav-long\">{{ info.label }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span [tippy]=\"info.value\" (click)=\"clipboard.copyToClipboard(info.value)\">{{ info.value }}</span>\r\n          @if (info.link) {\r\n          @if (info.link.target === 'angular') {\r\n          <a class=\"eav-info-row__link\" [routerLink]=\"info.link.url\">\r\n            {{info.link.label}}</a>\r\n          }\r\n          @if (info.link.target !== 'angular') {\r\n          <a class=\"eav-info-row__link\" [href]=\"info.link.url\" [target]=\"info.link.target\">{{ info.link.label }}</a>\r\n          }\r\n          }\r\n        </div>\r\n      </div>\r\n      }\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n  </mat-card>\r\n</div>\r\n\r\n\r\n<ng-template #docsLink let-icon let-label let-link=\"link\">\r\n  <a mat-button class=\"eav-button__with-icon\" href=\"{{link}}\" target=\"_blank\" [tippy]=\"'online documentation'\">\r\n    <mat-icon class=\"eav-icon\">{{ icon ?? \"menu_book\" }}</mat-icon>\r\n    <span>{{ label }}</span>\r\n  </a>\r\n</ng-template>\r\n\r\n<router-outlet></router-outlet>\r\n","import { NgTemplateOutlet } from '@angular/common';\r\nimport { Component, OnInit, computed, inject, signal } from '@angular/core';\r\nimport { FormsModule, NgForm } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterLink, RouterOutlet } from '@angular/router';\r\nimport { map, take } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { DialogConfigAppService } from '../../app-administration/services/dialog-config-app.service';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { FeatureTextInfoComponent } from '../../features/feature-text-info/feature-text-info.component';\r\nimport { FeaturesScopedService } from '../../features/features-scoped.service';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { ClipboardService } from '../../shared/services/clipboard.service';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\nimport { SiteLanguage } from '../models/site-language.model';\r\nimport { SystemInfoSet } from '../models/system-info.model';\r\nimport { SxcInsightsService } from '../services/sxc-insights.service';\r\nimport { ZoneService } from '../services/zone.service';\r\nimport { InfoTemplate } from './system-info.models';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-system-info',\r\n  templateUrl: './system-info.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatIconModule,\r\n    RouterLink,\r\n    NgTemplateOutlet,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    RouterOutlet,\r\n    FeatureTextInfoComponent,\r\n    FieldHintComponent,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class SystemInfoComponent implements OnInit {\r\n\r\n  public features = inject(FeaturesScopedService);\r\n\r\n  #dialogSettings = transient(DialogConfigAppService);\r\n  #sxcInsightsService = transient(SxcInsightsService);\r\n  #zoneSvc = transient(ZoneService);\r\n  #dialogSvc = transient(DialogService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  pageLogDuration: number;\r\n  positiveWholeNumber = /^[1-9][0-9]*$/;\r\n\r\n\r\n  loading = signal(false);\r\n  languages = signal<SiteLanguage[] | undefined>(undefined);\r\n  systemInfoSet = signal<SystemInfoSet | undefined>(undefined);\r\n\r\n  systemInfos = computed(() => {\r\n    const systemInfoSetValue = this.systemInfoSet();\r\n    if (systemInfoSetValue == null) return;\r\n    const url = this.#dialogRouter.router.url + '/' + \"registration\";\r\n    const info: InfoTemplate[] = [\r\n      { label: 'CMS', value: `2sxc v.${systemInfoSetValue.System.EavVersion}` },\r\n      { label: 'Platform', value: `${systemInfoSetValue.System.Platform} v.${systemInfoSetValue.System.PlatformVersion}` },\r\n      { label: 'Zones', value: systemInfoSetValue.System.Zones.toString() },\r\n      { label: 'Fingerprint', value: systemInfoSetValue.System.Fingerprint },\r\n      {\r\n        label: 'Registered to',\r\n        value: systemInfoSetValue.License.Owner || '(unregistered)',\r\n        link: systemInfoSetValue.License.Owner\r\n          ? {\r\n            url,\r\n            label: 'manage',\r\n            target: 'angular',\r\n          }\r\n          : {\r\n            url,\r\n            label: 'register',\r\n            target: 'angular',\r\n          },\r\n      },\r\n    ];\r\n    return info;\r\n  });\r\n\r\n  siteInfos = computed(() => {\r\n    const systemInfoSetValue = this.systemInfoSet();\r\n    const languagesValue = this.languages();\r\n\r\n    if (systemInfoSetValue == null || languagesValue == null) return;\r\n\r\n    const allLanguages = languagesValue.length;\r\n    const activeLanguages = languagesValue.filter(l => l.IsEnabled).length;\r\n\r\n    const info: InfoTemplate[] = [\r\n      { label: 'Zone', value: systemInfoSetValue.Site.ZoneId.toString() },\r\n      { label: 'Site', value: systemInfoSetValue.Site.SiteId.toString() },\r\n      {\r\n        label: 'Languages',\r\n        value: `${activeLanguages}/${allLanguages}`,\r\n        link: {\r\n          url: 'languages',\r\n          label: 'manage',\r\n          target: 'angular',\r\n        },\r\n      },\r\n      {\r\n        label: 'Apps',\r\n        value: systemInfoSetValue.Site.Apps.toString(),\r\n        link: {\r\n          url: 'list',\r\n          label: 'manage',\r\n          target: 'angular',\r\n        },\r\n      },\r\n    ];\r\n\r\n    return info;\r\n  });\r\n\r\n  warningIcon = computed(() => {\r\n    const systemInfoSetValue = this.systemInfoSet();\r\n    if (systemInfoSetValue == null) return undefined;\r\n    if (systemInfoSetValue.Messages.WarningsObsolete || systemInfoSetValue.Messages.WarningsOther) {\r\n      return 'warning';\r\n    }\r\n    return 'check';\r\n  });\r\n\r\n  warningInfos = computed(() => {\r\n    const systemInfoSetValue = this.systemInfoSet();\r\n    if (systemInfoSetValue == null) return undefined;\r\n\r\n    const info: InfoTemplate[] = [\r\n      {\r\n        label: 'Warnings Obsolete',\r\n        value: systemInfoSetValue.Messages.WarningsObsolete.toString(),\r\n        link: !systemInfoSetValue.Messages.WarningsObsolete\r\n          ? undefined\r\n          : {\r\n            url: window.$2sxc.http.apiUrl('sys/insights/logs?key=warnings-obsolete'),\r\n            label: 'review',\r\n            target: '_blank',\r\n          },\r\n      },\r\n      {\r\n        label: 'Warnings Other',\r\n        value: systemInfoSetValue.Messages.WarningsOther.toString(),\r\n        link: !systemInfoSetValue.Messages.WarningsOther\r\n          ? undefined\r\n          : {\r\n            url: window.$2sxc.http.apiUrl('sys/insights/logs'),\r\n            label: 'review',\r\n            target: '_blank',\r\n          },\r\n      },\r\n    ];\r\n    return info;\r\n  });\r\n\r\n  protected lsEnabled = this.features.isEnabled[FeatureNames.LightSpeed];\r\n  protected cspEnabled = this.features.isEnabled[FeatureNames.ContentSecurityPolicy];\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n  \r\n  protected clipboard = transient(ClipboardService);\r\n\r\n  ngOnInit(): void {\r\n    this.getSystemInfo();\r\n    this.getLanguages();\r\n    this.#dialogRouter.doOnDialogClosed(() => {\r\n      this.getSystemInfo();\r\n      this.getLanguages();\r\n    });\r\n  }\r\n\r\n  openSiteSettings(): void {\r\n    this.openParentAppSettings(\"Site\");\r\n  }\r\n\r\n  openGlobalSettings(): void {\r\n    this.openParentAppSettings(\"System\");\r\n  }\r\n\r\n  openParentAppSettings(partName: \"System\" | \"Site\"): void {\r\n    this.#dialogSettings.getCurrent$()\r\n      .pipe(map(dc => dc?.Context[partName].PrimaryApp), take(1))\r\n      .subscribe(appIdentity => {\r\n        this.#dialogSvc.openAppAdministration(appIdentity.ZoneId, appIdentity.AppId, 'app');\r\n      })\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/help'), '_blank');\r\n  }\r\n\r\n\r\n  openSideNavPath(sideNavPath: string): void {\r\n\r\n    // Url are /2/apps/system/registration, sideNavPath are only the last part of the url\r\n    if (sideNavPath.includes('registration'))\r\n      sideNavPath = 'registration';\r\n\r\n    const router = this.#dialogRouter.router;\r\n    router.navigate([router.url.replace('system', '') + sideNavPath]);\r\n  }\r\n\r\n  activatePageLog(form: NgForm) {\r\n    this.loading.set(true);\r\n    this.snackBar.open('Activating...');\r\n    this.#sxcInsightsService.activatePageLog(this.pageLogDuration).subscribe(res => {\r\n      this.loading.set(false);\r\n      this.snackBar.open(res, null, { duration: 4000 });\r\n    });\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n    form.resetForm();\r\n  }\r\n\r\n  private getSystemInfo(): void {\r\n    this.#zoneSvc.getSystemInfo().subscribe({\r\n      error: () => {\r\n        this.systemInfoSet.set(undefined);\r\n      },\r\n      next: (systemInfoSet) => {\r\n        this.systemInfoSet.set(systemInfoSet);\r\n      },\r\n    });\r\n  }\r\n\r\n  private getLanguages(): void {\r\n    this.#zoneSvc.getLanguages().subscribe({\r\n      error: () => {\r\n        this.languages.set(undefined);\r\n      },\r\n      next: (languages) => {\r\n        this.languages.set(languages);\r\n      },\r\n    });\r\n  }\r\n}\r\n","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  ContentTypeFieldsReuseDefinitions: 'ContentTypeFieldsReuseDefinitions',\r\n  AppExportAssetsAdvanced: 'AppExportAssetsAdvanced',\r\n\r\n  // Picker features\r\n  PickerUiCheckbox: 'PickerUiCheckbox',\r\n  PickerUiRadio: 'PickerUiRadio',\r\n  PickerSourceCsv: 'PickerSourceCsv',\r\n  PickerSourceAppAssets: 'PickerSourceAppAssets',\r\n  PickerFormulas: 'PickerFormulas',\r\n  PickerUiMoreInfo: 'PickerUiMoreInfo',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","@if (show()) {\r\n  <div class=\"feature-text-info\" (click)=\"openDialog()\" [tippy]=\"'Features.Tooltip' | translate: feature()\">\r\n    <!-- Icon column -->\r\n    <mat-icon class=\"icon icon-{{icon()}}\">{{ icon() }}</mat-icon>\r\n    <!-- Text column -->\r\n    <div class=\"feature-text-info-content\">\r\n      <div class=\"feature-text-info-title\">{{ 'Features.FeatureNotActivated' | translate }}</div>\r\n      <div class=\"feature-text-info-subtitle\">{{ 'Features.ClickToFindOutMore' | translate }}</div>\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n}\r\n","import { Component, input } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { computedObj } from '../../shared/signals/signal.utilities';\r\nimport { FeatureComponentBase } from '../shared/base-feature.component';\r\n\r\n@Component({\r\n  selector: 'app-feature-text-info',\r\n  templateUrl: './feature-text-info.component.html',\r\n  styleUrls: ['./feature-text-info.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    TranslateModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class FeatureTextInfoComponent extends FeatureComponentBase {\r\n  asInfo = input<boolean>(false);\r\n\r\n  constructor() { super(); }\r\n\r\n  icon = computedObj('icon', () => this.asInfo() ? 'info' : 'warning');\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Feature } from '../models';\r\n\r\nconst webApiFeatureDetails = \"admin/feature/details\";\r\n\r\n@Injectable()\r\nexport class FeatureDetailService extends HttpServiceBase {\r\n\r\n  getFeatureDetails(nameId: string): Observable<Feature> {\r\n    return this.http.get<Feature>(this.apiUrl(webApiFeatureDetails), {\r\n      params: { nameId }\r\n    });\r\n  }\r\n}\r\n","@if (featureDetails(); as feat) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ feat.name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"feat.description | safeHtml\"></p>\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ \"Features.Status\" | translate }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ (feat.isEnabled ? \"Features.Active\" : \"Features.NotActive\") | translate }}</span>\r\n        </div>\r\n      </div>\r\n      @if (feat.nameId; as id) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">ID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span [tippy]=\"id\" (click)=\"clipboard.copyToClipboard(id)\">{{ id }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      <a [href]=\"feat.link\" target=\"_blank\" mat-raised-button color=\"accent\" class=\"eav-card-action-button\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        {{ \"Features.FindOutMore\" | translate }}\r\n      </a>\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"dialog.close()\">\r\n        {{ \"Features.Close\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}","import { Component, Inject } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { transient } from '../../../../../core';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\nimport { ClipboardService } from '../../shared/services/clipboard.service';\r\nimport { signalObj } from '../../shared/signals/signal.utilities';\r\nimport { Feature } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\n\r\n@Component({\r\n  selector: 'app-feature-info-dialog',\r\n  templateUrl: './feature-info-dialog.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    TranslateModule,\r\n    TippyDirective,\r\n    SafeHtmlPipe,\r\n  ]\r\n})\r\nexport class FeatureInfoDialogComponent {\r\n\r\n  // TODO: THIS component shows the same details as the FeatureDetailsDialogComponent\r\n  // TODO: @2pp pls change to just load the feature, then include the <app-feature-details-dialog [specs]=\"{ feature: ..., showStatus: true, showGuid: false, ...\">\r\n  // So the end result is a simple @if (...) <app-feature-details-dialog [specs]=\"{ feature: ... }>\r\n  // for an example of the tag how it's used, check out FeaturesUsedButUnlicensedComponent\r\n  // but this file will basically just have 3 lines of html\r\n\r\n  #featureDetailSvc = transient(FeatureDetailService);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    protected dialog: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    this.#featureDetailSvc.getFeatureDetails(this.dialogData).subscribe(f => this.featureDetails.set(f));\r\n  }\r\n\r\n  protected featureDetails = signalObj<Feature>('feature', null);\r\n\r\n  protected clipboard = transient(ClipboardService);\r\n}\r\n","import { ChangeDetectorRef, Directive, ViewContainerRef, inject, input } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { computedObj } from '../../shared/signals/signal.utilities';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { FeaturesScopedService } from '../features-scoped.service';\r\n\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n\r\n  /** Feature NameId to check */\r\n  featureNameId = input.required<string>();\r\n\r\n  /** When to show it - typically when it is _not_ enabled (default) */\r\n  showIf = input<boolean>(false);\r\n\r\n  #matDialog = inject(MatDialog);\r\n  #viewContainerRef = inject(ViewContainerRef);\r\n  #changeDetectorRef = inject(ChangeDetectorRef);\r\n  #featuresService = inject(FeaturesScopedService);\r\n\r\n  constructor() { }\r\n\r\n  feature = computedObj('feature', () => this.#featuresService.getCurrent(this.featureNameId()));\r\n\r\n  show = computedObj('show', () => {\r\n    const feat = this.feature();\r\n    if (feat == null) return false;\r\n    return this.showIf() == (feat?.isEnabled ?? false);\r\n  })\r\n\r\n  openDialog() {\r\n    openFeatureDialog(this.#matDialog, this.featureNameId(), this.#viewContainerRef, this.#changeDetectorRef);\r\n  }\r\n}\r\n\r\n\r\nexport function openFeatureDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n  dialog.open(FeatureInfoDialogComponent, {\r\n    autoFocus: false,\r\n    data: featureId,\r\n    viewContainerRef: viewContainerRef,\r\n    width: '400px',\r\n  });\r\n\r\n  changeDetectorRef?.markForCheck();\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService extends HttpServiceBase {\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.zoneId }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    NgClass,\r\n    NgTemplateOutlet\r\n  ]\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n","import { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { ServiceBase } from '../services/service-base';\r\nimport { classLog } from '../logging';\r\n\r\nconst logSpecs = {\r\n  doOnDialogClosed: true,\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase {\r\n\r\n  log = classLog({DialogRoutingService}, logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  getParam(key: string): string {\r\n    return this.route.snapshot.paramMap.get(key);\r\n  }\r\n\r\n  getParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const paramMap = this.route.snapshot.paramMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = paramMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  getQueryParam(key: string): string {\r\n    return this.route.snapshot.queryParamMap.get(key);\r\n  }\r\n\r\n  getQueryParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const queryParamMap = this.route.snapshot.queryParamMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = queryParamMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe(() => callback())\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  public navParentFirstChild(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route.parent.firstChild });\r\n  }\r\n  \r\n  childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}