{"version":3,"file":"projects_eav-ui_src_app_apps-management_apps-list_apps-list_component_ts.3119e447ae9a2000.js","mappings":"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","names":["AppListShowIcons","states","true","tooltip","icon","false","AppListCodeErrorIcons","clickable","getUrl","data","window","$2sxc","http","apiUrl","Id","i0","_r1","ctx_r1","do","app","IsApp","AppsListActionsComponent","agInit","params","this","refresh","verb","selectors","standalone","features","decls","vars","consts","template","rf","ctx","AppsListActionsComponent_Conditional_2_Template","AppsListActionsComponent_Conditional_3_Template","AppsListActionsComponent_ng_template_10_Template","IsGlobal","IsInherited","lightSpeed","menu_r3","TippyDirective","MatIconModule","i1","MatBadgeModule","MatRippleModule","i2","MatMenuModule","i3","LightSpeedActionsComponent","encapsulation","AppsListComponent","#appsListSvc","#dialogRouter","constructor","snackBar","context","matDialog","viewContainerRef","changeDetectorRef","log","classLog","fabOpen","signal","apps","gridOptions","buildGridOptions","inject","FeaturesScopedService","isAddFromFolderEnabled","isEnabled","FeatureNames","AppSyncWithSiteFiles","transient","AppsListService","DialogRoutingService","ModuleRegistry","registerModules","ClientSideRowModelModule","ngOnInit","#loadApps","doOnDialogClosed","openChange","open","set","browseCatalog","createApp","navParentFirstChild","createInheritedApp","addFromFolder","importApp","files","state","deleteApp","result","prompt","Name","delete","subscribe","error","undefined","duration","next","alert","flushApp","confirm","flushCache","openLightSpeed","formUrl","convertFormToUrl","AppAdminHelpers","getLightSpeedEditParams","zoneId","openApp","toString","openLightSpeedFeatInfo","openFeatureDialog","LightSpeed","defaultGridOptions","columnDefs","ColumnDefinitions","IdWithDefaultRenderer","cellRendererParams","idFieldParamsTooltipGetter","IconShow","cellRenderer","AgBoolIconRenderer","settings","TextWide","field","cellClass","split","sort","onCellClicked","p","Thumbnail","value","Character","width","Number","Boolean","headerName","filter","BooleanFilterComponent","ActionsPinnedRight3","onOpenLightspeed","openLightspeedFeatureInfo","getAll","$event","_c0","SxcGridModule","i4","MatDialogActions","EcoFabSpeedDialComponent","NgClass","EcoFabSpeedDialTriggerComponent","MatButtonModule","i5","i6","EcoFabSpeedDialActionsComponent","i7","RouterOutlet","DragAndDropDirective","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","ContentSecurityPolicy","PermissionsByLanguage","ContentTypeFieldsReuseDefinitions","AppExportAssetsAdvanced","PickerUiCheckbox","PickerUiRadio","PickerSourceCsv","PickerSourceAppAssets","PickerFormulas","PickerUiMoreInfo","logSpecs","ServiceBase","router","route","super","snapshot","url","getParam","key","paramMap","get","getParams","keys","reduce","acc","getQueryParam","queryParamMap","getQueryParams","getCurrentNavigation","extras","callback","l","fnIf","subscriptions","add","childDialogClosed$","end","navPath","navigate","navRelative","commands","relativeTo","parent","firstChild","events","pipe","event","NavigationEnd","startWith","map","pairwise","hadChildBefore","hasChildNow","factory","ɵfac","Subscription","ngOnDestroy","destroy","unsubscribe"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/apps-management/apps-list/app-list-grid-config.ts","./projects/eav-ui/src/app/apps-management/apps-list/apps-list-actions/apps-list-actions.component.html","./projects/eav-ui/src/app/apps-management/apps-list/apps-list-actions/apps-list-actions.component.ts","./projects/eav-ui/src/app/apps-management/apps-list/apps-list.component.ts","./projects/eav-ui/src/app/apps-management/apps-list/apps-list.component.html","./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts","./projects/eav-ui/src/app/shared/services/service-base.ts"],"sourcesContent":["import { AgBoolCellIconSettings } from '../../shared/ag-grid/apps-list-show/ag-bool-icon-params';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { App } from '../models/app.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport const AppListShowIcons: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      tooltip: 'Show this app to users',\r\n      icon: 'visibility',\r\n    },\r\n    false: {\r\n      tooltip: 'Hide this app from users',\r\n      icon: 'visibility_off',\r\n    }\r\n  }\r\n};\r\n\r\nexport const AppListCodeErrorIcons: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      clickable: true,\r\n      tooltip: 'This App uses obsolete code which will cause problems on future upgrades. Click to see details.',\r\n      icon: 'bug_report',\r\n      getUrl: (data: App) => window.$2sxc.http.apiUrl('sys/insights/logs?key=warnings-obsolete&filter=AppId=' + data.Id),\r\n    },\r\n    false: {\r\n      tooltip: 'Hide this app from users',\r\n      icon: '',\r\n    }\r\n  }\r\n};\r\n","<div class=\"actions-component\">\r\n  <!-- Global/Inherited button for shared apps (if enabled) -->\r\n  <div class=\"eav-grid-action-button icon\"\r\n    [tippy]=\"app.IsGlobal ? 'This app is global' : app.IsInherited ? 'This app is inherited' : ''\"\r\n    [tippyDisabled]=\"!app.IsGlobal && !app.IsInherited\">\r\n    @if (app.IsGlobal) {\r\n      <mat-icon>foundation</mat-icon>\r\n    }\r\n    @if (app.IsInherited) {\r\n      <mat-icon>holiday_village</mat-icon>\r\n    }\r\n  </div>\r\n\r\n  <!-- Lightspeed button -->\r\n  <app-lightspeed-action [lightSpeedOwner]=\"app\" [params]=\"params\" [lightSpeed]=\"app.lightSpeed\"></app-lightspeed-action>\r\n\r\n  <!-- More button -->\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"More\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<!-- The menu which appears on more -->\r\n<mat-menu #menu=\"matMenu\" class=\"grid-more-menu\">\r\n  <ng-template matMenuContent>\r\n    <button mat-menu-item (click)=\"do('flushCache')\">\r\n      <mat-icon>cached</mat-icon>\r\n      <span>Flush cache</span>\r\n    </button>\r\n    <button mat-menu-item [disabled]=\"!app.IsApp\" (click)=\"do('deleteApp')\">\r\n      <mat-icon>delete</mat-icon>\r\n      <span>Delete</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { App } from '../../models/app.model';\r\nimport { AppsListActionsParams, AppsListActionsType } from './apps-list-actions.models';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { LightSpeedActionsComponent } from '../../../admin-shared/lightspeed-action/lightspeed-action.component';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-apps-list-actions',\r\n  templateUrl: './apps-list-actions.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    TippyDirective,\r\n    MatIconModule,\r\n    MatBadgeModule,\r\n    MatRippleModule,\r\n    MatMenuModule,\r\n    LightSpeedActionsComponent,\r\n  ],\r\n})\r\nexport class AppsListActionsComponent implements ICellRendererAngularComp {\r\n  app: App;\r\n\r\n  public params: ICellRendererParams & AppsListActionsParams;\r\n  agInit(params: ICellRendererParams & AppsListActionsParams): void {\r\n    this.params = params;\r\n    this.app = this.params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  do(verb: AppsListActionsType): void {\r\n    this.params.do(verb, this.app);\r\n  }\r\n}\r\n","import { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\r\nimport { GridOptions, ICellRendererParams, ModuleRegistry } from '@ag-grid-community/core';\r\nimport { NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, inject, OnInit, signal, ViewContainerRef } from '@angular/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent } from '@ecodev/fab-speed-dial';\r\nimport { transient } from '../../../../../core';\r\nimport { AppAdminHelpers } from '../../app-administration/app-admin-helpers';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { FeaturesScopedService } from '../../features/features-scoped.service';\r\nimport { openFeatureDialog } from '../../features/shared/base-feature.component';\r\nimport { AgBoolCellIconsParams } from '../../shared/ag-grid/apps-list-show/ag-bool-icon-params';\r\nimport { AgBoolIconRenderer } from '../../shared/ag-grid/apps-list-show/ag-bool-icon-renderer.component';\r\nimport { ColumnDefinitions } from '../../shared/ag-grid/column-definitions';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { FileUploadDialogData } from '../../shared/components/file-upload-dialog';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { DragAndDropDirective } from '../../shared/directives/drag-and-drop.directive';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { classLog } from '../../shared/logging';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { App } from '../models/app.model';\r\nimport { AppsListService } from '../services/apps-list.service';\r\nimport { AppListCodeErrorIcons, AppListShowIcons } from './app-list-grid-config';\r\nimport { AppsListActionsComponent } from './apps-list-actions/apps-list-actions.component';\r\nimport { AppsListActionsParams } from './apps-list-actions/apps-list-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-apps-list',\r\n  templateUrl: './apps-list.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    SxcGridModule,\r\n    MatDialogActions,\r\n    EcoFabSpeedDialComponent,\r\n    NgClass,\r\n    EcoFabSpeedDialTriggerComponent,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    EcoFabSpeedDialActionsComponent,\r\n    MatBadgeModule,\r\n    RouterOutlet,\r\n    DragAndDropDirective,\r\n    // WIP 2dm - needed for the lightspeed buttons to work\r\n  ],\r\n})\r\nexport class AppsListComponent implements OnInit {\r\n\r\n  log = classLog({AppsListComponent});\r\n  fabOpen = signal(false);\r\n  apps = signal<App[]>([]);\r\n\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  public features = inject(FeaturesScopedService);\r\n  protected isAddFromFolderEnabled = this.features.isEnabled[FeatureNames.AppSyncWithSiteFiles];\r\n\r\n  #appsListSvc = transient(AppsListService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private context: Context,\r\n    // Services for showing features in the menu\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    ModuleRegistry.registerModules([ClientSideRowModelModule]);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.#loadApps();\r\n    this.#dialogRouter.doOnDialogClosed(() =>this.#loadApps());\r\n  }\r\n\r\n  openChange(open: boolean): void {\r\n    this.fabOpen.set(open);\r\n  }\r\n\r\n  browseCatalog(): void {\r\n    window.open('https://2sxc.org/apps', '_blank');\r\n  }\r\n\r\n  createApp(): void {\r\n    this.#dialogRouter.navParentFirstChild(['create']);\r\n  }\r\n\r\n  createInheritedApp(): void {\r\n    this.#dialogRouter.navParentFirstChild(['create-inherited']);\r\n  }\r\n\r\n  addFromFolder(): void {\r\n    this.#dialogRouter.navParentFirstChild(['add-app-from-folder']);\r\n  }\r\n\r\n  importApp(files?: File[]): void {\r\n    const dialogData: FileUploadDialogData = { files };\r\n    this.#dialogRouter.navParentFirstChild(['import'], { state: dialogData });\r\n  }\r\n\r\n  private deleteApp(app: App): void {\r\n    const result = prompt(`This cannot be undone. To really delete this app, type 'yes!' or type/paste the app-name here. Are you sure want to delete '${app.Name}' (${app.Id})?`);\r\n    if (result === null) return;\r\n    if (result === app.Name || result === 'yes!') {\r\n      this.snackBar.open('Deleting...');\r\n      this.#appsListSvc.delete(app.Id).subscribe({\r\n        error: () => {\r\n          this.snackBar.open('Delete failed. Please check console for more information', undefined, { duration: 3000 });\r\n          this.#loadApps();\r\n        },\r\n        next: () => {\r\n          this.snackBar.open('Deleted', undefined, { duration: 2000 });\r\n          this.#loadApps();\r\n        },\r\n      });\r\n    } else {\r\n      alert('Input did not match - will not delete');\r\n    }\r\n  }\r\n\r\n  private flushApp(app: App): void {\r\n    if (!confirm(`Flush the App Cache for ${app.Name} (${app.Id})?`)) return;\r\n    this.snackBar.open('Flushing cache...');\r\n    this.#appsListSvc.flushCache(app.Id).subscribe({\r\n      error: () => {\r\n        this.snackBar.open('Cache flush failed. Please check console for more information', undefined, { duration: 3000 });\r\n      },\r\n      next: () => {\r\n        this.snackBar.open('Cache flushed', undefined, { duration: 2000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  private openLightSpeed(app: App): void {\r\n    const formUrl = convertFormToUrl(AppAdminHelpers.getLightSpeedEditParams(app.Id));\r\n    this.#dialogRouter.navParentFirstChild([`${this.context.zoneId}/${app.Id}/edit/${formUrl}`]);\r\n  }\r\n\r\n  private openApp(app: App): void {\r\n    this.#dialogRouter.navParentFirstChild([app.Id.toString()]);\r\n  }\r\n\r\n  openLightSpeedFeatInfo() {\r\n    openFeatureDialog(this.matDialog, FeatureNames.LightSpeed, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.IdWithDefaultRenderer,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<App>(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.IconShow,\r\n          cellRenderer: AgBoolIconRenderer,\r\n          cellRendererParams: (() => ({ settings: () => AppListShowIcons }))(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Name',\r\n          cellClass: 'apps-list-primary-action highlight'.split(' '),\r\n          sort: 'asc',\r\n          onCellClicked: (p) => {\r\n            const app: App = p.data;\r\n            this.openApp(app);\r\n          },\r\n          cellRenderer: (p: ICellRendererParams) => {\r\n            const app: App = p.data;\r\n            return `\r\n            <div class=\"container\">\r\n              ${app.Thumbnail\r\n                ? `<img class=\"image logo\" src=\"${app.Thumbnail}?w=40&h=40&mode=crop\"></img>`\r\n                : `<div class=\"image logo\"><span class=\"material-symbols-outlined\">star</span></div>`\r\n              }\r\n              <div class=\"text\">${p.value}</div>\r\n            </div>\r\n            `;\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Folder',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Character,\r\n          field: 'Version',\r\n          width: 78,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Number,\r\n          field: 'Items',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Boolean,\r\n          field: 'HasCodeWarnings',\r\n          headerName: 'Code',\r\n          filter: BooleanFilterComponent,\r\n          cellRenderer: AgBoolIconRenderer,\r\n          cellRendererParams: (() => ({ settings: (app) => AppListCodeErrorIcons } as AgBoolCellIconsParams<App>))(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight3,\r\n          cellRenderer: AppsListActionsComponent,\r\n          cellRendererParams: {\r\n            onOpenLightspeed: (app) => this.openLightSpeed(<App>app),\r\n            openLightspeedFeatureInfo: () => this.openLightSpeedFeatInfo(),\r\n            do: (verb, app) => {\r\n              switch (verb) {\r\n                case 'deleteApp': this.deleteApp(app); break;\r\n                case 'flushCache': this.flushApp(app); break;\r\n              }\r\n            }\r\n          } satisfies AppsListActionsParams,\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n\r\n  #loadApps(): void {\r\n    this.#appsListSvc.getAll().subscribe(apps => {\r\n      this.apps.set(apps);\r\n    })\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"apps()\" [gridOptions]=\"gridOptions\" appDragAndDrop\r\n    [allowedFileTypes]=\"'zip'\" (filesDropped)=\"importApp($event)\">\r\n  </ag-grid-angular>\r\n  <mat-dialog-actions align=\"end\">\r\n    <eco-fab-speed-dial class=\"eav-eco-fab-speed-dial\" [ngClass]=\"{ 'fab-opened': fabOpen() }\"\r\n      (openChange)=\"openChange($event)\">\r\n      <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n        <button mat-fab>\r\n          <mat-icon class=\"spin180\">{{ fabOpen() ? 'close' : 'add' }}</mat-icon>\r\n        </button>\r\n      </eco-fab-speed-dial-trigger>\r\n      <eco-fab-speed-dial-actions class=\"eav-eco-fab-speed-dial-actions\">\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Find more apps\"\r\n          (click)=\"browseCatalog()\">\r\n          <mat-icon>search</mat-icon>\r\n        </button>\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Create inherited app\"\r\n          (click)=\"createInheritedApp()\">\r\n          <mat-icon>holiday_village</mat-icon>\r\n        </button>\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Add from folder\"\r\n          (click)=\"addFromFolder()\">\r\n          <mat-icon [matBadgeHidden]=\"isAddFromFolderEnabled()\" matBadgeColor=\"accent\" matBadgeSize=\"small\"\r\n            matBadge=\"💎\" matBadgePosition=\"below after\" aria-hidden=\"false\">\r\n            add\r\n          </mat-icon>\r\n        </button>\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Import app\" (click)=\"importApp()\">\r\n          <mat-icon>cloud_upload</mat-icon>\r\n        </button>\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Create app\" (click)=\"createApp()\">\r\n          <mat-icon>add</mat-icon>\r\n        </button>\r\n      </eco-fab-speed-dial-actions>\r\n    </eco-fab-speed-dial>\r\n  </mat-dialog-actions>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  ContentTypeFieldsReuseDefinitions: 'ContentTypeFieldsReuseDefinitions',\r\n  AppExportAssetsAdvanced: 'AppExportAssetsAdvanced',\r\n\r\n  // Picker features\r\n  PickerUiCheckbox: 'PickerUiCheckbox',\r\n  PickerUiRadio: 'PickerUiRadio',\r\n  PickerSourceCsv: 'PickerSourceCsv',\r\n  PickerSourceAppAssets: 'PickerSourceAppAssets',\r\n  PickerFormulas: 'PickerFormulas',\r\n  PickerUiMoreInfo: 'PickerUiMoreInfo',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","import { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { ServiceBase } from '../services/service-base';\r\nimport { classLog } from '../logging';\r\n\r\nconst logSpecs = {\r\n  doOnDialogClosed: true,\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase {\r\n\r\n  log = classLog({DialogRoutingService}, logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  getParam(key: string): string {\r\n    return this.route.snapshot.paramMap.get(key);\r\n  }\r\n\r\n  getParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const paramMap = this.route.snapshot.paramMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = paramMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  getQueryParam(key: string): string {\r\n    return this.route.snapshot.queryParamMap.get(key);\r\n  }\r\n\r\n  getQueryParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const queryParamMap = this.route.snapshot.queryParamMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = queryParamMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe(() => callback())\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  public navParentFirstChild(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route.parent.firstChild });\r\n  }\r\n  \r\n  childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}