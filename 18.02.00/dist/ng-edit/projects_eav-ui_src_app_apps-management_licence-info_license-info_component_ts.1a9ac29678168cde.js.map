{"version":3,"file":"projects_eav-ui_src_app_apps-management_licence-info_license-info_component_ts.1a9ac29678168cde.js","mappings":"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","names":["ExpirationExtension","expandFeature","feature","getExpiration","expiration","expandLicense","license","lowestExpiration","Features","map","f","sort","dateString","result","icon","text","ExpMessage","ExpIcon","ExpWarningIcon","expires","split","startsWith","expDate","Date","toDateString","setDate","getDate","endsWith","ActiveFeaturesCountPipe","transform","filter","isEnabled","length","pure","standalone","AgGridHeightDirective","constructor","elementRef","this","itemsCount","headerHeight","rowHeight","maxRows","extraHeight","element","nativeElement","ngOnChanges","changes","style","height","i0","selectors","inputs","features","FeaturesListEnabledReasonComponent","agInit","params","value","data","refresh","decls","vars","consts","template","rf","ctx","enabledReasonDetailed","TippyDirective","encapsulation","FeaturesListEnabledComponent","MatIconModule","i1","FeaturesStatusComponent","disabled","isDisabled","tooltip","tooltipGetter","toggle","nextValue","onToggle","_c0","MatSlideToggleModule","NgClass","styles","LicensesOrderPipe","licenses","Array","isArray","a","b","Priority","license_r1","ctx_r1","gridOptions","LicenseInfoComponent_Conditional_0_For_2_Conditional_17_Template","IsEnabled","Name","panel_r3","expanded","Description","LicenseInfoComponent_Conditional_0_For_2_Template","trackLicenses","LicenseInfoComponent","#refreshLicenses$","#featuresConfigSvc","#dialogRouter","matDialog","viewContainerRef","changeDetectorRef","disabled$","BehaviorSubject","#buildGridOptions","Subject","transient","FeaturesConfigService","DialogRoutingService","ModuleRegistry","registerModules","ClientSideRowModelModule","ngOnInit","doOnDialogClosed","next","viewModel$","pipe","startWith","undefined","switchMap","getLicenses","catchError","of","tap","l","share","ngOnDestroy","complete","index","Guid","openRegistration","router","navigate","url","replace","#showFeatureDetails","open","FeatureDetailsDialogComponent","autoFocus","showGuid","showStatus","width","markForCheck","#toggleFeature","enabled","forkJoin","saveFeatures","FeatureGuid","guid","Enabled","timer","subscribe","error","defaultGridOptions","columnDefs","ColumnDefinitions","ItemsText","headerName","field","cellClass","cellRenderer","IdFieldComponent","cellRendererParams","nameId","TextWideFlex3","onCellClicked","headerClass","sortable","BooleanFilterComponent","TextNarrow","tooltipValueGetter","p","ActionsPinnedRight7","isConfigurable","viewQuery","AgGridAngular","LicenseInfoComponent_Conditional_0_Template","tmp_0_0","MatExpansionModule","i2","i3","SxcGridModule","i4","MatDialogActions","MatButtonModule","i5","RouterOutlet","AsyncPipe","logSpecs","ServiceBase","route","super","log","classLog","snapshot","getParam","key","paramMap","get","getParams","keys","reduce","acc","getQueryParam","queryParamMap","getQueryParams","state","getCurrentNavigation","extras","callback","fnIf","subscriptions","add","childDialogClosed$","end","navPath","navRelative","commands","relativeTo","navParentFirstChild","parent","firstChild","events","event","NavigationEnd","pairwise","hadChildBefore","hasChildNow","factory","ɵfac","Subscription","destroy","unsubscribe"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/features/expiration-extension.ts","./projects/eav-ui/src/app/apps-management/licence-info/active-features-count.pipe.ts","./projects/eav-ui/src/app/apps-management/licence-info/ag-grid-height.directive.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled-reason/features-list-enabled-reason.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled-reason/features-list-enabled-reason.component.html","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled/features-list-enabled.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled/features-list-enabled.component.html","./projects/eav-ui/src/app/apps-management/licence-info/features-status/features-status.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-status/features-status.component.html","./projects/eav-ui/src/app/apps-management/licence-info/licenses-order.pipe.ts","./projects/eav-ui/src/app/apps-management/licence-info/license-info.component.html","./projects/eav-ui/src/app/apps-management/licence-info/license-info.component.ts","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts","./projects/eav-ui/src/app/shared/services/service-base.ts"],"sourcesContent":["import { License } from '../apps-management/models/license.model';\r\nimport { Feature } from './models';\r\n\r\n/**\r\n * Helper class used in union with other classes to add expiration hints to features.\r\n * It's implemented as a class, so it's easier to bundle static functions.\r\n */\r\nexport class ExpirationExtension {\r\n\r\n  /** The expiration date as a human readable string. Not from the server; generated on the client */\r\n  ExpMessage?: string;\r\n  ExpIcon?: string;\r\n\r\n  ExpWarningIcon?: string;\r\n\r\n  static expandFeature(feature: Feature): Feature & ExpirationExtension {\r\n    return {\r\n      ...feature,\r\n      ...ExpirationExtension.getExpiration(feature?.expiration)\r\n    };\r\n  }\r\n\r\n  static expandLicense(license: License): License & ExpirationExtension {\r\n    // Wrap in Try-Catch to avoid errors in the UI\r\n    try {\r\n      // find the lowest expiration date on the features\r\n      const lowestExpiration = license?.Features?.map(f => f.expiration).sort()[0];\r\n      // if there is no lowest expiration date, skip the rest\r\n      if (lowestExpiration == null) return license;\r\n\r\n      // debugger;\r\n      const withState = {\r\n        ...license,\r\n        ...ExpirationExtension.getExpiration(lowestExpiration),\r\n      };\r\n\r\n      return withState;\r\n    } catch (error) {\r\n      return license;\r\n    }\r\n  }\r\n\r\n  private static getExpiration(dateString: string): ExpirationExtension {\r\n    // Inner helper to create the final result\r\n    const result = (icon: string, text: string) => ({\r\n      ExpMessage: (icon != null ? icon + ' ' : '') + text,\r\n      ExpIcon: icon,\r\n      ExpWarningIcon: icon != '✅' ? icon : null,\r\n    })\r\n    const expires = dateString?.split('T')[0];\r\n    // no valid expiration date\r\n    if (expires == null) return result(null, null);\r\n    // never expires\r\n    if (expires.startsWith('9999')) return result('✅', 'never');\r\n    const expDate = new Date(expires);\r\n    // show \"expired\" if it's over-due\r\n    if (expDate < new Date()) return result('🛑', 'expired');\r\n    // return \"today\" if it's today\r\n    if (expDate.toDateString() === new Date().toDateString()) return result('⚠️', 'today');\r\n    // return \"tomorrow\" if it's tomorrow\r\n    if (expDate.toDateString() === new Date(new Date().setDate(new Date().getDate() + 1)).toDateString()) return result('⚠️', 'tomorrow');\r\n    // Warn if it's within 30 days\r\n    if (expDate < new Date(new Date().setDate(new Date().getDate() + 30))) return result('⚠️', expires);\r\n    // Show special EOY if it's at the end of the year - the most common expiration\r\n    if (expires.endsWith('12-31')) return result('✅', `EOY ${expires.split('-')[0]}`);\r\n    // otherwise: just show the date\r\n    return result('❓', expires);\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { License } from '../models/license.model';\r\n\r\n@Pipe({\r\n  name: 'activeFeaturesCount',\r\n  standalone: true\r\n})\r\nexport class ActiveFeaturesCountPipe implements PipeTransform {\r\n\r\n  transform(license: License) {\r\n    return `${license.Features.filter(f => f.isEnabled).length}/${license.Features.length}`;\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appAgGridHeight]',\r\n  standalone: true\r\n})\r\nexport class AgGridHeightDirective implements OnChanges {\r\n  @Input() itemsCount = 0;\r\n  @Input() headerHeight = 32;\r\n  @Input() rowHeight = 48;\r\n  @Input() maxRows = 100;\r\n\r\n  /** Fixes a bug where scrollbar appears when then is no overflow */\r\n  private extraHeight = 2;\r\n\r\n  private element: HTMLElement;\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.itemsCount != null) {\r\n      const rows = this.itemsCount === 0 ? 2 : this.itemsCount > this.maxRows ? this.maxRows : this.itemsCount;\r\n      this.element.style.height = `${this.headerHeight + rows * this.rowHeight + this.extraHeight}px`;\r\n    }\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../../features/models/feature.model';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled-reason',\r\n  templateUrl: './features-list-enabled-reason.component.html',\r\n  standalone: true,\r\n  imports: [TippyDirective],\r\n})\r\nexport class FeaturesListEnabledReasonComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n  feature: Feature;\r\n\r\n  agInit(params: ICellRendererParams): void {\r\n    this.value = params.value;\r\n    this.feature = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div [tippy]=\"feature.enabledReasonDetailed\">{{ value }}</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled',\r\n  templateUrl: './features-list-enabled.component.html',\r\n  standalone: true,\r\n  imports: [MatIconModule],\r\n})\r\nexport class FeaturesListEnabledComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams): void {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon>{{ value ? 'check_box' : 'check_box_outline_blank' }}</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../../features/models/feature.model';\r\nimport { FeaturesStatusParams } from './features-status.models';\r\nimport { IdFieldParams } from '../../../shared/components/id-field/id-field.models';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-features-status',\r\n  templateUrl: './features-status.component.html',\r\n  styleUrls: ['./features-status.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatSlideToggleModule,\r\n    NgClass,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class FeaturesStatusComponent implements ICellRendererAngularComp {\r\n  value: boolean | null;\r\n  disabled: boolean;\r\n  tooltip: string;\r\n\r\n  private params: ICellRendererParams & FeaturesStatusParams;\r\n\r\n  agInit(params: ICellRendererParams & FeaturesStatusParams & IdFieldParams<Feature>): void {\r\n    this.params = params;\r\n    this.value = params.value;\r\n    this.disabled = params.isDisabled(params.data);\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params: ICellRendererParams & FeaturesStatusParams): boolean {\r\n    this.disabled = this.params.isDisabled(this.params.data);\r\n    return true;\r\n  }\r\n\r\n  toggle(): void {\r\n    const feature: Feature = this.params.data;\r\n    let nextValue: boolean;\r\n    switch (this.value) {\r\n      case false:\r\n        nextValue = null;\r\n        break;\r\n      case null:\r\n        nextValue = true;\r\n        break;\r\n      case true:\r\n        nextValue = false;\r\n        break;\r\n    }\r\n    this.value = nextValue;\r\n    this.params.onToggle(feature, nextValue);\r\n  }\r\n}\r\n","<mat-slide-toggle [checked]=\"value\" [tippy]=\"tooltip\" [disabled]=\"disabled\" (change)=\"toggle()\" [ngClass]=\"{\r\n  'toggle-false': value === false,\r\n  'toggle-null': value === null\r\n  }\">\r\n</mat-slide-toggle>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { License } from '../models/license.model';\r\n\r\n@Pipe({\r\n    name: 'licensesOrder',\r\n    standalone: true\r\n})\r\nexport class LicensesOrderPipe implements PipeTransform {\r\n\r\n  transform(licenses: License[]): any {\r\n    if (!Array.isArray(licenses)) { return licenses; }\r\n\r\n    const sorted = [...licenses].sort((a: License, b: License) => {\r\n      if (a.Priority < b.Priority) {\r\n        return -1;\r\n      } else if (a.Priority > b.Priority) {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    return sorted;\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n<mat-accordion multi>\r\n  @for (license of vm.licenses | licensesOrder; track trackLicenses($index, license)) {\r\n  <mat-expansion-panel #panel>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        <mat-icon class=\"panel-icon\" [tippy]=\"license.IsEnabled ? 'License is active' : 'License is not active'\">{{\r\n          license.IsEnabled ? 'check_circle_outline' : 'cancel' }}</mat-icon>\r\n        <div>\r\n          <div class=\"panel-title\">\r\n            <span>{{ license.Name }}</span>\r\n            <span class=\"active-features-count\">{{ license | activeFeaturesCount }}</span>\r\n            <span> {{ license.ExpWarningIcon }}</span>\r\n          </div>\r\n          <div class=\"panel-description\" [ngClass]=\"{ 'expanded': panel.expanded }\">\r\n            {{ license.Description }}\r\n          </div>\r\n        </div>\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    @if (panel.expanded) {\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"license.Features\" [gridOptions]=\"gridOptions\" appAgGridHeight\r\n      [itemsCount]=\"license.Features?.length\">\r\n    </ag-grid-angular>\r\n    }\r\n  </mat-expansion-panel>\r\n  }\r\n</mat-accordion>\r\n}\r\n\r\n<mat-dialog-actions align=\"start\">\r\n  <button mat-button class=\"eav-button__with-icon\" tippy=\"Registration\" (click)=\"openRegistration()\">\r\n    <mat-icon class=\"eav-icon\">app_registration</mat-icon>\r\n    <span>Registration</span>\r\n  </button>\r\n</mat-dialog-actions>\r\n\r\n<router-outlet></router-outlet>\r\n","import { AgGridAngular } from '@ag-grid-community/angular';\r\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\r\nimport { GridOptions, ModuleRegistry } from '@ag-grid-community/core';\r\nimport { AsyncPipe, NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, catchError, forkJoin, map, Observable, of, share, startWith, Subject, switchMap, tap, timer } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { ExpirationExtension } from '../../features/expiration-extension';\r\nimport { FeatureState } from '../../features/models';\r\nimport { Feature } from '../../features/models/feature.model';\r\nimport { ColumnDefinitions } from '../../shared/ag-grid/column-definitions';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { License } from '../models/license.model';\r\nimport { FeaturesConfigService } from '../services/features-config.service';\r\nimport { ActiveFeaturesCountPipe } from './active-features-count.pipe';\r\nimport { AgGridHeightDirective } from './ag-grid-height.directive';\r\nimport { FeatureDetailsDialogComponent } from './feature-details-dialog/feature-details-dialog.component';\r\nimport { FeatureDetailsDialogData } from './feature-details-dialog/feature-details-dialog.models';\r\nimport { FeaturesListEnabledReasonComponent } from './features-list-enabled-reason/features-list-enabled-reason.component';\r\nimport { FeaturesListEnabledComponent } from './features-list-enabled/features-list-enabled.component';\r\nimport { FeaturesStatusComponent } from './features-status/features-status.component';\r\nimport { FeaturesStatusParams } from './features-status/features-status.models';\r\nimport { LicensesOrderPipe } from './licenses-order.pipe';\r\n\r\n@Component({\r\n  selector: 'app-license-info',\r\n  templateUrl: './license-info.component.html',\r\n  styleUrls: ['./license-info.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    NgClass,\r\n    SxcGridModule,\r\n    AgGridHeightDirective,\r\n    MatDialogActions,\r\n    MatButtonModule,\r\n    RouterOutlet,\r\n    AsyncPipe,\r\n    LicensesOrderPipe,\r\n    ActiveFeaturesCountPipe,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class LicenseInfoComponent implements OnInit, OnDestroy {\r\n  @ViewChild(AgGridAngular) private gridRef?: AgGridAngular;\r\n\r\n  disabled$ = new BehaviorSubject(false);\r\n  gridOptions = this.#buildGridOptions();\r\n\r\n  #refreshLicenses$ = new Subject<void>();\r\n\r\n  viewModel$: Observable<LicenseInfoViewModel>;\r\n\r\n  #featuresConfigSvc = transient(FeaturesConfigService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    ModuleRegistry.registerModules([ClientSideRowModelModule]);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.#dialogRouter.doOnDialogClosed(() => this.#refreshLicenses$.next());\r\n    this.viewModel$ =\r\n      this.#refreshLicenses$.pipe(\r\n        startWith(undefined),\r\n        switchMap(() => this.#featuresConfigSvc.getLicenses().pipe(catchError(() => of(undefined)))),\r\n        tap(() => this.disabled$.next(false)),\r\n\r\n        // Fiddle with the data for development tests\r\n        // 2023-11-16 2dm disabled - causes trouble in production\r\n        // @STV - do you still need this? or is this a forgotten debug code?\r\n        // map(licenses => {\r\n        //   var licTesting = licenses[licenses.length - 2];\r\n        //   licTesting.Features[licTesting.Features.length - 1].Expiration = \"2023-08-25\";\r\n        //   return licenses;\r\n        // }),\r\n\r\n        // Expand the data to have pre-calculated texts/states\r\n        map(licenses => licenses.map(l => {\r\n          // const expandedFeatures = l.Features.map(f => ExpirationExtension.expandFeature(f));\r\n          return ({\r\n            ...ExpirationExtension.expandLicense(l),\r\n            Features: l.Features.map(f => ExpirationExtension.expandFeature(f)),\r\n          });\r\n        })),\r\n\r\n        // Share the resulting stream with all subscribers\r\n        share(),\r\n      )\r\n        //])\r\n        .pipe(\r\n          map((licenses) => ({ licenses })),\r\n        );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.disabled$.complete();\r\n  }\r\n\r\n  trackLicenses(index: number, license: License): string {\r\n    return license.Guid;\r\n  }\r\n\r\n\r\n  openRegistration(): void {\r\n    const router = this.#dialogRouter.router;\r\n    router.navigate([router.url.replace('license', '') + \"/registration\"]);\r\n  }\r\n\r\n  #showFeatureDetails(feature: Feature): void {\r\n    const data: FeatureDetailsDialogData = {\r\n      feature,\r\n      showGuid: true,\r\n      showStatus: true,\r\n    };\r\n    this.matDialog.open(FeatureDetailsDialogComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '600px',\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  #toggleFeature(feature: Feature, enabled: boolean): void {\r\n    this.disabled$.next(true);\r\n    const state: FeatureState = {\r\n      FeatureGuid: feature.guid,\r\n      Enabled: enabled,\r\n    };\r\n    forkJoin([this.#featuresConfigSvc.saveFeatures([state]), timer(100)]).subscribe({\r\n      error: () => {\r\n        this.#refreshLicenses$.next();\r\n      },\r\n      next: () => {\r\n        this.#refreshLicenses$.next();\r\n      },\r\n    });\r\n  }\r\n\r\n  // Note: @SDV\r\n  // I think this should serve as a good example of how to use the grid\r\n  // 1. eg. with cellDefaults and similar initial objects containing most commonly used options here\r\n  // 2. Also we should probably never add a valueGetter for the simple properties\r\n  // ...not sure why it's even in here, my guess is copy-paste of code which wasn't understood properly\r\n  // 3. I think the header-name should always be the first line, then the field\r\n  #buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.ItemsText,\r\n          headerName: 'ID',\r\n          field: 'nameId',\r\n          width: 200,\r\n          cellClass: 'no-outline',\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<Feature> = {\r\n              tooltipGetter: (feature: Feature) => feature.nameId,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWideFlex3,\r\n          headerName: 'Name',\r\n          field: 'name',\r\n          cellClass: 'primary-action highlight'.split(' '),\r\n          onCellClicked: (params) => {\r\n            this.#showFeatureDetails(params.data as Feature);\r\n          },\r\n        },\r\n        {\r\n\r\n          headerName: 'Enabled',\r\n          field: 'isEnabled',\r\n          width: 80,\r\n          cellClass: 'no-outline',\r\n          headerClass: 'dense',\r\n          sortable: true,\r\n          filter: BooleanFilterComponent,\r\n          cellRenderer: FeaturesListEnabledComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextNarrow,\r\n          headerName: 'Reason',\r\n          field: 'enabledReason',\r\n          cellRenderer: FeaturesListEnabledReasonComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ItemsText,\r\n          headerName: 'Expiration',\r\n          field: 'ExpMessage',\r\n          sortable: false,\r\n          width: 120,\r\n          tooltipValueGetter: (p) => (p.data as Feature & ExpirationExtension)?.expiration,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight7,\r\n          headerName: '',\r\n          field: 'enabledInConfiguration',\r\n          cellRenderer: FeaturesStatusComponent,\r\n          cellRendererParams: (() => {\r\n            const params: FeaturesStatusParams & IdFieldParams<Feature> = {\r\n              isDisabled: (feature) => !feature.isConfigurable || this.disabled$.value,\r\n              onToggle: (feature, enabled) => this.#toggleFeature(feature, enabled),\r\n              tooltipGetter: (feature: Feature) => feature.isConfigurable ? \"Toggle off | default | on\" : \"This feature can't be configured\",\r\n            };\r\n            return params;\r\n          }),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\n\r\ninterface LicenseInfoViewModel {\r\n  licenses: (License & ExpirationExtension)[];\r\n}\r\n","import { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { ServiceBase } from '../services/service-base';\r\nimport { classLog } from '../logging';\r\n\r\nconst logSpecs = {\r\n  doOnDialogClosed: true,\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase {\r\n\r\n  log = classLog({DialogRoutingService}, logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  getParam(key: string): string {\r\n    return this.route.snapshot.paramMap.get(key);\r\n  }\r\n\r\n  getParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const paramMap = this.route.snapshot.paramMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = paramMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  getQueryParam(key: string): string {\r\n    return this.route.snapshot.queryParamMap.get(key);\r\n  }\r\n\r\n  getQueryParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const queryParamMap = this.route.snapshot.queryParamMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = queryParamMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe(() => callback())\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  public navParentFirstChild(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route.parent.firstChild });\r\n  }\r\n  \r\n  childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}