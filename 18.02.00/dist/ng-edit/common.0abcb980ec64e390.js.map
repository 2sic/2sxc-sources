{"version":3,"file":"common.0abcb980ec64e390.js","mappings":"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","names":["i0","_r1","ctx_r1","openLightspeedFeatureInfo","_r3","openLightspeed","LightSpeedActionsComponent_Conditional_1_Conditional_1_Template","LightSpeedActionsComponent_Conditional_1_Conditional_2_Template","appHasLightSpeed","lightSpeed","Title","appLightSpeedEnabled","LightSpeedActionsComponent","constructor","this","features","inject","FeaturesScopedService","lightSpeedEnabled","isEnabled","FeatureNames","LightSpeed","Id","IsEnabled","params","onOpenLightspeed","lightSpeedOwner","selectors","inputs","standalone","decls","vars","consts","template","rf","ctx","LightSpeedActionsComponent_Conditional_0_Template","LightSpeedActionsComponent_Conditional_1_Template","TippyDirective","MatIconModule","i1","MatBadgeModule","i2","MatRippleModule","i3","encapsulation","AppAdminHelpers","getLightSpeedEditParams","appId","items","EditPrep","newMetadata","eavConstants","appMetadata","ContentTypeName","metadata","app","AnalyzeSettingsService","HttpServiceBase","getStack","part","key","view","stringifyValue","http","get","apiUrl","webApiAppRoot","pipe","map","stack","stackItem","_value","JSON","stringify","Value","__ngFactoryType__","factory","ɵfac","AnalyzeSettingsValueComponent","clipboard","transient","ClipboardService","agInit","value","refresh","copy","JsonHelpers","tryParse","copyToClipboard","styles","ctx_r0","feature","_r2","guid","dialog","close","FeatureDetailsDialogComponent","dialogSpecs","snackBar","specs","input","mySpecs","computedObj","MAT_DIALOG_DATA","nameId","FeatureDetailsDialogComponent_Conditional_13_Template","FeatureDetailsDialogComponent_Conditional_14_Template","FeatureDetailsDialogComponent_Conditional_26_Template","name","description","showStatus","showGuid","security","Impact","Message","link","showClose","MatCardModule","MatButtonModule","i4","i5","SafeHtmlPipe","TranslateModule","i6","AppsListService","getAll","zoneId","getInheritable","getPendingApps","create","inheritAppId","templateId","post","installPendingApps","pendingApps","delete","toString","flushCache","FeaturesConfigService","saveFeatures","featuresStates","getLicenses","uploadLicense","file","formData","FormData","append","info","Success","Messages","MessageType","FileUploadMessageTypes","Error","Text","retrieveLicense","webApiZoneRoot","ZoneService","getLanguages","toggleLanguage","code","enable","cultureCode","getSystemInfo","getLanguagesPermissions","importContentItemDialog","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","ImportContentItemComponent","Promise","all","__webpack_require__","e","then","bind","contentItemsDialog","ContentItemsComponent","contentItemsRoutes","path","component","DialogEntryComponent","data","children","GoToMetadata","getRoutes","loadChildren","m","ContentExportRoutes","contentImportRoutes","title","EditRoutes","ContentItemsService","contentTypeStaticName","webApiEntityList","contentType","getColumns","webApiFieldsAll","staticName","importItem","from","toBase64","switchMap","fileBase64","webApiEntityRoot","AppId","ContentBase64","success","contentTypeFieldsDialog","ContentTypeFieldsComponent","editContentTypeFieldsDialog","EditContentTypeFieldsComponent","contentTypeFieldsRoutes","GoToPermissions","route","DebugFields","environment","production","logSpecs","markTouched","set","disable","getErrors","fields","pfx","UiControl","control","moreDisabled","log","classLog","#warningMessages","jsonWarning","formulaWarning","dirty","invalid","touched","disabled","extendName","aIfInList","emptyControl","touchedAndInvalid","setIfChanged","newValue","before","isEqual","markAsTouched","FieldValueHelpers","fieldValuesAreEqual","markAsDirty","patchValue","updateValueAndValidity","config","l","fnIfInList","fieldName","r","errorKey","Object","keys","errors","error","formulaMessage","ValidationMsgHelper","validationMessages","getWarnings","_warning$","warning","warningKey","x","y","isNaN","Array","isArray","RxHelpers","arraysEqual","getItemValuesChanges","oldValues","newValues","changes","length","undefined","required","min","max","minNoItems","maxNoItems","pattern","decimals","jsonError","formulaError","validateForm","form","controlKey","entries","controls","importRoutes","ImportAppComponent","webApiContentGroup","ContentGroupService","getItems","item","index","saveItem","entityId","id","add","removeItem","contentGroup","parent","getList","saveList","resortedList","getHeader","voidElements","split","el","trim","toLocaleLowerCase","MonacoInstance","monaco","filename","container","options","snippets","tooltips","globalCache","createGlobalCache","defineThemes","cachedValue","editorInstance","createInstance","completionItemProviders","addSnippets","resizeObserver","createResizeObserver","restoreState","addEvents","destroy","saveState","disconnect","forEach","completionItemProvider","dispose","jsTypingsLib","getModel","updateValue","setValue","focus","onValueChange","callback","valueChangedCallback","onFocus","focusedCallback","onBlur","blurredCallback","insertSnippet","snippet","getContribution","insert","setSnippets","setTooltips","setJsonSchema","jsonSchema","uri","oldJsonDiagnostics","languages","json","jsonDefaults","diagnosticsOptions","exists","schemas","some","schema","fileMatch","newSchema","type","parse","newJsonDiagnostics","enableSchemaRequest","filter","setDiagnosticsOptions","setJsonComments","comments","jsonDiagnostics","setJsDiagnostics","javascriptDiagnostics","typescript","javascriptDefaults","getDiagnosticsOptions","setJsTypings","typings","addExtraLib","_2sxc","themesAreDefined","savedStates","editor","defineTheme","base","inherit","rules","token","foreground","colors","editorModelUri","Uri","editorModel","createModel","setModel","viewState","saveViewState","savedState","restoreViewState","registerCompletionItemProvider","getLanguageId","triggerCharacters","provideCompletionItems","model","position","suggestions","textUntilPosition","getValueInRange","startLineNumber","lineNumber","startColumn","endLineNumber","endColumn","column","tagStartIndex","lastIndexOf","codeInTag","substring","quotes","c","startsWith","indexOf","tagEndIndex","tag","includes","test","label","kind","CompletionItemKind","Snippet","insertText","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","range","word","getWordUntilPosition","content","documentation","help","links","suggestion","registerHoverProvider","provideHover","getWordAtPosition","tooltip","find","i","Term","contents","Help","ResizeObserver","layout","observe","onDidChangeContent","getValue","onDidFocusEditorWidget","onDidBlurEditorWidget","MonacoEditorComponent","autoFocus","valueChanged","EventEmitter","focused","blurred","ngAfterViewInit","window","require","paths","vs","createEditor","ngOnChanges","monacoInstance","jsonComments","jsTypings","jsDiagnostics","ngOnDestroy","editorRef","nativeElement","emit","viewQuery","replaceContentDialog","ReplaceContentComponent","replaceContentRoutes","EditRoutesNoHistory","#dialogData","#dialog","matDialog","viewContainerRef","router","context","changeDetectorRef","navigation","getCurrentNavigation","extras","state","ngOnInit","fn","dialogConfig","snapshot","a","_dialogAnimatingOpen","_lastDialogRef","afterOpened","subscribe","openDialogComponent","svcId","init","open","backdropClass","closeOnNavigation","showScrollbar","top","afterClosed","navRes","navigateUrl","pathFromRoot","$2sxc","totalPopup","navigate","url","relativeTo","markForCheck","Context","loadScripts","scriptObjects","iteration","newCallback","scrObj","global","w","src","exportedVar","UpdateEnvVarsFromDialogSettings","appContext","includedApiRoot","Api","new2sxcHeader","env","header","appApi","load","AppScopes","App","Site","Global","boolEquals","stringEquals","valueEquals","objectsEqual","obj1","obj2","keys1","keys2","every","key1","hasOwnProperty","distinct","array","DialogService","openCodeFile","isShared","DialogTypeConstants","Develop","Path","editId","hashParams","buildHashParam","keyDialog","keyIsShared","keyItems","buildFullUrl","openQueryDesigner","queryId","PipelineDesigner","keyPipelineId","openAppsManagement","tab","keyZoneId","Zone","keyExtras","openAppAdministration","scope","keyAppId","buildSharedHashParams","keyModuleId","moduleId","keyContentBlockId","contentBlockId","keyPartOfPage","sessionStorage","getItem","keyDebug","rawKey","replace","prefix","valueTemp","rawValue","encodeURIComponent","oldHref","keyUrl","oldUrl","URL","newHref","origin","pathname","search","allHashParams","reduce","acc"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/admin-shared/lightspeed-action/lightspeed-action.component.html","./projects/eav-ui/src/app/admin-shared/lightspeed-action/lightspeed-action.component.ts","./projects/eav-ui/src/app/app-administration/app-admin-helpers.ts","./projects/eav-ui/src/app/app-administration/services/analyze-settings.service.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-value/analyze-settings-value.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-value/analyze-settings-value.component.html","./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.html","./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.ts","./projects/eav-ui/src/app/apps-management/services/apps-list.service.ts","./projects/eav-ui/src/app/apps-management/services/features-config.service.ts","./projects/eav-ui/src/app/apps-management/services/zone.service.ts","./projects/eav-ui/src/app/content-items/import-content-item/import-content-item-dialog.config.ts","./projects/eav-ui/src/app/content-items/content-items-dialog.config.ts","./projects/eav-ui/src/app/content-items/content-items.routing.ts","./projects/eav-ui/src/app/content-items/services/content-items.service.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields-dialog.config.ts","./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/edit-content-type-fields-dialog.config.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields.routing.ts","./projects/eav-ui/src/app/edit/edit-debug.ts","./projects/eav-ui/src/app/edit/shared/controls/ui-control.ts","./projects/eav-ui/src/app/edit/shared/helpers/field-value.helpers.ts","./projects/eav-ui/src/app/edit/shared/validation/validation-messages.helpers.ts","./projects/eav-ui/src/app/import-app/import-app-dialog.config.ts","./projects/eav-ui/src/app/import-app/import-app.routing.ts","./projects/eav-ui/src/app/manage-content-list/services/content-group.service.ts","./projects/eav-ui/src/app/shared/typescript-helpers/name-of.ts","./projects/eav-ui/src/app/monaco-editor/monaco-instance.ts","./projects/eav-ui/src/app/monaco-editor/monaco-editor.component.ts","./projects/eav-ui/src/app/monaco-editor/monaco-editor.component.html","./projects/eav-ui/src/app/replace-content/replace-content-dialog.config.ts","./projects/eav-ui/src/app/replace-content/replace-content.routing.ts","./projects/eav-ui/src/app/shared/components/dialog-entry/dialog-entry.component.ts","./projects/eav-ui/src/app/shared/helpers/json.helpers.ts","./projects/eav-ui/src/app/shared/helpers/load-scripts.helper.ts","./projects/eav-ui/src/app/shared/helpers/update-env-vars-from-dialog-settings.helper.ts","./projects/eav-ui/src/app/shared/models/dialog-context.models.ts","./projects/eav-ui/src/app/shared/rxJs/rx.helpers.ts","./projects/eav-ui/src/app/shared/services/dialog.service.ts"],"sourcesContent":["@if (!lightSpeedEnabled()) {\r\n  <div class=\"eav-grid-action-button disabled\" tippy=\"Lightspeed is disabled\" (click)=\"openLightspeedFeatureInfo()\">\r\n    <mat-icon matBadgeSize=\"small\" matBadge=\"💎\" matBadgePosition=\"below after\" aria-hidden=\"false\"> bolt </mat-icon>\r\n  </div>\r\n} @else {\r\n  <div\r\n    class=\"eav-grid-action-button {{ appHasLightSpeed ? '' : 'disabled' }}\"\r\n    matRipple\r\n    [tippy]=\"appHasLightSpeed ? lightSpeed.Title : 'Not yet configured for LightSpeed'\"\r\n    (click)=\"openLightspeed()\"\r\n  >\r\n    @if (appLightSpeedEnabled) {\r\n      <mat-icon matBadgeSize=\"small\" matBadge=\"✅\" matBadgePosition=\"below after\" aria-hidden=\"false\"> bolt </mat-icon>\r\n    } @else {\r\n      <mat-icon matBadgeSize=\"small\" matBadge=\"⛔\" matBadgePosition=\"below after\" aria-hidden=\"false\"> bolt </mat-icon>\r\n    }\r\n  </div>\r\n}\r\n","import { Component, Input, inject } from '@angular/core';\r\nimport { LightSpeedInfo } from '../../apps-management/models/LightSpeedInfo';\r\nimport { LightSpeedActionsParams } from './lightspeed-actions.models';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FeaturesScopedService } from '../../features/features-scoped.service';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n/**\r\n * LightSpeedActionsComponent\r\n *\r\n * Specially meant to be used inside an AGGrid action, and receive the parameters from it.\r\n *\r\n */\r\n@Component({\r\n  selector: 'app-lightspeed-action',\r\n  templateUrl: './lightspeed-action.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    TippyDirective,\r\n    MatIconModule,\r\n    MatBadgeModule,\r\n    MatRippleModule,\r\n  ],\r\n})\r\nexport class LightSpeedActionsComponent {\r\n  /** App needed for lightspeed checks */\r\n  @Input({ required: true }) lightSpeedOwner: unknown;\r\n\r\n  @Input({ required: true }) params: LightSpeedActionsParams;\r\n\r\n  @Input({ required: true }) lightSpeed: LightSpeedInfo | null;\r\n\r\n  public features = inject(FeaturesScopedService);\r\n\r\n  constructor() { }\r\n\r\n  protected lightSpeedEnabled = this.features.isEnabled[FeatureNames.LightSpeed]\r\n\r\n  public get appHasLightSpeed(): boolean {\r\n    return this.lightSpeed?.Id != null;\r\n  }\r\n\r\n  public get appLightSpeedEnabled(): boolean {\r\n    return this.lightSpeed?.IsEnabled == true;\r\n  }\r\n\r\n  openLightspeed(): void {\r\n    this.params.onOpenLightspeed(this.lightSpeedOwner);\r\n  }\r\n\r\n  openLightspeedFeatureInfo(): void {\r\n    this.params.openLightspeedFeatureInfo();\r\n  }\r\n}\r\n","import { eavConstants } from '../shared/constants/eav.constants';\r\nimport { EditForm, EditPrep } from '../shared/models/edit-form.model';\r\n\r\nexport class AppAdminHelpers {\r\n  public static getLightSpeedEditParams(appId: number) {\r\n    const form: EditForm = {\r\n      items: [\r\n        EditPrep.newMetadata(appId, eavConstants.appMetadata.LightSpeed.ContentTypeName, eavConstants.metadata.app, true),\r\n      ],\r\n    };\r\n    return form;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { Of } from '../../../../../core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { AnalyzeParts, SettingsStackItem } from '../sub-dialogs/analyze-settings/analyze-settings.models';\r\n\r\n@Injectable()\r\nexport class AnalyzeSettingsService extends HttpServiceBase {\r\n\r\n  getStack(part: Of<typeof AnalyzeParts>, key?: string, view?: string, stringifyValue = false): Observable<SettingsStackItem[]> {\r\n    return this.http.get<SettingsStackItem[]>(\r\n      this.apiUrl(webApiAppRoot + 'GetStack'),{\r\n      params: {\r\n        appId: this.appId,\r\n        part,\r\n        ...(key && { key }),\r\n        ...(view && { view }),\r\n      },\r\n    }).pipe(\r\n      map(stack => {\r\n        if (!stringifyValue) { return stack; }\r\n\r\n        for (const stackItem of stack) {\r\n          stackItem._value = JSON.stringify(stackItem.Value);\r\n        }\r\n        return stack;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { JsonHelpers } from '../../../../shared/helpers/json.helpers';\r\nimport { ClipboardService } from '../../../../shared/services/clipboard.service';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings-value',\r\n  templateUrl: './analyze-settings-value.component.html',\r\n  styleUrls: ['./analyze-settings-value.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class AnalyzeSettingsValueComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n\r\n  constructor() { }\r\n\r\n  protected clipboard = transient(ClipboardService);\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n  \r\n  copy(value: string) {\r\n    value = JsonHelpers.tryParse(value) ?? value;\r\n    this.clipboard.copyToClipboard(value);\r\n  }\r\n}\r\n","<div matRipple class=\"value-box highlight\" [tippy]=\"value\" (click)=\"copy(value)\">\r\n  <span class=\"value\">{{ value }}</span>\r\n</div>\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>{{ feature().name }}</mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <p [innerHtml]=\"feature().description | safeHtml\"></p>\r\n    <!-- Name ID -->\r\n    <div class=\"eav-info-row\">\r\n      <div class=\"eav-info-row__label\">ID:</div>\r\n      <div class=\"eav-info-row__value\">\r\n        <span (click)=\"clipboard.copyToClipboard(feature().nameId)\">{{ feature().nameId }}</span>\r\n      </div>\r\n    </div>\r\n    <!-- Status -->\r\n    @if (mySpecs().showStatus) {\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ 'Features.Status' | translate }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ (feature().isEnabled ? 'Features.Active' : 'Features.NotActive') | translate }}</span>\r\n        </div>\r\n      </div>\r\n    }\r\n    <!-- GUID -->\r\n    @if (mySpecs().showGuid) {\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">GUID:</div>\r\n        <div class=\"eav-info-row__value eav_click\">\r\n          <span (click)=\"clipboard.copyToClipboard(feature().guid)\">{{ feature().guid }}</span>\r\n        </div>\r\n      </div>\r\n    }\r\n    <!-- Security Rating -->\r\n    <div class=\"eav-info-row\">\r\n      <div class=\"eav-info-row__label\">Security Rating:</div>\r\n      <div class=\"eav-info-row__value\">\r\n        <span>{{ feature().security.Impact + ': ' + feature().security.Message }}</span>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n  <mat-card-actions align=\"end\">\r\n    <a [href]=\"feature().link\" target=\"_blank\" mat-raised-button class=\"eav-card-action-button\" color=\"accent\">\r\n      <mat-icon>open_in_new</mat-icon>\r\n      Find out more\r\n    </a>\r\n    @if (mySpecs().showClose != false) {\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"dialog.close()\">Close</button>\r\n    }\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, Inject, input, Optional } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { transient } from '../../../../../../core/transient';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { SafeHtmlPipe } from '../../../shared/pipes/safe-html.pipe';\r\nimport { ClipboardService } from '../../../shared/services/clipboard.service';\r\nimport { computedObj } from '../../../shared/signals/signal.utilities';\r\nimport { FeatureDetailsDialogData } from './feature-details-dialog.models';\r\n\r\n@Component({\r\n  selector: 'app-feature-details-dialog',\r\n  templateUrl: './feature-details-dialog.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    TippyDirective,\r\n    SafeHtmlPipe,\r\n    TranslateModule,\r\n  ]\r\n})\r\nexport class FeatureDetailsDialogComponent {\r\n\r\n  specs = input<FeatureDetailsDialogData>();\r\n\r\n  constructor(\r\n    @Optional() @Inject(MAT_DIALOG_DATA) private dialogSpecs: FeatureDetailsDialogData,\r\n    protected dialog: MatDialogRef<FeatureDetailsDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  protected mySpecs = computedObj('mySpecs', () => this.dialogSpecs ?? this.specs());\r\n\r\n  protected feature = computedObj('feature', () => this.mySpecs().feature);\r\n\r\n  protected clipboard = transient(ClipboardService);\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { App, PendingApp } from '../models/app.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\n@Injectable()\r\nexport class AppsListService extends HttpServiceBase {\r\n\r\n  getAll() {\r\n    return this.http.get<App[]>(this.apiUrl(webApiAppRoot + 'list'), {\r\n      params: { zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  getInheritable() {\r\n    return this.http.get<App[]>(this.apiUrl(webApiAppRoot + 'InheritableApps'), {\r\n      params: { zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  getPendingApps() {\r\n    return this.http.get<PendingApp[]>(this.apiUrl(webApiAppRoot + 'GetPendingApps'), {\r\n      params: { zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  create(name: string, inheritAppId?: number, templateId?: number) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRoot + 'app'), {}, {\r\n      params: {\r\n        zoneId: this.zoneId,\r\n        name,\r\n        ...(inheritAppId != null && { inheritAppId }),\r\n        ...(templateId != null && { templateId }),\r\n      },\r\n    });\r\n  }\r\n\r\n  installPendingApps(pendingApps: PendingApp[]) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRoot + 'InstallPendingApps'), pendingApps, {\r\n      params: {\r\n        zoneId: this.zoneId,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(appId: number) {\r\n    return this.http.delete<null>(this.apiUrl(webApiAppRoot + 'app'), {\r\n      params: { zoneId: this.zoneId, appId: appId.toString() },\r\n    });\r\n  }\r\n\r\n  flushCache(appId: number) {\r\n    return this.http.get<null>(this.apiUrl(webApiAppRoot + 'flushcache'), {\r\n      params: { zoneId: this.zoneId, appId: appId.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { FeatureState } from '../../features/models';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { License, LicenseDownloadInfo, LicenseUploadInfo } from '../models/license.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiLicense = 'sys/license/';\r\nconst webAPiLicenseRetrieve = 'sys/license/Retrieve';\r\nconst webApiFeatSaveNew = 'admin/feature/SaveNew';\r\nconst webApiLicSummary = 'sys/license/Summary';\r\nconst webApiUpload = 'sys/license/Upload';\r\n\r\n@Injectable()\r\nexport class FeaturesConfigService extends HttpServiceBase {\r\n\r\n  saveFeatures(featuresStates: FeatureState[]): Observable<null> {\r\n    return this.http.post<null>(this.apiUrl(webApiFeatSaveNew), featuresStates);\r\n  }\r\n\r\n  getLicenses(): Observable<License[]> {\r\n    return this.http.get<License[]>(this.apiUrl(webApiLicSummary));\r\n  }\r\n\r\n  uploadLicense(file: File): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<LicenseUploadInfo>(this.apiUrl(webApiUpload), formData)\r\n      .pipe(\r\n        map(info => ({\r\n          Success: info.Success,\r\n          Messages: [{\r\n            MessageType: info.Success ? FileUploadMessageTypes.Success : FileUploadMessageTypes.Error,\r\n            Text: `License ${info.Success ? 'uploaded' : 'upload failed'}: ${info.Message}`,\r\n          }],\r\n        } satisfies FileUploadResult)),\r\n      );\r\n  }\r\n\r\n  retrieveLicense(): Observable<LicenseDownloadInfo> {\r\n    return this.http.get<LicenseDownloadInfo>(this.apiUrl(webAPiLicenseRetrieve));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { SiteLanguage, SiteLanguagePermissions } from '../models/site-language.model';\r\nimport { SystemInfoSet } from '../models/system-info.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiZoneRoot = 'admin/zone/';\r\n\r\n@Injectable()\r\nexport class ZoneService extends HttpServiceBase {\r\n\r\n  getLanguages() {\r\n    return this.http.get<SiteLanguage[]>(this.apiUrl(webApiZoneRoot + 'GetLanguages'));\r\n  }\r\n\r\n  toggleLanguage(code: string, enable: boolean) {\r\n    return this.http.get<null>(this.apiUrl(webApiZoneRoot + 'SwitchLanguage'), {\r\n      params: { cultureCode: code, enable: enable.toString() },\r\n    });\r\n  }\r\n\r\n  getSystemInfo() {\r\n    return this.http.get<SystemInfoSet>(this.apiUrl(webApiZoneRoot + 'GetSystemInfo'));\r\n  }\r\n\r\n  getLanguagesPermissions() {\r\n    return this.http.get<SiteLanguagePermissions[]>(this.apiUrl(webApiAppRoot + 'languages'), {\r\n      params: { appId: this.appId },\r\n    });\r\n  }\r\n}\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const importContentItemDialog: DialogConfig = {\r\n  name: 'IMPORT_CONTENT_ITEM_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportContentItemComponent: ImportContentItemComponent } = await import('./import-content-item.component');\r\n    return ImportContentItemComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentItemsDialog: DialogConfig = {\r\n  name: 'CONTENT_ITEMS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentItemsComponent } = await import('./content-items.component');\r\n    return ContentItemsComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { importContentItemDialog } from './import-content-item/import-content-item-dialog.config';\r\nimport { contentItemsDialog } from './content-items-dialog.config';\r\nimport { EditRoutes } from '../edit/edit.routing';\r\n\r\nexport const contentItemsRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: contentItemsDialog },\r\n    children: [\r\n      ...GoToMetadata.getRoutes(),\r\n      {\r\n        path: 'export/:contentTypeStaticName',\r\n        loadChildren: () => import('../content-export/content-export.routing').then(m => m.ContentExportRoutes)\r\n      },\r\n      {\r\n        path: 'export/:contentTypeStaticName/:selectedIds',\r\n        loadChildren: () => import('../content-export/content-export.routing').then(m => m.ContentExportRoutes)\r\n      },\r\n      {\r\n        path: 'import',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: importContentItemDialog }\r\n      },\r\n      {\r\n        path: ':contentTypeStaticName/import',\r\n        loadChildren: () => import('../content-import/content-import.routing').then(m => m.contentImportRoutes),\r\n        data: { title: 'Import Items' },\r\n      },\r\n      ...EditRoutes,\r\n    ]\r\n  },\r\n];\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { Field } from '../../shared/fields/field.model';\r\nimport { webApiFieldsAll } from '../../shared/fields/content-types-fields.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { ContentItem } from '../models/content-item.model';\r\nimport { webApiEntityList, webApiEntityRoot } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\n@Injectable()\r\nexport class ContentItemsService extends HttpServiceBase {\r\n\r\n  getAll(contentTypeStaticName: string) {\r\n    return this.http.get<ContentItem[]>(this.apiUrl(webApiEntityList), {\r\n      params: { appId: this.appId, contentType: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  getColumns(contentTypeStaticName: string) {\r\n    return this.http.get<Field[]>(this.apiUrl(webApiFieldsAll), {\r\n      params: { appId: this.appId, staticName: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  importItem(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiEntityRoot + 'upload'), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentTypeFieldsDialog: DialogConfig = {\r\n  name: 'CONTENT_TYPE_FIELDS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentTypeFieldsComponent } = await import('./content-type-fields.component');\r\n    return ContentTypeFieldsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const editContentTypeFieldsDialog: DialogConfig = {\r\n  name: 'EDIT_CONTENT_TYPE_FIELDS_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { EditContentTypeFieldsComponent } = await import('./edit-content-type-fields.component');\r\n    return EditContentTypeFieldsComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { GoToPermissions } from '../permissions/go-to-permissions';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { contentTypeFieldsDialog } from './content-type-fields-dialog.config';\r\nimport { editContentTypeFieldsDialog } from './edit-content-type-fields/edit-content-type-fields-dialog.config';\r\nimport { EditRoutes } from '../edit/edit.routing';\r\n\r\nexport const contentTypeFieldsRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: contentTypeFieldsDialog },\r\n    children: [\r\n      {\r\n        path: 'add/:contentTypeStaticName',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: editContentTypeFieldsDialog }\r\n      },\r\n      {\r\n        path: 'update/:contentTypeStaticName/:id/:editMode',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: editContentTypeFieldsDialog },\r\n      },\r\n      ...GoToMetadata.getRoutes(),\r\n      GoToPermissions.route,\r\n      ...EditRoutes,\r\n    ]\r\n  }\r\n];\r\n\r\n","import { environment } from '../../environments/environment';\r\n\r\n/**\r\n * List of fields to debug across the entire application.\r\n * \r\n * Change as you need, but after debugging, best set it back to [].\r\n */\r\nexport const DebugFields: string[] = !environment.production\r\n  // ? ['StringPicker']\r\n  // ? ['NumberInputAddUntillDevisibleBy5']\r\n  // ? ['WysiwygConfiguration']\r\n  // ? ['Items']\r\n  ? ['ViewController']\r\n  // ? ['Title']\r\n  // ? [] // no fields\r\n  // ? ['*'] // all fields\r\n  : [];\r\n","import { AbstractControl } from '@angular/forms';\r\nimport isEqual from 'lodash-es/isEqual';\r\nimport { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { DebugFields } from '../../edit-debug';\r\nimport { FieldConfigSet } from '../../fields/field-config-set.model';\r\nimport { FieldValueHelpers } from '../helpers/field-value.helpers';\r\nimport { ValidationMsgHelper } from '../validation/validation-messages.helpers';\r\nimport { AbstractControlPro } from '../validation/validation.helpers';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  constructor: false,\r\n  markTouched: false,\r\n  set: false,\r\n  disable: false,\r\n  getErrors: true,\r\n  fields: [...DebugFields, 'minValue'],\r\n};\r\n\r\nconst pfx = 'ValidationMessage.';\r\n\r\n/**\r\n * Provides information about the UI Control, but NOT the value.\r\n * It is used to simplify the logic when interacting with the Angular Virtual Form.\r\n */\r\nexport class UiControl {\r\n\r\n  log = classLog({UiControl}, logSpecs);\r\n\r\n  constructor(\r\n    public control: AbstractControl,\r\n    private name = 'unknown',\r\n    private moreDisabled: boolean = false,\r\n  ) {\r\n    // Patch control with dummy object for the nullable case where we're just creating a fake control...\r\n    this.control ??= { dirty: false, invalid: false, touched: false, value: null, disabled: false } as AbstractControl;\r\n    this.log.extendName(`[${name}]`);\r\n    this.log.aIfInList('fields', this.name, { moreDisabled }, 'constructor');\r\n  }\r\n\r\n  static emptyControl() {\r\n    return new UiControl({ dirty: false, invalid: false, touched: false, value: null, disabled: false } as AbstractControl);\r\n  }\r\n\r\n  //#region simple direct properties\r\n  get dirty() { return this.control.dirty; }\r\n  get invalid() { return this.control.invalid; }\r\n  get touched() { return this.control.touched; }\r\n  //#endregion\r\n\r\n  //#region complex properties\r\n  get disabled() { return this.control.disabled || this.moreDisabled; }\r\n  get touchedAndInvalid() { return this.control.touched && this.control.invalid; }\r\n  //#endregion\r\n\r\n  //#region methods\r\n\r\n  markTouched(): void {\r\n    this.log.aIfInList('fields', this.name, null, 'markTouched');\r\n    UiControl.markTouched(this.control);\r\n  }\r\n\r\n  setIfChanged(newValue: FieldValue): void {\r\n    const before = this.control.value;\r\n    this.log.aIfInList('fields', this.name, { before, newValue }, 'setIfChanged');\r\n    if (isEqual(newValue, this.control.value)) return;\r\n    this.set(newValue);\r\n  }\r\n\r\n  /** Use to update form controls value */\r\n  set(newValue: FieldValue): void {\r\n    const control = this.control;\r\n    const before = control.value;\r\n    this.log.aIfInList('fields', this.name, { before, newValue }, 'set');\r\n\r\n    if (!control.touched)\r\n      control.markAsTouched();\r\n\r\n    if (!control.dirty && !FieldValueHelpers.fieldValuesAreEqual(before, newValue))\r\n      control.markAsDirty();\r\n\r\n    // Set value must happen at the end, otherwise errors will be late by one cycle\r\n    // for example, they could show \"required\" after the value was\r\n    control.patchValue(newValue);\r\n  }\r\n\r\n  disable(disable: boolean): void {\r\n    this.log.aIfInList('fields', this.name, null, `disable: ${disable}`);\r\n    UiControl.disable(this.control, disable);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region private helpers\r\n\r\n  /** TODO: Try to remove this by assigning controls [formControlName] in [formGroup] */\r\n  static markTouched(control: AbstractControl): void {\r\n    if (control.touched)\r\n      return;\r\n\r\n    control.markAsTouched();\r\n    control.updateValueAndValidity();\r\n  }\r\n\r\n  /** Disables/enables control if not already disabled/enabled. Use this helper to trigger fewer events on the form */\r\n  static disable(control: AbstractControl, disable: boolean) {\r\n    if (control.disabled === disable)\r\n      return;\r\n\r\n    if (disable)\r\n      control.disable();\r\n    else\r\n      control.enable();\r\n  }\r\n  //#endregion\r\n\r\n  /** Calculates error message */\r\n  getErrors(config: FieldConfigSet): string {\r\n    const control = this.control;\r\n    const l = this.log.fnIfInList('getErrors', 'fields', config.fieldName, { control, config });\r\n    if (!control.invalid) return l.r('', 'valid');\r\n    if (!control.dirty && !control.touched) return l.r('', 'not dirty or touched');\r\n\r\n    for (const errorKey of Object.keys(control.errors)) {\r\n      const error = (errorKey === 'formulaError')\r\n        ? control.errors['formulaMessage'] ?? ValidationMsgHelper.validationMessages[errorKey]?.(config)\r\n        : ValidationMsgHelper.validationMessages[errorKey]?.(config);\r\n      if (error) return l.r(error, 'error found');\r\n    }\r\n\r\n    return l.r('', 'no error');\r\n  }\r\n\r\n  #warningMessages: Record<string, string> = {\r\n    jsonWarning: `${pfx}JsonWarning`,\r\n    formulaWarning: `${pfx}NotValid`,\r\n  };\r\n\r\n  getWarnings(): string {\r\n    const control = this.control as AbstractControlPro;\r\n    if (control._warning$.value == null) { return ''; }\r\n    if (!control.dirty && !control.touched) { return ''; }\r\n\r\n    let warning = '';\r\n    for (const warningKey of Object.keys(control._warning$.value)) {\r\n      warning = (warningKey === 'formulaWarning')\r\n        ? control._warning$.value['formulaMessage'] ?? this.#warningMessages[warningKey]\r\n        : this.#warningMessages[warningKey];\r\n      if (warning) break;\r\n    }\r\n    return warning;\r\n  }\r\n}\r\n","import { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport { RxHelpers } from '../../../shared/rxJs/rx.helpers';\r\nimport { ItemValuesOfLanguage } from '../../state/item-values-of-language.model';\r\n\r\n\r\nexport class FieldValueHelpers {\r\n  /** Detect if two values are equal, incl. special NaN and Array checks */\r\n  static fieldValuesAreEqual(x: FieldValue, y: FieldValue): boolean {\r\n    if (x === y) return true;\r\n    if (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y)) return true;\r\n    if (Array.isArray(x) && Array.isArray(y) && RxHelpers.arraysEqual(x, y)) return true;\r\n    return false;\r\n  }\r\n\r\n  /** Searches where newValues has values different from oldValues */\r\n  static getItemValuesChanges(oldValues: ItemValuesOfLanguage, newValues: ItemValuesOfLanguage): ItemValuesOfLanguage {\r\n    const changes: ItemValuesOfLanguage = {};\r\n    for (const key of Object.keys(newValues)) {\r\n      const newValue = newValues[key];\r\n      const oldValue = oldValues[key];\r\n      if (FieldValueHelpers.fieldValuesAreEqual(newValue, oldValue))\r\n        continue;\r\n\r\n      changes[key] = newValue;\r\n    }\r\n    return Object.keys(changes).length === 0 ? undefined : changes;\r\n  }\r\n}\r\n","import { UntypedFormGroup } from '@angular/forms';\r\nimport { FieldConfigSet } from '../../fields/field-config-set.model';\r\nimport { UiControl } from '../controls/ui-control';\r\n\r\n// prefix for translation keys\r\nconst pfx = 'ValidationMessage.';\r\n\r\nexport class ValidationMsgHelper {\r\n\r\n  static validationMessages: Record<string, (config: FieldConfigSet) => string> = {\r\n    required: (config: FieldConfigSet) => config ? `${pfx}Required` : `${pfx}RequiredShort` /* short version in snackbar*/,\r\n    min: (config: FieldConfigSet) => config ? `${pfx}Min` : `${pfx}NotValid`,\r\n    max: (config: FieldConfigSet) => config ? `${pfx}Max` : `${pfx}NotValid`,\r\n    minNoItems: (config: FieldConfigSet) => config ? `${pfx}MinNoItems` : `${pfx}NotValid`,\r\n    maxNoItems: (config: FieldConfigSet) => config ? `${pfx}MaxNoItems` : `${pfx}NotValid`,\r\n    pattern: (config: FieldConfigSet) => config ? `${pfx}Pattern` : `${pfx}NotValid`,\r\n    decimals: (config: FieldConfigSet) => config ? `${pfx}Decimals` : `${pfx}NotValid`,\r\n    jsonError: (config: FieldConfigSet) => config ? `${pfx}JsonError` : `${pfx}NotValid`,\r\n    formulaError: (config: FieldConfigSet) => config ? `${pfx}NotValid` : `${pfx}NotValid`,\r\n  };\r\n\r\n  /** Marks controls as touched to show errors beneath controls and collects error messages */\r\n  static validateForm(form: UntypedFormGroup): Record<string, string> {\r\n    const errors: Record<string, string> = {};\r\n    for (const [controlKey, control] of Object.entries(form.controls)) {\r\n      UiControl.markTouched(control);\r\n\r\n      if (!control.invalid) continue;\r\n\r\n      for (const errorKey of Object.keys(control.errors)) {\r\n        errors[controlKey] = this.validationMessages[errorKey]?.(undefined);\r\n        if (errors[controlKey]) break;\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const importAppDialog: DialogConfig = {\r\n  name: 'IMPORT_APP_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportAppComponent } = await import('./import-app.component');\r\n    return ImportAppComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { importAppDialog } from './import-app-dialog.config';\r\n\r\nexport const importRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: importAppDialog }\r\n  }\r\n];\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { ReplaceConfig } from '../../replace-content/replace-config.model';\r\nimport { ContentGroup, ContentGroupAdd } from '../models/content-group.model';\r\nimport { GroupHeader } from '../models/group-header.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiContentGroup = 'cms/contentgroup/';\r\n\r\n@Injectable()\r\nexport class ContentGroupService extends HttpServiceBase {\r\n\r\n  getItems(item: ContentGroup) {\r\n    return this.http.get<ReplaceConfig>(this.apiUrl(webApiContentGroup + 'replace'), {\r\n      params: { appId: this.appId, guid: item.guid, part: item.part, index: item.index.toString() }\r\n    });\r\n  }\r\n\r\n  saveItem(item: ContentGroupAdd) {\r\n    return this.http.post<null>(this.apiUrl(webApiContentGroup + 'replace'), {}, {\r\n      params: { guid: item.guid, part: item.part, index: item.index.toString(), entityId: item.id.toString(), add: `${item.add}` }\r\n    });\r\n  }\r\n\r\n  removeItem(contentGroup: ContentGroup, index: number) {\r\n    // note: the server checks if the part == 'content' and will automatically treat it as a pair with presentation\r\n    return this.http.delete<null>(this.apiUrl('cms/list/delete'), {\r\n      params: { index: index, parent: contentGroup.guid, fields: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  getList(contentGroup: ContentGroup) {\r\n    return this.http.get<GroupHeader[]>(this.apiUrl(webApiContentGroup + 'itemlist'), {\r\n      params: { appId: this.appId, guid: contentGroup.guid, part: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  saveList(contentGroup: ContentGroup, resortedList: GroupHeader[]) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiContentGroup + 'itemlist'), resortedList, {\r\n      params: { appId: this.appId, guid: contentGroup.guid, part: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  getHeader(contentGroup: ContentGroup) {\r\n    return this.http.get<GroupHeader>(this.apiUrl(webApiContentGroup + 'header'), {\r\n      params: { appId: this.appId, guid: contentGroup.guid }\r\n    });\r\n  }\r\n}\r\n","// Inspired by https://schneidenbach.gitbooks.io/typescript-cookbook/content/nameof-operator.html\r\nexport const nameof = <T>(name: keyof T) => name;\r\n","import type * as Monaco from 'monaco-editor';\r\nimport { JsonSchema, Monaco2sxc } from '.';\r\nimport { Snippet } from '../code-editor/models/snippet.model';\r\nimport { Tooltip } from '../code-editor/models/tooltip.model';\r\n\r\nexport const voidElements = 'area, base, br, col, embed, hr, img, input, link, meta, param, source, track, wbr'\r\n  .split(',')\r\n  .map(el => el.trim().toLocaleLowerCase());\r\n\r\nexport class MonacoInstance {\r\n  /** Editor instance configuration */\r\n  private editorInstance: Monaco.editor.IStandaloneCodeEditor;\r\n  private completionItemProviders: Monaco.IDisposable[];\r\n  private jsTypingsLib?: Monaco.IDisposable;\r\n  private resizeObserver: ResizeObserver;\r\n  private globalCache: Monaco2sxc;\r\n  private cachedValue: string;\r\n  private valueChangedCallback?: (value: string) => void;\r\n  private focusedCallback?: () => void;\r\n  private blurredCallback?: () => void;\r\n\r\n  constructor(\r\n    /** Global Monaco configuration */\r\n    private monaco: typeof Monaco,\r\n    private filename: string,\r\n    value: string,\r\n    container: HTMLElement,\r\n    options: Monaco.editor.IStandaloneEditorConstructionOptions,\r\n    private snippets: Snippet[],\r\n    private tooltips: Tooltip[],\r\n  ) {\r\n    this.globalCache = this.createGlobalCache(monaco);\r\n    this.defineThemes(this.globalCache, this.monaco);\r\n    this.cachedValue = value;\r\n    this.editorInstance = this.createInstance(this.monaco, filename, value, container, options);\r\n    this.completionItemProviders = this.addSnippets(this.monaco, this.editorInstance);\r\n    this.resizeObserver = this.createResizeObserver(container, this.editorInstance);\r\n    this.restoreState(this.globalCache, this.editorInstance);\r\n    this.addEvents(this.editorInstance);\r\n  }\r\n\r\n  destroy(): void {\r\n    this.saveState(this.globalCache, this.editorInstance);\r\n    this.resizeObserver.disconnect();\r\n    this.completionItemProviders.forEach(completionItemProvider => completionItemProvider.dispose());\r\n    this.jsTypingsLib?.dispose();\r\n    this.editorInstance.getModel().dispose();\r\n    this.editorInstance.dispose();\r\n  }\r\n\r\n  updateValue(value: string): void {\r\n    if (this.cachedValue === value) return;\r\n    this.cachedValue = value;\r\n    this.editorInstance.getModel().setValue(value);\r\n  }\r\n\r\n  focus(): void {\r\n    this.editorInstance.focus();\r\n  }\r\n\r\n  onValueChange(callback: (value: string) => void): void {\r\n    this.valueChangedCallback = callback;\r\n  }\r\n\r\n  onFocus(callback: () => void): void {\r\n    this.focusedCallback = callback;\r\n  }\r\n\r\n  onBlur(callback: () => void): void {\r\n    this.blurredCallback = callback;\r\n  }\r\n\r\n  insertSnippet(snippet: string): void {\r\n    const snippetController = this.editorInstance\r\n      .getContribution<Monaco.editor.IEditorContribution & { insert(template: string, opts?: Record<string, any>): void; }>('snippetController2');\r\n    snippetController.insert(snippet);\r\n  }\r\n\r\n  setSnippets(snippets: Snippet[]): void {\r\n    this.snippets = snippets;\r\n  }\r\n\r\n  setTooltips(tooltips: Tooltip[]): void {\r\n    this.tooltips = tooltips;\r\n  }\r\n\r\n  setJsonSchema(jsonSchema?: JsonSchema): void {\r\n    const uri = this.editorInstance.getModel().uri.toString();\r\n    const oldJsonDiagnostics = this.monaco.languages.json.jsonDefaults.diagnosticsOptions;\r\n    const exists = oldJsonDiagnostics.schemas?.some(schema => schema.fileMatch[0] === uri) ?? false;\r\n\r\n    const newSchema: Monaco.languages.json.DiagnosticsOptions['schemas'][0] = jsonSchema?.type === 'link'\r\n      ? { uri: jsonSchema.value, fileMatch: [uri] }\r\n      : jsonSchema?.type === 'raw'\r\n        ? { uri, fileMatch: [uri], schema: JSON.parse(jsonSchema.value) }\r\n        : undefined;\r\n\r\n    if (!exists && !newSchema) return;\r\n\r\n    const newJsonDiagnostics: Monaco.languages.json.DiagnosticsOptions = {\r\n      ...oldJsonDiagnostics,\r\n      enableSchemaRequest: true,\r\n      schemas: exists && !newSchema\r\n        ? oldJsonDiagnostics.schemas.filter(schema => schema.fileMatch[0] !== uri)\r\n        : exists\r\n          ? oldJsonDiagnostics.schemas.map(schema => schema.fileMatch[0] === uri ? newSchema : schema)\r\n          : [...(oldJsonDiagnostics.schemas ?? []), newSchema],\r\n    };\r\n\r\n    this.monaco.languages.json.jsonDefaults.setDiagnosticsOptions(newJsonDiagnostics);\r\n  }\r\n\r\n  setJsonComments(comments?: Monaco.languages.json.SeverityLevel): void {\r\n    if (!comments) return;\r\n\r\n    const jsonDiagnostics: Monaco.languages.json.DiagnosticsOptions = {\r\n      ...this.monaco.languages.json.jsonDefaults.diagnosticsOptions,\r\n      comments,\r\n    };\r\n    this.monaco.languages.json.jsonDefaults.setDiagnosticsOptions(jsonDiagnostics);\r\n  }\r\n\r\n  setJsDiagnostics(options: Monaco.languages.typescript.DiagnosticsOptions): void {\r\n    if (!options) return;\r\n\r\n    const javascriptDiagnostics: Monaco.languages.typescript.DiagnosticsOptions = {\r\n      ...this.monaco.languages.typescript.javascriptDefaults.getDiagnosticsOptions(),\r\n      ...options,\r\n    };\r\n    this.monaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions(javascriptDiagnostics);\r\n  }\r\n\r\n  setJsTypings(typings: string): void {\r\n    if (!typings) {\r\n      this.jsTypingsLib?.dispose();\r\n      return;\r\n    }\r\n    this.jsTypingsLib = this.monaco.languages.typescript.javascriptDefaults.addExtraLib(typings, `js-typings-${this.filename}`);\r\n  }\r\n\r\n  private createGlobalCache(monaco: typeof Monaco & { _2sxc?: Monaco2sxc }): Monaco2sxc {\r\n    if (monaco._2sxc == null) {\r\n      const _2sxc: Monaco2sxc = {\r\n        themesAreDefined: false,\r\n        savedStates: {},\r\n      };\r\n      monaco._2sxc = _2sxc;\r\n    }\r\n    return monaco._2sxc;\r\n  }\r\n\r\n  /** Registers our themes. Themes are global. Run before creating editor */\r\n  private defineThemes(globalCache: Monaco2sxc, monaco: typeof Monaco): void {\r\n    // there is currently no official way to get defined themes from Monaco to check if some theme was already defined\r\n    if (globalCache.themesAreDefined) return;\r\n    globalCache.themesAreDefined = true;\r\n\r\n    monaco.editor.defineTheme('2sxc-dark', {\r\n      base: 'vs-dark',\r\n      inherit: true,\r\n      rules: [\r\n        { token: 'metatag.cs', foreground: 'ffff00' },\r\n      ],\r\n      colors: {\r\n      },\r\n    });\r\n  }\r\n\r\n  private createInstance(\r\n    monaco: typeof Monaco,\r\n    filename: string,\r\n    value: string,\r\n    container: HTMLElement,\r\n    options: Monaco.editor.IStandaloneEditorConstructionOptions,\r\n  ): Monaco.editor.IStandaloneCodeEditor {\r\n    const editorInstance = monaco.editor.create(container, options);\r\n    const editorModelUri = monaco.Uri.file(filename);\r\n    const editorModel = monaco.editor.createModel(value, undefined, editorModelUri);\r\n    editorInstance.setModel(editorModel);\r\n    return editorInstance;\r\n  }\r\n\r\n  private saveState(globalCache: Monaco2sxc, editorInstance: Monaco.editor.IStandaloneCodeEditor): void {\r\n    const uri = editorInstance.getModel().uri.toString();\r\n    const viewState = JSON.stringify(editorInstance.saveViewState());\r\n\r\n    if (globalCache.savedStates[uri] == null) {\r\n      globalCache.savedStates[uri] = { viewState };\r\n    } else {\r\n      globalCache.savedStates[uri].viewState = viewState;\r\n    }\r\n  }\r\n\r\n  private restoreState(globalCache: Monaco2sxc, editorInstance: Monaco.editor.IStandaloneCodeEditor): void {\r\n    const uri = editorInstance.getModel().uri.toString();\r\n    const savedState = globalCache.savedStates[uri];\r\n    if (savedState == null) return;\r\n\r\n    const viewState: Monaco.editor.ICodeEditorViewState = JSON.parse(savedState.viewState);\r\n    editorInstance.restoreViewState(viewState);\r\n  }\r\n\r\n  private addSnippets(monaco: typeof Monaco, editorInstance: Monaco.editor.IStandaloneCodeEditor): Monaco.IDisposable[] {\r\n    const completionItemProviders = [\r\n      monaco.languages.registerCompletionItemProvider(editorInstance.getModel().getLanguageId(), {\r\n        triggerCharacters: ['>'],\r\n        provideCompletionItems: (model, position) => {\r\n          if (editorInstance.getModel() !== model) { return { suggestions: [] }; }\r\n\r\n          const textUntilPosition: string = model.getValueInRange({\r\n            startLineNumber: position.lineNumber,\r\n            startColumn: 1,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column,\r\n          });\r\n\r\n          // sometimes trigger character is wrong\r\n          const trigger = textUntilPosition[textUntilPosition.length - 1];\r\n          if (trigger !== '>') { return { suggestions: [] }; }\r\n\r\n          const tagStartIndex = textUntilPosition.lastIndexOf('<');\r\n          if (tagStartIndex === -1) { return { suggestions: [] }; }\r\n\r\n          const codeInTag = textUntilPosition.substring(tagStartIndex);\r\n          // check that > is not in between quotes like in <div class=\"car>\"\r\n          let quotes = 0;\r\n          Array.from(codeInTag).forEach(c => {\r\n            if (c === '\"') { quotes++; }\r\n          });\r\n          if (quotes % 2 !== 0) { return { suggestions: [] }; }\r\n          // check that it's not a closing tag\r\n          if (codeInTag.startsWith('</')) { return { suggestions: [] }; }\r\n          // check that tag is not already closed\r\n          if (codeInTag.indexOf('>') !== codeInTag.length - 1) { return { suggestions: [] }; }\r\n\r\n          // tag name ends with space or tag is closed completely\r\n          let tagEndIndex = codeInTag.indexOf(' ');\r\n          if (tagEndIndex === -1) {\r\n            tagEndIndex = codeInTag.indexOf('>');\r\n          }\r\n          if (tagEndIndex === -1) { return { suggestions: [] }; }\r\n\r\n          const tag = codeInTag.substring(1, tagEndIndex);\r\n          if (!tag) { return { suggestions: [] }; }\r\n          if (voidElements.includes(tag.toLocaleLowerCase())) { return { suggestions: [] }; }\r\n          if (!/[a-zA-Z0-9_-]/.test(tag)) { return { suggestions: [] }; }\r\n\r\n          const suggestions: Monaco.languages.CompletionItem[] = [{\r\n            label: `</${tag}>`,\r\n            kind: monaco.languages.CompletionItemKind.Snippet,\r\n            insertText: `\\$0</${tag}>`,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            range: {\r\n              startLineNumber: position.lineNumber,\r\n              endLineNumber: position.lineNumber,\r\n              startColumn: position.column,\r\n              endColumn: position.column,\r\n            },\r\n          }];\r\n          return { suggestions };\r\n        },\r\n      }),\r\n\r\n      monaco.languages.registerCompletionItemProvider(editorInstance.getModel().getLanguageId(), {\r\n        provideCompletionItems: (model, position) => {\r\n          if (this.snippets == null || editorInstance.getModel() !== model) { return { suggestions: [] }; }\r\n\r\n          const word = model.getWordUntilPosition(position);\r\n          const suggestions = this.snippets.map(snippet => {\r\n            if (!snippet.content) return;\r\n            const suggestion: Monaco.languages.CompletionItem = {\r\n              label: snippet.name,\r\n              kind: monaco.languages.CompletionItemKind.Snippet,\r\n              documentation: `${snippet.title ?? ''}\\n${snippet.help ?? ''}\\n${snippet.links ?? ''}`,\r\n              insertText: snippet.content,\r\n              insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n              range: {\r\n                startLineNumber: position.lineNumber,\r\n                endLineNumber: position.lineNumber,\r\n                startColumn: word.startColumn,\r\n                endColumn: word.endColumn\r\n              },\r\n            };\r\n            return suggestion;\r\n          }).filter(suggestion => !!suggestion);\r\n          return { suggestions };\r\n        },\r\n      }),\r\n\r\n      monaco.languages.registerHoverProvider(editorInstance.getModel().getLanguageId(), {\r\n        provideHover: (model, position) => {\r\n          if (this.tooltips == null || editorInstance.getModel() !== model) return;\r\n\r\n          const word = model.getWordAtPosition(position);\r\n          if (!word) return;\r\n\r\n          const tooltip = this.tooltips.find(i => i.Term === word.word);\r\n          if (!tooltip) return;\r\n\r\n          return {\r\n            contents: tooltip.Help.map(value => {\r\n              const content: Monaco.IMarkdownString = {\r\n                value,\r\n              };\r\n              return content;\r\n            }),\r\n            range: {\r\n              startLineNumber: position.lineNumber,\r\n              endLineNumber: position.lineNumber,\r\n              startColumn: word.startColumn,\r\n              endColumn: word.endColumn,\r\n            },\r\n          };\r\n        }\r\n      }),\r\n    ];\r\n\r\n    return completionItemProviders;\r\n  }\r\n\r\n  private createResizeObserver(container: HTMLElement, editorInstance: Monaco.editor.IStandaloneCodeEditor): ResizeObserver {\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      editorInstance.layout();\r\n    });\r\n    resizeObserver.observe(container);\r\n    return resizeObserver;\r\n  }\r\n\r\n  private addEvents(editorInstance: Monaco.editor.IStandaloneCodeEditor): void {\r\n    editorInstance.getModel().onDidChangeContent(() => {\r\n      const newValue = editorInstance.getModel().getValue();\r\n      if (newValue === this.cachedValue) return;\r\n      this.cachedValue = newValue;\r\n      this.valueChangedCallback?.(newValue);\r\n    });\r\n\r\n    editorInstance.onDidFocusEditorWidget(() => {\r\n      this.focusedCallback?.();\r\n    });\r\n\r\n    editorInstance.onDidBlurEditorWidget(() => {\r\n      this.blurredCallback?.();\r\n    });\r\n\r\n    // this.editorInstance.onDidChangeModelDecorations(e => {\r\n    //   const value = this.editorInstance.getModel().getValue();\r\n    //   const markers = this.monaco.editor.getModelMarkers({}).filter(marker => marker.resource.path === `/${this.filename}`);\r\n    //   const valid = !markers.some(\r\n    //     marker => marker.severity === this.monaco.MarkerSeverity.Error || marker.severity === this.monaco.MarkerSeverity.Warning\r\n    //   );\r\n    // });\r\n\r\n    // this.monaco.editor.onDidChangeMarkers(() => {\r\n    //   // markers updates are async and lagging behind value updates\r\n    //   const markers = this.monaco.editor.getModelMarkers({}).filter(marker => marker.resource.path === `/${this.filename}`);\r\n    //   if (markers.some(marker => marker.severity === this.monaco.MarkerSeverity.Error)) {\r\n    //     // has errors\r\n    //   } else if (markers.some(marker => marker.severity === this.monaco.MarkerSeverity.Warning)) {\r\n    //     // has warnings\r\n    //   } else {\r\n    //     // has no errors or warnings\r\n    //   }\r\n    // });\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport type * as Monaco from 'monaco-editor';\r\nimport { JsonSchema } from '.';\r\nimport { Snippet } from '../code-editor/models/snippet.model';\r\nimport { Tooltip } from '../code-editor/models/tooltip.model';\r\nimport { EavWindow } from '../shared/models/eav-window.model';\r\nimport { nameof } from '../shared/typescript-helpers';\r\nimport { MonacoInstance } from './monaco-instance';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-monaco-editor',\r\n  templateUrl: './monaco-editor.component.html',\r\n  styleUrls: ['./monaco-editor.component.scss'],\r\n  standalone: true,\r\n})\r\nexport class MonacoEditorComponent implements AfterViewInit, OnChanges, OnDestroy {\r\n  @ViewChild('editor') private editorRef: ElementRef<HTMLElement>;\r\n  @Input() filename: string;\r\n  @Input() value: string;\r\n  @Input() snippets?: Snippet[];\r\n  @Input() tooltips?: Tooltip[];\r\n  @Input() options?: Monaco.editor.IStandaloneEditorConstructionOptions;\r\n  @Input() jsonSchema?: JsonSchema;\r\n  @Input() jsonComments?: Monaco.languages.json.SeverityLevel;\r\n  @Input() jsTypings?: string;\r\n  @Input() jsDiagnostics?: Monaco.languages.typescript.DiagnosticsOptions;\r\n  @Input() autoFocus = false;\r\n  @Output() private valueChanged = new EventEmitter<string>();\r\n  @Output() private focused = new EventEmitter<undefined>();\r\n  @Output() private blurred = new EventEmitter<undefined>();\r\n\r\n  private monaco?: typeof Monaco;\r\n  private monacoInstance?: MonacoInstance;\r\n\r\n  constructor() { }\r\n\r\n  ngAfterViewInit(): void {\r\n    window.require.config({\r\n      paths: {\r\n        vs: ['https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.46.0/min/vs'],\r\n      },\r\n    });\r\n\r\n    window.require(['vs/editor/editor.main'], (monaco: typeof Monaco) => {\r\n      this.monaco = monaco;\r\n      this.createEditor(this.autoFocus);\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes[nameof<MonacoEditorComponent>('filename')] != null && this.monacoInstance != null) {\r\n      this.monacoInstance.destroy();\r\n      this.createEditor(true);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('value')] != null) {\r\n      this.monacoInstance?.updateValue(this.value);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('jsonSchema')] != null) {\r\n      this.monacoInstance?.setJsonSchema(this.jsonSchema);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('jsonComments')] != null) {\r\n      this.monacoInstance?.setJsonComments(this.jsonComments);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('snippets')] != null) {\r\n      this.monacoInstance?.setSnippets(this.snippets);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('tooltips')] != null) {\r\n      this.monacoInstance?.setTooltips(this.tooltips);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('jsTypings')] != null) {\r\n      this.monacoInstance?.setJsTypings(this.jsTypings);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('jsDiagnostics')] != null) {\r\n      this.monacoInstance?.setJsDiagnostics(this.jsDiagnostics);\r\n    }\r\n  }\r\n\r\n  insertSnippet(snippet: string): void {\r\n    this.monacoInstance?.insertSnippet(snippet);\r\n    this.monacoInstance?.focus();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.monacoInstance?.destroy();\r\n  }\r\n\r\n  private createEditor(autoFocus: boolean): void {\r\n    this.monacoInstance = new MonacoInstance(\r\n      this.monaco, this.filename, this.value, this.editorRef.nativeElement, this.options, this.snippets, this.tooltips,\r\n    );\r\n\r\n    this.monacoInstance.setJsonSchema(this.jsonSchema);\r\n    this.monacoInstance.setJsonComments(this.jsonComments);\r\n    this.monacoInstance.setJsTypings(this.jsTypings);\r\n    this.monacoInstance.setJsDiagnostics(this.jsDiagnostics);\r\n\r\n    this.monacoInstance.onValueChange(value => {\r\n      this.valueChanged.emit(value);\r\n    });\r\n\r\n    this.monacoInstance.onFocus(() => {\r\n      this.focused.emit();\r\n    });\r\n\r\n    this.monacoInstance.onBlur(() => {\r\n      this.blurred.emit();\r\n    });\r\n\r\n    if (autoFocus) {\r\n      this.monacoInstance.focus();\r\n    }\r\n  }\r\n}\r\n","<div class=\"editor\" #editor></div>\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const replaceContentDialog: DialogConfig = {\r\n  name: 'REPLACE_CONTENT_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ReplaceContentComponent } = await import('./replace-content.component');\r\n    return ReplaceContentComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { replaceContentDialog } from './replace-content-dialog.config';\r\nimport { EditRoutesNoHistory } from '../edit/edit.routing';\r\n\r\nexport const replaceContentRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: replaceContentDialog },\r\n    children: [\r\n      // Note 2024-07-01 2dm - not sure why it is configured without history, but to be safe I'll keep it for now\r\n      ...EditRoutesNoHistory\r\n    ],\r\n  },\r\n];\r\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit, Type, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NavigateFormResult } from '../../../edit/routing/edit-routing.service';\r\nimport { classLog } from '../../logging';\r\nimport { DialogConfig } from '../../models/dialog-config.model';\r\nimport { EavWindow } from '../../models/eav-window.model';\r\nimport { Context } from '../../services/context';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-dialog-entry',\r\n  templateUrl: './dialog-entry.component.html',\r\n  standalone: true,\r\n  imports: [],\r\n  providers: [\r\n    Context, // this is used in the dialog to get the correct App\r\n  ],\r\n})\r\nexport class DialogEntryComponent implements OnInit, OnDestroy {\r\n  \r\n  log = classLog({DialogEntryComponent});\r\n  \r\n  #dialogData: Record<string, any>;\r\n  #dialog: MatDialogRef<any>;\r\n\r\n  constructor(\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.#dialogData = navigation?.extras?.state || {};\r\n  }\r\n\r\n  ngOnInit() {\r\n    const l = this.log.fn('ngOnInit');\r\n    const dialogConfig: DialogConfig = this.route.snapshot.data.dialog;\r\n    if (dialogConfig == null)\r\n      throw new Error(`Could not find config for dialog. Did you forget to add DialogConfig to route data?`);\r\n\r\n    l.a('Open dialog: '+ dialogConfig.name, { id: this.context.id, context: this.context });\r\n\r\n    dialogConfig.getComponent().then(component => {\r\n      // spm Workaround for \"feature\" where you can't open new dialog while last one is still opening\r\n      // https://github.com/angular/components/commit/728cf1c8ebd49e089f4bae945511bb0918972c26\r\n      const dialog = (this.matDialog as any);\r\n      if (dialog._dialogAnimatingOpen && dialog._lastDialogRef)\r\n        (dialog._lastDialogRef as MatDialogRef<any>).afterOpened()\r\n          .subscribe(() => this.openDialogComponent(dialogConfig, component));\r\n      else\r\n        this.openDialogComponent(dialogConfig, component);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.#dialog.close();\r\n  }\r\n\r\n  private openDialogComponent(dialogConfig: DialogConfig, component: Type<any>) {\r\n    this.log.a(`Open dialog(initContext: ${dialogConfig.initContext})`, { name: dialogConfig.name, 'Contextid:': this.context.log.svcId, 'Context:': this.context });\r\n    if (dialogConfig.initContext)\r\n      this.context.init(this.route);\r\n\r\n    this.#dialog = this.matDialog.open(component, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: this.#dialogData,\r\n      panelClass: [\r\n        'dialog-panel',\r\n        `dialog-panel-${dialogConfig.panelSize}`,\r\n        dialogConfig.showScrollbar ? 'show-scrollbar' : 'no-scrollbar',\r\n        ...(dialogConfig.panelClass ? dialogConfig.panelClass : []),\r\n      ],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n\r\n    this.#dialog.afterClosed().subscribe((data: any) => {\r\n      this.log.a('Dialog was closed - name:' + dialogConfig.name, { data });\r\n\r\n      const navRes = data as NavigateFormResult;\r\n      if (navRes?.navigateUrl != null) {\r\n        this.router.navigate([navRes.navigateUrl]);\r\n        return;\r\n      }\r\n\r\n      if (this.route.pathFromRoot.length <= 3) {\r\n        try {\r\n          window.parent.$2sxc.totalPopup.close();\r\n        } catch (error) { }\r\n        return;\r\n      }\r\n\r\n      if (this.route.snapshot.url.length > 0)\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent, state: data });\r\n      else\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent.parent, state: data });\r\n    });\r\n\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","\r\nexport class JsonHelpers {\r\n\r\n  /** Tries to parse string as JSON */\r\n  static tryParse(input: string): any {\r\n    try {\r\n      return JSON.parse(input);\r\n    } catch { }\r\n  }\r\n}\r\n","import { EavWindow } from '../models/eav-window.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport function loadScripts(scriptObjects: ScriptObject[], callback: () => void, iteration = 0) {\r\n  const isLast = scriptObjects.length === iteration + 1;\r\n  const newCallback = isLast ? callback : loadScripts.bind(this, scriptObjects, callback, iteration + 1);\r\n  const scrObj = scriptObjects[iteration];\r\n\r\n  const global = typeof scrObj.test === 'string' ? scrObj.test : null;\r\n  const test = typeof scrObj.test === 'function' ? scrObj.test : null;\r\n  const w = window as Record<string, any>;\r\n\r\n  if (global != null && !!w[global]) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  if (test != null && test()) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  window.require([scrObj.src], (exportedVar: any) => {\r\n    if (exportedVar && !w[global]) {\r\n      w[global] = exportedVar;\r\n    }\r\n    newCallback();\r\n  });\r\n}\r\n\r\nexport interface ScriptObject {\r\n  /** window.xxx or a function that returns a boolean */\r\n  test: string | (() => boolean);\r\n  src: string;\r\n}\r\n","import { EnvironmentSpecs } from '@2sic.com/2sxc-typings';\r\nimport { DialogContextApp } from '../models/dialog-context.models';\r\nimport { EavWindow } from '../models/eav-window.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n/**\r\n * This ensures that $2sxc is fully initialized with parameters which are provided later on\r\n * The appApi is being added in v12\r\n * It's important because in Oqtane the app-api root is different in from the normal admin-apis\r\n */\r\nexport function UpdateEnvVarsFromDialogSettings(appContext: DialogContextApp): void {\r\n  try {\r\n    const includedApiRoot = appContext?.Api;\r\n    if (!includedApiRoot) return;\r\n\r\n    const old2sxcHeader = (window.$2sxc.env as any).header as EnvironmentSpecs;\r\n    const new2sxcHeader = { ...old2sxcHeader, appApi: includedApiRoot } as EnvironmentSpecs;\r\n    window.$2sxc.env.load(new2sxcHeader);\r\n  } catch { /* ignore */ }\r\n}\r\n","import { Of } from '../../../../../core';\r\nimport { PermissionsCount } from '../../app-administration/models/permissions-count.model';\r\nimport { Language } from './language.model';\r\n\r\nexport interface DialogContextApp {\r\n  /** Root for app APIs and content/query */\r\n  Api: string;\r\n  Folder: string;\r\n  GettingStartedUrl: string;\r\n  Id: number;\r\n  Identifier: string;\r\n  IsContentApp: boolean;\r\n  IsGlobalApp: boolean;\r\n  IsInherited: boolean;\r\n  IsShared: boolean;\r\n  IsSiteApp: boolean;\r\n  Name: string;\r\n  Permissions: PermissionsCount;\r\n  SettingsScope: Of<typeof AppScopes>;\r\n  Url: string;\r\n  SharedUrl: string;\r\n\r\n  /** New app icon */\r\n  Icon: string;\r\n}\r\n\r\nexport interface ApiKeySpecs {\r\n  NameId: string;\r\n  ApiKey: string;\r\n  IsDemo: boolean;\r\n}\r\n\r\nexport const AppScopes = {\r\n  App: 'App',\r\n  Site: 'Site',\r\n  Global: 'Global',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n\r\n\r\nexport interface DialogContextEnable {\r\n  /** Determines if app admin should show app-permissions (true for Apps, false for Content and Global) */\r\n  AppPermissions?: boolean;\r\n  /** Determines if Code editing should be enabled (true for super-users) */\r\n  CodeEditor?: boolean;\r\n  DebugMode: boolean;\r\n  /** True if saving of formulas should be enabled (for edit-ui) */\r\n  FormulaSave?: boolean;\r\n  /** While debug is enabled, this allows some Edit Ui actions even when they are disabled in fields settings */\r\n  OverrideEditRestrictions?: boolean;\r\n  /** Determines if Queries should be enabled (true for Apps) */\r\n  Query?: boolean;\r\n}\r\n\r\nexport interface DialogContextLanguage {\r\n  Current: string;\r\n  List: Language[];\r\n  Primary: string;\r\n}\r\n\r\nexport interface DialogContextPage {\r\n  Id: number;\r\n}\r\n\r\nexport interface DialogContextSite {\r\n  DefaultApp: DialogContextSiteApp;\r\n  Id: number;\r\n  PrimaryApp: DialogContextSiteApp;\r\n  Url: string;\r\n}\r\n\r\nexport interface DialogContextSystem {\r\n  DefaultApp: DialogContextSiteApp;\r\n  PrimaryApp: DialogContextSiteApp;\r\n  Url: string;\r\n}\r\n\r\nexport interface DialogContextSiteApp {\r\n  ZoneId: number;\r\n  AppId: number;\r\n}\r\n\r\nexport interface DialogContextUser {\r\n  Email: string;\r\n  Id: number;\r\n  Guid: string;\r\n  IsAnonymous: boolean;\r\n  IsSiteAdmin: boolean;\r\n  IsContentAdmin: boolean;\r\n  IsSystemAdmin: boolean;\r\n  Name: string;\r\n  Username: string;\r\n}\r\n\r\n// export interface DialogContextFeature {\r\n//   NameId: string;\r\n//   Enabled: boolean;\r\n// }\r\n","import isEqual from 'lodash-es/isEqual';\r\n\r\nexport class RxHelpers {\r\n\r\n  static boolEquals(x: boolean, y: boolean): boolean {\r\n    return x === y;\r\n  }\r\n\r\n  static stringEquals(x: string, y: string): boolean {\r\n    return x === y;\r\n  }\r\n\r\n  static valueEquals<T>(x: T, y: T): boolean {\r\n    return x === y;\r\n  }\r\n\r\n  static objectsEqual<T>(x: T, y: T): boolean {\r\n    if (x == null || y == null) return x === y;\r\n\r\n    const obj1 = x as Record<string, any>;\r\n    const obj2 = y as Record<string, any>;\r\n\r\n    const keys1 = Object.keys(obj1);\r\n    const keys2 = Object.keys(obj2);\r\n    if (keys1.length !== keys2.length) return false;\r\n\r\n    const equal = keys1.every(key1 => {\r\n      if (!obj2.hasOwnProperty(key1)) return false;\r\n\r\n      return obj1[key1] === obj2[key1];\r\n    });\r\n\r\n    return equal;\r\n  }\r\n\r\n  static arraysEqual<T>(x: T[], y: T[]): boolean {\r\n    if (x == null || y == null) return x === y;\r\n\r\n    if (x.length !== y.length) return false;\r\n\r\n    const equal = x.every((item, index) => {\r\n      return x[index] === y[index];\r\n    });\r\n\r\n    return equal;\r\n  }\r\n\r\n  /** used as .filter(distinct), filters array to only have distinct values */\r\n  static distinct<T>(value: T, index: number, array: T[]): boolean {\r\n    return array.indexOf(value) === index;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DialogTypeConstants } from '../constants/dialog-type.constants';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyAppId, keyContentBlockId, keyDebug, keyDialog, keyExtras, keyIsShared, keyItems, keyModuleId, keyPartOfPage, keyPipelineId, keyUrl, keyZoneId, prefix } from '../constants/session.constants';\r\nimport { DialogHashParams, ExtrasParam } from '../models/dialog-url-params.model';\r\nimport { EditForm, EditPrep, ViewOrFileIdentifier } from '../models/edit-form.model';\r\nimport { HttpServiceBase } from './http-service-base';\r\n\r\n@Injectable()\r\nexport class DialogService extends HttpServiceBase {\r\n\r\n  openCodeFile(path: string, isShared: boolean, templateId?: number) {\r\n    const dialog = DialogTypeConstants.Develop;\r\n    const form = {\r\n      items: [{\r\n        Path: path,\r\n        ...(templateId != null && EditPrep.editId(templateId)),\r\n      }] as ViewOrFileIdentifier[]\r\n    };\r\n\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyDialog, dialog),\r\n      ...this.buildHashParam(keyIsShared, isShared.toString()),\r\n      ...this.buildHashParam(keyItems, JSON.stringify(form.items)),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openQueryDesigner(queryId: number) {\r\n    const dialog = DialogTypeConstants.PipelineDesigner;\r\n    const form: EditForm = {\r\n      items: [EditPrep.editId(queryId)],\r\n    };\r\n\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyDialog, dialog),\r\n      ...this.buildHashParam(keyPipelineId, queryId.toString()),\r\n      ...this.buildHashParam(keyItems, JSON.stringify(form.items)),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openAppsManagement(zoneId: number, tab?: string) {\r\n    const extras: ExtrasParam = {\r\n      ...(tab && { tab }),\r\n    };\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyZoneId, zoneId.toString()),\r\n      ...this.buildHashParam(keyDialog, DialogTypeConstants.Zone),\r\n      ...(Object.keys(extras).length ? this.buildHashParam(keyExtras, JSON.stringify(extras)) : ''),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openAppAdministration(zoneId: number, appId: number, tab?: string, scope?: string) {\r\n    const extras: ExtrasParam = {\r\n      ...(tab && { tab }),\r\n      ...(scope && { scope }),\r\n    };\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyZoneId, zoneId.toString()),\r\n      ...this.buildHashParam(keyAppId, appId.toString()),\r\n      ...this.buildHashParam(keyDialog, DialogTypeConstants.App),\r\n      ...(Object.keys(extras).length ? this.buildHashParam(keyExtras, JSON.stringify(extras)) : ''),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  /** A lot of the link is identical when opening the admin-dialogs in a new window */\r\n  private buildSharedHashParams() {\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyZoneId, this.zoneId),\r\n      ...this.buildHashParam(keyAppId, this.appId),\r\n      ...this.buildHashParam(keyModuleId, this.context.moduleId?.toString()),\r\n      ...this.buildHashParam(keyContentBlockId, this.context.contentBlockId?.toString()),\r\n      ...this.buildHashParam(keyPartOfPage),\r\n      ...(sessionStorage.getItem(keyDebug) ? this.buildHashParam(keyDebug) : {}),\r\n    };\r\n    return hashParams;\r\n  }\r\n\r\n  /** Encodes param if necessary */\r\n  private buildHashParam(key: string, value?: string) {\r\n    const rawKey = key.replace(prefix, '');\r\n    const valueTemp = (value != null) ? value : sessionStorage.getItem(key);\r\n    const rawValue = encodeURIComponent(valueTemp);\r\n    const hashParam: DialogHashParams = { [rawKey]: rawValue };\r\n    return hashParam;\r\n  }\r\n\r\n  private buildFullUrl(hashParams: DialogHashParams) {\r\n    const oldHref = sessionStorage.getItem(keyUrl);\r\n    const oldUrl = new URL(oldHref);\r\n    const newHref = oldUrl.origin + oldUrl.pathname + oldUrl.search;\r\n\r\n    const allHashParams: DialogHashParams = {\r\n      ...this.buildSharedHashParams(),\r\n      ...hashParams,\r\n    };\r\n    const hashUrl = Object.entries(allHashParams).reduce((acc, [key, value]) => `${acc}&${key}=${value}`, '').replace('&', '#');\r\n    return newHref + hashUrl;\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}