{"version":3,"file":"default-projects_eav-ui_src_app_create-file-dialog_create-file-dialog_component_ts.1a2272135a96db7d.js","mappings":"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","names":["appFilesAsset","SourceService","HttpServiceBase","get","viewKey","global","urlItems","this","http","apiUrl","params","appId","templateIdOrPath","pipe","map","view","Type","toLocaleLowerCase","Extension","save","post","getAll","mask","Files","forEach","file","Shared","getWebApis","files","isShared","isCompiled","splitIndex","path","lastIndexOf","fileExtIndex","folder","substring","name","endpointPath","edition","getWebApiDetails","apiPath","zoneId","getPredefinedTemplates","purpose","type","getPreview","templateKey","create","test","find","i","EntityId","toString","IsShared","Path","templateId","__ngFactoryType__","factory","ɵfac","MatInputAutofocusDirective","constructor","matInput","elementRef","autofocusSelectValue","ngOnInit","setTimeout","focus","toBoolean","nativeElement","setSelectionRange","value","length","valueLowerCase","i0","i1","selectors","inputs","standalone","platform_r2","purpose_r3","template_r4","Key","Name","_c0","vm_r6","loadingPreview","preview","previewError","CreateFileDialogComponent_Conditional_0_For_17_Template","CreateFileDialogComponent_Conditional_0_For_24_Template","CreateFileDialogComponent_Conditional_0_For_31_Template","CreateFileDialogComponent_Conditional_0_Conditional_37_Template","CreateFileDialogComponent_Conditional_0_Conditional_39_Template","_r1","ctx_r4","closeDialog","confirm","CreateFileDialogComponent_Conditional_0_Conditional_44_Template","CreateFileDialogComponent_Conditional_0_Conditional_45_Template","controls","finalName","trim","form","platforms","purposes","templates","touched","errors","required","valid","previewValid","CreateFileDialogComponent","BaseComponent","dialogData","dialog","super","hostClass","all","sourceService","transient","templates$","BehaviorSubject","loadingPreview$","buildForm","fetchTemplates","buildViewModel","ngOnDestroy","complete","result","close","formValues","getRawValue","subscribe","response","Default","patchValue","next","Templates","UntypedFormGroup","platform","UntypedFormControl","disabled","Validators","subscriptions","add","combineLatest","valueChanges","startWith","distinctUntilChanged","template","t","suggestedName","SuggestedFileName","SanitizeHelper","sanitizePath","Prefix","Suffix","replace","platforms$","platformsMap","Platforms","Object","keys","purposes$","purposesMap","Purpose","filter","includes","tap","some","newTemplateKey","preview$","throttleTime","duration","scheduler","asyncScheduler","config","duration$","timer","throttle","durationSelector","operate","source","subscriber","leading","trailing","hasValue","sendValue","throttled","isComplete","endThrottling","unsubscribe","send","cleanupThrottling","startThrottle","innerFrom","createOperatorSubscriber","closed","switchMap","forkJoin","of","undefined","viewModel$","Preview","IsValid","Error","MAT_DIALOG_DATA","hostVars","hostBindings","rf","ctx","CreateFileDialogComponent_Conditional_0_Template","tmp_0_0","FormsModule","i2","ReactiveFormsModule","MatFormFieldModule","i3","MatSelectModule","i4","i5","MatOptionModule","MatInputModule","i6","MatProgressSpinnerModule","i7","MatButtonModule","i8","NgClass","AsyncPipe","FieldHintComponent","styles"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/code-editor/services/source.service.ts","./projects/eav-ui/src/app/shared/directives/mat-input-autofocus.directive.ts","./projects/eav-ui/src/app/create-file-dialog/create-file-dialog.component.html","./projects/eav-ui/src/app/create-file-dialog/create-file-dialog.component.ts","./node_modules/rxjs/dist/esm/internal/operators/throttleTime.js","./node_modules/rxjs/dist/esm/internal/operators/throttle.js"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { WebApi, WebApiDetails } from '../../app-administration/models';\r\nimport { ViewOrFileIdentifier } from '../../shared/models/edit-form.model';\r\nimport { FileAsset } from '../models/file-asset.model';\r\nimport { PredefinedTemplatesResponse } from '../models/predefined-template.model';\r\nimport { Preview } from '../models/preview.models';\r\nimport { SourceView } from '../models/source-view.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst appFilesAll = 'admin/AppFiles/AppFiles';\r\nconst appFilesAsset = 'admin/AppFiles/asset';\r\nconst appFilesCreate = 'admin/AppFiles/create';\r\nconst apiExplorerInspect = 'admin/ApiExplorer/inspect';\r\nconst apiExplorerAppApiFiles = 'admin/ApiExplorer/AppApiFiles';\r\nconst appFilesPredefinedTemplates = 'admin/AppFiles/GetTemplates';\r\nconst appFilesPreview = 'admin/AppFiles/preview';\r\n\r\n@Injectable()\r\nexport class SourceService extends HttpServiceBase {\r\n\r\n  /** ViewKey is templateId or path */\r\n  get(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[]): Observable<SourceView> {\r\n    return this.http.get<SourceView>(this.apiUrl(appFilesAsset), {\r\n      params: {\r\n        appId: this.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    }).pipe(\r\n      map(view => {\r\n        if (view.Type.toLocaleLowerCase() === 'auto') {\r\n          switch (view.Extension.toLocaleLowerCase()) {\r\n            case '.cs':\r\n            case '.cshtml':\r\n              view.Type = 'Razor';\r\n              break;\r\n            case '.html':\r\n            case '.css':\r\n            case '.js':\r\n              view.Type = 'Token';\r\n              break;\r\n          }\r\n        }\r\n        return view;\r\n      })\r\n    );\r\n  }\r\n\r\n  /** ViewKey is templateId or path */\r\n  save(viewKey: string, global: boolean, view: SourceView, urlItems: ViewOrFileIdentifier[]): Observable<boolean> {\r\n    return this.http.post<boolean>(this.apiUrl(appFilesAsset), view, {\r\n      params: {\r\n        appId: this.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    });\r\n  }\r\n\r\n  getAll(mask?: string): Observable<FileAsset[]> {\r\n    return this.http.get<{ Files: FileAsset[] }>(this.apiUrl(appFilesAll), {\r\n      params: {\r\n        appId: this.appId,\r\n        ...(mask && { mask }),\r\n      },\r\n    }).pipe(\r\n      map(({ Files }) => {\r\n        Files.forEach(file => {\r\n          file.Shared ??= false;\r\n        });\r\n        return Files;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getWebApis(): Observable<WebApi[]> {\r\n    return this.http.get<{ files: WebApi[] }>(this.apiUrl(apiExplorerAppApiFiles), {\r\n      params: {\r\n        appId: this.appId,\r\n      },\r\n    }).pipe(\r\n      map(({ files }) => {\r\n        files.forEach(file => {\r\n          file.isShared ??= false;\r\n          file.isCompiled ??= false;\r\n        });\r\n        return files;\r\n      }),\r\n    ).pipe(\r\n      map(files => {\r\n        const webApis: WebApi[] = files.map(file => {\r\n          const splitIndex = file.path.lastIndexOf('/');\r\n          const fileExtIndex = file.path.lastIndexOf('.');\r\n          const folder = file.path.substring(0, splitIndex);\r\n          const name = file.path.substring(splitIndex + 1, fileExtIndex);\r\n          const webApi: WebApi = { path: file.path, folder, name, isShared: file.isShared, endpointPath: file.endpointPath, isCompiled: file.isCompiled, edition: file.edition };\r\n          return webApi;\r\n        });\r\n        return webApis;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getWebApiDetails(apiPath: string): Observable<WebApiDetails> {\r\n    return this.http.get<WebApiDetails>(this.apiUrl(apiExplorerInspect), {\r\n      params: { appId: this.appId, zoneId: this.zoneId, path: apiPath },\r\n    });\r\n  }\r\n\r\n  getPredefinedTemplates(purpose?: 'Template' | 'Search' | 'Api', type?: 'Token' | 'Razor'): Observable<PredefinedTemplatesResponse> {\r\n    return this.http.get<PredefinedTemplatesResponse>(this.apiUrl(appFilesPredefinedTemplates), {\r\n      params: {\r\n        ...(purpose && { purpose }),\r\n        ...(type && { type }),\r\n      },\r\n    });\r\n  }\r\n\r\n  getPreview(path: string, global: boolean, templateKey: string): Observable<Preview> {\r\n    return this.http.get<Preview>(this.apiUrl(appFilesPreview), {\r\n      params: {\r\n        appId: this.appId,\r\n        path,\r\n        templateKey,\r\n        global,\r\n      },\r\n    });\r\n  }\r\n\r\n  create(path: string, global: boolean, templateKey: string): Observable<boolean> {\r\n    return this.http.post<boolean>(this.apiUrl(appFilesCreate), {}, {\r\n      params: {\r\n        appId: this.appId,\r\n        global,\r\n        purpose: 'auto',\r\n        path,\r\n        templateKey,\r\n      },\r\n    });\r\n  }\r\n\r\n  private templateIdOrPath(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[]) {\r\n    if (/^[0-9]*$/g.test(viewKey)) {\r\n      const path = urlItems.find(i => i.EntityId?.toString() === viewKey && i.IsShared === global)?.Path;\r\n      return {\r\n        templateId: viewKey,\r\n        ...(path != null && { path }),\r\n      };\r\n    } else {\r\n      return { path: viewKey };\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\r\nimport { MatInput } from '@angular/material/input';\r\n\r\n@Directive({ selector: '[appMatInputAutofocus]', standalone: true })\r\nexport class MatInputAutofocusDirective implements OnInit {\r\n  @Input() autofocusSelectValue: string | boolean | null | undefined = false;\r\n\r\n  constructor(private matInput: MatInput, private elementRef: ElementRef<HTMLInputElement>) { }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.matInput.focus();\r\n\r\n      if (this.toBoolean(this.autofocusSelectValue)) {\r\n        this.elementRef.nativeElement.setSelectionRange(0, this.matInput.value.length);\r\n      }\r\n    });\r\n  }\r\n\r\n  private toBoolean(value: any): boolean | null | undefined {\r\n    if (typeof value === 'boolean') { return value; }\r\n    if (typeof value === 'string') {\r\n      const valueLowerCase = value.toLocaleLowerCase();\r\n      if (valueLowerCase === 'true') { return true; }\r\n      if (valueLowerCase === 'false') { return false; }\r\n      return;\r\n    }\r\n    if (value == null) { return value; }\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n<div class=\"eav-dialog eav-no-scrollbar\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title eav-dialog-title-box\">\r\n      <span>Create</span>\r\n      <span class=\"eav-file-name\">{{\r\n        controls.finalName.value\r\n        || (controls.folder.value ? controls.folder.value.trim() + '/' : '')\r\n        }}</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <form [formGroup]=\"form\" class=\"dialog-form\">\r\n      <div class=\"dialog-form-content\">\r\n        <div class=\"eav-field-container eav-multiple\">\r\n          <!-- Platform -->\r\n          <div class=\"eav-multiple-field\">\r\n            <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n              <mat-label>Platform</mat-label>\r\n              <mat-select formControlName=\"platform\">\r\n                @for (platform of vm.platforms; track platform) {\r\n                <mat-option [value]=\"platform\">\r\n                  {{ platform }}\r\n                </mat-option>\r\n                }\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <!-- Purpose -->\r\n          <div class=\"eav-multiple-field\">\r\n            <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n              <mat-label>Purpose</mat-label>\r\n              <mat-select formControlName=\"purpose\">\r\n                @for (purpose of vm.purposes; track purpose) {\r\n                <mat-option [value]=\"purpose\">\r\n                  {{ purpose }}\r\n                </mat-option>\r\n                }\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <!-- Template -->\r\n        <div class=\"eav-field-container\">\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Template</mat-label>\r\n            <mat-select formControlName=\"templateKey\">\r\n              @for (template of vm.templates; track template) {\r\n              <mat-option [value]=\"template.Key\">\r\n                {{ template.Name }}\r\n              </mat-option>\r\n              }\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <!-- Name -->\r\n        <div class=\"eav-field-container\">\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Name</mat-label>\r\n            <input matInput type=\"text\" formControlName=\"name\" required appMatInputAutofocus\r\n              autofocusSelectValue=\"true\">\r\n          </mat-form-field>\r\n          @if (controls.name.touched && controls.name.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n          }\r\n        </div>\r\n      </div>\r\n      <div class=\"dialog-form-actions\">\r\n        @if (vm.loadingPreview) {\r\n        <mat-spinner mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n        <div class=\"spacer\"></div>\r\n        }\r\n        <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n        <button mat-raised-button type=\"button\" color=\"accent\"\r\n          [disabled]=\"!form.valid || vm.loadingPreview || !vm.previewValid\" (click)=\"confirm()\">\r\n          Create\r\n        </button>\r\n      </div>\r\n      @if (vm.preview) {\r\n      <div class=\"eav-preview-label-box\">\r\n        <label class=\"eav-preview-label\" [ngClass]=\"{ 'disabled': vm.loadingPreview }\">Preview</label>\r\n      </div>\r\n      <pre class=\"fancy-scrollbar-light\" [ngClass]=\"{ 'disabled': vm.loadingPreview }\">{{ vm.preview }}</pre>\r\n      }\r\n      @if (!vm.loadingPreview && vm.previewError) {\r\n      <div class=\"eav-preview-error\">\r\n        {{ vm.previewError }}\r\n      </div>\r\n      }\r\n    </form>\r\n  </div>\r\n</div>\r\n}\r\n","import { Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n// tslint:disable-next-line:max-line-length\r\nimport { AsyncPipe, NgClass } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { asyncScheduler, BehaviorSubject, combineLatest, distinctUntilChanged, forkJoin, map, Observable, of, startWith, switchMap, tap, throttleTime, timer } from 'rxjs';\r\nimport { CreateFileDialogData, CreateFileDialogResult, CreateFileFormControls, CreateFileFormValues, CreateFileViewModel } from '.';\r\nimport { transient } from '../../../../core';\r\nimport { PredefinedTemplate } from '../code-editor/models/predefined-template.model';\r\nimport { Preview } from '../code-editor/models/preview.models';\r\nimport { SourceService } from '../code-editor/services/source.service';\r\nimport { SanitizeHelper } from '../edit/shared/helpers';\r\nimport { BaseComponent } from '../shared/components/base.component';\r\nimport { FieldHintComponent } from '../shared/components/field-hint/field-hint.component';\r\nimport { MatInputAutofocusDirective } from '../shared/directives/mat-input-autofocus.directive';\r\n\r\n@Component({\r\n  selector: 'app-create-file-dialog',\r\n  templateUrl: './create-file-dialog.component.html',\r\n  styleUrls: ['./create-file-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    MatButtonModule,\r\n    NgClass,\r\n    AsyncPipe,\r\n    FieldHintComponent,\r\n    MatInputAutofocusDirective,\r\n  ],\r\n})\r\nexport class CreateFileDialogComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  controls: CreateFileFormControls;\r\n  viewModel$: Observable<CreateFileViewModel>;\r\n\r\n  private all = 'All' as const;\r\n  private templates$: BehaviorSubject<PredefinedTemplate[]>;\r\n  private loadingPreview$: BehaviorSubject<boolean>;\r\n\r\n  private sourceService = transient(SourceService);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: CreateFileDialogData,\r\n    private dialog: MatDialogRef<CreateFileDialogComponent>,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.templates$ = new BehaviorSubject<PredefinedTemplate[]>([]);\r\n    this.loadingPreview$ = new BehaviorSubject(false);\r\n\r\n    this.buildForm();\r\n    this.fetchTemplates();\r\n    this.buildViewModel();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.templates$.complete();\r\n    this.loadingPreview$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(result?: CreateFileDialogResult): void {\r\n    this.dialog.close(result);\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: CreateFileFormValues = this.form.getRawValue();\r\n\r\n    const result: CreateFileDialogResult = {\r\n      name: formValues.finalName,\r\n      templateKey: formValues.templateKey,\r\n    };\r\n    this.closeDialog(result);\r\n  }\r\n\r\n  private fetchTemplates(): void {\r\n    this.sourceService.getPredefinedTemplates(this.dialogData.purpose, this.dialogData.type).subscribe(response => {\r\n      if (this.controls.templateKey.value !== response.Default) {\r\n        this.controls.templateKey.patchValue(response.Default);\r\n      }\r\n      this.templates$.next(response.Templates);\r\n    });\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({\r\n      platform: new UntypedFormControl(this.all),\r\n      purpose: new UntypedFormControl({ value: this.dialogData.purpose ?? this.all, disabled: this.dialogData.purpose != null }),\r\n      templateKey: new UntypedFormControl(null, Validators.required),\r\n      name: new UntypedFormControl(this.dialogData.name ?? null, Validators.required),\r\n      finalName: new UntypedFormControl({ value: null, disabled: true }),\r\n      folder: new UntypedFormControl({ value: this.dialogData.folder ?? '', disabled: true }),\r\n    });\r\n\r\n    this.controls = this.form.controls as any;\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([\r\n        this.templates$,\r\n        this.controls.templateKey.valueChanges.pipe(\r\n          startWith<string>(this.controls.templateKey.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n      ]).subscribe(([templates, templateKey]) => {\r\n        const template = templates.find(t => t.Key === templateKey);\r\n        const suggestedName = this.dialogData.name\r\n          ? this.controls.name.value || this.dialogData.name\r\n          : template?.SuggestedFileName ?? null;\r\n\r\n        if (this.controls.name.value !== suggestedName) {\r\n          this.controls.name.patchValue(suggestedName);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([\r\n        this.templates$,\r\n        this.controls.templateKey.valueChanges.pipe(\r\n          startWith<string>(this.controls.templateKey.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n        this.controls.name.valueChanges.pipe(\r\n          startWith<string>(this.controls.name.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n        this.controls.folder.valueChanges.pipe(\r\n          startWith<string>(this.controls.folder.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n      ]).subscribe(([templates, templateKey, name, folder]) => {\r\n        const template = templates.find(t => t.Key === templateKey);\r\n\r\n        let finalName: string = null;\r\n        if (name) {\r\n          folder = folder.trim();\r\n          name = SanitizeHelper.sanitizePath(name.trim());\r\n          name = `${template?.Prefix ?? ''}${name}${template?.Suffix ?? ''}${template?.Extension ?? ''}`;\r\n          finalName = `${folder ? `${folder}/` : ''}${name}`.replace(/\\/{2,}/g, '/');\r\n        }\r\n\r\n        if (this.controls.finalName.value !== finalName) {\r\n          this.controls.finalName.patchValue(finalName);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private buildViewModel(): void {\r\n    const platforms$ = this.templates$.pipe(\r\n      map(templates => {\r\n        const platformsMap: Record<string, string> = {\r\n          [this.all]: this.all,\r\n        };\r\n        templates.forEach(template => {\r\n          template.Platforms?.forEach(platform => {\r\n            platformsMap[platform] = platform;\r\n          });\r\n        });\r\n        return Object.keys(platformsMap);\r\n      }),\r\n    );\r\n    const purposes$ = this.templates$.pipe(\r\n      map(templates => {\r\n        const purposesMap: Record<string, string> = {\r\n          [this.all]: this.all,\r\n        };\r\n        templates.forEach(template => {\r\n          purposesMap[template.Purpose] = template.Purpose;\r\n        });\r\n        return Object.keys(purposesMap);\r\n      }),\r\n    );\r\n    const templates$ = combineLatest([\r\n      this.templates$,\r\n      this.controls.platform.valueChanges.pipe(\r\n        startWith<string>(this.controls.platform.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n      this.controls.purpose.valueChanges.pipe(\r\n        startWith<string>(this.controls.purpose.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n    ]).pipe(\r\n      map(([templates, platform, purpose]) => {\r\n        const filtered = templates.filter(template => {\r\n          const platformMatch = platform === this.all || (template.Platforms?.includes(platform) ?? false);\r\n          const purposeMatch = purpose === this.all || template.Purpose === purpose;\r\n          return platformMatch && purposeMatch;\r\n        });\r\n        return filtered;\r\n      }),\r\n      tap(templates => {\r\n        if (!templates.some(t => t.Key === this.controls.templateKey.value)) {\r\n          const newTemplateKey = templates[0]?.Key ?? null;\r\n          if (this.controls.templateKey.value !== newTemplateKey) {\r\n            this.controls.templateKey.patchValue(newTemplateKey);\r\n          }\r\n        }\r\n      }),\r\n    );\r\n    const preview$ = combineLatest([\r\n      this.controls.finalName.valueChanges.pipe(\r\n        startWith<string>(this.controls.finalName.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n      this.controls.templateKey.valueChanges.pipe(\r\n        startWith<string>(this.controls.templateKey.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n    ]).pipe(\r\n      throttleTime(100, asyncScheduler, { leading: true, trailing: true }),\r\n      tap(() => {\r\n        this.loadingPreview$.next(true);\r\n      }),\r\n      switchMap(([finalName, templateKey]) => {\r\n        return !finalName || !templateKey\r\n          ? of<Preview | undefined>(undefined)\r\n          : forkJoin([\r\n            this.sourceService.getPreview(finalName, this.dialogData.global, templateKey),\r\n            timer(500),\r\n          ]).pipe(map(([preview]) => preview));\r\n      }),\r\n      tap(() => {\r\n        this.loadingPreview$.next(false);\r\n      }),\r\n    );\r\n    this.viewModel$ = combineLatest([platforms$, purposes$, templates$, preview$, this.loadingPreview$]).pipe(\r\n      map(([platforms, purposes, templates, preview, loadingPreview]) => {\r\n        const viewModel: CreateFileViewModel = {\r\n          platforms,\r\n          purposes,\r\n          templates,\r\n          loadingPreview,\r\n          preview: preview?.Preview,\r\n          previewValid: preview?.IsValid ?? false,\r\n          previewError: preview?.Error,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { asyncScheduler } from '../scheduler/async';\nimport { throttle } from './throttle';\nimport { timer } from '../observable/timer';\nexport function throttleTime(duration, scheduler = asyncScheduler, config) {\n    const duration$ = timer(duration, scheduler);\n    return throttle(() => duration$, config);\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport function throttle(durationSelector, config) {\n    return operate((source, subscriber) => {\n        const { leading = true, trailing = false } = config !== null && config !== void 0 ? config : {};\n        let hasValue = false;\n        let sendValue = null;\n        let throttled = null;\n        let isComplete = false;\n        const endThrottling = () => {\n            throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();\n            throttled = null;\n            if (trailing) {\n                send();\n                isComplete && subscriber.complete();\n            }\n        };\n        const cleanupThrottling = () => {\n            throttled = null;\n            isComplete && subscriber.complete();\n        };\n        const startThrottle = (value) => (throttled = innerFrom(durationSelector(value)).subscribe(createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n        const send = () => {\n            if (hasValue) {\n                hasValue = false;\n                const value = sendValue;\n                sendValue = null;\n                subscriber.next(value);\n                !isComplete && startThrottle(value);\n            }\n        };\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            hasValue = true;\n            sendValue = value;\n            !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        }, () => {\n            isComplete = true;\n            !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }));\n    });\n}\n"],"x_google_ignoreList":[4,5]}