{"version":3,"file":"default-projects_eav-ui_src_app_features_shared_base-feature_component_ts-projects_eav-ui_src-0dc4d8.14c4bf4926784623.js","mappings":"2OAQO,IAAMA,EAAqB,MAA5B,MAAOA,UAA6BC,IAExCC,kBAAkBC,GAChB,OAAOC,KAAKC,KAAKC,IAAaF,KAAKG,OANV,yBAMwC,CAC/DC,OAAQ,CAAEL,WAEd,yEANWH,KAAoBS,GAApBT,EAAoB,0CAApBA,EAAoBU,QAApBV,EAAoBW,WAAA,SAApBX,CAAqB,2NCOxBY,MADF,UACEA,CADwB,WACSA,MAAA,SAAGA,QAElCA,MADF,UACEA,CADyC,YACtBA,MAAA,yBAAAC,EAAAD,MAAAE,GAAAC,EAAAH,MAAA,UAAAA,MAASG,EAAAC,UAAAC,gBAAAJ,GAA6B,GAAED,MAAA,GAE/DA,8BAFUA,MAAA,GAAAA,MAAA,QAAAC,GAAqDD,cAAAC,4CAdjED,MAFJ,aAEIA,CAFM,oBAENA,CADe,oBACCA,MAAA,GAClBA,UACAA,MAAA,sBACEA,MAAA,6BAEEA,MADF,UACEA,CADwB,WACSA,MAAA,yBAAoCA,QAEnEA,MADF,WACEA,CAD+B,WACzBA,MAAA,0BAEVA,YACAA,MAAA,GAAAM,EAAA,aAQFN,QAGIA,MAFJ,wBAEIA,CAF0B,SAE1BA,CADoG,eAC1FA,MAAA,kBAAWA,QACrBA,MAAA,0BACFA,QACAA,MAAA,eAAyDA,MAAA,mBAAAA,MAAAO,GAAA,MAAAJ,EAAAH,QAAA,OAAAA,MAASG,EAAAK,OAAAC,QAAc,GAC9ET,MAAA,0BAGNA,oCA5BoBA,MAAA,GAAAA,MAAAU,EAAAC,MAGbX,MAAA,GAAAA,MAAA,YAAAA,MAAA,IAAAU,EAAAE,aAAAZ,OAEgCA,MAAA,GAAAA,MAAA,GAAAA,MAAA,8BAEzBA,MAAA,GAAAA,YAAA,MAAAU,EAAAG,UAAA,yCAGVb,MAAA,GAAAA,OAAAc,EAAAJ,EAAAnB,QAAA,MAAAuB,GAUGd,MAAA,GAAAA,MAAA,OAAAU,EAAAK,KAAAf,OAEDA,MAAA,GAAAA,MAAA,IAAAA,MAAA,mCAGAA,MAAA,GAAAA,MAAA,IAAAA,MAAA,8BCAD,IAAMgB,EAA0B,MAAjC,MAAOA,EAQXC,GAEAC,YACkCC,EACtBX,EACFY,GAFwB5B,KAAA2B,aACtB3B,KAAAgB,SACFhB,KAAA4B,WALV5B,MAAAyB,KAAoBI,KAAUjC,KAUpBI,KAAA8B,kBAAiBC,MAAmB,UAAW,MAE/C/B,KAAAY,aAAYiB,KAAUG,KAL9BhC,MAAKyB,EAAkB3B,kBAAkBE,KAAK2B,YAAYM,UAAUC,GAAKlC,KAAK8B,eAAeK,IAAID,GACnG,iDAhBWV,GAA0BhB,MAW3B4B,MAAe5B,MAAA6B,MAAA7B,MAAA8B,MAAA,oCAXdd,EAA0Be,UAAA,8BAAAC,YAAA,EAAAC,SAAA,CAAAjC,OAAAkC,MAAA,EAAAC,KAAA,EAAAC,OAAA,iUAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,GD5BvCtC,MAAA,EAAAwC,EAAA,6BAAAxC,OAAAyC,EAAAF,EAAAjB,kBAAA,KAAAmB,mBCoBIC,KAAaC,yBACbC,KAAeC,UACfC,KAAaC,KACbC,IAAeC,KACfC,IACAC,KAAYC,cAAA,YAGHpC,CAA0B,mBCrBhC,IAAMqC,EAAoB,MAA3B,MAAOA,EAQXC,GACAC,GACAC,GACAC,GAEAvC,cAVA1B,KAAAkE,cAAgBC,MAAMC,WAGtBpE,KAAAqE,UAASF,QAAe,GAExBnE,MAAA8D,KAAaQ,OAAOC,MACpBvE,MAAA+D,KAAoBO,OAAOE,OAC3BxE,MAAAgE,KAAqBM,OAAOG,OAC5BzE,MAAAiE,KAAmBK,OAAOI,KAI1B1E,KAAA2E,WAAUC,MAAY,UAAW,IAAM5E,MAAKiE,EAAiBY,WAAW7E,KAAKkE,kBAE7ElE,KAAA8E,QAAOF,MAAY,OAAQ,KACzB,MAAMG,EAAO/E,KAAK2E,UAClB,OAAY,MAARI,GACG/E,KAAKqE,WAAaU,GAAM1D,YAAa,IAP9B,CAUhB2D,aACEC,EAAkBjF,MAAK8D,EAAY9D,KAAKkE,gBAAiBlE,MAAK+D,EAAmB/D,MAAKgE,EACxF,iDAzBWH,EAAoB,oCAApBA,EAAoBqB,OAAA,CAAAhB,cAAA,oBAAAG,OAAA,wBAApBR,CAAoB,KA6B3B,SAAUoB,EAAkBjE,EAAmBmE,EAAmBC,EAAoCC,GAC1GrE,EAAOsE,KAAK9D,EAA4B,CACtC+D,WAAW,EACXC,KAAML,EACNC,iBAAkBA,EAClBK,MAAO,UAGTJ,GAAmBK,cACrB,iGCxCO,MAAMC,EAAgB,aAGtB,IAAMC,EAAiB,MAAxB,MAAOA,UAAyB/F,IAEpCgG,UAAUC,EAAYC,EAAqBC,GAAmB,GAC5D,MAAMC,EAAW,IAAIC,SACrBD,SAASE,OAAO,OAAQL,GACxBG,EAASE,OAAO,OAAQJ,GAAe,IAChC/F,KAAKC,KAAKmG,KAAuBpG,KAAKG,OAAOwF,EAAgB,UAAWM,EAAU,CACvF7F,OAAQ,CAAEiG,OAAQrG,KAAKqG,UACtBC,QACDC,KAAUC,IACR,GAAIR,GAAoBQ,EAAOC,SAAS,IAAIC,cAAgBC,KAAuBC,QAAS,CAC1F,MAAMC,EAAaC,OAAON,EAAOC,SAAS,GAAGM,KAAO,4DACpD,GAAIF,EACF,OAAO7G,KAAK6F,UAAUC,EAAMe,GAAY,EAE5C,CACA,SAAOG,MAAGR,EAAM,GAGtB,yEAnBWZ,KAAgBvF,GAAhBuF,EAAgB,0CAAhBA,EAAgBtF,QAAhBsF,EAAgBrF,WAAA,SAAhBqF,CAAiB,yFCD9B,IAAIqB,EAAS,EACb,MAAMC,EAAsB,oBAEtBC,EAAY,IAAIC,IACtB,IAIMC,EAAoB,MAA1B,MAAMA,SACOrH,KAAKO,UAAI,SAAAF,GAAA,WAAAA,GAA+FgH,EAAoB,CAAqD,QACjLrH,KAAKsH,UADyF9G,MAAE,CAAA+G,KACJF,EAAoB9E,UAAA,mBAAAC,YAAA,EAAAC,SAAA,CADlBjC,OAAEkC,MAAA,EAAAC,KAAA,EAAAE,SAAA,SAAAC,EAAAC,GAAA,EAAAyE,OAAA,srGAAA5D,cAAA,EAAA6D,gBAAA,GAC44G,EACx/G,OAHKJ,CAAoB,KASpBK,EAAQ,MAAd,MAAMA,EAQF,SAAIC,GACA,OAAO3H,KAAK4H,MAChB,CACA,SAAID,CAAME,GACN7H,KAAK8H,UAAUD,GACf7H,KAAK4H,OAASC,CAClB,CAEA,WAAIE,GACA,OAAO/H,KAAKgI,QAChB,CACA,WAAID,CAAQE,GACRjI,KAAKkI,uBAAuBD,EAChC,CAEA,eAAI7G,GACA,OAAOpB,KAAKmI,YAChB,CACA,eAAI/G,CAAYgH,GACZpI,KAAKqI,mBAAmBD,EAC5B,CACA1G,YAAY4G,EAASC,EAAaC,EAAgBC,EAAWC,GACzD1I,KAAKsI,QAAUA,EACftI,KAAKuI,YAAcA,EACnBvI,KAAKwI,eAAiBA,EACtBxI,KAAKyI,UAAYA,EACjBzI,KAAK0I,eAAiBA,EACtB1I,KAAK4H,OAAS,UAEd5H,KAAK2I,SAAU,EAKf3I,KAAK4I,SAAW,cAEhB5I,KAAK6I,KAAO,SAEZ7I,KAAK8I,IAAM7B,IAEXjH,KAAK+I,gBAAiB,EAEtB/I,KAAKgJ,yBAAwB1E,OAAO2E,MACpCjJ,KAAKkJ,aAAY5E,OAAO6E,MACxB,MAAMC,KAAS9E,OAAO+E,OACtB,IAAKlC,EAAUmC,IAAIF,GAAS,CACxBjC,EAAUoC,IAAIH,GACd,MAAMI,KAAeC,OAAgBpC,EAAsB,CACvDqC,uBAAqBpF,OAAOqF,SAEhCP,EAAOQ,UAAU,KACbzC,EAAU0C,OAAOT,GACjBI,EAAaM,SAAQ,EAE7B,CAiBJ,CAEAC,UACI,OAA0C,IAAnC/J,KAAK4I,SAASoB,QAAQ,QACjC,CAEAC,UACI,OAA2C,IAApCjK,KAAK4I,SAASoB,QAAQ,SACjC,CAKAE,kBACI,OAAOlK,KAAKmK,aAChB,CACAC,WAIIpK,KAAKqK,uBACDrK,KAAK+H,UAAY/H,KAAKmK,gBACtBnK,KAAKmK,cAAgBnK,KAAKsK,sBAC1BtK,KAAKkI,uBAAuBlI,KAAK+H,UAErC/H,KAAK+I,gBAAiB,CAC1B,CACAwB,cAGQvK,KAAKyI,UAAU+B,cACfxK,KAAKyI,UAAU+B,YAAYxK,KAAKmK,eAChCnK,KAAKyK,yBAAyBC,UAElC1K,KAAKwI,eAAemC,kBAAkB3K,KAAKuI,YAAYqC,cAAe5K,KAAKoB,YAC/E,CAEAyJ,qBAEI,OAAO7K,KAAKgJ,sBAAsB8B,YAAY9K,KAAKuI,YAAYqC,cAAe,CAC1EG,kBAAkB,GAE1B,CAEAT,sBACI,MAAMU,EAAehL,KAAKyI,UAAUwC,cAAc,QAC5CC,EAAc,mBACpBF,SAAaG,aAAa,KAAM,qBAAqBnL,KAAK8I,OAG1DkC,EAAaG,aAAa,cAAe,QACzCH,EAAaI,UAAU7B,IAAIrC,GACC,mBAAxBlH,KAAK0I,gBACLsC,EAAaI,UAAU7B,IAAI,2BAE/BvJ,KAAKuI,YAAYqC,cAAcS,YAAYL,GAEN,mBAA1BM,uBAAgE,mBAAxBtL,KAAK0I,eACpD1I,KAAKsI,QAAQiD,kBAAkB,KAC3BD,sBAAsB,KAClBN,EAAaI,UAAU7B,IAAI2B,EAAW,EACzC,GAILF,EAAaI,UAAU7B,IAAI2B,GAExBF,CACX,CAEA9C,uBAAuBD,GACnB,MAAMuD,EAAuB,GAAGvD,GAAc,KAAKwD,OAI/CzL,KAAK+I,gBAAkByC,IAAyBxL,KAAKmK,gBACrDnK,KAAKmK,cAAgBnK,KAAKsK,uBAE1BtK,KAAKmK,gBACLnK,KAAKmK,cAAcuB,YAAcF,GAErCxL,KAAKgI,SAAWwD,CACpB,CAEAnD,mBAAmBD,GAEfpI,KAAKwI,eAAemC,kBAAkB3K,KAAKuI,YAAYqC,cAAe5K,KAAKoB,eAOtEgH,GAAkBpI,KAAK6K,uBACxB7K,KAAK2L,2BAET3L,KAAKmI,aAAeC,EAGhBpI,KAAK6K,qBACL7K,KAAKwI,eAAeoD,SAAS5L,KAAKuI,YAAYqC,cAAexC,GAG7DpI,KAAK6L,0BAEb,CACAA,2BAES7L,KAAKyK,0BACNzK,KAAKyK,wBAA0BzK,KAAKkJ,UAAU+B,cAAc,QAC5DjL,KAAKyK,wBAAwBW,UAAU7B,IAAI,wBAE/CvJ,KAAKyK,wBAAwBiB,YAAc1L,KAAKoB,YAChDpB,KAAKmK,eAAekB,YAAYrL,KAAKyK,wBACzC,CACAkB,2BACI3L,KAAKyK,yBAAyBC,SAC9B1K,KAAKyK,6BAA0BqB,CACnC,CAEAhE,UAAUiE,GACN,MAAMX,EAAYpL,KAAKuI,YAAYqC,cAAcQ,UACjDA,EAAUV,OAAO,aAAa1K,KAAK4H,UAC/BmE,GACAX,EAAU7B,IAAI,aAAawC,IAEnC,CAEA1B,uBAGI,MAAM2B,EAAShM,KAAKuI,YAAYqC,cAAcqB,iBAAiB,aAAa/E,KAC5E,UAAW8D,KAAgBkB,MAAMC,KAAKH,GAC9BhB,IAAiBhL,KAAKmK,eACtBa,EAAaN,QAGzB,QACS1K,KAAKO,UAAI,SAAAF,GAAA,WAAAA,GAA+FqH,GAjOVlH,MAiOoCA,OAjOpCA,MAiO0DA,OAjO1DA,MAiOoF6B,MAjOpF7B,MAiOiHA,OAjOjHA,MAiO0I4L,MAAqB,IAA8D,QAC3TpM,KAAKqM,UAlOyF7L,MAAE,CAAA+G,KAkOJG,EAAQnF,UAAA,qBAAA+J,UAAA,gBAAAC,SAAA,GAAAC,aAAA,SAAA1J,EAAAC,GAAA,EAAAD,GAlONtC,MAAE,oBAAAuC,EAAA4F,QAAFnI,CAkOM,kBAARuC,EAAAgH,UAlOEvJ,CAkOM,mBAAPuC,EAAAgH,UAlOCvJ,CAkOM,oBAAPuC,EAAAkH,UAlOCzJ,CAkOM,kBAARuC,EAAAkH,UAlOEzJ,CAkOM,kBAAC,UAADuC,EAAA8F,KAlONrI,CAkOM,mBAAC,WAADuC,EAAA8F,KAlONrI,CAkOM,kBAAC,UAADuC,EAAA8F,KAlONrI,CAkOM,mBAAAuC,EAAA0J,SAAA1J,EAAAgF,QAlONvH,CAkOM,qBAAAuC,EAAA2J,SAAA,EAAAxH,OAAA,CAAAyC,MAAA,4BAAAgB,QAAA,+BAAmIgE,OAAgBD,SAAA,iCAA8CC,OAAgB/D,SAAA,kCAAAb,QAAA,yBAAA3G,YAAA,wCAAAyH,KAAA,0BAAA4D,OAAA,6BAA2ME,QAAgBnK,YAAA,EAAAC,SAAA,CAlOlbjC,QAkOu6B,EACjhC,OA3NKkH,CAAQ,KA8QRkF,EAAc,MAApB,MAAMA,SACO5M,KAAKO,UAAI,SAAAF,GAAA,WAAAA,GAA+FuM,EAAc,CAAoD,QAC1K5M,KAAK6M,UAxRyFrM,KAAE,CAAA+G,KAwRSqF,GAAiI,QAC1O5M,KAAK8M,UAzRyFtM,MAAE,CAAAuM,QAAA,CAyRmCC,KAAYC,KAAiBA,OAAqB,EACjM,OAJKL,CAAc,wHCjSkB,MAAAM,EAAA,2BAAAC,EAAA,4BAAAC,EAAAtK,EAAAC,GAAA,EAAAD,GAgG8DtC,MAAE,EAExD,OAAA6M,EAAA,oEAAAC,EAAA,4DAAAC,EAAA,sBAAAC,EAAA,cA9F9C,SAASC,EAAeC,GACpB,OAAOA,EAAOnF,YAAYqC,aAC9B,CAAC,IACK+C,EAA+B,MAArC,MAAMA,EACFjM,YAAYkM,EAAUC,GAClB7N,KAAK6N,SAAWA,EAIhB7N,KAAK8N,gBAAiB,EAItB9N,KAAK+N,YAAc,KACnB/N,KAAKgO,QAAUJ,EAAS1N,IAAI+N,EAChC,CACAC,qBACIlO,KAAKmO,SAASC,QAAQnM,UAAU,KAC5BjC,KAAKqO,mBACLrO,KAAKgO,QAAQM,sBAAqB,GAEtCtO,KAAKqO,kBACT,CACAA,mBACIrO,KAAKmO,SAASI,QAAQ,CAACb,EAAQc,KAC3BxO,KAAK6N,SAASY,SAAShB,EAAeC,GAAS,uBAC/C1N,KAAK0O,mBAAmBjB,EAAeC,GAAS,UAAW,IA5BlD,GA4BuEc,GAAGG,WAAU,EAErG,CACA7J,OACI9E,KAAK4O,sBACL5O,KAAK8N,gBAAiB,EACtB9N,KAAK6O,qBAAuBC,WAAW,KACnC9O,KAAKmO,SAASI,QAAQ,CAACb,EAAQc,KAC3B,IACIO,EADAC,EAAkB,EAEa,UAA/BhP,KAAKgO,QAAQiB,eAEbD,EAAkB,EAAI,GAAKR,EAC3BO,EAAY,YAGZA,EAAY/O,KAAKkP,qBAAqB,KAE1C,MAAMC,EAAc1B,EAAeC,GACnC1N,KAAK0O,mBAAmBS,EAAa,mBAAoBH,EAAgBL,WAAa,MACtF3O,KAAK0O,mBAAmBS,EAAa,UAAW,KAChDnP,KAAK0O,mBAAmBS,EAAa,YAAaJ,EAAS,EAC9D,EACF,GACP,CACAH,sBACIQ,aAAapP,KAAK6O,sBACd7O,KAAK+N,cACL/N,KAAK+N,YAAYsB,cACjBrP,KAAK+N,YAAc,KAE3B,CACAuB,OACItP,KAAK4O,sBACL,MAAMW,EAAMvP,KAAKmO,SAASqB,IAAI,CAAC9B,EAAQc,KACnC,IAEIO,EAFAU,EAAU,IACVT,EAAkB,EAEa,UAA/BhP,KAAKgO,QAAQiB,eACbD,EAAkB,EAAI,GAAKR,EAC3BO,EAAY,WACZU,EAAU,KAGVV,EAAY/O,KAAKkP,sBAAsB,IAAMV,EAAI,GAAS,EAAJA,GAAOG,WAAa,MAE9E,MAAMQ,EAAc1B,EAAeC,GACnC,OAAA1N,KAAK0O,mBAAmBS,EAAa,mBAAoBH,EAAgBL,WAAa,MACtF3O,KAAK0O,mBAAmBS,EAAa,UAAWM,GAChDzP,KAAK0O,mBAAmBS,EAAa,YAAaJ,IAAS,EACpDW,KAAUP,EAAa,iBAAiB7I,QAAKqJ,KAAK,GAAE,GAG/D3P,KAAK+N,eAAc6B,KAASL,GAAKtN,UAAU,IAAOjC,KAAK8N,gBAAiB,EAC5E,CACAoB,qBAAqBrH,GACjB,MAAMgI,EAAM7P,KAAKgO,QAAQ8B,UAGzB,OAF4B,OAARD,GAAwB,SAARA,EAAiB,aAAe,cAE/C,KADA,SAARA,GAA0B,UAARA,EAAkB,IAAM,IACrBhI,EAAQ,GAC9C,CAEA6G,mBAAmBqB,EAAMC,EAAOnI,GAE5B7H,KAAK6N,SAASoC,SAASF,EAAMC,EAAOnI,EACxC,QACS7H,KAAKO,UAAI,SAAAF,GAAA,WAAAA,GAAwFsN,GAAVnN,MAA2DA,OAA3DA,MAAmFA,OAAY,CAA8C,QACpOR,KAAKsH,UADkF9G,MAAE,CAAA+G,KACJoG,EAA+BpL,UAAA,iCAAA2N,eAAA,SAAApN,EAAAC,EAAAoN,GAA+H,GAA/H,EAAArN,GAD7BtC,MAAE2P,EAC0IC,KAAgB,KAAAtN,EAAA,KAAAuN,EAD5J7P,MAAE6P,EAAF7P,WAAEuC,EAAAoL,SAAAkC,EAAA,GAAA7N,YAAA,EAAAC,SAAA,CAAFjC,OAAE8P,mBAAAnD,EAAAzK,MAAA,EAAAC,KAAA,EAAAE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAAFtC,MAAE0M,GAAF1M,MAAE,EAAA4M,EAAA,MAC8M,EAAAtK,GADhNtC,MAAEuC,EAAA+K,eAAA,KAGjG,EAAAlK,cAAA,GAAsB,EAC1B,OA7FK+J,CAA+B,KA4G/BM,EAAwB,MAA9B,MAAMA,EAIF,SAAIsC,GACA,OAAOvQ,KAAKwQ,MAChB,CACA,SAAID,CAAMA,GACNvQ,KAAKwQ,OAASD,EACdvQ,KAAKyQ,2BACT,CAIA,QAAInL,GACA,OAAOtF,KAAK0Q,KAChB,CACA,QAAIpL,CAAKA,GACL,MAAMqL,EAAe3Q,KAAK0Q,MAC1B1Q,KAAK0Q,MAAQpL,EACTqL,IAAiB3Q,KAAK0Q,QACtB1Q,KAAK4Q,WAAWC,KAAK7Q,KAAK0Q,OACtB1Q,KAAK8Q,eACL9Q,KAAKsO,uBAGjB,CAIA,aAAIwB,GACA,OAAO9P,KAAK+Q,UAChB,CACA,aAAIjB,CAAUA,GACV,MAAMkB,EAAoBhR,KAAK+Q,WAC/B/Q,KAAK+Q,WAAajB,EACdkB,IAAsBhR,KAAK8P,YAC3B9P,KAAKiR,iBAAiBD,GAAmB,GACzChR,KAAKiR,iBAAiBjR,KAAK8P,WAAW,GAClC9P,KAAK8Q,eACL9Q,KAAKsO,uBAGjB,CAIA,iBAAIW,GACA,OAAOjP,KAAK0I,cAChB,CACA,iBAAIuG,CAAcA,GACd,MAAMiC,EAAwBlR,KAAK0I,eACnC1I,KAAK0I,eAAiBuG,EAClBiC,IAA0BlR,KAAK0I,iBAC/B1I,KAAKiR,iBAAiBC,GAAuB,GAC7ClR,KAAKiR,iBAAiBjR,KAAKiP,eAAe,GACtCjP,KAAK8Q,eAELK,QAAQC,QAAQ,MAAMC,KAAK,IAAOrR,KAAKsF,MAAO,GAG1D,CACA5D,YAAY4P,EAAYzD,EAAU0D,GAC9BvR,KAAKsR,WAAaA,EAClBtR,KAAK6N,SAAWA,EAChB7N,KAAKuR,SAAWA,EAChBvR,KAAK8Q,eAAgB,EACrB9Q,KAAK+Q,WAAa,KAClB/Q,KAAK0Q,OAAQ,EACb1Q,KAAK0I,eAAiB,QACtB1I,KAAKwQ,QAAS,EACdxQ,KAAKwR,yBAA2B,KAChCxR,KAAK4Q,WAAa,IAAIa,KAC1B,CACAvD,qBACIlO,KAAK8Q,eAAgB,EACrB9Q,KAAKsO,uBACLtO,KAAKiR,iBAAiBjR,KAAK8P,WAAW,GACtC9P,KAAKiR,iBAAiBjR,KAAKiP,eAAe,EAC9C,CACA1E,cACIvK,KAAK0R,6BACT,CAIAC,SACI3R,KAAKsF,MAAQtF,KAAKsF,IACtB,CACAsM,YACS5R,KAAKuQ,OAASvQ,KAAKsF,OACpBtF,KAAKsF,MAAO,EAEpB,CACAgJ,uBACQtO,KAAKsF,KACLtF,KAAK6R,cAAc/M,OAGnB9E,KAAK6R,cAAcvC,OAEvBtP,KAAKyQ,2BACT,CACAQ,iBAAiBa,EAAWC,GACxB,MAAMC,EAAa,OAAOF,IACtBC,EACA/R,KAAK6N,SAASY,SAASzO,KAAKsR,WAAW1G,cAAeoH,GAGtDhS,KAAK6N,SAASoE,YAAYjS,KAAKsR,WAAW1G,cAAeoH,EAEjE,CACAvB,6BACSzQ,KAAKuQ,OAASvQ,KAAKsF,KACpBtF,KAAKkS,4BAGLlS,KAAK0R,6BAEb,CACAQ,4BACSlS,KAAKwR,2BACNxR,KAAKwR,yBAA2BxR,KAAK6N,SAASsE,OAAOnS,KAAKuR,SAAU,QAAS,KACzEvR,KAAKsF,MAAO,IAGxB,CACAoM,8BACQ1R,KAAKwR,2BACLxR,KAAKwR,2BACLxR,KAAKwR,yBAA2B,KAExC,QACSxR,KAAKO,UAAI,SAAAF,GAAA,WAAAA,GAAwF4N,GAxJVzN,MAwJoDA,OAxJpDA,MAwJ8EA,OAxJ9EA,MAwJuG2I,MAAQ,CAA8C,QACpPnJ,KAAKsH,UAzJkF9G,MAAE,CAAA+G,KAyJJ0G,EAAwB1L,UAAA,yBAAA2N,eAAA,SAAApN,EAAAC,EAAAoN,GAAkY,GAAlY,EAAArN,GAzJtBtC,MAAE2P,EAyJuXxC,EAA+B,KAAA7K,EAAA,KAAAuN,EAzJxZ7P,MAAE6P,EAAF7P,WAAEuC,EAAA8O,cAAAxB,EAAA+B,MAAA,GAAA7F,SAAA,EAAAC,aAAA,SAAA1J,EAAAC,GAAA,EAAAD,GAAFtC,MAAE,0BAyJJuC,EAAA6O,UAAU,GAAc,EAAA9O,GAzJtBtC,MAAE,aAAAuC,EAAAuC,KAyJoB,EAAAJ,OAAA,CAAAqL,MAAA,QAAAjL,KAAA,OAAAwK,UAAA,YAAAb,cAAA,iBAAAoD,QAAA,CAAAzB,WAAA,cAAApO,YAAA,EAAAC,SAAA,CAzJtBjC,OAAE8P,mBAAAhD,EAAA5K,MAAA,EAAAC,KAAA,EAAAC,OAAA,qCAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAAFtC,MAAE6M,GAAF7M,MAAE,WAAFA,MAAE,GAAFA,MAAE,KAAFA,QA6JtF,EAAAgH,OAAA,okJAAA5D,cAAA,GACmoJ,EAChpJ,OA5IKqK,CAAwB,KA4KxBqE,EAA+B,MAArC,MAAMA,EAIF,MAAIC,GACA,OAAOvS,KAAKwS,IAChB,CACA9Q,YAAYkM,GACR5N,KAAKwS,MAAO,EACZxS,KAAKgO,QAAUJ,EAAS1N,IAAI+N,EAChC,CACA2D,SAASa,GACAzS,KAAKgO,QAAQuC,QACdvQ,KAAKgO,QAAQ2D,SACbc,EAAMC,kBAEd,QACS1S,KAAKO,UAAI,SAAAF,GAAA,WAAAA,GAAwFiS,GAhNV9R,MAgN2DA,OAAW,CAA8C,QAC3MR,KAAKsH,UAjNkF9G,MAAE,CAAA+G,KAiNJ+K,EAA+B/P,UAAA,iCAAAgK,SAAA,EAAAC,aAAA,SAAA1J,EAAAC,GAAA,EAAAD,GAjN7BtC,MAAE,iBAAAmS,GAAA,OAiNJ5P,EAAA6O,SAAAe,EAAgB,GAAe,EAAA7P,GAjN7BtC,MAAE,WAAAuC,EAAAwP,GAiN2B,EAAArN,OAAA,CAAAsN,KAAA,QAAAhQ,YAAA,EAAAC,SAAA,CAjN7BjC,OAAE8P,mBAAA9C,EAAA9K,MAAA,EAAAC,KAAA,EAAAE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAAFtC,MAAE+M,GAAF/M,MAAE,GAiNiR,EAAAoD,cAAA,GAAsB,EAC5Y,OAnBK0O,CAA+B","names":["FeatureDetailService","HttpServiceBase","getFeatureDetails","nameId","this","http","get","apiUrl","params","__ngFactoryType__","factory","ɵfac","i0","id_r3","_r2","ctx_r3","clipboard","copyToClipboard","FeatureInfoDialogComponent_Conditional_0_Conditional_15_Template","_r1","dialog","close","feat_r5","name","description","isEnabled","tmp_6_0","link","FeatureInfoDialogComponent","#featureDetailSvc","constructor","dialogData","snackBar","transient","featureDetails","signalObj","ClipboardService","subscribe","f","set","MAT_DIALOG_DATA","i1","i2","selectors","standalone","features","decls","vars","consts","template","rf","ctx","FeatureInfoDialogComponent_Conditional_0_Template","tmp_0_0","MatCardModule","i3","MatButtonModule","i4","MatIconModule","i5","TranslateModule","i6","TippyDirective","SafeHtmlPipe","encapsulation","FeatureComponentBase","#matDialog","#viewContainerRef","#changeDetectorRef","#featuresService","featureNameId","input","required","showIf","inject","MatDialog","ViewContainerRef","ChangeDetectorRef","FeaturesScopedService","feature","computedObj","getCurrent","show","feat","openDialog","openFeatureDialog","inputs","featureId","viewContainerRef","changeDetectorRef","open","autoFocus","data","width","markForCheck","webApiAppRoot","ImportAppService","importApp","file","changedName","retryOnDuplicate","formData","FormData","append","post","zoneId","pipe","switchMap","result","Messages","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","of","nextId","BADGE_CONTENT_CLASS","badgeApps","Set","_MatBadgeStyleLoader","ɵcmp","type","styles","changeDetection","MatBadge","color","_color","value","_setColor","content","_content","newContent","_updateRenderedContent","_description","newDescription","_updateDescription","_ngZone","_elementRef","_ariaDescriber","_renderer","_animationMode","overlap","position","size","_id","_isInitialized","_interactivityChecker","InteractivityChecker","_document","DOCUMENT","appRef","ApplicationRef","has","add","componentRef","createComponent","environmentInjector","EnvironmentInjector","onDestroy","delete","destroy","isAbove","indexOf","isAfter","getBadgeElement","_badgeElement","ngOnInit","_clearExistingBadges","_createBadgeElement","ngOnDestroy","destroyNode","_inlineBadgeDescription","remove","removeDescription","nativeElement","_isHostInteractive","isFocusable","ignoreVisibility","badgeElement","createElement","activeClass","setAttribute","classList","appendChild","requestAnimationFrame","runOutsideAngular","newContentNormalized","trim","textContent","_removeInlineDescription","describe","_updateInlineDescription","undefined","colorPalette","badges","querySelectorAll","Array","from","ANIMATION_MODULE_TYPE","ɵdir","hostAttrs","hostVars","hostBindings","hidden","disabled","booleanAttribute","MatBadgeModule","ɵmod","ɵinj","imports","A11yModule","MatCommonModule","_c0","_c1","EcoFabSpeedDialActionsComponent_Conditional_0_Template","_c2","_c3","_c4","_c5","getHostElement","button","EcoFabSpeedDialActionsComponent","injector","renderer","miniFabVisible","hideMiniFab","_parent","EcoFabSpeedDialComponent","ngAfterContentInit","_buttons","changes","initButtonStates","setActionsVisibility","forEach","i","addClass","changeElementStyle","toString","resetAnimationState","showMiniFabAnimation","setTimeout","transform","transitionDelay","animationMode","getTranslateFunction","hostElement","clearTimeout","unsubscribe","hide","obs","map","opacity","fromEvent","take","forkJoin","dir","direction","elem","style","setStyle","contentQueries","dirIndex","MatMiniFabButton","_t","ngContentSelectors","fixed","_fixed","_processOutsideClickState","_open","previousOpen","openChange","emit","isInitialized","_direction","previousDirection","_setElementClass","previousAnimationMode","Promise","resolve","then","elementRef","document","_documentClickUnlistener","EventEmitter","_unsetDocumentClickListener","toggle","_onClick","_childActions","elemClass","isAdd","finalClass","removeClass","_setDocumentClickListener","listen","first","outputs","EcoFabSpeedDialTriggerComponent","sp","spin","event","stopPropagation","$event"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./node_modules/@angular/material/fesm2022/badge.mjs","./node_modules/@ecodev/fab-speed-dial/fesm2022/ecodev-fab-speed-dial.mjs"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Feature } from '../models';\r\n\r\nconst webApiFeatureDetails = \"admin/feature/details\";\r\n\r\n@Injectable()\r\nexport class FeatureDetailService extends HttpServiceBase {\r\n\r\n  getFeatureDetails(nameId: string): Observable<Feature> {\r\n    return this.http.get<Feature>(this.apiUrl(webApiFeatureDetails), {\r\n      params: { nameId }\r\n    });\r\n  }\r\n}\r\n","@if (featureDetails(); as feat) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ feat.name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"feat.description | safeHtml\"></p>\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ \"Features.Status\" | translate }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ (feat.isEnabled ? \"Features.Active\" : \"Features.NotActive\") | translate }}</span>\r\n        </div>\r\n      </div>\r\n      @if (feat.nameId; as id) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">ID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span [tippy]=\"id\" (click)=\"clipboard.copyToClipboard(id)\">{{ id }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      <a [href]=\"feat.link\" target=\"_blank\" mat-raised-button color=\"accent\" class=\"eav-card-action-button\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        {{ \"Features.FindOutMore\" | translate }}\r\n      </a>\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"dialog.close()\">\r\n        {{ \"Features.Close\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}","import { Component, Inject } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { transient } from '../../../../../core';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\nimport { ClipboardService } from '../../shared/services/clipboard.service';\r\nimport { signalObj } from '../../shared/signals/signal.utilities';\r\nimport { Feature } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\n\r\n@Component({\r\n  selector: 'app-feature-info-dialog',\r\n  templateUrl: './feature-info-dialog.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    TranslateModule,\r\n    TippyDirective,\r\n    SafeHtmlPipe,\r\n  ]\r\n})\r\nexport class FeatureInfoDialogComponent {\r\n\r\n  // TODO: THIS component shows the same details as the FeatureDetailsDialogComponent\r\n  // TODO: @2pp pls change to just load the feature, then include the <app-feature-details-dialog [specs]=\"{ feature: ..., showStatus: true, showGuid: false, ...\">\r\n  // So the end result is a simple @if (...) <app-feature-details-dialog [specs]=\"{ feature: ... }>\r\n  // for an example of the tag how it's used, check out FeaturesUsedButUnlicensedComponent\r\n  // but this file will basically just have 3 lines of html\r\n\r\n  #featureDetailSvc = transient(FeatureDetailService);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    protected dialog: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    this.#featureDetailSvc.getFeatureDetails(this.dialogData).subscribe(f => this.featureDetails.set(f));\r\n  }\r\n\r\n  protected featureDetails = signalObj<Feature>('feature', null);\r\n\r\n  protected clipboard = transient(ClipboardService);\r\n}\r\n","import { ChangeDetectorRef, Directive, ViewContainerRef, inject, input } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { computedObj } from '../../shared/signals/signal.utilities';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { FeaturesScopedService } from '../features-scoped.service';\r\n\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n\r\n  /** Feature NameId to check */\r\n  featureNameId = input.required<string>();\r\n\r\n  /** When to show it - typically when it is _not_ enabled (default) */\r\n  showIf = input<boolean>(false);\r\n\r\n  #matDialog = inject(MatDialog);\r\n  #viewContainerRef = inject(ViewContainerRef);\r\n  #changeDetectorRef = inject(ChangeDetectorRef);\r\n  #featuresService = inject(FeaturesScopedService);\r\n\r\n  constructor() { }\r\n\r\n  feature = computedObj('feature', () => this.#featuresService.getCurrent(this.featureNameId()));\r\n\r\n  show = computedObj('show', () => {\r\n    const feat = this.feature();\r\n    if (feat == null) return false;\r\n    return this.showIf() == (feat?.isEnabled ?? false);\r\n  })\r\n\r\n  openDialog() {\r\n    openFeatureDialog(this.#matDialog, this.featureNameId(), this.#viewContainerRef, this.#changeDetectorRef);\r\n  }\r\n}\r\n\r\n\r\nexport function openFeatureDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n  dialog.open(FeatureInfoDialogComponent, {\r\n    autoFocus: false,\r\n    data: featureId,\r\n    viewContainerRef: viewContainerRef,\r\n    width: '400px',\r\n  });\r\n\r\n  changeDetectorRef?.markForCheck();\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService extends HttpServiceBase {\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.zoneId }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, inject, ApplicationRef, createComponent, EnvironmentInjector, ANIMATION_MODULE_TYPE, booleanAttribute, Directive, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { InteractivityChecker, A11yModule } from '@angular/cdk/a11y';\nimport { DOCUMENT } from '@angular/common';\n\nlet nextId = 0;\nconst BADGE_CONTENT_CLASS = 'mat-badge-content';\n/** Keeps track of the apps currently containing badges. */\nconst badgeApps = new Set();\n/**\n * Component used to load the structural styles of the badge.\n * @docs-private\n */\nclass _MatBadgeStyleLoader {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: _MatBadgeStyleLoader, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: _MatBadgeStyleLoader, isStandalone: true, selector: \"ng-component\", ngImport: i0, template: '', isInline: true, styles: [\".mat-badge{position:relative}.mat-badge.mat-badge{overflow:visible}.mat-badge-content{position:absolute;text-align:center;display:inline-block;transition:transform 200ms ease-in-out;transform:scale(0.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;box-sizing:border-box;pointer-events:none;background-color:var(--mat-badge-background-color, var(--mat-app-error));color:var(--mat-badge-text-color, var(--mat-app-on-error));font-family:var(--mat-badge-text-font, var(--mat-app-label-small-font));font-weight:var(--mat-badge-text-weight, var(--mat-app-label-small-weight));border-radius:var(--mat-badge-container-shape, var(--mat-app-corner-full))}.cdk-high-contrast-active .mat-badge-content{outline:solid 1px;border-radius:0}.mat-badge-above .mat-badge-content{bottom:100%}.mat-badge-below .mat-badge-content{top:100%}.mat-badge-before .mat-badge-content{right:100%}[dir=rtl] .mat-badge-before .mat-badge-content{right:auto;left:100%}.mat-badge-after .mat-badge-content{left:100%}[dir=rtl] .mat-badge-after .mat-badge-content{left:auto;right:100%}.mat-badge-disabled .mat-badge-content{background-color:var(--mat-badge-disabled-state-background-color);color:var(--mat-badge-disabled-state-text-color, var(--mat-app-on-error))}.mat-badge-hidden .mat-badge-content{display:none}.ng-animate-disabled .mat-badge-content,.mat-badge-content._mat-animation-noopable{transition:none}.mat-badge-content.mat-badge-active{transform:none}.mat-badge-small .mat-badge-content{width:var(--mat-badge-legacy-small-size-container-size, unset);height:var(--mat-badge-legacy-small-size-container-size, unset);min-width:var(--mat-badge-small-size-container-size, unset);min-height:var(--mat-badge-small-size-container-size, unset);line-height:var(--mat-badge-legacy-small-size-container-size);padding:var(--mat-badge-small-size-container-padding);font-size:var(--mat-badge-small-size-text-size);margin:var(--mat-badge-small-size-container-offset)}.mat-badge-small.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-small-size-container-overlap-offset)}.mat-badge-medium .mat-badge-content{width:var(--mat-badge-legacy-container-size, unset);height:var(--mat-badge-legacy-container-size, unset);min-width:var(--mat-badge-container-size, unset);min-height:var(--mat-badge-container-size, unset);line-height:var(--mat-badge-legacy-container-size);padding:var(--mat-badge-container-padding);font-size:var(--mat-badge-text-size, var(--mat-app-label-small-size));margin:var(--mat-badge-container-offset)}.mat-badge-medium.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-container-overlap-offset)}.mat-badge-large .mat-badge-content{width:var(--mat-badge-legacy-large-size-container-size, unset);height:var(--mat-badge-legacy-large-size-container-size, unset);min-width:var(--mat-badge-large-size-container-size, unset);min-height:var(--mat-badge-large-size-container-size, unset);line-height:var(--mat-badge-legacy-large-size-container-size);padding:var(--mat-badge-large-size-container-padding);font-size:var(--mat-badge-large-size-text-size, var(--mat-app-label-small-size));margin:var(--mat-badge-large-size-container-offset)}.mat-badge-large.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-large-size-container-overlap-offset)}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: _MatBadgeStyleLoader, decorators: [{\n            type: Component,\n            args: [{ standalone: true, encapsulation: ViewEncapsulation.None, template: '', changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-badge{position:relative}.mat-badge.mat-badge{overflow:visible}.mat-badge-content{position:absolute;text-align:center;display:inline-block;transition:transform 200ms ease-in-out;transform:scale(0.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;box-sizing:border-box;pointer-events:none;background-color:var(--mat-badge-background-color, var(--mat-app-error));color:var(--mat-badge-text-color, var(--mat-app-on-error));font-family:var(--mat-badge-text-font, var(--mat-app-label-small-font));font-weight:var(--mat-badge-text-weight, var(--mat-app-label-small-weight));border-radius:var(--mat-badge-container-shape, var(--mat-app-corner-full))}.cdk-high-contrast-active .mat-badge-content{outline:solid 1px;border-radius:0}.mat-badge-above .mat-badge-content{bottom:100%}.mat-badge-below .mat-badge-content{top:100%}.mat-badge-before .mat-badge-content{right:100%}[dir=rtl] .mat-badge-before .mat-badge-content{right:auto;left:100%}.mat-badge-after .mat-badge-content{left:100%}[dir=rtl] .mat-badge-after .mat-badge-content{left:auto;right:100%}.mat-badge-disabled .mat-badge-content{background-color:var(--mat-badge-disabled-state-background-color);color:var(--mat-badge-disabled-state-text-color, var(--mat-app-on-error))}.mat-badge-hidden .mat-badge-content{display:none}.ng-animate-disabled .mat-badge-content,.mat-badge-content._mat-animation-noopable{transition:none}.mat-badge-content.mat-badge-active{transform:none}.mat-badge-small .mat-badge-content{width:var(--mat-badge-legacy-small-size-container-size, unset);height:var(--mat-badge-legacy-small-size-container-size, unset);min-width:var(--mat-badge-small-size-container-size, unset);min-height:var(--mat-badge-small-size-container-size, unset);line-height:var(--mat-badge-legacy-small-size-container-size);padding:var(--mat-badge-small-size-container-padding);font-size:var(--mat-badge-small-size-text-size);margin:var(--mat-badge-small-size-container-offset)}.mat-badge-small.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-small-size-container-overlap-offset)}.mat-badge-medium .mat-badge-content{width:var(--mat-badge-legacy-container-size, unset);height:var(--mat-badge-legacy-container-size, unset);min-width:var(--mat-badge-container-size, unset);min-height:var(--mat-badge-container-size, unset);line-height:var(--mat-badge-legacy-container-size);padding:var(--mat-badge-container-padding);font-size:var(--mat-badge-text-size, var(--mat-app-label-small-size));margin:var(--mat-badge-container-offset)}.mat-badge-medium.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-container-overlap-offset)}.mat-badge-large .mat-badge-content{width:var(--mat-badge-legacy-large-size-container-size, unset);height:var(--mat-badge-legacy-large-size-container-size, unset);min-width:var(--mat-badge-large-size-container-size, unset);min-height:var(--mat-badge-large-size-container-size, unset);line-height:var(--mat-badge-legacy-large-size-container-size);padding:var(--mat-badge-large-size-container-padding);font-size:var(--mat-badge-large-size-text-size, var(--mat-app-label-small-size));margin:var(--mat-badge-large-size-container-offset)}.mat-badge-large.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-large-size-container-overlap-offset)}\"] }]\n        }] });\n/** Directive to display a text badge. */\nclass MatBadge {\n    /**\n     * Theme color of the badge. This API is supported in M2 themes only, it\n     * has no effect in M3 themes.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/theming#using-component-color-variants.\n     */\n    get color() {\n        return this._color;\n    }\n    set color(value) {\n        this._setColor(value);\n        this._color = value;\n    }\n    /** The content for the badge */\n    get content() {\n        return this._content;\n    }\n    set content(newContent) {\n        this._updateRenderedContent(newContent);\n    }\n    /** Message used to describe the decorated element via aria-describedby */\n    get description() {\n        return this._description;\n    }\n    set description(newDescription) {\n        this._updateDescription(newDescription);\n    }\n    constructor(_ngZone, _elementRef, _ariaDescriber, _renderer, _animationMode) {\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        this._renderer = _renderer;\n        this._animationMode = _animationMode;\n        this._color = 'primary';\n        /** Whether the badge should overlap its contents or not */\n        this.overlap = true;\n        /**\n         * Position the badge should reside.\n         * Accepts any combination of 'above'|'below' and 'before'|'after'\n         */\n        this.position = 'above after';\n        /** Size of the badge. Can be 'small', 'medium', or 'large'. */\n        this.size = 'medium';\n        /** Unique id for the badge */\n        this._id = nextId++;\n        /** Whether the OnInit lifecycle hook has run yet */\n        this._isInitialized = false;\n        /** InteractivityChecker to determine if the badge host is focusable. */\n        this._interactivityChecker = inject(InteractivityChecker);\n        this._document = inject(DOCUMENT);\n        const appRef = inject(ApplicationRef);\n        if (!badgeApps.has(appRef)) {\n            badgeApps.add(appRef);\n            const componentRef = createComponent(_MatBadgeStyleLoader, {\n                environmentInjector: inject(EnvironmentInjector),\n            });\n            appRef.onDestroy(() => {\n                badgeApps.delete(appRef);\n                componentRef.destroy();\n            });\n        }\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const nativeElement = _elementRef.nativeElement;\n            if (nativeElement.nodeType !== nativeElement.ELEMENT_NODE) {\n                throw Error('matBadge must be attached to an element node.');\n            }\n            const matIconTagName = 'mat-icon';\n            // Heads-up for developers to avoid putting matBadge on <mat-icon>\n            // as it is aria-hidden by default docs mention this at:\n            // https://material.angular.io/components/badge/overview#accessibility\n            if (nativeElement.tagName.toLowerCase() === matIconTagName &&\n                nativeElement.getAttribute('aria-hidden') === 'true') {\n                console.warn(`Detected a matBadge on an \"aria-hidden\" \"<mat-icon>\". ` +\n                    `Consider setting aria-hidden=\"false\" in order to surface the information assistive technology.` +\n                    `\\n${nativeElement.outerHTML}`);\n            }\n        }\n    }\n    /** Whether the badge is above the host or not */\n    isAbove() {\n        return this.position.indexOf('below') === -1;\n    }\n    /** Whether the badge is after the host or not */\n    isAfter() {\n        return this.position.indexOf('before') === -1;\n    }\n    /**\n     * Gets the element into which the badge's content is being rendered. Undefined if the element\n     * hasn't been created (e.g. if the badge doesn't have content).\n     */\n    getBadgeElement() {\n        return this._badgeElement;\n    }\n    ngOnInit() {\n        // We may have server-side rendered badge that we need to clear.\n        // We need to do this in ngOnInit because the full content of the component\n        // on which the badge is attached won't necessarily be in the DOM until this point.\n        this._clearExistingBadges();\n        if (this.content && !this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n            this._updateRenderedContent(this.content);\n        }\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        // ViewEngine only: when creating a badge through the Renderer, Angular remembers its index.\n        // We have to destroy it ourselves, otherwise it'll be retained in memory.\n        if (this._renderer.destroyNode) {\n            this._renderer.destroyNode(this._badgeElement);\n            this._inlineBadgeDescription?.remove();\n        }\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.description);\n    }\n    /** Gets whether the badge's host element is interactive. */\n    _isHostInteractive() {\n        // Ignore visibility since it requires an expensive style caluclation.\n        return this._interactivityChecker.isFocusable(this._elementRef.nativeElement, {\n            ignoreVisibility: true,\n        });\n    }\n    /** Creates the badge element */\n    _createBadgeElement() {\n        const badgeElement = this._renderer.createElement('span');\n        const activeClass = 'mat-badge-active';\n        badgeElement.setAttribute('id', `mat-badge-content-${this._id}`);\n        // The badge is aria-hidden because we don't want it to appear in the page's navigation\n        // flow. Instead, we use the badge to describe the decorated element with aria-describedby.\n        badgeElement.setAttribute('aria-hidden', 'true');\n        badgeElement.classList.add(BADGE_CONTENT_CLASS);\n        if (this._animationMode === 'NoopAnimations') {\n            badgeElement.classList.add('_mat-animation-noopable');\n        }\n        this._elementRef.nativeElement.appendChild(badgeElement);\n        // animate in after insertion\n        if (typeof requestAnimationFrame === 'function' && this._animationMode !== 'NoopAnimations') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    badgeElement.classList.add(activeClass);\n                });\n            });\n        }\n        else {\n            badgeElement.classList.add(activeClass);\n        }\n        return badgeElement;\n    }\n    /** Update the text content of the badge element in the DOM, creating the element if necessary. */\n    _updateRenderedContent(newContent) {\n        const newContentNormalized = `${newContent ?? ''}`.trim();\n        // Don't create the badge element if the directive isn't initialized because we want to\n        // append the badge element to the *end* of the host element's content for backwards\n        // compatibility.\n        if (this._isInitialized && newContentNormalized && !this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n        }\n        if (this._badgeElement) {\n            this._badgeElement.textContent = newContentNormalized;\n        }\n        this._content = newContentNormalized;\n    }\n    /** Updates the host element's aria description via AriaDescriber. */\n    _updateDescription(newDescription) {\n        // Always start by removing the aria-describedby; we will add a new one if necessary.\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.description);\n        // NOTE: We only check whether the host is interactive here, which happens during\n        // when then badge content changes. It is possible that the host changes\n        // interactivity status separate from one of these. However, watching the interactivity\n        // status of the host would require a `MutationObserver`, which is likely more code + overhead\n        // than it's worth; from usages inside Google, we see that the vats majority of badges either\n        // never change interactivity, or also set `matBadgeHidden` based on the same condition.\n        if (!newDescription || this._isHostInteractive()) {\n            this._removeInlineDescription();\n        }\n        this._description = newDescription;\n        // We don't add `aria-describedby` for non-interactive hosts elements because we\n        // instead insert the description inline.\n        if (this._isHostInteractive()) {\n            this._ariaDescriber.describe(this._elementRef.nativeElement, newDescription);\n        }\n        else {\n            this._updateInlineDescription();\n        }\n    }\n    _updateInlineDescription() {\n        // Create the inline description element if it doesn't exist\n        if (!this._inlineBadgeDescription) {\n            this._inlineBadgeDescription = this._document.createElement('span');\n            this._inlineBadgeDescription.classList.add('cdk-visually-hidden');\n        }\n        this._inlineBadgeDescription.textContent = this.description;\n        this._badgeElement?.appendChild(this._inlineBadgeDescription);\n    }\n    _removeInlineDescription() {\n        this._inlineBadgeDescription?.remove();\n        this._inlineBadgeDescription = undefined;\n    }\n    /** Adds css theme class given the color to the component host */\n    _setColor(colorPalette) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-badge-${this._color}`);\n        if (colorPalette) {\n            classList.add(`mat-badge-${colorPalette}`);\n        }\n    }\n    /** Clears any existing badges that might be left over from server-side rendering. */\n    _clearExistingBadges() {\n        // Only check direct children of this host element in order to avoid deleting\n        // any badges that might exist in descendant elements.\n        const badges = this._elementRef.nativeElement.querySelectorAll(`:scope > .${BADGE_CONTENT_CLASS}`);\n        for (const badgeElement of Array.from(badges)) {\n            if (badgeElement !== this._badgeElement) {\n                badgeElement.remove();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatBadge, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i1.AriaDescriber }, { token: i0.Renderer2 }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatBadge, isStandalone: true, selector: \"[matBadge]\", inputs: { color: [\"matBadgeColor\", \"color\"], overlap: [\"matBadgeOverlap\", \"overlap\", booleanAttribute], disabled: [\"matBadgeDisabled\", \"disabled\", booleanAttribute], position: [\"matBadgePosition\", \"position\"], content: [\"matBadge\", \"content\"], description: [\"matBadgeDescription\", \"description\"], size: [\"matBadgeSize\", \"size\"], hidden: [\"matBadgeHidden\", \"hidden\", booleanAttribute] }, host: { properties: { \"class.mat-badge-overlap\": \"overlap\", \"class.mat-badge-above\": \"isAbove()\", \"class.mat-badge-below\": \"!isAbove()\", \"class.mat-badge-before\": \"!isAfter()\", \"class.mat-badge-after\": \"isAfter()\", \"class.mat-badge-small\": \"size === \\\"small\\\"\", \"class.mat-badge-medium\": \"size === \\\"medium\\\"\", \"class.mat-badge-large\": \"size === \\\"large\\\"\", \"class.mat-badge-hidden\": \"hidden || !content\", \"class.mat-badge-disabled\": \"disabled\" }, classAttribute: \"mat-badge\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatBadge, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matBadge]',\n                    host: {\n                        'class': 'mat-badge',\n                        '[class.mat-badge-overlap]': 'overlap',\n                        '[class.mat-badge-above]': 'isAbove()',\n                        '[class.mat-badge-below]': '!isAbove()',\n                        '[class.mat-badge-before]': '!isAfter()',\n                        '[class.mat-badge-after]': 'isAfter()',\n                        '[class.mat-badge-small]': 'size === \"small\"',\n                        '[class.mat-badge-medium]': 'size === \"medium\"',\n                        '[class.mat-badge-large]': 'size === \"large\"',\n                        '[class.mat-badge-hidden]': 'hidden || !content',\n                        '[class.mat-badge-disabled]': 'disabled',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i1.AriaDescriber }, { type: i0.Renderer2 }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { color: [{\n                type: Input,\n                args: ['matBadgeColor']\n            }], overlap: [{\n                type: Input,\n                args: [{ alias: 'matBadgeOverlap', transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'matBadgeDisabled', transform: booleanAttribute }]\n            }], position: [{\n                type: Input,\n                args: ['matBadgePosition']\n            }], content: [{\n                type: Input,\n                args: ['matBadge']\n            }], description: [{\n                type: Input,\n                args: ['matBadgeDescription']\n            }], size: [{\n                type: Input,\n                args: ['matBadgeSize']\n            }], hidden: [{\n                type: Input,\n                args: [{ alias: 'matBadgeHidden', transform: booleanAttribute }]\n            }] } });\n\nclass MatBadgeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatBadgeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatBadgeModule, imports: [A11yModule, MatCommonModule, MatBadge, _MatBadgeStyleLoader], exports: [MatBadge, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatBadgeModule, imports: [A11yModule, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatBadgeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    // Note: we _shouldn't_ have to import `_MatBadgeStyleLoader`,\n                    // but it seems to be necessary for tests.\n                    imports: [A11yModule, MatCommonModule, MatBadge, _MatBadgeStyleLoader],\n                    exports: [MatBadge, MatCommonModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatBadge, MatBadgeModule };\n","import * as i0 from '@angular/core';\nimport { Component, ContentChildren, EventEmitter, ViewEncapsulation, Inject, Input, HostBinding, Output, ContentChild, HostListener } from '@angular/core';\nimport { MatMiniFabButton } from '@angular/material/button';\nimport { DOCUMENT } from '@angular/common';\nimport { fromEvent, forkJoin } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nconst Z_INDEX_ITEM = 23;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getHostElement(button) {\n    return button._elementRef.nativeElement;\n}\nclass EcoFabSpeedDialActionsComponent {\n    constructor(injector, renderer) {\n        this.renderer = renderer;\n        /**\n         * Whether the min-fab button exist in DOM\n         */\n        this.miniFabVisible = false;\n        /**\n         * When we will remove mini-fab buttons from DOM, after the animation is complete\n         */\n        this.hideMiniFab = null;\n        this._parent = injector.get(EcoFabSpeedDialComponent);\n    }\n    ngAfterContentInit() {\n        this._buttons.changes.subscribe(() => {\n            this.initButtonStates();\n            this._parent.setActionsVisibility();\n        });\n        this.initButtonStates();\n    }\n    initButtonStates() {\n        this._buttons.forEach((button, i) => {\n            this.renderer.addClass(getHostElement(button), 'eco-fab-action-item');\n            this.changeElementStyle(getHostElement(button), 'z-index', '' + (Z_INDEX_ITEM - i).toString());\n        });\n    }\n    show() {\n        this.resetAnimationState();\n        this.miniFabVisible = true;\n        this.showMiniFabAnimation = setTimeout(() => {\n            this._buttons.forEach((button, i) => {\n                let transitionDelay = 0;\n                let transform;\n                if (this._parent.animationMode === 'scale') {\n                    // Incremental transition delay of 65ms for each action button\n                    transitionDelay = 3 + 65 * i;\n                    transform = 'scale(1)';\n                }\n                else {\n                    transform = this.getTranslateFunction('0');\n                }\n                const hostElement = getHostElement(button);\n                this.changeElementStyle(hostElement, 'transition-delay', transitionDelay.toString() + 'ms');\n                this.changeElementStyle(hostElement, 'opacity', '1');\n                this.changeElementStyle(hostElement, 'transform', transform);\n            });\n        }, 50); // Be sure that @if can show elements before trying to animate them\n    }\n    resetAnimationState() {\n        clearTimeout(this.showMiniFabAnimation);\n        if (this.hideMiniFab) {\n            this.hideMiniFab.unsubscribe();\n            this.hideMiniFab = null;\n        }\n    }\n    hide() {\n        this.resetAnimationState();\n        const obs = this._buttons.map((button, i) => {\n            let opacity = '1';\n            let transitionDelay = 0;\n            let transform;\n            if (this._parent.animationMode === 'scale') {\n                transitionDelay = 3 - 65 * i;\n                transform = 'scale(0)';\n                opacity = '0';\n            }\n            else {\n                transform = this.getTranslateFunction((55 * (i + 1) - i * 5).toString() + 'px');\n            }\n            const hostElement = getHostElement(button);\n            this.changeElementStyle(hostElement, 'transition-delay', transitionDelay.toString() + 'ms');\n            this.changeElementStyle(hostElement, 'opacity', opacity);\n            this.changeElementStyle(hostElement, 'transform', transform);\n            return fromEvent(hostElement, 'transitionend').pipe(take(1));\n        });\n        // Wait for all animation to finish, then destroy their elements\n        this.hideMiniFab = forkJoin(obs).subscribe(() => (this.miniFabVisible = false));\n    }\n    getTranslateFunction(value) {\n        const dir = this._parent.direction;\n        const translateFn = dir === 'up' || dir === 'down' ? 'translateY' : 'translateX';\n        const sign = dir === 'down' || dir === 'right' ? '-' : '';\n        return translateFn + '(' + sign + value + ')';\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    changeElementStyle(elem, style, value) {\n        // FIXME - Find a way to create a \"wrapper\" around the action button(s) provided by the user, so we don't change it's style tag\n        this.renderer.setStyle(elem, style, value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: EcoFabSpeedDialActionsComponent, deps: [{ token: i0.Injector }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.1.0\", type: EcoFabSpeedDialActionsComponent, isStandalone: true, selector: \"eco-fab-speed-dial-actions\", queries: [{ propertyName: \"_buttons\", predicate: MatMiniFabButton }], ngImport: i0, template: `@if (miniFabVisible) {\n        <ng-content select=\"[mat-mini-fab]\" />\n    }`, isInline: true }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: EcoFabSpeedDialActionsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'eco-fab-speed-dial-actions',\n                    template: `@if (miniFabVisible) {\n        <ng-content select=\"[mat-mini-fab]\" />\n    }`,\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.Injector }, { type: i0.Renderer2 }], propDecorators: { _buttons: [{\n                type: ContentChildren,\n                args: [MatMiniFabButton]\n            }] } });\n/** @dynamic @see https://github.com/angular/angular/issues/20351#issuecomment-344009887 */\nclass EcoFabSpeedDialComponent {\n    /**\n     * Whether this speed dial is fixed on screen (user cannot change it by clicking)\n     */\n    get fixed() {\n        return this._fixed;\n    }\n    set fixed(fixed) {\n        this._fixed = fixed;\n        this._processOutsideClickState();\n    }\n    /**\n     * Whether this speed dial is opened\n     */\n    get open() {\n        return this._open;\n    }\n    set open(open) {\n        const previousOpen = this._open;\n        this._open = open;\n        if (previousOpen !== this._open) {\n            this.openChange.emit(this._open);\n            if (this.isInitialized) {\n                this.setActionsVisibility();\n            }\n        }\n    }\n    /**\n     * The direction of the speed dial. Can be 'up', 'down', 'left' or 'right'\n     */\n    get direction() {\n        return this._direction;\n    }\n    set direction(direction) {\n        const previousDirection = this._direction;\n        this._direction = direction;\n        if (previousDirection !== this.direction) {\n            this._setElementClass(previousDirection, false);\n            this._setElementClass(this.direction, true);\n            if (this.isInitialized) {\n                this.setActionsVisibility();\n            }\n        }\n    }\n    /**\n     * The animation mode to open the speed dial. Can be 'fling' or 'scale'\n     */\n    get animationMode() {\n        return this._animationMode;\n    }\n    set animationMode(animationMode) {\n        const previousAnimationMode = this._animationMode;\n        this._animationMode = animationMode;\n        if (previousAnimationMode !== this._animationMode) {\n            this._setElementClass(previousAnimationMode, false);\n            this._setElementClass(this.animationMode, true);\n            if (this.isInitialized) {\n                // To start another detect lifecycle and force the \"close\" on the action buttons\n                Promise.resolve(null).then(() => (this.open = false));\n            }\n        }\n    }\n    constructor(elementRef, renderer, document) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.document = document;\n        this.isInitialized = false;\n        this._direction = 'up';\n        this._open = false;\n        this._animationMode = 'fling';\n        this._fixed = false;\n        this._documentClickUnlistener = null;\n        this.openChange = new EventEmitter();\n    }\n    ngAfterContentInit() {\n        this.isInitialized = true;\n        this.setActionsVisibility();\n        this._setElementClass(this.direction, true);\n        this._setElementClass(this.animationMode, true);\n    }\n    ngOnDestroy() {\n        this._unsetDocumentClickListener();\n    }\n    /**\n     * Toggle the open state of this speed dial\n     */\n    toggle() {\n        this.open = !this.open;\n    }\n    _onClick() {\n        if (!this.fixed && this.open) {\n            this.open = false;\n        }\n    }\n    setActionsVisibility() {\n        if (this.open) {\n            this._childActions.show();\n        }\n        else {\n            this._childActions.hide();\n        }\n        this._processOutsideClickState();\n    }\n    _setElementClass(elemClass, isAdd) {\n        const finalClass = `eco-${elemClass}`;\n        if (isAdd) {\n            this.renderer.addClass(this.elementRef.nativeElement, finalClass);\n        }\n        else {\n            this.renderer.removeClass(this.elementRef.nativeElement, finalClass);\n        }\n    }\n    _processOutsideClickState() {\n        if (!this.fixed && this.open) {\n            this._setDocumentClickListener();\n        }\n        else {\n            this._unsetDocumentClickListener();\n        }\n    }\n    _setDocumentClickListener() {\n        if (!this._documentClickUnlistener) {\n            this._documentClickUnlistener = this.renderer.listen(this.document, 'click', () => {\n                this.open = false;\n            });\n        }\n    }\n    _unsetDocumentClickListener() {\n        if (this._documentClickUnlistener) {\n            this._documentClickUnlistener();\n            this._documentClickUnlistener = null;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: EcoFabSpeedDialComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.1.0\", type: EcoFabSpeedDialComponent, isStandalone: true, selector: \"eco-fab-speed-dial\", inputs: { fixed: \"fixed\", open: \"open\", direction: \"direction\", animationMode: \"animationMode\" }, outputs: { openChange: \"openChange\" }, host: { listeners: { \"click\": \"_onClick()\" }, properties: { \"class.eco-opened\": \"this.open\" } }, queries: [{ propertyName: \"_childActions\", first: true, predicate: EcoFabSpeedDialActionsComponent, descendants: true }], ngImport: i0, template: `\n        <div class=\"eco-fab-speed-dial-container\">\n            <ng-content select=\"eco-fab-speed-dial-trigger\" />\n            <ng-content select=\"eco-fab-speed-dial-actions\" />\n        </div>\n    `, isInline: true, styles: [\"eco-fab-speed-dial{display:inline-block}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{-webkit-transform:rotate(360deg);transform:rotate(360deg)}eco-fab-speed-dial .eco-fab-speed-dial-container{position:relative;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-align:center;-webkit-align-items:center;align-items:center;z-index:20}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{pointer-events:auto;z-index:24}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180,eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{-webkit-transition:all .6s cubic-bezier(.4,0,.2,1);transition:all .6s cubic-bezier(.4,0,.2,1)}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-actions{display:-webkit-box;display:-webkit-flex;display:flex;position:absolute;height:0;width:0}eco-fab-speed-dial.eco-fling .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{display:block;opacity:1;-webkit-transition:all .3s cubic-bezier(.55,0,.55,.2);transition:all .3s cubic-bezier(.55,0,.55,.2)}eco-fab-speed-dial.eco-scale .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{-webkit-transform:scale(0);transform:scale(0);-webkit-transition:all .3s cubic-bezier(.55,0,.55,.2);transition:all .3s cubic-bezier(.55,0,.55,.2);-webkit-transition-duration:.14286s;transition-duration:.14286s}eco-fab-speed-dial.eco-down eco-fab-speed-dial-actions{bottom:2px;left:7px}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{-webkit-box-ordinal-group:2;-webkit-order:1;order:1}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column;-webkit-box-ordinal-group:3;-webkit-order:2;order:2}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-top:10px}eco-fab-speed-dial.eco-up eco-fab-speed-dial-actions{top:2px;left:7px}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{-webkit-box-ordinal-group:3;-webkit-order:2;order:2}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-webkit-flex-direction:column-reverse;flex-direction:column-reverse;-webkit-box-ordinal-group:2;-webkit-order:1;order:1}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-bottom:10px}eco-fab-speed-dial.eco-left eco-fab-speed-dial-actions{top:7px;left:2px}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;flex-direction:row}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{-webkit-box-ordinal-group:3;-webkit-order:2;order:2}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row-reverse;flex-direction:row-reverse;-webkit-box-ordinal-group:2;-webkit-order:1;order:1}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-right:10px}eco-fab-speed-dial.eco-right eco-fab-speed-dial-actions{top:7px;right:2px}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;flex-direction:row}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{-webkit-box-ordinal-group:2;-webkit-order:1;order:1}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;flex-direction:row;-webkit-box-ordinal-group:3;-webkit-order:2;order:2}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-left:10px}\\n\"], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: EcoFabSpeedDialComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'eco-fab-speed-dial', template: `\n        <div class=\"eco-fab-speed-dial-container\">\n            <ng-content select=\"eco-fab-speed-dial-trigger\" />\n            <ng-content select=\"eco-fab-speed-dial-actions\" />\n        </div>\n    `, encapsulation: ViewEncapsulation.None, standalone: true, styles: [\"eco-fab-speed-dial{display:inline-block}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{-webkit-transform:rotate(360deg);transform:rotate(360deg)}eco-fab-speed-dial .eco-fab-speed-dial-container{position:relative;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-align:center;-webkit-align-items:center;align-items:center;z-index:20}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{pointer-events:auto;z-index:24}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180,eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{-webkit-transition:all .6s cubic-bezier(.4,0,.2,1);transition:all .6s cubic-bezier(.4,0,.2,1)}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-actions{display:-webkit-box;display:-webkit-flex;display:flex;position:absolute;height:0;width:0}eco-fab-speed-dial.eco-fling .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{display:block;opacity:1;-webkit-transition:all .3s cubic-bezier(.55,0,.55,.2);transition:all .3s cubic-bezier(.55,0,.55,.2)}eco-fab-speed-dial.eco-scale .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{-webkit-transform:scale(0);transform:scale(0);-webkit-transition:all .3s cubic-bezier(.55,0,.55,.2);transition:all .3s cubic-bezier(.55,0,.55,.2);-webkit-transition-duration:.14286s;transition-duration:.14286s}eco-fab-speed-dial.eco-down eco-fab-speed-dial-actions{bottom:2px;left:7px}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{-webkit-box-ordinal-group:2;-webkit-order:1;order:1}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column;-webkit-box-ordinal-group:3;-webkit-order:2;order:2}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-top:10px}eco-fab-speed-dial.eco-up eco-fab-speed-dial-actions{top:2px;left:7px}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{-webkit-box-ordinal-group:3;-webkit-order:2;order:2}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-webkit-flex-direction:column-reverse;flex-direction:column-reverse;-webkit-box-ordinal-group:2;-webkit-order:1;order:1}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-bottom:10px}eco-fab-speed-dial.eco-left eco-fab-speed-dial-actions{top:7px;left:2px}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;flex-direction:row}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{-webkit-box-ordinal-group:3;-webkit-order:2;order:2}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row-reverse;flex-direction:row-reverse;-webkit-box-ordinal-group:2;-webkit-order:1;order:1}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-right:10px}eco-fab-speed-dial.eco-right eco-fab-speed-dial-actions{top:7px;right:2px}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;flex-direction:row}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{-webkit-box-ordinal-group:2;-webkit-order:1;order:1}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;flex-direction:row;-webkit-box-ordinal-group:3;-webkit-order:2;order:2}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-left:10px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }], propDecorators: { fixed: [{\n                type: Input\n            }], open: [{\n                type: HostBinding,\n                args: ['class.eco-opened']\n            }, {\n                type: Input\n            }], direction: [{\n                type: Input\n            }], animationMode: [{\n                type: Input\n            }], openChange: [{\n                type: Output\n            }], _childActions: [{\n                type: ContentChild,\n                args: [EcoFabSpeedDialActionsComponent]\n            }], _onClick: [{\n                type: HostListener,\n                args: ['click']\n            }] } });\nclass EcoFabSpeedDialTriggerComponent {\n    /**\n     * Whether this trigger should spin (360dg) while opening the speed dial\n     */\n    get sp() {\n        return this.spin;\n    }\n    constructor(injector) {\n        this.spin = false;\n        this._parent = injector.get(EcoFabSpeedDialComponent);\n    }\n    _onClick(event) {\n        if (!this._parent.fixed) {\n            this._parent.toggle();\n            event.stopPropagation();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: EcoFabSpeedDialTriggerComponent, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.1.0\", type: EcoFabSpeedDialTriggerComponent, isStandalone: true, selector: \"eco-fab-speed-dial-trigger\", inputs: { spin: \"spin\" }, host: { listeners: { \"click\": \"_onClick($event)\" }, properties: { \"class.eco-spin\": \"this.sp\" } }, ngImport: i0, template: ` <ng-content select=\"[mat-fab]\" />`, isInline: true }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: EcoFabSpeedDialTriggerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'eco-fab-speed-dial-trigger',\n                    template: ` <ng-content select=\"[mat-fab]\" />`,\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.Injector }], propDecorators: { sp: [{\n                type: HostBinding,\n                args: ['class.eco-spin']\n            }], spin: [{\n                type: Input\n            }], _onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\n\n/*\n * Public API Surface of fab-speed-dial\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent };\n"],"x_google_ignoreList":[5,6]}