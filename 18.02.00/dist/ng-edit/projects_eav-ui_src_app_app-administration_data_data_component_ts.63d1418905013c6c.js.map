{"version":3,"file":"projects_eav-ui_src_app_app-administration_data_data_component_ts.63d1418905013c6c.js","mappings":"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","names":["i0","_r1","ctx_r1","do","_r3","contentType","Metadata","length","_r4","Permissions","Count","_r5","EditInfo","DisableRename","DisableDelete","DataActionsComponent","agInit","params","this","data","enablePermissions","enablePermissionsGetter","guidRegex","test","StaticName","refresh","verb","selectors","standalone","features","decls","vars","consts","template","rf","ctx","DataActionsComponent_Conditional_1_Template","DataActionsComponent_Conditional_2_Template","DataActionsComponent_Conditional_3_Template","DataActionsComponent_Conditional_4_Template","DataActionsComponent_Conditional_5_Template","DataActionsComponent_Conditional_6_Template","DataActionsComponent_ng_template_12_Template","DisableEdit","Properties","DisableMetadata","menu_r6","MatRippleModule","i1","MatIconModule","i2","MatBadgeModule","i3","MatMenuModule","i4","encapsulation","DataFieldsComponent","value","tooltip","ReadOnly","ReadOnlyMessage","SharedDefId","icon","editFields","onEditFields","TippyDirective","DataItemsComponent","showItems","onShowItems","addItem","onAddItem","styles","scopeOption_r1","name","label","_r2","ctx_r2","createGhost","DataComponent","BaseComponent","#snackBar","#contentTypeSvc","#contentExportSvc","#dialogConfigSvc","#dialogRouter","constructor","super","isDebug","inject","GlobalConfigService","MatSnackBar","transient","ContentTypesService","ContentExportService","DialogConfigAppService","DialogRoutingService","contentTypes","signal","undefined","scope","scopeOptions","gridOptions","#buildGridOptions","dropdownInsertValue","ngOnInit","#fetchScopes","#refreshScopeOnRouteChange","doOnDialogClosed","#fetchContentTypes","getCurrent$","subscribe","Context","Enable","AppPermissions","filesDropped","files","importFile","substring","lastIndexOf","toLocaleLowerCase","from","toString","pipe","take","fileString","contentTypeName","split","find","ct","Name","#openDataImport","open","duration","importType","navParentFirstChild","state","#showContentItems","editContentType","retrieveContentTypes","_compareLabel","Label","replace","RegExp","set","eavConstants","scopes","default","getScopesV2","scopeList","manual","filter","sOld","sNew","withNiceLabel","map","s","countInfo","typesInherited","typesTotal","sourceName","window","prompt","_","changeScope","newScope","navRelative","subscriptions","add","router","events","event","NavigationEnd","getParam","startWith","mapUntilChanged","m","option","includes","newScopeOption","typesOfApp","defaultGridOptions","columnDefs","ColumnDefinitions","IdWithDefaultRenderer","cellRendererParams","idFieldParamsTooltipGetter","TextWidePrimary","headerName","field","sort","onCellClicked","comparator","valueA","valueB","nodeA","nodeB","isInverted","localeCompare","Items","cellRenderer","#addItem","Fields","#editFields","TextWideMin100","cellClass","p","valueGetter","TextWideFlex3","Description","ActionsPinnedRight4","#createOrEditMetadata","#openPermissions","#openMetadata","#openRestApi","#exportType","#openDataExport","#deleteContentType","form","items","EditPrep","newFromType","formUrl","convertFormToUrl","editId","Id","newMetadata","metadata","Prefill","GoToPermissions","getUrlContentType","url","GoToMetadata","GoToDevRest","getUrlData","exportJson","confirm","delete","result","$event","DataComponent_For_7_Template","DataComponent_Conditional_15_Template","MatDialogActions","MatFormFieldModule","MatSelectModule","FormsModule","MatOptionModule","MatButtonModule","i5","i6","RouterOutlet","SxcGridModule","i7","DragAndDropDirective"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/data/data-actions/data-actions.component.html","./projects/eav-ui/src/app/app-administration/data/data-actions/data-actions.component.ts","./projects/eav-ui/src/app/app-administration/data/data-fields/data-fields.component.ts","./projects/eav-ui/src/app/app-administration/data/data-fields/data-fields.component.html","./projects/eav-ui/src/app/app-administration/data/data-items/data-items.component.ts","./projects/eav-ui/src/app/app-administration/data/data-items/data-items.component.html","./projects/eav-ui/src/app/app-administration/data/data.component.html","./projects/eav-ui/src/app/app-administration/data/data.component.ts"],"sourcesContent":["<div class=\"actions-component\">\r\n  @if (!contentType.EditInfo.DisableEdit || contentType.Properties) {\r\n    <div class=\"eav-grid-action-button highlight\" matRipple\r\n      tippy=\"Description and more\"\r\n      (click)=\"do('createUpdateMetaData')\">\r\n      <mat-icon>edit</mat-icon>\r\n    </div>\r\n  }\r\n  @if (contentType.EditInfo.DisableEdit && !contentType.Properties) {\r\n    <div class=\"eav-grid-action-button disabled\">\r\n      <mat-icon>edit</mat-icon>\r\n    </div>\r\n  }\r\n\r\n  @if (!contentType.EditInfo.DisableMetadata) {\r\n    <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Metadata\"\r\n      (click)=\"do('openMetadata')\">\r\n      <mat-icon [matBadge]=\"contentType.Metadata.length\" matBadgePosition=\"below after\" matBadgeColor=\"accent\"\r\n        matBadgeSize=\"small\" [matBadgeHidden]=\"!contentType.Metadata.length\" aria-hidden=\"false\">\r\n        local_offer\r\n      </mat-icon>\r\n    </div>\r\n  }\r\n  @if (contentType.EditInfo.DisableMetadata) {\r\n    <div class=\"eav-grid-action-button disabled\">\r\n      <mat-icon [matBadge]=\"contentType.Metadata.length\" matBadgePosition=\"below after\" matBadgeColor=\"accent\"\r\n        matBadgeSize=\"small\" matBadgeDisabled=\"true\" [matBadgeHidden]=\"!contentType.Metadata.length\" aria-hidden=\"false\">\r\n        local_offer\r\n      </mat-icon>\r\n    </div>\r\n  }\r\n\r\n  @if (!contentType.EditInfo.DisableEdit && enablePermissions) {\r\n    <div class=\"eav-grid-action-button highlight\" matRipple\r\n      tippy=\"Permissions\" (click)=\"do('openPermissions')\">\r\n      <mat-icon [matBadge]=\"contentType.Permissions.Count\" matBadgePosition=\"below after\" matBadgeColor=\"accent\"\r\n        matBadgeSize=\"small\" [matBadgeHidden]=\"!contentType.Permissions.Count\" aria-hidden=\"false\">\r\n      person</mat-icon>\r\n    </div>\r\n  }\r\n  @if (contentType.EditInfo.DisableEdit || !enablePermissions) {\r\n    <div class=\"eav-grid-action-button disabled\">\r\n      <mat-icon [matBadge]=\"contentType.Permissions.Count\" matBadgePosition=\"below after\" matBadgeColor=\"accent\"\r\n        matBadgeSize=\"small\" matBadgeDisabled=\"true\" [matBadgeHidden]=\"!contentType.Permissions.Count\"\r\n        aria-hidden=\"false\">\r\n      person</mat-icon>\r\n    </div>\r\n  }\r\n\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"More\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"grid-more-menu\">\r\n  <ng-template matMenuContent>\r\n    <button mat-menu-item [disabled]=\"contentType.EditInfo.DisableRename\" (click)=\"do('editContentType')\">\r\n      <mat-icon>settings</mat-icon>\r\n      <span>Rename</span>\r\n    </button>\r\n    <button mat-menu-item (click)=\"do('openRestApi')\">\r\n      <mat-icon svgIcon=\"code-curly\"></mat-icon>\r\n      <span>REST API</span>\r\n    </button>\r\n    <button mat-menu-item (click)=\"do('typeExport')\">\r\n      <mat-icon>cloud_download</mat-icon>\r\n      <span>Export content type</span>\r\n    </button>\r\n    <button mat-menu-item (click)=\"do('dataExport')\">\r\n      <mat-icon>cloud_download</mat-icon>\r\n      <span>Export data</span>\r\n    </button>\r\n    <button mat-menu-item (click)=\"do('dataImport')\">\r\n      <mat-icon>cloud_upload</mat-icon>\r\n      <span>Import data</span>\r\n    </button>\r\n    <button mat-menu-item [disabled]=\"contentType.EditInfo.DisableDelete\" (click)=\"do('deleteContentType')\">\r\n      <mat-icon>delete</mat-icon>\r\n      <span>Delete</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { guidRegex } from '../../../shared/constants/guid.constants';\r\nimport { ContentType } from '../../models/content-type.model';\r\nimport { DataActionsParams, DataActionType } from './data-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-data-actions',\r\n  templateUrl: './data-actions.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n    MatBadgeModule,\r\n    MatMenuModule,\r\n  ],\r\n})\r\nexport class DataActionsComponent implements ICellRendererAngularComp {\r\n  contentType: ContentType;\r\n  enablePermissions: boolean;\r\n  private params: ICellRendererParams & DataActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & DataActionsParams): void {\r\n    this.params = params;\r\n    this.contentType = this.params.data;\r\n    const enablePermissions = this.params.enablePermissionsGetter();\r\n    this.enablePermissions = enablePermissions && guidRegex().test(this.contentType.StaticName);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  do(verb: DataActionType): void {\r\n    this.params.do(verb, this.contentType);\r\n  }\r\n\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { ContentType } from '../../models/content-type.model';\r\nimport { DataFieldsParams } from './data-fields.models';\r\n\r\n@Component({\r\n  selector: 'app-data-fields',\r\n  templateUrl: './data-fields.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n    MatBadgeModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class DataFieldsComponent implements ICellRendererAngularComp {\r\n  value: number;\r\n  tooltip: string;\r\n  icon: string;\r\n\r\n  private params: ICellRendererParams & DataFieldsParams;\r\n  private contentType: ContentType;\r\n\r\n  agInit(params: ICellRendererParams & DataFieldsParams): void {\r\n    this.params = params;\r\n    this.contentType = params.data;\r\n    this.value = params.value;\r\n    this.tooltip = !this.contentType.EditInfo.ReadOnly\r\n      ? 'Edit fields'\r\n      : `${this.contentType.EditInfo.ReadOnlyMessage ? `${this.contentType.EditInfo.ReadOnlyMessage}\\n\\n` : ''}This ContentType shares the definition of #${this.contentType.SharedDefId} so you can't edit it here. Read 2sxc.org/help?tag=shared-types`;\r\n    this.icon = !this.contentType.EditInfo.ReadOnly ? 'dns' : 'share';\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  editFields(): void {\r\n    this.params.onEditFields(this.contentType);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple [tippy]=\"tooltip\" (click)=\"editFields()\">\r\n    <mat-icon [matBadge]=\"value\" matBadgePosition=\"below after\" matBadgeColor=\"accent\" matBadgeSize=\"small\"\r\n      [matBadgeHidden]=\"!value\" aria-hidden=\"false\">\r\n      {{icon}}\r\n    </mat-icon>\r\n  </div>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { ContentType } from '../../models';\r\nimport { DataItemsParams } from './data-items.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-data-items',\r\n  templateUrl: './data-items.component.html',\r\n  styleUrls: ['./data-items.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class DataItemsComponent implements ICellRendererAngularComp {\r\n  value: number;\r\n  private params: DataItemsParams;\r\n  private contentType: ContentType;\r\n\r\n  agInit(params: ICellRendererParams & DataItemsParams): void {\r\n    this.params = params;\r\n    this.contentType = params.data;\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  showItems(): void {\r\n    this.params.onShowItems(this.contentType);\r\n  }\r\n\r\n  addItem(): void {\r\n    this.params.onAddItem(this.contentType);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"{{ value }} items\" (click)=\"showItems()\">\r\n    <div class=\"text-icon\">{{ value }}</div>\r\n  </div>\r\n\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Add item\" (click)=\"addItem()\">\r\n    <mat-icon>add</mat-icon>\r\n  </div>\r\n</div>","<div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"contentTypes()\" [gridOptions]=\"gridOptions\" appDragAndDrop\r\n    [allowedFileTypes]=\"'xml,json'\" (filesDropped)=\"filesDropped($event)\">\r\n  </ag-grid-angular>\r\n  <mat-dialog-actions class=\"eav-dialog-actions\">\r\n    <div class=\"eav-dialog-actions-div\">\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field eav-scope-dropdown\">\r\n        <mat-select [ngModel]=\"scope()\" name=\"Scope\" (ngModelChange)=\"changeScope($event)\">\r\n          @for (scopeOption of (scopeOptions()); track scopeOption) {\r\n          <mat-option [value]=\"scopeOption.name\">\r\n            {{ 'Scope: ' + scopeOption.label }}\r\n          </mat-option>\r\n          }\r\n          <mat-option [value]=\"dropdownInsertValue\">Scope: Other...</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <button mat-button class=\"eav-button__with-icon\" tippy=\"Import content type\" (click)=\"importType()\">\r\n        <mat-icon class=\"eav-icon\">cloud_upload</mat-icon>\r\n        <span>Content Type</span>\r\n      </button>\r\n      @if (isDebug()) {\r\n      <button mat-button class=\"eav-button__with-icon\" color=\"accent\" tippy=\"Create a ghost content type\"\r\n        (click)=\"createGhost()\">\r\n        <mat-icon class=\"eav-icon\">share</mat-icon>\r\n        <span>Ghost</span>\r\n      </button>\r\n      }\r\n    </div>\r\n    <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new content type\"\r\n      (click)=\"editContentType(null)\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, inject, OnDestroy, OnInit, signal } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogActions } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationEnd, RouterOutlet } from '@angular/router';\r\nimport { filter, from, map, startWith, take } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { ContentExportService } from '../../content-export/services/content-export.service';\r\nimport { ContentImportDialogData } from '../../content-import/content-import-dialog.config';\r\nimport { GoToDevRest } from '../../dev-rest/go-to-dev-rest';\r\nimport { GoToMetadata } from '../../metadata';\r\nimport { GoToPermissions } from '../../permissions/go-to-permissions';\r\nimport { ColumnDefinitions } from '../../shared/ag-grid/column-definitions';\r\nimport { BaseComponent } from '../../shared/components/base.component';\r\nimport { FileUploadDialogData } from '../../shared/components/file-upload-dialog';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { dropdownInsertValue } from '../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DragAndDropDirective } from '../../shared/directives/drag-and-drop.directive';\r\nimport { toString } from '../../shared/helpers/file-to-base64.helper';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep } from '../../shared/models/edit-form.model';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { mapUntilChanged } from '../../shared/rxJs/mapUntilChanged';\r\nimport { GlobalConfigService } from '../../shared/services/global-config.service';\r\nimport { ContentType } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\nimport { ContentTypesService } from '../services/content-types.service';\r\nimport { DialogConfigAppService } from '../services/dialog-config-app.service';\r\nimport { DataActionsComponent } from './data-actions/data-actions.component';\r\nimport { DataActionsParams } from './data-actions/data-actions.models';\r\nimport { DataFieldsComponent } from './data-fields/data-fields.component';\r\nimport { DataFieldsParams } from './data-fields/data-fields.models';\r\nimport { DataItemsComponent } from './data-items/data-items.component';\r\nimport { DataItemsParams } from './data-items/data-items.models';\r\n\r\n@Component({\r\n  selector: 'app-data',\r\n  templateUrl: './data.component.html',\r\n  styleUrls: ['./data.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogActions,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    MatOptionModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    SxcGridModule,\r\n    DragAndDropDirective,\r\n  ],\r\n})\r\nexport class DataComponent extends BaseComponent implements OnInit, OnDestroy {\r\n\r\n  isDebug = inject(GlobalConfigService).isDebug;\r\n  #snackBar = inject(MatSnackBar);\r\n\r\n  #contentTypeSvc = transient(ContentTypesService);\r\n  #contentExportSvc = transient(ContentExportService);\r\n  #dialogConfigSvc = transient(DialogConfigAppService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  constructor() { super(); }\r\n\r\n  contentTypes = signal<ContentType[]>(undefined);\r\n  scope = signal<string>(undefined);\r\n  scopeOptions = signal<ScopeDetailsDto[]>([]);\r\n\r\n  /** Possible scopes - the ones from the backend + manually entered scopes by the current user */\r\n  gridOptions = this.#buildGridOptions();\r\n  dropdownInsertValue = dropdownInsertValue;\r\n  enablePermissions!: boolean;\r\n\r\n  ngOnInit() {\r\n    this.#fetchScopes();\r\n    this.#refreshScopeOnRouteChange();\r\n    this.#dialogRouter.doOnDialogClosed(() => this.#fetchContentTypes());\r\n\r\n    this.#dialogConfigSvc.getCurrent$().subscribe(data => {\r\n      this.enablePermissions = data.Context.Enable.AppPermissions;\r\n    });\r\n  }\r\n\r\n  filesDropped(files: File[]) {\r\n    const importFile = files[0];\r\n    const ext = importFile.name.substring(importFile.name.lastIndexOf('.') + 1).toLocaleLowerCase();\r\n    switch (ext) {\r\n      case 'xml':\r\n        from(toString(files[0])).pipe(take(1)).subscribe(fileString => {\r\n          const contentTypeName = fileString.split('<Entity Type=\"')[1]?.split('\"')[0];\r\n          const contentType = this.contentTypes().find(ct => ct.Name === contentTypeName);\r\n          if (contentType == null) {\r\n            const message = `Cannot find Content Type named '${contentTypeName}'. Please open Content Type Import dialog manually.`;\r\n            this.#snackBar.open(message, null, { duration: 5000 });\r\n            return;\r\n          }\r\n          this.#openDataImport(contentType, files);\r\n        });\r\n        break;\r\n      case 'json':\r\n        this.importType(files);\r\n        break;\r\n    }\r\n  }\r\n\r\n  importType(files?: File[]) {\r\n    const dialogData: FileUploadDialogData = { files };\r\n    this.#dialogRouter.navParentFirstChild(['import'], { state: dialogData });\r\n  }\r\n\r\n  #showContentItems(contentType: ContentType) {\r\n    this.#dialogRouter.navParentFirstChild([`items/${contentType.StaticName}`]);\r\n  }\r\n\r\n  editContentType(contentType: ContentType) {\r\n    if (!contentType) {\r\n      this.#dialogRouter.navParentFirstChild(['add']);\r\n    } else {\r\n      if (contentType.EditInfo.ReadOnly) return;\r\n      this.#dialogRouter.navParentFirstChild([`${contentType.StaticName}/edit`]);\r\n    }\r\n  }\r\n\r\n  #fetchContentTypes() {\r\n    this.#contentTypeSvc.retrieveContentTypes(this.scope()).subscribe(contentTypes => {\r\n      for (const contentType of contentTypes) {\r\n        contentType._compareLabel = contentType.Label.replace(/\\p{Emoji}/gu, 'ž');\r\n      }\r\n      this.contentTypes.set(contentTypes);\r\n      if (this.scope() !== eavConstants.scopes.default.value) {\r\n        const message = 'Warning! You are in a special scope. Changing things here could easily break functionality';\r\n        this.#snackBar.open(message, null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  #fetchScopes() {\r\n    this.#contentTypeSvc.getScopesV2().subscribe(scopeList => {\r\n      // Merge the new scopes with the existing ones - in case there were manual scopes added\r\n      // If old scope list had a manual scope which the server didn't send, re-add it here\r\n      const manual = this.scopeOptions()\r\n        .filter(sOld => scopeList.find(sNew => sNew.name === sOld.name) == null);\r\n\r\n      // Add a nice label to each scope containing count-information of types\r\n      const withNiceLabel = scopeList.map(s => {\r\n        let countInfo = !s.typesInherited\r\n          ? `${s.typesTotal} types`               // only not-inherited\r\n          : (s.typesInherited == s.typesTotal)\r\n            ? s.typesInherited + ' sys types'     // only inherited\r\n            : `${s.typesTotal} types / ${s.typesInherited} system`;\r\n        return ({ ...s, label: s.name + ` - ${countInfo}` });\r\n      });\r\n\r\n      this.scopeOptions.set([...withNiceLabel, ...manual]);\r\n    });\r\n  }\r\n\r\n  createGhost() {\r\n    const sourceName = window.prompt('To create a ghost content-type enter source static name / id - this is a very advanced operation - read more about it on 2sxc.org/help?tag=ghost');\r\n    if (!sourceName) return;\r\n    this.#snackBar.open('Saving...');\r\n    this.#contentTypeSvc.createGhost(sourceName).subscribe(_ => {\r\n      this.#snackBar.open('Saved', null, { duration: 2000 });\r\n      this.#fetchContentTypes();\r\n    });\r\n  }\r\n\r\n  changeScope(newScope: string) {\r\n    if (newScope === dropdownInsertValue) {\r\n      newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n    }\r\n    this.#dialogRouter.navRelative(['..', newScope]);\r\n  }\r\n\r\n  /**\r\n   * Refreshes the scope when the route changes.\r\n   * ...also adds a scope name if the route scope is not found in the list of possible scopes.\r\n   * This is to allow an admin to enter a custom scope.\r\n   * Note 2024-03-04 2dm - not sure if this auto-add feature is still needed though...\r\n   */\r\n  #refreshScopeOnRouteChange() {\r\n    this.subscriptions.add(\r\n      this.#dialogRouter.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        map(() => this.#dialogRouter.getParam('scope')),\r\n        startWith(this.#dialogRouter.getParam('scope')),\r\n        filter(scope => !!scope),\r\n        mapUntilChanged(m => m),\r\n      ).subscribe(scope => {\r\n        this.scope.set(scope);\r\n\r\n        // If we can't find the scope in the list of options, add it as it was entered manually\r\n        if (!this.scopeOptions().map(option => option.name).includes(scope)) {\r\n          const newScopeOption: ScopeDetailsDto = {\r\n            name: scope,\r\n            label: scope,\r\n            typesTotal: 0,\r\n            typesInherited: 0,\r\n            typesOfApp: 0,\r\n          };\r\n          this.scopeOptions.set([...this.scopeOptions(), newScopeOption]);\r\n        }\r\n        this.#fetchContentTypes();\r\n      })\r\n    );\r\n  }\r\n\r\n  //#region Grid\r\n\r\n  #buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.IdWithDefaultRenderer,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<ContentType>('StaticName'),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWidePrimary,\r\n          headerName: 'ContentType',\r\n          field: 'Label',\r\n          sort: 'asc',\r\n          onCellClicked: (params) => {\r\n            const contentType: ContentType = params.data;\r\n            this.#showContentItems(contentType);\r\n          },\r\n          comparator: (valueA, valueB, nodeA, nodeB, isInverted) => {\r\n            const contentTypeA: ContentType = nodeA.data;\r\n            const contentTypeB: ContentType = nodeB.data;\r\n            return contentTypeA._compareLabel.localeCompare(contentTypeB._compareLabel);\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Items,\r\n          field: 'Items',\r\n          cellRenderer: DataItemsComponent,\r\n          cellRendererParams: (() => ({\r\n            onShowItems: (contentType) => this.#showContentItems(contentType),\r\n            onAddItem: (contentType) => this.#addItem(contentType),\r\n          } satisfies DataItemsParams))(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Fields,\r\n          field: 'Fields',\r\n          cellRenderer: DataFieldsComponent,\r\n          cellRendererParams: (() => ({\r\n            onEditFields: (contentType) => this.#editFields(contentType),\r\n          } satisfies DataFieldsParams))(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWideMin100,\r\n          field: 'Name',\r\n          cellClass: (p) => {\r\n            return `${p.data.EditInfo.DisableEdit ? 'no-outline' : 'primary-action highlight'}`.split(' ');\r\n          },\r\n          valueGetter: (p: { data: ContentType }) => p.data?.Name,\r\n          onCellClicked: (p) => {\r\n            this.editContentType(p.data);\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWideFlex3,\r\n          field: 'Description',\r\n          valueGetter: (p: { data: ContentType }) => p.data?.Properties?.Description,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight4,\r\n          cellRenderer: DataActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: DataActionsParams = {\r\n              enablePermissionsGetter: () => this.enablePermissions,\r\n              do: (verb, contentType) => {\r\n                switch (verb) {\r\n                  case 'createUpdateMetaData': this.#createOrEditMetadata(contentType); break;\r\n                  case 'openPermissions': this.#openPermissions(contentType); break;\r\n                  case 'editContentType': this.editContentType(contentType); break;\r\n                  case 'openMetadata': this.#openMetadata(contentType); break;\r\n                  case 'openRestApi': this.#openRestApi(contentType); break;\r\n                  case 'typeExport': this.#exportType(contentType); break;\r\n                  case 'dataExport': this.#openDataExport(contentType); break;\r\n                  case 'dataImport': this.#openDataImport(contentType); break;\r\n                  case 'deleteContentType': this.#deleteContentType(contentType); break;\r\n                }\r\n              }\r\n            } satisfies DataActionsParams;\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Actions in the grid\r\n\r\n  #addItem(contentType: ContentType) {\r\n    const form: EditForm = {\r\n      items: [EditPrep.newFromType(contentType.StaticName)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRouter.navParentFirstChild([`edit/${formUrl}`]);\r\n  }\r\n\r\n  #editFields(contentType: ContentType) {\r\n    this.#dialogRouter.navParentFirstChild([`fields/${contentType.StaticName}`]);\r\n  }\r\n\r\n\r\n  #createOrEditMetadata(contentType: ContentType) {\r\n    const form: EditForm = {\r\n      items: [\r\n        !contentType.Properties\r\n          ? {\r\n              ...EditPrep.newMetadata(contentType.StaticName, eavConstants.contentTypes.contentType, eavConstants.metadata.contentType),\r\n              Prefill: {\r\n                Label: contentType.Name,\r\n                Description: contentType.Description\r\n              },\r\n            }\r\n          : EditPrep.editId(contentType.Properties.Id),\r\n      ],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRouter.navParentFirstChild([`edit/${formUrl}`]);\r\n  }\r\n\r\n  #openPermissions(contentType: ContentType) {\r\n    this.#dialogRouter.navParentFirstChild([GoToPermissions.getUrlContentType(contentType.StaticName)]);\r\n  }\r\n\r\n  #openMetadata(contentType: ContentType) {\r\n    const url = GoToMetadata.getUrlContentType(\r\n      contentType.StaticName,\r\n      `Metadata for Content Type: ${contentType.Name} (${contentType.Id})`,\r\n    );\r\n    this.#dialogRouter.navParentFirstChild([url]);\r\n  }\r\n\r\n  #openRestApi(contentType: ContentType) {\r\n    this.#dialogRouter.navParentFirstChild([GoToDevRest.getUrlData(contentType)]);\r\n  }\r\n\r\n  #exportType(contentType: ContentType) {\r\n    this.#contentExportSvc.exportJson(contentType.StaticName);\r\n  }\r\n\r\n  #openDataExport(contentType: ContentType) {\r\n    this.#dialogRouter.navParentFirstChild([`export/${contentType.StaticName}`]);\r\n  }\r\n\r\n  #openDataImport(contentType: ContentType, files?: File[]) {\r\n    const contentImportData: ContentImportDialogData = { files };\r\n    this.#dialogRouter.navParentFirstChild([`${contentType.StaticName}/import`], { state: contentImportData });\r\n  }\r\n\r\n  #deleteContentType(contentType: ContentType) {\r\n    if (!confirm(`Are you sure you want to delete '${contentType.Name}' (${contentType.Id})?`)) return;\r\n    this.#snackBar.open('Deleting...');\r\n    this.#contentTypeSvc.delete(contentType).subscribe(result => {\r\n      this.#snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.#fetchContentTypes();\r\n    });\r\n  }\r\n\r\n  //#endregion\r\n}\r\n"],"x_google_ignoreList":[]}