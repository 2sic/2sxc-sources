{"version":3,"file":"projects_eav-ui_src_app_metadata_metadata_component_ts-projects_eav-ui_src_app_shared_fields_-53fb0d.c143eafe8a43dd2b.js","mappings":"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","names":["webApiTypeRoot","webApiTypeScopes","ContentTypesService","HttpServiceBase","retrieveContentType","staticName","this","http","get","apiUrl","params","appId","contentTypeId","retrieveContentTypes","scope","getScopes","pipe","map","scopesData","scopes","old","Object","keys","key","name","value","getScopesV2","save","contentType","post","appid","delete","StaticName","import","files","formData","FormData","file","append","zoneId","createGhost","sourceStaticName","__ngFactoryType__","factory","ɵfac","ExportAppPartsService","getContentInfo","webApiAppPartsRoot","exportParts","contentTypeIds","entityIds","templateIds","url","join","window","open","ExportAppService","getAppInfo","webApiAppRoot","exportAppUrl","exportForVersionControl","includeContentGroups","resetAppGuid","withFiles","toString","withPortalFiles","ImportAppPartsService","importAppParts","resetApp","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","webApiEntityList","importQuery","from","toBase64","switchMap","fileBase64","AppId","ContentBase64","success","Success","Messages","clonePipeline","id","Id","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","export","getPolymorphism","getUsage","guid","i0","ctx_r0","dialogData","message","ConfirmDeleteDialogComponent","constructor","dialog","hostClass","closeDialog","confirm","close","MAT_DIALOG_DATA","i1","selectors","hostVars","hostBindings","rf","ctx","ConfirmDeleteDialogComponent_Conditional_4_Template","entityTitle","entityId","MatCardModule","i2","MatButtonModule","i3","SafeHtmlPipe","styles","MetadataActionsComponent","agInit","refresh","deleteMetadata","onDelete","data","standalone","features","decls","vars","consts","template","MatRippleModule","MatIconModule","encapsulation","MetadataContentTypeComponent","metadata","_Type","Description","TippyDirective","scopeOption_r1","MetadataSaveDialogComponent_Conditional_11_For_5_Template","ctx_r1","scopeOptions","length","dropdownInsertValue","contentType_r3","Label","MetadataSaveDialogComponent_Conditional_15_For_2_Template","contentTypes","MetadataSaveDialogComponent","guidedContentType","advancedMode","signal","contentTypesService","transient","ngOnInit","buildForm","fetchScopes","toggleGuidedContentType","toggleAdvancedMode","event","checked","formValues","form","getRawValue","UntypedFormGroup","addControl","UntypedFormControl","Validators","required","eavConstants","default","controls","valueChanges","startWith","distinctUntilChanged","subscribe","newScope","patchValue","prompt","some","option","set","fetchContentTypes","MetadataSaveDialogComponent_Conditional_11_Template","MetadataSaveDialogComponent_Conditional_15_Template","MetadataSaveDialogComponent_Conditional_16_Template","MetadataSaveDialogComponent_Conditional_24_Template","$event","_c0","touched","errors","valid","FormsModule","ReactiveFormsModule","MatFormFieldModule","i4","MatSelectModule","i5","i6","MatOptionModule","MatInputModule","i7","i8","NgClass","i9","MatSlideToggleModule","i10","FieldHintComponent","ClickStopPropagationDirective","itemFor","KeyNumber","KeyGuid","KeyString","Title","MetadataComponent_Conditional_10_Conditional_5_Template","MetadataComponent_Conditional_10_Conditional_6_Template","MetadataComponent_Conditional_10_Conditional_7_Template","MetadataComponent_Conditional_10_Conditional_8_Template","Target","TargetType","_r2","createMetadata","recommendation_r5","Icon","Enabled","_r4","$implicit","MetadataComponent_Conditional_16_For_10_Conditional_1_Template","MetadataComponent_Conditional_16_For_10_Conditional_2_Template","_r3","openChange","MetadataComponent_Conditional_16_For_10_Template","fabOpen","recommendations","MetadataComponent","#entitiesSvc","#metadataSvc","#contentItemSvc","#dialogRoutes","snackBar","matDialog","viewContainerRef","changeDetectorRef","log","classLog","EntityEditService","MetadataService","ContentItemsService","DialogRoutingService","gridOptions","#buildGridOptions","undefined","metadataSet","Items","Recommendations","computed","filter","r","i","Count","#params","convert","getParams","p","targetType","parseInt","keyType","contentTypeStaticName","title","decodeURIComponent","getParam","#fetchFor","#fetchMetadata","doOnDialogClosed","recommendation","CreateEmpty","Name","create","For","calculateItemFor","error","duration","next","createMetadataForm","openFeatureDialog","MissingFeature","autoFocus","width","afterClosed","items","formUrl","convertFormToUrl","navRelative","markForCheck","x","EditPrep","constructMetadataInfo","newMetadataFromInfo","item","find","Guid","logGetMetadata","rxTap","getMetadata","take","forEach","startsWith","replace","atob","#editMetadata","editId","#deleteMetadata","confirmed","DeleteWarning","isConfirmed","defaultGridOptions","columnDefs","ColumnDefinitions","IdWithDefaultRenderer","cellRendererParams","idFieldParamsTooltipGetter","TextWide","field","onCellClicked","headerName","valueGetter","cellRenderer","ActionsPinnedRight1","MetadataComponent_Conditional_9_Template","MetadataComponent_Conditional_10_Template","MetadataComponent_Conditional_15_Template","MetadataComponent_Conditional_16_Template","RouterOutlet","SxcGridModule","MatDialogActions","EcoFabSpeedDialComponent","EcoFabSpeedDialTriggerComponent","EcoFabSpeedDialActionsComponent","MatBadgeModule","GoToPermissions","route","path","loadChildren","__webpack_require__","e","then","bind","m","permissionRoutes","getUrl","getUrlApp","app","getUrlAttribute","attribute","getUrlContentType","getUrlEntity","entity","getUrlLanguage","language","permissionsDialog","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","PermissionsComponent","Promise","all","component","DialogEntryComponent","children","EditRoutes","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","isError","isShort","toggleIsShort","inputs","ngContentSelectors","_r1","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c1","tmp_2_0","NgTemplateOutlet","a","onClick","stopPropagation","webApiFieldsAll","webApiSetTitle","webApiFieldsGetShared","ContentTypesFieldsService","paramsAppId","more","typeListRetrieve","getInputTypesList","inputConfigs","config","dataType","Type","substring","indexOf","inputType","label","description","isDefault","IsDefault","isObsolete","IsObsolete","isRecommended","IsRecommended","obsoleteMessage","ObsoleteMessage","icon","getReservedNames","getFields","fields","fld","Metadata","md","merged","All","InputType","getShareableFields","getShareableFieldsFor","attributeId","#getShareinfo","getAncestors","getDescendants","endpoint","addInheritedField","targetContentTypeId","sourceType","sourceFieldGuid","sourceField","share","inherit","inheritMetadataOf","reOrder","idArray","order","JSON","stringify","setTitle","rename","fieldId","newName","IsTitle","Error","add","newField","ContentTypeId","Index","SortOrder","updateInputType","resolve","reject","reader","FileReader","readAsDataURL","onload","result","split","onerror","readAsText"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/metadata/confirm-delete-dialog/confirm-delete-dialog.component.html","./projects/eav-ui/src/app/metadata/confirm-delete-dialog/confirm-delete-dialog.component.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.html","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.ts","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.ts","./projects/eav-ui/src/app/metadata/metadata.component.html","./projects/eav-ui/src/app/metadata/metadata.component.ts","./projects/eav-ui/src/app/permissions/go-to-permissions.ts","./projects/eav-ui/src/app/permissions/permissions-dialog.config.ts","./projects/eav-ui/src/app/permissions/permissions.routing.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/constants/dropdown-insert-value.constant.ts","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/fields/content-types-fields.service.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\n// We should list all the \"full\" paths here, so it's easier to find when searching for API calls\r\nexport const webApiTypeRoot = 'admin/type/';\r\nconst webApiTypeGet = 'admin/type/get';\r\nconst webApiTypes = 'admin/type/list';\r\nconst webApiTypeScopes = 'admin/type/scopes';\r\nconst webApiTypeSave = 'admin/type/save';\r\nconst webApiTypeDelete = 'admin/type/delete';\r\nconst webApiTypeImport = 'admin/type/import';\r\nconst webApiTypeAddGhost = 'admin/type/addghost';\r\n\r\n@Injectable()\r\nexport class ContentTypesService extends HttpServiceBase {\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get<ContentType>(this.apiUrl(webApiTypeGet), {\r\n      params: { appId: this.appId, contentTypeId: staticName }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get<ContentType[]>(this.apiUrl(webApiTypes), {\r\n      params: { appId: this.appId, scope }\r\n    });\r\n  }\r\n\r\n  // TODO: remove this method after upgrade to V2\r\n  getScopes() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => {\r\n        // wip during upgrade:\r\n        const scopes = scopesData.old;\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getScopesV2() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => scopesData.scopes),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeSave), contentType, {\r\n      params: { appid: this.appId },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeDelete), {\r\n      params: { appid: this.appId, staticName: contentType.StaticName },\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeAddGhost), null, {\r\n      params: { appid: this.appId, sourceStaticName },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\n@Injectable()\r\nexport class ExportAppPartsService extends HttpServiceBase {\r\n\r\n  getContentInfo(scope: string) {\r\n    return this.http.get<ContentInfo>(this.apiUrl(webApiAppPartsRoot + 'Get'), {\r\n      params: { appid: this.appId, zoneId: this.zoneId, scope },\r\n    });\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.appId\r\n      + '&zoneId=' + this.zoneId\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { AppInfo } from '../models/app-info.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\n@Injectable()\r\nexport class ExportAppService extends HttpServiceBase {\r\n\r\n  getAppInfo() {\r\n    return this.http.get<AppInfo>(this.apiUrl(webApiAppRoot + 'Statistics'), {\r\n      params: { appid: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  /** Generate the export app path. It can be extended with additional parameters */\r\n  exportAppUrl() {\r\n    return `${this.apiUrl(`${webApiAppRoot}Export`)}?appId=${this.appId}&zoneId=${this.zoneId}`;\r\n  }\r\n\r\n  exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }) {\r\n    return this.http.get<boolean>(this.apiUrl(webApiAppRoot + 'SaveData'), {\r\n      params: {\r\n        appid: this.appId,\r\n        zoneId: this.zoneId,\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService extends HttpServiceBase {\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.appId,\r\n        zoneId: this.zoneId,\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Query } from '../models/query.model';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService extends HttpServiceBase {\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get<Query[]>(this.apiUrl(webApiEntityList), {\r\n      params: { appId: this.appId, contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiQueryImport), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get<null>(this.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService extends HttpServiceBase {\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.apiUrl(webApiViews), {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.appId, guid }\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>Delete {{ dialogData.entityTitle }} ({{ dialogData.entityId }})?</mat-card-title>\r\n    @if (dialogData.message) {\r\n      <mat-card-subtitle [innerHtml]=\"dialogData.message | safeHtml\"></mat-card-subtitle>\r\n    }\r\n  </mat-card-header>\r\n  <mat-card-actions align=\"end\">\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog(true)\">Delete</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, HostBinding, Inject } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\nimport { ConfirmDeleteDialogData } from './confirm-delete-dialog.models';\r\n\r\n@Component({\r\n  selector: 'app-confirm-delete-dialog',\r\n  templateUrl: './confirm-delete-dialog.component.html',\r\n  styleUrls: ['./confirm-delete-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    SafeHtmlPipe,\r\n  ],\r\n})\r\nexport class ConfirmDeleteDialogComponent {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: ConfirmDeleteDialogData,\r\n    private dialog: MatDialogRef<ConfirmDeleteDialogComponent>,\r\n  ) { }\r\n\r\n  closeDialog(confirm?: boolean) {\r\n    this.dialog.close(confirm);\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MetadataItem } from '../models/metadata.model';\r\nimport { MetadataActionsParams } from './metadata-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-metadata-actions',\r\n  templateUrl: './metadata-actions.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n  ],\r\n})\r\nexport class MetadataActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & MetadataActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & MetadataActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deleteMetadata(): void {\r\n    const metadata: MetadataItem = this.params.data;\r\n    this.params.onDelete(metadata);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deleteMetadata()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MetadataItem } from '../models/metadata.model';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-metadata-content-type',\r\n  templateUrl: './metadata-content-type.component.html',\r\n  styleUrls: ['./metadata-content-type.component.scss'],\r\n  standalone: true,\r\n  imports: [TippyDirective,],\r\n})\r\nexport class MetadataContentTypeComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n  metadata: MetadataItem;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.metadata = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"container\" [tippy]=\"metadata._Type.Description\">\r\n  {{ value }}\r\n</div>\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>Create Metadata</mat-card-title>\r\n    <mat-card-subtitle>\r\n      This is a special operation to add an item which is metadata for another item,\r\n      see <a href=\"https://go.2sxc.org/metadata\" target=\"_blank\">docs</a>.\r\n    </mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form [formGroup]=\"form\">\r\n      <!-- Scope -->\r\n      @if (advancedMode && guidedContentType) {\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Scope</mat-label>\r\n        <mat-select formControlName=\"scope\" [placeholder]=\"!scopeOptions().length ? 'No items found' : ''\">\r\n          @for (scopeOption of scopeOptions(); track scopeOption) {\r\n          <mat-option [value]=\"scopeOption.value\">\r\n            {{ scopeOption.name }}\r\n          </mat-option>\r\n          }\r\n          <mat-option [value]=\"dropdownInsertValue\">Other...</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <app-field-hint>\r\n        The scope should almost never be changed -\r\n        <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n      </app-field-hint>\r\n      }\r\n      <!-- Content Type of metadata item -->\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Content Type</mat-label>\r\n        @if (guidedContentType) {\r\n        <mat-select formControlName=\"contentType\" required\r\n          [placeholder]=\"!contentTypes().length ? 'No items found' : ''\">\r\n          @for (contentType of contentTypes(); track contentType) {\r\n          <mat-option [value]=\"contentType.StaticName\">\r\n            {{ contentType.Label }}\r\n          </mat-option>\r\n          }\r\n        </mat-select>\r\n        }\r\n        @if (!guidedContentType) {\r\n        <input matInput type=\"text\" formControlName=\"contentType\" required>\r\n        }\r\n        <div matTextSuffix>\r\n          <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': guidedContentType }\" tippy=\"Pick existing value\"\r\n            (click)=\"toggleGuidedContentType(true)\">\r\n            <mat-icon>search</mat-icon>\r\n          </button>\r\n          <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': !guidedContentType }\" tippy=\"Manual entry\"\r\n            (click)=\"toggleGuidedContentType(false)\">\r\n            <mat-icon>text_fields</mat-icon>\r\n          </button>\r\n        </div>\r\n      </mat-form-field>\r\n      @if (form.controls.contentType.touched && form.controls.contentType.errors?.required) {\r\n      <app-field-hint [isError]=\"true\">\r\n        This field is required\r\n      </app-field-hint>\r\n      }\r\n    </form>\r\n  </mat-card-content>\r\n  <mat-card-actions class=\"eav-card-actions\">\r\n    <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n      {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n    </mat-slide-toggle>\r\n    <div>\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button color=\"accent\" class=\"eav-card-action-button\" [disabled]=\"!form.valid\"\r\n        (click)=\"confirm()\">\r\n        Confirm\r\n      </button>\r\n    </div>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, HostBinding, OnInit, signal } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { distinctUntilChanged, startWith } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { ContentType } from '../../app-administration/models';\r\nimport { ContentTypesService } from '../../app-administration/services';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { dropdownInsertValue } from '../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants, ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { MetadataSaveFormValues } from './metadata-save-dialog.models';\r\n\r\n@Component({\r\n  selector: 'app-metadata-save-dialog',\r\n  templateUrl: './metadata-save-dialog.component.html',\r\n  styleUrls: ['./metadata-save-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    NgClass,\r\n    MatIconModule,\r\n    MatSlideToggleModule,\r\n    FieldHintComponent,\r\n    ClickStopPropagationDirective,\r\n  ]\r\n})\r\nexport class MetadataSaveDialogComponent implements OnInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  dropdownInsertValue = dropdownInsertValue;\r\n  guidedContentType = true;\r\n  advancedMode = false;\r\n\r\n  contentTypes = signal<ContentType[]>([]);\r\n  scopeOptions = signal<ScopeOption[]>([]);\r\n\r\n  private contentTypesService = transient(ContentTypesService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<MetadataSaveDialogComponent>,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n    this.fetchScopes();\r\n  }\r\n\r\n  closeDialog(contentType?: string): void {\r\n    this.dialog.close(contentType);\r\n  }\r\n\r\n  toggleGuidedContentType(guidedContentType: boolean): void {\r\n    this.guidedContentType = guidedContentType;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: MetadataSaveFormValues = this.form.getRawValue();\r\n    this.closeDialog(formValues.contentType);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({});\r\n    this.form.addControl('contentType', new UntypedFormControl(null, [Validators.required]));\r\n    this.form.addControl('scope', new UntypedFormControl(eavConstants.scopes.default.value));\r\n\r\n    this.form.controls.scope.valueChanges.pipe(\r\n      startWith(this.form.controls.scope.value),\r\n      distinctUntilChanged(),\r\n    ).subscribe((newScope: string) => {\r\n      // reset content types when scope changes\r\n      if (this.form.controls.contentType.value != null) {\r\n        this.form.controls.contentType.patchValue(null);\r\n      }\r\n\r\n      // add new scope on manual entry\r\n      if (newScope === dropdownInsertValue) {\r\n        newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n        if (!this.scopeOptions().some(option => option.value === newScope)) {\r\n          const newScopeOption: ScopeOption = {\r\n            name: newScope,\r\n            value: newScope,\r\n          };\r\n          this.scopeOptions.set([newScopeOption, ...this.scopeOptions()]);\r\n        }\r\n        this.form.controls.scope.patchValue(newScope);\r\n      } else {\r\n        this.fetchContentTypes(newScope);\r\n      }\r\n    });\r\n  }\r\n\r\n  private fetchContentTypes(scope: string): void {\r\n    this.contentTypesService.retrieveContentTypes(scope).subscribe(contentTypes => {\r\n      this.contentTypes.set(contentTypes);\r\n    });\r\n  }\r\n\r\n  private fetchScopes(): void {\r\n    this.contentTypesService.getScopes().subscribe(scopes => {\r\n      this.scopeOptions.set(scopes);\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-dialog nav-component-wrapper\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      {{ title || 'Metadata' }}\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content nav-component-wrapper\">\r\n    <p>\r\n      @if (!itemFor()) {\r\n      This item is not metadata for anything else.\r\n      }\r\n      @else {\r\n      This item is metadata for:\r\n      <br>Target: {{ itemFor().Target }}\r\n      <br>TargetType: {{ itemFor().TargetType }}\r\n      @if (itemFor().KeyNumber) {\r\n      <br>Key Number: {{ itemFor().KeyNumber }}\r\n      }\r\n      @if (itemFor().KeyGuid) {\r\n      <br>Key Guid: {{ itemFor().KeyGuid }}\r\n      }\r\n      @if (itemFor().KeyString) {\r\n      <br>Key String: {{ itemFor().KeyString }}\r\n      }\r\n      @if (itemFor().Title) {\r\n      <br>Title: {{ itemFor().Title }}\r\n      }\r\n      }\r\n    </p>\r\n    <router-outlet></router-outlet>\r\n    <div class=\"grid-wrapper\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"metadataSet().Items\" [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </div>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    @if (recommendations().length === 0) {\r\n    <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new metadata for this item\"\r\n      (click)=\"createMetadata()\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n    }\r\n    @if (recommendations().length > 0) {\r\n    <eco-fab-speed-dial class=\"eav-eco-fab-speed-dial\" [ngClass]=\"{ 'fab-opened': fabOpen() }\"\r\n      (openChange)=\"openChange($event)\">\r\n      <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n        <button mat-fab>\r\n          <mat-icon class=\"spin180\">{{ fabOpen() ? 'close' : 'add' }}</mat-icon>\r\n        </button>\r\n      </eco-fab-speed-dial-trigger>\r\n      <eco-fab-speed-dial-actions class=\"eav-eco-fab-speed-dial-actions\">\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Other Content Type\"\r\n          (click)=\"createMetadata()\">\r\n          <mat-icon>search</mat-icon>\r\n        </button>\r\n        @for (recommendation of recommendations(); track recommendation) {\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" [attr.label]=\"recommendation.Title\"\r\n          (click)=\"createMetadata(recommendation)\">\r\n          @if (recommendation.Icon) {\r\n          <div style=\"color: white; fill: white;\" [innerHTML]=\"recommendation.Icon | safeHtml\"\r\n            [matBadgeHidden]=\"recommendation.Enabled\" matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadge=\"💎\"\r\n            matBadgePosition=\"below after\" aria-hidden=\"false\"></div>\r\n          } @else {\r\n          <mat-icon>add</mat-icon>\r\n          }\r\n        </button>\r\n        }\r\n      </eco-fab-speed-dial-actions>\r\n    </eco-fab-speed-dial>\r\n    }\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, computed, OnInit, signal, ViewContainerRef } from '@angular/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent } from '@ecodev/fab-speed-dial';\r\nimport { map, take } from 'rxjs';\r\nimport { convert, Of, transient } from '../../../../core';\r\nimport { ContentItemsService } from '../content-items/services/content-items.service';\r\nimport { EavForInAdminUi } from '../edit/shared/models/eav';\r\nimport { openFeatureDialog } from '../features/shared/base-feature.component';\r\nimport { MetadataService } from '../permissions';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { MetadataKeyTypes } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { classLog } from '../shared/logging';\r\nimport { EditForm, EditPrep, ItemAddIdentifier } from '../shared/models/edit-form.model';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { SafeHtmlPipe } from '../shared/pipes/safe-html.pipe';\r\nimport { DialogRoutingService } from '../shared/routing/dialog-routing.service';\r\nimport { EntityEditService } from '../shared/services/entity-edit.service';\r\nimport { ConfirmDeleteDialogComponent } from './confirm-delete-dialog/confirm-delete-dialog.component';\r\nimport { ConfirmDeleteDialogData } from './confirm-delete-dialog/confirm-delete-dialog.models';\r\nimport { MetadataActionsComponent } from './metadata-actions/metadata-actions.component';\r\nimport { MetadataActionsParams } from './metadata-actions/metadata-actions.models';\r\nimport { MetadataContentTypeComponent } from './metadata-content-type/metadata-content-type.component';\r\nimport { MetadataSaveDialogComponent } from './metadata-save-dialog/metadata-save-dialog.component';\r\nimport { MetadataDto, MetadataItem, MetadataRecommendation } from './models/metadata.model';\r\n\r\n@Component({\r\n  selector: 'app-metadata',\r\n  templateUrl: './metadata.component.html',\r\n  styleUrls: ['./metadata.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    SxcGridModule,\r\n    MatDialogActions,\r\n    EcoFabSpeedDialComponent,\r\n    NgClass,\r\n    EcoFabSpeedDialTriggerComponent,\r\n    EcoFabSpeedDialActionsComponent,\r\n    MatBadgeModule,\r\n    SafeHtmlPipe,\r\n  ],\r\n})\r\nexport class MetadataComponent implements OnInit {\r\n\r\n  log = classLog({MetadataComponent});\r\n\r\n  #entitiesSvc = transient(EntityEditService);\r\n  #metadataSvc = transient(MetadataService);\r\n  #contentItemSvc = transient(ContentItemsService);\r\n  #dialogRoutes = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<MetadataComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) { }\r\n\r\n  gridOptions = this.#buildGridOptions();\r\n\r\n  fabOpen = signal(false);\r\n  itemFor = signal<EavForInAdminUi | undefined>(undefined);\r\n\r\n  metadataSet = signal<MetadataDto>({ Items: [], Recommendations: [] } as MetadataDto);\r\n\r\n  recommendations = computed(() => {\r\n    const metadata = this.metadataSet();\r\n    return metadata.Recommendations.filter(r =>\r\n      metadata.Items.filter(i => i._Type.Id === r.Id).length < r.Count\r\n    );\r\n  });\r\n\r\n  #params = convert(this.#dialogRoutes.getParams(['targetType', 'keyType', 'key', 'title', 'contentTypeStaticName']), p => ({\r\n    targetType: parseInt(p.targetType, 10),\r\n    keyType: p.keyType as Of<typeof MetadataKeyTypes>,\r\n    key: p.key,\r\n    contentTypeStaticName: p.contentTypeStaticName,\r\n  }));\r\n  protected title = decodeURIComponent(this.#dialogRoutes.getParam('title') ?? '');\r\n\r\n  ngOnInit() {\r\n    this.#fetchFor();\r\n    this.#fetchMetadata();\r\n    this.#dialogRoutes.doOnDialogClosed(() => this.#fetchMetadata());\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  openChange(open: boolean) {\r\n    this.fabOpen.set(open);\r\n  }\r\n\r\n  createMetadata(recommendation?: MetadataRecommendation) {\r\n    if (recommendation) {\r\n      // If the feature is not enabled, open the info dialog instead of metadata\r\n      if (!recommendation.Enabled) {\r\n        openFeatureDialog(this.matDialog, recommendation.MissingFeature, this.viewContainerRef, this.changeDetectorRef);\r\n        return;\r\n      }\r\n      // Feature is enabled, check if it's an empty metadata\r\n      if (recommendation.CreateEmpty) {\r\n        this.snackBar.open(`Creating ${recommendation.Name}...`);\r\n        this.#entitiesSvc.create(recommendation.Id, { For: this.calculateItemFor('dummy').For }).subscribe({\r\n          error: () => {\r\n            this.snackBar.open(`Creating ${recommendation.Name} failed. Please check console for more info`, undefined, { duration: 3000 });\r\n            this.#fetchMetadata();\r\n          },\r\n          next: () => {\r\n            this.snackBar.open(`Created ${recommendation.Name}`, undefined, { duration: 3000 });\r\n            this.#fetchMetadata();\r\n          },\r\n        });\r\n      } else {\r\n        // Default case - open new-metadata dialog\r\n        this.createMetadataForm(recommendation.Id);\r\n      }\r\n      return;\r\n    }\r\n    const metadataDialogRef = this.matDialog.open(MetadataSaveDialogComponent, {\r\n      autoFocus: false,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    metadataDialogRef.afterClosed().subscribe((contentType?: string) => {\r\n      if (contentType == null) return;\r\n      this.createMetadataForm(contentType);\r\n    });\r\n  }\r\n\r\n  private createMetadataForm(contentType: string) {\r\n    const form: EditForm = {\r\n      items: [this.calculateItemFor(contentType)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private calculateItemFor(contentType: string): ItemAddIdentifier {\r\n    const x = EditPrep.constructMetadataInfo(this.#params.targetType, this.#params.keyType, this.#params.key);\r\n    return EditPrep.newMetadataFromInfo(contentType, x);\r\n  }\r\n\r\n  #fetchFor() {\r\n    if (!this.#params.contentTypeStaticName) return;\r\n\r\n    this.#contentItemSvc.getAll(this.#params.contentTypeStaticName).subscribe(items => {\r\n      const item = items.find(i => i.Guid === this.#params.key);\r\n      if (item?.For)\r\n        this.itemFor.set(item.For);\r\n    });\r\n  }\r\n\r\n  #fetchMetadata() {\r\n    const logGetMetadata = this.log.rxTap('getMetadata');\r\n    this.#metadataSvc.getMetadata(this.#params.targetType, this.#params.keyType, this.#params.key)\r\n      .pipe(\r\n        logGetMetadata.pipe(),\r\n        take(1),\r\n        map(metadata => {\r\n          metadata.Recommendations.forEach(r => {\r\n            if (r.Icon?.startsWith('base64:')) {\r\n              r.Icon = r.Icon.replace('base64:', '');\r\n              r.Icon = window.atob(r.Icon);\r\n              // used for coloring black icons to white\r\n              r.Icon = r.Icon.replace('fill=\"#000000\"', 'fill=\"#ffffff\"');\r\n            }\r\n          });\r\n          return metadata;\r\n        }),\r\n        logGetMetadata.map(),\r\n      )\r\n      // 2024-05-30 2dm - this standard shorthand seems to fail\r\n      // for reasons unknown to me. I've replaced it with the longhand\r\n      // The problem occurs when the metadataSet$ is updated after the initial load.\r\n      // .subscribe(this.metadataSet$);\r\n      .subscribe(data => {\r\n        this.metadataSet.set(data);\r\n      }\r\n      );\r\n  }\r\n\r\n  #editMetadata(metadata: MetadataItem) {\r\n    const form: EditForm = {\r\n      items: [EditPrep.editId(metadata.Id)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  #deleteMetadata(metadata: MetadataItem, confirmed = false) {\r\n    if (!confirmed) {\r\n      const data: ConfirmDeleteDialogData = {\r\n        entityId: metadata.Id,\r\n        entityTitle: metadata.Title,\r\n        message: this.metadataSet().Recommendations.find(r => r.Id === metadata._Type.Id)?.DeleteWarning,\r\n      };\r\n      const confirmationDialogRef = this.matDialog.open(ConfirmDeleteDialogComponent, {\r\n        autoFocus: false,\r\n        data,\r\n        viewContainerRef: this.viewContainerRef,\r\n        width: '400px',\r\n      });\r\n      confirmationDialogRef.afterClosed().subscribe((isConfirmed: boolean) => {\r\n        if (isConfirmed)\r\n          this.#deleteMetadata(metadata, true);\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.snackBar.open('Deleting...');\r\n    this.#entitiesSvc.delete(metadata._Type.Id, metadata.Id, false).subscribe({\r\n      next: () => {\r\n        this.snackBar.open('Deleted', null, { duration: 2000 });\r\n        this.#fetchMetadata();\r\n      },\r\n      error: () => {\r\n        this.snackBar.open('Delete failed. Please check console for more information', null, { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  #buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.IdWithDefaultRenderer,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<MetadataItem>()\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Title',\r\n          onCellClicked: (p: { data: MetadataItem }) => this.#editMetadata(p.data),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Content Type',\r\n          field: 'ContentType',\r\n          valueGetter: (p: { data: MetadataItem }) => `${p.data._Type.Name}${p.data._Type.Title !== p.data._Type.Name ? ` (${p.data._Type.Title})` : ''}`,\r\n          cellRenderer: MetadataContentTypeComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight1,\r\n          cellRenderer: MetadataActionsComponent,\r\n          cellRendererParams: (() => ({\r\n            onDelete: (metadata) => this.#deleteMetadata(metadata),\r\n          } satisfies MetadataActionsParams))(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { Of } from '../../../../core';\r\nimport { eavConstants, MetadataKeyTypes } from '../shared/constants/eav.constants';\r\n\r\nexport class GoToPermissions {\r\n\r\n  static route: Route = {\r\n    path: 'permissions/:targetType/:keyType/:key',\r\n    loadChildren: () => import('./permissions.routing').then(m => m.permissionRoutes),\r\n    // loadChildren: () => import('./permissions.module').then(m => m.PermissionsModule),\r\n    data: { title: 'Permissions' },\r\n  };\r\n\r\n  static getUrl(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string): string {\r\n    return `permissions/${targetType}/${keyType}/${key}`;\r\n  }\r\n\r\n  static getUrlApp(appId: number): string {\r\n    return this.getUrl(eavConstants.metadata.app.targetType, eavConstants.metadata.app.keyType, appId.toString());\r\n  }\r\n\r\n  static getUrlAttribute(id: number): string {\r\n    return this.getUrl(eavConstants.metadata.attribute.targetType, eavConstants.metadata.attribute.keyType, id.toString());\r\n  }\r\n\r\n  /** For historic reasons, it's the same as Entity */\r\n  static getUrlContentType(guid: string): string {\r\n    return this.getUrlEntity(guid);\r\n  }\r\n\r\n  static getUrlEntity(guid: string): string {\r\n    return this.getUrl(eavConstants.metadata.entity.targetType, eavConstants.metadata.entity.keyType, guid);\r\n  }\r\n\r\n  static getUrlLanguage(id: string): string {\r\n    return this.getUrl(eavConstants.metadata.language.targetType, eavConstants.metadata.language.keyType, id);\r\n  }\r\n\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const permissionsDialog: DialogConfig = {\r\n  name: 'SET_PERMISSIONS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { PermissionsComponent } = await import('./permissions.component');\r\n    return PermissionsComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { permissionsDialog } from './permissions-dialog.config';\r\nimport { EditRoutes } from '../edit/edit.routing';\r\n\r\nexport const permissionRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: permissionsDialog },\r\n    children: EditRoutes\r\n  },\r\n];\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    NgClass,\r\n    NgTemplateOutlet\r\n  ]\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","export const dropdownInsertValue = 'DROPDOWN_INSERT_VALUE' as const;\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { classLog } from '../logging';\r\n\r\n@Directive({\r\n  selector: '[appClickStopPropagation]',\r\n  standalone: true,\r\n})\r\nexport class ClickStopPropagationDirective {\r\n\r\n  log = classLog({ClickStopPropagationDirective});\r\n\r\n  // Log constructor to detect that it was really attached/created\r\n  constructor() {\r\n    this.log.a('constructor');\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    this.log.a('onClick', { event });\r\n    event.stopPropagation();\r\n\r\n    // This should never be added here, as it's often on a link, and the default behavior (link open) should happen\r\n    // event.preventDefault();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { Of } from '../../../../../core';\r\nimport { ContentType } from '../../app-administration/models/content-type.model';\r\nimport { webApiTypeRoot } from '../../app-administration/services';\r\nimport { HttpServiceBase } from '../services/http-service-base';\r\nimport { Field, FieldInputTypeOption } from './field.model';\r\nimport { InputTypeCatalog } from './input-type-catalog';\r\nimport { InputTypeMetadata } from './input-type-metadata.model';\r\n\r\nexport const webApiFieldsAll = 'admin/field/all';\r\n\r\n// All WebApi paths - to easily search/find when looking for where these are used\r\nconst webApiDataTypes = 'admin/field/DataTypes';\r\nconst webApiReservedNames = 'admin/field/ReservedNames';\r\nconst webApiAddInheritedField = 'admin/field/AddInheritedField';\r\nconst webApiInputTypes = 'admin/field/InputTypes';\r\nconst webApiInputType = 'admin/field/InputType';\r\nconst webApiShare = 'admin/field/Share';\r\nconst webApiInherit = 'admin/field/Inherit';\r\nconst webApiSort = 'admin/field/Sort';\r\nconst webApiSetTitle = webApiTypeRoot + 'SetTitle';\r\nconst webApiRename = 'admin/field/Rename';\r\nconst webApiDelete = 'admin/field/Delete';\r\nconst webApiAdd = 'admin/field/Add';\r\nconst webApiFieldsGetShared = 'admin/field/GetSharedFields';\r\nconst webApiGetAncestors = 'admin/field/GetAncestors';\r\nconst webApiGetDescendants = 'admin/field/GetDescendants';\r\n\r\n\r\n@Injectable()\r\nexport class ContentTypesFieldsService extends HttpServiceBase {\r\n\r\n  protected paramsAppId(more: Record<string, string | number | boolean | ReadonlyArray<string | number | boolean>> = {}) {\r\n    return {\r\n      params: {\r\n        appid: this.appId,\r\n        ...more,\r\n      },\r\n    };\r\n  }\r\n\r\n  typeListRetrieve() {\r\n    return this.http.get<string[]>(this.apiUrl(webApiDataTypes), this.paramsAppId());\r\n  }\r\n\r\n  getInputTypesList() {\r\n    return this.http\r\n      .get<InputTypeMetadata[]>(this.apiUrl(webApiInputTypes), this.paramsAppId())\r\n      .pipe(\r\n        map(inputConfigs => {\r\n          const inputTypeOptions = inputConfigs.map(config => ({\r\n            dataType: config.Type.substring(0, config.Type.indexOf('-')),\r\n            inputType: config.Type,\r\n            label: config.Label,\r\n            description: config.Description,\r\n            isDefault: config.IsDefault,\r\n            isObsolete: config.IsObsolete,\r\n            isRecommended: config.IsRecommended,\r\n            obsoleteMessage: config.ObsoleteMessage,\r\n            icon: config.IsDefault ? 'star' : config.IsRecommended ? 'star_outline' : null,\r\n          } satisfies FieldInputTypeOption));\r\n          return inputTypeOptions;\r\n        }),\r\n      );\r\n  }\r\n\r\n  getReservedNames() {\r\n    return this.http.get<Record<string, string>>(this.apiUrl(webApiReservedNames));\r\n  }\r\n\r\n  /** Get all fields for some content type */\r\n  getFields(contentTypeStaticName: string) {\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsAll), this.paramsAppId({ staticName: contentTypeStaticName }))\r\n      .pipe(\r\n        map(fields => {\r\n          if (fields) {\r\n            for (const fld of fields) {\r\n              if (!fld.Metadata) continue;\r\n              const md = fld.Metadata;\r\n              const allMd = md.All;\r\n              const typeMd = md[fld.Type];\r\n              const inputMd = md[fld.InputType];\r\n              md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n            }\r\n          }\r\n          return fields;\r\n        }),\r\n      );\r\n  }\r\n\r\n  /** Get all possible sharable fields for a new sharing */\r\n  getShareableFields() {\r\n    return this.http.get<Field[]>(this.apiUrl(webApiFieldsGetShared), this.paramsAppId());\r\n  }\r\n\r\n  /**\r\n   * Get sharable fields which are possible for this attribute.\r\n   * Reason is that eg. a bool-attribute can only receive metadata from a bool attribute, etc.\r\n   * @param attributeId the existing attributeId which will receive the new metadata\r\n   */\r\n  getShareableFieldsFor(attributeId: number) {\r\n    return this.#getShareinfo(webApiFieldsGetShared, attributeId);\r\n    // return this.http.get<Field[]>(this.apiUrl(webApiFieldsGetShared), this.paramsAppId({ attributeId }));\r\n  }\r\n\r\n  getAncestors(attributeId: number) {\r\n    return this.#getShareinfo(webApiGetAncestors, attributeId);\r\n  }\r\n\r\n  getDescendants(attributeId: number) {\r\n    return this.#getShareinfo(webApiGetDescendants, attributeId);\r\n  }\r\n\r\n  #getShareinfo(endpoint: string, attributeId: number) {\r\n    return this.http.get<Field[]>(this.apiUrl(endpoint), this.paramsAppId({ attributeId }));\r\n  }\r\n\r\n  addInheritedField(targetContentTypeId: number, sourceType: string, sourceFieldGuid: string /* guid */, name: string) {\r\n    return this.http.post<number>(this.apiUrl(webApiAddInheritedField), null, this.paramsAppId({\r\n      contentTypeId: targetContentTypeId.toString(),\r\n      sourceType,\r\n      sourceField: sourceFieldGuid,\r\n      name,\r\n    }));\r\n  }\r\n\r\n  share(attributeId: number, share: boolean = true) {\r\n    return this.http.post<null>(this.apiUrl(webApiShare), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        attributeId: attributeId.toString(),\r\n        share,\r\n      },\r\n    });\r\n  }\r\n\r\n  inherit(attributeId: number, sourceFieldGuid: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiInherit), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        attributeId: attributeId.toString(),\r\n        inheritMetadataOf: sourceFieldGuid,\r\n      },\r\n    });\r\n  }\r\n\r\n  reOrder(idArray: number[], contentType: ContentType) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiSort), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentType.Id.toString(),\r\n        order: JSON.stringify(idArray),\r\n      },\r\n    });\r\n  }\r\n\r\n  setTitle(item: Field, contentType: ContentType) {\r\n    return this.http.post<null>(this.apiUrl(webApiSetTitle), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  rename(fieldId: number, contentTypeId: number, newName: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiRename), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentTypeId.toString(),\r\n        attributeId: fieldId.toString(),\r\n        newName,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(item: Field, contentType: ContentType) {\r\n    if (item.IsTitle)\r\n      throw new Error('Can\\'t delete Title');\r\n\r\n    return this.http.delete<boolean>(this.apiUrl(webApiDelete), {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  add(newField: Partial<Field>, contentTypeId: number) {\r\n    return this.http.post<number>(this.apiUrl(webApiAdd), null, {\r\n      params: {\r\n        AppId: this.appId,\r\n        ContentTypeId: contentTypeId.toString(),\r\n        Id: newField.Id.toString(),\r\n        Type: newField.Type,\r\n        InputType: newField.InputType,\r\n        StaticName: newField.StaticName,\r\n        IsTitle: newField.IsTitle.toString(),\r\n        Index: newField.SortOrder.toString(),\r\n      }\r\n    });\r\n  }\r\n\r\n  updateInputType(attributeId: number, field: string, inputType: Of<typeof InputTypeCatalog>) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiInputType), null, {\r\n      params: { appId: this.appId, attributeId, field, inputType }\r\n    });\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n"],"x_google_ignoreList":[]}