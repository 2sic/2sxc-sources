{"version":3,"sources":["./src/app/replace-content/replace-content.component.html","./src/app/replace-content/replace-content.component.ts"],"names":["dialogRef","contentGroupService","router","route","snackBar","hostClass","subscription","this","hasChild","snapshot","firstChild","item","id","guid","paramMap","get","part","index","parseInt","add","queryParamMap","ngOnInit","getConfig","refreshOnChildClosed","ngOnDestroy","unsubscribe","save","open","saveItem","subscribe","duration","closeDialog","copySelected","form","items","ContentTypeName","contentTypeName","DuplicateEntity","navigate","JSON","stringify","relativeTo","close","getItems","replaceConfig","itemKeys","Object","keys","Items","options","nKey","push","label","value","SelectedId","events","pipe","event","hadChild","editResult","getCurrentNavigation","extras","state","ReplaceContentComponent"],"mappings":"sYAcM,wBAAkE,QAAkB,Q,uBAAzC,sBAAuB,uBCDxE,iBAeE,WACUA,EACAC,EACAC,EACAC,EACAC,GAJA,KAAAJ,YACA,KAAAC,sBACA,KAAAC,SACA,KAAAC,QACA,KAAAC,WAdgB,KAAAC,UAAY,mBAM9B,KAAAC,aAAe,IAAI,IAUzBC,KAAKC,WAAaD,KAAKJ,MAAMM,SAASC,WACtCH,KAAKI,KAAO,CACVC,GAAI,KACJC,KAAMN,KAAKJ,MAAMM,SAASK,SAASC,IAAI,QACvCC,KAAMT,KAAKJ,MAAMM,SAASK,SAASC,IAAI,QACvCE,MAAOC,SAASX,KAAKJ,MAAMM,SAASK,SAASC,IAAI,SAAU,IAC3DI,MAAOZ,KAAKJ,MAAMM,SAASW,cAAcL,IAAI,Q,OAIjD,YAAAM,SAAA,WACEd,KAAKe,YACLf,KAAKgB,wBAGP,YAAAC,YAAA,WACEjB,KAAKD,aAAamB,cAClBlB,KAAKD,aAAe,MAGtB,YAAAoB,KAAA,sBACEnB,KAAKH,SAASuB,KAAK,aACnBpB,KAAKN,oBAAoB2B,SAASrB,KAAKI,MAAMkB,WAAU,WACrD,EAAKzB,SAASuB,KAAK,QAAS,KAAM,CAAEG,SAAU,MAC9C,EAAKC,kBAIT,YAAAC,aAAA,WACE,IAAMC,EAAiB,CACrBC,MAAO,CAAC,CAAEC,gBAAiB5B,KAAK6B,gBAAiBC,gBAAiB9B,KAAKI,KAAKC,MAE9EL,KAAKL,OAAOoC,SAAS,CAAC,QAAQ,YAAYC,KAAKC,UAAUP,KAAW,CAAEQ,WAAYlC,KAAKJ,SAGzF,YAAA4B,YAAA,WACExB,KAAKP,UAAU0C,SAGT,YAAApB,UAAR,sBACEf,KAAKN,oBAAoB0C,SAASpC,KAAKI,MAAMkB,WAAU,SAAAe,G,QAC/CC,EAAWC,OAAOC,KAAKH,EAAcI,OAC3C,EAAKC,QAAU,G,IACf,IAAkB,kBAAAJ,GAAQ,8BAAE,CAAvB,IACGK,EAAOhC,SADD,QACe,IAE3B,EAAK+B,QAAQE,KAAK,CAAEC,MADHR,EAAcI,MAAME,GACC,KAAKA,EAAI,IAAKG,MAAOH,K,iGAGxD,EAAKvC,KAAKC,IAAO,EAAKD,KAAKQ,MAC9B,EAAKR,KAAKC,GAAKgC,EAAcU,YAE1B,EAAKlB,kBACR,EAAKA,gBAAkBQ,EAAcT,qBAKnC,YAAAZ,qBAAR,sBACEhB,KAAKD,aAAaa,IAChBZ,KAAKL,OAAOqD,OAAOC,KAAK,aAAO,SAAAC,GAAS,OAAAA,aAAiB,QAAgB5B,WAAU,SAAC4B,G,MAC5EC,EAAW,EAAKlD,SAEtB,GADA,EAAKA,WAAa,EAAKL,MAAMM,SAASC,YACjC,EAAKF,UAAYkD,EAAU,CAC9B,EAAKpC,YACL,IACMqC,EAA8B,QAApB,EADG,EAAKzD,OAAO0D,uBACDC,cAAM,eAAEC,MAClCH,IACF,EAAKhD,KAAKC,GAAK+C,EAAWb,OAAOC,KAAKY,GAAY,W,sCArFjDI,GAAuB,oD,uBAAvBA,EAAuB,+E,8gBDlBpC,gBACE,gBAA8B,+BAAoB,OACpD,OAEA,wBAEA,cACE,kHACF,OAEA,gBACE,2BACE,oBAAW,sBAAW,OACtB,wBAAY,wDACV,8BACF,OACF,OACA,oBAAoE,gCAAS,EAAA/B,kBAC3E,oBAAU,qBAAS,OACrB,OACF,OAEA,iBACE,oBAA0B,gCAAS,EAAAD,iBAAe,kBAAM,OACxD,qBAAyC,gCAAS,EAAAL,UAAQ,gBAAI,OAChE,Q,MAZgB,mCACE,oC,sPCDlB","file":"replace-content-component.1b8e4e570ec1f27272c6.js","sourcesContent":["<div mat-dialog-title>\r\n  <div class=\"dialog-title-box\">Replace Content Item</div>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n<p class=\"dialog-description\">\r\n  By replacing a content-item you can make a other content appear in the slot of the original content.\r\n</p>\r\n\r\n<div class=\"options-box\">\r\n  <mat-form-field class=\"options-box__field\" appearance=\"standard\" color=\"accent\">\r\n    <mat-label>Choose item</mat-label>\r\n    <mat-select [(ngModel)]=\"item.id\" name=\"Language\">\r\n      <mat-option *ngFor=\"let option of options\" [value]=\"option.value\">{{ option.label }}</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  <button mat-icon-button class=\"options-box__copy\" matTooltip=\"Copy\" (click)=\"copySelected()\">\r\n    <mat-icon>file_copy</mat-icon>\r\n  </button>\r\n</div>\r\n\r\n<div class=\"dialog-component-actions\">\r\n  <button mat-raised-button (click)=\"closeDialog()\">Cancel</button>\r\n  <button mat-raised-button color=\"accent\" (click)=\"save()\">Save</button>\r\n</div>\r\n","import { Component, OnInit, OnDestroy, HostBinding } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { ContentGroupService } from '../manage-content-list/services/content-group.service';\r\nimport { ReplaceOption } from './models/replace-option.model';\r\nimport { ContentGroup, ContentGroupAdd } from '../manage-content-list/models/content-group.model';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { paramEncode } from '../shared/helpers/url-prep.helper';\r\n\r\n@Component({\r\n  selector: 'app-replace-content',\r\n  templateUrl: './replace-content.component.html',\r\n  styleUrls: ['./replace-content.component.scss']\r\n})\r\nexport class ReplaceContentComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  options: ReplaceOption[];\r\n  item: ContentGroupAdd;\r\n  contentTypeName: string;\r\n\r\n  private subscription = new Subscription();\r\n  private hasChild: boolean;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<ReplaceContentComponent>,\r\n    private contentGroupService: ContentGroupService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    this.hasChild = !!this.route.snapshot.firstChild;\r\n    this.item = {\r\n      id: null,\r\n      guid: this.route.snapshot.paramMap.get('guid'),\r\n      part: this.route.snapshot.paramMap.get('part'),\r\n      index: parseInt(this.route.snapshot.paramMap.get('index'), 10),\r\n      add: !!this.route.snapshot.queryParamMap.get('add'),\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getConfig();\r\n    this.refreshOnChildClosed();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.subscription = null;\r\n  }\r\n\r\n  save() {\r\n    this.snackBar.open('Saving...');\r\n    this.contentGroupService.saveItem(this.item).subscribe(() => {\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.closeDialog();\r\n    });\r\n  }\r\n\r\n  copySelected() {\r\n    const form: EditForm = {\r\n      items: [{ ContentTypeName: this.contentTypeName, DuplicateEntity: this.item.id }],\r\n    };\r\n    this.router.navigate([`edit/${paramEncode(JSON.stringify(form))}`], { relativeTo: this.route });\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private getConfig() {\r\n    this.contentGroupService.getItems(this.item).subscribe(replaceConfig => {\r\n      const itemKeys = Object.keys(replaceConfig.Items);\r\n      this.options = [];\r\n      for (const key of itemKeys) {\r\n        const nKey = parseInt(key, 10);\r\n        const itemName = replaceConfig.Items[nKey];\r\n        this.options.push({ label: `${itemName} (${nKey})`, value: nKey });\r\n      }\r\n      // don't set the ID if the dialog should be in add-mode\r\n      if (!this.item.id && !this.item.add) {\r\n        this.item.id = replaceConfig.SelectedId;\r\n      }\r\n      if (!this.contentTypeName) {\r\n        this.contentTypeName = replaceConfig.ContentTypeName;\r\n      }\r\n    });\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event: NavigationEnd) => {\r\n        const hadChild = this.hasChild;\r\n        this.hasChild = !!this.route.snapshot.firstChild;\r\n        if (!this.hasChild && hadChild) {\r\n          this.getConfig();\r\n          const navigation = this.router.getCurrentNavigation();\r\n          const editResult = navigation.extras?.state;\r\n          if (editResult) {\r\n            this.item.id = editResult[Object.keys(editResult)[0]];\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}