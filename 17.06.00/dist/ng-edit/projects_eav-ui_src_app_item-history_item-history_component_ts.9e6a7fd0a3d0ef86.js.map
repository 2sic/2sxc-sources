{"version":3,"file":"projects_eav-ui_src_app_item-history_item-history_component_ts.9e6a7fd0a3d0ef86.js","mappings":"uXAqBA,MAAAA,EAAA,YAUMC,EAA8B,IAAIC,MAAe,8BAA+B,CAClFC,WAAY,OACZC,QAASA,KACL,MAAMC,KAAUC,OAAOC,MACvB,MAAO,IAAMF,EAAQG,iBAAiBC,WAAW,CAAEC,eAbhC,IAaoE,IAQzFC,EAA+C,CACjDC,QAASX,EACTY,KAAM,CAACN,MACPO,WAPJ,SAASC,EAAoCV,GACzC,MAAO,IAAMA,EAAQG,iBAAiBC,WAAW,CAAEC,eAlB5B,IAmB3B,GAgBMM,EAA8B,IAAId,MAAe,8BAA+B,CAClFC,WAAY,OACZC,QAVJ,SAASa,IACL,MAAO,CACHC,UAAW,EACXC,UAAW,EACXC,kBAAmB,KAE3B,IAYMC,EAAc,gBAEdC,GAAyBC,QAAgC,CAAEC,SAAS,IAY1E,IAMMC,GAAU,MAAhB,MAAMA,EAEF,YAAIC,GACA,OAAOC,KAAKC,SAChB,CACA,YAAIF,CAASG,GACLA,IAAUF,KAAKC,YACfD,KAAKC,UAAYC,EACbF,KAAKG,cACLH,KAAKI,gBAAgBJ,KAAKG,aAC1BH,KAAKK,kBAAkBC,KAAK,GAC5BN,KAAKG,YAAYI,kBAG7B,CAKA,oBAAIC,GACA,OAAOR,KAAKS,iBAChB,CACA,oBAAID,CAAiBN,GACjBF,KAAKS,qBAAoBC,MAAsBR,GAC/CF,KAAKW,UACLX,KAAKG,YAAc,IACvB,CAEA,YAAIS,GACA,OAAOZ,KAAKa,SAChB,CACA,YAAID,CAASV,GACTF,KAAKa,aAAYH,MAAsBR,GAEnCF,KAAKa,UACLb,KAAKc,KAAK,GAGVd,KAAKe,kCAEb,CAEA,aAAIxB,GACA,OAAOS,KAAKgB,UAChB,CACA,aAAIzB,CAAUW,GACVF,KAAKgB,cAAaC,MAAqBf,EAC3C,CAEA,aAAIV,GACA,OAAOQ,KAAKkB,UAChB,CACA,aAAI1B,CAAUU,GACVF,KAAKkB,cAAaD,MAAqBf,GACnCF,KAAKK,mBACLL,KAAKK,iBAAiBc,qBAAuBnB,KAAKkB,WAE1D,CAEA,WAAIE,GACA,OAAOpB,KAAKqB,QAChB,CACA,WAAID,CAAQlB,GACRF,KAAKsB,eAAeC,kBAAkBvB,KAAKwB,YAAYC,cAAezB,KAAKqB,SAAU,WAIrFrB,KAAKqB,SAAoB,MAATnB,EAAgBwB,OAAOxB,GAAOyB,OAAS,IAClD3B,KAAKqB,UAAYrB,KAAK4B,oBACvB5B,KAAKc,KAAK,IAGVd,KAAKe,mCACLf,KAAK6B,wBACL7B,KAAK8B,QAAQC,kBAAkB,KAK3BC,QAAQC,UAAUC,KAAK,KACnBlC,KAAKsB,eAAea,SAASnC,KAAKwB,YAAYC,cAAezB,KAAKoB,QAAS,UAAS,EACvF,GAGb,CAEA,gBAAIgB,GACA,OAAOpC,KAAKqC,aAChB,CACA,gBAAID,CAAalC,GACbF,KAAKqC,cAAgBnC,EACjBF,KAAKK,kBACLL,KAAKsC,iBAAiBtC,KAAKqC,cAEnC,CACAE,YAAYC,EAAUhB,EAAaiB,EAAmBC,EAAmBZ,EAASa,EAAWrB,EAAgBsB,EAAeC,EAAgBC,EAAMC,EAAiBC,IAC/JhD,KAAKwC,SAAWA,EAChBxC,KAAKwB,YAAcA,EACnBxB,KAAKyC,kBAAoBA,EACzBzC,KAAK0C,kBAAoBA,EACzB1C,KAAK8B,QAAUA,EACf9B,KAAK2C,UAAYA,EACjB3C,KAAKsB,eAAiBA,EACtBtB,KAAK4C,cAAgBA,EACrB5C,KAAK8C,KAAOA,EACZ9C,KAAK+C,gBAAkBA,EACvB/C,KAAKC,UAAY,QACjBD,KAAKS,mBAAoB,EACzBT,KAAKa,WAAY,EACjBb,KAAKiD,kBAAmB,EACxBjD,KAAKkD,+BAAgC,EACrClD,KAAKmD,kBAAoBC,GACzBpD,KAAKqD,gBAAkB,EACvBrD,KAAKsD,gBAAkB,UAevBtD,KAAKuD,cAAgB,OACrBvD,KAAKqB,SAAW,GAEhBrB,KAAKwD,kBAAoB,GAEzBxD,KAAKyD,WAAa,IAAIC,IACtB1D,KAAK2D,gBAAkBd,EACvB7C,KAAKgD,UAAYA,GACbD,IACA/C,KAAKgB,WAAa+B,EAAgBxD,UAClCS,KAAKkB,WAAa6B,EAAgBvD,UAC9BuD,EAAgBhD,WAChBC,KAAKD,SAAWgD,EAAgBhD,UAEhCgD,EAAgBvC,mBAChBR,KAAKQ,iBAAmBuC,EAAgBvC,kBAExCuC,EAAgBQ,gBAChBvD,KAAKuD,cAAgBR,EAAgBQ,gBAG7CT,EAAKc,OAAOC,QAAKC,KAAU9D,KAAKyD,aAAaM,UAAU,KAC/C/D,KAAKG,aACLH,KAAKI,gBAAgBJ,KAAKG,YAAW,GAG7CH,KAAKqD,gBApK0B,CAqKnC,CACAW,kBAEIhE,KAAKiD,kBAAmB,EACxBjD,KAAKe,mCACLf,KAAK4C,cACAqB,QAAQjE,KAAKwB,aACbqC,QAAKC,KAAU9D,KAAKyD,aACpBM,UAAUG,IAENA,EAGe,aAAXA,GACLlE,KAAK8B,QAAQqC,IAAI,IAAMnE,KAAKM,QAH5BN,KAAK8B,QAAQqC,IAAI,IAAMnE,KAAKc,KAAK,GAAE,EAM/C,CAIAsD,cACI,MAAM3C,EAAgBzB,KAAKwB,YAAYC,cACvC4C,aAAarE,KAAKsE,oBACdtE,KAAKG,cACLH,KAAKG,YAAYoE,UACjBvE,KAAKK,iBAAmB,MAG5BL,KAAKwD,kBAAkBgB,QAAQ,EAAEC,EAAOC,MACpCjD,EAAckD,oBAAoBF,EAAOC,EAAU/E,EAAsB,GAE7EK,KAAKwD,kBAAkBoB,OAAS,EAChC5E,KAAKyD,WAAWoB,OAChB7E,KAAKyD,WAAWqB,WAChB9E,KAAKsB,eAAeC,kBAAkBE,EAAezB,KAAKoB,QAAS,WACnEpB,KAAK4C,cAAcmC,eAAetD,EACtC,CAEAnB,KAAK0E,EAAQhF,KAAKT,UAAW2E,GACzB,GAAIlE,KAAKY,WAAaZ,KAAKoB,SAAWpB,KAAK4B,oBAEvC,YADA5B,KAAKK,kBAAkB4E,2BAG3B,MAAMC,EAAalF,KAAKmF,eAAejB,GACvClE,KAAKW,UACLX,KAAKoF,QACDpF,KAAKoF,SAAW,IAAIC,KAAgBrF,KAAKmD,kBAAmBnD,KAAK0C,mBACrE,MAAM4C,EAAYtF,KAAKK,iBAAmB6E,EAAWK,OAAOvF,KAAKoF,SAASE,SAC1EA,EAASE,gBAAkBxF,KAAKwB,YAAYC,cAC5C6D,EAASnE,qBAAuBnB,KAAKkB,WACrCoE,EACKG,cACA5B,QAAKC,KAAU9D,KAAKyD,aACpBM,UAAU,IAAM/D,KAAKW,WAC1BX,KAAKsC,iBAAiBtC,KAAKqC,eAC3BrC,KAAK6B,wBACLyD,EAAShF,KAAK0E,EAClB,CAEAlE,KAAKkE,EAAQhF,KAAKR,WACd,MAAM8F,EAAWtF,KAAKK,iBAClBiF,IACIA,EAASI,YACTJ,EAASxE,KAAKkE,IAGdM,EAASL,2BACTjF,KAAKW,WAGjB,CAEAgF,OAAOzB,GACHlE,KAAK4B,oBAAsB5B,KAAKc,OAASd,KAAKM,UAAKsF,EAAW1B,EAClE,CAEAtC,oBACI,QAAS5B,KAAKK,kBAAoBL,KAAKK,iBAAiBqF,WAC5D,CAEAP,eAAejB,GACX,GAAIlE,KAAKG,YAAa,CAClB,MAAM0F,EAAmB7F,KAAKG,YAAY2F,YACrCC,iBACL,KAAM/F,KAAKQ,mBAAqB0D,IAAW2B,EAAiBG,mBAAmBC,MAC3E,OAAOjG,KAAKG,YAEhBH,KAAKW,SACT,CACA,MAAMuF,EAAsBlG,KAAKyC,kBAAkB0D,4BAA4BnG,KAAKwB,aAE9E4E,EAAWpG,KAAKwC,SACjBzC,WACAsG,oBAAoBrG,KAAKQ,kBAAmB0D,GAA6BlE,KAAKwB,aAC9E8E,sBAAuB,IAAGtG,KAAKsD,2BAC/BiD,wBAAuB,GACvBC,mBAAmBxG,KAAKqD,iBACxBoD,yBAAyBP,GAC9BE,SAASM,gBAAgB7C,QAAKC,KAAU9D,KAAKyD,aAAaM,UAAUH,IAChE5D,KAAK2G,4BAA4B/C,EAAOgD,gBACpC5G,KAAKK,kBACDuD,EAAOiD,yBAAyBC,kBAAoB9G,KAAKK,iBAAiBqF,aAG1E1F,KAAK8B,QAAQqC,IAAI,IAAMnE,KAAKc,KAAK,GAAE,GAI/Cd,KAAKG,YAAcH,KAAKwC,SAASuE,OAAO,CACpCC,UAAWhH,KAAK8C,KAChBiD,iBAAkBK,EAClBa,WAAa,GAAEjH,KAAKsD,mBAAmB5D,IACvCmD,eAAgB7C,KAAK2D,oBAEzB3D,KAAKI,gBAAgBJ,KAAKG,aAC1BH,KAAKG,YACA+G,cACArD,QAAKC,KAAU9D,KAAKyD,aACpBM,UAAU,IAAM/D,KAAKW,WAC1BX,KAAKG,YACAgH,uBACAtD,QAAKC,KAAU9D,KAAKyD,aACpBM,UAAU,IAAM/D,KAAKK,kBAAkB+G,0BAC5CpH,KAAKG,YACAkH,gBACAxD,QAAKC,KAAU9D,KAAKyD,aACpBM,UAAUU,IACPzE,KAAK4B,qBAAuB6C,EAAM6C,UAAYC,QAAU,EAACC,MAAe/C,KACxEA,EAAMgD,iBACNhD,EAAMiD,kBACN1H,KAAK8B,QAAQqC,IAAI,IAAMnE,KAAKc,KAAK,IAAE,GAGvCd,KAAK+C,iBAAiB4E,6BACtB3H,KAAKG,YAAYyH,cAAe,GAAE5H,KAAKsD,iDAEpCtD,KAAKG,WAChB,CAEAQ,UACQX,KAAKG,aAAeH,KAAKG,YAAY0H,eACrC7H,KAAKG,YAAY2H,SAErB9H,KAAKK,iBAAmB,IAC5B,CAEAD,gBAAgB8E,GACZ,MAAMnF,EAAWmF,EAAWY,YAAYC,iBAClC7B,EAASlE,KAAK+H,aACdrJ,EAAUsB,KAAKgI,sBACrBjI,EAASkI,cAAc,CACnBjI,KAAKkI,WAAW,IAAKhE,EAAOiE,QAASzJ,EAAQyJ,OAC7CnI,KAAKkI,WAAW,IAAKhE,EAAOkE,YAAa1J,EAAQ0J,YAEzD,CAEAF,WAAWnI,GACP,MACMsI,GAASrI,KAAK8C,MAA2B,OAAnB9C,KAAK8C,KAAK5C,MACtC,MAAyB,QAArBH,EAASuI,QACTvI,EAASwI,SArUQ,EAuUS,WAArBxI,EAASuI,QACdvI,EAASwI,QAxUQ,EA0US,UAArBxI,EAASyI,QACdzI,EAAS0I,QAAUJ,GA3UF,IA6US,QAArBtI,EAASyI,UACdzI,EAAS0I,QAAUJ,EA9UF,MAgVdtI,CACX,CAKAgI,aACI,MAAMM,GAASrI,KAAK8C,MAA2B,OAAnB9C,KAAK8C,KAAK5C,MAChCH,EAAWC,KAAKD,SACtB,IAAI2I,EACY,SAAZ3I,GAAmC,SAAZA,EACvB2I,EAAiB,CAAEF,QAAS,SAAUF,QAAqB,SAAZvI,EAAsB,MAAQ,UAE5D,UAAZA,GACQ,QAAZA,GAAsBsI,GACV,SAAZtI,IAAwBsI,EACzBK,EAAiB,CAAEF,QAAS,QAASF,QAAS,WAE7B,SAAZvI,GACQ,SAAZA,GAAuBsI,GACX,QAAZtI,IAAuBsI,KACxBK,EAAiB,CAAEF,QAAS,MAAOF,QAAS,WAKhD,MAAQK,IAAGC,KAAM5I,KAAK6I,gBAAgBH,EAAeF,QAASE,EAAeJ,SAC7E,MAAO,CACHH,KAAMO,EACNN,SAAU,CAAEI,QAASG,EAAGL,QAASM,GAEzC,CAEAZ,sBACI,MAAMK,GAASrI,KAAK8C,MAA2B,OAAnB9C,KAAK8C,KAAK5C,MAChCH,EAAWC,KAAKD,SACtB,IAAI+I,EACY,SAAZ/I,EACA+I,EAAkB,CAAEC,SAAU,SAAUC,SAAU,UAEjC,SAAZjJ,EACL+I,EAAkB,CAAEC,SAAU,SAAUC,SAAU,OAEjC,UAAZjJ,GACQ,QAAZA,GAAsBsI,GACV,SAAZtI,IAAwBsI,EACzBS,EAAkB,CAAEC,SAAU,MAAOC,SAAU,WAE9B,SAAZjJ,GACQ,SAAZA,GAAuBsI,GACX,QAAZtI,IAAuBsI,KACxBS,EAAkB,CAAEC,SAAU,QAASC,SAAU,WAKrD,MAAQL,IAAGC,KAAM5I,KAAK6I,gBAAgBC,EAAgBC,SAAUD,EAAgBE,UAChF,MAAO,CACHb,KAAMW,EACNV,SAAU,CAAEW,SAAUJ,EAAGK,SAAUJ,GAE3C,CAEA/G,wBAGQ7B,KAAKK,mBACLL,KAAKK,iBAAiBe,QAAUpB,KAAKoB,QACrCpB,KAAKK,iBAAiB4I,gBACtBjJ,KAAK8B,QAAQoH,iBAAiBrF,QAAKsF,KAAK,IAAC,EAAGrF,KAAU9D,KAAKyD,aAAaM,UAAU,KAC1E/D,KAAKK,kBACLL,KAAKG,YAAYI,gBAAe,GAIhD,CAEA+B,iBAAiBF,GACTpC,KAAKK,mBACLL,KAAKK,iBAAiB+B,aAAeA,EACrCpC,KAAKK,iBAAiB4I,gBAE9B,CAEAJ,gBAAgBF,EAAGC,GACf,MAAsB,UAAlB5I,KAAKD,UAA0C,UAAlBC,KAAKD,SACxB,QAAN6I,EACAA,EAAI,SAEO,WAANA,IACLA,EAAI,OAIE,QAAND,EACAA,EAAI,QAEO,UAANA,IACLA,EAAI,OAGL,CAAEA,IAAGC,IAChB,CAEAjC,4BAA4BC,GACxB,MAAQoC,WAAUR,UAASF,WAAY1B,EACvC,IAAIwC,EAiBJ,GATQA,EALS,WAAbJ,EAIIhJ,KAAK8C,MAA4B,QAApB9C,KAAK8C,KAAK5C,MACG,QAAZsI,EAAoB,OAAS,QAGjB,UAAZA,EAAsB,OAAS,QAItB,WAAbQ,GAAqC,QAAZV,EAAoB,QAAU,QAErEc,IAAgBpJ,KAAKqJ,iBAAkB,CACvC,MAAMnE,EAAalF,KAAKG,YACxB,GAAI+E,EAAY,CACZ,MAAMoE,EAAe,GAAEtJ,KAAKsD,mBAAmB5D,KAC/CwF,EAAWqE,iBAAiBD,EAActJ,KAAKqJ,kBAC/CnE,EAAW0C,cAAc0B,EAAcF,EAC3C,CACApJ,KAAKqJ,iBAAmBD,CAC5B,CACJ,CAEArI,mCAEQf,KAAKa,YACJb,KAAKoB,UACLpB,KAAKiD,kBACNjD,KAAKwD,kBAAkBoB,SAKvB5E,KAAKwJ,+BACLxJ,KAAKwD,kBAAkBiG,KAAK,CACxB,aACAhF,IAEI,IAAIiF,EADJ1J,KAAK2J,uCAEW/D,IAAZnB,EAAMkE,QAA+B/C,IAAZnB,EAAMmE,IAC/Bc,EAAQjF,GAEZzE,KAAKM,UAAKsF,EAAW8D,EAAK,IAIN,QAAvB1J,KAAKuD,gBACVvD,KAAK4J,oCACL5J,KAAKwD,kBAAkBiG,KAAK,CACxB,aACAhF,IACI,MAAMoF,EAAQpF,EAAMqF,gBAAgB,GAC9B5F,EAAS2F,EAAQ,CAAElB,EAAGkB,EAAME,QAASnB,EAAGiB,EAAMG,cAAYpE,EAGhE5F,KAAK2J,kCACLtF,aAAarE,KAAKsE,oBAClBtE,KAAKsE,mBAAqB2F,WAAW,IAAMjK,KAAKM,UAAKsF,EAAW1B,GA5f5D,IA4foF,KAIpGlE,KAAKkK,cAAclK,KAAKwD,mBAC5B,CACAmG,kCACI,GAAI3J,KAAKkD,8BACL,OAEJlD,KAAKkD,+BAAgC,EACrC,MAAMiH,EAAgB,GACtB,GAAInK,KAAKwJ,+BACLW,EAAcV,KAAK,CACf,aACAhF,IACI,MAAM2F,EAAY3F,EAAM4F,gBACnBD,IAAcpK,KAAKG,aAAamK,eAAeC,SAASH,KACzDpK,KAAKc,MAAK,GAGnB,CAAC,QAAS2D,GAASzE,KAAKwK,eAAe/F,UAAO,GAErB,QAAvBzE,KAAKuD,cAAyB,CACnCvD,KAAK4J,oCACL,MAAMa,EAAmBA,KACrBpG,aAAarE,KAAKsE,oBAClBtE,KAAKc,KAAKd,KAAK+C,gBAAgBtD,kBAAiB,EAEpD0K,EAAcV,KAAK,CAAC,WAAYgB,GAAmB,CAAC,cAAeA,GACvE,CACAzK,KAAKkK,cAAcC,GACnBnK,KAAKwD,kBAAkBiG,QAAQU,EACnC,CACAD,cAAcQ,GACVA,EAAUlG,QAAQ,EAAEC,EAAOC,MACvB1E,KAAKwB,YAAYC,cAAckJ,iBAAiBlG,EAAOC,EAAU/E,EAAsB,EAE/F,CACA6J,+BACI,OAAQxJ,KAAK2C,UAAUiI,MAAQ5K,KAAK2C,UAAUkI,OAClD,CAEAL,eAAe/F,GACX,GAAIzE,KAAK4B,oBAAqB,CAC1B,MAAMkJ,EAAsB9K,KAAKgD,UAAU+H,iBAAiBtG,EAAMsF,QAAStF,EAAMuF,SAC3EgB,EAAUhL,KAAKwB,YAAYC,cAK7BqJ,IAAwBE,IAAYA,EAAQT,SAASO,IACrD9K,KAAKc,MAEb,CACJ,CAEA8I,oCACI,MAAMqB,EAAWjL,KAAKuD,cACtB,GAAiB,QAAb0H,EAAoB,CACpB,MAAMD,EAAUhL,KAAKwB,YAAYC,cAC3ByJ,EAAQF,EAAQE,OAGL,OAAbD,GAA2C,UAArBD,EAAQG,UAA6C,aAArBH,EAAQG,YAC9DD,EAAME,WACFF,EAAMG,aACFH,EAAMI,iBACFJ,EAAMK,cACF,SAIH,OAAbN,IAAsBD,EAAQQ,aAC9BN,EAAMO,eAAiB,QAE3BP,EAAMQ,YAAc,OACpBR,EAAMS,wBAA0B,aACpC,CACJ,CAACC,SACQ5L,KAAK6L,UAAI,SAAAC,GAAA,WAAAA,GAAwFhM,GAAViM,MAAsCC,MAAtCD,MAA6DA,OAA7DA,MAAuFC,MAAvFD,MAAuHA,OAAvHA,MAAuJA,OAAvJA,MAA6KE,MAA7KF,MAAqMG,MAArMH,MAAkOG,MAAlOH,MAA8PzN,GAA9PyN,MAAsSI,MAAtSJ,MAAoU1M,EAA2B,GAA/V0M,MAA4XK,MAAQ,EAA4CR,SACvgB5L,KAAKqM,UADkFN,MAAE,CAAAO,KACJxM,EAAUyM,UAAA,uBAAAC,UAAA,8BAAAC,SAAA,EAAAC,aAAA,SAAAC,EAAAC,GAAA,EAAAD,GADRZ,MAAE,2BAAAa,EAAAhM,SAAA,EAAAiM,OAAA,CAAA9M,SAAA,kCAAAS,iBAAA,kDAAAI,SAAA,kCAAArB,UAAA,oCAAAC,UAAA,oCAAA+D,cAAA,4CAAAnC,QAAA,yBAAAgB,aAAA,oCAAA0K,SAAA,iBAErG,OAjkBKhN,CAAU,KAonBVsD,GAAgB,MAAtB,MAAMA,EACFb,YAAYwK,EAAoBvL,EAAawL,GACzChN,KAAK+M,mBAAqBA,EAC1B/M,KAAKwB,YAAcA,EAEnBxB,KAAKiN,cAAe,EAEpBjN,KAAKkN,qBAAsB,EAE3BlN,KAAKmN,YAAa,EAElBnN,KAAKoN,QAAU,IAAI1J,IAEnB1D,KAAKqN,eAAiB,uBAEtBrN,KAAKsN,eAAiB,uBACtBtN,KAAKuN,oBAAwC,mBAAlBP,CAC/B,CAKA1M,KAAK0E,GAE0B,MAAvBhF,KAAKwN,gBACLnJ,aAAarE,KAAKwN,gBAEtBxN,KAAKyN,eAAiBxD,WAAW,KAC7BjK,KAAK0N,mBAAkB,GACvB1N,KAAKyN,oBAAiB7H,GACvBZ,EACP,CAKAlE,KAAKkE,GAE0B,MAAvBhF,KAAKyN,gBACLpJ,aAAarE,KAAKyN,gBAEtBzN,KAAKwN,eAAiBvD,WAAW,KAC7BjK,KAAK0N,mBAAkB,GACvB1N,KAAKwN,oBAAiB5H,GACvBZ,EACP,CAEAS,cACI,OAAOzF,KAAKoN,OAChB,CAEA1H,YACI,OAAO1F,KAAKmN,UAChB,CACA/I,cACIpE,KAAKiF,2BACLjF,KAAKoN,QAAQtI,WACb9E,KAAKwF,gBAAkB,IAC3B,CAMA4B,yBACQpH,KAAKkN,qBACLlN,KAAKc,KAAK,EAElB,CAMAmI,gBACIjJ,KAAK+M,mBAAmBY,cAC5B,CACAC,mBAAoBvD,oBACXA,IAAkBrK,KAAKwF,gBAAgB+E,SAASF,MAC7CrK,KAAK0F,YACL1F,KAAKc,KAAKd,KAAKmB,sBAGfnB,KAAK6N,oBAAmB,GAGpC,CAMAC,UACI9N,KAAKiN,aAAejN,KAAK+N,sBACzB/N,KAAKiJ,eACT,CAEA8E,sBACI,MAAMC,EAAOhO,KAAKwB,YAAYC,cAAcwM,wBAC5C,OAAOD,EAAKE,OA/tBD,IA+tBwBF,EAAKG,OA9tB9B,GA+tBd,CAEAC,qBAAsBC,mBACdA,IAAkBrO,KAAKqN,gBAAkBgB,IAAkBrO,KAAKsN,iBAChEtN,KAAK6N,mBAAmBQ,IAAkBrO,KAAKqN,eAEvD,CAEApI,2BAC+B,MAAvBjF,KAAKyN,gBACLpJ,aAAarE,KAAKyN,gBAEK,MAAvBzN,KAAKwN,gBACLnJ,aAAarE,KAAKwN,gBAEtBxN,KAAKyN,eAAiBzN,KAAKwN,oBAAiB5H,CAChD,CAEAiI,mBAAmBS,GACXA,EACAtO,KAAKkN,qBAAsB,EAErBlN,KAAK0F,aACX1F,KAAKoN,QAAQvI,MAErB,CAEA6I,kBAAkBhI,GAId,MAAM6I,EAAUvO,KAAKwO,SAAS/M,cACxBgN,EAAYzO,KAAKqN,eACjBqB,EAAY1O,KAAKsN,eAMvB,GALAiB,EAAQI,UAAUC,OAAOlJ,EAAYgJ,EAAYD,GACjDF,EAAQI,UAAUE,IAAInJ,EAAY+I,EAAYC,GAC9C1O,KAAKmN,WAAazH,EAGdA,IAAc1F,KAAKuN,qBAAmD,mBAArBuB,iBAAiC,CAClF,MAAMC,EAASD,iBAAiBP,IAEsB,OAAlDQ,EAAOC,iBAAiB,uBACsB,SAA9CD,EAAOC,iBAAiB,qBACxBhP,KAAKuN,qBAAsB,EAEnC,CACI7H,GACA1F,KAAK8N,UAEL9N,KAAKuN,sBACLgB,EAAQI,UAAUE,IAAI,2BACtB7O,KAAK6N,mBAAmBnI,GAEhC,CAACkG,SACQ5L,KAAK6L,UAAI,SAAAC,GAAA,WAAAA,GAAwF1I,GAhNV2I,MAgN4CA,OAhN5CA,MAgN6EA,OAhN7EA,MAgNuGkD,MAAqB,KAA4DrD,SAC/Q5L,KAAKkP,UAjNkFnD,MAAE,CAAAO,KAiNJlJ,EAAgBmJ,UAAA,4BAAA4C,UAAA,SAAAxC,EAAAC,GAjNZ,GAiNY,EAAAD,GAjNdZ,MAAE1N,EAAA,KAAAsO,EAAA,KAAAyC,EAAFrD,MAAEqD,EAAFrD,WAAEa,EAAA4B,SAAAY,EAAAC,MAAA,GAAA7C,UAAA,eAiNsF,QAAMC,SAAA,EAAAC,aAAA,SAAAC,EAAAC,GAAA,EAAAD,GAjN9FZ,MAAE,sBAAAuD,GAAA,OAiNJ1C,EAAAgB,kBAAA0B,EAAyB,KAAA3C,GAjNvBZ,MAAE,OAAAa,EAAAlH,YAAA,SAAA6J,MAAA,EAAAC,KAAA,EAAAC,OAAA,iKAAAC,SAAA,SAAA/C,EAAAC,GAAA,EAAAD,IAAFZ,MAAE,aAAFA,MAAE,wBAAAuD,GAAA,OAiN+d1C,EAAAwB,oBAAAkB,EAA2B,GAjN5fvD,MAAE,WAAFA,MAAE,GAAFA,WAiN0oB,EAAAY,IAjN1oBZ,MAAE,yBAAAa,EAAAK,cAAFlB,MAAE,UAAAa,EAAAxK,cAAF2J,MAAE,GAAFA,MAAEa,EAAAxL,SAiNkoB,EAAAuO,aAAA,CAAsqJC,MAAUb,OAAA,4lJAAAc,cAAA,EAAAC,gBAAA,IACv5K,OA7JK1M,CAAgB,KAqMhB2M,GAAgB,MAAtB,MAAMA,EAAiBnE,SACV5L,KAAK6L,UAAI,SAAAC,GAAA,WAAAA,GAAwFiE,EAAgB,EAAkDnE,SACnK5L,KAAKgQ,UA5PkFjE,MAAE,CAAAO,KA4PSyD,IAAqNnE,SACvT5L,KAAKiQ,UA7PkFlE,MAAE,CAAAmE,UA6PsC,CAAClR,GAA6CmR,QAAA,CAAYC,KAAYC,KAAcC,KAAeC,KAAiBA,KAAiBC,QAChR,OAJKT,CAAgB,kBCl4BtB,SAAAU,GAAA9D,EAAAC,GA8QktD,GA9QltD,EAAAD,IAiCoGZ,MAAE,mBAAFA,MAAE,GAAFA,SA6O8mD,EAAAY,EAAA,OAAA+D,EAAA9D,EAAA+D,UA7O9mD5E,MAAE,QAAA2E,GAAF3E,MAAE,GAAFA,MAAE,IAAA2E,EAAA,IA6O+lD,WAAAE,GAAAjE,EAAAC,GAAA,KAAAD,EAAA,OAAAkE,EA7OjmD9E,cAAE,sBAAFA,CA6O8/B,mBA7O9/BA,MAAE,2BAAAuD,GAAFvD,MAAE8E,GAAA,MAAAC,EAAF/E,MAAE,UAAFA,MA6O00C+E,EAAAC,gBAAAzB,EAAApP,OAA6B,GA7Ov2C6L,MAAE,EAAA0E,GAAA,oBAAF1E,gBA6O0pD,MAAAY,EAAA,OAAAqE,EA7O1pDjF,MAAE,GAAFA,MAAE,aAAAiF,EAAAC,qBAAFlF,CA6Oo6B,QAAAiF,EAAAE,OA7Op6BnF,MAAE,GAAFA,MAAE,QAAAiF,EAAAG,SAAFpF,CA6O2jC,WAAAiF,EAAApQ,SA7O3jCmL,CA6O2jC,kBAAAiF,EAAAI,iBA7O3jCrF,CA6O2jC,aAAAiF,EAAAK,aAAApK,YAAA,GA7O3jC8E,CA6O2jC,yBAAAiF,EAAAK,aAAAC,wBA7O3jCvF,MAAE,GAAFA,MAAEiF,EAAAO,0BA6O6nD,WAAAC,GAAA7E,EAAAC,GAA2M,GAA3M,EAAAD,IA7O/nDZ,MAAE,YAAFA,MAAE,GAAFA,SA6O00D,EAAAY,EAAA,OAAA8E,EA7O10D1F,MAAE,GAAFA,MAAE,GAAFA,MAAE0F,EAAAN,SA6Ok0D,WAAAO,GAAA/E,EAAAC,GAA+B,GAA/B,EAAAD,IA7Op0DZ,MAAE,WAAFA,CA6O4oB,YA7O5oBA,MAAE,GAAFA,cAAE,EAAA6E,GAAA,wBAAF7E,CA6OksD,EAAAyF,GAAA,cA7OlsDzF,SA6Om2D,EAAAY,EAAA,OAAAgF,EA7On2D5F,cAAE,GAAFA,MAAE,KAAA4F,EAAAP,kBAAFrF,MAAE,GAAFA,MAAE,IAAA4F,EAAAC,MAAAC,kBAAA,KAAF9F,MAAE,GAAFA,MAAE,EAAA4F,EAAAJ,0BAAA3M,OAAA,QAAFmH,MAAE,GAAFA,MAAE,EAAA4F,EAAAJ,0BAAA3M,QAAA,OA6Om1D,WAAAkN,GAAAnF,EAAAC,GAAA,KAAAD,EAAA,OAAAoF,EA7Or1DhG,cAAE,eAAFA,MAAE,mBAAFA,MAAEgG,GAAA,MAAAC,EAAFjG,QAAE,OAAFA,MA6OwuEiG,EAAAC,YAAW,GA7OnvElG,cAAE,WAAFA,MAAE,aAAFA,SA6OiyF,MAAAY,EAAA,OAAAuF,EA7OjyFnG,cAAE,aAAAmG,EAAAN,MAAAO,eAAFpG,CA6Ow2E,qBAAAmG,EAAAE,2BA7Ox2ErG,CA6Ow2E,6BA7Ox2EA,CA6Ow2E,WAAAmG,EAAAE,4BA7Ox2ErG,MAAE,aAAAmG,EAAAN,MAAAO,eA6O+yE,WAAAE,GAAA1F,EAAAC,GAAA,KAAAD,EAAA,OAAA2F,EA7OjzEvG,8BAAE,eAAFA,MAAE,mBAAFA,MAAEuG,GAAA,MAAAC,EAAFxG,QAAE,OAAFA,MA6O00IwG,EAAAC,WAAU,GA7Op1IzG,cAAE,WAAFA,MAAE,aAAFA,SA6Ow3J,MAAAY,EAAA,OAAA8F,EA7Ox3J1G,cAAE,aAAA0G,EAAAb,MAAAc,cAAF3G,CA6Ou8I,qBAAA0G,EAAAE,uBA7Ov8I5G,CA6Ou8I,6BA7Ov8IA,CA6Ou8I,WAAA0G,EAAAE,wBA7Ov8I5G,MAAE,aAAA0G,EAAAb,MAAAc,cA6O+4I,MA1Q/+IE,EAAgB,MAAtB,MAAMA,EACFrQ,cAKIvC,KAAK6S,QAAU,IAAInP,IAEnB1D,KAAK6R,kBAAoB,kBAEzB7R,KAAK8S,cAAgB,YAErB9S,KAAK+S,kBAAoB,gBAEzB/S,KAAKmS,eAAiB,aAEtBnS,KAAK0S,cAAgB,YAErB1S,KAAKgT,cAAgB,CAACC,EAAM9B,EAAUvM,KAClC,GAAc,GAAVA,GAA2B,GAAZuM,EACf,MAAQ,QAAOvM,IAGnB,MAAMsO,EAAaD,EAAO9B,EAG1B,MAAQ,GAAE+B,EAAa,YADNA,GAHjBtO,EAASuO,KAAKC,IAAIxO,EAAQ,IAGauO,KAAKE,IAAIH,EAAa/B,EAAUvM,GAAUsO,EAAa/B,QACjDvM,GAAO,CAE5D,CAACgH,SACQ5L,KAAK6L,UAAI,SAAAC,GAAA,WAAAA,GAAwF8G,EAAgB,EAAoDhH,SACrK5L,KAAKsT,WADkFvH,MAAE,CAAAwH,MACYX,EAAgBnU,QAAhBmU,EAAgB/G,UAAArN,WAAc,SAC/I,OA/BKoU,CAAgB,KAyCtB,MAAMY,GAA8B,CAEhCvU,QAAS2T,EACT1T,KAAM,CAAC,CAAC,IAAIuU,MAAY,IAAIC,MAAYd,IACxCzT,WARJ,SAASwU,GAAoCC,GACzC,OAAOA,GAAc,IAAIhB,CAC7B,GAkBMiB,GAAgC,IAAItV,MAAe,iCAGnDuV,IAAyBC,SAAcC,QAAiB,UAE9D,IAAIC,GAAe,EAMbC,GAAY,MAAlB,MAAMA,UAAqBJ,GAEvB,aAAIK,GACA,OAAOnU,KAAKoU,UAChB,CACA,aAAID,CAAUjU,GACVF,KAAKoU,WAAajB,KAAKC,OAAInS,MAAqBf,GAAQ,GACxDF,KAAK+M,mBAAmBY,cAC5B,CAEA,UAAI/I,GACA,OAAO5E,KAAKqU,OAChB,CACA,UAAIzP,CAAO1E,GACPF,KAAKqU,WAAUpT,MAAqBf,GACpCF,KAAK+M,mBAAmBY,cAC5B,CAEA,YAAIwD,GACA,OAAOnR,KAAKsU,SAChB,CACA,YAAInD,CAASjR,GACTF,KAAKsU,UAAYnB,KAAKC,OAAInS,MAAqBf,GAAQ,GACvDF,KAAKuU,iCACT,CAEA,mBAAIC,GACA,OAAOxU,KAAKyU,gBAChB,CACA,mBAAID,CAAgBtU,GAChBF,KAAKyU,kBAAoBvU,GAAS,IAAIwU,IAAIC,MAAK1T,MAAqB0T,IACpE3U,KAAKuU,iCACT,CAEA,gBAAIK,GACA,OAAO5U,KAAK6U,aAChB,CACA,gBAAID,CAAa1U,GACbF,KAAK6U,iBAAgBnU,MAAsBR,EAC/C,CAEA,wBAAI4U,GACA,OAAO9U,KAAK+U,qBAChB,CACA,wBAAID,CAAqB5U,GACrBF,KAAK+U,yBAAwBrU,MAAsBR,EACvD,CACAqC,YAAYqP,EAAO7E,EAAoBiI,GAgBnC,GAfAC,QACAjV,KAAK4R,MAAQA,EACb5R,KAAK+M,mBAAqBA,EAE1B/M,KAAKoR,iBAAoB,iCAAgC6C,KACzDjU,KAAKoU,WAAa,EAClBpU,KAAKqU,QAAU,EACfrU,KAAKyU,iBAAmB,GACxBzU,KAAK6U,eAAgB,EACrB7U,KAAK+U,uBAAwB,EAE7B/U,KAAKqR,aAAe,CAAC,EAErBrR,KAAKiT,KAAO,IAAIiC,MAChBlV,KAAKmV,aAAevD,EAAMiB,QAAQ9O,UAAU,IAAM/D,KAAK+M,mBAAmBY,gBACtEqH,EAAU,CACV,MAAQ7D,WAAUqD,kBAAiBI,eAAcE,wBAAyBE,EAC1D,MAAZ7D,IACAnR,KAAKsU,UAAYnD,GAEE,MAAnBqD,IACAxU,KAAKyU,iBAAmBD,GAER,MAAhBI,IACA5U,KAAK6U,cAAgBD,GAEG,MAAxBE,IACA9U,KAAK+U,sBAAwBD,EAErC,CACA9U,KAAKiR,qBAAuB+D,GAAUI,qBAAuB,SACjE,CACAC,WACIrV,KAAKsV,cAAe,EACpBtV,KAAKuU,kCACLvU,KAAKuV,kBACT,CACAnR,cACIpE,KAAKmV,aAAaK,aACtB,CAEAC,WACI,IAAKzV,KAAK0V,cACN,OAEJ,MAAMC,EAAoB3V,KAAKmU,UAC/BnU,KAAKmU,UAAYnU,KAAKmU,UAAY,EAClCnU,KAAK4V,eAAeD,EACxB,CAEAE,eACI,IAAK7V,KAAK8V,kBACN,OAEJ,MAAMH,EAAoB3V,KAAKmU,UAC/BnU,KAAKmU,UAAYnU,KAAKmU,UAAY,EAClCnU,KAAK4V,eAAeD,EACxB,CAEA1D,YAEI,IAAKjS,KAAK8V,kBACN,OAEJ,MAAMH,EAAoB3V,KAAKmU,UAC/BnU,KAAKmU,UAAY,EACjBnU,KAAK4V,eAAeD,EACxB,CAEAnD,WAEI,IAAKxS,KAAK0V,cACN,OAEJ,MAAMC,EAAoB3V,KAAKmU,UAC/BnU,KAAKmU,UAAYnU,KAAK+V,mBAAqB,EAC3C/V,KAAK4V,eAAeD,EACxB,CAEAG,kBACI,OAAO9V,KAAKmU,WAAa,GAAsB,GAAjBnU,KAAKmR,QACvC,CAEAuE,cACI,MAAMM,EAAehW,KAAK+V,mBAAqB,EAC/C,OAAO/V,KAAKmU,UAAY6B,GAAiC,GAAjBhW,KAAKmR,QACjD,CAEA4E,mBACI,OAAK/V,KAAKmR,SAGHgC,KAAK8C,KAAKjW,KAAK4E,OAAS5E,KAAKmR,UAFzB,CAGf,CASAJ,gBAAgBI,GAGZ,MACMwE,EAAoB3V,KAAKmU,UAC/BnU,KAAKmU,UAAYhB,KAAK+C,MAFHlW,KAAKmU,UAAYnU,KAAKmR,SAEAA,IAAa,EACtDnR,KAAKmR,SAAWA,EAChBnR,KAAK4V,eAAeD,EACxB,CAEAhD,uBACI,OAAO3S,KAAKY,WAAaZ,KAAK0V,aAClC,CAEAtD,2BACI,OAAOpS,KAAKY,WAAaZ,KAAK8V,iBAClC,CAKAvB,kCACSvU,KAAKsV,eAILtV,KAAKmR,WACNnR,KAAKsU,UAC8B,GAA/BtU,KAAKwU,gBAAgB5P,OAAc5E,KAAKwU,gBAAgB,GArM9C,IAuMlBxU,KAAKuR,0BAA4BvR,KAAKwU,gBAAgB2B,SACQ,IAA1DnW,KAAKuR,0BAA0B6E,QAAQpW,KAAKmR,WAC5CnR,KAAKuR,0BAA0B9H,KAAKzJ,KAAKmR,UAG7CnR,KAAKuR,0BAA0B8E,KAAK,CAACC,EAAGC,IAAMD,EAAIC,GAClDvW,KAAK+M,mBAAmBY,eAC5B,CAEAiI,eAAeD,GACX3V,KAAKiT,KAAKuD,KAAK,CACXb,oBACAxB,UAAWnU,KAAKmU,UAChBhD,SAAUnR,KAAKmR,SACfvM,OAAQ5E,KAAK4E,QAErB,CAACgH,SACQ5L,KAAK6L,UAAI,SAAAC,GAAA,WAAAA,GAAwFoI,GA5OVnI,MA4OwC6G,GA5OxC7G,MA4OqEA,OA5OrEA,MA4OsG8H,GAA6B,KAA4DjI,SACtR5L,KAAKkP,UA7OkFnD,MAAE,CAAAO,KA6OJ4H,EAAY3H,UAAA,oBAAAC,UAAA,QAAsV,QAAO,uBAAAK,OAAA,CAAAjM,SAAA,WAAAsQ,MAAA,QAAAiD,UAAA,YAAAvP,OAAA,SAAAuM,SAAA,WAAAqD,gBAAA,kBAAAI,aAAA,eAAAE,qBAAA,uBAAAzD,aAAA,gBAAAoF,QAAA,CAAAxD,KAAA,QAAAnG,SAAA,iBAAA4J,SAAA,CA7OvW3K,OAAEwD,MAAA,GAAAC,KAAA,GAAAC,OAAA,+2DAAAC,SAAA,SAAA/C,EAAAC,GAAA,EAAAD,IAAFZ,MAAE,UAAFA,CA6O+gB,WA7O/gBA,MAAE,EAAA2F,GAAA,aAAF3F,MAAE,UAAFA,CA6Oi6D,WA7Oj6DA,MAAE,GAAFA,cAAE,EAAA+F,GAAA,gBAAF/F,MAAE,cAAFA,MAAE,0BA6Om8Fa,EAAAiJ,cAAc,GA7On9F9J,cAAE,WAAFA,MAAE,YAAFA,wBAAE,eAAFA,MAAE,0BA6O0nHa,EAAA6I,UAAU,GA7OtoH1J,cAAE,YAAFA,MAAE,cAAFA,gBAAE,GAAAsG,GAAA,iBAAFtG,aA6Og6J,EAAAY,IA7Oh6JZ,MAAE,GAAFA,MAAE,EAAAa,EAAAgI,cAAA,KAAF7I,MAAE,GAAFA,MAAE,IAAAa,EAAAgF,MAAAoB,cAAApG,EAAAuH,UAAAvH,EAAAuE,SAAAvE,EAAAhI,QAAA,KAAFmH,MAAE,GAAFA,MAAE,EAAAa,EAAAkI,qBAAA,MAAF/I,MAAE,GAAFA,MAAE,aAAAa,EAAAgF,MAAAmB,kBAAFhH,CA6O0kG,qBAAAa,EAAAwF,2BA7O1kGrG,CA6O0kG,6BA7O1kGA,CA6O0kG,WAAAa,EAAAwF,4BA7O1kGrG,MAAE,aAAAa,EAAAgF,MAAAmB,mBAAFhH,MAAE,GAAFA,MAAE,aAAAa,EAAAgF,MAAAkB,cAAF/G,CA6OqvH,qBAAAa,EAAA+F,uBA7OrvH5G,CA6OqvH,6BA7OrvHA,CA6OqvH,WAAAa,EAAA+F,wBA7OrvH5G,MAAE,aAAAa,EAAAgF,MAAAkB,eAAF/G,MAAE,GAAFA,MAAE,GAAAa,EAAAkI,qBAAA,OA6Ok5J,EAAAnF,aAAA,CAA24D1D,KAA6GC,KAA2MC,KAAofyD,KAAiK+G,IAAa5H,OAAA,qzDAAAc,cAAA,EAAAC,gBAAA,IAC51P,OAvMKoE,CAAY,KAuOZ0C,GAAkB,MAAxB,MAAMA,EAAmBhL,SACZ5L,KAAK6L,UAAI,SAAAC,GAAA,WAAAA,GAAwF8K,EAAkB,EAAkDhL,SACrK5L,KAAKgQ,UAhRkFjE,MAAE,CAAAO,KAgRSsK,IAA2IhL,SAC7O5L,KAAKiQ,UAjRkFlE,MAAE,CAAAmE,UAiRwC,CAACsD,IAA4BrD,QAAA,CAAY0G,KAAiBC,KAAiB/G,MACxN,OAJK6G,CAAkB,sCClSxB,SAASG,GAAsBC,EAAkBC,EAAqBC,GACpE,MAAMC,EAAoBC,KAAKC,MAAML,EAAQM,MAA4BC,OAAOC,WAC1EC,EAA+B,SAAhBP,EAqCvB,SAASQ,GAAST,GAChB,IAAIU,EAAcV,EAAS,GAC3B,UAAWD,KAAWC,EAChBD,EAAQY,eAAiBD,EAAYC,gBACzCD,EAAcX,GAEhB,OAAOW,CACT,CA5CgDD,CAAST,GAAYA,EAASY,KAAKC,GAAKA,EAAEF,gBAAkBZ,EAAQY,cAAgB,GAC5HG,EAAoBN,EAAgBL,KAAKC,MAAMI,EAAaH,MAA4BC,OAAOC,WAAa,KAE5GQ,EAAsD,GAC5D,OAAwB,MAApBb,GACFc,OAAOC,QAAQf,GAAkB3S,QAAQ,EAAE2T,EAAUC,MACnDH,OAAOI,KAAKD,GAAY5T,QAAQ8T,IACsD,MAAhFN,EAAcH,KAAKvB,GAAKA,EAAEiC,OAASD,GAAiBhC,EAAE6B,WAAaA,IACvEH,EAAcvO,KAAK,CAAE8O,KAAMD,EAAeH,YAAU,EACrD,GAGoB,MAArBJ,GACFE,OAAOC,QAAQH,GAAmBvT,QAAQ,EAAE2T,EAAUC,MACpDH,OAAOI,KAAKD,GAAY5T,QAAQ8T,IACsD,MAAhFN,EAAcH,KAAKvB,GAAKA,EAAEiC,OAASD,GAAiBhC,EAAE6B,WAAaA,IACvEH,EAAcvO,KAAK,CAAE8O,KAAMD,EAAeH,YAAU,EACrD,GAIqBH,EAActD,IAAI8D,IAC1C,MAAMC,EAAgBtB,IAAmBqB,EAAUL,YAAYK,EAAUD,MACnEG,EAAiBX,IAAoBS,EAAUL,YAAYK,EAAUD,MAQ3E,MAN2C,CACzCA,KAAMC,EAAUD,KAChBJ,SAAUK,EAAUL,SACpBvU,OAAQ+U,EAAeF,EAAeC,GAAgB,GACtDE,OAAQC,GAAkBJ,EAAeC,KAM/C,CAWA,SAASG,GAAkBD,EAAsCF,GAC/D,MAAMI,EAAwB,GAC9B,OAAc,MAAVF,GACFX,OAAOI,KAAKO,GAAQpU,QAAQuU,IACtBD,EAAYE,SAASD,IACzBD,EAAYrP,KAAKsP,EAAI,GAGH,MAAlBL,GACFT,OAAOI,KAAKK,GAAgBlU,QAAQuU,IAC9BD,EAAYE,SAASD,IACzBD,EAAYrP,KAAKsP,EAAI,GAIHD,EAAYpE,IAAIuE,IACpC,MAAMC,EAAeN,IAASK,GACxBE,EAAgBT,IAAiBO,GAQvC,MAN4C,CAC1CA,UACA/Y,MAAOgZ,EACPE,SAAUD,EACVvV,OAAQ+U,EAAeO,EAAcC,KAM3C,CAEA,SAASR,EAAeO,EAAmBC,EAAoBE,GAAiB,GAC9E,IAAIzV,EAEJ,OAAIyV,IAC0B,iBAAjBH,IACTA,EAAeI,EAAuBJ,IAEX,iBAAlBC,IACTA,EAAgBG,EAAuBH,KAMvCvV,EAFgB,MAAhBsV,GAAyC,MAAjBC,EACtB/B,KAAKmC,UAAUL,KAAkB9B,KAAKmC,UAAUJ,GACzC,UAEA,OAEc,MAAhBD,EACA,MAEA,UAGJtV,CACT,CAEA,SAAS0V,EAAuBE,GAC9B,MAAmB,iBAARA,EAA2BA,EAE/BvB,OAAOI,KAAKmB,GAAKnD,OAAOoD,OAAO,CAACC,EAAKC,SAAcD,EAAKE,CAACD,GAAMH,EAAIG,KAAS,GACrF,sCCnIA,MAAME,EAAiB,eAGhB,IAAMC,EAAe,MAAtB,MAAOA,EACXvX,YAAoBwX,EAA0BC,EAA0BC,GAApDja,KAAA+Z,OAA0B/Z,KAAAga,UAA0Bha,KAAAia,YAA0B,CAElGC,cAAcC,GACZ,OAAOna,KAAK+Z,KAAKK,KACfpa,KAAKia,WAAWI,MAAMN,KAAKO,OAAOT,EAAiB,OACnD,CAAEM,YACF,CACEI,OAAQ,CAAEC,MAAOxa,KAAKga,QAAQQ,MAAMC,aAG1C,CAEAC,QAAQP,EAAkBQ,GACxB,OAAO3a,KAAK+Z,KAAKK,KACfpa,KAAKia,WAAWI,MAAMN,KAAKO,OAAOT,EAAiB,WACnD,CAAEM,YACF,CACEI,OAAQ,CAAEC,MAAOxa,KAAKga,QAAQQ,MAAMC,WAAYE,SAAUA,EAASF,aAGzE,CAAC7O,SAAA5L,KAAA,mBAAA8L,iBArBUgO,GAAe/N,MAAAC,OAAAD,MAAAE,MAAAF,MAAAG,OAAA,EAAAN,SAAA5L,KAAA,WAAA4a,EAAAC,IAAA,OAAff,EAAerb,QAAfqb,EAAejO,mBAAfiO,CAAe,2HCEpB/N,MAAA,UAAAA,CAA6B,sBAA7BA,CAA6B,mBAEyBA,MAAA,2BAAAuD,GAAAvD,MAAA+O,GAAA,MAAAC,EAAAhP,MAAA,UAAmBA,MAAAgP,EAAAC,cAAA1L,EAAApP,OAA2B,GAC9F6L,MAAA,mBAA6BA,MAAA,4BAAsBA,QACnDA,MAAA,mBAAyBA,MAAA,wBAAkBA,sCAFjCA,MAAA,GAAAA,MAAA,QAAAkP,EAAA/D,qCASdnL,MAAA,SAAKA,MAAA,gBAAUA,gCAGfA,MAAA,SAAKA,MAAA,6CAAuCA,kCAsB1BA,MAAA,kCAAAA,MAAA,UAAAmP,EAAAtC,OAAA,QAAAsC,EAAAtC,OAAA,GAAA1Y,MAAA,gCAcM6L,MAAA,SACEA,MAAA,GACFA,wCAFKA,MAAA,eAAAoP,EAAAvX,OAAA,IACHmI,MAAA,GAAAA,MAAA,gBAAAoP,EAAAvX,OAAAuX,EAAA/B,SAAA+B,EAAAjb,MAAA,gCAIF6L,MAAA,YAA6BA,MAAA,GAAiBA,QAC9CA,MAAA,YAA4DA,MAAA,GAAoBA,wCADnDA,MAAA,GAAAA,MAAAoP,EAAAjb,OAC+B6L,MAAA,GAAAA,MAAAoP,EAAA/B,qCAVlErN,MAAA,WAAAA,CAA4B,SACwCA,MAAA,GAAoBA,QACtFA,MAAA,YACEA,MAAA,EAAAqP,GAAA,aAAArP,CAIC,EAAAsP,GAAA,KAKHtP,oCAXKA,MAAA,GAAAA,MAAA,qCAAAoP,EAAAvX,OAAA,IAA6DmI,MAAA,GAAAA,MAAA,GAAAoP,EAAAlC,QAAA,KAEhElN,MAAA,GAAAA,MAAA,cAAAoP,EAAAvX,OAAA,MAKAmI,MAAA,GAAAA,MAAA,cAAAoP,EAAAvX,OAAA,iCAVRmI,MAAA,YACEA,MAAA,EAAAuP,GAAA,aAAAvP,OAgBFA,wCAhBEA,MAAA,GAAAA,MAAAmP,EAAAtC,kDAjBN7M,MAAA,WAAAA,CAA2B,YAEvBA,MAAA,yBAAAmP,EAAAnP,MAAAwP,GAAA5K,UAAA6K,EAAAzP,MAAA,GAAA4E,UAAA8K,EAAA1P,MAAA,UAASA,MAAA0P,EAAAC,wBAAAF,EAAAG,cAAAT,EAAA3C,MAAkE,GAC3ExM,MAAA,SACEA,MAAA,GACFA,QACAA,MAAA,SACEA,MAAA,EAAA6P,GAAA,KAGF7P,QACAA,MAAA,WAAAA,CAAgC,OAC3BA,MAAA,GAA0BA,YAGjCA,MAAA,EAAA8P,GAAA,cAoBF9P,oEAhCSA,MAAA,GAAAA,MAAA,mCAAAmP,EAAAtX,OAAA,IACHmI,MAAA,GAAAA,MAAA,IAAAmP,EAAA3C,KAAA,KAEGxM,MAAA,GAAAA,MAAA,mCAAAmP,EAAAtX,OAAA,IACHmI,MAAA,GAAAA,MAAA,EAAA+P,EAAAC,mBAAAP,EAAAG,cAAAT,EAAA3C,OAAA,KAKGxM,MAAA,GAAAA,MAAA,IAAAmP,EAAA/C,SAAA,KAGPpM,MAAA,GAAAA,MAAA,EAAA+P,EAAAC,mBAAAP,EAAAG,cAAAT,EAAA3C,MAAA,gDAwBAxM,MAAA,eACEA,MAAA,mBAAAA,MAAAiQ,GAAA,MAAAR,EAAAzP,MAAA,GAAA4E,UAAAsL,EAAAlQ,MAAA,UAASA,MAAAkQ,EAAAvB,QAAAc,EAAAU,aAAgC,GACzCnQ,MAAA,eACFA,mCA3CJA,MAAA,EAAAoQ,GAAA,eAAApQ,OAsCAA,MAAA,YACEA,MAAA,EAAAqQ,GAAA,iBAMFrQ,wCA7CAA,MAAAyP,EAAApD,YAuCErM,MAAA,GAAAA,MAAA,EAAAyP,EAAAa,eAAA,+CA/CNtQ,MAAA,4BAEEA,MAAA,0BAAAuD,GAAA,MAAAkM,EAAAzP,MAAAuQ,GAAA3L,UAAA4L,EAAAxQ,MAAA,UAAkBA,MAAAwQ,EAAAC,oBAAAlN,EAAAkM,EAAAG,eAAsD,GACxE5P,MAAA,+BAAAA,CAA4B,qBACTA,MAAA,GAAuCA,QACxDA,MAAA,2BAAuBA,MAAA,mBAAqDA,UAE9EA,MAAA,EAAA0Q,GAAA,cAgDF1Q,+CAtDEA,MAAA,WAAA2Q,EAAAC,eAAAnB,EAAAG,gBAGmB5P,MAAA,GAAAA,MAAA,WAAAyP,EAAAG,cAAA,IACM5P,MAAA,GAAAA,YAAA,IAAAyP,EAAAoB,UAAA,qBAEzB7Q,MAAA,GAAAA,MAAA,EAAA2Q,EAAAC,eAAAnB,EAAAG,eAAA,iCATN5P,MAAA,sBACEA,MAAA,EAAA8Q,GAAA,6BAAA9Q,OA0DFA,8BA1DEA,MAAA,GAAAA,MAAAkP,EAAA6B,wDA8DJ/Q,MAAA,sBACsCA,MAAA,gBAAAuD,GAAAvD,MAAAgR,GAAA,MAAAC,EAAAjR,MAAA,UAAQA,MAAAiR,EAAAC,WAAA3N,GAAkB,GAChEvD,0CAF0DA,MAAA,SAAAkP,EAAArW,OAAAmH,CAAoB,WAAAkP,EAAA9J,SAApBpF,CAAoB,kBAAAmR,EAAA1I,2DA1FpFzI,MAAA,UAAAA,CAAyC,UAAzCA,CAAyC,WAECA,MAAA,kBAAYA,QAClDA,MAAA,cAA6CA,MAAA,mBAAAA,MAAAoR,GAAA,MAAAC,EAAArR,QAAA,OAASA,MAAAqR,EAAAC,cAAa,GACjEtR,MAAA,cAAUA,MAAA,WAAKA,YAGnBA,MAAA,UAAAA,CAAgC,OAC3BA,MAAA,2EAAqEA,QACxEA,MAAA,GAAAuR,GAAA,aAUAvR,MAAA,UACEA,MAAA,GAAAwR,GAAA,UAAAxR,CAEC,GAAAyR,GAAA,UAFDzR,CAEC,GAAA0R,GAAA,uBAkEH1R,QACAA,MAAA,GAAA2R,GAAA,uBAKF3R,gBArFEA,MAAA,IAAAA,MAAA,UAAAa,EAAAkQ,aAAA,KAAAlQ,EAAAkQ,aAAAlY,QAAA,SAWEmH,MAAA,GAAAA,MAAA,UAAAa,EAAAkQ,aAAA,OAGA/Q,MAAA,GAAAA,MAAA,cAAAa,EAAAkQ,aAAA,KAAAlQ,EAAAkQ,aAAAlY,QAAA,OAGAmH,MAAA,GAAAA,MAAA,UAAAa,EAAAkQ,aAAA,KAAAlQ,EAAAkQ,aAAAlY,QAAA,SA+DFmH,MAAA,GAAAA,MAAA,UAAAa,EAAAkQ,aAAA,KAAAlQ,EAAAkQ,aAAAlY,QAAA,UCjDC,IAAM+Y,GAAoB,MAA3B,MAAOA,EAwBXpb,YACUqb,EACAC,EACAC,EACAC,GAHA/d,KAAA4d,YACA5d,KAAA6d,QACA7d,KAAA8d,kBACA9d,KAAA+d,WA3BgB/d,KAAAge,UAAY,mBAEtChe,KAAAwU,gBAAkB,CAAC,GAAI,GAAI,IAC3BxU,KAAA2c,eAA0C,GAC1C3c,KAAA+b,mBAA8C,GAEtC/b,KAAAie,OAASC,SAASle,KAAK6d,MAAMM,SAASC,SAASC,IAAI,UAAW,IAC9Dre,KAAAse,UAAY,IAAIC,IAA2B,MAC3Cve,KAAAwe,MAAQ,IAAID,IAAgB,GAC5Bve,KAAAye,UAAY,IAAIF,IAAgBve,KAAKwU,gBAAgB,IACrDxU,KAAA0e,aAAe,IAAIH,IAA6B,QAChDve,KAAA2e,iBAAgBC,KAAc,CAAC5e,KAAKse,UAAWte,KAAKwe,MAAOxe,KAAKye,UAAWze,KAAK0e,eAAe7a,QACrG6Q,KAAI,EAAEuC,EAAUhE,EAAM9B,EAAU+F,KHlD9B,SAAU2H,GAAgB5H,EAAqBhE,EAAc9B,EAAkB+F,GACnF,OAAgB,MAAZD,GAA4B,MAARhE,GAA4B,MAAZ9B,GAAmC,MAAf+F,EAA8B,KAO5F,SAAS4H,GAAiBC,EAA6B9H,EAAqBC,GAC1E,OAAO6H,EAAiBrK,IAAIsC,KAExBkF,YAAalF,EAAQgI,YACrB5G,WAAYrB,GAAsBC,EAASC,EAAUC,GACrD+H,UAAWjI,EAAQkI,UACnBtC,UAAW5F,EAAQmI,UACnBC,KAAMpI,EAAQqI,KACd1D,cAAe3E,EAAQY,cACvByE,eAAgBpF,EAASqI,KAAKxH,GAAKA,EAAEF,gBAAkBZ,EAAQY,cAAgB,KAIrF,CAjBuBkH,CAFJ7H,EAASd,OAAOlD,EAAO,GAAK9B,EAAU8B,EAAO9B,GAEd8F,EAAUC,EAE5D,CG4CqD2H,CAAgB5H,EAAUhE,EAAM9B,EAAU+F,KAE7FlX,KAAAuf,cAAaX,KAAc,CAAC5e,KAAKse,UAAWte,KAAK2e,cAAe3e,KAAKye,UAAWze,KAAK0e,eAAe7a,QAClG6Q,KAAI,EAAEuC,EAAU6F,EAAc3L,EAAU+F,MAAW,CACjDtS,OAAQqS,GAAUrS,OAClBkY,eACA3L,WACA+F,iBASA,CAEJ7B,WACErV,KAAK8d,gBAAgB5D,cAAcla,KAAKie,QAAQla,UAAUkT,IACxDjX,KAAKse,UAAUzZ,KAAKoS,EAAQ,EAEhC,CAEA7S,cACEpE,KAAKse,UAAUxZ,WACf9E,KAAKwe,MAAM1Z,WACX9E,KAAKye,UAAU3Z,WACf9E,KAAK0e,aAAa5Z,UACpB,CAEAuY,cACErd,KAAK4d,UAAU4B,OACjB,CAEAxE,cAAcyE,GACZzf,KAAK0e,aAAa7Z,KAAK4a,EACzB,CAEAjD,oBAAoBkD,EAAiB/D,GACnC3b,KAAK2c,eAAehB,GAAiB+D,CACvC,CAEAhE,wBAAwBC,EAAuBpD,GAC7CvY,KAAK+b,mBAAmBJ,EAAgBpD,IAASvY,KAAK+b,mBAAmBJ,EAAgBpD,EAC3F,CAEA0E,WAAWxY,GACT,MAAMkb,EAAUlb,EAAM0P,UAAY,EAC9BwL,IAAY3f,KAAKwe,MAAMte,QACzBF,KAAK2c,eAAiB,GACtB3c,KAAK+b,mBAAqB,GAC1B/b,KAAKwe,MAAM3Z,KAAK8a,IAElB,MAAMC,EAAcnb,EAAM0M,SACtByO,IAAgB5f,KAAKye,UAAUve,OACjCF,KAAKye,UAAU5Z,KAAK+a,EAExB,CAEAlF,QAAQC,GACN3a,KAAK+d,SAAS8B,KAAK,iCACnB7f,KAAK8d,gBAAgBpD,QAAQ1a,KAAKie,OAAQtD,GAAU5W,UAAU+b,IAC5D9f,KAAK+d,SAAS8B,KAAK,qDAAsD,KAAM,CAAEE,SAAU,MAI3F/f,KAAK4d,UAAU4B,MAHmB,CAChCQ,aAAa,GAEY,EAE/B,CAACpU,SAAA5L,KAAA,mBAAA8L,iBAlFU6R,GAAoB5R,MAAAC,OAAAD,MAAAE,OAAAF,MAAAG,GAAAH,MAAAI,OAAA,EAAAP,SAAA5L,KAAA,UAAA4a,EAAAqF,IAAA,MAApBtC,EAAoBpR,UAAA,uBAAAE,SAAA,EAAAC,aAAA,SAAAC,EAAAC,GAAA,EAAAD,iEAJlB,CACPmN,IACH/N,OAAAwD,MAAA,EAAAC,KAAA,EAAAC,OAAA,ksCAAAC,SAAA,SAAA/C,EAAAC,MAAA,EAAAD,IDvCLZ,MAAA,EAAAmU,GAAA,2CAAAnU,MAAA,GAAAoU,EAAApU,MAAA,IAAAa,EAAA2S,aAAA,KAAAY,mBC0BQtJ,KAAejH,UACfwQ,KAAsBzJ,KACtB0J,KAAaC,KACbC,KAAkBC,KAClB1J,KAAe2J,KAAAC,KACfC,KACAC,KAAkBC,yBAClBjK,GAAkBkK,GAClBC,IACAC,KAAQjS,OAAA,gnCAMH4O,CAAoB","names":["_c0","MAT_TOOLTIP_SCROLL_STRATEGY","InjectionToken","providedIn","factory","overlay","inject","Overlay","scrollStrategies","reposition","scrollThrottle","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","useFactory","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","MAT_TOOLTIP_DEFAULT_OPTIONS","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","PANEL_CLASS","passiveListenerOptions","normalizePassiveListenerOptions","passive","MatTooltip","position","this","_position","value","_overlayRef","_updatePosition","_tooltipInstance","show","updatePosition","positionAtOrigin","_positionAtOrigin","coerceBooleanProperty","_detach","disabled","_disabled","hide","_setupPointerEnterEventsIfNeeded","_showDelay","coerceNumberProperty","_hideDelay","_mouseLeaveHideDelay","message","_message","_ariaDescriber","removeDescription","_elementRef","nativeElement","String","trim","_isTooltipVisible","_updateTooltipMessage","_ngZone","runOutsideAngular","Promise","resolve","then","describe","tooltipClass","_tooltipClass","_setTooltipClass","constructor","_overlay","_scrollDispatcher","_viewContainerRef","_platform","_focusMonitor","scrollStrategy","_dir","_defaultOptions","_document","_viewInitialized","_pointerExitEventsInitialized","_tooltipComponent","TooltipComponent","_viewportMargin","_cssClassPrefix","touchGestures","_passiveListeners","_destroyed","Subject","_scrollStrategy","change","pipe","takeUntil","subscribe","ngAfterViewInit","monitor","origin","run","ngOnDestroy","clearTimeout","_touchstartTimeout","dispose","forEach","event","listener","removeEventListener","length","next","complete","stopMonitoring","delay","_cancelPendingAnimations","overlayRef","_createOverlay","_portal","ComponentPortal","instance","attach","_triggerElement","afterHidden","isVisible","toggle","undefined","existingStrategy","getConfig","positionStrategy","_origin","ElementRef","scrollableAncestors","getAncestorScrollContainers","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","_updateCurrentPositionClass","connectionPair","scrollableViewProperties","isOverlayClipped","create","direction","panelClass","detachments","outsidePointerEvents","_handleBodyInteraction","keydownEvents","keyCode","ESCAPE","hasModifierKey","preventDefault","stopPropagation","disableTooltipInteractivity","addPanelClass","hasAttached","detach","_getOrigin","_getOverlayPosition","withPositions","_addOffset","main","fallback","isLtr","originY","offsetY","originX","offsetX","originPosition","x","y","_invertPosition","overlayPosition","overlayX","overlayY","_markForCheck","onMicrotaskEmpty","take","newPosition","_currentPosition","classPrefix","removePanelClass","_platformSupportsMouseEvents","push","point","_setupPointerExitEventsIfNeeded","_disableNativeGesturesIfNecessary","touch","targetTouches","clientX","clientY","setTimeout","_addListeners","exitListeners","newTarget","relatedTarget","overlayElement","contains","_wheelListener","touchendListener","listeners","addEventListener","IOS","ANDROID","elementUnderPointer","elementFromPoint","element","gestures","style","nodeName","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","static","ɵfac","t","i0","i1","i2","i3","i4","DOCUMENT","ɵdir","type","selectors","hostAttrs","hostVars","hostBindings","rf","ctx","inputs","exportAs","_changeDetectorRef","animationMode","_isMultiline","_closeOnInteraction","_isVisible","_onHide","_showAnimation","_hideAnimation","_animationsDisabled","_hideTimeoutId","_showTimeoutId","_toggleVisibility","markForCheck","_handleMouseLeave","_finalizeAnimation","_onShow","_isTooltipMultiline","rect","getBoundingClientRect","height","width","_handleAnimationEnd","animationName","toVisible","tooltip","_tooltip","showClass","hideClass","classList","remove","add","getComputedStyle","styles","getPropertyValue","ANIMATION_MODULE_TYPE","ɵcmp","viewQuery","_t","first","$event","decls","vars","consts","template","dependencies","i5","encapsulation","changeDetection","MatTooltipModule","ɵmod","ɵinj","providers","imports","A11yModule","CommonModule","OverlayModule","MatCommonModule","CdkScrollableModule","MatPaginator_Conditional_2_Conditional_3_For_3_Template","pageSizeOption_r6","$implicit","MatPaginator_Conditional_2_Conditional_3_Template","_r12","ctx_r11","_changePageSize","ctx_r3","_formFieldAppearance","color","pageSize","_pageSizeLabelId","selectConfig","disableOptionCentering","_displayedPageSizeOptions","MatPaginator_Conditional_2_Conditional_4_Template","ctx_r4","MatPaginator_Conditional_2_Template","ctx_r0","_intl","itemsPerPageLabel","MatPaginator_Conditional_6_Template","_r14","ctx_r13","firstPage","ctx_r1","firstPageLabel","_previousButtonsDisabled","MatPaginator_Conditional_13_Template","_r16","ctx_r15","lastPage","ctx_r2","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","changes","nextPageLabel","previousPageLabel","getRangeLabel","page","startIndex","Math","max","min","ɵprov","token","MAT_PAGINATOR_INTL_PROVIDER","Optional","SkipSelf","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_DEFAULT_OPTIONS","_MatPaginatorMixinBase","mixinDisabled","mixinInitialized","nextUniqueId","MatPaginator","pageIndex","_pageIndex","_length","_pageSize","_updateDisplayedPageSizeOptions","pageSizeOptions","_pageSizeOptions","map","p","hidePageSize","_hidePageSize","showFirstLastButtons","_showFirstLastButtons","defaults","super","EventEmitter","_intlChanges","formFieldAppearance","ngOnInit","_initialized","_markInitialized","unsubscribe","nextPage","hasNextPage","previousPageIndex","_emitPageEvent","previousPage","hasPreviousPage","getNumberOfPages","maxPageIndex","ceil","floor","slice","indexOf","sort","a","b","emit","outputs","features","i6","MatPaginatorModule","MatButtonModule","MatSelectModule","calcHistoryAttributes","version","versions","compareWith","currentDataTypes","JSON","parse","Json","Entity","Attributes","previousItem","findLive","liveVersion","VersionNumber","find","v","previousDataTypes","allAttributes","Object","entries","dataType","attributes","keys","attributeName","name","attribute","currentValues","previousValues","calcChangeType","values","calcHistoryValues","allLangKeys","lang","includes","langKey","currentValue","previousValue","oldValue","sortObjectKeys","sortKeysAlphabetically","stringify","obj","reduce","acc","key","e","webApiVersions","VersionsService","http","context","dnnContext","fetchVersions","entityId","post","$2sxc","apiUrl","params","appId","toString","restore","changeId","core","wxM","_r8","ctx_r7","compareChange","vm_r1","attribute_r19","value_r28","ItemHistoryComponent_Conditional_0_Conditional_14_For_2_Conditional_7_For_1_Conditional_9_For_2_Conditional_4_Template","ItemHistoryComponent_Conditional_0_Conditional_14_For_2_Conditional_7_For_1_Conditional_9_For_2_Conditional_5_Template","ItemHistoryComponent_Conditional_0_Conditional_14_For_2_Conditional_7_For_1_Conditional_9_For_2_Template","_r40","historyItem_r11","ctx_r38","attributeExpandedToggle","versionNumber","ItemHistoryComponent_Conditional_0_Conditional_14_For_2_Conditional_7_For_1_Conditional_5_Template","ItemHistoryComponent_Conditional_0_Conditional_14_For_2_Conditional_7_For_1_Conditional_9_Template","ctx_r17","expandedAttributes","_r44","ctx_r42","changeSetId","ItemHistoryComponent_Conditional_0_Conditional_14_For_2_Conditional_7_For_1_Template","ItemHistoryComponent_Conditional_0_Conditional_14_For_2_Conditional_7_Conditional_3_Template","isLastVersion","_r47","ctx_r46","panelExpandedChange","ItemHistoryComponent_Conditional_0_Conditional_14_For_2_Conditional_7_Template","ctx_r10","expandedPanels","timeStamp","ItemHistoryComponent_Conditional_0_Conditional_14_For_2_Template","historyItems","_r50","ctx_r49","pageChange","ctx_r6","_r53","ctx_r52","closeDialog","ItemHistoryComponent_Conditional_0_Conditional_10_Template","ItemHistoryComponent_Conditional_0_Conditional_12_Template","ItemHistoryComponent_Conditional_0_Conditional_13_Template","ItemHistoryComponent_Conditional_0_Conditional_14_Template","ItemHistoryComponent_Conditional_0_Conditional_15_Template","ItemHistoryComponent","dialogRef","route","versionsService","snackBar","hostClass","itemId","parseInt","snapshot","paramMap","get","versions$","BehaviorSubject","page$","pageSize$","compareWith$","historyItems$","combineLatest","getHistoryItems","calcHistoryItems","filteredVersions","ChangeSetId","historyId","HistoryId","TimeStamp","user","User","some","viewModel$","close","newCompareWith","expand","newPage","newPageSize","open","res","duration","refreshEdit","In1","ItemHistoryComponent_Conditional_0_Template","ItemHistoryComponent_contFlowTmp","SharedComponentsModule","MatIconModule","i7","MatFormFieldModule","i8","i9","i10","MatOptionModule","MatExpansionModule","i11","i12","AsyncPipe","DatePipe"],"sourceRoot":"webpack:///","sources":["./node_modules/@angular/material/fesm2022/tooltip.mjs","./node_modules/@angular/material/fesm2022/paginator.mjs","./projects/eav-ui/src/app/item-history/item-history.helpers.ts","./projects/eav-ui/src/app/item-history/services/versions.service.ts","./projects/eav-ui/src/app/item-history/item-history.component.html","./projects/eav-ui/src/app/item-history/item-history.component.ts"],"sourcesContent":["import { takeUntil, take } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, Directive, Inject, Optional, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport * as i5 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i3 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\nimport * as i1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n    },\n});\n/** @docs-private */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/** @docs-private */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/** @docs-private */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-mdc-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n */\nconst LONGPRESS_DELAY = 500;\n// These constants were taken from MDC's `numbers` object. We can't import them from MDC,\n// because they have some top-level references to `window` which break during SSR.\nconst MIN_VIEWPORT_TOOLTIP_THRESHOLD = 8;\nconst UNBOUNDED_ANCHOR_GAP = 8;\nconst MIN_HEIGHT = 24;\nconst MAX_WIDTH = 200;\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n                this._tooltipInstance?.show(0);\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /**\n     * Whether tooltip should be relative to the click or touch origin\n     * instead of outside the element bounding box.\n     */\n    get positionAtOrigin() {\n        return this._positionAtOrigin;\n    }\n    set positionAtOrigin(value) {\n        this._positionAtOrigin = coerceBooleanProperty(value);\n        this._detach();\n        this._overlayRef = null;\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n        }\n    }\n    /** The default delay in ms before showing the tooltip after show is called */\n    get showDelay() {\n        return this._showDelay;\n    }\n    set showDelay(value) {\n        this._showDelay = coerceNumberProperty(value);\n    }\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    get hideDelay() {\n        return this._hideDelay;\n    }\n    set hideDelay(value) {\n        this._hideDelay = coerceNumberProperty(value);\n        if (this._tooltipInstance) {\n            this._tooltipInstance._mouseLeaveHideDelay = this._hideDelay;\n        }\n    }\n    /** The message to be displayed in the tooltip */\n    get message() {\n        return this._message;\n    }\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message, 'tooltip');\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n        // away the string-conversion: https://github.com/angular/components/issues/20684\n        this._message = value != null ? String(value).trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular(() => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then(() => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n                });\n            });\n        }\n    }\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() {\n        return this._tooltipClass;\n    }\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, _document) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._positionAtOrigin = false;\n        this._disabled = false;\n        this._viewInitialized = false;\n        this._pointerExitEventsInitialized = false;\n        this._tooltipComponent = TooltipComponent;\n        this._viewportMargin = 8;\n        this._cssClassPrefix = 'mat-mdc';\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /** Manually-bound passive event listeners. */\n        this._passiveListeners = [];\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        this._scrollStrategy = scrollStrategy;\n        this._document = _document;\n        if (_defaultOptions) {\n            this._showDelay = _defaultOptions.showDelay;\n            this._hideDelay = _defaultOptions.hideDelay;\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.positionAtOrigin) {\n                this.positionAtOrigin = _defaultOptions.positionAtOrigin;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n            }\n        });\n        this._viewportMargin = MIN_VIEWPORT_TOOLTIP_THRESHOLD;\n    }\n    ngAfterViewInit() {\n        // This needs to happen after view init so the initial values for all inputs have been set.\n        this._viewInitialized = true;\n        this._setupPointerEnterEventsIfNeeded();\n        this._focusMonitor\n            .monitor(this._elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                this._ngZone.run(() => this.hide(0));\n            }\n            else if (origin === 'keyboard') {\n                this._ngZone.run(() => this.show());\n            }\n        });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        this._passiveListeners.forEach(([event, listener]) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        });\n        this._passiveListeners.length = 0;\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay, origin) {\n        if (this.disabled || !this.message || this._isTooltipVisible()) {\n            this._tooltipInstance?._cancelPendingAnimations();\n            return;\n        }\n        const overlayRef = this._createOverlay(origin);\n        this._detach();\n        this._portal =\n            this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n        const instance = (this._tooltipInstance = overlayRef.attach(this._portal).instance);\n        instance._triggerElement = this._elementRef.nativeElement;\n        instance._mouseLeaveHideDelay = this._hideDelay;\n        instance\n            .afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        instance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n        const instance = this._tooltipInstance;\n        if (instance) {\n            if (instance.isVisible()) {\n                instance.hide(delay);\n            }\n            else {\n                instance._cancelPendingAnimations();\n                this._detach();\n            }\n        }\n    }\n    /** Shows/hides the tooltip */\n    toggle(origin) {\n        this._isTooltipVisible() ? this.hide() : this.show(undefined, origin);\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay(origin) {\n        if (this._overlayRef) {\n            const existingStrategy = this._overlayRef.getConfig()\n                .positionStrategy;\n            if ((!this.positionAtOrigin || !origin) && existingStrategy._origin instanceof ElementRef) {\n                return this._overlayRef;\n            }\n            this._detach();\n        }\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this.positionAtOrigin ? origin || this._elementRef : this._elementRef)\n            .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)\n            .withFlexibleDimensions(false)\n            .withViewportMargin(this._viewportMargin)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            this._updateCurrentPositionClass(change.connectionPair);\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n            scrollStrategy: this._scrollStrategy(),\n        });\n        this._updatePosition(this._overlayRef);\n        this._overlayRef\n            .detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._overlayRef\n            .outsidePointerEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._tooltipInstance?._handleBodyInteraction());\n        this._overlayRef\n            .keydownEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run(() => this.hide(0));\n            }\n        });\n        if (this._defaultOptions?.disableTooltipInteractivity) {\n            this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`);\n        }\n        return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n        const position = overlayRef.getConfig().positionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            this._addOffset({ ...origin.main, ...overlay.main }),\n            this._addOffset({ ...origin.fallback, ...overlay.fallback }),\n        ]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n        const offset = UNBOUNDED_ANCHOR_GAP;\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        if (position.originY === 'top') {\n            position.offsetY = -offset;\n        }\n        else if (position.originY === 'bottom') {\n            position.offsetY = offset;\n        }\n        else if (position.originX === 'start') {\n            position.offsetX = isLtr ? -offset : offset;\n        }\n        else if (position.originX === 'end') {\n            position.offsetX = isLtr ? offset : -offset;\n        }\n        return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y },\n        };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y },\n        };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                if (this._tooltipInstance) {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n        const { overlayY, originX, originY } = connectionPair;\n        let newPosition;\n        // If the overlay is in the middle along the Y axis,\n        // it means that it's either before or after.\n        if (overlayY === 'center') {\n            // Note that since this information is used for styling, we want to\n            // resolve `start` and `end` to their real values, otherwise consumers\n            // would have to remember to do it themselves on each consumption.\n            if (this._dir && this._dir.value === 'rtl') {\n                newPosition = originX === 'end' ? 'left' : 'right';\n            }\n            else {\n                newPosition = originX === 'start' ? 'left' : 'right';\n            }\n        }\n        else {\n            newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n        }\n        if (newPosition !== this._currentPosition) {\n            const overlayRef = this._overlayRef;\n            if (overlayRef) {\n                const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n                overlayRef.removePanelClass(classPrefix + this._currentPosition);\n                overlayRef.addPanelClass(classPrefix + newPosition);\n            }\n            this._currentPosition = newPosition;\n        }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n        // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n        if (this._disabled ||\n            !this.message ||\n            !this._viewInitialized ||\n            this._passiveListeners.length) {\n            return;\n        }\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (this._platformSupportsMouseEvents()) {\n            this._passiveListeners.push([\n                'mouseenter',\n                event => {\n                    this._setupPointerExitEventsIfNeeded();\n                    let point = undefined;\n                    if (event.x !== undefined && event.y !== undefined) {\n                        point = event;\n                    }\n                    this.show(undefined, point);\n                },\n            ]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            this._passiveListeners.push([\n                'touchstart',\n                event => {\n                    const touch = event.targetTouches?.[0];\n                    const origin = touch ? { x: touch.clientX, y: touch.clientY } : undefined;\n                    // Note that it's important that we don't `preventDefault` here,\n                    // because it can prevent click events from firing on the element.\n                    this._setupPointerExitEventsIfNeeded();\n                    clearTimeout(this._touchstartTimeout);\n                    this._touchstartTimeout = setTimeout(() => this.show(undefined, origin), LONGPRESS_DELAY);\n                },\n            ]);\n        }\n        this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n        if (this._pointerExitEventsInitialized) {\n            return;\n        }\n        this._pointerExitEventsInitialized = true;\n        const exitListeners = [];\n        if (this._platformSupportsMouseEvents()) {\n            exitListeners.push([\n                'mouseleave',\n                event => {\n                    const newTarget = event.relatedTarget;\n                    if (!newTarget || !this._overlayRef?.overlayElement.contains(newTarget)) {\n                        this.hide();\n                    }\n                },\n            ], ['wheel', event => this._wheelListener(event)]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            const touchendListener = () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            };\n            exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n        }\n        this._addListeners(exitListeners);\n        this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n        listeners.forEach(([event, listener]) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        });\n    }\n    _platformSupportsMouseEvents() {\n        return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n        if (this._isTooltipVisible()) {\n            const elementUnderPointer = this._document.elementFromPoint(event.clientX, event.clientY);\n            const element = this._elementRef.nativeElement;\n            // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n            // won't fire if the user scrolls away using the wheel without moving their cursor. We\n            // work around it by finding the element under the user's cursor and closing the tooltip\n            // if it's not the trigger.\n            if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n                this.hide();\n            }\n        }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            const element = this._elementRef.nativeElement;\n            const style = element.style;\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect =\n                    style.msUserSelect =\n                        style.webkitUserSelect =\n                            style.MozUserSelect =\n                                'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                style.webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatTooltip, deps: [{ token: i1.Overlay }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.ViewContainerRef }, { token: i0.NgZone }, { token: i2.Platform }, { token: i3.AriaDescriber }, { token: i3.FocusMonitor }, { token: MAT_TOOLTIP_SCROLL_STRATEGY }, { token: i4.Directionality }, { token: MAT_TOOLTIP_DEFAULT_OPTIONS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.4\", type: MatTooltip, selector: \"[matTooltip]\", inputs: { position: [\"matTooltipPosition\", \"position\"], positionAtOrigin: [\"matTooltipPositionAtOrigin\", \"positionAtOrigin\"], disabled: [\"matTooltipDisabled\", \"disabled\"], showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, host: { properties: { \"class.mat-mdc-tooltip-disabled\": \"disabled\" }, classAttribute: \"mat-mdc-tooltip-trigger\" }, exportAs: [\"matTooltip\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatTooltip, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTooltip]',\n                    exportAs: 'matTooltip',\n                    host: {\n                        'class': 'mat-mdc-tooltip-trigger',\n                        '[class.mat-mdc-tooltip-disabled]': 'disabled',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i2.Platform }, { type: i3.AriaDescriber }, { type: i3.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n                }] }, { type: i4.Directionality }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }], propDecorators: { position: [{\n                type: Input,\n                args: ['matTooltipPosition']\n            }], positionAtOrigin: [{\n                type: Input,\n                args: ['matTooltipPositionAtOrigin']\n            }], disabled: [{\n                type: Input,\n                args: ['matTooltipDisabled']\n            }], showDelay: [{\n                type: Input,\n                args: ['matTooltipShowDelay']\n            }], hideDelay: [{\n                type: Input,\n                args: ['matTooltipHideDelay']\n            }], touchGestures: [{\n                type: Input,\n                args: ['matTooltipTouchGestures']\n            }], message: [{\n                type: Input,\n                args: ['matTooltip']\n            }], tooltipClass: [{\n                type: Input,\n                args: ['matTooltipClass']\n            }] } });\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent {\n    constructor(_changeDetectorRef, _elementRef, animationMode) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /* Whether the tooltip text overflows to multiple lines */\n        this._isMultiline = false;\n        /** Whether interactions on the page should close the tooltip */\n        this._closeOnInteraction = false;\n        /** Whether the tooltip is currently visible. */\n        this._isVisible = false;\n        /** Subject for notifying that the tooltip has been hidden from the view */\n        this._onHide = new Subject();\n        /** Name of the show animation and the class that toggles it. */\n        this._showAnimation = 'mat-mdc-tooltip-show';\n        /** Name of the hide animation and the class that toggles it. */\n        this._hideAnimation = 'mat-mdc-tooltip-hide';\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = setTimeout(() => {\n            this._toggleVisibility(true);\n            this._showTimeoutId = undefined;\n        }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        this._hideTimeoutId = setTimeout(() => {\n            this._toggleVisibility(false);\n            this._hideTimeoutId = undefined;\n        }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n        return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n        return this._isVisible;\n    }\n    ngOnDestroy() {\n        this._cancelPendingAnimations();\n        this._onHide.complete();\n        this._triggerElement = null;\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    _handleMouseLeave({ relatedTarget }) {\n        if (!relatedTarget || !this._triggerElement.contains(relatedTarget)) {\n            if (this.isVisible()) {\n                this.hide(this._mouseLeaveHideDelay);\n            }\n            else {\n                this._finalizeAnimation(false);\n            }\n        }\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() {\n        this._isMultiline = this._isTooltipMultiline();\n        this._markForCheck();\n    }\n    /** Whether the tooltip text has overflown to the next line */\n    _isTooltipMultiline() {\n        const rect = this._elementRef.nativeElement.getBoundingClientRect();\n        return rect.height > MIN_HEIGHT && rect.width >= MAX_WIDTH;\n    }\n    /** Event listener dispatched when an animation on the tooltip finishes. */\n    _handleAnimationEnd({ animationName }) {\n        if (animationName === this._showAnimation || animationName === this._hideAnimation) {\n            this._finalizeAnimation(animationName === this._showAnimation);\n        }\n    }\n    /** Cancels any pending animation sequences. */\n    _cancelPendingAnimations() {\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = this._hideTimeoutId = undefined;\n    }\n    /** Handles the cleanup after an animation has finished. */\n    _finalizeAnimation(toVisible) {\n        if (toVisible) {\n            this._closeOnInteraction = true;\n        }\n        else if (!this.isVisible()) {\n            this._onHide.next();\n        }\n    }\n    /** Toggles the visibility of the tooltip element. */\n    _toggleVisibility(isVisible) {\n        // We set the classes directly here ourselves so that toggling the tooltip state\n        // isn't bound by change detection. This allows us to hide it even if the\n        // view ref has been detached from the CD tree.\n        const tooltip = this._tooltip.nativeElement;\n        const showClass = this._showAnimation;\n        const hideClass = this._hideAnimation;\n        tooltip.classList.remove(isVisible ? hideClass : showClass);\n        tooltip.classList.add(isVisible ? showClass : hideClass);\n        this._isVisible = isVisible;\n        // It's common for internal apps to disable animations using `* { animation: none !important }`\n        // which can break the opening sequence. Try to detect such cases and work around them.\n        if (isVisible && !this._animationsDisabled && typeof getComputedStyle === 'function') {\n            const styles = getComputedStyle(tooltip);\n            // Use `getPropertyValue` to avoid issues with property renaming.\n            if (styles.getPropertyValue('animation-duration') === '0s' ||\n                styles.getPropertyValue('animation-name') === 'none') {\n                this._animationsDisabled = true;\n            }\n        }\n        if (isVisible) {\n            this._onShow();\n        }\n        if (this._animationsDisabled) {\n            tooltip.classList.add('_mat-animation-noopable');\n            this._finalizeAnimation(isVisible);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: TooltipComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.4\", type: TooltipComponent, selector: \"mat-tooltip-component\", host: { attributes: { \"aria-hidden\": \"true\" }, listeners: { \"mouseleave\": \"_handleMouseLeave($event)\" }, properties: { \"style.zoom\": \"isVisible() ? 1 : null\" } }, viewQueries: [{ propertyName: \"_tooltip\", first: true, predicate: [\"tooltip\"], descendants: true, static: true }], ngImport: i0, template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mdc-tooltip--shown mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mdc-tooltip__surface mdc-tooltip__surface-animation\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mdc-tooltip__surface{word-break:break-all;word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip--showing-transition .mdc-tooltip__surface-animation{transition:opacity 150ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-tooltip--hide-transition .mdc-tooltip__surface-animation{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - 2*8px);margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - 2*8px);align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mat-mdc-tooltip .mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color)}.mat-mdc-tooltip .mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__caret-surface-top,.mat-mdc-tooltip .mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color)}.mat-mdc-tooltip .mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font);line-height:var(--mdc-plain-tooltip-supporting-text-line-height);font-size:var(--mdc-plain-tooltip-supporting-text-size);font-weight:var(--mdc-plain-tooltip-supporting-text-weight);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"], dependencies: [{ kind: \"directive\", type: i5.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: TooltipComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tooltip-component', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                        // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                        '[style.zoom]': 'isVisible() ? 1 : null',\n                        '(mouseleave)': '_handleMouseLeave($event)',\n                        'aria-hidden': 'true',\n                    }, template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mdc-tooltip--shown mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mdc-tooltip__surface mdc-tooltip__surface-animation\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mdc-tooltip__surface{word-break:break-all;word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip--showing-transition .mdc-tooltip__surface-animation{transition:opacity 150ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-tooltip--hide-transition .mdc-tooltip__surface-animation{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - 2*8px);margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - 2*8px);align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mat-mdc-tooltip .mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color)}.mat-mdc-tooltip .mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__caret-surface-top,.mat-mdc-tooltip .mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color)}.mat-mdc-tooltip .mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font);line-height:var(--mdc-plain-tooltip-supporting-text-line-height);font-size:var(--mdc-plain-tooltip-supporting-text-size);font-weight:var(--mdc-plain-tooltip-supporting-text-weight);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { _tooltip: [{\n                type: ViewChild,\n                args: ['tooltip', {\n                        // Use a static query here since we interact directly with\n                        // the DOM which can happen before `ngAfterViewInit`.\n                        static: true,\n                    }]\n            }] } });\n\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nconst matTooltipAnimations = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        // TODO(crisbeto): these values are based on MDC's CSS.\n        // We should be able to use their styles directly once we land #19432.\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0.8)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => hidden', animate('75ms cubic-bezier(0.4, 0, 1, 1)')),\n    ]),\n};\n\nclass MatTooltipModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: MatTooltipModule, declarations: [MatTooltip, TooltipComponent], imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule], exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatTooltipModule, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule, MatCommonModule, CdkScrollableModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule],\n                    exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                    declarations: [MatTooltip, TooltipComponent],\n                    providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, getMatTooltipInvalidPositionError, matTooltipAnimations };\n","import * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i2 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i4 from '@angular/material/select';\nimport { MatSelectModule } from '@angular/material/select';\nimport * as i6 from '@angular/material/tooltip';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport * as i5 from '@angular/material/core';\nimport { mixinDisabled, mixinInitialized } from '@angular/material/core';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i3 from '@angular/material/form-field';\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatPaginatorIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatPaginatorIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatPaginatorIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY,\n};\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to _MatPaginatorBase.\n/** @docs-private */\nconst _MatPaginatorMixinBase = mixinDisabled(mixinInitialized(class {\n}));\nlet nextUniqueId = 0;\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorMixinBase {\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() {\n        return this._pageIndex;\n    }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() {\n        return this._length;\n    }\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() {\n        return this._pageSize;\n    }\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() {\n        return this._pageSizeOptions;\n    }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** Whether to hide the page size selection UI from the user. */\n    get hidePageSize() {\n        return this._hidePageSize;\n    }\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /** Whether to show the first/last buttons UI to the user. */\n    get showFirstLastButtons() {\n        return this._showFirstLastButtons;\n    }\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** ID for the DOM node containing the paginator's items per page label. */\n        this._pageSizeLabelId = `mat-paginator-page-size-label-${nextUniqueId++}`;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /** Used to configure the underlying `MatSelect` inside the paginator. */\n        this.selectConfig = {};\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n        this._formFieldAppearance = defaults?.formFieldAppearance || 'outline';\n    }\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex + 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize =\n                this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length,\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatPaginator, deps: [{ token: MatPaginatorIntl }, { token: i0.ChangeDetectorRef }, { token: MAT_PAGINATOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.0.4\", type: MatPaginator, selector: \"mat-paginator\", inputs: { disabled: \"disabled\", color: \"color\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", selectConfig: \"selectConfig\" }, outputs: { page: \"page\" }, host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-mdc-paginator\" }, exportAs: [\"matPaginator\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"firstPage()\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"lastPage()\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color);background-color:var(--mat-paginator-container-background-color);font-family:var(--mat-paginator-container-text-font);line-height:var(--mat-paginator-container-text-line-height);font-size:var(--mat-paginator-container-text-size);font-weight:var(--mat-paginator-container-text-weight);letter-spacing:var(--mat-paginator-container-text-tracking)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size)}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color)}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}\"], dependencies: [{ kind: \"component\", type: i2.MatIconButton, selector: \"button[mat-icon-button]\", exportAs: [\"matButton\"] }, { kind: \"component\", type: i3.MatFormField, selector: \"mat-form-field\", inputs: [\"hideRequiredMarker\", \"color\", \"floatLabel\", \"appearance\", \"subscriptSizing\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { kind: \"component\", type: i4.MatSelect, selector: \"mat-select\", inputs: [\"disabled\", \"disableRipple\", \"tabIndex\", \"aria-describedby\", \"panelClass\", \"hideSingleSelectionIndicator\", \"placeholder\", \"required\", \"multiple\", \"disableOptionCentering\", \"compareWith\", \"value\", \"aria-label\", \"aria-labelledby\", \"errorStateMatcher\", \"typeaheadDebounceInterval\", \"sortComparator\", \"id\", \"panelWidth\"], outputs: [\"openedChange\", \"opened\", \"closed\", \"selectionChange\", \"valueChange\"], exportAs: [\"matSelect\"] }, { kind: \"component\", type: i5.MatOption, selector: \"mat-option\", inputs: [\"value\", \"id\", \"disabled\"], outputs: [\"onSelectionChange\"], exportAs: [\"matOption\"] }, { kind: \"directive\", type: i6.MatTooltip, selector: \"[matTooltip]\", inputs: [\"matTooltipPosition\", \"matTooltipPositionAtOrigin\", \"matTooltipDisabled\", \"matTooltipShowDelay\", \"matTooltipHideDelay\", \"matTooltipTouchGestures\", \"matTooltip\", \"matTooltipClass\"], exportAs: [\"matTooltip\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatPaginator, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-paginator', exportAs: 'matPaginator', inputs: ['disabled'], host: {\n                        'class': 'mat-mdc-paginator',\n                        'role': 'group',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"firstPage()\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"lastPage()\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color);background-color:var(--mat-paginator-container-background-color);font-family:var(--mat-paginator-container-text-font);line-height:var(--mat-paginator-container-text-line-height);font-size:var(--mat-paginator-container-text-size);font-weight:var(--mat-paginator-container-text-weight);letter-spacing:var(--mat-paginator-container-text-tracking)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size)}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color)}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}\"] }]\n        }], ctorParameters: () => [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n                }] }], propDecorators: { color: [{\n                type: Input\n            }], pageIndex: [{\n                type: Input\n            }], length: [{\n                type: Input\n            }], pageSize: [{\n                type: Input\n            }], pageSizeOptions: [{\n                type: Input\n            }], hidePageSize: [{\n                type: Input\n            }], showFirstLastButtons: [{\n                type: Input\n            }], selectConfig: [{\n                type: Input\n            }], page: [{\n                type: Output\n            }] } });\n\nclass MatPaginatorModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatPaginatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: MatPaginatorModule, declarations: [MatPaginator], imports: [MatButtonModule, MatSelectModule, MatTooltipModule], exports: [MatPaginator] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatPaginatorModule, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [MatButtonModule, MatSelectModule, MatTooltipModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatPaginatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatButtonModule, MatSelectModule, MatTooltipModule],\n                    exports: [MatPaginator],\n                    declarations: [MatPaginator],\n                    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n","import { CompareWith } from './models/compare-with.model';\r\nimport { HistoryAttribute, HistoryAttributeValue, HistoryItem } from './models/history-item.model';\r\nimport { Version, VersionEntityAttributeValues, VersionJsonParsed } from './models/version.model';\r\n\r\nexport function getHistoryItems(versions: Version[], page: number, pageSize: number, compareWith: CompareWith) {\r\n  if (versions == null || page == null || pageSize == null || compareWith == null) { return null; }\r\n  const filtered = versions.slice((page - 1) * pageSize, page * pageSize);\r\n\r\n  const historyItems = calcHistoryItems(filtered, versions, compareWith);\r\n  return historyItems;\r\n}\r\n\r\nfunction calcHistoryItems(filteredVersions: Version[], versions: Version[], compareWith: CompareWith) {\r\n  return filteredVersions.map(version => {\r\n    const historyItem: HistoryItem = {\r\n      changeSetId: version.ChangeSetId,\r\n      attributes: calcHistoryAttributes(version, versions, compareWith),\r\n      historyId: version.HistoryId,\r\n      timeStamp: version.TimeStamp,\r\n      user: version.User,\r\n      versionNumber: version.VersionNumber,\r\n      isLastVersion: !versions.some(v => v.VersionNumber === version.VersionNumber + 1),\r\n    };\r\n    return historyItem;\r\n  });\r\n}\r\n\r\nfunction calcHistoryAttributes(version: Version, versions: Version[], compareWith: CompareWith) {\r\n  const currentDataTypes = (JSON.parse(version.Json) as VersionJsonParsed).Entity.Attributes;\r\n  const previousItem = compareWith === 'live' ? findLive(versions) : versions.find(v => v.VersionNumber === version.VersionNumber - 1);\r\n  const previousDataTypes = previousItem ? (JSON.parse(previousItem.Json) as VersionJsonParsed).Entity.Attributes : null;\r\n\r\n  const allAttributes: { name: string, dataType: string }[] = [];\r\n  if (currentDataTypes != null) {\r\n    Object.entries(currentDataTypes).forEach(([dataType, attributes]) => {\r\n      Object.keys(attributes).forEach(attributeName => {\r\n        if (allAttributes.find(a => a.name === attributeName && a.dataType === dataType) != null) { return; }\r\n        allAttributes.push({ name: attributeName, dataType });\r\n      });\r\n    });\r\n  }\r\n  if (previousDataTypes != null) {\r\n    Object.entries(previousDataTypes).forEach(([dataType, attributes]) => {\r\n      Object.keys(attributes).forEach(attributeName => {\r\n        if (allAttributes.find(a => a.name === attributeName && a.dataType === dataType) != null) { return; }\r\n        allAttributes.push({ name: attributeName, dataType });\r\n      });\r\n    });\r\n  }\r\n\r\n  const historyAttributes = allAttributes.map(attribute => {\r\n    const currentValues = currentDataTypes?.[attribute.dataType]?.[attribute.name];\r\n    const previousValues = previousDataTypes?.[attribute.dataType]?.[attribute.name];\r\n\r\n    const historyAttribute: HistoryAttribute = {\r\n      name: attribute.name,\r\n      dataType: attribute.dataType,\r\n      change: calcChangeType(currentValues, previousValues, true),\r\n      values: calcHistoryValues(currentValues, previousValues),\r\n    };\r\n    return historyAttribute;\r\n  });\r\n\r\n  return historyAttributes;\r\n}\r\n\r\nfunction findLive(versions: Version[]) {\r\n  let liveVersion = versions[0];\r\n  for (const version of versions) {\r\n    if (version.VersionNumber <= liveVersion.VersionNumber) { continue; }\r\n    liveVersion = version;\r\n  }\r\n  return liveVersion;\r\n}\r\n\r\nfunction calcHistoryValues(values: VersionEntityAttributeValues, previousValues: VersionEntityAttributeValues) {\r\n  const allLangKeys: string[] = [];\r\n  if (values != null) {\r\n    Object.keys(values).forEach(lang => {\r\n      if (allLangKeys.includes(lang)) { return; }\r\n      allLangKeys.push(lang);\r\n    });\r\n  }\r\n  if (previousValues != null) {\r\n    Object.keys(previousValues).forEach(lang => {\r\n      if (allLangKeys.includes(lang)) { return; }\r\n      allLangKeys.push(lang);\r\n    });\r\n  }\r\n\r\n  const historyValues = allLangKeys.map(langKey => {\r\n    const currentValue = values?.[langKey];\r\n    const previousValue = previousValues?.[langKey];\r\n\r\n    const historyValue: HistoryAttributeValue = {\r\n      langKey,\r\n      value: currentValue,\r\n      oldValue: previousValue,\r\n      change: calcChangeType(currentValue, previousValue),\r\n    };\r\n    return historyValue;\r\n  });\r\n\r\n  return historyValues;\r\n}\r\n\r\nfunction calcChangeType(currentValue: any, previousValue: any, sortObjectKeys = false) {\r\n  let change: 'new' | 'deleted' | 'changed' | 'none';\r\n\r\n  if (sortObjectKeys) {\r\n    if (typeof currentValue === 'object') {\r\n      currentValue = sortKeysAlphabetically(currentValue);\r\n    }\r\n    if (typeof previousValue === 'object') {\r\n      previousValue = sortKeysAlphabetically(previousValue);\r\n    }\r\n  }\r\n\r\n  if (currentValue != null && previousValue != null) {\r\n    if (JSON.stringify(currentValue) !== JSON.stringify(previousValue)) {\r\n      change = 'changed';\r\n    } else {\r\n      change = 'none';\r\n    }\r\n  } else if (currentValue != null) {\r\n    change = 'new';\r\n  } else {\r\n    change = 'deleted';\r\n  }\r\n\r\n  return change;\r\n}\r\n\r\nfunction sortKeysAlphabetically(obj: Record<string, any>): Record<string, any> {\r\n  if (typeof obj !== 'object') { return obj; }\r\n\r\n  return Object.keys(obj).sort().reduce((acc, key) => ({ ...acc, [key]: obj[key] }), {});\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Version } from '../models/version.model';\r\n\r\nconst webApiVersions = 'cms/history/';\r\n\r\n@Injectable()\r\nexport class VersionsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  fetchVersions(entityId: number) {\r\n    return this.http.post<Version[]>(\r\n      this.dnnContext.$2sxc.http.apiUrl(webApiVersions + 'get'),\r\n      { entityId },\r\n      {\r\n        params: { appId: this.context.appId.toString() },\r\n      },\r\n    );\r\n  }\r\n\r\n  restore(entityId: number, changeId: number) {\r\n    return this.http.post<boolean>(\r\n      this.dnnContext.$2sxc.http.apiUrl(webApiVersions + 'restore'),\r\n      { entityId },\r\n      {\r\n        params: { appId: this.context.appId.toString(), changeId: changeId.toString() },\r\n      },\r\n    );\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog eav-no-scrollbar\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">Item History</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"eav-dialog-content\">\r\n      <p>Check version history for this item and restore the version you need.</p>\r\n      @if (vm.historyItems?.length > 0) {\r\n        <div class=\"eav-compare-box\">\r\n          <mat-form-field color=\"accent\" class=\"eav-form-field eav-compare-box__dropdown\">\r\n            <mat-select [value]=\"vm.compareWith\" name=\"Scope\" (selectionChange)=\"compareChange($event.value)\">\r\n              <mat-option value=\"previous\">Compare with: Previous</mat-option>\r\n              <mat-option value=\"live\">Compare with: Live</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      }\r\n      <div>\r\n        @if (vm.historyItems === null) {\r\n          <div>Loading...</div>\r\n        }\r\n        @if (vm.historyItems?.length === 0) {\r\n          <div>No previous versions of this item found</div>\r\n        }\r\n        @if (vm.historyItems?.length > 0) {\r\n          <mat-accordion multi class=\"eav-history-tables\">\r\n            @for (historyItem of vm.historyItems; track historyItem) {\r\n              <mat-expansion-panel\r\n                [expanded]=\"expandedPanels[historyItem.versionNumber]\"\r\n                (expandedChange)=\"panelExpandedChange($event, historyItem.versionNumber)\">\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title>Version {{ historyItem.versionNumber }}</mat-panel-title>\r\n                  <mat-panel-description>{{ historyItem.timeStamp | date:'yyyy-MM-dd hh:mm' }}</mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                @if (expandedPanels[historyItem.versionNumber]) {\r\n                  @for (attribute of historyItem.attributes; track attribute) {\r\n                    <div class=\"eav-table-row\">\r\n                      <div class=\"eav-table-row__main eav-row-main\"\r\n                        (click)=\"attributeExpandedToggle(historyItem.versionNumber, attribute.name)\">\r\n                        <div class=\"eav-row-main__label eav-history-{{ attribute.change }}\">\r\n                          {{ attribute.name }}\r\n                        </div>\r\n                        <div class=\"eav-row-main__value eav-history-{{ attribute.change }}\">\r\n                          @if (!expandedAttributes[historyItem.versionNumber + attribute.name]) {\r\n                            {{ attribute.values[0]?.value }}\r\n                          }\r\n                        </div>\r\n                        <div class=\"eav-row-main__type\">\r\n                          <i>[{{ attribute.dataType }}]</i>\r\n                        </div>\r\n                      </div>\r\n                      @if (expandedAttributes[historyItem.versionNumber + attribute.name]) {\r\n                        <div class=\"eav-table-row__details\">\r\n                          @for (value of attribute.values; track value) {\r\n                            <div class=\"eav-detail-row\">\r\n                              <div class=\"eav-detail-row__label eav-history-{{ value.change }}\">{{ value.langKey }}:</div>\r\n                              <div class=\"eav-detail-row__value\">\r\n                                @if (value.change !== 'changed') {\r\n                                  <div class=\"eav-history-{{ value.change }}\">\r\n                                    {{ value.change === 'deleted' ? value.oldValue : value.value }}\r\n                                  </div>\r\n                                }\r\n                                @if (value.change === 'changed') {\r\n                                  <div class=\"eav-history-new\">{{ value.value }}</div>\r\n                                  <div class=\"eav-history-deleted eav-history-deleted__value\">{{ value.oldValue }}</div>\r\n                                }\r\n                              </div>\r\n                            </div>\r\n                          }\r\n                        </div>\r\n                      }\r\n                    </div>\r\n                  }\r\n                  <div class=\"eav-row-actions\">\r\n                    @if (!historyItem.isLastVersion) {\r\n                      <button mat-raised-button color=\"accent\"\r\n                        (click)=\"restore(historyItem.changeSetId)\">\r\n                        Restore\r\n                      </button>\r\n                    }\r\n                  </div>\r\n                }\r\n              </mat-expansion-panel>\r\n            }\r\n          </mat-accordion>\r\n        }\r\n      </div>\r\n      @if (vm.historyItems?.length > 0) {\r\n        <mat-paginator color=\"accent\" showFirstLastButtons=\"true\" [length]=\"vm.length\" [pageSize]=\"vm.pageSize\"\r\n          [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\">\r\n        </mat-paginator>\r\n      }\r\n    </div>\r\n  </div>\r\n}","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { PageEvent, MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, map } from 'rxjs';\r\nimport { getHistoryItems } from './item-history.helpers';\r\nimport { CompareWith } from './models/compare-with.model';\r\nimport { ItemHistoryResult } from './models/item-history-result.model';\r\nimport { Version } from './models/version.model';\r\nimport { VersionsService } from './services/versions.service';\r\nimport { AsyncPipe, DatePipe } from '@angular/common';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@Component({\r\n    selector: 'app-item-history',\r\n    templateUrl: './item-history.component.html',\r\n    styleUrls: ['./item-history.component.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        MatButtonModule,\r\n        SharedComponentsModule,\r\n        MatIconModule,\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        MatExpansionModule,\r\n        MatPaginatorModule,\r\n        AsyncPipe,\r\n        DatePipe,\r\n    ],\r\n    providers: [\r\n        VersionsService,\r\n    ],\r\n})\r\nexport class ItemHistoryComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  pageSizeOptions = [10, 20, 50];\r\n  expandedPanels: Record<string, boolean> = {};\r\n  expandedAttributes: Record<string, boolean> = {};\r\n\r\n  private itemId = parseInt(this.route.snapshot.paramMap.get('itemId'), 10);\r\n  private versions$ = new BehaviorSubject<Version[]>(null);\r\n  private page$ = new BehaviorSubject(1);\r\n  private pageSize$ = new BehaviorSubject(this.pageSizeOptions[0]);\r\n  private compareWith$ = new BehaviorSubject<CompareWith>('live');\r\n  private historyItems$ = combineLatest([this.versions$, this.page$, this.pageSize$, this.compareWith$]).pipe(\r\n    map(([versions, page, pageSize, compareWith]) => getHistoryItems(versions, page, pageSize, compareWith)),\r\n  );\r\n  viewModel$ = combineLatest([this.versions$, this.historyItems$, this.pageSize$, this.compareWith$]).pipe(\r\n    map(([versions, historyItems, pageSize, compareWith]) => ({\r\n      length: versions?.length,\r\n      historyItems,\r\n      pageSize,\r\n      compareWith,\r\n    })),\r\n  );\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<ItemHistoryComponent>,\r\n    private route: ActivatedRoute,\r\n    private versionsService: VersionsService,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.versionsService.fetchVersions(this.itemId).subscribe(versions => {\r\n      this.versions$.next(versions);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.versions$.complete();\r\n    this.page$.complete();\r\n    this.pageSize$.complete();\r\n    this.compareWith$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  compareChange(newCompareWith: CompareWith) {\r\n    this.compareWith$.next(newCompareWith);\r\n  }\r\n\r\n  panelExpandedChange(expand: boolean, versionNumber: number) {\r\n    this.expandedPanels[versionNumber] = expand;\r\n  }\r\n\r\n  attributeExpandedToggle(versionNumber: number, name: string) {\r\n    this.expandedAttributes[versionNumber + name] = !this.expandedAttributes[versionNumber + name];\r\n  }\r\n\r\n  pageChange(event: PageEvent) {\r\n    const newPage = event.pageIndex + 1;\r\n    if (newPage !== this.page$.value) {\r\n      this.expandedPanels = {};\r\n      this.expandedAttributes = {};\r\n      this.page$.next(newPage);\r\n    }\r\n    const newPageSize = event.pageSize;\r\n    if (newPageSize !== this.pageSize$.value) {\r\n      this.pageSize$.next(newPageSize);\r\n    }\r\n  }\r\n\r\n  restore(changeId: number) {\r\n    this.snackBar.open('Restoring previous version...');\r\n    this.versionsService.restore(this.itemId, changeId).subscribe(res => {\r\n      this.snackBar.open('Previous version restored. Will reload edit dialog', null, { duration: 3000 });\r\n      const result: ItemHistoryResult = {\r\n        refreshEdit: true,\r\n      };\r\n      this.dialogRef.close(result);\r\n    });\r\n  }\r\n}\r\n"],"x_google_ignoreList":[0,1]}