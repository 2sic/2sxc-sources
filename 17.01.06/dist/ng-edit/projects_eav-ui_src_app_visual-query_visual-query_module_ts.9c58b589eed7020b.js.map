{"version":3,"file":"projects_eav-ui_src_app_visual-query_visual-query_module_ts.9c58b589eed7020b.js","mappings":"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","names":["QueryDefinitionService","constructor","http","context","dnnContext","this","fetchPipeline","pipelineEntityId","dataSources","get","$2sxc","apiUrl","webApiQueryGet","params","appId","toString","id","pipe","map","pipelineModel","DataSources","length","buildDefaultModel","fixPipelineDataSources","templateDataSources","eavConstants","pipelineDesigner","defaultPipeline","templateDS","dataSource","find","ds","PartAssemblyAndType","push","Description","EntityGuid","EntityId","undefined","Name","VisualDesignerData","Pipeline","StreamWiring","streamWiring","pipelineDataSources","some","pipelineDS","outDataSource","outDs","pipelineDataSource","Top","Left","fetchDataSources","webApiQueryDataSources","appid","zoneId","ContentType","Difficulty","dataSourceDifficulties","default","DynamicIn","DynamicOut","EnableConfig","HelpLink","Icon","In","Out","PrimaryType","TypeNameForUi","UiHint","typeNameFilter","input","format","globalParts","split","classFullNameParts","savePipeline","pipeline","post","webApiQuerySave","Id","newPipelineModel","runPipeline","top","webApiQueryRun","debugStream","source","sourceOut","webApiQueryDebugStream","from","out","static","t","i0","i1","i2","i3","core","Yz7","factory","ɵfac","ctx_r0","name","sourceName","ctx_r3","option_r10","_r19","$implicit","ctx_r18","show","QueryResultComponent_For_18_Conditional_2_Template","QueryResultComponent_For_18_Conditional_3_Template","param_r22","QueryResultComponent_Conditional_22_div_1_Template","QueryResultComponent_Conditional_22_For_5_Template","ctx_r5","parameters","source_r27","value","Definition","config_r35","key","QueryResultComponent_For_37_Conditional_2_Template","QueryResultComponent_For_37_For_10_Template","Guid","Type","Configuration","Error","stream_r40","Source","SourceOut","Target","TargetIn","Count","QueryResultComponent","dialogData","dialogRef","visualQueryService","ngOnInit","pipelineModel$","Params","filter","el","testParams","TestParameters","concat","timeUsed","result","QueryTimer","Milliseconds","ticksUsed","Ticks","optionsForTop","Query","sources","Sources","streams","Streams","closeDialog","close","original","MAT_DIALOG_DATA","Xpm","selectors","decls","vars","consts","template","rf","ctx","QueryResultComponent_Conditional_4_Template","QueryResultComponent_div_13_Template","QueryResultComponent_Conditional_15_Template","QueryResultComponent_Conditional_16_Template","QueryResultComponent_For_18_Template","QueryResultComponent_Conditional_22_Template","QueryResultComponent_div_24_Template","QueryResultComponent_For_37_Template","QueryResultComponent_div_40_Template","QueryResultComponent_For_53_Template","StreamErrorResultComponent","errorData","openInsights","window","open","VisualQueryService","BaseComponent","router","route","queryDefinitionService","titleService","snackBar","dialog","viewContainerRef","zone","metadataService","contentTypesService","changeDetectorRef","super","BehaviorSubject","dataSources$","putEntityCountOnConnections$","Subject","dataSourceConfigs$","pipelineId","parseInt","snapshot","paramMap","refreshPipeline","refreshDataSourceConfigs","ngOnDestroy","complete","init","attachKeyboardSave","subscription","add","refreshOnChildClosedShallow","subscribe","editPipelineEntity","formUrl","convertFormToUrl","items","navigate","relativeTo","saveAndRun","save","run","showDataSourceDetails","showDetails","cloneDeep","visualDesignerData","GeneralHelpers","tryParse","ShowDataSourceDetails","JSON","stringify","next","addDataSource","removeDataSource","pipelineDataSourceGuid","connections","streamsOut","StreamsOut","renameDataSource","changeDataSourceDescription","description","changeConnections","changeDataSourcePosition","position","calculateDataSourceConfigs","dataSourceConfigs","forEach","Metadata","metadataItem","Object","entries","attributeName","attributeValue","includes","Array","isArray","Title","editDataSource","contentTypeName","getMetadata","metadata","entity","targetType","keyType","Items","retrieveContentType","contentType","duration","ContentTypeName","For","target","TargetType","error","callback","pipelineResult","showQueryResult","console","warn","setTimeout","stream","showStreamErrorResult","streamResult","showSnackBar","setTitle","autoFocus","backdropClass","closeOnNavigation","data","panelClass","markForCheck","ErrorData","runOutsideAngular","fromEvent","firstChild","event","navigator","platform","match","metaKey","ctrlKey","keyCode","preventDefault","i4","i5","i6","i7","guiTypes","App","Label","Cache","Filter","Logic","Lookup","Modify","Security","Sort","Unknown","Debug","System","calculateTypeInfos","typeInfos","typeInfo","RenameStreamComponent_Conditional_9_Conditional_4_Template","RenameStreamComponent_Conditional_9_Conditional_5_Template","isSource","pipelineResultExists","controls","label","touched","errors","required","scopeOption_r10","RenameStreamComponent_Conditional_10_Conditional_0_For_5_Template","scopeOptions","labelOption_r16","RenameStreamComponent_Conditional_10_Conditional_4_For_2_Template","ctx_r6","labelOptions","RenameStreamComponent_Conditional_10_Conditional_0_Template","RenameStreamComponent_Conditional_10_Conditional_4_Template","RenameStreamComponent_Conditional_10_Conditional_5_Template","_r22","ctx_r21","toggleGuidedLabel","ctx_r23","RenameStreamComponent_Conditional_10_Conditional_13_Template","ctx_r1","advancedMode","guidedLabel","_c0","$event","_r25","ctx_r24","toggleAdvancedMode","ctx_r2","RenameStreamComponent","BaseSubsinkComponent","hostClass","buildForm","checked","rename","formValue","form","getRawValue","UntypedFormGroup","UntypedFormControl","Validators","scope","scopes","valueChanges","startWith","distinctUntilChanged","values","Scope","patchValue","getScopes","filtered","s","o","hostVars","hostBindings","RenameStreamComponent_Conditional_9_Template","RenameStreamComponent_Conditional_10_Template","RenameStreamComponent_Conditional_13_Template","valid","dataSrcIdPrefix","Plumber","jsPlumbRoot","onConnectionsChanged","onDragend","onDebugStream","lineCount","linePaintDefault","stroke","strokeWidth","outlineStroke","outlineWidth","lineColors","maxCols","uuidColorMap","bulkDelete","instance","jsPlumb","getInstance","getInstanceDefaults","batch","initDomDataSources","initWirings","bindEvents","repaintEverything","destroy","reset","unbindContainer","removeEndpointsOnDataSource","elementId","selectEndpoints","element","delete","getAllConnections","connection","From","sourceId","replace","endpoints","getOverlay","To","targetId","getStreamsOut","each","endpoint","join","putEntityCountOnConnections","sourceElementId","targetElementId","fromUuid","toUuid","getEndpoint","getUuid","setLabel","cssClass","events","click","overlay","AllowEdit","nextLinePaintStyle","uuid","assign","container","Container","Connector","curviness","PaintStyle","HoverPaintStyle","domDataSource","querySelector","draggable","grid","stop","finalPos","addEndpoint","targetEndpointUnlimited","buildTargetEndpoint","maxConnections","makeTarget","makeSource","buildSourceEndpoint","wire","guid","pipeDataSource","connect","uuids","paintStyle","message","to","endpointName","isIn","d","isDynamic","getEndpointInfo","endpointInfo","style","model","enabled","fill","radius","anchor","faces","overlays","getEndpointOverlays","endpointOrOverlay","onChangeLabel","isTarget","dropOptions","hoverClass","activeClass","location","width","afterClosed","newLabel","bind","info","targetEndpoint","deleteEndpoint","deleteConnection","fireEvent","endpointLabel","labelPrompt","getLabel","getEndpoints","canvas","classList","contains","Math","floor","random","trimmed","trim","endsWith","substring","dataSource_r5","ctx_r17","configureDataSource","vm_r1","ctx_r20","openHelp","_r26","remove","config_r28","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_For_3_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_5_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_6_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_8_Template","_r37","ctx_r35","allowEdit","editName","ctx_r38","editDescription","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_24_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_25_Template","ctx_r4","_c2","Width","_c3","isOutDataSource","getTypeName","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Template","PlumbEditorComponent_Conditional_0_Conditional_2_Template","hardReset","PlumbEditorComponent","scriptLoaded$","loadScripts","test","src","plumber","pipelineDesignerData$","objectsEqual","viewModel$","combineLatest","pipelineDesignerData","detectChanges","ngAfterViewInit","domDataSourcesLoaded$","domDataSourcesRef","changes","scriptLoaded","domDataSourcesLoaded","domRootRef","nativeElement","partAssemblyAndType","confirm","url","newName","prompt","newDescription","viewQuery","PlumbEditorComponent_Conditional_0_Template","PlumbEditorComponent_contFlowTmp","param_r8","RunExplorerComponent_Conditional_0_Conditional_20_For_2_Template","pipelineModel_r1","param_r15","RunExplorerComponent_Conditional_0_Conditional_24_For_2_Template","_r23","ctx_r22","RunExplorerComponent_Conditional_0_Conditional_27_Conditional_0_For_8_Template","warnings_r24","RunExplorerComponent_Conditional_0_Conditional_27_Conditional_0_Template","_r35","ctx_r34","saveAndRunQuery","ctx_r36","ctx_r37","editPipeline","ctx_r39","openParamsHelp","RunExplorerComponent_Conditional_0_Conditional_20_Template","RunExplorerComponent_Conditional_0_Conditional_24_Template","RunExplorerComponent_Conditional_0_Conditional_25_Template","RunExplorerComponent_Conditional_0_Conditional_27_Template","RunExplorerComponent_Conditional_0_Conditional_29_Template","ctx_r40","openRestApi","RunExplorerComponent_Conditional_0_contFlowTmp","visualDesignerData$","warnings$","RunExplorerComponent","asObservable","calculateWarnings","warnings","queryParams","param","midMatch","exec","testMid","urlMid","moduleId","GoToDevRest","getUrlQuery","RunExplorerComponent_Conditional_0_Template","RunExplorerComponent_contFlowTmp","dataSource_r10","_r16","ctx_r15","ctx_r9","AddExplorerComponent_Conditional_0_For_6_Conditional_5_For_2_Template","trackDataSources","group_r3","toggleItem","AddExplorerComponent_Conditional_0_For_6_Conditional_5_Template","tmp_2_0","toggledItems","_r21","toggleDifficulty","AddExplorerComponent_Conditional_0_For_6_Template","trackGroups","sorted","AddExplorerComponent","difficulties","difficulty$","difficulty","filterAndSortDataSources","maxDifficulty","sort","a","b","toLocaleLowerCase","localeCompare","type","advanced","item","toggleInArray","index","AddExplorerComponent_Conditional_0_Template","AddExplorerComponent_contFlowTmp","routes","path","component","VisualQueryComponent","explorer","activeExplorer","toggleExplorer","children","matcher","edit","loadChildren","Promise","all","__webpack_require__","e","then","m","EditModule","history","VisualQueryRoutingModule","oAB","cJS","RouterModule","forChild","VisualQueryModule","Context","MetadataService","ContentTypesService","provide","MAT_FORM_FIELD_DEFAULT_OPTIONS","useValue","subscriptSizing","MAT_SELECT_CONFIG","hideSingleSelectionIndicator","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","hideIcon","imports","CommonModule","SharedComponentsModule","MatIconModule","MatButtonModule","MatSlideToggleModule","MatSnackBarModule","MatDialogModule","MatTabsModule","MatFormFieldModule","ReactiveFormsModule","MatSelectModule","MatInputModule"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/visual-query/services/query-definition.service.ts","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.html","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.html","./projects/eav-ui/src/app/visual-query/services/visual-query.service.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.helpers.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumber.helper.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.html","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.html","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/visual-query-routing.module.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.html","./projects/eav-ui/src/app/visual-query/visual-query.module.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { webApiQueryDataSources, webApiQueryDebugStream, webApiQueryGet, webApiQueryRun, webApiQuerySave } from '../../app-administration/services';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult } from '../models';\r\n\r\n@Injectable()\r\nexport class QueryDefinitionService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  fetchPipeline(pipelineEntityId: number, dataSources: DataSource[]) {\r\n    return this.http.get<PipelineModel>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryGet), {\r\n      params: { appId: this.context.appId.toString(), id: pipelineEntityId.toString() }\r\n    }).pipe(\r\n      map(pipelineModel => {\r\n        // if pipeline is new, populate it with default model\r\n        if (!pipelineModel.DataSources.length) {\r\n          this.buildDefaultModel(pipelineModel, dataSources);\r\n        }\r\n        this.fixPipelineDataSources(pipelineModel.DataSources);\r\n        return pipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  private buildDefaultModel(pipelineModel: PipelineModel, dataSources: DataSource[]) {\r\n    const templateDataSources = eavConstants.pipelineDesigner.defaultPipeline.dataSources;\r\n    for (const templateDS of templateDataSources) {\r\n      const dataSource = dataSources.find(ds => ds.PartAssemblyAndType === templateDS.PartAssemblyAndType);\r\n      const pipelineDataSource: PipelineDataSource = {\r\n        Description: '',\r\n        EntityGuid: templateDS.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: dataSource.Name,\r\n        PartAssemblyAndType: templateDS.PartAssemblyAndType,\r\n        VisualDesignerData: templateDS.VisualDesignerData,\r\n      };\r\n      pipelineModel.DataSources.push(pipelineDataSource);\r\n    }\r\n\r\n    pipelineModel.Pipeline.StreamWiring = eavConstants.pipelineDesigner.defaultPipeline.streamWiring;\r\n  }\r\n\r\n  private fixPipelineDataSources(pipelineDataSources: PipelineDataSource[]) {\r\n    const outDataSourceExists = pipelineDataSources.some(\r\n      pipelineDS => pipelineDS.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    );\r\n    if (!outDataSourceExists) {\r\n      const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n      const outDsConst: PipelineDataSource = {\r\n        Description: outDs.Description,\r\n        EntityGuid: outDs.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: outDs.Name,\r\n        PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n        VisualDesignerData: outDs.VisualDesignerData,\r\n      };\r\n      pipelineDataSources.push(outDsConst);\r\n    }\r\n\r\n    for (const pipelineDataSource of pipelineDataSources) {\r\n      pipelineDataSource.VisualDesignerData ??= { Top: 50, Left: 50 };\r\n    }\r\n  }\r\n\r\n  fetchDataSources() {\r\n    return this.http.get<DataSource[]>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDataSources), {\r\n      params: {\r\n        appid: this.context.appId,\r\n        zoneId: this.context.zoneId,\r\n      },\r\n    }).pipe(\r\n      map(dataSources => {\r\n        const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n        const outDsConst: DataSource = {\r\n          ContentType: undefined,\r\n          Difficulty: eavConstants.pipelineDesigner.dataSourceDifficulties.default,\r\n          DynamicIn: true,\r\n          DynamicOut: false,\r\n          EnableConfig: undefined,\r\n          HelpLink: undefined,\r\n          Icon: undefined,\r\n          In: outDs.In,\r\n          Name: outDs.Name,\r\n          Out: undefined,\r\n          PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n          PrimaryType: outDs.PrimaryType,\r\n          TypeNameForUi: undefined,\r\n          UiHint: undefined,\r\n        };\r\n        dataSources.push(outDsConst);\r\n        return dataSources;\r\n      }),\r\n    );\r\n  }\r\n\r\n  typeNameFilter(input: string, format: 'className' | 'classFullName') {\r\n    const globalParts = input.split(', ');\r\n\r\n    switch (format) {\r\n      case 'classFullName':\r\n        const classFullName = globalParts[0];\r\n        return classFullName;\r\n      case 'className':\r\n        const classFullNameParts = globalParts[0].split('.');\r\n        const className = classFullNameParts[classFullNameParts.length - 1];\r\n        return className;\r\n      default:\r\n        return input;\r\n    }\r\n  }\r\n\r\n  /** Save the current query and reload entire definition as returned from server */\r\n  savePipeline(pipelineModel: PipelineModel) {\r\n    const pipeline = pipelineModel.Pipeline;\r\n    const dataSources = pipelineModel.DataSources;\r\n\r\n    return this.http.post<PipelineModel>(\r\n      this.dnnContext.$2sxc.http.apiUrl(webApiQuerySave),\r\n      { pipeline, dataSources },\r\n      { params: { appId: this.context.appId.toString(), Id: pipeline.EntityId.toString() } }\r\n    ).pipe(\r\n      map(newPipelineModel => {\r\n        this.fixPipelineDataSources(newPipelineModel.DataSources);\r\n        return newPipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  runPipeline(id: number, top: number) {\r\n    return this.http.get<PipelineResult>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryRun), {\r\n      params: { appId: this.context.appId.toString(), id: id.toString(), top: top.toString() }\r\n    });\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  debugStream(id: number, source: string, sourceOut: string, top: number) {\r\n    return this.http.get<PipelineResult>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDebugStream), {\r\n      params: { appId: this.context.appId.toString(), id: id.toString(), from: source, out: sourceOut, top: top.toString() }\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      Query Results\r\n      @if (debugStream) {\r\n        for Stream: \"{{ debugStream.name }}\" on Source: \"{{ debugStream.sourceName }}\"\r\n      }\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <p>\r\n      The Full result was logged to the Browser Console. Further down you'll find more debug-infos.\r\n      Executed in {{ timeUsed }}ms ({{ ticksUsed }} ticks)\r\n    </p>\r\n    <mat-tab-group dynamicHeight color=\"accent\" class=\"eav-tab-group\">\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Results\">\r\n          <span>Results</span>\r\n        </div>\r\n\r\n        <p class=\"eav-tab-description\">\r\n          @if (top === 0) {\r\n            Showing All results\r\n          }\r\n          @if (top !== 0) {\r\n            Showing top {{ top }} results\r\n          }\r\n          @for (option of optionsForTop; track option) {\r\n            <button mat-button (click)=\"show(option)\">\r\n              Show\r\n              @if (option === 0) {\r\n                All\r\n              }\r\n              @if (option !== 0) {\r\n                {{ option }}\r\n              }\r\n            </button>\r\n          }\r\n        </p>\r\n        <pre>{{ result | json }}</pre>\r\n      </mat-tab>\r\n\r\n      @if (parameters?.length) {\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Parameters\">\r\n            <span>Parameters</span>\r\n          </div>\r\n          <br />\r\n          <ul>\r\n            @for (param of parameters; track param) {\r\n              <li>{{ param }}</li>\r\n            }\r\n          </ul>\r\n        </mat-tab>\r\n      }\r\n\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Sources\">\r\n          <span>Sources</span>\r\n        </div>\r\n\r\n        <br />\r\n        <table>\r\n          <tr>\r\n            <th>Name and Guid</th>\r\n            <th>Type</th>\r\n            <th>Configuration</th>\r\n            <th>Error</th>\r\n          </tr>\r\n          @for (source of sources | keyvalue; track source) {\r\n            <tr>\r\n              <td>\r\n                @if (source.value.Definition?.Name) {\r\n                  <div>{{ source.value.Definition?.Name }}</div>\r\n                }\r\n                <pre>{{ source.value.Guid }}</pre>\r\n              </td>\r\n              <td>{{ source.value.Type }}</td>\r\n              <td>\r\n                <ol>\r\n                  @for (config of source.value.Configuration | keyvalue; track config) {\r\n                    <li>\r\n                      <b>{{ config.key }}</b>=<em>{{ config.value }}</em>\r\n                    </li>\r\n                  }\r\n                </ol>\r\n              </td>\r\n              <td>{{ source.value.Error }}</td>\r\n            </tr>\r\n          }\r\n        </table>\r\n      </mat-tab>\r\n\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Streams\">\r\n          <span>Streams</span>\r\n        </div>\r\n\r\n        <br />\r\n        <table>\r\n          <tr>\r\n            <th>Source</th>\r\n            <th>Target</th>\r\n            <th>Items</th>\r\n            <th>Error</th>\r\n          </tr>\r\n          @for (stream of streams; track stream) {\r\n            <tr>\r\n              <td>\r\n                <pre>{{ stream.Source + \":\" + stream.SourceOut }}</pre>\r\n              </td>\r\n              <td>\r\n                <pre>{{ stream.Target + \":\" + stream.TargetIn }}</pre>\r\n              </td>\r\n              <td>{{ stream.Count }}</td>\r\n              <td>{{ stream.Error }}</td>\r\n            </tr>\r\n          }\r\n        </table>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DebugStreamInfo, PipelineResultQuery, PipelineResultSources, PipelineResultStream } from '../models';\r\nimport { VisualQueryService } from '../services/visual-query.service';\r\nimport { QueryResultDialogData } from './query-result.models';\r\n\r\n@Component({\r\n  selector: 'app-query-result',\r\n  templateUrl: './query-result.component.html',\r\n  styleUrls: ['./query-result.component.scss'],\r\n})\r\nexport class QueryResultComponent implements OnInit {\r\n  parameters: string[];\r\n  timeUsed: number;\r\n  ticksUsed: number;\r\n  top: number;\r\n  optionsForTop: number[];\r\n  result: PipelineResultQuery;\r\n  debugStream: DebugStreamInfo;\r\n  sources: PipelineResultSources;\r\n  streams: PipelineResultStream[];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: QueryResultDialogData,\r\n    private dialogRef: MatDialogRef<QueryResultComponent>,\r\n    private visualQueryService: VisualQueryService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const pipeline = this.visualQueryService.pipelineModel$.value.Pipeline;\r\n    const params = (pipeline.Params?.split('\\n') ?? []).filter(el => !!el);\r\n    const testParams = (pipeline.TestParameters?.split('\\n') ?? []).filter(el => !!el);\r\n    this.parameters = [].concat(params, testParams);\r\n    this.timeUsed = this.dialogData.result.QueryTimer.Milliseconds;\r\n    this.ticksUsed = this.dialogData.result.QueryTimer.Ticks;\r\n    this.top = this.dialogData.top;\r\n    this.optionsForTop = [25, 100, 1000, 0];\r\n    this.result = this.dialogData.result.Query;\r\n    this.debugStream = this.dialogData.debugStream;\r\n    this.sources = this.dialogData.result.Sources;\r\n    this.streams = this.dialogData.result.Streams;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  show(top: number) {\r\n    if (top === this.top) { return; }\r\n\r\n    if (this.debugStream) {\r\n      this.visualQueryService.debugStream(this.debugStream.original, top);\r\n    } else {\r\n      this.visualQueryService.runPipeline(top);\r\n    }\r\n\r\n    this.closeDialog();\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { StreamErrorData } from '../models';\r\nimport { StreamErrorResultDialogData } from './stream-error-result.models';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-stream-error-result',\r\n  templateUrl: './stream-error-result.component.html',\r\n  styleUrls: ['./stream-error-result.component.scss'],\r\n})\r\nexport class StreamErrorResultComponent implements OnInit {\r\n  errorData: StreamErrorData;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: StreamErrorResultDialogData,\r\n    private dialogRef: MatDialogRef<StreamErrorResultComponent>,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.errorData = this.dialogData.errorData;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/logs?key=web-api-query'), '_blank');\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Stream Error Results</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <pre>{{ errorData | json }}</pre>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button class=\"eav-button__with-icon\" tippy=\"Open 2sxc Insights\" (click)=\"openInsights()\">\r\n      <mat-icon class=\"eav-icon\">speed</mat-icon>\r\n      <span>Insights</span>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Injectable, NgZone, OnDestroy, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { BehaviorSubject, filter, fromEvent, Subject } from 'rxjs';\r\nimport { ContentTypesService } from '../../app-administration/services/content-types.service';\r\nimport { GeneralHelpers } from '../../edit/shared/helpers';\r\nimport { MetadataService } from '../../permissions/services/metadata.service';\r\nimport { BaseComponent } from '../../shared/components/base-component/base.component';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../../shared/models/edit-form.model';\r\n// tslint:disable-next-line:max-line-length\r\nimport { DataSource, DataSourceConfig, DataSourceConfigs, DebugStreamInfo, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { QueryResultComponent } from '../query-result/query-result.component';\r\nimport { QueryResultDialogData } from '../query-result/query-result.models';\r\nimport { StreamErrorResultComponent } from '../stream-error-result/stream-error-result.component';\r\nimport { StreamErrorResultDialogData } from '../stream-error-result/stream-error-result.models';\r\nimport { QueryDefinitionService } from './query-definition.service';\r\n\r\n@Injectable()\r\nexport class VisualQueryService extends BaseComponent implements OnDestroy {\r\n  pipelineModel$ = new BehaviorSubject<PipelineModel>(null);\r\n  dataSources$ = new BehaviorSubject<DataSource[]>(null);\r\n  putEntityCountOnConnections$ = new Subject<PipelineResult>();\r\n  dataSourceConfigs$ = new BehaviorSubject<DataSourceConfigs>({});\r\n  pipelineResult?: PipelineResult;\r\n\r\n  private pipelineId = parseInt(this.route.snapshot.paramMap.get('pipelineId'), 10);\r\n  private refreshPipeline = false;\r\n  private refreshDataSourceConfigs = false;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private queryDefinitionService: QueryDefinitionService,\r\n    private titleService: Title,\r\n    private snackBar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private zone: NgZone,\r\n    private metadataService: MetadataService,\r\n    private contentTypesService: ContentTypesService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) { \r\n    super(router, route);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.pipelineModel$.complete();\r\n    this.dataSources$.complete();\r\n    this.putEntityCountOnConnections$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  init() {\r\n    this.fetchDataSources(() => this.fetchPipeline(true, true, false));\r\n    this.attachKeyboardSave();\r\n    this.subscription.add(this.refreshOnChildClosedShallow().subscribe(() => { \r\n      if (this.refreshPipeline || this.refreshDataSourceConfigs) {\r\n        this.fetchPipeline(this.refreshPipeline, this.refreshDataSourceConfigs, this.refreshPipeline);\r\n      }\r\n      this.refreshPipeline = false;\r\n      this.refreshDataSourceConfigs = false;\r\n     }));\r\n  }\r\n\r\n  editPipelineEntity() {\r\n    // save Pipeline, then open Edit Dialog\r\n    this.savePipeline(() => {\r\n      const form: EditForm = {\r\n        items: [{ EntityId: this.pipelineModel$.value.Pipeline.EntityId }],\r\n      };\r\n      const formUrl = convertFormToUrl(form);\r\n      this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n      this.refreshPipeline = true;\r\n    });\r\n  }\r\n\r\n  saveAndRun(save: boolean, run: boolean) {\r\n    if (save && run) {\r\n      this.savePipeline(() => { this.runPipeline(); });\r\n    } else if (save) {\r\n      this.savePipeline();\r\n    } else if (run) {\r\n      this.runPipeline();\r\n    }\r\n  }\r\n\r\n  showDataSourceDetails(showDetails: boolean) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const visualDesignerData: Record<string, any> = GeneralHelpers.tryParse(pipelineModel.Pipeline.VisualDesignerData) ?? {};\r\n    visualDesignerData.ShowDataSourceDetails = showDetails;\r\n    pipelineModel.Pipeline.VisualDesignerData = JSON.stringify(visualDesignerData);\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const newPipelineDataSource: PipelineDataSource = {\r\n      Description: '',\r\n      EntityGuid: 'unsaved' + (pipelineModel.DataSources.length + 1),\r\n      EntityId: undefined,\r\n      Name: dataSource.Name,\r\n      PartAssemblyAndType: dataSource.PartAssemblyAndType,\r\n      VisualDesignerData: { Top: 100, Left: 100 },\r\n    };\r\n    pipelineModel.DataSources.push(newPipelineDataSource);\r\n    this.pipelineModel$.next(pipelineModel);\r\n    this.savePipeline();\r\n  }\r\n\r\n  removeDataSource(pipelineDataSourceGuid: string, connections: StreamWire[], streamsOut: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    pipelineModel.DataSources = pipelineModel.DataSources.filter(pipelineDS => pipelineDS.EntityGuid !== pipelineDataSourceGuid);\r\n    pipelineModel.Pipeline.StreamWiring = connections;\r\n    pipelineModel.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  renameDataSource(pipelineDataSourceGuid: string, name: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    pipelineDataSource.Name = name;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeDataSourceDescription(pipelineDataSourceGuid: string, description: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    pipelineDataSource.Description = description;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeConnections(connections: StreamWire[], streamsOut: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    pipelineModel.Pipeline.StreamWiring = connections;\r\n    pipelineModel.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeDataSourcePosition(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    if (!pipelineDataSource) {\r\n      // spm NOTE: fixes problem where dataSource position can't be updated if dataSource with guid unsavedXX gets saved while dragging.\r\n      // Can happen if dataSource is just added and user drags it and save happens.\r\n      return;\r\n    }\r\n    pipelineDataSource.VisualDesignerData = { ...pipelineDataSource.VisualDesignerData, ...position };\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  private calculateDataSourceConfigs(dataSources: PipelineDataSource[]) {\r\n    const dataSourceConfigs: DataSourceConfigs = {};\r\n    dataSources.forEach(dataSource => {\r\n      if (dataSource.EntityId == null) { return; }\r\n      dataSourceConfigs[dataSource.EntityId] = [];\r\n      dataSource.Metadata?.forEach(metadataItem => {\r\n        Object.entries(metadataItem).forEach(([attributeName, attributeValue]) => {\r\n          if (attributeValue == null || attributeValue === '') { return; }\r\n          if (['Created', 'Guid', 'Id', 'Modified', 'Title', '_Type'].includes(attributeName)) { return; }\r\n          if (Array.isArray(attributeValue) && attributeValue[0]?.Title != null && attributeValue[0]?.Id != null) {\r\n            attributeValue = `${attributeValue[0].Title} (${attributeValue[0].Id})`;\r\n          }\r\n          const dataSourceConfig: DataSourceConfig = {\r\n            name: attributeName,\r\n            value: attributeValue,\r\n          };\r\n          dataSourceConfigs[dataSource.EntityId].push(dataSourceConfig);\r\n        });\r\n      });\r\n    });\r\n    this.dataSourceConfigs$.next(dataSourceConfigs);\r\n  }\r\n\r\n  editDataSource(pipelineDataSource: PipelineDataSource) {\r\n    const dataSource = this.dataSources$.value.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    const contentTypeName = dataSource.ContentType;\r\n    const targetType = eavConstants.metadata.entity.targetType;\r\n    const keyType = eavConstants.metadata.entity.keyType;\r\n    const key = pipelineDataSource.EntityGuid;\r\n\r\n    // query for existing Entity\r\n    this.metadataService.getMetadata(targetType, keyType, key, contentTypeName).subscribe(metadata => {\r\n      // edit existing Entity\r\n      if (metadata.Items.length) {\r\n        const form: EditForm = {\r\n          items: [{ EntityId: metadata.Items[0].Id }],\r\n        };\r\n        const formUrl = convertFormToUrl(form);\r\n        this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n        this.refreshDataSourceConfigs = true;\r\n        return;\r\n      }\r\n\r\n      // Check if the type exists, and if yes, create new Entity\r\n      this.contentTypesService.retrieveContentType(contentTypeName).subscribe({\r\n        next: contentType => {\r\n          if (contentType == null) {\r\n            this.snackBar.open('DataSource doesn\\'t have any configuration', undefined, { duration: 3000 });\r\n            return;\r\n          }\r\n          const form: EditForm = {\r\n            items: [{\r\n              ContentTypeName: contentTypeName,\r\n              For: {\r\n                Target: eavConstants.metadata.entity.target,\r\n                TargetType: eavConstants.metadata.entity.targetType,\r\n                Guid: key,\r\n              },\r\n            }],\r\n          };\r\n          const formUrl = convertFormToUrl(form);\r\n          this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n          this.refreshDataSourceConfigs = true;\r\n        },\r\n        error: (error: HttpErrorResponse) => {\r\n          const message = 'Server reports error - this usually means that this DataSource doesn\\'t have any configuration';\r\n          this.snackBar.open(message, undefined, { duration: 3000 });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private savePipeline(callback?: () => void) {\r\n    this.snackBar.open('Saving...');\r\n    this.queryDefinitionService.savePipeline(this.pipelineModel$.value).subscribe({\r\n      next: pipelineModel => {\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n        this.pipelineModel$.next(pipelineModel);\r\n        if (callback != null) { callback(); }\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Save Pipeline failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  runPipeline(top = 25) {\r\n    this.snackBar.open('Running query...');\r\n    this.queryDefinitionService.runPipeline(this.pipelineModel$.value.Pipeline.EntityId, top).subscribe({\r\n      next: pipelineResult => {\r\n        this.snackBar.open('Query worked', null, { duration: 2000 });\r\n        this.pipelineResult = pipelineResult;\r\n        this.showQueryResult(pipelineResult, top);\r\n        console.warn(pipelineResult);\r\n        // push cloned pipelineModel to reset jsPlumb\r\n        this.pipelineModel$.next(cloneDeep(this.pipelineModel$.value));\r\n        setTimeout(() => { this.putEntityCountOnConnections$.next(pipelineResult); });\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Query failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  debugStream(stream: PipelineResultStream, top = 25) {\r\n    if (stream.Error) {\r\n      this.showStreamErrorResult(stream);\r\n      return;\r\n    }\r\n\r\n    if (stream.Count === 0) { return; }\r\n\r\n    this.snackBar.open('Running stream...');\r\n    const pipelineId = this.pipelineModel$.value.Pipeline.EntityId;\r\n    this.queryDefinitionService.debugStream(pipelineId, stream.Source, stream.SourceOut, top).subscribe({\r\n      next: streamResult => {\r\n        this.snackBar.open('Stream worked', null, { duration: 2000 });\r\n        const pipelineDataSource = this.pipelineModel$.value.DataSources.find(ds => ds.EntityGuid === stream.Source);\r\n        const debugStream: DebugStreamInfo = {\r\n          name: stream.SourceOut,\r\n          source: stream.Source,\r\n          sourceName: pipelineDataSource.Name,\r\n          original: stream,\r\n        };\r\n        this.showQueryResult(streamResult, top, debugStream);\r\n        console.warn(streamResult);\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Stream failed', null, { duration: 2000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  private fetchPipeline(refreshPipeline: boolean, refreshDataSourceConfigs: boolean, showSnackBar: boolean) {\r\n    if (showSnackBar) {\r\n      this.snackBar.open('Reloading query, please wait...');\r\n    }\r\n    this.queryDefinitionService.fetchPipeline(this.pipelineId, this.dataSources$.value).subscribe(pipelineModel => {\r\n      if (showSnackBar) {\r\n        this.snackBar.open('Query reloaded', null, { duration: 2000 });\r\n      }\r\n      this.titleService.setTitle(`${pipelineModel.Pipeline.Name} - Visual Query`);\r\n      if (refreshPipeline) {\r\n        this.pipelineModel$.next(pipelineModel);\r\n      }\r\n      if (refreshDataSourceConfigs) {\r\n        this.calculateDataSourceConfigs(pipelineModel.DataSources);\r\n      }\r\n    });\r\n  }\r\n\r\n  private showQueryResult(result: PipelineResult, top: number, debugStream?: DebugStreamInfo) {\r\n    const dialogData: QueryResultDialogData = {\r\n      result,\r\n      debugStream,\r\n      top,\r\n    };\r\n    this.dialog.open(QueryResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private showStreamErrorResult(stream: PipelineResultStream) {\r\n    const dialogData: StreamErrorResultDialogData = {\r\n      errorData: stream.ErrorData,\r\n    };\r\n    this.dialog.open(StreamErrorResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private fetchDataSources(callback?: () => void) {\r\n    this.queryDefinitionService.fetchDataSources().subscribe(dataSources => {\r\n      this.dataSources$.next(dataSources);\r\n      callback();\r\n    });\r\n  }\r\n\r\n  private attachKeyboardSave() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscription.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown').pipe(\r\n          filter(() => !this.route.snapshot.firstChild),\r\n          filter(event => {\r\n            const CTRL_S = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.keyCode === 83;\r\n            return CTRL_S;\r\n          }),\r\n        ).subscribe(event => {\r\n          event.preventDefault();\r\n          this.zone.run(() => { this.savePipeline(); });\r\n        })\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { DataSource, PipelineDataSource } from '../models';\r\nimport { GuiTypes, TypeInfo, TypeInfos } from './plumb-editor.models';\r\n\r\nexport const guiTypes: GuiTypes = {\r\n  App: { Name: 'App', Label: 'App DataSources', Icon: 'star', UiHint: 'DataSources from the current App' },\r\n  Cache: { Name: 'Cache', Icon: 'history', UiHint: 'Caching of data' },\r\n  Filter: { Name: 'Filter', Icon: 'filter_list', UiHint: 'Filter data - usually returning less items than came in' },\r\n  Logic: { Name: 'Logic', Icon: 'share', UiHint: 'Logic operations - usually choosing between different streams' },\r\n  Lookup: { Name: 'Lookup', Icon: 'search', UiHint: 'Lookup operation - usually looking for other data based on a criteria' },\r\n  Modify: { Name: 'Modify', Icon: 'edit_attributes', UiHint: 'Modify data - usually changing, adding or removing values' },\r\n  Security: { Name: 'Security', Icon: 'account_circle', UiHint: 'Security - usually limit what the user sees based on his identity' },\r\n  Sort: { Name: 'Sort', Icon: 'sort', UiHint: 'Sort the items' },\r\n  Source: { Name: 'Source', Icon: 'cloud_upload', UiHint: 'Source of new data - usually SQL, CSV or similar' },\r\n  Target: { Name: 'Target', Icon: 'adjust', UiHint: 'Target - usually just a destination of data' },\r\n  Unknown: { Name: 'Unknown', Icon: 'fiber_manual_record', UiHint: 'Unknown type' },\r\n  Debug: { Name: 'Debug', Icon: 'bug_report', UiHint: 'Debugging Tools'},\r\n  System: { Name: 'System', Icon: 'military_tech', UiHint: 'System Data' },\r\n};\r\n\r\nexport function calculateTypeInfos(pipelineDataSources: PipelineDataSource[], dataSources: DataSource[]) {\r\n  const typeInfos: TypeInfos = {};\r\n\r\n  for (const pipelineDataSource of pipelineDataSources) {\r\n    let typeInfo: TypeInfo;\r\n    const dataSource = dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    if (dataSource) {\r\n      typeInfo = { ...(dataSource.PrimaryType ? guiTypes[dataSource.PrimaryType] : guiTypes.Unknown) };\r\n      if (dataSource.Icon != null) { typeInfo.Icon = dataSource.Icon; }\r\n      if (dataSource.DynamicIn != null) { typeInfo.DynamicIn = dataSource.DynamicIn; }\r\n      if (dataSource.DynamicOut != null) { typeInfo.DynamicOut = dataSource.DynamicOut; }\r\n      if (dataSource.HelpLink != null) { typeInfo.HelpLink = dataSource.HelpLink; }\r\n      if (dataSource.EnableConfig != null) { typeInfo.EnableConfig = dataSource.EnableConfig; }\r\n      if (dataSource.UiHint != null) { typeInfo.UiHint = dataSource.UiHint; }\r\n    }\r\n    if (!typeInfo) { typeInfo = { ...guiTypes.Unknown }; }\r\n    typeInfos[pipelineDataSource.EntityGuid] = typeInfo;\r\n  }\r\n\r\n  return typeInfos;\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Rename stream</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <form [formGroup]=\"form\">\r\n      <!-- Simple form -->\r\n      @if (!isSource || !pipelineResultExists) {\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"label\" required>\r\n        </mat-form-field>\r\n        @if (isSource && !pipelineResultExists) {\r\n          <app-field-hint>\r\n            You will get suggestions for out-streams after you run query\r\n          </app-field-hint>\r\n        }\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n\r\n      <!-- Rich form -->\r\n      @if (isSource && pipelineResultExists) {\r\n        <!-- Scope -->\r\n        @if (advancedMode && guidedLabel) {\r\n          <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n            <mat-label>Scope</mat-label>\r\n            <mat-select formControlName=\"scope\" [placeholder]=\"!scopeOptions.length ? 'No items found' : ''\">\r\n              @for (scopeOption of scopeOptions; track scopeOption) {\r\n                <mat-option [value]=\"scopeOption.value\">\r\n                  {{ scopeOption.name }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <app-field-hint>\r\n            The scope should almost never be changed -\r\n            <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n          </app-field-hint>\r\n        }\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          @if (guidedLabel) {\r\n            <mat-select formControlName=\"label\" required\r\n              [placeholder]=\"!labelOptions.length ? 'No items found' : ''\">\r\n              @for (labelOption of labelOptions; track labelOption) {\r\n                <mat-option [value]=\"labelOption\">\r\n                  {{ labelOption }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          }\r\n          @if (!guidedLabel) {\r\n            <input matInput type=\"text\" formControlName=\"label\" required>\r\n          }\r\n          <div matTextSuffix class=\"eav-selection-suffix\">\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': guidedLabel }\" tippy=\"Pick existing value\"\r\n              (click)=\"toggleGuidedLabel(true)\">\r\n              <mat-icon class=\"eav-icon\">search</mat-icon>\r\n            </button>\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': !guidedLabel }\" tippy=\"Manual entry\"\r\n              (click)=\"toggleGuidedLabel(false)\">\r\n              <mat-icon class=\"eav-icon\">text_fields</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-form-field>\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n    </form>\r\n  </div>\r\n  <mat-dialog-actions class=\"eav-dialog-actions\">\r\n    <!-- Extra button for rich form -->\r\n    <div>\r\n      @if (isSource && pipelineResultExists) {\r\n        <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n          {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n        </mat-slide-toggle>\r\n      }\r\n    </div>\r\n    <div>\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\" [disabled]=\"!form.valid\" (click)=\"rename()\">\r\n        Rename\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n</div>","import { ChangeDetectorRef, Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { distinctUntilChanged, startWith, Subscription } from 'rxjs';\r\nimport { ContentTypesService } from '../../../app-administration/services';\r\nimport { BaseSubsinkComponent } from '../../../shared/components/base-subsink-component/base-subsink.component';\r\nimport { eavConstants, ScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { VisualQueryService } from '../../services/visual-query.service';\r\nimport { RenameStreamDialogControls, RenameStreamDialogData, RenameStreamDialogFormValue } from './rename-stream.models';\r\n\r\n@Component({\r\n  selector: 'app-rename-stream',\r\n  templateUrl: './rename-stream.component.html',\r\n  styleUrls: ['./rename-stream.component.scss']\r\n})\r\nexport class RenameStreamComponent extends BaseSubsinkComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  controls: RenameStreamDialogControls;\r\n  isSource = this.dialogData.isSource;\r\n  pipelineResultExists = this.visualQueryService.pipelineResult != null;\r\n  scopeOptions: ScopeOption[] = [];\r\n  labelOptions: string[] = [];\r\n  guidedLabel = true;\r\n  advancedMode = false;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: RenameStreamDialogData,\r\n    private dialogRef: MatDialogRef<RenameStreamComponent>,\r\n    private visualQueryService: VisualQueryService,\r\n    private contentTypesService: ContentTypesService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(label?: string): void {\r\n    this.dialogRef.close(label);\r\n  }\r\n\r\n  toggleGuidedLabel(guidedLabel: boolean): void {\r\n    this.guidedLabel = guidedLabel;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  rename(): void {\r\n    const formValue: RenameStreamDialogFormValue = this.form.getRawValue();\r\n    this.closeDialog(formValue.label);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({\r\n      label: new UntypedFormControl(this.dialogData.label, Validators.required),\r\n      scope: new UntypedFormControl(eavConstants.scopes.default.value),\r\n    });\r\n    this.controls = this.form.controls as any;\r\n\r\n    if (!this.isSource || !this.pipelineResultExists) { return; }\r\n\r\n    this.subscription.add(\r\n      this.controls.scope.valueChanges.pipe(\r\n        startWith<string>(this.controls.scope.value),\r\n        distinctUntilChanged(),\r\n      ).subscribe(scope => {\r\n        this.labelOptions = Object.values(this.visualQueryService.pipelineResult.Sources)\r\n          .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out\r\n          .filter(out => out.Scope === scope)\r\n          .map(out => out.Name);\r\n        if (!this.labelOptions.includes(this.controls.label.value) && this.controls.label.value != null) {\r\n          this.controls.label.patchValue(null);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.contentTypesService.getScopes().subscribe(scopes => {\r\n      const sourceOut = Object.values(this.visualQueryService.pipelineResult.Sources)\r\n        .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out;\r\n      const filtered = scopes.filter(s => sourceOut.some(o => o.Scope === s.value));\r\n      this.scopeOptions = filtered;\r\n      this.changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectorRef, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { EndpointInfo, PlumbType } from './plumb-editor.models';\r\nimport { RenameStreamComponent } from './rename-stream/rename-stream.component';\r\nimport { RenameStreamDialogData } from './rename-stream/rename-stream.models';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport const dataSrcIdPrefix = 'dataSource_';\r\n\r\nexport class Plumber {\r\n  private instance: PlumbType;\r\n  private lineCount = 0;\r\n  private linePaintDefault = {\r\n    stroke: '#61B7CF',\r\n    strokeWidth: 4,\r\n    outlineStroke: 'white',\r\n    outlineWidth: 2,\r\n  };\r\n  private lineColors = [\r\n    '#009688', '#00bcd4', '#3f51b5', '#9c27b0', '#e91e63',\r\n    '#db4437', '#ff9800', '#60a917', '#60a917', '#008a00',\r\n    '#00aba9', '#1ba1e2', '#0050ef', '#6a00ff', '#aa00ff',\r\n    '#f472d0', '#d80073', '#a20025', '#e51400', '#fa6800',\r\n    '#f0a30a', '#e3c800', '#825a2c', '#6d8764', '#647687',\r\n    '#76608a', '#a0522d',\r\n  ];\r\n  private maxCols = this.lineColors.length - 1;\r\n  private uuidColorMap: Record<string, any> = {};\r\n  private bulkDelete = false;\r\n  private dialogRef: MatDialogRef<RenameStreamComponent>;\r\n\r\n  constructor(\r\n    private jsPlumbRoot: HTMLElement,\r\n    private pipelineModel: PipelineModel,\r\n    private dataSources: DataSource[],\r\n    private onConnectionsChanged: () => void,\r\n    private onDragend: (pipelineDataSourceGuid: string, position: VisualDesignerData) => void,\r\n    private onDebugStream: (stream: PipelineResultStream) => void,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    this.instance = window.jsPlumb.getInstance(this.getInstanceDefaults(this.jsPlumbRoot));\r\n    this.instance.batch(() => {\r\n      this.initDomDataSources();\r\n      this.initWirings();\r\n      this.bindEvents();\r\n    });\r\n    // spm NOTE: repaint after initial paint fixes:\r\n    // Error: <svg> attribute width: Expected length, \"-Infinity\".\r\n    this.instance.repaintEverything();\r\n  }\r\n\r\n  destroy() {\r\n    this.dialogRef?.close();\r\n    this.instance.reset();\r\n    this.instance.unbindContainer();\r\n  }\r\n\r\n  removeEndpointsOnDataSource(pipelineDataSourceGuid: string) {\r\n    const elementId = dataSrcIdPrefix + pipelineDataSourceGuid;\r\n    this.bulkDelete = true;\r\n    this.instance.batch(() => {\r\n      this.instance.selectEndpoints({ element: elementId }).delete();\r\n    });\r\n    this.bulkDelete = false;\r\n  }\r\n\r\n  getAllConnections() {\r\n    const connectionInfos: StreamWire[] = this.instance.getAllConnections().map((connection: PlumbType) => {\r\n      const wire: StreamWire = {\r\n        From: connection.sourceId.replace(dataSrcIdPrefix, ''),\r\n        Out: connection.endpoints[0].getOverlay('endpointLabel').label,\r\n        To: connection.targetId.replace(dataSrcIdPrefix, ''),\r\n        In: connection.endpoints[1].getOverlay('endpointLabel').label,\r\n      };\r\n      return wire;\r\n    });\r\n    return connectionInfos;\r\n  }\r\n\r\n  getStreamsOut() {\r\n    const streamsOut: string[] = [];\r\n    this.instance.selectEndpoints({ target: dataSrcIdPrefix + 'Out' }).each((endpoint: PlumbType) => {\r\n      streamsOut.push(endpoint.getOverlay('endpointLabel').label);\r\n    });\r\n    const streamsOutStr = streamsOut.join(',');\r\n    return streamsOutStr;\r\n  }\r\n\r\n  putEntityCountOnConnections(result: PipelineResult) {\r\n    result.Streams?.forEach(stream => {\r\n      const sourceElementId = dataSrcIdPrefix + stream.Source;\r\n      const outTargets = ['00000000-0000-0000-0000-000000000000', this.pipelineModel.Pipeline.EntityGuid];\r\n      const targetElementId = outTargets.includes(stream.Target) ? dataSrcIdPrefix + 'Out' : dataSrcIdPrefix + stream.Target;\r\n\r\n      const fromUuid = sourceElementId + '_out_' + stream.SourceOut;\r\n      const toUuid = targetElementId + '_in_' + stream.TargetIn;\r\n\r\n      const sEndp: PlumbType = this.instance.getEndpoint(fromUuid);\r\n      sEndp?.connections\r\n        ?.filter((connection: PlumbType) => connection.endpoints[1].getUuid() === toUuid)\r\n        ?.forEach((connection: PlumbType) => {\r\n          const label = !stream.Error ? stream.Count.toString() : '';\r\n          const cssClass = 'streamEntitiesCount ' + (!stream.Error ? '' : 'streamEntitiesError');\r\n          connection.setLabel({\r\n            label,\r\n            cssClass,\r\n            events: {\r\n              click: (overlay: PlumbType) => {\r\n                if (!this.pipelineModel.Pipeline.AllowEdit) { return; }\r\n                this.onDebugStream(stream);\r\n              },\r\n            },\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  private nextLinePaintStyle(uuid: string) {\r\n    return (\r\n      this.uuidColorMap[uuid] ||\r\n      (this.uuidColorMap[uuid] = Object.assign({}, this.linePaintDefault, { stroke: this.lineColors[this.lineCount++ % this.maxCols] }))\r\n    );\r\n  }\r\n\r\n  private getInstanceDefaults(container: HTMLElement) {\r\n    const defaults = {\r\n      Container: container,\r\n      Connector: ['Bezier', { curviness: 70 }],\r\n      PaintStyle: this.nextLinePaintStyle('dummy'),\r\n      HoverPaintStyle: {\r\n        stroke: '#216477',\r\n        strokeWidth: 4,\r\n        outlineStroke: 'white',\r\n        outlineWidth: 2,\r\n      },\r\n    };\r\n    return defaults;\r\n  }\r\n\r\n  /** Create sources, targets and endpoints */\r\n  private initDomDataSources() {\r\n    for (const pipelineDataSource of this.pipelineModel.DataSources) {\r\n      const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + dataSrcIdPrefix + pipelineDataSource.EntityGuid);\r\n      if (!domDataSource) { continue; }\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      if (!dataSource) { continue; }\r\n\r\n      if (this.pipelineModel.Pipeline.AllowEdit) {\r\n        // WARNING! Must happen before instance.makeSource()\r\n        this.instance.draggable(domDataSource, {\r\n          grid: [20, 20], stop: (event: PlumbType) => {\r\n            const element: HTMLElement = event.el;\r\n            const pipelineDataSourceGuid: string = element.id.replace(dataSrcIdPrefix, '');\r\n            const position: VisualDesignerData = {\r\n              Top: event.finalPos[1],\r\n              Left: event.finalPos[0],\r\n            };\r\n            setTimeout(() => { this.onDragend(pipelineDataSourceGuid, position); });\r\n          }\r\n        });\r\n      }\r\n\r\n      // Add Out-Endpoints from Definition\r\n      dataSource.Out?.forEach(name => {\r\n        this.addEndpoint(domDataSource, name, false, pipelineDataSource);\r\n      });\r\n\r\n      // Add In-Endpoints from Definition\r\n      dataSource.In?.forEach(name => {\r\n        this.addEndpoint(domDataSource, name, true, pipelineDataSource);\r\n      });\r\n\r\n      // Make DataSource a Target for new Endpoints (if .In is an Array)\r\n      if (dataSource.In) {\r\n        const targetEndpointUnlimited = this.buildTargetEndpoint(pipelineDataSource.EntityGuid);\r\n        targetEndpointUnlimited.maxConnections = -1;\r\n        this.instance.makeTarget(domDataSource, targetEndpointUnlimited);\r\n      }\r\n\r\n      if (dataSource.DynamicOut) {\r\n        this.instance.makeSource(domDataSource, this.buildSourceEndpoint(pipelineDataSource.EntityGuid), { filter: '.add-endpoint' });\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Create wires */\r\n  private initWirings() {\r\n    this.pipelineModel.Pipeline.StreamWiring?.forEach(wire => {\r\n      // read connections from Pipeline\r\n      const sourceElementId = dataSrcIdPrefix + wire.From;\r\n      const fromUuid = sourceElementId + '_out_' + wire.Out;\r\n      const targetElementId = dataSrcIdPrefix + wire.To;\r\n      const toUuid = targetElementId + '_in_' + wire.In;\r\n\r\n      // Ensure In-Endpoint exist\r\n      if (!this.instance.getEndpoint(fromUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + sourceElementId);\r\n        if (!domDataSource) { return; }\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const pipelineDataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n        this.addEndpoint(domDataSource, wire.Out, false, pipelineDataSource);\r\n      }\r\n\r\n      // Ensure Out-Endpoint exist\r\n      if (!this.instance.getEndpoint(toUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + targetElementId);\r\n        if (!domDataSource) { return; }\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const pipelineDataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n        this.addEndpoint(domDataSource, wire.In, true, pipelineDataSource);\r\n      }\r\n\r\n      try {\r\n        this.instance.connect({\r\n          uuids: [fromUuid, toUuid],\r\n          paintStyle: this.nextLinePaintStyle(fromUuid),\r\n        });\r\n      } catch (e) {\r\n        console.error({ message: 'Connection failed', from: fromUuid, to: toUuid });\r\n      }\r\n    });\r\n  }\r\n\r\n  private addEndpoint(domDataSource: HTMLElement, endpointName: string, isIn: boolean, pipelineDataSource: PipelineDataSource) {\r\n    const dataSource = this.dataSources.find(d => d.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    const isDynamic = isIn\r\n      ? !dataSource.In?.some(name => this.getEndpointInfo(name, false))\r\n      : !dataSource.Out?.some(name => this.getEndpointInfo(name, false));\r\n    const endpointInfo = this.getEndpointInfo(endpointName, isDynamic);\r\n\r\n    let style: string;\r\n    if (isDynamic) {\r\n      style = 'dynamic';\r\n    } else if (!endpointInfo.required) {\r\n      style = '';\r\n    } else {\r\n      const wireExists = this.pipelineModel.Pipeline.StreamWiring?.some(wire => {\r\n        const targetElementId = dataSrcIdPrefix + wire.To;\r\n        const targetEndpointName = wire.In;\r\n\r\n        return targetElementId === domDataSource.id && targetEndpointName === endpointInfo.name;\r\n      });\r\n      style = wireExists ? '' : 'required';\r\n    }\r\n\r\n    const uuid = domDataSource.id + (isIn ? '_in_' : '_out_') + endpointInfo.name;\r\n    const model = isIn\r\n      ? this.buildTargetEndpoint(pipelineDataSource.EntityGuid, style)\r\n      : this.buildSourceEndpoint(pipelineDataSource.EntityGuid, style);\r\n    // Endpoints on Out-DataSource must be always enabled\r\n    const params = {\r\n      uuid,\r\n      enabled: this.pipelineModel.Pipeline.AllowEdit\r\n        || pipelineDataSource.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    };\r\n\r\n    const endpoint: PlumbType = this.instance.addEndpoint(domDataSource, model, params);\r\n    endpoint.getOverlay('endpointLabel').setLabel(endpointInfo.name);\r\n  }\r\n\r\n  private buildSourceEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const isSource = true;\r\n    const sourceEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'sourceEndpoint ' + style ?? '',\r\n      maxConnections: -1,\r\n      isSource,\r\n      anchor: ['Continuous', { faces: ['top'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => {\r\n          this.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid);\r\n        },\r\n      },\r\n    };\r\n    return sourceEndpoint;\r\n  }\r\n\r\n  private buildTargetEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const isSource = false;\r\n    const targetEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'targetEndpoint ' + style ?? '',\r\n      maxConnections: 1,\r\n      isTarget: !isSource,\r\n      anchor: ['Continuous', { faces: ['bottom'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      dropOptions: { hoverClass: 'hover', activeClass: 'active' },\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => {\r\n          this.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid);\r\n        },\r\n      },\r\n    };\r\n    return targetEndpoint;\r\n  }\r\n\r\n  private getEndpointOverlays(isSource: boolean) {\r\n    return [\r\n      [\r\n        'Label', {\r\n          id: 'endpointLabel',\r\n          location: [0.5, isSource ? 0 : 1],\r\n          label: 'Default',\r\n          cssClass: isSource ? 'endpointSourceLabel' : 'endpointTargetLabel',\r\n        },\r\n      ],\r\n    ];\r\n  }\r\n\r\n  private onChangeLabel(endpointOrOverlay: PlumbType, isSource: boolean, pipelineDataSourceGuid: string) {\r\n    if (!this.pipelineModel.Pipeline.AllowEdit) { return; }\r\n\r\n    const overlay: PlumbType = endpointOrOverlay.getOverlay ? endpointOrOverlay.getOverlay('endpointLabel') : endpointOrOverlay;\r\n    const data: RenameStreamDialogData = {\r\n      pipelineDataSourceGuid,\r\n      isSource,\r\n      label: overlay.label,\r\n    };\r\n    this.dialogRef = this.dialog.open(RenameStreamComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    this.dialogRef.afterClosed().subscribe(newLabel => {\r\n      if (!newLabel) { return; }\r\n      overlay.setLabel(newLabel);\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private bindEvents() {\r\n    this.instance.bind('connectionDetached', (info: PlumbType) => {\r\n      if (this.bulkDelete) { return; }\r\n      const domDataSource: HTMLElement = info.target;\r\n      const pipelineDataSource = this.pipelineModel.DataSources.find(\r\n        pipelineDS => pipelineDS.EntityGuid === domDataSource.id.replace(dataSrcIdPrefix, '')\r\n      );\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      const label: string = info.targetEndpoint.getOverlay('endpointLabel').label;\r\n      const isDynamic = !dataSource.In.some(name => this.getEndpointInfo(name, false).name === label);\r\n      if (isDynamic) {\r\n        this.instance.deleteEndpoint(info.targetEndpoint);\r\n        setTimeout(() => { this.onConnectionsChanged(); });\r\n      } else {\r\n        setTimeout(() => { this.onConnectionsChanged(); });\r\n      }\r\n    });\r\n\r\n    this.instance.bind('connection', (info: PlumbType) => {\r\n      if (info.sourceId === info.targetId) {\r\n        setTimeout(() => {\r\n          this.instance.deleteConnection(info.connection, { fireEvent: false });\r\n          setTimeout(() => { this.onConnectionsChanged(); });\r\n        });\r\n        return;\r\n      }\r\n      const endpointLabel: PlumbType = info.targetEndpoint.getOverlay('endpointLabel');\r\n      const labelPrompt: string = endpointLabel.getLabel();\r\n      const endpoints: PlumbType[] = this.instance.getEndpoints(info.target.id);\r\n      const targetEndpointHasSameLabel = endpoints.some(endpoint => {\r\n        const label: string = endpoint.getOverlay('endpointLabel').getLabel();\r\n        return label === labelPrompt &&\r\n          info.targetEndpoint.id !== endpoint.id &&\r\n          (endpoint.canvas as HTMLCanvasElement).classList.contains('targetEndpoint');\r\n      });\r\n      if (targetEndpointHasSameLabel) {\r\n        endpointLabel.setLabel(`PleaseRename${Math.floor(Math.random() * 99999)}`);\r\n      }\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n  }\r\n\r\n  private getEndpointInfo(endpointName: string, isDynamic: boolean): EndpointInfo {\r\n    let name: string;\r\n    let required: boolean;\r\n\r\n    if (isDynamic) {\r\n      name = endpointName;\r\n      required = false;\r\n    } else {\r\n      const trimmed = endpointName.trim();\r\n      required = trimmed.endsWith('*');\r\n      name = !required ? trimmed : trimmed.substring(0, trimmed.length - 1);\r\n    }\r\n\r\n    const endpointInfo: EndpointInfo = {\r\n      name,\r\n      required,\r\n    };\r\n    return endpointInfo;\r\n  }\r\n}\r\n","@if ((viewModel$ | async); as vm) {\r\n<div #domRoot id=\"pipeline-root\">\r\n  <!-- do not use trackBy, jsPlumb drag stops working properly after delete -->\r\n  @if (!hardReset) {\r\n  @for (dataSource of vm.pipelineDataSources; track dataSource) {\r\n  <div #domDataSource [id]=\"dataSrcIdPrefix + dataSource.EntityGuid\" class=\"dataSource\" [ngStyle]=\"{\r\n          'top': dataSource.VisualDesignerData.Top + 'px',\r\n          'left': dataSource.VisualDesignerData.Left + 'px',\r\n          'min-width': dataSource.VisualDesignerData.Width ? dataSource.VisualDesignerData.Width + 'px' : null\r\n          }\" [ngClass]=\"{\r\n          'show-details': vm.showDataSourceDetails && vm.dataSourceConfigs[dataSource.EntityId]?.length\r\n          }\">\r\n    <div class=\"actions left\">\r\n      <mat-icon class=\"type-info\" [title]=\"vm.typeInfos[dataSource.EntityGuid].UiHint\">\r\n        {{ vm.typeInfos[dataSource.EntityGuid].Icon }}\r\n      </mat-icon>\r\n      @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].EnableConfig) {\r\n      <mat-icon class=\"configure\" title=\"Configure data source\" appMousedownStopPropagation\r\n        (click)=\"configureDataSource(dataSource)\">\r\n        settings\r\n      </mat-icon>\r\n      }\r\n      @if (vm.typeInfos[dataSource.EntityGuid].HelpLink) {\r\n      <mat-icon class=\"help\" title=\"Help for this data source\" appMousedownStopPropagation\r\n        (click)=\"openHelp(vm.typeInfos[dataSource.EntityGuid].HelpLink)\">\r\n        help_outline\r\n      </mat-icon>\r\n      }\r\n    </div>\r\n    <div class=\"actions right\">\r\n      @if (vm.allowEdit && !isOutDataSource(dataSource)) {\r\n      <mat-icon class=\"delete\" title=\"Delete\" appMousedownStopPropagation (click)=\"remove(dataSource)\">\r\n        delete\r\n      </mat-icon>\r\n      }\r\n    </div>\r\n    <div class=\"name\" title=\"Click to edit name\" appMousedownStopPropagation\r\n      (click)=\"vm.allowEdit && editName(dataSource)\">\r\n      <span>{{ dataSource.Name || '(no name)' }}</span>\r\n      <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n    </div>\r\n    <br>\r\n    <div class=\"description\" title=\"Click to edit description\" appMousedownStopPropagation\r\n      (click)=\"vm.allowEdit && editDescription(dataSource)\">\r\n      <span>{{ dataSource.Description }}</span>\r\n      <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n    </div>\r\n    <br>\r\n    @if (vm.showDataSourceDetails && vm.dataSourceConfigs[dataSource.EntityId]?.length) {\r\n    <hr style=\"margin: 0\">\r\n    <table class=\"configs\">\r\n      @for (config of vm.dataSourceConfigs[dataSource.EntityId]; track config) {\r\n      <tr class=\"config\">\r\n        <td class=\"config-name\" [title]=\"config.name\">{{ config.name }}</td>\r\n        <td class=\"config-value\" [title]=\"config.value\">{{ config.value }}</td>\r\n      </tr>\r\n      }\r\n    </table>\r\n    }\r\n    <div class=\"typename\" [title]=\"dataSource.PartAssemblyAndType\">\r\n      Type: {{ getTypeName(dataSource.PartAssemblyAndType) }}\r\n    </div>\r\n    @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].DynamicOut) {\r\n    <div class=\"add-endpoint sourceEndpoint dynamic\" title=\"Drag a new Out-Connection\">\r\n    </div>\r\n    }\r\n    @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].DynamicIn) {\r\n    <div class=\"many-in targetEndpoint dynamic\" title=\"This data source supports multiple In-Connections\">\r\n    </div>\r\n    }\r\n  </div>\r\n  }\r\n  }\r\n</div>\r\n}","// tslint:disable-next-line:max-line-length\r\nimport { AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { BehaviorSubject, combineLatest, distinctUntilChanged, map, Observable, Subscription } from 'rxjs';\r\nimport { GeneralHelpers } from '../../edit/shared/helpers';\r\nimport { BaseSubsinkComponent } from '../../shared/components/base-subsink-component/base-subsink.component';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { loadScripts } from '../../shared/helpers/load-scripts.helper';\r\nimport { PipelineDataSource, PipelineResultStream, VisualDesignerData } from '../models';\r\nimport { QueryDefinitionService } from '../services/query-definition.service';\r\nimport { VisualQueryService } from '../services/visual-query.service';\r\nimport { calculateTypeInfos } from './plumb-editor.helpers';\r\nimport { PlumbEditorViewModel } from './plumb-editor.models';\r\nimport { dataSrcIdPrefix, Plumber } from './plumber.helper';\r\n\r\nconst jsPlumbUrl = 'https://cdnjs.cloudflare.com/ajax/libs/jsPlumb/2.14.5/js/jsplumb.min.js';\r\n\r\n@Component({\r\n  selector: 'app-plumb-editor',\r\n  templateUrl: './plumb-editor.component.html',\r\n  styles: [':host { display: block; width: 100%; height: 100%; }'],\r\n  styleUrls: ['./plumb-editor.component.scss'],\r\n})\r\nexport class PlumbEditorComponent extends BaseSubsinkComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('domRoot') private domRootRef: ElementRef<HTMLDivElement>;\r\n  @ViewChildren('domDataSource') private domDataSourcesRef: QueryList<ElementRef<HTMLDivElement>>;\r\n\r\n  dataSrcIdPrefix = dataSrcIdPrefix;\r\n  hardReset = false;\r\n\r\n  private plumber: Plumber;\r\n  private scriptLoaded$ = new BehaviorSubject(false);\r\n\r\n  viewModel$: Observable<PlumbEditorViewModel>;\r\n\r\n  constructor(\r\n    private visualQueryService: VisualQueryService,\r\n    private queryDefinitionService: QueryDefinitionService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    loadScripts([{ test: 'jsPlumb', src: jsPlumbUrl }], () => {\r\n      this.scriptLoaded$.next(true);\r\n    });\r\n\r\n    this.subscription.add(\r\n      this.visualQueryService.putEntityCountOnConnections$.subscribe(result => {\r\n        this.plumber.putEntityCountOnConnections(result);\r\n      })\r\n    );\r\n\r\n    const pipelineDesignerData$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => GeneralHelpers.tryParse(pipelineModel?.Pipeline.VisualDesignerData) ?? {}),\r\n      distinctUntilChanged(GeneralHelpers.objectsEqual),\r\n    );\r\n\r\n    this.viewModel$ = combineLatest([\r\n      this.visualQueryService.pipelineModel$,\r\n      this.visualQueryService.dataSources$,\r\n      pipelineDesignerData$,\r\n      this.visualQueryService.dataSourceConfigs$,\r\n    ]).pipe(\r\n      map(([pipelineModel, dataSources, pipelineDesignerData, dataSourceConfigs]) => {\r\n        if (pipelineModel == null || dataSources == null) { return; }\r\n\r\n        // workaround for jsPlumb not working with dom elements which it initialized on previously.\r\n        // This wipes dom entirely and gives us new elements\r\n        this.hardReset = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        this.hardReset = false;\r\n        const viewModel: PlumbEditorViewModel = {\r\n          pipelineDataSources: pipelineModel.DataSources,\r\n          typeInfos: calculateTypeInfos(pipelineModel.DataSources, dataSources),\r\n          allowEdit: pipelineModel.Pipeline.AllowEdit,\r\n          showDataSourceDetails: pipelineDesignerData.ShowDataSourceDetails ?? false,\r\n          dataSourceConfigs,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // https://stackoverflow.com/questions/37087864/execute-a-function-when-ngfor-finished-in-angular-2/37088348#37088348\r\n    const domDataSourcesLoaded$ = this.domDataSourcesRef.changes.pipe(map(() => true));\r\n\r\n    this.subscription.add(\r\n      combineLatest([this.scriptLoaded$, domDataSourcesLoaded$]).subscribe(([scriptLoaded, domDataSourcesLoaded]) => {\r\n        if (!scriptLoaded || !domDataSourcesLoaded) { return; }\r\n\r\n        this.plumber?.destroy();\r\n        this.plumber = new Plumber(\r\n          this.domRootRef.nativeElement,\r\n          this.visualQueryService.pipelineModel$.value,\r\n          this.visualQueryService.dataSources$.value,\r\n          this.onConnectionsChanged.bind(this),\r\n          this.onDragend.bind(this),\r\n          this.onDebugStream.bind(this),\r\n          this.dialog,\r\n          this.viewContainerRef,\r\n          this.changeDetectorRef,\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.plumber?.destroy();\r\n    this.scriptLoaded$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  onConnectionsChanged() {\r\n    const connections = this.plumber.getAllConnections();\r\n    const streamsOut = this.plumber.getStreamsOut();\r\n    this.visualQueryService.changeConnections(connections, streamsOut);\r\n  }\r\n\r\n  onDragend(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    this.visualQueryService.changeDataSourcePosition(pipelineDataSourceGuid, position);\r\n  }\r\n\r\n  onDebugStream(stream: PipelineResultStream) {\r\n    this.visualQueryService.debugStream(stream);\r\n  }\r\n\r\n  configureDataSource(dataSource: PipelineDataSource) {\r\n    // ensure dataSource entity is saved\r\n    if (dataSource.EntityGuid.includes('unsaved')) {\r\n      this.visualQueryService.saveAndRun(true, false);\r\n    } else {\r\n      this.visualQueryService.editDataSource(dataSource);\r\n    }\r\n  }\r\n\r\n  getTypeName(partAssemblyAndType: string) {\r\n    const dataSource = this.visualQueryService.dataSources$.value.find(ds => ds.PartAssemblyAndType === partAssemblyAndType);\r\n    return this.queryDefinitionService.typeNameFilter(dataSource?.TypeNameForUi || partAssemblyAndType, 'className');\r\n  }\r\n\r\n  isOutDataSource(pipelineDataSource: PipelineDataSource) {\r\n    return pipelineDataSource.PartAssemblyAndType === eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType;\r\n  }\r\n\r\n  remove(pipelineDataSource: PipelineDataSource) {\r\n    if (!confirm(`Delete ${pipelineDataSource.Name} data source?`)) { return; }\r\n\r\n    this.plumber.removeEndpointsOnDataSource(pipelineDataSource.EntityGuid);\r\n    const connections = this.plumber.getAllConnections();\r\n    const streamsOut = this.plumber.getStreamsOut();\r\n    this.visualQueryService.removeDataSource(pipelineDataSource.EntityGuid, connections, streamsOut);\r\n  }\r\n\r\n  openHelp(url: string) {\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  editName(dataSource: PipelineDataSource) {\r\n    const newName = prompt('Rename data source', dataSource.Name)?.trim();\r\n    if (newName == null || newName === '') { return; }\r\n\r\n    this.visualQueryService.renameDataSource(dataSource.EntityGuid, newName);\r\n  }\r\n\r\n  editDescription(dataSource: PipelineDataSource) {\r\n    const newDescription = prompt('Edit description', dataSource.Description)?.trim();\r\n    if (newDescription == null) { return; }\r\n\r\n    this.visualQueryService.changeDataSourceDescription(dataSource.EntityGuid, newDescription);\r\n  }\r\n\r\n}\r\n","@if ((pipelineModel$ | async); as pipelineModel) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"wrapper\">\r\n      <div class=\"actions\">\r\n        <button mat-raised-button class=\"action\" color=\"accent\" (click)=\"saveAndRunQuery(true, true)\">\r\n          Save and run\r\n        </button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(false, true)\">\r\n          Run\r\n        </button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(true, false)\">\r\n          Save\r\n        </button>\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">\r\n          <div>Query Parameters</div>\r\n          <div>\r\n            <button mat-icon-button tippy=\"Edit parameters\" (click)=\"editPipeline()\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button mat-icon-button tippy=\"Query Params Docs\" (click)=\"openParamsHelp()\">\r\n              <mat-icon>info</mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        @if (pipelineModel.Pipeline.Params?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of pipelineModel.Pipeline.Params?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">Test Parameters</div>\r\n        @if (pipelineModel.Pipeline.TestParameters?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of pipelineModel.Pipeline.TestParameters?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      @if (visualDesignerData$ | async; as visualDesignerData) {\r\n        <div class=\"parameters\">\r\n          <span class=\"eav-slide-toggle-label\">Show DataSource Params</span>\r\n          <mat-slide-toggle color=\"primary\" [checked]=\"visualDesignerData.ShowDataSourceDetails\"\r\n            (change)=\"showDataSourceDetails($event)\"/>\r\n          </div>\r\n        }\r\n      @if ((warnings$ | async); as warnings) {\r\n        @if (warnings.length) {\r\n          <div class=\"warnings\">\r\n            <div class=\"title\">\r\n              <span>Warnings</span>\r\n              <mat-icon style=\"color: red\">warning</mat-icon>\r\n            </div>\r\n            <ol class=\"values\">\r\n              @for (warning of warnings; track warning) {\r\n                <li [innerHTML]=\"warning\">\r\n                </li>\r\n              }\r\n            </ol>\r\n          </div>\r\n        }\r\n      }\r\n      @if (pipelineModel.Pipeline.Description) {\r\n        <div class=\"description\">\r\n          <div class=\"title\">Query Description</div>\r\n          <div>{{ pipelineModel.Pipeline.Description }}</div>\r\n        </div>\r\n      }\r\n      <div class=\"footer-actions\">\r\n        <button mat-raised-button class=\"action\" (click)=\"openRestApi()\">\r\n          <span>Use in JSON / REST API</span>\r\n          <mat-icon>code_curly</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { map, Observable } from 'rxjs';\r\nimport { GoToDevRest } from '../../dev-rest';\r\nimport { GeneralHelpers } from '../../edit/shared/helpers';\r\nimport { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\nimport { VisualQueryService } from '../services/visual-query.service';\r\nimport { calculateWarnings } from './run-explorer.helpers';\r\n\r\n@Component({\r\n  selector: 'app-run-explorer',\r\n  templateUrl: './run-explorer.component.html',\r\n  styleUrls: ['./run-explorer.component.scss'],\r\n})\r\nexport class RunExplorerComponent implements OnInit {\r\n  pipelineModel$: Observable<PipelineModel>;\r\n  warnings$: Observable<string[]>;\r\n  visualDesignerData$: Observable<Record<string, any>>;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private visualQueryService: VisualQueryService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.pipelineModel$ = this.visualQueryService.pipelineModel$.asObservable();\r\n    this.warnings$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => calculateWarnings(pipelineModel, this.context)),\r\n    );\r\n    this.visualDesignerData$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => GeneralHelpers.tryParse(pipelineModel.Pipeline.VisualDesignerData) ?? {}),\r\n    );\r\n  }\r\n\r\n  editPipeline() {\r\n    this.visualQueryService.editPipelineEntity();\r\n  }\r\n\r\n  openParamsHelp() {\r\n    window.open('https://go.2sxc.org/QueryParams', '_blank');\r\n  }\r\n\r\n  saveAndRunQuery(save: boolean, run: boolean) {\r\n    this.visualQueryService.saveAndRun(save, run);\r\n  }\r\n\r\n  showDataSourceDetails(event: MatSlideToggleChange): void {\r\n    this.visualQueryService.showDataSourceDetails(event.checked);\r\n  }\r\n\r\n  openRestApi() {\r\n    const queryGuid = this.visualQueryService.pipelineModel$.value.Pipeline.EntityGuid;\r\n    this.router.navigate([GoToDevRest.getUrlQuery(queryGuid)], { relativeTo: this.route });\r\n  }\r\n}\r\n","import { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\n\r\n/**\r\n * Check if there are special warnings the developer should know.\r\n * Typically when the test ModuleId is different from the one we're currently working on\r\n */\r\nexport function calculateWarnings(pipelineModel: PipelineModel, context: Context) {\r\n  const warnings: string[] = [];\r\n\r\n  try {\r\n    const queryParams = pipelineModel.Pipeline.Params?.split(/\\r?\\n/) || [];\r\n    const testParams = pipelineModel.Pipeline.TestParameters?.split(/\\r?\\n/) || [];\r\n\r\n    queryParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) { return; }\r\n\r\n      // Check if the syntax on Query Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const paramSyntax = /^[a-zA-Z0-9]+=(.*)$/gmi;\r\n      const matched = paramSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Query Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>key=value</code> <br>\r\n          or resolve to a token like: <br>\r\n          <code>key=[source:key]</code>\r\n        `);\r\n      }\r\n    });\r\n\r\n    testParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) { return; }\r\n\r\n      // Check if the syntax on Test Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const testParamSyntax = /^\\[[a-zA-Z]+:[a-zA-Z0-9]+\\]=(.*)$/gmi;\r\n      const matched = testParamSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Test Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>[source:key]=value</code>\r\n        `);\r\n      }\r\n\r\n      // Check if we should show the warning about the test ModuleId.\r\n      // This is because in the old days, the ModuleId wasn't auto-filled, so people had to add it as a test value.\r\n      // Now it's not necessary any more\r\n      const midRegex = /^\\[module:id\\]=([0-9]*)$/gmi;\r\n      const midMatch = midRegex.exec(param);\r\n      if (midMatch) {\r\n        const testMid = midMatch[1];\r\n        const urlMid = context.moduleId?.toString();\r\n        if (testMid !== urlMid) {\r\n          warnings.push(`\r\n            Your test ModuleId (${testMid}) is different from the current ModuleId (${urlMid}).<br>\r\n            Note that 2sxc automatically provides the ModuleId - so you usually do not need to set it\r\n          `);\r\n        }\r\n      }\r\n\r\n      const oldMidRegex = /^\\[module:moduleid\\]=([0-9]*)$/gmi;\r\n      const oldMidMatch = oldMidRegex.exec(param);\r\n      if (oldMidMatch) {\r\n        warnings.push(`\r\n          You are using deprecated [Module:ModuleId] test parameter.<br>\r\n          Please use [Module:Id]\r\n        `);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Something went wrong in calculateWarnings for params', error);\r\n  }\r\n\r\n  return warnings;\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"eav-show-advanced\">\r\n      <span class=\"eav-slide-toggle-label\">Show Advanced</span>\r\n      <mat-slide-toggle color=\"primary\" (change)=\"toggleDifficulty($event)\" />\r\n    </div>\r\n    @for (group of vm.sorted | keyvalue; track trackGroups($index, group)) {\r\n      <div class=\"collapsible\" [tippy]=\"guiTypes[group.key].UiHint || group.key\" tippyShowDelay=\"750\"\r\n        (click)=\"toggleItem(group.key)\">\r\n        <mat-icon>{{ guiTypes[group.key].Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n        <span>{{ guiTypes[group.key].Label ?? guiTypes[group.key].Name ?? group.key }}</span>\r\n      </div>\r\n      @if (toggledItems.includes(group.key)) {\r\n        <div class=\"list\">\r\n          @for (dataSource of group.value; track trackDataSources($index, dataSource)) {\r\n            <div class=\"list-item\"\r\n              [tippy]=\"dataSource.UiHint || dataSource.Name\" tippyShowDelay=\"750\" (click)=\"addDataSource(dataSource)\">\r\n              <mat-icon>{{ dataSource.Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n              <span>{{ dataSource.Name }}</span>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n  </div>\r\n}\r\n","import { KeyValue } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { GeneralHelpers } from '../../edit/shared/helpers';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\nimport { guiTypes } from '../plumb-editor/plumb-editor.helpers';\r\nimport { VisualQueryService } from '../services/visual-query.service';\r\nimport { filterAndSortDataSources } from './add-explorer.helpers';\r\n\r\n@Component({\r\n  selector: 'app-add-explorer',\r\n  templateUrl: './add-explorer.component.html',\r\n  styleUrls: ['./add-explorer.component.scss'],\r\n})\r\nexport class AddExplorerComponent implements OnInit, OnDestroy {\r\n  toggledItems: string[] = [];\r\n  guiTypes = guiTypes;\r\n\r\n  private difficulties = eavConstants.pipelineDesigner.dataSourceDifficulties;\r\n  private difficulty$ = new BehaviorSubject(this.difficulties.default);\r\n\r\n  viewModel$: Observable<AddExplorerViewModel>;\r\n\r\n  constructor(private visualQueryService: VisualQueryService) { }\r\n\r\n  ngOnInit() {\r\n    this.viewModel$ = combineLatest([\r\n      combineLatest([this.visualQueryService.dataSources$, this.difficulty$]).pipe(\r\n        map(([dataSources, difficulty]) => filterAndSortDataSources(dataSources, difficulty)),\r\n      )\r\n    ]).pipe(map(([sorted]) => ({ sorted })));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.difficulty$.complete();\r\n  }\r\n\r\n  toggleDifficulty(event: MatSlideToggleChange) {\r\n    const difficulty = event.checked ? this.difficulties.advanced : this.difficulties.default;\r\n    this.difficulty$.next(difficulty);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    this.visualQueryService.addDataSource(dataSource);\r\n  }\r\n\r\n  toggleItem(item: string) {\r\n    GeneralHelpers.toggleInArray(item, this.toggledItems);\r\n  }\r\n\r\n  trackGroups(index: number, type: KeyValue<string, DataSource[]>) {\r\n    return type.key;\r\n  }\r\n\r\n  trackDataSources(index: number, dataSource: DataSource) {\r\n    return dataSource.PartAssemblyAndType;\r\n  }\r\n}\r\n\r\ninterface AddExplorerViewModel {\r\n  sorted: SortedDataSources;\r\n}\r\n","import cloneDeep from 'lodash-es/cloneDeep';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\n\r\nexport function filterAndSortDataSources(dataSources: DataSource[], maxDifficulty: number) {\r\n  if (!dataSources) { return; }\r\n\r\n  const cloned = cloneDeep(dataSources);\r\n\r\n  const filtered = cloned.filter(dataSource =>\r\n    dataSource.Difficulty <= maxDifficulty\r\n    && dataSource.PartAssemblyAndType !== eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType\r\n  );\r\n\r\n  filtered.sort((a, b) => a.Name.toLocaleLowerCase().localeCompare(b.Name.toLocaleLowerCase()));\r\n\r\n  const sorted: SortedDataSources = {};\r\n  for (const dataSource of filtered) {\r\n    const type = dataSource.PrimaryType;\r\n    if (sorted[type]) {\r\n      sorted[type].push(dataSource);\r\n    } else {\r\n      sorted[type] = [dataSource];\r\n    }\r\n  }\r\n\r\n  return sorted;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { GoToDevRest } from '../dev-rest';\r\nimport { edit } from '../edit/edit.matcher';\r\nimport { VisualQueryComponent } from './visual-query.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: VisualQueryComponent, children: [\r\n      GoToDevRest.route,\r\n      {\r\n        matcher: edit,\r\n        loadChildren: () => import('../edit/edit.module').then(m => m.EditModule),\r\n        data: { history: false },\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class VisualQueryRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Context } from '../shared/services/context';\r\nimport { PlumbEditorComponent } from './plumb-editor/plumb-editor.component';\r\nimport { VisualQueryService } from './services/visual-query.service';\r\n\r\n@Component({\r\n  selector: 'app-visual-query',\r\n  templateUrl: './visual-query.component.html',\r\n  styleUrls: ['./visual-query.component.scss'],\r\n  providers: [VisualQueryService],\r\n})\r\nexport class VisualQueryComponent implements OnInit {\r\n  @ViewChild(PlumbEditorComponent) plumbEditor: PlumbEditorComponent;\r\n\r\n  explorer = {\r\n    run: 'run',\r\n    add: 'add'\r\n  };\r\n  activeExplorer = this.explorer.run;\r\n\r\n  constructor(private context: Context, private route: ActivatedRoute, private visualQueryService: VisualQueryService) {\r\n    this.context.init(this.route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.visualQueryService.init();\r\n  }\r\n\r\n  toggleExplorer(explorer: string) {\r\n    this.activeExplorer = (this.activeExplorer === explorer) ? null : explorer;\r\n  }\r\n\r\n  openHelp() {\r\n    window.open('https://go.2sxc.org/visual-query', '_blank');\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n<div class=\"editor-root\">\r\n  <div class=\"editor-side-toolbar\">\r\n    <div class=\"button\" tippy=\"Run\" [ngClass]=\"{ 'active': activeExplorer === explorer.run }\"\r\n      (click)=\"toggleExplorer(explorer.run)\">\r\n      <mat-icon>play_arrow</mat-icon>\r\n    </div>\r\n    <div class=\"button\" tippy=\"Add\" [ngClass]=\"{ 'active': activeExplorer === explorer.add }\"\r\n      (click)=\"toggleExplorer(explorer.add)\">\r\n      <mat-icon>add</mat-icon>\r\n    </div>\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"button\" tippy=\"Help\" (click)=\"openHelp()\">\r\n      <mat-icon>help_outline</mat-icon>\r\n    </div>\r\n  </div>\r\n\r\n  <app-run-explorer [hidden]=\"activeExplorer !== explorer.run\"></app-run-explorer>\r\n\r\n  <app-add-explorer [hidden]=\"activeExplorer !== explorer.add\"></app-add-explorer>\r\n\r\n  <app-plumb-editor></app-plumb-editor>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MAT_SELECT_CONFIG, MatSelectModule } from '@angular/material/select';\r\nimport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { MetadataService } from '../permissions/services/metadata.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { AddExplorerComponent } from './add-explorer/add-explorer.component';\r\nimport { PlumbEditorComponent } from './plumb-editor/plumb-editor.component';\r\nimport { RenameStreamComponent } from './plumb-editor/rename-stream/rename-stream.component';\r\nimport { QueryResultComponent } from './query-result/query-result.component';\r\nimport { RunExplorerComponent } from './run-explorer/run-explorer.component';\r\nimport { QueryDefinitionService } from './services/query-definition.service';\r\nimport { StreamErrorResultComponent } from './stream-error-result/stream-error-result.component';\r\nimport { VisualQueryRoutingModule } from './visual-query-routing.module';\r\nimport { VisualQueryComponent } from './visual-query.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    VisualQueryComponent,\r\n    RunExplorerComponent,\r\n    AddExplorerComponent,\r\n    PlumbEditorComponent,\r\n    QueryResultComponent,\r\n    StreamErrorResultComponent,\r\n    RenameStreamComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedComponentsModule,\r\n    VisualQueryRoutingModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    QueryDefinitionService,\r\n    MetadataService,\r\n    ContentTypesService,\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { subscriptSizing: 'dynamic' } },\r\n    { provide: MAT_SELECT_CONFIG, useValue: { hideSingleSelectionIndicator: true } },\r\n    { provide: MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, useValue: { hideIcon: true } }\r\n  ],\r\n})\r\nexport class VisualQueryModule { }\r\n"],"x_google_ignoreList":[]}